/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricStatistic from './MetricStatistic';

/**
 * The CustomizedMetricSpecification model module.
 * @module model/CustomizedMetricSpecification
 * @version 2011-01-01
 */
class CustomizedMetricSpecification {
    /**
     * Constructs a new <code>CustomizedMetricSpecification</code>.
     * &lt;p&gt;Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.&lt;/p&gt; &lt;p&gt;To create your customized metric specification:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Add values for each required property from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\&quot;&gt;Publish custom metrics&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about the CloudWatch terminology below, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\&quot;&gt;Amazon CloudWatch concepts&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Each individual service provides information about the metrics, namespace, and dimensions they use. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html\&quot;&gt;Amazon Web Services services that publish CloudWatch metrics&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     * @alias module:model/CustomizedMetricSpecification
     */
    constructor() { 
        
        CustomizedMetricSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomizedMetricSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomizedMetricSpecification} obj Optional instance to populate.
     * @return {module:model/CustomizedMetricSpecification} The populated <code>CustomizedMetricSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomizedMetricSpecification();

            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], 'String');
            }
            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('Dimensions')) {
                obj['Dimensions'] = ApiClient.convertToType(data['Dimensions'], Array);
            }
            if (data.hasOwnProperty('Statistic')) {
                obj['Statistic'] = ApiClient.convertToType(data['Statistic'], MetricStatistic);
            }
            if (data.hasOwnProperty('Unit')) {
                obj['Unit'] = ApiClient.convertToType(data['Unit'], 'String');
            }
            if (data.hasOwnProperty('Metrics')) {
                obj['Metrics'] = ApiClient.convertToType(data['Metrics'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomizedMetricSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomizedMetricSpecification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          String.validateJSON(data['MetricName']);
        }
        // validate the optional field `Namespace`
        if (data['Namespace']) { // data not null
          String.validateJSON(data['Namespace']);
        }
        // validate the optional field `Dimensions`
        if (data['Dimensions']) { // data not null
          Array.validateJSON(data['Dimensions']);
        }
        // validate the optional field `Statistic`
        if (data['Statistic']) { // data not null
          MetricStatistic.validateJSON(data['Statistic']);
        }
        // validate the optional field `Unit`
        if (data['Unit']) { // data not null
          String.validateJSON(data['Unit']);
        }
        // validate the optional field `Metrics`
        if (data['Metrics']) { // data not null
          Array.validateJSON(data['Metrics']);
        }

        return true;
    }


}



/**
 * @member {String} MetricName
 */
CustomizedMetricSpecification.prototype['MetricName'] = undefined;

/**
 * @member {String} Namespace
 */
CustomizedMetricSpecification.prototype['Namespace'] = undefined;

/**
 * @member {Array} Dimensions
 */
CustomizedMetricSpecification.prototype['Dimensions'] = undefined;

/**
 * @member {module:model/MetricStatistic} Statistic
 */
CustomizedMetricSpecification.prototype['Statistic'] = undefined;

/**
 * @member {String} Unit
 */
CustomizedMetricSpecification.prototype['Unit'] = undefined;

/**
 * @member {Array} Metrics
 */
CustomizedMetricSpecification.prototype['Metrics'] = undefined;






export default CustomizedMetricSpecification;

