/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class LifecycleState.
* @enum {}
* @readonly
*/
export default class LifecycleState {
    
        /**
         * value: "Pending"
         * @const
         */
        "Pending" = "Pending";

    
        /**
         * value: "Pending:Wait"
         * @const
         */
        "Pending:Wait" = "Pending:Wait";

    
        /**
         * value: "Pending:Proceed"
         * @const
         */
        "Pending:Proceed" = "Pending:Proceed";

    
        /**
         * value: "Quarantined"
         * @const
         */
        "Quarantined" = "Quarantined";

    
        /**
         * value: "InService"
         * @const
         */
        "InService" = "InService";

    
        /**
         * value: "Terminating"
         * @const
         */
        "Terminating" = "Terminating";

    
        /**
         * value: "Terminating:Wait"
         * @const
         */
        "Terminating:Wait" = "Terminating:Wait";

    
        /**
         * value: "Terminating:Proceed"
         * @const
         */
        "Terminating:Proceed" = "Terminating:Proceed";

    
        /**
         * value: "Terminated"
         * @const
         */
        "Terminated" = "Terminated";

    
        /**
         * value: "Detaching"
         * @const
         */
        "Detaching" = "Detaching";

    
        /**
         * value: "Detached"
         * @const
         */
        "Detached" = "Detached";

    
        /**
         * value: "EnteringStandby"
         * @const
         */
        "EnteringStandby" = "EnteringStandby";

    
        /**
         * value: "Standby"
         * @const
         */
        "Standby" = "Standby";

    
        /**
         * value: "Warmed:Pending"
         * @const
         */
        "Warmed:Pending" = "Warmed:Pending";

    
        /**
         * value: "Warmed:Pending:Wait"
         * @const
         */
        "Warmed:Pending:Wait" = "Warmed:Pending:Wait";

    
        /**
         * value: "Warmed:Pending:Proceed"
         * @const
         */
        "Warmed:Pending:Proceed" = "Warmed:Pending:Proceed";

    
        /**
         * value: "Warmed:Terminating"
         * @const
         */
        "Warmed:Terminating" = "Warmed:Terminating";

    
        /**
         * value: "Warmed:Terminating:Wait"
         * @const
         */
        "Warmed:Terminating:Wait" = "Warmed:Terminating:Wait";

    
        /**
         * value: "Warmed:Terminating:Proceed"
         * @const
         */
        "Warmed:Terminating:Proceed" = "Warmed:Terminating:Proceed";

    
        /**
         * value: "Warmed:Terminated"
         * @const
         */
        "Warmed:Terminated" = "Warmed:Terminated";

    
        /**
         * value: "Warmed:Stopped"
         * @const
         */
        "Warmed:Stopped" = "Warmed:Stopped";

    
        /**
         * value: "Warmed:Running"
         * @const
         */
        "Warmed:Running" = "Warmed:Running";

    
        /**
         * value: "Warmed:Hibernated"
         * @const
         */
        "Warmed:Hibernated" = "Warmed:Hibernated";

    

    /**
    * Returns a <code>LifecycleState</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/LifecycleState} The enum <code>LifecycleState</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

