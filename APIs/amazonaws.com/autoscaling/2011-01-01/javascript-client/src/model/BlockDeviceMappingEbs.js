/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ebs from './Ebs';

/**
 * The BlockDeviceMappingEbs model module.
 * @module model/BlockDeviceMappingEbs
 * @version 2011-01-01
 */
class BlockDeviceMappingEbs {
    /**
     * Constructs a new <code>BlockDeviceMappingEbs</code>.
     * @alias module:model/BlockDeviceMappingEbs
     * @implements module:model/Ebs
     */
    constructor() { 
        Ebs.initialize(this);
        BlockDeviceMappingEbs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BlockDeviceMappingEbs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlockDeviceMappingEbs} obj Optional instance to populate.
     * @return {module:model/BlockDeviceMappingEbs} The populated <code>BlockDeviceMappingEbs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlockDeviceMappingEbs();
            Ebs.constructFromObject(data, obj);

            if (data.hasOwnProperty('SnapshotId')) {
                obj['SnapshotId'] = ApiClient.convertToType(data['SnapshotId'], 'String');
            }
            if (data.hasOwnProperty('VolumeSize')) {
                obj['VolumeSize'] = ApiClient.convertToType(data['VolumeSize'], 'Number');
            }
            if (data.hasOwnProperty('VolumeType')) {
                obj['VolumeType'] = ApiClient.convertToType(data['VolumeType'], 'String');
            }
            if (data.hasOwnProperty('DeleteOnTermination')) {
                obj['DeleteOnTermination'] = ApiClient.convertToType(data['DeleteOnTermination'], 'Boolean');
            }
            if (data.hasOwnProperty('Iops')) {
                obj['Iops'] = ApiClient.convertToType(data['Iops'], 'Number');
            }
            if (data.hasOwnProperty('Encrypted')) {
                obj['Encrypted'] = ApiClient.convertToType(data['Encrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('Throughput')) {
                obj['Throughput'] = ApiClient.convertToType(data['Throughput'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlockDeviceMappingEbs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlockDeviceMappingEbs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `SnapshotId`
        if (data['SnapshotId']) { // data not null
          String.validateJSON(data['SnapshotId']);
        }
        // validate the optional field `VolumeSize`
        if (data['VolumeSize']) { // data not null
          Number.validateJSON(data['VolumeSize']);
        }
        // validate the optional field `VolumeType`
        if (data['VolumeType']) { // data not null
          String.validateJSON(data['VolumeType']);
        }
        // validate the optional field `DeleteOnTermination`
        if (data['DeleteOnTermination']) { // data not null
          Boolean.validateJSON(data['DeleteOnTermination']);
        }
        // validate the optional field `Iops`
        if (data['Iops']) { // data not null
          Number.validateJSON(data['Iops']);
        }
        // validate the optional field `Encrypted`
        if (data['Encrypted']) { // data not null
          Boolean.validateJSON(data['Encrypted']);
        }
        // validate the optional field `Throughput`
        if (data['Throughput']) { // data not null
          Number.validateJSON(data['Throughput']);
        }

        return true;
    }


}



/**
 * @member {String} SnapshotId
 */
BlockDeviceMappingEbs.prototype['SnapshotId'] = undefined;

/**
 * @member {Number} VolumeSize
 */
BlockDeviceMappingEbs.prototype['VolumeSize'] = undefined;

/**
 * @member {String} VolumeType
 */
BlockDeviceMappingEbs.prototype['VolumeType'] = undefined;

/**
 * @member {Boolean} DeleteOnTermination
 */
BlockDeviceMappingEbs.prototype['DeleteOnTermination'] = undefined;

/**
 * @member {Number} Iops
 */
BlockDeviceMappingEbs.prototype['Iops'] = undefined;

/**
 * @member {Boolean} Encrypted
 */
BlockDeviceMappingEbs.prototype['Encrypted'] = undefined;

/**
 * @member {Number} Throughput
 */
BlockDeviceMappingEbs.prototype['Throughput'] = undefined;


// Implement Ebs interface:
/**
 * @member {String} SnapshotId
 */
Ebs.prototype['SnapshotId'] = undefined;
/**
 * @member {Number} VolumeSize
 */
Ebs.prototype['VolumeSize'] = undefined;
/**
 * @member {String} VolumeType
 */
Ebs.prototype['VolumeType'] = undefined;
/**
 * @member {Boolean} DeleteOnTermination
 */
Ebs.prototype['DeleteOnTermination'] = undefined;
/**
 * @member {Number} Iops
 */
Ebs.prototype['Iops'] = undefined;
/**
 * @member {Boolean} Encrypted
 */
Ebs.prototype['Encrypted'] = undefined;
/**
 * @member {Number} Throughput
 */
Ebs.prototype['Throughput'] = undefined;




export default BlockDeviceMappingEbs;

