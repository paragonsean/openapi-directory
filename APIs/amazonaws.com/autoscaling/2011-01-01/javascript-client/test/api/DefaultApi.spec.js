/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AutoScaling);
  }
}(this, function(expect, AutoScaling) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AutoScaling.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETAttachInstances', function() {
      it('should call gETAttachInstances successfully', function(done) {
        //uncomment below and update the code to test gETAttachInstances
        //instance.gETAttachInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAttachLoadBalancerTargetGroups', function() {
      it('should call gETAttachLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test gETAttachLoadBalancerTargetGroups
        //instance.gETAttachLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAttachLoadBalancers', function() {
      it('should call gETAttachLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test gETAttachLoadBalancers
        //instance.gETAttachLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAttachTrafficSources', function() {
      it('should call gETAttachTrafficSources successfully', function(done) {
        //uncomment below and update the code to test gETAttachTrafficSources
        //instance.gETAttachTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETBatchDeleteScheduledAction', function() {
      it('should call gETBatchDeleteScheduledAction successfully', function(done) {
        //uncomment below and update the code to test gETBatchDeleteScheduledAction
        //instance.gETBatchDeleteScheduledAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETBatchPutScheduledUpdateGroupAction', function() {
      it('should call gETBatchPutScheduledUpdateGroupAction successfully', function(done) {
        //uncomment below and update the code to test gETBatchPutScheduledUpdateGroupAction
        //instance.gETBatchPutScheduledUpdateGroupAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCancelInstanceRefresh', function() {
      it('should call gETCancelInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test gETCancelInstanceRefresh
        //instance.gETCancelInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCompleteLifecycleAction', function() {
      it('should call gETCompleteLifecycleAction successfully', function(done) {
        //uncomment below and update the code to test gETCompleteLifecycleAction
        //instance.gETCompleteLifecycleAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateAutoScalingGroup', function() {
      it('should call gETCreateAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test gETCreateAutoScalingGroup
        //instance.gETCreateAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateLaunchConfiguration', function() {
      it('should call gETCreateLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETCreateLaunchConfiguration
        //instance.gETCreateLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateOrUpdateTags', function() {
      it('should call gETCreateOrUpdateTags successfully', function(done) {
        //uncomment below and update the code to test gETCreateOrUpdateTags
        //instance.gETCreateOrUpdateTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteAutoScalingGroup', function() {
      it('should call gETDeleteAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test gETDeleteAutoScalingGroup
        //instance.gETDeleteAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteLaunchConfiguration', function() {
      it('should call gETDeleteLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETDeleteLaunchConfiguration
        //instance.gETDeleteLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteLifecycleHook', function() {
      it('should call gETDeleteLifecycleHook successfully', function(done) {
        //uncomment below and update the code to test gETDeleteLifecycleHook
        //instance.gETDeleteLifecycleHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteNotificationConfiguration', function() {
      it('should call gETDeleteNotificationConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETDeleteNotificationConfiguration
        //instance.gETDeleteNotificationConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeletePolicy', function() {
      it('should call gETDeletePolicy successfully', function(done) {
        //uncomment below and update the code to test gETDeletePolicy
        //instance.gETDeletePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteScheduledAction', function() {
      it('should call gETDeleteScheduledAction successfully', function(done) {
        //uncomment below and update the code to test gETDeleteScheduledAction
        //instance.gETDeleteScheduledAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteTags', function() {
      it('should call gETDeleteTags successfully', function(done) {
        //uncomment below and update the code to test gETDeleteTags
        //instance.gETDeleteTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteWarmPool', function() {
      it('should call gETDeleteWarmPool successfully', function(done) {
        //uncomment below and update the code to test gETDeleteWarmPool
        //instance.gETDeleteWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAccountLimits', function() {
      it('should call gETDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAccountLimits
        //instance.gETDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAdjustmentTypes', function() {
      it('should call gETDescribeAdjustmentTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAdjustmentTypes
        //instance.gETDescribeAdjustmentTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAutoScalingGroups', function() {
      it('should call gETDescribeAutoScalingGroups successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAutoScalingGroups
        //instance.gETDescribeAutoScalingGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAutoScalingInstances', function() {
      it('should call gETDescribeAutoScalingInstances successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAutoScalingInstances
        //instance.gETDescribeAutoScalingInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAutoScalingNotificationTypes', function() {
      it('should call gETDescribeAutoScalingNotificationTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAutoScalingNotificationTypes
        //instance.gETDescribeAutoScalingNotificationTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeInstanceRefreshes', function() {
      it('should call gETDescribeInstanceRefreshes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeInstanceRefreshes
        //instance.gETDescribeInstanceRefreshes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLaunchConfigurations', function() {
      it('should call gETDescribeLaunchConfigurations successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLaunchConfigurations
        //instance.gETDescribeLaunchConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLifecycleHookTypes', function() {
      it('should call gETDescribeLifecycleHookTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLifecycleHookTypes
        //instance.gETDescribeLifecycleHookTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLifecycleHooks', function() {
      it('should call gETDescribeLifecycleHooks successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLifecycleHooks
        //instance.gETDescribeLifecycleHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancerTargetGroups', function() {
      it('should call gETDescribeLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancerTargetGroups
        //instance.gETDescribeLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancers', function() {
      it('should call gETDescribeLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancers
        //instance.gETDescribeLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeMetricCollectionTypes', function() {
      it('should call gETDescribeMetricCollectionTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeMetricCollectionTypes
        //instance.gETDescribeMetricCollectionTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeNotificationConfigurations', function() {
      it('should call gETDescribeNotificationConfigurations successfully', function(done) {
        //uncomment below and update the code to test gETDescribeNotificationConfigurations
        //instance.gETDescribeNotificationConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribePolicies', function() {
      it('should call gETDescribePolicies successfully', function(done) {
        //uncomment below and update the code to test gETDescribePolicies
        //instance.gETDescribePolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeScalingActivities', function() {
      it('should call gETDescribeScalingActivities successfully', function(done) {
        //uncomment below and update the code to test gETDescribeScalingActivities
        //instance.gETDescribeScalingActivities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeScalingProcessTypes', function() {
      it('should call gETDescribeScalingProcessTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeScalingProcessTypes
        //instance.gETDescribeScalingProcessTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeScheduledActions', function() {
      it('should call gETDescribeScheduledActions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeScheduledActions
        //instance.gETDescribeScheduledActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeTags', function() {
      it('should call gETDescribeTags successfully', function(done) {
        //uncomment below and update the code to test gETDescribeTags
        //instance.gETDescribeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeTerminationPolicyTypes', function() {
      it('should call gETDescribeTerminationPolicyTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeTerminationPolicyTypes
        //instance.gETDescribeTerminationPolicyTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeTrafficSources', function() {
      it('should call gETDescribeTrafficSources successfully', function(done) {
        //uncomment below and update the code to test gETDescribeTrafficSources
        //instance.gETDescribeTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeWarmPool', function() {
      it('should call gETDescribeWarmPool successfully', function(done) {
        //uncomment below and update the code to test gETDescribeWarmPool
        //instance.gETDescribeWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetachInstances', function() {
      it('should call gETDetachInstances successfully', function(done) {
        //uncomment below and update the code to test gETDetachInstances
        //instance.gETDetachInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetachLoadBalancerTargetGroups', function() {
      it('should call gETDetachLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test gETDetachLoadBalancerTargetGroups
        //instance.gETDetachLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetachLoadBalancers', function() {
      it('should call gETDetachLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test gETDetachLoadBalancers
        //instance.gETDetachLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetachTrafficSources', function() {
      it('should call gETDetachTrafficSources successfully', function(done) {
        //uncomment below and update the code to test gETDetachTrafficSources
        //instance.gETDetachTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDisableMetricsCollection', function() {
      it('should call gETDisableMetricsCollection successfully', function(done) {
        //uncomment below and update the code to test gETDisableMetricsCollection
        //instance.gETDisableMetricsCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETEnableMetricsCollection', function() {
      it('should call gETEnableMetricsCollection successfully', function(done) {
        //uncomment below and update the code to test gETEnableMetricsCollection
        //instance.gETEnableMetricsCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETEnterStandby', function() {
      it('should call gETEnterStandby successfully', function(done) {
        //uncomment below and update the code to test gETEnterStandby
        //instance.gETEnterStandby(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETExecutePolicy', function() {
      it('should call gETExecutePolicy successfully', function(done) {
        //uncomment below and update the code to test gETExecutePolicy
        //instance.gETExecutePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETExitStandby', function() {
      it('should call gETExitStandby successfully', function(done) {
        //uncomment below and update the code to test gETExitStandby
        //instance.gETExitStandby(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETGetPredictiveScalingForecast', function() {
      it('should call gETGetPredictiveScalingForecast successfully', function(done) {
        //uncomment below and update the code to test gETGetPredictiveScalingForecast
        //instance.gETGetPredictiveScalingForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPutLifecycleHook', function() {
      it('should call gETPutLifecycleHook successfully', function(done) {
        //uncomment below and update the code to test gETPutLifecycleHook
        //instance.gETPutLifecycleHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPutNotificationConfiguration', function() {
      it('should call gETPutNotificationConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETPutNotificationConfiguration
        //instance.gETPutNotificationConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPutScalingPolicy', function() {
      it('should call gETPutScalingPolicy successfully', function(done) {
        //uncomment below and update the code to test gETPutScalingPolicy
        //instance.gETPutScalingPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPutScheduledUpdateGroupAction', function() {
      it('should call gETPutScheduledUpdateGroupAction successfully', function(done) {
        //uncomment below and update the code to test gETPutScheduledUpdateGroupAction
        //instance.gETPutScheduledUpdateGroupAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPutWarmPool', function() {
      it('should call gETPutWarmPool successfully', function(done) {
        //uncomment below and update the code to test gETPutWarmPool
        //instance.gETPutWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRecordLifecycleActionHeartbeat', function() {
      it('should call gETRecordLifecycleActionHeartbeat successfully', function(done) {
        //uncomment below and update the code to test gETRecordLifecycleActionHeartbeat
        //instance.gETRecordLifecycleActionHeartbeat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETResumeProcesses', function() {
      it('should call gETResumeProcesses successfully', function(done) {
        //uncomment below and update the code to test gETResumeProcesses
        //instance.gETResumeProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRollbackInstanceRefresh', function() {
      it('should call gETRollbackInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test gETRollbackInstanceRefresh
        //instance.gETRollbackInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetDesiredCapacity', function() {
      it('should call gETSetDesiredCapacity successfully', function(done) {
        //uncomment below and update the code to test gETSetDesiredCapacity
        //instance.gETSetDesiredCapacity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetInstanceHealth', function() {
      it('should call gETSetInstanceHealth successfully', function(done) {
        //uncomment below and update the code to test gETSetInstanceHealth
        //instance.gETSetInstanceHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetInstanceProtection', function() {
      it('should call gETSetInstanceProtection successfully', function(done) {
        //uncomment below and update the code to test gETSetInstanceProtection
        //instance.gETSetInstanceProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETStartInstanceRefresh', function() {
      it('should call gETStartInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test gETStartInstanceRefresh
        //instance.gETStartInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSuspendProcesses', function() {
      it('should call gETSuspendProcesses successfully', function(done) {
        //uncomment below and update the code to test gETSuspendProcesses
        //instance.gETSuspendProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETTerminateInstanceInAutoScalingGroup', function() {
      it('should call gETTerminateInstanceInAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test gETTerminateInstanceInAutoScalingGroup
        //instance.gETTerminateInstanceInAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateAutoScalingGroup', function() {
      it('should call gETUpdateAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test gETUpdateAutoScalingGroup
        //instance.gETUpdateAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAttachInstances', function() {
      it('should call pOSTAttachInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTAttachInstances
        //instance.pOSTAttachInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAttachLoadBalancerTargetGroups', function() {
      it('should call pOSTAttachLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTAttachLoadBalancerTargetGroups
        //instance.pOSTAttachLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAttachLoadBalancers', function() {
      it('should call pOSTAttachLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test pOSTAttachLoadBalancers
        //instance.pOSTAttachLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAttachTrafficSources', function() {
      it('should call pOSTAttachTrafficSources successfully', function(done) {
        //uncomment below and update the code to test pOSTAttachTrafficSources
        //instance.pOSTAttachTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTBatchDeleteScheduledAction', function() {
      it('should call pOSTBatchDeleteScheduledAction successfully', function(done) {
        //uncomment below and update the code to test pOSTBatchDeleteScheduledAction
        //instance.pOSTBatchDeleteScheduledAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTBatchPutScheduledUpdateGroupAction', function() {
      it('should call pOSTBatchPutScheduledUpdateGroupAction successfully', function(done) {
        //uncomment below and update the code to test pOSTBatchPutScheduledUpdateGroupAction
        //instance.pOSTBatchPutScheduledUpdateGroupAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCancelInstanceRefresh', function() {
      it('should call pOSTCancelInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test pOSTCancelInstanceRefresh
        //instance.pOSTCancelInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCompleteLifecycleAction', function() {
      it('should call pOSTCompleteLifecycleAction successfully', function(done) {
        //uncomment below and update the code to test pOSTCompleteLifecycleAction
        //instance.pOSTCompleteLifecycleAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateAutoScalingGroup', function() {
      it('should call pOSTCreateAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateAutoScalingGroup
        //instance.pOSTCreateAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateLaunchConfiguration', function() {
      it('should call pOSTCreateLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateLaunchConfiguration
        //instance.pOSTCreateLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateOrUpdateTags', function() {
      it('should call pOSTCreateOrUpdateTags successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateOrUpdateTags
        //instance.pOSTCreateOrUpdateTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteAutoScalingGroup', function() {
      it('should call pOSTDeleteAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteAutoScalingGroup
        //instance.pOSTDeleteAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteLaunchConfiguration', function() {
      it('should call pOSTDeleteLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteLaunchConfiguration
        //instance.pOSTDeleteLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteLifecycleHook', function() {
      it('should call pOSTDeleteLifecycleHook successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteLifecycleHook
        //instance.pOSTDeleteLifecycleHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteNotificationConfiguration', function() {
      it('should call pOSTDeleteNotificationConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteNotificationConfiguration
        //instance.pOSTDeleteNotificationConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeletePolicy', function() {
      it('should call pOSTDeletePolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTDeletePolicy
        //instance.pOSTDeletePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteScheduledAction', function() {
      it('should call pOSTDeleteScheduledAction successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteScheduledAction
        //instance.pOSTDeleteScheduledAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteTags', function() {
      it('should call pOSTDeleteTags successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteTags
        //instance.pOSTDeleteTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteWarmPool', function() {
      it('should call pOSTDeleteWarmPool successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteWarmPool
        //instance.pOSTDeleteWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAccountLimits', function() {
      it('should call pOSTDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAccountLimits
        //instance.pOSTDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAdjustmentTypes', function() {
      it('should call pOSTDescribeAdjustmentTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAdjustmentTypes
        //instance.pOSTDescribeAdjustmentTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAutoScalingGroups', function() {
      it('should call pOSTDescribeAutoScalingGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAutoScalingGroups
        //instance.pOSTDescribeAutoScalingGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAutoScalingInstances', function() {
      it('should call pOSTDescribeAutoScalingInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAutoScalingInstances
        //instance.pOSTDescribeAutoScalingInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAutoScalingNotificationTypes', function() {
      it('should call pOSTDescribeAutoScalingNotificationTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAutoScalingNotificationTypes
        //instance.pOSTDescribeAutoScalingNotificationTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeInstanceRefreshes', function() {
      it('should call pOSTDescribeInstanceRefreshes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeInstanceRefreshes
        //instance.pOSTDescribeInstanceRefreshes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLaunchConfigurations', function() {
      it('should call pOSTDescribeLaunchConfigurations successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLaunchConfigurations
        //instance.pOSTDescribeLaunchConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLifecycleHookTypes', function() {
      it('should call pOSTDescribeLifecycleHookTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLifecycleHookTypes
        //instance.pOSTDescribeLifecycleHookTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLifecycleHooks', function() {
      it('should call pOSTDescribeLifecycleHooks successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLifecycleHooks
        //instance.pOSTDescribeLifecycleHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancerTargetGroups', function() {
      it('should call pOSTDescribeLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancerTargetGroups
        //instance.pOSTDescribeLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancers', function() {
      it('should call pOSTDescribeLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancers
        //instance.pOSTDescribeLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeMetricCollectionTypes', function() {
      it('should call pOSTDescribeMetricCollectionTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeMetricCollectionTypes
        //instance.pOSTDescribeMetricCollectionTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeNotificationConfigurations', function() {
      it('should call pOSTDescribeNotificationConfigurations successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeNotificationConfigurations
        //instance.pOSTDescribeNotificationConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribePolicies', function() {
      it('should call pOSTDescribePolicies successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribePolicies
        //instance.pOSTDescribePolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeScalingActivities', function() {
      it('should call pOSTDescribeScalingActivities successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeScalingActivities
        //instance.pOSTDescribeScalingActivities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeScalingProcessTypes', function() {
      it('should call pOSTDescribeScalingProcessTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeScalingProcessTypes
        //instance.pOSTDescribeScalingProcessTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeScheduledActions', function() {
      it('should call pOSTDescribeScheduledActions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeScheduledActions
        //instance.pOSTDescribeScheduledActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeTags', function() {
      it('should call pOSTDescribeTags successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeTags
        //instance.pOSTDescribeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeTerminationPolicyTypes', function() {
      it('should call pOSTDescribeTerminationPolicyTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeTerminationPolicyTypes
        //instance.pOSTDescribeTerminationPolicyTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeTrafficSources', function() {
      it('should call pOSTDescribeTrafficSources successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeTrafficSources
        //instance.pOSTDescribeTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeWarmPool', function() {
      it('should call pOSTDescribeWarmPool successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeWarmPool
        //instance.pOSTDescribeWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetachInstances', function() {
      it('should call pOSTDetachInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTDetachInstances
        //instance.pOSTDetachInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetachLoadBalancerTargetGroups', function() {
      it('should call pOSTDetachLoadBalancerTargetGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTDetachLoadBalancerTargetGroups
        //instance.pOSTDetachLoadBalancerTargetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetachLoadBalancers', function() {
      it('should call pOSTDetachLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test pOSTDetachLoadBalancers
        //instance.pOSTDetachLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetachTrafficSources', function() {
      it('should call pOSTDetachTrafficSources successfully', function(done) {
        //uncomment below and update the code to test pOSTDetachTrafficSources
        //instance.pOSTDetachTrafficSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDisableMetricsCollection', function() {
      it('should call pOSTDisableMetricsCollection successfully', function(done) {
        //uncomment below and update the code to test pOSTDisableMetricsCollection
        //instance.pOSTDisableMetricsCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTEnableMetricsCollection', function() {
      it('should call pOSTEnableMetricsCollection successfully', function(done) {
        //uncomment below and update the code to test pOSTEnableMetricsCollection
        //instance.pOSTEnableMetricsCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTEnterStandby', function() {
      it('should call pOSTEnterStandby successfully', function(done) {
        //uncomment below and update the code to test pOSTEnterStandby
        //instance.pOSTEnterStandby(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTExecutePolicy', function() {
      it('should call pOSTExecutePolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTExecutePolicy
        //instance.pOSTExecutePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTExitStandby', function() {
      it('should call pOSTExitStandby successfully', function(done) {
        //uncomment below and update the code to test pOSTExitStandby
        //instance.pOSTExitStandby(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTGetPredictiveScalingForecast', function() {
      it('should call pOSTGetPredictiveScalingForecast successfully', function(done) {
        //uncomment below and update the code to test pOSTGetPredictiveScalingForecast
        //instance.pOSTGetPredictiveScalingForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPutLifecycleHook', function() {
      it('should call pOSTPutLifecycleHook successfully', function(done) {
        //uncomment below and update the code to test pOSTPutLifecycleHook
        //instance.pOSTPutLifecycleHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPutNotificationConfiguration', function() {
      it('should call pOSTPutNotificationConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTPutNotificationConfiguration
        //instance.pOSTPutNotificationConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPutScalingPolicy', function() {
      it('should call pOSTPutScalingPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTPutScalingPolicy
        //instance.pOSTPutScalingPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPutScheduledUpdateGroupAction', function() {
      it('should call pOSTPutScheduledUpdateGroupAction successfully', function(done) {
        //uncomment below and update the code to test pOSTPutScheduledUpdateGroupAction
        //instance.pOSTPutScheduledUpdateGroupAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPutWarmPool', function() {
      it('should call pOSTPutWarmPool successfully', function(done) {
        //uncomment below and update the code to test pOSTPutWarmPool
        //instance.pOSTPutWarmPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRecordLifecycleActionHeartbeat', function() {
      it('should call pOSTRecordLifecycleActionHeartbeat successfully', function(done) {
        //uncomment below and update the code to test pOSTRecordLifecycleActionHeartbeat
        //instance.pOSTRecordLifecycleActionHeartbeat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTResumeProcesses', function() {
      it('should call pOSTResumeProcesses successfully', function(done) {
        //uncomment below and update the code to test pOSTResumeProcesses
        //instance.pOSTResumeProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRollbackInstanceRefresh', function() {
      it('should call pOSTRollbackInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test pOSTRollbackInstanceRefresh
        //instance.pOSTRollbackInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetDesiredCapacity', function() {
      it('should call pOSTSetDesiredCapacity successfully', function(done) {
        //uncomment below and update the code to test pOSTSetDesiredCapacity
        //instance.pOSTSetDesiredCapacity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetInstanceHealth', function() {
      it('should call pOSTSetInstanceHealth successfully', function(done) {
        //uncomment below and update the code to test pOSTSetInstanceHealth
        //instance.pOSTSetInstanceHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetInstanceProtection', function() {
      it('should call pOSTSetInstanceProtection successfully', function(done) {
        //uncomment below and update the code to test pOSTSetInstanceProtection
        //instance.pOSTSetInstanceProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTStartInstanceRefresh', function() {
      it('should call pOSTStartInstanceRefresh successfully', function(done) {
        //uncomment below and update the code to test pOSTStartInstanceRefresh
        //instance.pOSTStartInstanceRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSuspendProcesses', function() {
      it('should call pOSTSuspendProcesses successfully', function(done) {
        //uncomment below and update the code to test pOSTSuspendProcesses
        //instance.pOSTSuspendProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTTerminateInstanceInAutoScalingGroup', function() {
      it('should call pOSTTerminateInstanceInAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTTerminateInstanceInAutoScalingGroup
        //instance.pOSTTerminateInstanceInAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateAutoScalingGroup', function() {
      it('should call pOSTUpdateAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateAutoScalingGroup
        //instance.pOSTUpdateAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
