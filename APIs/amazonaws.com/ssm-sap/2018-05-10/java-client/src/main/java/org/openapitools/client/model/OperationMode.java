/*
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets OperationMode
 */
@JsonAdapter(OperationMode.Adapter.class)
public enum OperationMode {
  
  PRIMARY("PRIMARY"),
  
  LOGREPLAY("LOGREPLAY"),
  
  DELTA_DATASHIPPING("DELTA_DATASHIPPING"),
  
  LOGREPLAY_READACCESS("LOGREPLAY_READACCESS"),
  
  NONE("NONE");

  private String value;

  OperationMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OperationMode fromValue(String value) {
    for (OperationMode b : OperationMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OperationMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final OperationMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OperationMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OperationMode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OperationMode.fromValue(value);
  }
}

