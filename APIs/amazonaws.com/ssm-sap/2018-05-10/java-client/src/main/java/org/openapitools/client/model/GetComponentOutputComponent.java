/*
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ComponentAssociatedHost;
import org.openapitools.client.model.ComponentResilience;
import org.openapitools.client.model.ComponentStatus;
import org.openapitools.client.model.ComponentType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetComponentOutputComponent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:40.271797-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetComponentOutputComponent {
  public static final String SERIALIZED_NAME_COMPONENT_ID = "ComponentId";
  @SerializedName(SERIALIZED_NAME_COMPONENT_ID)
  private String componentId;

  public static final String SERIALIZED_NAME_PARENT_COMPONENT = "ParentComponent";
  @SerializedName(SERIALIZED_NAME_PARENT_COMPONENT)
  private String parentComponent;

  public static final String SERIALIZED_NAME_CHILD_COMPONENTS = "ChildComponents";
  @SerializedName(SERIALIZED_NAME_CHILD_COMPONENTS)
  private List childComponents;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_COMPONENT_TYPE = "ComponentType";
  @SerializedName(SERIALIZED_NAME_COMPONENT_TYPE)
  private ComponentType componentType;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ComponentStatus status;

  public static final String SERIALIZED_NAME_SAP_HOSTNAME = "SapHostname";
  @SerializedName(SERIALIZED_NAME_SAP_HOSTNAME)
  private String sapHostname;

  public static final String SERIALIZED_NAME_SAP_KERNEL_VERSION = "SapKernelVersion";
  @SerializedName(SERIALIZED_NAME_SAP_KERNEL_VERSION)
  private String sapKernelVersion;

  public static final String SERIALIZED_NAME_HDB_VERSION = "HdbVersion";
  @SerializedName(SERIALIZED_NAME_HDB_VERSION)
  private String hdbVersion;

  public static final String SERIALIZED_NAME_RESILIENCE = "Resilience";
  @SerializedName(SERIALIZED_NAME_RESILIENCE)
  private ComponentResilience resilience;

  public static final String SERIALIZED_NAME_ASSOCIATED_HOST = "AssociatedHost";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_HOST)
  private ComponentAssociatedHost associatedHost;

  public static final String SERIALIZED_NAME_DATABASES = "Databases";
  @SerializedName(SERIALIZED_NAME_DATABASES)
  private List databases;

  public static final String SERIALIZED_NAME_HOSTS = "Hosts";
  @SerializedName(SERIALIZED_NAME_HOSTS)
  private List hosts;

  public static final String SERIALIZED_NAME_PRIMARY_HOST = "PrimaryHost";
  @SerializedName(SERIALIZED_NAME_PRIMARY_HOST)
  private String primaryHost;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public GetComponentOutputComponent() {
  }

  public GetComponentOutputComponent componentId(String componentId) {
    this.componentId = componentId;
    return this;
  }

  /**
   * Get componentId
   * @return componentId
   */
  @javax.annotation.Nullable
  public String getComponentId() {
    return componentId;
  }

  public void setComponentId(String componentId) {
    this.componentId = componentId;
  }


  public GetComponentOutputComponent parentComponent(String parentComponent) {
    this.parentComponent = parentComponent;
    return this;
  }

  /**
   * Get parentComponent
   * @return parentComponent
   */
  @javax.annotation.Nullable
  public String getParentComponent() {
    return parentComponent;
  }

  public void setParentComponent(String parentComponent) {
    this.parentComponent = parentComponent;
  }


  public GetComponentOutputComponent childComponents(List childComponents) {
    this.childComponents = childComponents;
    return this;
  }

  /**
   * Get childComponents
   * @return childComponents
   */
  @javax.annotation.Nullable
  public List getChildComponents() {
    return childComponents;
  }

  public void setChildComponents(List childComponents) {
    this.childComponents = childComponents;
  }


  public GetComponentOutputComponent applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public GetComponentOutputComponent componentType(ComponentType componentType) {
    this.componentType = componentType;
    return this;
  }

  /**
   * Get componentType
   * @return componentType
   */
  @javax.annotation.Nullable
  public ComponentType getComponentType() {
    return componentType;
  }

  public void setComponentType(ComponentType componentType) {
    this.componentType = componentType;
  }


  public GetComponentOutputComponent status(ComponentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ComponentStatus getStatus() {
    return status;
  }

  public void setStatus(ComponentStatus status) {
    this.status = status;
  }


  public GetComponentOutputComponent sapHostname(String sapHostname) {
    this.sapHostname = sapHostname;
    return this;
  }

  /**
   * Get sapHostname
   * @return sapHostname
   */
  @javax.annotation.Nullable
  public String getSapHostname() {
    return sapHostname;
  }

  public void setSapHostname(String sapHostname) {
    this.sapHostname = sapHostname;
  }


  public GetComponentOutputComponent sapKernelVersion(String sapKernelVersion) {
    this.sapKernelVersion = sapKernelVersion;
    return this;
  }

  /**
   * Get sapKernelVersion
   * @return sapKernelVersion
   */
  @javax.annotation.Nullable
  public String getSapKernelVersion() {
    return sapKernelVersion;
  }

  public void setSapKernelVersion(String sapKernelVersion) {
    this.sapKernelVersion = sapKernelVersion;
  }


  public GetComponentOutputComponent hdbVersion(String hdbVersion) {
    this.hdbVersion = hdbVersion;
    return this;
  }

  /**
   * Get hdbVersion
   * @return hdbVersion
   */
  @javax.annotation.Nullable
  public String getHdbVersion() {
    return hdbVersion;
  }

  public void setHdbVersion(String hdbVersion) {
    this.hdbVersion = hdbVersion;
  }


  public GetComponentOutputComponent resilience(ComponentResilience resilience) {
    this.resilience = resilience;
    return this;
  }

  /**
   * Get resilience
   * @return resilience
   */
  @javax.annotation.Nullable
  public ComponentResilience getResilience() {
    return resilience;
  }

  public void setResilience(ComponentResilience resilience) {
    this.resilience = resilience;
  }


  public GetComponentOutputComponent associatedHost(ComponentAssociatedHost associatedHost) {
    this.associatedHost = associatedHost;
    return this;
  }

  /**
   * Get associatedHost
   * @return associatedHost
   */
  @javax.annotation.Nullable
  public ComponentAssociatedHost getAssociatedHost() {
    return associatedHost;
  }

  public void setAssociatedHost(ComponentAssociatedHost associatedHost) {
    this.associatedHost = associatedHost;
  }


  public GetComponentOutputComponent databases(List databases) {
    this.databases = databases;
    return this;
  }

  /**
   * Get databases
   * @return databases
   */
  @javax.annotation.Nullable
  public List getDatabases() {
    return databases;
  }

  public void setDatabases(List databases) {
    this.databases = databases;
  }


  public GetComponentOutputComponent hosts(List hosts) {
    this.hosts = hosts;
    return this;
  }

  /**
   * Get hosts
   * @return hosts
   */
  @javax.annotation.Nullable
  public List getHosts() {
    return hosts;
  }

  public void setHosts(List hosts) {
    this.hosts = hosts;
  }


  public GetComponentOutputComponent primaryHost(String primaryHost) {
    this.primaryHost = primaryHost;
    return this;
  }

  /**
   * Get primaryHost
   * @return primaryHost
   */
  @javax.annotation.Nullable
  public String getPrimaryHost() {
    return primaryHost;
  }

  public void setPrimaryHost(String primaryHost) {
    this.primaryHost = primaryHost;
  }


  public GetComponentOutputComponent lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public GetComponentOutputComponent arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetComponentOutputComponent getComponentOutputComponent = (GetComponentOutputComponent) o;
    return Objects.equals(this.componentId, getComponentOutputComponent.componentId) &&
        Objects.equals(this.parentComponent, getComponentOutputComponent.parentComponent) &&
        Objects.equals(this.childComponents, getComponentOutputComponent.childComponents) &&
        Objects.equals(this.applicationId, getComponentOutputComponent.applicationId) &&
        Objects.equals(this.componentType, getComponentOutputComponent.componentType) &&
        Objects.equals(this.status, getComponentOutputComponent.status) &&
        Objects.equals(this.sapHostname, getComponentOutputComponent.sapHostname) &&
        Objects.equals(this.sapKernelVersion, getComponentOutputComponent.sapKernelVersion) &&
        Objects.equals(this.hdbVersion, getComponentOutputComponent.hdbVersion) &&
        Objects.equals(this.resilience, getComponentOutputComponent.resilience) &&
        Objects.equals(this.associatedHost, getComponentOutputComponent.associatedHost) &&
        Objects.equals(this.databases, getComponentOutputComponent.databases) &&
        Objects.equals(this.hosts, getComponentOutputComponent.hosts) &&
        Objects.equals(this.primaryHost, getComponentOutputComponent.primaryHost) &&
        Objects.equals(this.lastUpdated, getComponentOutputComponent.lastUpdated) &&
        Objects.equals(this.arn, getComponentOutputComponent.arn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentId, parentComponent, childComponents, applicationId, componentType, status, sapHostname, sapKernelVersion, hdbVersion, resilience, associatedHost, databases, hosts, primaryHost, lastUpdated, arn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetComponentOutputComponent {\n");
    sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
    sb.append("    parentComponent: ").append(toIndentedString(parentComponent)).append("\n");
    sb.append("    childComponents: ").append(toIndentedString(childComponents)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    componentType: ").append(toIndentedString(componentType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sapHostname: ").append(toIndentedString(sapHostname)).append("\n");
    sb.append("    sapKernelVersion: ").append(toIndentedString(sapKernelVersion)).append("\n");
    sb.append("    hdbVersion: ").append(toIndentedString(hdbVersion)).append("\n");
    sb.append("    resilience: ").append(toIndentedString(resilience)).append("\n");
    sb.append("    associatedHost: ").append(toIndentedString(associatedHost)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    primaryHost: ").append(toIndentedString(primaryHost)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ComponentId");
    openapiFields.add("ParentComponent");
    openapiFields.add("ChildComponents");
    openapiFields.add("ApplicationId");
    openapiFields.add("ComponentType");
    openapiFields.add("Status");
    openapiFields.add("SapHostname");
    openapiFields.add("SapKernelVersion");
    openapiFields.add("HdbVersion");
    openapiFields.add("Resilience");
    openapiFields.add("AssociatedHost");
    openapiFields.add("Databases");
    openapiFields.add("Hosts");
    openapiFields.add("PrimaryHost");
    openapiFields.add("LastUpdated");
    openapiFields.add("Arn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetComponentOutputComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetComponentOutputComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetComponentOutputComponent is not found in the empty JSON string", GetComponentOutputComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetComponentOutputComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetComponentOutputComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ComponentId`
      if (jsonObj.get("ComponentId") != null && !jsonObj.get("ComponentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ComponentId"));
      }
      // validate the optional field `ParentComponent`
      if (jsonObj.get("ParentComponent") != null && !jsonObj.get("ParentComponent").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParentComponent"));
      }
      // validate the optional field `ChildComponents`
      if (jsonObj.get("ChildComponents") != null && !jsonObj.get("ChildComponents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ChildComponents"));
      }
      // validate the optional field `ApplicationId`
      if (jsonObj.get("ApplicationId") != null && !jsonObj.get("ApplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationId"));
      }
      // validate the optional field `ComponentType`
      if (jsonObj.get("ComponentType") != null && !jsonObj.get("ComponentType").isJsonNull()) {
        ComponentType.validateJsonElement(jsonObj.get("ComponentType"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ComponentStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SapHostname`
      if (jsonObj.get("SapHostname") != null && !jsonObj.get("SapHostname").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SapHostname"));
      }
      // validate the optional field `SapKernelVersion`
      if (jsonObj.get("SapKernelVersion") != null && !jsonObj.get("SapKernelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SapKernelVersion"));
      }
      // validate the optional field `HdbVersion`
      if (jsonObj.get("HdbVersion") != null && !jsonObj.get("HdbVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HdbVersion"));
      }
      // validate the optional field `Resilience`
      if (jsonObj.get("Resilience") != null && !jsonObj.get("Resilience").isJsonNull()) {
        ComponentResilience.validateJsonElement(jsonObj.get("Resilience"));
      }
      // validate the optional field `AssociatedHost`
      if (jsonObj.get("AssociatedHost") != null && !jsonObj.get("AssociatedHost").isJsonNull()) {
        ComponentAssociatedHost.validateJsonElement(jsonObj.get("AssociatedHost"));
      }
      // validate the optional field `Databases`
      if (jsonObj.get("Databases") != null && !jsonObj.get("Databases").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Databases"));
      }
      // validate the optional field `Hosts`
      if (jsonObj.get("Hosts") != null && !jsonObj.get("Hosts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Hosts"));
      }
      // validate the optional field `PrimaryHost`
      if (jsonObj.get("PrimaryHost") != null && !jsonObj.get("PrimaryHost").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrimaryHost"));
      }
      // validate the optional field `LastUpdated`
      if (jsonObj.get("LastUpdated") != null && !jsonObj.get("LastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdated"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetComponentOutputComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetComponentOutputComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetComponentOutputComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetComponentOutputComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<GetComponentOutputComponent>() {
           @Override
           public void write(JsonWriter out, GetComponentOutputComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetComponentOutputComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetComponentOutputComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetComponentOutputComponent
   * @throws IOException if the JSON string is invalid with respect to GetComponentOutputComponent
   */
  public static GetComponentOutputComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetComponentOutputComponent.class);
  }

  /**
   * Convert an instance of GetComponentOutputComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

