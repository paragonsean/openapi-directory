openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "This API reference provides descriptions, syntax, and other details\
    \ about each of the actions and data types for AWS Systems Manager for SAP. The\
    \ topic for each action shows the API request parameters and responses. "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Systems Manager for SAP
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: ssm-sap
  x-aws-signingName: ssm-sap
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-sap-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ssm-sap/
servers:
- description: The SsmSap multi-region endpoint
  url: "http://ssm-sap.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SsmSap multi-region endpoint
  url: "https://ssm-sap.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SsmSap endpoint for China (Beijing) and China (Ningxia)
  url: "http://ssm-sap.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The SsmSap endpoint for China (Beijing) and China (Ningxia)
  url: "https://ssm-sap.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /delete-resource-permission:
    post:
      description: Removes permissions associated with the target database.
      operationId: DeleteResourcePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePermission_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePermissionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deregister-application:
    post:
      description: Deregister an SAP application with AWS Systems Manager for SAP.
        This action does not aï¬€ect the existing setup of your SAP workloads on Amazon
        EC2.
      operationId: DeregisterApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterApplicationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-application:
    post:
      description: Gets an application registered with AWS Systems Manager for SAP.
        It also returns the components of the application.
      operationId: GetApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-component:
    post:
      description: Gets the component of an application registered with AWS Systems
        Manager for SAP.
      operationId: GetComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComponent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComponentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-database:
    post:
      description: Gets the SAP HANA database of an application registered with AWS
        Systems Manager for SAP.
      operationId: GetDatabase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDatabase_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-operation:
    post:
      description: Gets the details of an operation by specifying the operation ID.
      operationId: GetOperation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOperation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-resource-permission:
    post:
      description: Gets permissions associated with the target database.
      operationId: GetResourcePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcePermission_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePermissionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-applications:
    post:
      description: Lists all the applications registered with AWS Systems Manager
        for SAP.
      operationId: ListApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListApplications_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-components:
    post:
      description: Lists all the components registered with AWS Systems Manager for
        SAP.
      operationId: ListComponents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComponents_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-databases:
    post:
      description: Lists the SAP HANA databases of an application registered with
        AWS Systems Manager for SAP.
      operationId: ListDatabases
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatabases_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-operations:
    post:
      description: Lists the operations performed by AWS Systems Manager for SAP.
      operationId: ListOperations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOperations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists all tags on an SAP HANA application and/or database registered
        with AWS Systems Manager for SAP.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
    post:
      description: Creates tag for a resource by specifying the ARN.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /put-resource-permission:
    post:
      description: Adds permissions to the target database.
      operationId: PutResourcePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePermission_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePermissionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /register-application:
    post:
      description: <p>Register an SAP application with AWS Systems Manager for SAP.
        You must meet the following requirements before registering. </p> <p>The SAP
        application you want to register with AWS Systems Manager for SAP is running
        on Amazon EC2.</p> <p>AWS Systems Manager Agent must be setup on an Amazon
        EC2 instance along with the required IAM permissions.</p> <p>Amazon EC2 instance(s)
        must have access to the secrets created in AWS Secrets Manager to manage SAP
        applications and components.</p>
      operationId: RegisterApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterApplicationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /start-application-refresh:
    post:
      description: Refreshes a registered application.
      operationId: StartApplicationRefresh
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartApplicationRefreshOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Delete the tags for a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        style: simple
      - description: Adds/updates or removes credentials for applications registered
          with AWS Systems Manager for SAP.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
  /update-application-settings:
    post:
      description: Updates the settings of an application registered with AWS Systems
        Manager for SAP.
      operationId: UpdateApplicationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DeleteResourcePermissionOutput:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The policy that removes permissions on the target database.
      type: object
    ResourceNotFoundException: {}
    ValidationException: {}
    InternalServerException: {}
    DeregisterApplicationOutput:
      properties: {}
      type: object
    GetApplicationOutput:
      example:
        Application:
          Status: ""
          Components: ""
          Type: ""
          AppRegistryArn: ""
          Id: ""
          LastUpdated: ""
          Arn: ""
          DiscoveryStatus: ""
          StatusMessage: ""
        Tags: ""
      properties:
        Application:
          $ref: '#/components/schemas/GetApplicationOutput_Application'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags of a registered application.
      type: object
    GetComponentOutput:
      example:
        Component:
          ChildComponents: ""
          Status: ""
          Hosts: ""
          ComponentType: ""
          ParentComponent: ""
          PrimaryHost: ""
          Resilience:
            HsrOperationMode: ""
            HsrTier: ""
            HsrReplicationMode: ""
            ClusterStatus: ""
          SapHostname: ""
          AssociatedHost:
            Ec2InstanceId: ""
            OsVersion: ""
            Hostname: ""
          Databases: ""
          HdbVersion: ""
          SapKernelVersion: ""
          LastUpdated: ""
          ApplicationId: ""
          Arn: ""
          ComponentId: ""
        Tags: ""
      properties:
        Component:
          $ref: '#/components/schemas/GetComponentOutput_Component'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags of a component.
      type: object
    GetDatabaseOutput:
      example:
        Database:
          Status: ""
          DatabaseType: ""
          PrimaryHost: ""
          DatabaseName: ""
          DatabaseId: ""
          LastUpdated: ""
          ApplicationId: ""
          Arn: ""
          ComponentId: ""
          SQLPort: ""
          Credentials: ""
        Tags: ""
      properties:
        Database:
          $ref: '#/components/schemas/GetDatabaseOutput_Database'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags of a database.
      type: object
    GetOperationOutput:
      example:
        Operation:
          Status: ""
          ResourceArn: ""
          Type: ""
          EndTime: ""
          ResourceId: ""
          StartTime: ""
          LastUpdatedTime: ""
          ResourceType: ""
          Id: ""
          Properties: ""
          StatusMessage: ""
      properties:
        Operation:
          $ref: '#/components/schemas/GetOperationOutput_Operation'
      type: object
    GetResourcePermissionOutput:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
      type: object
    ListApplicationsOutput:
      example:
        Applications: ""
        NextToken: ""
      properties:
        Applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaryList'
          - description: The applications registered with AWS Systems Manager for
              SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is null when there are no more results to return.
      type: object
    ListComponentsOutput:
      example:
        Components: ""
        NextToken: ""
      properties:
        Components:
          allOf:
          - $ref: '#/components/schemas/ComponentSummaryList'
          - description: List of components registered with AWS System Manager for
              SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is null when there are no more results to return.
      type: object
    ListDatabasesOutput:
      example:
        Databases: ""
        NextToken: ""
      properties:
        Databases:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummaryList'
          - description: The SAP HANA databases of an application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is null when there are no more results to return.
      type: object
    ListOperationsOutput:
      example:
        NextToken: ""
        Operations: ""
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/OperationList'
          - description: List of operations performed by AWS Systems Manager for SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is null when there are no more results to return.
      type: object
    Filter:
      description: "A specific result obtained by specifying the name, value, and\
        \ operator. "
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: 'The name of the filter. Filter names are case-sensitive. '
        Value:
          allOf:
          - $ref: '#/components/schemas/FilterValue'
          - description: "The filter values. Filter values are case-sensitive. If\
              \ you specify multiple values for a filter, the values are joined with\
              \ an OR, and the request returns all results that match any of the specified\
              \ values"
        Operator:
          allOf:
          - $ref: '#/components/schemas/FilterOperator'
          - description: 'The operator for the filter. '
      required:
      - Name
      - Operator
      - Value
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: <p/>
      type: object
    ConflictException: {}
    PutResourcePermissionOutput:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
      type: object
    RegisterApplicationOutput:
      example:
        OperationId: ""
        Application:
          Status: ""
          Components: ""
          Type: ""
          AppRegistryArn: ""
          Id: ""
          LastUpdated: ""
          Arn: ""
          DiscoveryStatus: ""
          StatusMessage: ""
      properties:
        Application:
          $ref: '#/components/schemas/RegisterApplicationOutput_Application'
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID of the operation.
      type: object
    InstanceId:
      pattern: "i-[\\w\\d]{8}$|^i-[\\w\\d]{17}"
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    ApplicationCredential:
      description: The credentials of your SAP application.
      properties:
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          - description: The name of the SAP HANA database.
        CredentialType:
          allOf:
          - $ref: '#/components/schemas/CredentialType'
          - description: 'The type of the application credentials. '
        SecretId:
          allOf:
          - $ref: '#/components/schemas/SecretId'
          - description: 'The secret ID created in AWS Secrets Manager to store the
              credentials of the SAP application. '
      required:
      - CredentialType
      - DatabaseName
      - SecretId
      type: object
    StartApplicationRefreshOutput:
      example:
        OperationId: ""
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID of the operation.
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      pattern: "(?!aws:)[a-zA-Z+-=._:/]+"
      type: string
    UpdateApplicationSettingsOutput:
      example:
        Message: ""
        OperationIds: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The update message.
        OperationIds:
          allOf:
          - $ref: '#/components/schemas/OperationIdList'
          - description: The IDs of the operations.
      type: object
    BackintMode:
      enum:
      - AWSBackup
      type: string
    Boolean:
      type: boolean
    AppRegistryArn:
      pattern: "arn:aws:servicecatalog:[a-z0-9:\\/-]+"
      type: string
    ApplicationId:
      pattern: "[\\w\\d]{1,50}"
      type: string
    ApplicationType:
      enum:
      - HANA
      type: string
    SsmSapArn:
      pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
      type: string
    ApplicationStatus:
      enum:
      - ACTIVATED
      - STARTING
      - STOPPED
      - STOPPING
      - FAILED
      - REGISTERING
      - DELETING
      - UNKNOWN
      type: string
    ApplicationDiscoveryStatus:
      enum:
      - SUCCESS
      - REGISTRATION_FAILED
      - REFRESH_FAILED
      - REGISTERING
      - DELETING
      type: string
    ComponentIdList:
      items:
        $ref: '#/components/schemas/ComponentId'
      type: array
    Timestamp:
      format: date-time
      type: string
    String:
      type: string
    Application:
      description: An SAP application registered with AWS Systems Manager for SAP.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          - description: The type of the application.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the application.
        AppRegistryArn:
          allOf:
          - $ref: '#/components/schemas/AppRegistryArn'
          - description: The Amazon Resource Name (ARN) of the Application Registry.
        Status:
          allOf:
          - $ref: '#/components/schemas/ApplicationStatus'
          - description: The status of the application.
        DiscoveryStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationDiscoveryStatus'
          - description: The latest discovery result for the application.
        Components:
          allOf:
          - $ref: '#/components/schemas/ComponentIdList'
          - description: The components of the application.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the application was last updated.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message.
      type: object
    DatabaseName:
      maxLength: 100
      minLength: 1
      type: string
    CredentialType:
      enum:
      - ADMIN
      type: string
    SecretId:
      format: password
      maxLength: 100
      minLength: 1
      type: string
    ApplicationCredentialList:
      items:
        $ref: '#/components/schemas/ApplicationCredential'
      maxItems: 20
      minItems: 1
      type: array
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    ApplicationSummary:
      description: 'The summary of the SAP application registered with AWS Systems
        Manager for SAP. '
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          - description: The type of the application.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the application.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags on the application.
      type: object
    ApplicationSummaryList:
      items:
        $ref: '#/components/schemas/ApplicationSummary'
      type: array
    Arn:
      pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
      type: string
    AssociatedHost:
      description: Describes the properties of the associated host.
      properties:
        Hostname:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the host.
        Ec2InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the Amazon EC2 instance.
        OsVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the operating system.
      type: object
    BackintConfig:
      description: Configuration parameters for AWS Backint Agent for SAP HANA. You
        can backup your SAP HANA database with AWS Backup or Amazon S3.
      properties:
        BackintMode:
          allOf:
          - $ref: '#/components/schemas/BackintMode'
          - description: AWS service for your database backup.
        EnsureNoBackupInProcess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p/>
      required:
      - BackintMode
      - EnsureNoBackupInProcess
      type: object
    ClusterStatus:
      enum:
      - ONLINE
      - STANDBY
      - MAINTENANCE
      - OFFLINE
      - NONE
      type: string
    ComponentId:
      pattern: "[\\w\\d-]+"
      type: string
    ComponentType:
      enum:
      - HANA
      - HANA_NODE
      type: string
    ComponentStatus:
      enum:
      - ACTIVATED
      - STARTING
      - STOPPED
      - STOPPING
      - RUNNING
      - RUNNING_WITH_ERROR
      - UNDEFINED
      type: string
    Resilience:
      description: Details of the SAP HANA system replication for the instance.
      properties:
        HsrTier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tier of the component.
        HsrReplicationMode:
          allOf:
          - $ref: '#/components/schemas/ReplicationMode'
          - description: The replication mode of the component.
        HsrOperationMode:
          allOf:
          - $ref: '#/components/schemas/OperationMode'
          - description: The operation mode of the component.
        ClusterStatus:
          allOf:
          - $ref: '#/components/schemas/ClusterStatus'
          - description: The cluster status of the component.
      type: object
    DatabaseIdList:
      items:
        $ref: '#/components/schemas/DatabaseId'
      type: array
    HostList:
      items:
        $ref: '#/components/schemas/Host'
      type: array
    Component:
      description: The SAP component of your application.
      properties:
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        ParentComponent:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: "The parent component of a highly available environment.\
              \ For example, in a highly available SAP on AWS workload, the parent\
              \ component consists of the entire setup, including the child components."
        ChildComponents:
          allOf:
          - $ref: '#/components/schemas/ComponentIdList'
          - description: "The child components of a highly available environment.\
              \ For example, in a highly available SAP on AWS workload, the child\
              \ component consists of the primary and secondar instances."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The type of the component.
        Status:
          allOf:
          - $ref: '#/components/schemas/ComponentStatus'
          - description: The status of the component.
        SapHostname:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The hostname of the component.
        SapKernelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The kernel version of the component.
        HdbVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The SAP HANA version of the component.
        Resilience:
          $ref: '#/components/schemas/Component_Resilience'
        AssociatedHost:
          $ref: '#/components/schemas/Component_AssociatedHost'
        Databases:
          allOf:
          - $ref: '#/components/schemas/DatabaseIdList'
          - description: The SAP HANA databases of the component.
        Hosts:
          allOf:
          - $ref: '#/components/schemas/HostList'
          - deprecated: true
            description: The hosts of the component.This shape is no longer used.
              Please use AssociatedHost.
        PrimaryHost:
          allOf:
          - $ref: '#/components/schemas/String'
          - deprecated: true
            description: The primary host of the component.This shape is no longer
              used. Please use AssociatedHost.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the component was last updated.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the component.
      type: object
    ComponentSummary:
      description: The summary of the component.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The type of the component.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags of the component.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the component summary.
      type: object
    ComponentSummaryList:
      items:
        $ref: '#/components/schemas/ComponentSummary'
      type: array
    DatabaseId:
      pattern: ".*[\\w\\d]+"
      type: string
    DatabaseType:
      enum:
      - SYSTEM
      - TENANT
      type: string
    DatabaseStatus:
      enum:
      - RUNNING
      - STARTING
      - STOPPED
      - WARNING
      - UNKNOWN
      - ERROR
      type: string
    Integer:
      type: integer
    Database:
      description: The SAP HANA database of the application registered with AWS Systems
        Manager for SAP.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        Credentials:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          - description: The credentials of the database.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          - description: The ID of the SAP HANA database.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the database.
        DatabaseType:
          allOf:
          - $ref: '#/components/schemas/DatabaseType'
          - description: The type of the database.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the database.
        Status:
          allOf:
          - $ref: '#/components/schemas/DatabaseStatus'
          - description: The status of the database.
        PrimaryHost:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The primary host of the database.
        SQLPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The SQL port of the database.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the database was last updated.
      type: object
    DatabaseSummary:
      description: The summary of the database.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          - description: The ID of the database.
        DatabaseType:
          allOf:
          - $ref: '#/components/schemas/DatabaseType'
          - description: The type of the database.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the database.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags of the database.
      type: object
    DatabaseSummaryList:
      items:
        $ref: '#/components/schemas/DatabaseSummary'
      type: array
    PermissionActionType:
      enum:
      - RESTORE
      type: string
    DeleteResourcePermissionInput:
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          - description: Delete or restore the permissions on the target database.
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the source resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
      title: DeleteResourcePermissionInput
      type: object
    DeregisterApplicationInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
      required:
      - ApplicationId
      title: DeregisterApplicationInput
      type: object
    FilterName:
      maxLength: 32
      minLength: 1
      type: string
    FilterValue:
      maxLength: 64
      minLength: 1
      type: string
    FilterOperator:
      enum:
      - Equals
      - GreaterThanOrEquals
      - LessThanOrEquals
      type: string
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      maxItems: 10
      minItems: 1
      type: array
    GetApplicationInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: 'The Amazon Resource Name (ARN) of the application. '
        AppRegistryArn:
          allOf:
          - $ref: '#/components/schemas/AppRegistryArn'
          - description: The Amazon Resource Name (ARN) of the application registry.
      title: GetApplicationInput
      type: object
    GetComponentInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
      required:
      - ApplicationId
      - ComponentId
      title: GetComponentInput
      type: object
    GetDatabaseInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          - description: The ID of the database.
        DatabaseArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          - description: The Amazon Resource Name (ARN) of the database.
      title: GetDatabaseInput
      type: object
    OperationId:
      pattern: "[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?"
      type: string
    GetOperationInput:
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID of the operation.
      required:
      - OperationId
      title: GetOperationInput
      type: object
    Operation:
      description: The operations performed by AWS Systems Manager for SAP.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID of the operation.
        Type:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          - description: The type of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/OperationStatus'
          - description: The status of the operation.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message of the operation.
        Properties:
          allOf:
          - $ref: '#/components/schemas/OperationProperties'
          - description: The properties of the operation.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type of the operation.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The resource ID of the operation.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the operation.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the operation.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end time of the operation.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the operation was last updated.
      type: object
    GetResourcePermissionInput:
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          - description: <p/>
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
      title: GetResourcePermissionInput
      type: object
    HostRole:
      enum:
      - LEADER
      - WORKER
      - STANDBY
      - UNKNOWN
      type: string
    Host:
      description: 'Describes the properties of the Dedicated Host. '
      properties:
        HostName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Dedicated Host.
        HostIp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The IP address of the Dedicated Host. '
        EC2InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of Amazon EC2 instance.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The instance ID of the instance on the Dedicated Host.
        HostRole:
          allOf:
          - $ref: '#/components/schemas/HostRole'
          - description: The role of the Dedicated Host.
        OsVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the operating system.
      type: object
    InstanceList:
      items:
        $ref: '#/components/schemas/InstanceId'
      maxItems: 1
      minItems: 1
      type: array
    NextToken:
      pattern: ".{16,1024}"
      type: string
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    ListApplicationsInput:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return with a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value. "
      title: ListApplicationsInput
      type: object
    ListComponentsInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of results to return with a single\
              \ call. To retrieve the remaining results, make another call with the\
              \ returned nextToken value.</p> <p>If you do not specify a value for\
              \ MaxResults, the request returns 50 items per page by default.</p>"
      title: ListComponentsInput
      type: object
    ListDatabasesInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          - description: The ID of the component.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token for the next page of results. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return with a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value. If you do not specify a value for MaxResults, the\
              \ request returns 50 items per page by default."
      title: ListDatabasesInput
      type: object
    ListOperationsInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return with a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value. If you do not specify a value for MaxResults, the\
              \ request returns 50 items per page by default."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token for the next page of results. '
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The filters of an operation.
      required:
      - ApplicationId
      title: ListOperationsInput
      type: object
    OperationList:
      items:
        $ref: '#/components/schemas/Operation'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    OperationType:
      type: string
    OperationStatus:
      enum:
      - INPROGRESS
      - SUCCESS
      - ERROR
      type: string
    OperationProperties:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    ResourceType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceId:
      maxLength: 64
      minLength: 1
      type: string
    OperationIdList:
      items:
        $ref: '#/components/schemas/OperationId'
      type: array
    OperationMode:
      enum:
      - PRIMARY
      - LOGREPLAY
      - DELTA_DATASHIPPING
      - LOGREPLAY_READACCESS
      - NONE
      type: string
    PutResourcePermissionInput:
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          - description: <p/>
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: <p/>
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: <p/>
      required:
      - ActionType
      - ResourceArn
      - SourceResourceArn
      title: PutResourcePermissionInput
      type: object
    SAPInstanceNumber:
      pattern: "[0-9]{2}"
      type: string
    SID:
      pattern: "[A-Z][A-Z0-9]{2}"
      type: string
    RegisterApplicationInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        ApplicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          - description: The type of the application.
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceList'
          - description: The Amazon EC2 instances on which your SAP application is
              running.
        SapInstanceNumber:
          allOf:
          - $ref: '#/components/schemas/SAPInstanceNumber'
          - description: The SAP instance number of the application.
        Sid:
          allOf:
          - $ref: '#/components/schemas/SID'
          - description: The System ID of the application.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to be attached to the SAP application.
        Credentials:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          - description: The credentials of the SAP application.
      required:
      - ApplicationId
      - ApplicationType
      - Credentials
      - Instances
      title: RegisterApplicationInput
      type: object
    ReplicationMode:
      enum:
      - PRIMARY
      - NONE
      - SYNC
      - SYNCMEM
      - ASYNC
      type: string
    StartApplicationRefreshInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
      required:
      - ApplicationId
      title: StartApplicationRefreshInput
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags on a resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationSettingsInput:
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
        CredentialsToAddOrUpdate:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          - description: The credentials to be added or updated.
        CredentialsToRemove:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          - description: The credentials to be removed.
        Backint:
          $ref: '#/components/schemas/UpdateApplicationSettingsInput_Backint'
      required:
      - ApplicationId
      title: UpdateApplicationSettingsInput
      type: object
    DeleteResourcePermission_request:
      properties:
        ActionType:
          description: Delete or restore the permissions on the target database.
          enum:
          - RESTORE
          type: string
        SourceResourceArn:
          description: The Amazon Resource Name (ARN) of the source resource.
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource.
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
      required:
      - ResourceArn
      type: object
    DeregisterApplication_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
      required:
      - ApplicationId
      type: object
    GetApplication_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        ApplicationArn:
          description: 'The Amazon Resource Name (ARN) of the application. '
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        AppRegistryArn:
          description: The Amazon Resource Name (ARN) of the application registry.
          pattern: "arn:aws:servicecatalog:[a-z0-9:\\/-]+"
          type: string
      type: object
    GetComponent_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        ComponentId:
          description: The ID of the component.
          pattern: "[\\w\\d-]+"
          type: string
      required:
      - ApplicationId
      - ComponentId
      type: object
    GetDatabase_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        ComponentId:
          description: The ID of the component.
          pattern: "[\\w\\d-]+"
          type: string
        DatabaseId:
          description: The ID of the database.
          pattern: ".*[\\w\\d]+"
          type: string
        DatabaseArn:
          description: The Amazon Resource Name (ARN) of the database.
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
      type: object
    GetOperation_request:
      properties:
        OperationId:
          description: The ID of the operation.
          pattern: "[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?"
          type: string
      required:
      - OperationId
      type: object
    GetResourcePermission_request:
      properties:
        ActionType:
          description: <p/>
          enum:
          - RESTORE
          type: string
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource.
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
      required:
      - ResourceArn
      type: object
    ListApplications_request:
      properties:
        NextToken:
          description: The token for the next page of results.
          pattern: ".{16,1024}"
          type: string
        MaxResults:
          description: "The maximum number of results to return with a single call.\
            \ To retrieve the remaining results, make another call with the returned\
            \ nextToken value. "
          maximum: 50
          minimum: 1
          type: integer
      type: object
    ListComponents_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        NextToken:
          description: The token for the next page of results.
          pattern: ".{16,1024}"
          type: string
        MaxResults:
          description: "<p>The maximum number of results to return with a single call.\
            \ To retrieve the remaining results, make another call with the returned\
            \ nextToken value.</p> <p>If you do not specify a value for MaxResults,\
            \ the request returns 50 items per page by default.</p>"
          maximum: 50
          minimum: 1
          type: integer
      type: object
    ListDatabases_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        ComponentId:
          description: The ID of the component.
          pattern: "[\\w\\d-]+"
          type: string
        NextToken:
          description: 'The token for the next page of results. '
          pattern: ".{16,1024}"
          type: string
        MaxResults:
          description: "The maximum number of results to return with a single call.\
            \ To retrieve the remaining results, make another call with the returned\
            \ nextToken value. If you do not specify a value for MaxResults, the request\
            \ returns 50 items per page by default."
          maximum: 50
          minimum: 1
          type: integer
      type: object
    ListOperations_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        MaxResults:
          description: "The maximum number of results to return with a single call.\
            \ To retrieve the remaining results, make another call with the returned\
            \ nextToken value. If you do not specify a value for MaxResults, the request\
            \ returns 50 items per page by default."
          maximum: 50
          minimum: 1
          type: integer
        NextToken:
          description: 'The token for the next page of results. '
          pattern: ".{16,1024}"
          type: string
        Filters:
          description: The filters of an operation.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - ApplicationId
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags on a resource.
          type: object
      required:
      - tags
      type: object
    PutResourcePermission_request:
      properties:
        ActionType:
          description: <p/>
          enum:
          - RESTORE
          type: string
        SourceResourceArn:
          description: <p/>
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
        ResourceArn:
          description: <p/>
          pattern: "arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\\/.+"
          type: string
      required:
      - ActionType
      - ResourceArn
      - SourceResourceArn
      type: object
    RegisterApplication_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        ApplicationType:
          description: The type of the application.
          enum:
          - HANA
          type: string
        Instances:
          description: The Amazon EC2 instances on which your SAP application is running.
          items:
            $ref: '#/components/schemas/InstanceId'
          maxItems: 1
          minItems: 1
          type: array
        SapInstanceNumber:
          description: The SAP instance number of the application.
          pattern: "[0-9]{2}"
          type: string
        Sid:
          description: The System ID of the application.
          pattern: "[A-Z][A-Z0-9]{2}"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to be attached to the SAP application.
          type: object
        Credentials:
          description: The credentials of the SAP application.
          items:
            $ref: '#/components/schemas/ApplicationCredential'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - ApplicationId
      - ApplicationType
      - Credentials
      - Instances
      type: object
    UpdateApplicationSettings_request_Backint:
      description: Configuration parameters for AWS Backint Agent for SAP HANA. You
        can backup your SAP HANA database with AWS Backup or Amazon S3.
      properties:
        BackintMode:
          allOf:
          - $ref: '#/components/schemas/BackintMode'
          - description: AWS service for your database backup.
        EnsureNoBackupInProcess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p/>
      type: object
    UpdateApplicationSettings_request:
      properties:
        ApplicationId:
          description: The ID of the application.
          pattern: "[\\w\\d]{1,50}"
          type: string
        CredentialsToAddOrUpdate:
          description: The credentials to be added or updated.
          items:
            $ref: '#/components/schemas/ApplicationCredential'
          maxItems: 20
          minItems: 1
          type: array
        CredentialsToRemove:
          description: The credentials to be removed.
          items:
            $ref: '#/components/schemas/ApplicationCredential'
          maxItems: 20
          minItems: 1
          type: array
        Backint:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_Backint'
      required:
      - ApplicationId
      type: object
    GetApplicationOutput_Application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: Returns all of the metadata of an application registered with
          AWS Systems Manager for SAP.
      example:
        Status: ""
        Components: ""
        Type: ""
        AppRegistryArn: ""
        Id: ""
        LastUpdated: ""
        Arn: ""
        DiscoveryStatus: ""
        StatusMessage: ""
    GetComponentOutput_Component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The component of an application registered with AWS Systems Manager
          for SAP.
      example:
        ChildComponents: ""
        Status: ""
        Hosts: ""
        ComponentType: ""
        ParentComponent: ""
        PrimaryHost: ""
        Resilience:
          HsrOperationMode: ""
          HsrTier: ""
          HsrReplicationMode: ""
          ClusterStatus: ""
        SapHostname: ""
        AssociatedHost:
          Ec2InstanceId: ""
          OsVersion: ""
          Hostname: ""
        Databases: ""
        HdbVersion: ""
        SapKernelVersion: ""
        LastUpdated: ""
        ApplicationId: ""
        Arn: ""
        ComponentId: ""
    GetDatabaseOutput_Database:
      allOf:
      - $ref: '#/components/schemas/Database'
      - description: The SAP HANA database of an application registered with AWS Systems
          Manager for SAP.
      example:
        Status: ""
        DatabaseType: ""
        PrimaryHost: ""
        DatabaseName: ""
        DatabaseId: ""
        LastUpdated: ""
        ApplicationId: ""
        Arn: ""
        ComponentId: ""
        SQLPort: ""
        Credentials: ""
    GetOperationOutput_Operation:
      allOf:
      - $ref: '#/components/schemas/Operation'
      - description: Returns the details of an operation.
      example:
        Status: ""
        ResourceArn: ""
        Type: ""
        EndTime: ""
        ResourceId: ""
        StartTime: ""
        LastUpdatedTime: ""
        ResourceType: ""
        Id: ""
        Properties: ""
        StatusMessage: ""
    RegisterApplicationOutput_Application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: The application registered with AWS Systems Manager for SAP.
      example:
        Status: ""
        Components: ""
        Type: ""
        AppRegistryArn: ""
        Id: ""
        LastUpdated: ""
        Arn: ""
        DiscoveryStatus: ""
        StatusMessage: ""
    Component_Resilience:
      allOf:
      - $ref: '#/components/schemas/Resilience'
      - description: Details of the SAP HANA system replication for the component.
      example:
        HsrOperationMode: ""
        HsrTier: ""
        HsrReplicationMode: ""
        ClusterStatus: ""
    Component_AssociatedHost:
      allOf:
      - $ref: '#/components/schemas/AssociatedHost'
      - description: The associated host of the component.
      example:
        Ec2InstanceId: ""
        OsVersion: ""
        Hostname: ""
    UpdateApplicationSettingsInput_Backint:
      allOf:
      - $ref: '#/components/schemas/BackintConfig'
      - description: Installation of AWS Backint Agent for SAP HANA.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

