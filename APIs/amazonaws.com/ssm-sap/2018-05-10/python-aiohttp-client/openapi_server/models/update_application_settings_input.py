# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_application_settings_input_backint import UpdateApplicationSettingsInputBackint
from openapi_server import util


class UpdateApplicationSettingsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, credentials_to_add_or_update: List=None, credentials_to_remove: List=None, backint: UpdateApplicationSettingsInputBackint=None):
        """UpdateApplicationSettingsInput - a model defined in OpenAPI

        :param application_id: The application_id of this UpdateApplicationSettingsInput.
        :param credentials_to_add_or_update: The credentials_to_add_or_update of this UpdateApplicationSettingsInput.
        :param credentials_to_remove: The credentials_to_remove of this UpdateApplicationSettingsInput.
        :param backint: The backint of this UpdateApplicationSettingsInput.
        """
        self.openapi_types = {
            'application_id': str,
            'credentials_to_add_or_update': List,
            'credentials_to_remove': List,
            'backint': UpdateApplicationSettingsInputBackint
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'credentials_to_add_or_update': 'CredentialsToAddOrUpdate',
            'credentials_to_remove': 'CredentialsToRemove',
            'backint': 'Backint'
        }

        self._application_id = application_id
        self._credentials_to_add_or_update = credentials_to_add_or_update
        self._credentials_to_remove = credentials_to_remove
        self._backint = backint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApplicationSettingsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApplicationSettingsInput of this UpdateApplicationSettingsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this UpdateApplicationSettingsInput.


        :return: The application_id of this UpdateApplicationSettingsInput.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this UpdateApplicationSettingsInput.


        :param application_id: The application_id of this UpdateApplicationSettingsInput.
        :type application_id: str
        """
        if application_id is None:
            raise ValueError("Invalid value for `application_id`, must not be `None`")

        self._application_id = application_id

    @property
    def credentials_to_add_or_update(self):
        """Gets the credentials_to_add_or_update of this UpdateApplicationSettingsInput.


        :return: The credentials_to_add_or_update of this UpdateApplicationSettingsInput.
        :rtype: List
        """
        return self._credentials_to_add_or_update

    @credentials_to_add_or_update.setter
    def credentials_to_add_or_update(self, credentials_to_add_or_update):
        """Sets the credentials_to_add_or_update of this UpdateApplicationSettingsInput.


        :param credentials_to_add_or_update: The credentials_to_add_or_update of this UpdateApplicationSettingsInput.
        :type credentials_to_add_or_update: List
        """

        self._credentials_to_add_or_update = credentials_to_add_or_update

    @property
    def credentials_to_remove(self):
        """Gets the credentials_to_remove of this UpdateApplicationSettingsInput.


        :return: The credentials_to_remove of this UpdateApplicationSettingsInput.
        :rtype: List
        """
        return self._credentials_to_remove

    @credentials_to_remove.setter
    def credentials_to_remove(self, credentials_to_remove):
        """Sets the credentials_to_remove of this UpdateApplicationSettingsInput.


        :param credentials_to_remove: The credentials_to_remove of this UpdateApplicationSettingsInput.
        :type credentials_to_remove: List
        """

        self._credentials_to_remove = credentials_to_remove

    @property
    def backint(self):
        """Gets the backint of this UpdateApplicationSettingsInput.


        :return: The backint of this UpdateApplicationSettingsInput.
        :rtype: UpdateApplicationSettingsInputBackint
        """
        return self._backint

    @backint.setter
    def backint(self, backint):
        """Sets the backint of this UpdateApplicationSettingsInput.


        :param backint: The backint of this UpdateApplicationSettingsInput.
        :type backint: UpdateApplicationSettingsInputBackint
        """

        self._backint = backint
