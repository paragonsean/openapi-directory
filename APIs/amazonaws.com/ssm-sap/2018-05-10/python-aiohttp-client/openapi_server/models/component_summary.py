# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.component_type import ComponentType
from openapi_server import util


class ComponentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, component_id: str=None, component_type: ComponentType=None, tags: Dict=None, arn: str=None):
        """ComponentSummary - a model defined in OpenAPI

        :param application_id: The application_id of this ComponentSummary.
        :param component_id: The component_id of this ComponentSummary.
        :param component_type: The component_type of this ComponentSummary.
        :param tags: The tags of this ComponentSummary.
        :param arn: The arn of this ComponentSummary.
        """
        self.openapi_types = {
            'application_id': str,
            'component_id': str,
            'component_type': ComponentType,
            'tags': Dict,
            'arn': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'component_id': 'ComponentId',
            'component_type': 'ComponentType',
            'tags': 'Tags',
            'arn': 'Arn'
        }

        self._application_id = application_id
        self._component_id = component_id
        self._component_type = component_type
        self._tags = tags
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentSummary of this ComponentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this ComponentSummary.


        :return: The application_id of this ComponentSummary.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ComponentSummary.


        :param application_id: The application_id of this ComponentSummary.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def component_id(self):
        """Gets the component_id of this ComponentSummary.


        :return: The component_id of this ComponentSummary.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this ComponentSummary.


        :param component_id: The component_id of this ComponentSummary.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def component_type(self):
        """Gets the component_type of this ComponentSummary.


        :return: The component_type of this ComponentSummary.
        :rtype: ComponentType
        """
        return self._component_type

    @component_type.setter
    def component_type(self, component_type):
        """Sets the component_type of this ComponentSummary.


        :param component_type: The component_type of this ComponentSummary.
        :type component_type: ComponentType
        """

        self._component_type = component_type

    @property
    def tags(self):
        """Gets the tags of this ComponentSummary.


        :return: The tags of this ComponentSummary.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ComponentSummary.


        :param tags: The tags of this ComponentSummary.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def arn(self):
        """Gets the arn of this ComponentSummary.


        :return: The arn of this ComponentSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ComponentSummary.


        :param arn: The arn of this ComponentSummary.
        :type arn: str
        """

        self._arn = arn
