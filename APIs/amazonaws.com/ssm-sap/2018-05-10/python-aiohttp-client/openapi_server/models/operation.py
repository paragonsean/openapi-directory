# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_status import OperationStatus
from openapi_server import util


class Operation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: str=None, status: OperationStatus=None, status_message: str=None, properties: Dict=None, resource_type: str=None, resource_id: str=None, resource_arn: str=None, start_time: datetime=None, end_time: datetime=None, last_updated_time: datetime=None):
        """Operation - a model defined in OpenAPI

        :param id: The id of this Operation.
        :param type: The type of this Operation.
        :param status: The status of this Operation.
        :param status_message: The status_message of this Operation.
        :param properties: The properties of this Operation.
        :param resource_type: The resource_type of this Operation.
        :param resource_id: The resource_id of this Operation.
        :param resource_arn: The resource_arn of this Operation.
        :param start_time: The start_time of this Operation.
        :param end_time: The end_time of this Operation.
        :param last_updated_time: The last_updated_time of this Operation.
        """
        self.openapi_types = {
            'id': str,
            'type': str,
            'status': OperationStatus,
            'status_message': str,
            'properties': Dict,
            'resource_type': str,
            'resource_id': str,
            'resource_arn': str,
            'start_time': datetime,
            'end_time': datetime,
            'last_updated_time': datetime
        }

        self.attribute_map = {
            'id': 'Id',
            'type': 'Type',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'properties': 'Properties',
            'resource_type': 'ResourceType',
            'resource_id': 'ResourceId',
            'resource_arn': 'ResourceArn',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'last_updated_time': 'LastUpdatedTime'
        }

        self._id = id
        self._type = type
        self._status = status
        self._status_message = status_message
        self._properties = properties
        self._resource_type = resource_type
        self._resource_id = resource_id
        self._resource_arn = resource_arn
        self._start_time = start_time
        self._end_time = end_time
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Operation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Operation of this Operation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Operation.


        :return: The id of this Operation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Operation.


        :param id: The id of this Operation.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this Operation.


        :return: The type of this Operation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Operation.


        :param type: The type of this Operation.
        :type type: str
        """

        self._type = type

    @property
    def status(self):
        """Gets the status of this Operation.


        :return: The status of this Operation.
        :rtype: OperationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Operation.


        :param status: The status of this Operation.
        :type status: OperationStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this Operation.


        :return: The status_message of this Operation.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this Operation.


        :param status_message: The status_message of this Operation.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def properties(self):
        """Gets the properties of this Operation.


        :return: The properties of this Operation.
        :rtype: Dict
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Operation.


        :param properties: The properties of this Operation.
        :type properties: Dict
        """

        self._properties = properties

    @property
    def resource_type(self):
        """Gets the resource_type of this Operation.


        :return: The resource_type of this Operation.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this Operation.


        :param resource_type: The resource_type of this Operation.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_id(self):
        """Gets the resource_id of this Operation.


        :return: The resource_id of this Operation.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this Operation.


        :param resource_id: The resource_id of this Operation.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_arn(self):
        """Gets the resource_arn of this Operation.


        :return: The resource_arn of this Operation.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this Operation.


        :param resource_arn: The resource_arn of this Operation.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def start_time(self):
        """Gets the start_time of this Operation.


        :return: The start_time of this Operation.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Operation.


        :param start_time: The start_time of this Operation.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this Operation.


        :return: The end_time of this Operation.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Operation.


        :param end_time: The end_time of this Operation.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this Operation.


        :return: The last_updated_time of this Operation.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this Operation.


        :param last_updated_time: The last_updated_time of this Operation.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time
