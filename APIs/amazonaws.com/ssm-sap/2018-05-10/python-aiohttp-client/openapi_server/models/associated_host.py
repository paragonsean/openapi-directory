# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociatedHost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, ec2_instance_id: str=None, os_version: str=None):
        """AssociatedHost - a model defined in OpenAPI

        :param hostname: The hostname of this AssociatedHost.
        :param ec2_instance_id: The ec2_instance_id of this AssociatedHost.
        :param os_version: The os_version of this AssociatedHost.
        """
        self.openapi_types = {
            'hostname': str,
            'ec2_instance_id': str,
            'os_version': str
        }

        self.attribute_map = {
            'hostname': 'Hostname',
            'ec2_instance_id': 'Ec2InstanceId',
            'os_version': 'OsVersion'
        }

        self._hostname = hostname
        self._ec2_instance_id = ec2_instance_id
        self._os_version = os_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatedHost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatedHost of this AssociatedHost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self):
        """Gets the hostname of this AssociatedHost.


        :return: The hostname of this AssociatedHost.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this AssociatedHost.


        :param hostname: The hostname of this AssociatedHost.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def ec2_instance_id(self):
        """Gets the ec2_instance_id of this AssociatedHost.


        :return: The ec2_instance_id of this AssociatedHost.
        :rtype: str
        """
        return self._ec2_instance_id

    @ec2_instance_id.setter
    def ec2_instance_id(self, ec2_instance_id):
        """Sets the ec2_instance_id of this AssociatedHost.


        :param ec2_instance_id: The ec2_instance_id of this AssociatedHost.
        :type ec2_instance_id: str
        """

        self._ec2_instance_id = ec2_instance_id

    @property
    def os_version(self):
        """Gets the os_version of this AssociatedHost.


        :return: The os_version of this AssociatedHost.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this AssociatedHost.


        :param os_version: The os_version of this AssociatedHost.
        :type os_version: str
        """

        self._os_version = os_version
