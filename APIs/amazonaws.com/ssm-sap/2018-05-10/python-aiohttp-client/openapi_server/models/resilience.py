# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_status import ClusterStatus
from openapi_server.models.operation_mode import OperationMode
from openapi_server.models.replication_mode import ReplicationMode
from openapi_server import util


class Resilience(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hsr_tier: str=None, hsr_replication_mode: ReplicationMode=None, hsr_operation_mode: OperationMode=None, cluster_status: ClusterStatus=None):
        """Resilience - a model defined in OpenAPI

        :param hsr_tier: The hsr_tier of this Resilience.
        :param hsr_replication_mode: The hsr_replication_mode of this Resilience.
        :param hsr_operation_mode: The hsr_operation_mode of this Resilience.
        :param cluster_status: The cluster_status of this Resilience.
        """
        self.openapi_types = {
            'hsr_tier': str,
            'hsr_replication_mode': ReplicationMode,
            'hsr_operation_mode': OperationMode,
            'cluster_status': ClusterStatus
        }

        self.attribute_map = {
            'hsr_tier': 'HsrTier',
            'hsr_replication_mode': 'HsrReplicationMode',
            'hsr_operation_mode': 'HsrOperationMode',
            'cluster_status': 'ClusterStatus'
        }

        self._hsr_tier = hsr_tier
        self._hsr_replication_mode = hsr_replication_mode
        self._hsr_operation_mode = hsr_operation_mode
        self._cluster_status = cluster_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resilience':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resilience of this Resilience.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hsr_tier(self):
        """Gets the hsr_tier of this Resilience.


        :return: The hsr_tier of this Resilience.
        :rtype: str
        """
        return self._hsr_tier

    @hsr_tier.setter
    def hsr_tier(self, hsr_tier):
        """Sets the hsr_tier of this Resilience.


        :param hsr_tier: The hsr_tier of this Resilience.
        :type hsr_tier: str
        """

        self._hsr_tier = hsr_tier

    @property
    def hsr_replication_mode(self):
        """Gets the hsr_replication_mode of this Resilience.


        :return: The hsr_replication_mode of this Resilience.
        :rtype: ReplicationMode
        """
        return self._hsr_replication_mode

    @hsr_replication_mode.setter
    def hsr_replication_mode(self, hsr_replication_mode):
        """Sets the hsr_replication_mode of this Resilience.


        :param hsr_replication_mode: The hsr_replication_mode of this Resilience.
        :type hsr_replication_mode: ReplicationMode
        """

        self._hsr_replication_mode = hsr_replication_mode

    @property
    def hsr_operation_mode(self):
        """Gets the hsr_operation_mode of this Resilience.


        :return: The hsr_operation_mode of this Resilience.
        :rtype: OperationMode
        """
        return self._hsr_operation_mode

    @hsr_operation_mode.setter
    def hsr_operation_mode(self, hsr_operation_mode):
        """Sets the hsr_operation_mode of this Resilience.


        :param hsr_operation_mode: The hsr_operation_mode of this Resilience.
        :type hsr_operation_mode: OperationMode
        """

        self._hsr_operation_mode = hsr_operation_mode

    @property
    def cluster_status(self):
        """Gets the cluster_status of this Resilience.


        :return: The cluster_status of this Resilience.
        :rtype: ClusterStatus
        """
        return self._cluster_status

    @cluster_status.setter
    def cluster_status(self, cluster_status):
        """Sets the cluster_status of this Resilience.


        :param cluster_status: The cluster_status of this Resilience.
        :type cluster_status: ClusterStatus
        """

        self._cluster_status = cluster_status
