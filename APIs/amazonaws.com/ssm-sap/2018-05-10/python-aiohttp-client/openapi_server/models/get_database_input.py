# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDatabaseInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, component_id: str=None, database_id: str=None, database_arn: str=None):
        """GetDatabaseInput - a model defined in OpenAPI

        :param application_id: The application_id of this GetDatabaseInput.
        :param component_id: The component_id of this GetDatabaseInput.
        :param database_id: The database_id of this GetDatabaseInput.
        :param database_arn: The database_arn of this GetDatabaseInput.
        """
        self.openapi_types = {
            'application_id': str,
            'component_id': str,
            'database_id': str,
            'database_arn': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'component_id': 'ComponentId',
            'database_id': 'DatabaseId',
            'database_arn': 'DatabaseArn'
        }

        self._application_id = application_id
        self._component_id = component_id
        self._database_id = database_id
        self._database_arn = database_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDatabaseInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDatabaseInput of this GetDatabaseInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this GetDatabaseInput.


        :return: The application_id of this GetDatabaseInput.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this GetDatabaseInput.


        :param application_id: The application_id of this GetDatabaseInput.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def component_id(self):
        """Gets the component_id of this GetDatabaseInput.


        :return: The component_id of this GetDatabaseInput.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this GetDatabaseInput.


        :param component_id: The component_id of this GetDatabaseInput.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def database_id(self):
        """Gets the database_id of this GetDatabaseInput.


        :return: The database_id of this GetDatabaseInput.
        :rtype: str
        """
        return self._database_id

    @database_id.setter
    def database_id(self, database_id):
        """Sets the database_id of this GetDatabaseInput.


        :param database_id: The database_id of this GetDatabaseInput.
        :type database_id: str
        """

        self._database_id = database_id

    @property
    def database_arn(self):
        """Gets the database_arn of this GetDatabaseInput.


        :return: The database_arn of this GetDatabaseInput.
        :rtype: str
        """
        return self._database_arn

    @database_arn.setter
    def database_arn(self, database_arn):
        """Sets the database_arn of this GetDatabaseInput.


        :param database_arn: The database_arn of this GetDatabaseInput.
        :type database_arn: str
        """

        self._database_arn = database_arn
