# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.register_application_output_application import RegisterApplicationOutputApplication
from openapi_server import util


class RegisterApplicationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application: RegisterApplicationOutputApplication=None, operation_id: str=None):
        """RegisterApplicationOutput - a model defined in OpenAPI

        :param application: The application of this RegisterApplicationOutput.
        :param operation_id: The operation_id of this RegisterApplicationOutput.
        """
        self.openapi_types = {
            'application': RegisterApplicationOutputApplication,
            'operation_id': str
        }

        self.attribute_map = {
            'application': 'Application',
            'operation_id': 'OperationId'
        }

        self._application = application
        self._operation_id = operation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterApplicationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterApplicationOutput of this RegisterApplicationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application(self):
        """Gets the application of this RegisterApplicationOutput.


        :return: The application of this RegisterApplicationOutput.
        :rtype: RegisterApplicationOutputApplication
        """
        return self._application

    @application.setter
    def application(self, application):
        """Sets the application of this RegisterApplicationOutput.


        :param application: The application of this RegisterApplicationOutput.
        :type application: RegisterApplicationOutputApplication
        """

        self._application = application

    @property
    def operation_id(self):
        """Gets the operation_id of this RegisterApplicationOutput.


        :return: The operation_id of this RegisterApplicationOutput.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this RegisterApplicationOutput.


        :param operation_id: The operation_id of this RegisterApplicationOutput.
        :type operation_id: str
        """

        self._operation_id = operation_id
