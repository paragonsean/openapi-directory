# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_discovery_status import ApplicationDiscoveryStatus
from openapi_server.models.application_status import ApplicationStatus
from openapi_server.models.application_type import ApplicationType
from openapi_server import util


class Application(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: ApplicationType=None, arn: str=None, app_registry_arn: str=None, status: ApplicationStatus=None, discovery_status: ApplicationDiscoveryStatus=None, components: List=None, last_updated: datetime=None, status_message: str=None):
        """Application - a model defined in OpenAPI

        :param id: The id of this Application.
        :param type: The type of this Application.
        :param arn: The arn of this Application.
        :param app_registry_arn: The app_registry_arn of this Application.
        :param status: The status of this Application.
        :param discovery_status: The discovery_status of this Application.
        :param components: The components of this Application.
        :param last_updated: The last_updated of this Application.
        :param status_message: The status_message of this Application.
        """
        self.openapi_types = {
            'id': str,
            'type': ApplicationType,
            'arn': str,
            'app_registry_arn': str,
            'status': ApplicationStatus,
            'discovery_status': ApplicationDiscoveryStatus,
            'components': List,
            'last_updated': datetime,
            'status_message': str
        }

        self.attribute_map = {
            'id': 'Id',
            'type': 'Type',
            'arn': 'Arn',
            'app_registry_arn': 'AppRegistryArn',
            'status': 'Status',
            'discovery_status': 'DiscoveryStatus',
            'components': 'Components',
            'last_updated': 'LastUpdated',
            'status_message': 'StatusMessage'
        }

        self._id = id
        self._type = type
        self._arn = arn
        self._app_registry_arn = app_registry_arn
        self._status = status
        self._discovery_status = discovery_status
        self._components = components
        self._last_updated = last_updated
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Application':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Application of this Application.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Application.


        :return: The id of this Application.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Application.


        :param id: The id of this Application.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this Application.


        :return: The type of this Application.
        :rtype: ApplicationType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Application.


        :param type: The type of this Application.
        :type type: ApplicationType
        """

        self._type = type

    @property
    def arn(self):
        """Gets the arn of this Application.


        :return: The arn of this Application.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Application.


        :param arn: The arn of this Application.
        :type arn: str
        """

        self._arn = arn

    @property
    def app_registry_arn(self):
        """Gets the app_registry_arn of this Application.


        :return: The app_registry_arn of this Application.
        :rtype: str
        """
        return self._app_registry_arn

    @app_registry_arn.setter
    def app_registry_arn(self, app_registry_arn):
        """Sets the app_registry_arn of this Application.


        :param app_registry_arn: The app_registry_arn of this Application.
        :type app_registry_arn: str
        """

        self._app_registry_arn = app_registry_arn

    @property
    def status(self):
        """Gets the status of this Application.


        :return: The status of this Application.
        :rtype: ApplicationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Application.


        :param status: The status of this Application.
        :type status: ApplicationStatus
        """

        self._status = status

    @property
    def discovery_status(self):
        """Gets the discovery_status of this Application.


        :return: The discovery_status of this Application.
        :rtype: ApplicationDiscoveryStatus
        """
        return self._discovery_status

    @discovery_status.setter
    def discovery_status(self, discovery_status):
        """Sets the discovery_status of this Application.


        :param discovery_status: The discovery_status of this Application.
        :type discovery_status: ApplicationDiscoveryStatus
        """

        self._discovery_status = discovery_status

    @property
    def components(self):
        """Gets the components of this Application.


        :return: The components of this Application.
        :rtype: List
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this Application.


        :param components: The components of this Application.
        :type components: List
        """

        self._components = components

    @property
    def last_updated(self):
        """Gets the last_updated of this Application.


        :return: The last_updated of this Application.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this Application.


        :param last_updated: The last_updated of this Application.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def status_message(self):
        """Gets the status_message of this Application.


        :return: The status_message of this Application.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this Application.


        :param status_message: The status_message of this Application.
        :type status_message: str
        """

        self._status_message = status_message
