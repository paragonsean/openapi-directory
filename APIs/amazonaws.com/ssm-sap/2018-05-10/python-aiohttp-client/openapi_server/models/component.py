# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.component_associated_host import ComponentAssociatedHost
from openapi_server.models.component_resilience import ComponentResilience
from openapi_server.models.component_status import ComponentStatus
from openapi_server.models.component_type import ComponentType
from openapi_server import util


class Component(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_id: str=None, parent_component: str=None, child_components: List=None, application_id: str=None, component_type: ComponentType=None, status: ComponentStatus=None, sap_hostname: str=None, sap_kernel_version: str=None, hdb_version: str=None, resilience: ComponentResilience=None, associated_host: ComponentAssociatedHost=None, databases: List=None, hosts: List=None, primary_host: str=None, last_updated: datetime=None, arn: str=None):
        """Component - a model defined in OpenAPI

        :param component_id: The component_id of this Component.
        :param parent_component: The parent_component of this Component.
        :param child_components: The child_components of this Component.
        :param application_id: The application_id of this Component.
        :param component_type: The component_type of this Component.
        :param status: The status of this Component.
        :param sap_hostname: The sap_hostname of this Component.
        :param sap_kernel_version: The sap_kernel_version of this Component.
        :param hdb_version: The hdb_version of this Component.
        :param resilience: The resilience of this Component.
        :param associated_host: The associated_host of this Component.
        :param databases: The databases of this Component.
        :param hosts: The hosts of this Component.
        :param primary_host: The primary_host of this Component.
        :param last_updated: The last_updated of this Component.
        :param arn: The arn of this Component.
        """
        self.openapi_types = {
            'component_id': str,
            'parent_component': str,
            'child_components': List,
            'application_id': str,
            'component_type': ComponentType,
            'status': ComponentStatus,
            'sap_hostname': str,
            'sap_kernel_version': str,
            'hdb_version': str,
            'resilience': ComponentResilience,
            'associated_host': ComponentAssociatedHost,
            'databases': List,
            'hosts': List,
            'primary_host': str,
            'last_updated': datetime,
            'arn': str
        }

        self.attribute_map = {
            'component_id': 'ComponentId',
            'parent_component': 'ParentComponent',
            'child_components': 'ChildComponents',
            'application_id': 'ApplicationId',
            'component_type': 'ComponentType',
            'status': 'Status',
            'sap_hostname': 'SapHostname',
            'sap_kernel_version': 'SapKernelVersion',
            'hdb_version': 'HdbVersion',
            'resilience': 'Resilience',
            'associated_host': 'AssociatedHost',
            'databases': 'Databases',
            'hosts': 'Hosts',
            'primary_host': 'PrimaryHost',
            'last_updated': 'LastUpdated',
            'arn': 'Arn'
        }

        self._component_id = component_id
        self._parent_component = parent_component
        self._child_components = child_components
        self._application_id = application_id
        self._component_type = component_type
        self._status = status
        self._sap_hostname = sap_hostname
        self._sap_kernel_version = sap_kernel_version
        self._hdb_version = hdb_version
        self._resilience = resilience
        self._associated_host = associated_host
        self._databases = databases
        self._hosts = hosts
        self._primary_host = primary_host
        self._last_updated = last_updated
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Component':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Component of this Component.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_id(self):
        """Gets the component_id of this Component.


        :return: The component_id of this Component.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this Component.


        :param component_id: The component_id of this Component.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def parent_component(self):
        """Gets the parent_component of this Component.


        :return: The parent_component of this Component.
        :rtype: str
        """
        return self._parent_component

    @parent_component.setter
    def parent_component(self, parent_component):
        """Sets the parent_component of this Component.


        :param parent_component: The parent_component of this Component.
        :type parent_component: str
        """

        self._parent_component = parent_component

    @property
    def child_components(self):
        """Gets the child_components of this Component.


        :return: The child_components of this Component.
        :rtype: List
        """
        return self._child_components

    @child_components.setter
    def child_components(self, child_components):
        """Sets the child_components of this Component.


        :param child_components: The child_components of this Component.
        :type child_components: List
        """

        self._child_components = child_components

    @property
    def application_id(self):
        """Gets the application_id of this Component.


        :return: The application_id of this Component.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this Component.


        :param application_id: The application_id of this Component.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def component_type(self):
        """Gets the component_type of this Component.


        :return: The component_type of this Component.
        :rtype: ComponentType
        """
        return self._component_type

    @component_type.setter
    def component_type(self, component_type):
        """Sets the component_type of this Component.


        :param component_type: The component_type of this Component.
        :type component_type: ComponentType
        """

        self._component_type = component_type

    @property
    def status(self):
        """Gets the status of this Component.


        :return: The status of this Component.
        :rtype: ComponentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Component.


        :param status: The status of this Component.
        :type status: ComponentStatus
        """

        self._status = status

    @property
    def sap_hostname(self):
        """Gets the sap_hostname of this Component.


        :return: The sap_hostname of this Component.
        :rtype: str
        """
        return self._sap_hostname

    @sap_hostname.setter
    def sap_hostname(self, sap_hostname):
        """Sets the sap_hostname of this Component.


        :param sap_hostname: The sap_hostname of this Component.
        :type sap_hostname: str
        """

        self._sap_hostname = sap_hostname

    @property
    def sap_kernel_version(self):
        """Gets the sap_kernel_version of this Component.


        :return: The sap_kernel_version of this Component.
        :rtype: str
        """
        return self._sap_kernel_version

    @sap_kernel_version.setter
    def sap_kernel_version(self, sap_kernel_version):
        """Sets the sap_kernel_version of this Component.


        :param sap_kernel_version: The sap_kernel_version of this Component.
        :type sap_kernel_version: str
        """

        self._sap_kernel_version = sap_kernel_version

    @property
    def hdb_version(self):
        """Gets the hdb_version of this Component.


        :return: The hdb_version of this Component.
        :rtype: str
        """
        return self._hdb_version

    @hdb_version.setter
    def hdb_version(self, hdb_version):
        """Sets the hdb_version of this Component.


        :param hdb_version: The hdb_version of this Component.
        :type hdb_version: str
        """

        self._hdb_version = hdb_version

    @property
    def resilience(self):
        """Gets the resilience of this Component.


        :return: The resilience of this Component.
        :rtype: ComponentResilience
        """
        return self._resilience

    @resilience.setter
    def resilience(self, resilience):
        """Sets the resilience of this Component.


        :param resilience: The resilience of this Component.
        :type resilience: ComponentResilience
        """

        self._resilience = resilience

    @property
    def associated_host(self):
        """Gets the associated_host of this Component.


        :return: The associated_host of this Component.
        :rtype: ComponentAssociatedHost
        """
        return self._associated_host

    @associated_host.setter
    def associated_host(self, associated_host):
        """Sets the associated_host of this Component.


        :param associated_host: The associated_host of this Component.
        :type associated_host: ComponentAssociatedHost
        """

        self._associated_host = associated_host

    @property
    def databases(self):
        """Gets the databases of this Component.


        :return: The databases of this Component.
        :rtype: List
        """
        return self._databases

    @databases.setter
    def databases(self, databases):
        """Sets the databases of this Component.


        :param databases: The databases of this Component.
        :type databases: List
        """

        self._databases = databases

    @property
    def hosts(self):
        """Gets the hosts of this Component.


        :return: The hosts of this Component.
        :rtype: List
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts):
        """Sets the hosts of this Component.


        :param hosts: The hosts of this Component.
        :type hosts: List
        """

        self._hosts = hosts

    @property
    def primary_host(self):
        """Gets the primary_host of this Component.


        :return: The primary_host of this Component.
        :rtype: str
        """
        return self._primary_host

    @primary_host.setter
    def primary_host(self, primary_host):
        """Sets the primary_host of this Component.


        :param primary_host: The primary_host of this Component.
        :type primary_host: str
        """

        self._primary_host = primary_host

    @property
    def last_updated(self):
        """Gets the last_updated of this Component.


        :return: The last_updated of this Component.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this Component.


        :param last_updated: The last_updated of this Component.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def arn(self):
        """Gets the arn of this Component.


        :return: The arn of this Component.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Component.


        :param arn: The arn of this Component.
        :type arn: str
        """

        self._arn = arn
