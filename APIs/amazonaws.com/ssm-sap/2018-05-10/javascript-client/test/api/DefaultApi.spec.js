/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSystemsManagerForSap);
  }
}(this, function(expect, AwsSystemsManagerForSap) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSystemsManagerForSap.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('deleteResourcePermission', function() {
      it('should call deleteResourcePermission successfully', function(done) {
        //uncomment below and update the code to test deleteResourcePermission
        //instance.deleteResourcePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deregisterApplication', function() {
      it('should call deregisterApplication successfully', function(done) {
        //uncomment below and update the code to test deregisterApplication
        //instance.deregisterApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplication', function() {
      it('should call getApplication successfully', function(done) {
        //uncomment below and update the code to test getApplication
        //instance.getApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getComponent', function() {
      it('should call getComponent successfully', function(done) {
        //uncomment below and update the code to test getComponent
        //instance.getComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatabase', function() {
      it('should call getDatabase successfully', function(done) {
        //uncomment below and update the code to test getDatabase
        //instance.getDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOperation', function() {
      it('should call getOperation successfully', function(done) {
        //uncomment below and update the code to test getOperation
        //instance.getOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResourcePermission', function() {
      it('should call getResourcePermission successfully', function(done) {
        //uncomment below and update the code to test getResourcePermission
        //instance.getResourcePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApplications', function() {
      it('should call listApplications successfully', function(done) {
        //uncomment below and update the code to test listApplications
        //instance.listApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listComponents', function() {
      it('should call listComponents successfully', function(done) {
        //uncomment below and update the code to test listComponents
        //instance.listComponents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatabases', function() {
      it('should call listDatabases successfully', function(done) {
        //uncomment below and update the code to test listDatabases
        //instance.listDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOperations', function() {
      it('should call listOperations successfully', function(done) {
        //uncomment below and update the code to test listOperations
        //instance.listOperations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putResourcePermission', function() {
      it('should call putResourcePermission successfully', function(done) {
        //uncomment below and update the code to test putResourcePermission
        //instance.putResourcePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerApplication', function() {
      it('should call registerApplication successfully', function(done) {
        //uncomment below and update the code to test registerApplication
        //instance.registerApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startApplicationRefresh', function() {
      it('should call startApplicationRefresh successfully', function(done) {
        //uncomment below and update the code to test startApplicationRefresh
        //instance.startApplicationRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplicationSettings', function() {
      it('should call updateApplicationSettings successfully', function(done) {
        //uncomment below and update the code to test updateApplicationSettings
        //instance.updateApplicationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
