/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSystemsManagerForSap);
  }
}(this, function(expect, AwsSystemsManagerForSap) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSystemsManagerForSap.ApplicationCredential();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationCredential', function() {
    it('should create an instance of ApplicationCredential', function() {
      // uncomment below and update the code to test ApplicationCredential
      //var instance = new AwsSystemsManagerForSap.ApplicationCredential();
      //expect(instance).to.be.a(AwsSystemsManagerForSap.ApplicationCredential);
    });

    it('should have the property databaseName (base name: "DatabaseName")', function() {
      // uncomment below and update the code to test the property databaseName
      //var instance = new AwsSystemsManagerForSap.ApplicationCredential();
      //expect(instance).to.be();
    });

    it('should have the property credentialType (base name: "CredentialType")', function() {
      // uncomment below and update the code to test the property credentialType
      //var instance = new AwsSystemsManagerForSap.ApplicationCredential();
      //expect(instance).to.be();
    });

    it('should have the property secretId (base name: "SecretId")', function() {
      // uncomment below and update the code to test the property secretId
      //var instance = new AwsSystemsManagerForSap.ApplicationCredential();
      //expect(instance).to.be();
    });

  });

}));
