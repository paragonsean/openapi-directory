/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComponent_Resilience.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComponent_Resilience::OAIComponent_Resilience(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComponent_Resilience::OAIComponent_Resilience() {
    this->initializeModel();
}

OAIComponent_Resilience::~OAIComponent_Resilience() {}

void OAIComponent_Resilience::initializeModel() {

    m_hsr_tier_isSet = false;
    m_hsr_tier_isValid = false;

    m_hsr_replication_mode_isSet = false;
    m_hsr_replication_mode_isValid = false;

    m_hsr_operation_mode_isSet = false;
    m_hsr_operation_mode_isValid = false;

    m_cluster_status_isSet = false;
    m_cluster_status_isValid = false;
}

void OAIComponent_Resilience::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComponent_Resilience::fromJsonObject(QJsonObject json) {

    m_hsr_tier_isValid = ::OpenAPI::fromJsonValue(m_hsr_tier, json[QString("HsrTier")]);
    m_hsr_tier_isSet = !json[QString("HsrTier")].isNull() && m_hsr_tier_isValid;

    m_hsr_replication_mode_isValid = ::OpenAPI::fromJsonValue(m_hsr_replication_mode, json[QString("HsrReplicationMode")]);
    m_hsr_replication_mode_isSet = !json[QString("HsrReplicationMode")].isNull() && m_hsr_replication_mode_isValid;

    m_hsr_operation_mode_isValid = ::OpenAPI::fromJsonValue(m_hsr_operation_mode, json[QString("HsrOperationMode")]);
    m_hsr_operation_mode_isSet = !json[QString("HsrOperationMode")].isNull() && m_hsr_operation_mode_isValid;

    m_cluster_status_isValid = ::OpenAPI::fromJsonValue(m_cluster_status, json[QString("ClusterStatus")]);
    m_cluster_status_isSet = !json[QString("ClusterStatus")].isNull() && m_cluster_status_isValid;
}

QString OAIComponent_Resilience::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComponent_Resilience::asJsonObject() const {
    QJsonObject obj;
    if (m_hsr_tier_isSet) {
        obj.insert(QString("HsrTier"), ::OpenAPI::toJsonValue(m_hsr_tier));
    }
    if (m_hsr_replication_mode.isSet()) {
        obj.insert(QString("HsrReplicationMode"), ::OpenAPI::toJsonValue(m_hsr_replication_mode));
    }
    if (m_hsr_operation_mode.isSet()) {
        obj.insert(QString("HsrOperationMode"), ::OpenAPI::toJsonValue(m_hsr_operation_mode));
    }
    if (m_cluster_status.isSet()) {
        obj.insert(QString("ClusterStatus"), ::OpenAPI::toJsonValue(m_cluster_status));
    }
    return obj;
}

QString OAIComponent_Resilience::getHsrTier() const {
    return m_hsr_tier;
}
void OAIComponent_Resilience::setHsrTier(const QString &hsr_tier) {
    m_hsr_tier = hsr_tier;
    m_hsr_tier_isSet = true;
}

bool OAIComponent_Resilience::is_hsr_tier_Set() const{
    return m_hsr_tier_isSet;
}

bool OAIComponent_Resilience::is_hsr_tier_Valid() const{
    return m_hsr_tier_isValid;
}

OAIReplicationMode OAIComponent_Resilience::getHsrReplicationMode() const {
    return m_hsr_replication_mode;
}
void OAIComponent_Resilience::setHsrReplicationMode(const OAIReplicationMode &hsr_replication_mode) {
    m_hsr_replication_mode = hsr_replication_mode;
    m_hsr_replication_mode_isSet = true;
}

bool OAIComponent_Resilience::is_hsr_replication_mode_Set() const{
    return m_hsr_replication_mode_isSet;
}

bool OAIComponent_Resilience::is_hsr_replication_mode_Valid() const{
    return m_hsr_replication_mode_isValid;
}

OAIOperationMode OAIComponent_Resilience::getHsrOperationMode() const {
    return m_hsr_operation_mode;
}
void OAIComponent_Resilience::setHsrOperationMode(const OAIOperationMode &hsr_operation_mode) {
    m_hsr_operation_mode = hsr_operation_mode;
    m_hsr_operation_mode_isSet = true;
}

bool OAIComponent_Resilience::is_hsr_operation_mode_Set() const{
    return m_hsr_operation_mode_isSet;
}

bool OAIComponent_Resilience::is_hsr_operation_mode_Valid() const{
    return m_hsr_operation_mode_isValid;
}

OAIClusterStatus OAIComponent_Resilience::getClusterStatus() const {
    return m_cluster_status;
}
void OAIComponent_Resilience::setClusterStatus(const OAIClusterStatus &cluster_status) {
    m_cluster_status = cluster_status;
    m_cluster_status_isSet = true;
}

bool OAIComponent_Resilience::is_cluster_status_Set() const{
    return m_cluster_status_isSet;
}

bool OAIComponent_Resilience::is_cluster_status_Valid() const{
    return m_cluster_status_isValid;
}

bool OAIComponent_Resilience::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hsr_tier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hsr_replication_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hsr_operation_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComponent_Resilience::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
