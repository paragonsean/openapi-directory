/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApplicationSettingsInput_Backint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApplicationSettingsInput_Backint::OAIUpdateApplicationSettingsInput_Backint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApplicationSettingsInput_Backint::OAIUpdateApplicationSettingsInput_Backint() {
    this->initializeModel();
}

OAIUpdateApplicationSettingsInput_Backint::~OAIUpdateApplicationSettingsInput_Backint() {}

void OAIUpdateApplicationSettingsInput_Backint::initializeModel() {

    m_backint_mode_isSet = false;
    m_backint_mode_isValid = false;

    m_ensure_no_backup_in_process_isSet = false;
    m_ensure_no_backup_in_process_isValid = false;
}

void OAIUpdateApplicationSettingsInput_Backint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApplicationSettingsInput_Backint::fromJsonObject(QJsonObject json) {

    m_backint_mode_isValid = ::OpenAPI::fromJsonValue(m_backint_mode, json[QString("BackintMode")]);
    m_backint_mode_isSet = !json[QString("BackintMode")].isNull() && m_backint_mode_isValid;

    m_ensure_no_backup_in_process_isValid = ::OpenAPI::fromJsonValue(m_ensure_no_backup_in_process, json[QString("EnsureNoBackupInProcess")]);
    m_ensure_no_backup_in_process_isSet = !json[QString("EnsureNoBackupInProcess")].isNull() && m_ensure_no_backup_in_process_isValid;
}

QString OAIUpdateApplicationSettingsInput_Backint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApplicationSettingsInput_Backint::asJsonObject() const {
    QJsonObject obj;
    if (m_backint_mode.isSet()) {
        obj.insert(QString("BackintMode"), ::OpenAPI::toJsonValue(m_backint_mode));
    }
    if (m_ensure_no_backup_in_process_isSet) {
        obj.insert(QString("EnsureNoBackupInProcess"), ::OpenAPI::toJsonValue(m_ensure_no_backup_in_process));
    }
    return obj;
}

OAIBackintMode OAIUpdateApplicationSettingsInput_Backint::getBackintMode() const {
    return m_backint_mode;
}
void OAIUpdateApplicationSettingsInput_Backint::setBackintMode(const OAIBackintMode &backint_mode) {
    m_backint_mode = backint_mode;
    m_backint_mode_isSet = true;
}

bool OAIUpdateApplicationSettingsInput_Backint::is_backint_mode_Set() const{
    return m_backint_mode_isSet;
}

bool OAIUpdateApplicationSettingsInput_Backint::is_backint_mode_Valid() const{
    return m_backint_mode_isValid;
}

bool OAIUpdateApplicationSettingsInput_Backint::getEnsureNoBackupInProcess() const {
    return m_ensure_no_backup_in_process;
}
void OAIUpdateApplicationSettingsInput_Backint::setEnsureNoBackupInProcess(const bool &ensure_no_backup_in_process) {
    m_ensure_no_backup_in_process = ensure_no_backup_in_process;
    m_ensure_no_backup_in_process_isSet = true;
}

bool OAIUpdateApplicationSettingsInput_Backint::is_ensure_no_backup_in_process_Set() const{
    return m_ensure_no_backup_in_process_isSet;
}

bool OAIUpdateApplicationSettingsInput_Backint::is_ensure_no_backup_in_process_Valid() const{
    return m_ensure_no_backup_in_process_isValid;
}

bool OAIUpdateApplicationSettingsInput_Backint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backint_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ensure_no_backup_in_process_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApplicationSettingsInput_Backint::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_backint_mode_isValid && m_ensure_no_backup_in_process_isValid && true;
}

} // namespace OpenAPI
