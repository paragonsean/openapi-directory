/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartApplicationRefreshInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartApplicationRefreshInput::OAIStartApplicationRefreshInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartApplicationRefreshInput::OAIStartApplicationRefreshInput() {
    this->initializeModel();
}

OAIStartApplicationRefreshInput::~OAIStartApplicationRefreshInput() {}

void OAIStartApplicationRefreshInput::initializeModel() {

    m_application_id_isSet = false;
    m_application_id_isValid = false;
}

void OAIStartApplicationRefreshInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartApplicationRefreshInput::fromJsonObject(QJsonObject json) {

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("ApplicationId")]);
    m_application_id_isSet = !json[QString("ApplicationId")].isNull() && m_application_id_isValid;
}

QString OAIStartApplicationRefreshInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartApplicationRefreshInput::asJsonObject() const {
    QJsonObject obj;
    if (m_application_id_isSet) {
        obj.insert(QString("ApplicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    return obj;
}

QString OAIStartApplicationRefreshInput::getApplicationId() const {
    return m_application_id;
}
void OAIStartApplicationRefreshInput::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIStartApplicationRefreshInput::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIStartApplicationRefreshInput::is_application_id_Valid() const{
    return m_application_id_isValid;
}

bool OAIStartApplicationRefreshInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartApplicationRefreshInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_id_isValid && true;
}

} // namespace OpenAPI
