/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationDiscoveryStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationDiscoveryStatus::OAIApplicationDiscoveryStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationDiscoveryStatus::OAIApplicationDiscoveryStatus() {
    this->initializeModel();
}

OAIApplicationDiscoveryStatus::~OAIApplicationDiscoveryStatus() {}

void OAIApplicationDiscoveryStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApplicationDiscoveryStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApplicationDiscoveryStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SUCCESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationDiscoveryStatus::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REGISTRATION_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationDiscoveryStatus::REGISTRATION_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REFRESH_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationDiscoveryStatus::REFRESH_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REGISTERING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationDiscoveryStatus::REGISTERING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationDiscoveryStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApplicationDiscoveryStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApplicationDiscoveryStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApplicationDiscoveryStatus::SUCCESS:
            val = "SUCCESS";
            break;
        case eOAIApplicationDiscoveryStatus::REGISTRATION_FAILED:
            val = "REGISTRATION_FAILED";
            break;
        case eOAIApplicationDiscoveryStatus::REFRESH_FAILED:
            val = "REFRESH_FAILED";
            break;
        case eOAIApplicationDiscoveryStatus::REGISTERING:
            val = "REGISTERING";
            break;
        case eOAIApplicationDiscoveryStatus::DELETING:
            val = "DELETING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApplicationDiscoveryStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApplicationDiscoveryStatus::eOAIApplicationDiscoveryStatus OAIApplicationDiscoveryStatus::getValue() const {
    return m_value;
}

void OAIApplicationDiscoveryStatus::setValue(const OAIApplicationDiscoveryStatus::eOAIApplicationDiscoveryStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApplicationDiscoveryStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIApplicationDiscoveryStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
