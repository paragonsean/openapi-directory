/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteResourcePermissionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteResourcePermissionOutput::OAIDeleteResourcePermissionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteResourcePermissionOutput::OAIDeleteResourcePermissionOutput() {
    this->initializeModel();
}

OAIDeleteResourcePermissionOutput::~OAIDeleteResourcePermissionOutput() {}

void OAIDeleteResourcePermissionOutput::initializeModel() {

    m_policy_isSet = false;
    m_policy_isValid = false;
}

void OAIDeleteResourcePermissionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteResourcePermissionOutput::fromJsonObject(QJsonObject json) {

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("Policy")]);
    m_policy_isSet = !json[QString("Policy")].isNull() && m_policy_isValid;
}

QString OAIDeleteResourcePermissionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteResourcePermissionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_isSet) {
        obj.insert(QString("Policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    return obj;
}

QString OAIDeleteResourcePermissionOutput::getPolicy() const {
    return m_policy;
}
void OAIDeleteResourcePermissionOutput::setPolicy(const QString &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIDeleteResourcePermissionOutput::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIDeleteResourcePermissionOutput::is_policy_Valid() const{
    return m_policy_isValid;
}

bool OAIDeleteResourcePermissionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteResourcePermissionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
