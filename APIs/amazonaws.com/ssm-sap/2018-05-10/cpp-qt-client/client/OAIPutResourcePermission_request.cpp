/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutResourcePermission_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutResourcePermission_request::OAIPutResourcePermission_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutResourcePermission_request::OAIPutResourcePermission_request() {
    this->initializeModel();
}

OAIPutResourcePermission_request::~OAIPutResourcePermission_request() {}

void OAIPutResourcePermission_request::initializeModel() {

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_source_resource_arn_isSet = false;
    m_source_resource_arn_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;
}

void OAIPutResourcePermission_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutResourcePermission_request::fromJsonObject(QJsonObject json) {

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("ActionType")]);
    m_action_type_isSet = !json[QString("ActionType")].isNull() && m_action_type_isValid;

    m_source_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_source_resource_arn, json[QString("SourceResourceArn")]);
    m_source_resource_arn_isSet = !json[QString("SourceResourceArn")].isNull() && m_source_resource_arn_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;
}

QString OAIPutResourcePermission_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutResourcePermission_request::asJsonObject() const {
    QJsonObject obj;
    if (m_action_type_isSet) {
        obj.insert(QString("ActionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_source_resource_arn_isSet) {
        obj.insert(QString("SourceResourceArn"), ::OpenAPI::toJsonValue(m_source_resource_arn));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    return obj;
}

QString OAIPutResourcePermission_request::getActionType() const {
    return m_action_type;
}
void OAIPutResourcePermission_request::setActionType(const QString &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAIPutResourcePermission_request::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAIPutResourcePermission_request::is_action_type_Valid() const{
    return m_action_type_isValid;
}

QString OAIPutResourcePermission_request::getSourceResourceArn() const {
    return m_source_resource_arn;
}
void OAIPutResourcePermission_request::setSourceResourceArn(const QString &source_resource_arn) {
    m_source_resource_arn = source_resource_arn;
    m_source_resource_arn_isSet = true;
}

bool OAIPutResourcePermission_request::is_source_resource_arn_Set() const{
    return m_source_resource_arn_isSet;
}

bool OAIPutResourcePermission_request::is_source_resource_arn_Valid() const{
    return m_source_resource_arn_isValid;
}

QString OAIPutResourcePermission_request::getResourceArn() const {
    return m_resource_arn;
}
void OAIPutResourcePermission_request::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIPutResourcePermission_request::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIPutResourcePermission_request::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

bool OAIPutResourcePermission_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutResourcePermission_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_type_isValid && m_source_resource_arn_isValid && m_resource_arn_isValid && true;
}

} // namespace OpenAPI
