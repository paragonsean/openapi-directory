/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDatabaseOutput_Database.h
 *
 * 
 */

#ifndef OAIGetDatabaseOutput_Database_H
#define OAIGetDatabaseOutput_Database_H

#include <QJsonObject>

#include "OAIDatabaseStatus.h"
#include "OAIDatabaseType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetDatabaseOutput_Database : public OAIObject {
public:
    OAIGetDatabaseOutput_Database();
    OAIGetDatabaseOutput_Database(QString json);
    ~OAIGetDatabaseOutput_Database() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getComponentId() const;
    void setComponentId(const QString &component_id);
    bool is_component_id_Set() const;
    bool is_component_id_Valid() const;

    QList getCredentials() const;
    void setCredentials(const QList &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QString getDatabaseId() const;
    void setDatabaseId(const QString &database_id);
    bool is_database_id_Set() const;
    bool is_database_id_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    OAIDatabaseType getDatabaseType() const;
    void setDatabaseType(const OAIDatabaseType &database_type);
    bool is_database_type_Set() const;
    bool is_database_type_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIDatabaseStatus getStatus() const;
    void setStatus(const OAIDatabaseStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getPrimaryHost() const;
    void setPrimaryHost(const QString &primary_host);
    bool is_primary_host_Set() const;
    bool is_primary_host_Valid() const;

    qint32 getSqlPort() const;
    void setSqlPort(const qint32 &sql_port);
    bool is_sql_port_Set() const;
    bool is_sql_port_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_component_id;
    bool m_component_id_isSet;
    bool m_component_id_isValid;

    QList m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QString m_database_id;
    bool m_database_id_isSet;
    bool m_database_id_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    OAIDatabaseType m_database_type;
    bool m_database_type_isSet;
    bool m_database_type_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIDatabaseStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_primary_host;
    bool m_primary_host_isSet;
    bool m_primary_host_isValid;

    qint32 m_sql_port;
    bool m_sql_port_isSet;
    bool m_sql_port_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDatabaseOutput_Database)

#endif // OAIGetDatabaseOutput_Database_H
