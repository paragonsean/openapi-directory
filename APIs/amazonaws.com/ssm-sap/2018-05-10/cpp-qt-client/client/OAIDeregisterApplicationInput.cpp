/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeregisterApplicationInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeregisterApplicationInput::OAIDeregisterApplicationInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeregisterApplicationInput::OAIDeregisterApplicationInput() {
    this->initializeModel();
}

OAIDeregisterApplicationInput::~OAIDeregisterApplicationInput() {}

void OAIDeregisterApplicationInput::initializeModel() {

    m_application_id_isSet = false;
    m_application_id_isValid = false;
}

void OAIDeregisterApplicationInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeregisterApplicationInput::fromJsonObject(QJsonObject json) {

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("ApplicationId")]);
    m_application_id_isSet = !json[QString("ApplicationId")].isNull() && m_application_id_isValid;
}

QString OAIDeregisterApplicationInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeregisterApplicationInput::asJsonObject() const {
    QJsonObject obj;
    if (m_application_id_isSet) {
        obj.insert(QString("ApplicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    return obj;
}

QString OAIDeregisterApplicationInput::getApplicationId() const {
    return m_application_id;
}
void OAIDeregisterApplicationInput::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIDeregisterApplicationInput::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIDeregisterApplicationInput::is_application_id_Valid() const{
    return m_application_id_isValid;
}

bool OAIDeregisterApplicationInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeregisterApplicationInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_id_isValid && true;
}

} // namespace OpenAPI
