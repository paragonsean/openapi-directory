/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplicationMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplicationMode::OAIReplicationMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplicationMode::OAIReplicationMode() {
    this->initializeModel();
}

OAIReplicationMode::~OAIReplicationMode() {}

void OAIReplicationMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReplicationMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReplicationMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PRIMARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReplicationMode::PRIMARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReplicationMode::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SYNC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReplicationMode::SYNC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SYNCMEM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReplicationMode::SYNCMEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ASYNC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReplicationMode::ASYNC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReplicationMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReplicationMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReplicationMode::PRIMARY:
            val = "PRIMARY";
            break;
        case eOAIReplicationMode::NONE:
            val = "NONE";
            break;
        case eOAIReplicationMode::SYNC:
            val = "SYNC";
            break;
        case eOAIReplicationMode::SYNCMEM:
            val = "SYNCMEM";
            break;
        case eOAIReplicationMode::ASYNC:
            val = "ASYNC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReplicationMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReplicationMode::eOAIReplicationMode OAIReplicationMode::getValue() const {
    return m_value;
}

void OAIReplicationMode::setValue(const OAIReplicationMode::eOAIReplicationMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReplicationMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIReplicationMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
