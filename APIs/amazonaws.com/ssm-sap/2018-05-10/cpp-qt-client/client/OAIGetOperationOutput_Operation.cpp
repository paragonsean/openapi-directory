/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOperationOutput_Operation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOperationOutput_Operation::OAIGetOperationOutput_Operation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOperationOutput_Operation::OAIGetOperationOutput_Operation() {
    this->initializeModel();
}

OAIGetOperationOutput_Operation::~OAIGetOperationOutput_Operation() {}

void OAIGetOperationOutput_Operation::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;
}

void OAIGetOperationOutput_Operation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOperationOutput_Operation::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("StatusMessage")]);
    m_status_message_isSet = !json[QString("StatusMessage")].isNull() && m_status_message_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("Properties")]);
    m_properties_isSet = !json[QString("Properties")].isNull() && m_properties_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("ResourceType")]);
    m_resource_type_isSet = !json[QString("ResourceType")].isNull() && m_resource_type_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("ResourceId")]);
    m_resource_id_isSet = !json[QString("ResourceId")].isNull() && m_resource_id_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;
}

QString OAIGetOperationOutput_Operation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOperationOutput_Operation::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("StatusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("Properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("ResourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("ResourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    return obj;
}

QString OAIGetOperationOutput_Operation::getId() const {
    return m_id;
}
void OAIGetOperationOutput_Operation::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetOperationOutput_Operation::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGetOperationOutput_Operation::getType() const {
    return m_type;
}
void OAIGetOperationOutput_Operation::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGetOperationOutput_Operation::is_type_Valid() const{
    return m_type_isValid;
}

OAIOperationStatus OAIGetOperationOutput_Operation::getStatus() const {
    return m_status;
}
void OAIGetOperationOutput_Operation::setStatus(const OAIOperationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetOperationOutput_Operation::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetOperationOutput_Operation::getStatusMessage() const {
    return m_status_message;
}
void OAIGetOperationOutput_Operation::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIGetOperationOutput_Operation::is_status_message_Valid() const{
    return m_status_message_isValid;
}

QMap OAIGetOperationOutput_Operation::getProperties() const {
    return m_properties;
}
void OAIGetOperationOutput_Operation::setProperties(const QMap &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGetOperationOutput_Operation::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGetOperationOutput_Operation::getResourceType() const {
    return m_resource_type;
}
void OAIGetOperationOutput_Operation::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGetOperationOutput_Operation::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QString OAIGetOperationOutput_Operation::getResourceId() const {
    return m_resource_id;
}
void OAIGetOperationOutput_Operation::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIGetOperationOutput_Operation::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAIGetOperationOutput_Operation::getResourceArn() const {
    return m_resource_arn;
}
void OAIGetOperationOutput_Operation::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIGetOperationOutput_Operation::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QDateTime OAIGetOperationOutput_Operation::getStartTime() const {
    return m_start_time;
}
void OAIGetOperationOutput_Operation::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGetOperationOutput_Operation::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QDateTime OAIGetOperationOutput_Operation::getEndTime() const {
    return m_end_time;
}
void OAIGetOperationOutput_Operation::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGetOperationOutput_Operation::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QDateTime OAIGetOperationOutput_Operation::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIGetOperationOutput_Operation::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIGetOperationOutput_Operation::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIGetOperationOutput_Operation::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

bool OAIGetOperationOutput_Operation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOperationOutput_Operation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
