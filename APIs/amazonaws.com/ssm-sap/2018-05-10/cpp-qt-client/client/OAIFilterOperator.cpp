/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterOperator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterOperator::OAIFilterOperator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterOperator::OAIFilterOperator() {
    this->initializeModel();
}

OAIFilterOperator::~OAIFilterOperator() {}

void OAIFilterOperator::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFilterOperator::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFilterOperator::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Equals", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperator::EQUALS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GreaterThanOrEquals", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperator::GREATERTHANOREQUALS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LessThanOrEquals", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperator::LESSTHANOREQUALS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFilterOperator::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFilterOperator::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFilterOperator::EQUALS:
            val = "Equals";
            break;
        case eOAIFilterOperator::GREATERTHANOREQUALS:
            val = "GreaterThanOrEquals";
            break;
        case eOAIFilterOperator::LESSTHANOREQUALS:
            val = "LessThanOrEquals";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFilterOperator::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFilterOperator::eOAIFilterOperator OAIFilterOperator::getValue() const {
    return m_value;
}

void OAIFilterOperator::setValue(const OAIFilterOperator::eOAIFilterOperator& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFilterOperator::isSet() const {
    
    return m_value_isSet;
}

bool OAIFilterOperator::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
