/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationType::OAIApplicationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationType::OAIApplicationType() {
    this->initializeModel();
}

OAIApplicationType::~OAIApplicationType() {}

void OAIApplicationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApplicationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApplicationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HANA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationType::HANA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApplicationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApplicationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApplicationType::HANA:
            val = "HANA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApplicationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApplicationType::eOAIApplicationType OAIApplicationType::getValue() const {
    return m_value;
}

void OAIApplicationType::setValue(const OAIApplicationType::eOAIApplicationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApplicationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIApplicationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
