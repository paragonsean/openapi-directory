/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOperationOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOperationOutput::OAIGetOperationOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOperationOutput::OAIGetOperationOutput() {
    this->initializeModel();
}

OAIGetOperationOutput::~OAIGetOperationOutput() {}

void OAIGetOperationOutput::initializeModel() {

    m_operation_isSet = false;
    m_operation_isValid = false;
}

void OAIGetOperationOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOperationOutput::fromJsonObject(QJsonObject json) {

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("Operation")]);
    m_operation_isSet = !json[QString("Operation")].isNull() && m_operation_isValid;
}

QString OAIGetOperationOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOperationOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_operation.isSet()) {
        obj.insert(QString("Operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    return obj;
}

OAIGetOperationOutput_Operation OAIGetOperationOutput::getOperation() const {
    return m_operation;
}
void OAIGetOperationOutput::setOperation(const OAIGetOperationOutput_Operation &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIGetOperationOutput::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIGetOperationOutput::is_operation_Valid() const{
    return m_operation_isValid;
}

bool OAIGetOperationOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOperationOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
