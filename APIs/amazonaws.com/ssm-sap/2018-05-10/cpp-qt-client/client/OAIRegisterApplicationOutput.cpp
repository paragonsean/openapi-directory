/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisterApplicationOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisterApplicationOutput::OAIRegisterApplicationOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisterApplicationOutput::OAIRegisterApplicationOutput() {
    this->initializeModel();
}

OAIRegisterApplicationOutput::~OAIRegisterApplicationOutput() {}

void OAIRegisterApplicationOutput::initializeModel() {

    m_application_isSet = false;
    m_application_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;
}

void OAIRegisterApplicationOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisterApplicationOutput::fromJsonObject(QJsonObject json) {

    m_application_isValid = ::OpenAPI::fromJsonValue(m_application, json[QString("Application")]);
    m_application_isSet = !json[QString("Application")].isNull() && m_application_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("OperationId")]);
    m_operation_id_isSet = !json[QString("OperationId")].isNull() && m_operation_id_isValid;
}

QString OAIRegisterApplicationOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisterApplicationOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_application.isSet()) {
        obj.insert(QString("Application"), ::OpenAPI::toJsonValue(m_application));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("OperationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    return obj;
}

OAIRegisterApplicationOutput_Application OAIRegisterApplicationOutput::getApplication() const {
    return m_application;
}
void OAIRegisterApplicationOutput::setApplication(const OAIRegisterApplicationOutput_Application &application) {
    m_application = application;
    m_application_isSet = true;
}

bool OAIRegisterApplicationOutput::is_application_Set() const{
    return m_application_isSet;
}

bool OAIRegisterApplicationOutput::is_application_Valid() const{
    return m_application_isValid;
}

QString OAIRegisterApplicationOutput::getOperationId() const {
    return m_operation_id;
}
void OAIRegisterApplicationOutput::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIRegisterApplicationOutput::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIRegisterApplicationOutput::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

bool OAIRegisterApplicationOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisterApplicationOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
