/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartApplicationRefreshOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartApplicationRefreshOutput::OAIStartApplicationRefreshOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartApplicationRefreshOutput::OAIStartApplicationRefreshOutput() {
    this->initializeModel();
}

OAIStartApplicationRefreshOutput::~OAIStartApplicationRefreshOutput() {}

void OAIStartApplicationRefreshOutput::initializeModel() {

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;
}

void OAIStartApplicationRefreshOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartApplicationRefreshOutput::fromJsonObject(QJsonObject json) {

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("OperationId")]);
    m_operation_id_isSet = !json[QString("OperationId")].isNull() && m_operation_id_isValid;
}

QString OAIStartApplicationRefreshOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartApplicationRefreshOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_id_isSet) {
        obj.insert(QString("OperationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    return obj;
}

QString OAIStartApplicationRefreshOutput::getOperationId() const {
    return m_operation_id;
}
void OAIStartApplicationRefreshOutput::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIStartApplicationRefreshOutput::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIStartApplicationRefreshOutput::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

bool OAIStartApplicationRefreshOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartApplicationRefreshOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
