/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApplicationSettingsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApplicationSettingsOutput::OAIUpdateApplicationSettingsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApplicationSettingsOutput::OAIUpdateApplicationSettingsOutput() {
    this->initializeModel();
}

OAIUpdateApplicationSettingsOutput::~OAIUpdateApplicationSettingsOutput() {}

void OAIUpdateApplicationSettingsOutput::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_operation_ids_isSet = false;
    m_operation_ids_isValid = false;
}

void OAIUpdateApplicationSettingsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApplicationSettingsOutput::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;

    m_operation_ids_isValid = ::OpenAPI::fromJsonValue(m_operation_ids, json[QString("OperationIds")]);
    m_operation_ids_isSet = !json[QString("OperationIds")].isNull() && m_operation_ids_isValid;
}

QString OAIUpdateApplicationSettingsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApplicationSettingsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_operation_ids.isSet()) {
        obj.insert(QString("OperationIds"), ::OpenAPI::toJsonValue(m_operation_ids));
    }
    return obj;
}

QString OAIUpdateApplicationSettingsOutput::getMessage() const {
    return m_message;
}
void OAIUpdateApplicationSettingsOutput::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIUpdateApplicationSettingsOutput::is_message_Set() const{
    return m_message_isSet;
}

bool OAIUpdateApplicationSettingsOutput::is_message_Valid() const{
    return m_message_isValid;
}

QList OAIUpdateApplicationSettingsOutput::getOperationIds() const {
    return m_operation_ids;
}
void OAIUpdateApplicationSettingsOutput::setOperationIds(const QList &operation_ids) {
    m_operation_ids = operation_ids;
    m_operation_ids_isSet = true;
}

bool OAIUpdateApplicationSettingsOutput::is_operation_ids_Set() const{
    return m_operation_ids_isSet;
}

bool OAIUpdateApplicationSettingsOutput::is_operation_ids_Valid() const{
    return m_operation_ids_isValid;
}

bool OAIUpdateApplicationSettingsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApplicationSettingsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
