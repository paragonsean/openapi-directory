/**
 * AWS Systems Manager for SAP
 * This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. 
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApplicationSettings_request_Backint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApplicationSettings_request_Backint::OAIUpdateApplicationSettings_request_Backint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApplicationSettings_request_Backint::OAIUpdateApplicationSettings_request_Backint() {
    this->initializeModel();
}

OAIUpdateApplicationSettings_request_Backint::~OAIUpdateApplicationSettings_request_Backint() {}

void OAIUpdateApplicationSettings_request_Backint::initializeModel() {

    m_backint_mode_isSet = false;
    m_backint_mode_isValid = false;

    m_ensure_no_backup_in_process_isSet = false;
    m_ensure_no_backup_in_process_isValid = false;
}

void OAIUpdateApplicationSettings_request_Backint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApplicationSettings_request_Backint::fromJsonObject(QJsonObject json) {

    m_backint_mode_isValid = ::OpenAPI::fromJsonValue(m_backint_mode, json[QString("BackintMode")]);
    m_backint_mode_isSet = !json[QString("BackintMode")].isNull() && m_backint_mode_isValid;

    m_ensure_no_backup_in_process_isValid = ::OpenAPI::fromJsonValue(m_ensure_no_backup_in_process, json[QString("EnsureNoBackupInProcess")]);
    m_ensure_no_backup_in_process_isSet = !json[QString("EnsureNoBackupInProcess")].isNull() && m_ensure_no_backup_in_process_isValid;
}

QString OAIUpdateApplicationSettings_request_Backint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApplicationSettings_request_Backint::asJsonObject() const {
    QJsonObject obj;
    if (m_backint_mode.isSet()) {
        obj.insert(QString("BackintMode"), ::OpenAPI::toJsonValue(m_backint_mode));
    }
    if (m_ensure_no_backup_in_process_isSet) {
        obj.insert(QString("EnsureNoBackupInProcess"), ::OpenAPI::toJsonValue(m_ensure_no_backup_in_process));
    }
    return obj;
}

OAIBackintMode OAIUpdateApplicationSettings_request_Backint::getBackintMode() const {
    return m_backint_mode;
}
void OAIUpdateApplicationSettings_request_Backint::setBackintMode(const OAIBackintMode &backint_mode) {
    m_backint_mode = backint_mode;
    m_backint_mode_isSet = true;
}

bool OAIUpdateApplicationSettings_request_Backint::is_backint_mode_Set() const{
    return m_backint_mode_isSet;
}

bool OAIUpdateApplicationSettings_request_Backint::is_backint_mode_Valid() const{
    return m_backint_mode_isValid;
}

bool OAIUpdateApplicationSettings_request_Backint::getEnsureNoBackupInProcess() const {
    return m_ensure_no_backup_in_process;
}
void OAIUpdateApplicationSettings_request_Backint::setEnsureNoBackupInProcess(const bool &ensure_no_backup_in_process) {
    m_ensure_no_backup_in_process = ensure_no_backup_in_process;
    m_ensure_no_backup_in_process_isSet = true;
}

bool OAIUpdateApplicationSettings_request_Backint::is_ensure_no_backup_in_process_Set() const{
    return m_ensure_no_backup_in_process_isSet;
}

bool OAIUpdateApplicationSettings_request_Backint::is_ensure_no_backup_in_process_Valid() const{
    return m_ensure_no_backup_in_process_isValid;
}

bool OAIUpdateApplicationSettings_request_Backint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backint_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ensure_no_backup_in_process_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApplicationSettings_request_Backint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
