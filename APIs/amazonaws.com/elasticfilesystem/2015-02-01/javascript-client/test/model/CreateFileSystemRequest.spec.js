/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonElasticFileSystem);
  }
}(this, function(expect, AmazonElasticFileSystem) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateFileSystemRequest', function() {
    it('should create an instance of CreateFileSystemRequest', function() {
      // uncomment below and update the code to test CreateFileSystemRequest
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be.a(AmazonElasticFileSystem.CreateFileSystemRequest);
    });

    it('should have the property creationToken (base name: "CreationToken")', function() {
      // uncomment below and update the code to test the property creationToken
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property performanceMode (base name: "PerformanceMode")', function() {
      // uncomment below and update the code to test the property performanceMode
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property encrypted (base name: "Encrypted")', function() {
      // uncomment below and update the code to test the property encrypted
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property kmsKeyId (base name: "KmsKeyId")', function() {
      // uncomment below and update the code to test the property kmsKeyId
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property throughputMode (base name: "ThroughputMode")', function() {
      // uncomment below and update the code to test the property throughputMode
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property provisionedThroughputInMibps (base name: "ProvisionedThroughputInMibps")', function() {
      // uncomment below and update the code to test the property provisionedThroughputInMibps
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property availabilityZoneName (base name: "AvailabilityZoneName")', function() {
      // uncomment below and update the code to test the property availabilityZoneName
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property backup (base name: "Backup")', function() {
      // uncomment below and update the code to test the property backup
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonElasticFileSystem.CreateFileSystemRequest();
      //expect(instance).to.be();
    });

  });

}));
