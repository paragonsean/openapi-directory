/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonElasticFileSystem);
  }
}(this, function(expect, AmazonElasticFileSystem) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonElasticFileSystem.DescribeAccessPointsResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeAccessPointsResponse', function() {
    it('should create an instance of DescribeAccessPointsResponse', function() {
      // uncomment below and update the code to test DescribeAccessPointsResponse
      //var instance = new AmazonElasticFileSystem.DescribeAccessPointsResponse();
      //expect(instance).to.be.a(AmazonElasticFileSystem.DescribeAccessPointsResponse);
    });

    it('should have the property accessPoints (base name: "AccessPoints")', function() {
      // uncomment below and update the code to test the property accessPoints
      //var instance = new AmazonElasticFileSystem.DescribeAccessPointsResponse();
      //expect(instance).to.be();
    });

    it('should have the property nextToken (base name: "NextToken")', function() {
      // uncomment below and update the code to test the property nextToken
      //var instance = new AmazonElasticFileSystem.DescribeAccessPointsResponse();
      //expect(instance).to.be();
    });

  });

}));
