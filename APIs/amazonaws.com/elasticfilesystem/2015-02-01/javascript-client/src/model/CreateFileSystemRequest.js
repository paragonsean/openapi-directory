/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';

/**
 * The CreateFileSystemRequest model module.
 * @module model/CreateFileSystemRequest
 * @version 2015-02-01
 */
class CreateFileSystemRequest {
    /**
     * Constructs a new <code>CreateFileSystemRequest</code>.
     * @alias module:model/CreateFileSystemRequest
     * @param creationToken {String} A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.
     */
    constructor(creationToken) { 
        
        CreateFileSystemRequest.initialize(this, creationToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, creationToken) { 
        obj['CreationToken'] = creationToken;
    }

    /**
     * Constructs a <code>CreateFileSystemRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFileSystemRequest} obj Optional instance to populate.
     * @return {module:model/CreateFileSystemRequest} The populated <code>CreateFileSystemRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFileSystemRequest();

            if (data.hasOwnProperty('CreationToken')) {
                obj['CreationToken'] = ApiClient.convertToType(data['CreationToken'], 'String');
            }
            if (data.hasOwnProperty('PerformanceMode')) {
                obj['PerformanceMode'] = ApiClient.convertToType(data['PerformanceMode'], 'String');
            }
            if (data.hasOwnProperty('Encrypted')) {
                obj['Encrypted'] = ApiClient.convertToType(data['Encrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('ThroughputMode')) {
                obj['ThroughputMode'] = ApiClient.convertToType(data['ThroughputMode'], 'String');
            }
            if (data.hasOwnProperty('ProvisionedThroughputInMibps')) {
                obj['ProvisionedThroughputInMibps'] = ApiClient.convertToType(data['ProvisionedThroughputInMibps'], 'Number');
            }
            if (data.hasOwnProperty('AvailabilityZoneName')) {
                obj['AvailabilityZoneName'] = ApiClient.convertToType(data['AvailabilityZoneName'], 'String');
            }
            if (data.hasOwnProperty('Backup')) {
                obj['Backup'] = ApiClient.convertToType(data['Backup'], 'Boolean');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFileSystemRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFileSystemRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFileSystemRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CreationToken'] && !(typeof data['CreationToken'] === 'string' || data['CreationToken'] instanceof String)) {
            throw new Error("Expected the field `CreationToken` to be a primitive type in the JSON string but got " + data['CreationToken']);
        }
        // ensure the json data is a string
        if (data['PerformanceMode'] && !(typeof data['PerformanceMode'] === 'string' || data['PerformanceMode'] instanceof String)) {
            throw new Error("Expected the field `PerformanceMode` to be a primitive type in the JSON string but got " + data['PerformanceMode']);
        }
        // ensure the json data is a string
        if (data['KmsKeyId'] && !(typeof data['KmsKeyId'] === 'string' || data['KmsKeyId'] instanceof String)) {
            throw new Error("Expected the field `KmsKeyId` to be a primitive type in the JSON string but got " + data['KmsKeyId']);
        }
        // ensure the json data is a string
        if (data['ThroughputMode'] && !(typeof data['ThroughputMode'] === 'string' || data['ThroughputMode'] instanceof String)) {
            throw new Error("Expected the field `ThroughputMode` to be a primitive type in the JSON string but got " + data['ThroughputMode']);
        }
        // ensure the json data is a string
        if (data['AvailabilityZoneName'] && !(typeof data['AvailabilityZoneName'] === 'string' || data['AvailabilityZoneName'] instanceof String)) {
            throw new Error("Expected the field `AvailabilityZoneName` to be a primitive type in the JSON string but got " + data['AvailabilityZoneName']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

CreateFileSystemRequest.RequiredProperties = ["CreationToken"];

/**
 * A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.
 * @member {String} CreationToken
 */
CreateFileSystemRequest.prototype['CreationToken'] = undefined;

/**
 * <p>The performance mode of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.</p> <note> <p>The <code>maxIO</code> mode is not supported on file systems using One Zone storage classes.</p> </note>
 * @member {module:model/CreateFileSystemRequest.PerformanceModeEnum} PerformanceMode
 */
CreateFileSystemRequest.prototype['PerformanceMode'] = undefined;

/**
 * A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying an existing Key Management Service key (KMS key). If you don't specify a KMS key, then the default KMS key for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system. 
 * @member {Boolean} Encrypted
 */
CreateFileSystemRequest.prototype['Encrypted'] = undefined;

/**
 * <p>The ID of the KMS key that you want to use to protect the encrypted file system. This parameter is required only if you want to use a non-default KMS key. If this parameter is not specified, the default KMS key for Amazon EFS is used. You can specify a KMS key ID using the following formats:</p> <ul> <li> <p>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p> </li> </ul> <p>If you use <code>KmsKeyId</code>, you must set the <a>CreateFileSystemRequest$Encrypted</a> parameter to true.</p> <important> <p>EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with Amazon EFS file systems.</p> </important>
 * @member {String} KmsKeyId
 */
CreateFileSystemRequest.prototype['KmsKeyId'] = undefined;

/**
 * <p>Specifies the throughput mode for the file system. The mode can be <code>bursting</code>, <code>provisioned</code>, or <code>elastic</code>. If you set <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>. After you create the file system, you can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes, with certain time restrictions. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput\">Specifying throughput with provisioned mode</a> in the <i>Amazon EFS User Guide</i>. </p> <p>Default is <code>bursting</code>.</p>
 * @member {module:model/CreateFileSystemRequest.ThroughputModeEnum} ThroughputMode
 */
CreateFileSystemRequest.prototype['ThroughputMode'] = undefined;

/**
 * The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s. To increase this limit, contact Amazon Web Services Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
 * @member {Number} ProvisionedThroughputInMibps
 */
CreateFileSystemRequest.prototype['ProvisionedThroughputInMibps'] = undefined;

/**
 * <p>Used to create a file system that uses One Zone storage classes. It specifies the Amazon Web Services Availability Zone in which to create the file system. Use the format <code>us-east-1a</code> to specify the Availability Zone. For more information about One Zone storage classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\">Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p> <note> <p>One Zone storage classes are not available in all Availability Zones in Amazon Web Services Regions where Amazon EFS is available.</p> </note>
 * @member {String} AvailabilityZoneName
 */
CreateFileSystemRequest.prototype['AvailabilityZoneName'] = undefined;

/**
 * <p>Specifies whether automatic backups are enabled on the file system that you are creating. Set the value to <code>true</code> to enable automatic backups. If you are creating a file system that uses One Zone storage classes, automatic backups are enabled by default. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\">Automatic backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>, the default is <code>true</code>.</p> <note> <p>Backup is not available in all Amazon Web Services Regions where Amazon EFS is available.</p> </note>
 * @member {Boolean} Backup
 */
CreateFileSystemRequest.prototype['Backup'] = undefined;

/**
 * Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"</code> key-value pair. Each key must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateFileSystemRequest.prototype['Tags'] = undefined;





/**
 * Allowed values for the <code>PerformanceMode</code> property.
 * @enum {String}
 * @readonly
 */
CreateFileSystemRequest['PerformanceModeEnum'] = {

    /**
     * value: "generalPurpose"
     * @const
     */
    "generalPurpose": "generalPurpose",

    /**
     * value: "maxIO"
     * @const
     */
    "maxIO": "maxIO"
};


/**
 * Allowed values for the <code>ThroughputMode</code> property.
 * @enum {String}
 * @readonly
 */
CreateFileSystemRequest['ThroughputModeEnum'] = {

    /**
     * value: "bursting"
     * @const
     */
    "bursting": "bursting",

    /**
     * value: "provisioned"
     * @const
     */
    "provisioned": "provisioned",

    /**
     * value: "elastic"
     * @const
     */
    "elastic": "elastic"
};



export default CreateFileSystemRequest;

