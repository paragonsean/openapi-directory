/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeFileSystemsResponse.h
 *
 * 
 */

#ifndef OAIDescribeFileSystemsResponse_H
#define OAIDescribeFileSystemsResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeFileSystemsResponse : public OAIObject {
public:
    OAIDescribeFileSystemsResponse();
    OAIDescribeFileSystemsResponse(QString json);
    ~OAIDescribeFileSystemsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMarker() const;
    void setMarker(const QString &marker);
    bool is_marker_Set() const;
    bool is_marker_Valid() const;

    QList getFileSystems() const;
    void setFileSystems(const QList &file_systems);
    bool is_file_systems_Set() const;
    bool is_file_systems_Valid() const;

    QString getNextMarker() const;
    void setNextMarker(const QString &next_marker);
    bool is_next_marker_Set() const;
    bool is_next_marker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_marker;
    bool m_marker_isSet;
    bool m_marker_isValid;

    QList m_file_systems;
    bool m_file_systems_isSet;
    bool m_file_systems_isValid;

    QString m_next_marker;
    bool m_next_marker_isSet;
    bool m_next_marker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeFileSystemsResponse)

#endif // OAIDescribeFileSystemsResponse_H
