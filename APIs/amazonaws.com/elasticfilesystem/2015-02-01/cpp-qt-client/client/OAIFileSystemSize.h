/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileSystemSize.h
 *
 * The latest known metered size (in bytes) of data stored in the file system, in its &lt;code&gt;Value&lt;/code&gt; field, and the time at which that size was determined in its &lt;code&gt;Timestamp&lt;/code&gt; field. The value doesn&#39;t represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value represents the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.
 */

#ifndef OAIFileSystemSize_H
#define OAIFileSystemSize_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFileSystemSize : public OAIObject {
public:
    OAIFileSystemSize();
    OAIFileSystemSize(QString json);
    ~OAIFileSystemSize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint32 getValueInIa() const;
    void setValueInIa(const qint32 &value_in_ia);
    bool is_value_in_ia_Set() const;
    bool is_value_in_ia_Valid() const;

    qint32 getValueInStandard() const;
    void setValueInStandard(const qint32 &value_in_standard);
    bool is_value_in_standard_Set() const;
    bool is_value_in_standard_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint32 m_value_in_ia;
    bool m_value_in_ia_isSet;
    bool m_value_in_ia_isValid;

    qint32 m_value_in_standard;
    bool m_value_in_standard_isSet;
    bool m_value_in_standard_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileSystemSize)

#endif // OAIFileSystemSize_H
