/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestination.h
 *
 * Describes the destination file system in the replication configuration.
 */

#ifndef OAIDestination_H
#define OAIDestination_H

#include <QJsonObject>

#include "OAIReplicationStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestination : public OAIObject {
public:
    OAIDestination();
    OAIDestination(QString json);
    ~OAIDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReplicationStatus getStatus() const;
    void setStatus(const OAIReplicationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QDateTime getLastReplicatedTimestamp() const;
    void setLastReplicatedTimestamp(const QDateTime &last_replicated_timestamp);
    bool is_last_replicated_timestamp_Set() const;
    bool is_last_replicated_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReplicationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QDateTime m_last_replicated_timestamp;
    bool m_last_replicated_timestamp_isSet;
    bool m_last_replicated_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestination)

#endif // OAIDestination_H
