/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRootDirectory.h
 *
 * Specifies the directory on the Amazon EFS file system that the access point provides access to. The access point exposes the specified file system path as the root directory of your file system to applications using the access point. NFS clients using the access point can only access data in the access point&#39;s &lt;code&gt;RootDirectory&lt;/code&gt; and it&#39;s subdirectories.
 */

#ifndef OAIRootDirectory_H
#define OAIRootDirectory_H

#include <QJsonObject>

#include "OAICreateAccessPoint_request_RootDirectory_CreationInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAccessPoint_request_RootDirectory_CreationInfo;

class OAIRootDirectory : public OAIObject {
public:
    OAIRootDirectory();
    OAIRootDirectory(QString json);
    ~OAIRootDirectory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAICreateAccessPoint_request_RootDirectory_CreationInfo getCreationInfo() const;
    void setCreationInfo(const OAICreateAccessPoint_request_RootDirectory_CreationInfo &creation_info);
    bool is_creation_info_Set() const;
    bool is_creation_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAICreateAccessPoint_request_RootDirectory_CreationInfo m_creation_info;
    bool m_creation_info_isSet;
    bool m_creation_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRootDirectory)

#endif // OAIRootDirectory_H
