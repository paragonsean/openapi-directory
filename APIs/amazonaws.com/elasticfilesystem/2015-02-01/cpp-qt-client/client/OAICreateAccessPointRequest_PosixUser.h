/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAccessPointRequest_PosixUser.h
 *
 * 
 */

#ifndef OAICreateAccessPointRequest_PosixUser_H
#define OAICreateAccessPointRequest_PosixUser_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateAccessPointRequest_PosixUser : public OAIObject {
public:
    OAICreateAccessPointRequest_PosixUser();
    OAICreateAccessPointRequest_PosixUser(QString json);
    ~OAICreateAccessPointRequest_PosixUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getUid() const;
    void setUid(const qint32 &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    qint32 getGid() const;
    void setGid(const qint32 &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QList getSecondaryGids() const;
    void setSecondaryGids(const QList &secondary_gids);
    bool is_secondary_gids_Set() const;
    bool is_secondary_gids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    qint32 m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QList m_secondary_gids;
    bool m_secondary_gids_isSet;
    bool m_secondary_gids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAccessPointRequest_PosixUser)

#endif // OAICreateAccessPointRequest_PosixUser_H
