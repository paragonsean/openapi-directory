/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModifyMountTargetSecurityGroups_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModifyMountTargetSecurityGroups_request::OAIModifyMountTargetSecurityGroups_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModifyMountTargetSecurityGroups_request::OAIModifyMountTargetSecurityGroups_request() {
    this->initializeModel();
}

OAIModifyMountTargetSecurityGroups_request::~OAIModifyMountTargetSecurityGroups_request() {}

void OAIModifyMountTargetSecurityGroups_request::initializeModel() {

    m_security_groups_isSet = false;
    m_security_groups_isValid = false;
}

void OAIModifyMountTargetSecurityGroups_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModifyMountTargetSecurityGroups_request::fromJsonObject(QJsonObject json) {

    m_security_groups_isValid = ::OpenAPI::fromJsonValue(m_security_groups, json[QString("SecurityGroups")]);
    m_security_groups_isSet = !json[QString("SecurityGroups")].isNull() && m_security_groups_isValid;
}

QString OAIModifyMountTargetSecurityGroups_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModifyMountTargetSecurityGroups_request::asJsonObject() const {
    QJsonObject obj;
    if (m_security_groups.size() > 0) {
        obj.insert(QString("SecurityGroups"), ::OpenAPI::toJsonValue(m_security_groups));
    }
    return obj;
}

QList<QString> OAIModifyMountTargetSecurityGroups_request::getSecurityGroups() const {
    return m_security_groups;
}
void OAIModifyMountTargetSecurityGroups_request::setSecurityGroups(const QList<QString> &security_groups) {
    m_security_groups = security_groups;
    m_security_groups_isSet = true;
}

bool OAIModifyMountTargetSecurityGroups_request::is_security_groups_Set() const{
    return m_security_groups_isSet;
}

bool OAIModifyMountTargetSecurityGroups_request::is_security_groups_Valid() const{
    return m_security_groups_isValid;
}

bool OAIModifyMountTargetSecurityGroups_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModifyMountTargetSecurityGroups_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
