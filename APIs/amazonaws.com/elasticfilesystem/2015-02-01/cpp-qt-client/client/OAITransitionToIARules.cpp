/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransitionToIARules.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransitionToIARules::OAITransitionToIARules(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransitionToIARules::OAITransitionToIARules() {
    this->initializeModel();
}

OAITransitionToIARules::~OAITransitionToIARules() {}

void OAITransitionToIARules::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransitionToIARules::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransitionToIARules::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AFTER_7_DAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_7_DAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFTER_14_DAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_14_DAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFTER_30_DAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_30_DAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFTER_60_DAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_60_DAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFTER_90_DAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_90_DAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFTER_1_DAY", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransitionToIARules::_1_DAY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransitionToIARules::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITransitionToIARules::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransitionToIARules::_7_DAYS:
            val = "AFTER_7_DAYS";
            break;
        case eOAITransitionToIARules::_14_DAYS:
            val = "AFTER_14_DAYS";
            break;
        case eOAITransitionToIARules::_30_DAYS:
            val = "AFTER_30_DAYS";
            break;
        case eOAITransitionToIARules::_60_DAYS:
            val = "AFTER_60_DAYS";
            break;
        case eOAITransitionToIARules::_90_DAYS:
            val = "AFTER_90_DAYS";
            break;
        case eOAITransitionToIARules::_1_DAY:
            val = "AFTER_1_DAY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransitionToIARules::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransitionToIARules::eOAITransitionToIARules OAITransitionToIARules::getValue() const {
    return m_value;
}

void OAITransitionToIARules::setValue(const OAITransitionToIARules::eOAITransitionToIARules& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransitionToIARules::isSet() const {
    
    return m_value_isSet;
}

bool OAITransitionToIARules::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
