/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeReplicationConfigurationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeReplicationConfigurationsResponse::OAIDescribeReplicationConfigurationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeReplicationConfigurationsResponse::OAIDescribeReplicationConfigurationsResponse() {
    this->initializeModel();
}

OAIDescribeReplicationConfigurationsResponse::~OAIDescribeReplicationConfigurationsResponse() {}

void OAIDescribeReplicationConfigurationsResponse::initializeModel() {

    m_replications_isSet = false;
    m_replications_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIDescribeReplicationConfigurationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeReplicationConfigurationsResponse::fromJsonObject(QJsonObject json) {

    m_replications_isValid = ::OpenAPI::fromJsonValue(m_replications, json[QString("Replications")]);
    m_replications_isSet = !json[QString("Replications")].isNull() && m_replications_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIDescribeReplicationConfigurationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeReplicationConfigurationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_replications.isSet()) {
        obj.insert(QString("Replications"), ::OpenAPI::toJsonValue(m_replications));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIDescribeReplicationConfigurationsResponse::getReplications() const {
    return m_replications;
}
void OAIDescribeReplicationConfigurationsResponse::setReplications(const QList &replications) {
    m_replications = replications;
    m_replications_isSet = true;
}

bool OAIDescribeReplicationConfigurationsResponse::is_replications_Set() const{
    return m_replications_isSet;
}

bool OAIDescribeReplicationConfigurationsResponse::is_replications_Valid() const{
    return m_replications_isValid;
}

QString OAIDescribeReplicationConfigurationsResponse::getNextToken() const {
    return m_next_token;
}
void OAIDescribeReplicationConfigurationsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIDescribeReplicationConfigurationsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIDescribeReplicationConfigurationsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIDescribeReplicationConfigurationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replications.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeReplicationConfigurationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
