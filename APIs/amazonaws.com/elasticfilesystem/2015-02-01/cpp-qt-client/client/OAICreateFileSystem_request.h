/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFileSystem_request.h
 *
 * 
 */

#ifndef OAICreateFileSystem_request_H
#define OAICreateFileSystem_request_H

#include <QJsonObject>

#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITag;

class OAICreateFileSystem_request : public OAIObject {
public:
    OAICreateFileSystem_request();
    OAICreateFileSystem_request(QString json);
    ~OAICreateFileSystem_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreationToken() const;
    void setCreationToken(const QString &creation_token);
    bool is_creation_token_Set() const;
    bool is_creation_token_Valid() const;

    QString getPerformanceMode() const;
    void setPerformanceMode(const QString &performance_mode);
    bool is_performance_mode_Set() const;
    bool is_performance_mode_Valid() const;

    bool isEncrypted() const;
    void setEncrypted(const bool &encrypted);
    bool is_encrypted_Set() const;
    bool is_encrypted_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getThroughputMode() const;
    void setThroughputMode(const QString &throughput_mode);
    bool is_throughput_mode_Set() const;
    bool is_throughput_mode_Valid() const;

    double getProvisionedThroughputInMibps() const;
    void setProvisionedThroughputInMibps(const double &provisioned_throughput_in_mibps);
    bool is_provisioned_throughput_in_mibps_Set() const;
    bool is_provisioned_throughput_in_mibps_Valid() const;

    QString getAvailabilityZoneName() const;
    void setAvailabilityZoneName(const QString &availability_zone_name);
    bool is_availability_zone_name_Set() const;
    bool is_availability_zone_name_Valid() const;

    bool isBackup() const;
    void setBackup(const bool &backup);
    bool is_backup_Set() const;
    bool is_backup_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_creation_token;
    bool m_creation_token_isSet;
    bool m_creation_token_isValid;

    QString m_performance_mode;
    bool m_performance_mode_isSet;
    bool m_performance_mode_isValid;

    bool m_encrypted;
    bool m_encrypted_isSet;
    bool m_encrypted_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_throughput_mode;
    bool m_throughput_mode_isSet;
    bool m_throughput_mode_isValid;

    double m_provisioned_throughput_in_mibps;
    bool m_provisioned_throughput_in_mibps_isSet;
    bool m_provisioned_throughput_in_mibps_isValid;

    QString m_availability_zone_name;
    bool m_availability_zone_name_isSet;
    bool m_availability_zone_name_isValid;

    bool m_backup;
    bool m_backup_isSet;
    bool m_backup_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFileSystem_request)

#endif // OAICreateFileSystem_request_H
