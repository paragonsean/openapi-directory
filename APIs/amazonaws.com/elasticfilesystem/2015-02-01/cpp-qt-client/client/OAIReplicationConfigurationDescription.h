/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationConfigurationDescription.h
 *
 * 
 */

#ifndef OAIReplicationConfigurationDescription_H
#define OAIReplicationConfigurationDescription_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReplicationConfigurationDescription : public OAIObject {
public:
    OAIReplicationConfigurationDescription();
    OAIReplicationConfigurationDescription(QString json);
    ~OAIReplicationConfigurationDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceFileSystemId() const;
    void setSourceFileSystemId(const QString &source_file_system_id);
    bool is_source_file_system_id_Set() const;
    bool is_source_file_system_id_Valid() const;

    QString getSourceFileSystemRegion() const;
    void setSourceFileSystemRegion(const QString &source_file_system_region);
    bool is_source_file_system_region_Set() const;
    bool is_source_file_system_region_Valid() const;

    QString getSourceFileSystemArn() const;
    void setSourceFileSystemArn(const QString &source_file_system_arn);
    bool is_source_file_system_arn_Set() const;
    bool is_source_file_system_arn_Valid() const;

    QString getOriginalSourceFileSystemArn() const;
    void setOriginalSourceFileSystemArn(const QString &original_source_file_system_arn);
    bool is_original_source_file_system_arn_Set() const;
    bool is_original_source_file_system_arn_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QList getDestinations() const;
    void setDestinations(const QList &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_file_system_id;
    bool m_source_file_system_id_isSet;
    bool m_source_file_system_id_isValid;

    QString m_source_file_system_region;
    bool m_source_file_system_region_isSet;
    bool m_source_file_system_region_isValid;

    QString m_source_file_system_arn;
    bool m_source_file_system_arn_isSet;
    bool m_source_file_system_arn_isValid;

    QString m_original_source_file_system_arn;
    bool m_original_source_file_system_arn_isSet;
    bool m_original_source_file_system_arn_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QList m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationConfigurationDescription)

#endif // OAIReplicationConfigurationDescription_H
