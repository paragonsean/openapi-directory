/**
 * Amazon Elastic File System
 * <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\">Amazon Elastic File System User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMountTargetDescription.h
 *
 * Provides a description of a mount target.
 */

#ifndef OAIMountTargetDescription_H
#define OAIMountTargetDescription_H

#include <QJsonObject>

#include "OAILifeCycleState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMountTargetDescription : public OAIObject {
public:
    OAIMountTargetDescription();
    OAIMountTargetDescription(QString json);
    ~OAIMountTargetDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    QString getMountTargetId() const;
    void setMountTargetId(const QString &mount_target_id);
    bool is_mount_target_id_Set() const;
    bool is_mount_target_id_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    OAILifeCycleState getLifeCycleState() const;
    void setLifeCycleState(const OAILifeCycleState &life_cycle_state);
    bool is_life_cycle_state_Set() const;
    bool is_life_cycle_state_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getNetworkInterfaceId() const;
    void setNetworkInterfaceId(const QString &network_interface_id);
    bool is_network_interface_id_Set() const;
    bool is_network_interface_id_Valid() const;

    QString getAvailabilityZoneId() const;
    void setAvailabilityZoneId(const QString &availability_zone_id);
    bool is_availability_zone_id_Set() const;
    bool is_availability_zone_id_Valid() const;

    QString getAvailabilityZoneName() const;
    void setAvailabilityZoneName(const QString &availability_zone_name);
    bool is_availability_zone_name_Set() const;
    bool is_availability_zone_name_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    QString m_mount_target_id;
    bool m_mount_target_id_isSet;
    bool m_mount_target_id_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    OAILifeCycleState m_life_cycle_state;
    bool m_life_cycle_state_isSet;
    bool m_life_cycle_state_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_network_interface_id;
    bool m_network_interface_id_isSet;
    bool m_network_interface_id_isValid;

    QString m_availability_zone_id;
    bool m_availability_zone_id_isSet;
    bool m_availability_zone_id_isValid;

    QString m_availability_zone_name;
    bool m_availability_zone_name_isSet;
    bool m_availability_zone_name_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMountTargetDescription)

#endif // OAIMountTargetDescription_H
