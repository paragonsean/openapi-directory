openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic\
    \ File System (Amazon EFS) provides simple, scalable file storage for use with\
    \ Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon\
    \ EFS, storage capacity is elastic, growing and shrinking automatically as you\
    \ add and remove files, so that your applications have the storage they need,\
    \ when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\"\
    >Amazon Elastic File System API Reference</a> and the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\"\
    >Amazon Elastic File System User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Elastic File System
  version: 2015-02-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: elasticfilesystem
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticfilesystem-2015-02-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticfilesystem/
servers:
- description: The EFS multi-region endpoint
  url: "http://elasticfilesystem.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The EFS multi-region endpoint
  url: "https://elasticfilesystem.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The EFS endpoint for China (Beijing) and China (Ningxia)
  url: "http://elasticfilesystem.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The EFS endpoint for China (Beijing) and China (Ningxia)
  url: "https://elasticfilesystem.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /2015-02-01/access-points:
    get:
      description: "<p>Returns the description of a specific Amazon EFS access point\
        \ if the <code>AccessPointId</code> is provided. If you provide an EFS <code>FileSystemId</code>,\
        \ it returns descriptions of all access points for that file system. You can\
        \ provide either an <code>AccessPointId</code> or a <code>FileSystemId</code>\
        \ in the request, but not both. </p> <p>This operation requires permissions\
        \ for the <code>elasticfilesystem:DescribeAccessPoints</code> action.</p>"
      operationId: describe_access_points
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "(Optional) When retrieving all access points for a file system,\
          \ you can optionally specify the <code>MaxItems</code> parameter to limit\
          \ the number of objects returned in a response. The default value is 100. "
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          description: Max results used for pagination.
          minimum: 1
          type: integer
        style: form
      - description: ' <code>NextToken</code> is present if the response is paginated.
          You can use <code>NextMarker</code> in the subsequent request to fetch the
          next page of access point descriptions.'
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          description: Token used for pagination.
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: (Optional) Specifies an EFS access point to describe in the response;
          mutually exclusive with <code>FileSystemId</code>.
        explode: true
        in: query
        name: AccessPointId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$"
          type: string
        style: form
      - description: "(Optional) If you provide a <code>FileSystemId</code>, EFS returns\
          \ all access points for that file system; mutually exclusive with <code>AccessPointId</code>."
        explode: true
        in: query
        name: FileSystemId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccessPointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an EFS access point. An access point is an application-specific\
        \ view into an EFS file system that applies an operating system user and group,\
        \ and a file system path, to any file system request made through the access\
        \ point. The operating system user and group override any identity information\
        \ provided by the NFS client. The file system path is exposed as the access\
        \ point's root directory. Applications using the access point can only access\
        \ data in the application's own directory and any subdirectories. To learn\
        \ more, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html\"\
        >Mounting a file system using EFS access points</a>.</p> <note> <p>If multiple\
        \ requests to create access points on the same file system are sent in quick\
        \ succession, and the file system is near the limit of 1,000 access points,\
        \ you may experience a throttling response for these requests. This is to\
        \ ensure that the file system does not exceed the stated access point limit.</p>\
        \ </note> <p>This operation requires permissions for the <code>elasticfilesystem:CreateAccessPoint</code>\
        \ action.</p> <p>Access points can be tagged on creation. If tags are specified\
        \ in the creation action, IAM performs additional authorization on the <code>elasticfilesystem:TagResource</code>\
        \ action to verify if users have permissions to create tags. Therefore, you\
        \ must grant explicit permissions to use the <code>elasticfilesystem:TagResource</code>\
        \ action. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/using-tags-efs.html#supported-iam-actions-tagging.html\"\
        >Granting permissions to tag resources during creation</a>.</p>"
      operationId: create_access_point
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessPoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointAlreadyExists'
          description: AccessPointAlreadyExists
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointLimitExceeded'
          description: AccessPointLimitExceeded
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/access-points/{AccessPointId}:
    delete:
      description: "<p>Deletes the specified access point. After deletion is complete,\
        \ new clients can no longer connect to the access points. Clients connected\
        \ to the access point at the time of deletion will continue to function until\
        \ they terminate their connection.</p> <p>This operation requires permissions\
        \ for the <code>elasticfilesystem:DeleteAccessPoint</code> action.</p>"
      operationId: delete_access_point
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the access point that you want to delete.
        explode: false
        in: path
        name: AccessPointId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2015-02-01/account-preferences:
    get:
      description: "Returns the account preferences settings for the Amazon Web Services\
        \ account associated with the user making the request, in the current Amazon\
        \ Web Services Region. For more information, see <a href=\"efs/latest/ug/manage-efs-resource-ids.html\"\
        >Managing Amazon EFS resource IDs</a>."
      operationId: describe_account_preferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountPreferences_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Use this operation to set the account preference in the current\
        \ Amazon Web Services Region to use long 17 character (63 bit) or short 8\
        \ character (32 bit) resource IDs for new EFS file system and mount target\
        \ resources. All existing resource IDs are not affected by any changes you\
        \ make. You can set the ID preference during the opt-in period as EFS transitions\
        \ to long resource IDs. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/manage-efs-resource-ids.html\"\
        >Managing Amazon EFS resource IDs</a>.</p> <note> <p>Starting in October,\
        \ 2021, you will receive an error if you try to set the account preference\
        \ to use the short 8 character format resource ID. Contact Amazon Web Services\
        \ support if you receive an error and must use short IDs for file system and\
        \ mount target resources.</p> </note>"
      operationId: put_account_preferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountPreferences_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/create-tags/{FileSystemId}:
    post:
      deprecated: true
      description: "<note> <p>DEPRECATED - <code>CreateTags</code> is deprecated and\
        \ not maintained. To create tags for EFS resources, use the API action.</p>\
        \ </note> <p>Creates or overwrites tags associated with a file system. Each\
        \ tag is a key-value pair. If a tag key specified in the request already exists\
        \ on the file system, this operation overwrites its value with the value provided\
        \ in the request. If you add the <code>Name</code> tag to your file system,\
        \ Amazon EFS returns it in the response to the <a>DescribeFileSystems</a>\
        \ operation. </p> <p>This operation requires permission for the <code>elasticfilesystem:CreateTags</code>\
        \ action.</p>"
      operationId: create_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The ID of the file system whose tags you want to modify (String).\
          \ This operation modifies the tags only, not the file system."
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTags_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/delete-tags/{FileSystemId}:
    post:
      deprecated: true
      description: "<note> <p>DEPRECATED - <code>DeleteTags</code> is deprecated and\
        \ not maintained. To remove tags from EFS resources, use the API action.</p>\
        \ </note> <p>Deletes the specified tags from a file system. If the <code>DeleteTags</code>\
        \ request includes a tag key that doesn't exist, Amazon EFS ignores it and\
        \ doesn't cause an error. For more information about tags and related restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\"\
        >Tag restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>\
        \ <p>This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>\
        \ action.</p>"
      operationId: delete_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the file system whose tags you want to delete (String).
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTags_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems:
    get:
      description: "<p>Returns the description of a specific Amazon EFS file system\
        \ if either the file system <code>CreationToken</code> or the <code>FileSystemId</code>\
        \ is provided. Otherwise, it returns descriptions of all file systems owned\
        \ by the caller's Amazon Web Services account in the Amazon Web Services Region\
        \ of the endpoint that you're calling.</p> <p>When retrieving all file system\
        \ descriptions, you can optionally specify the <code>MaxItems</code> parameter\
        \ to limit the number of descriptions in a response. This number is automatically\
        \ set to 100. If more file system descriptions remain, Amazon EFS returns\
        \ a <code>NextMarker</code>, an opaque token, in the response. In this case,\
        \ you should send a subsequent request with the <code>Marker</code> request\
        \ parameter set to the value of <code>NextMarker</code>. </p> <p>To retrieve\
        \ a list of your file system descriptions, this operation is used in an iterative\
        \ process, where <code>DescribeFileSystems</code> is called first without\
        \ the <code>Marker</code> and then the operation continues to call it with\
        \ the <code>Marker</code> parameter set to the value of the <code>NextMarker</code>\
        \ from the previous response until the response has no <code>NextMarker</code>.\
        \ </p> <p> The order of file systems returned in the response of one <code>DescribeFileSystems</code>\
        \ call and the order of file systems returned across the responses of a multi-call\
        \ iteration is unspecified. </p> <p> This operation requires permissions for\
        \ the <code>elasticfilesystem:DescribeFileSystems</code> action. </p>"
      operationId: describe_file_systems
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: '(Optional) Specifies the maximum number of file systems to return
          in the response (integer). This number is automatically set to 100. The
          response is paginated at 100 per page if you have more than 100 file systems. '
        explode: true
        in: query
        name: MaxItems
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: "(Optional) Opaque pagination token returned from a previous\
          \ <code>DescribeFileSystems</code> operation (String). If present, specifies\
          \ to continue the list from where the returning call had left off. "
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: (Optional) Restricts the list to the file system with this creation
          token (String). You specify a creation token when you create an Amazon EFS
          file system.
        explode: true
        in: query
        name: CreationToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: (Optional) ID of the file system whose description you want to
          retrieve (String).
        explode: true
        in: query
        name: FileSystemId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFileSystemsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a new, empty file system. The operation requires a\
        \ creation token in the request that Amazon EFS uses to ensure idempotent\
        \ creation (calling the operation with same creation token has no effect).\
        \ If a file system does not currently exist that is owned by the caller's\
        \ Amazon Web Services account with the specified creation token, this operation\
        \ does the following:</p> <ul> <li> <p>Creates a new, empty file system. The\
        \ file system will have an Amazon EFS assigned ID, and an initial lifecycle\
        \ state <code>creating</code>.</p> </li> <li> <p>Returns with the description\
        \ of the created file system.</p> </li> </ul> <p>Otherwise, this operation\
        \ returns a <code>FileSystemAlreadyExists</code> error with the ID of the\
        \ existing file system.</p> <note> <p>For basic use cases, you can use a randomly\
        \ generated UUID for the creation token.</p> </note> <p> The idempotent operation\
        \ allows you to retry a <code>CreateFileSystem</code> call without risk of\
        \ creating an extra file system. This can happen when an initial call fails\
        \ in a way that leaves it uncertain whether or not a file system was actually\
        \ created. An example might be that a transport level timeout occurred or\
        \ your connection was reset. As long as you use the same creation token, if\
        \ the initial call had succeeded in creating a file system, the client can\
        \ learn of its existence from the <code>FileSystemAlreadyExists</code> error.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/creating-using-create-fs.html#creating-using-create-fs-part1\"\
        >Creating a file system</a> in the <i>Amazon EFS User Guide</i>.</p> <note>\
        \ <p>The <code>CreateFileSystem</code> call returns while the file system's\
        \ lifecycle state is still <code>creating</code>. You can check the file system\
        \ creation status by calling the <a>DescribeFileSystems</a> operation, which\
        \ among other things returns the file system state.</p> </note> <p>This operation\
        \ accepts an optional <code>PerformanceMode</code> parameter that you choose\
        \ for your file system. We recommend <code>generalPurpose</code> performance\
        \ mode for most file systems. File systems using the <code>maxIO</code> performance\
        \ mode can scale to higher levels of aggregate throughput and operations per\
        \ second with a tradeoff of slightly higher latencies for most file operations.\
        \ The performance mode can't be changed after the file system has been created.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html\"\
        >Amazon EFS performance modes</a>.</p> <p>You can set the throughput mode\
        \ for the file system using the <code>ThroughputMode</code> parameter.</p>\
        \ <p>After the file system is fully created, Amazon EFS sets its lifecycle\
        \ state to <code>available</code>, at which point you can create one or more\
        \ mount targets for the file system in your VPC. For more information, see\
        \ <a>CreateMountTarget</a>. You mount your Amazon EFS file system on an EC2\
        \ instances in your VPC by using the mount target. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\"\
        >Amazon EFS: How it Works</a>. </p> <p>This operation requires permissions\
        \ for the <code>elasticfilesystem:CreateFileSystem</code> action. </p> <p>File\
        \ systems can be tagged on creation. If tags are specified in the creation\
        \ action, IAM performs additional authorization on the <code>elasticfilesystem:TagResource</code>\
        \ action to verify if users have permissions to create tags. Therefore, you\
        \ must grant explicit permissions to use the <code>elasticfilesystem:TagResource</code>\
        \ action. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/using-tags-efs.html#supported-iam-actions-tagging.html\"\
        >Granting permissions to tag resources during creation</a>.</p>"
      operationId: create_file_system
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileSystem_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemAlreadyExists'
          description: FileSystemAlreadyExists
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemLimitExceeded'
          description: FileSystemLimitExceeded
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
          description: InsufficientThroughputCapacity
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputLimitExceeded'
          description: ThroughputLimitExceeded
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZone'
          description: UnsupportedAvailabilityZone
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems/replication-configurations:
    get:
      description: "Retrieves the replication configuration for a specific file system.\
        \ If a file system is not specified, all of the replication configurations\
        \ for the Amazon Web Services account in an Amazon Web Services Region are\
        \ retrieved."
      operationId: describe_replication_configurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: You can retrieve the replication configuration for a specific
          file system by providing its file system ID.
        explode: true
        in: query
        name: FileSystemId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: form
      - description: ' <code>NextToken</code> is present if the response is paginated.
          You can use <code>NextToken</code> in a subsequent request to fetch the
          next page of output.'
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          description: Token used for pagination.
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: "(Optional) To limit the number of objects returned in a response,\
          \ you can specify the <code>MaxItems</code> parameter. The default value\
          \ is 100. "
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          description: Max results used for pagination.
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReplicationConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
          description: ReplicationNotFound
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2015-02-01/file-systems/{FileSystemId}:
    delete:
      description: "<p>Deletes a file system, permanently severing access to its contents.\
        \ Upon return, the file system no longer exists and you can't access any contents\
        \ of the deleted file system.</p> <p>You need to manually delete mount targets\
        \ attached to a file system before you can delete an EFS file system. This\
        \ step is performed for you when you use the Amazon Web Services console to\
        \ delete a file system.</p> <note> <p>You cannot delete a file system that\
        \ is part of an EFS Replication configuration. You need to delete the replication\
        \ configuration first.</p> </note> <p> You can't delete a file system that\
        \ is in use. That is, if the file system has any mount targets, you must first\
        \ delete them. For more information, see <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>.\
        \ </p> <note> <p>The <code>DeleteFileSystem</code> call returns while the\
        \ file system state is still <code>deleting</code>. You can check the file\
        \ system deletion status by calling the <a>DescribeFileSystems</a> operation,\
        \ which returns a list of file systems in your account. If you pass file system\
        \ ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>\
        \ returns a <code>404 FileSystemNotFound</code> error.</p> </note> <p>This\
        \ operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>\
        \ action.</p>"
      operationId: delete_file_system
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the file system you want to delete.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemInUse'
          description: FileSystemInUse
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the throughput mode or the amount of provisioned throughput
        of an existing file system.
      operationId: update_file_system
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the file system that you want to update.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileSystem_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
          description: InsufficientThroughputCapacity
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputLimitExceeded'
          description: ThroughputLimitExceeded
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: TooManyRequests
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems/{FileSystemId}/backup-policy:
    get:
      description: Returns the backup policy for the specified EFS file system.
      operationId: describe_backup_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies which EFS file system to retrieve the <code>BackupPolicy</code>
          for.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicyDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFound'
          description: PolicyNotFound
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: 'Updates the file system''s backup policy. Use this action to start
        or stop automatic backups of the file system. '
      operationId: put_backup_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies which EFS file system to update the backup policy for.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBackupPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicyDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration:
    get:
      description: "<p>Returns the current <code>LifecycleConfiguration</code> object\
        \ for the specified Amazon EFS file system. EFS lifecycle management uses\
        \ the <code>LifecycleConfiguration</code> object to identify which files to\
        \ move to the EFS Infrequent Access (IA) storage class. For a file system\
        \ without a <code>LifecycleConfiguration</code> object, the call returns an\
        \ empty array in the response.</p> <p>When EFS Intelligent-Tiering is enabled,\
        \ <code>TransitionToPrimaryStorageClass</code> has a value of <code>AFTER_1_ACCESS</code>.</p>\
        \ <p>This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>\
        \ operation.</p>"
      operationId: describe_lifecycle_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the file system whose <code>LifecycleConfiguration</code>
          object you want to retrieve (String).
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleConfigurationDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Use this action to manage EFS lifecycle management and EFS\
        \ Intelligent-Tiering. A <code>LifecycleConfiguration</code> consists of one\
        \ or more <code>LifecyclePolicy</code> objects that define the following:</p>\
        \ <ul> <li> <p> <b>EFS Lifecycle management</b> - When Amazon EFS automatically\
        \ transitions files in a file system into the lower-cost EFS Infrequent Access\
        \ (IA) storage class.</p> <p>To enable EFS Lifecycle management, set the value\
        \ of <code>TransitionToIA</code> to one of the available options.</p> </li>\
        \ <li> <p> <b>EFS Intelligent-Tiering</b> - When Amazon EFS automatically\
        \ transitions files from IA back into the file system's primary storage class\
        \ (EFS Standard or EFS One Zone Standard).</p> <p>To enable EFS Intelligent-Tiering,\
        \ set the value of <code>TransitionToPrimaryStorageClass</code> to <code>AFTER_1_ACCESS</code>.</p>\
        \ </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html\"\
        >EFS Lifecycle Management</a>.</p> <p>Each Amazon EFS file system supports\
        \ one lifecycle configuration, which applies to all files in the file system.\
        \ If a <code>LifecycleConfiguration</code> object already exists for the specified\
        \ file system, a <code>PutLifecycleConfiguration</code> call modifies the\
        \ existing configuration. A <code>PutLifecycleConfiguration</code> call with\
        \ an empty <code>LifecyclePolicies</code> array in the request body deletes\
        \ any existing <code>LifecycleConfiguration</code> and turns off lifecycle\
        \ management and EFS Intelligent-Tiering for the file system.</p> <p>In the\
        \ request, specify the following: </p> <ul> <li> <p>The ID for the file system\
        \ for which you are enabling, disabling, or modifying lifecycle management\
        \ and EFS Intelligent-Tiering.</p> </li> <li> <p>A <code>LifecyclePolicies</code>\
        \ array of <code>LifecyclePolicy</code> objects that define when files are\
        \ moved into IA storage, and when they are moved back to Standard storage.</p>\
        \ <note> <p>Amazon EFS requires that each <code>LifecyclePolicy</code> object\
        \ have only have a single transition, so the <code>LifecyclePolicies</code>\
        \ array needs to be structured with separate <code>LifecyclePolicy</code>\
        \ objects. See the example requests in the following section for more information.</p>\
        \ </note> </li> </ul> <p>This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>\
        \ operation.</p> <p>To apply a <code>LifecycleConfiguration</code> object\
        \ to an encrypted file system, you need the same Key Management Service permissions\
        \ as when you created the encrypted file system.</p>"
      operationId: put_lifecycle_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the file system for which you are creating the <code>LifecycleConfiguration</code>
          object (String).
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLifecycleConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleConfigurationDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems/{FileSystemId}/policy:
    delete:
      description: "<p>Deletes the <code>FileSystemPolicy</code> for the specified\
        \ file system. The default <code>FileSystemPolicy</code> goes into effect\
        \ once the existing policy is deleted. For more information about the default\
        \ file system policy, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/res-based-policies-efs.html\"\
        >Using Resource-based Policies with EFS</a>.</p> <p>This operation requires\
        \ permissions for the <code>elasticfilesystem:DeleteFileSystemPolicy</code>\
        \ action.</p>"
      operationId: delete_file_system_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the EFS file system for which to delete the <code>FileSystemPolicy</code>.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: <p>Returns the <code>FileSystemPolicy</code> for the specified
        EFS file system.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystemPolicy</code>
        action.</p>
      operationId: describe_file_system_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies which EFS file system to retrieve the <code>FileSystemPolicy</code>
          for.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemPolicyDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFound'
          description: PolicyNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Applies an Amazon EFS <code>FileSystemPolicy</code> to an Amazon\
        \ EFS file system. A file system policy is an IAM resource-based policy and\
        \ can contain multiple policy statements. A file system always has exactly\
        \ one file system policy, which can be the default policy or an explicit policy\
        \ set or updated using this API operation. EFS file system policies have a\
        \ 20,000 character limit. When an explicit policy is set, it overrides the\
        \ default policy. For more information about the default file system policy,\
        \ see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html#default-filesystempolicy\"\
        >Default EFS File System Policy</a>. </p> <note> <p>EFS file system policies\
        \ have a 20,000 character limit.</p> </note> <p>This operation requires permissions\
        \ for the <code>elasticfilesystem:PutFileSystemPolicy</code> action.</p>"
      operationId: put_file_system_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the EFS file system that you want to create or update
          the <code>FileSystemPolicy</code> for.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFileSystemPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemPolicyDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyException'
          description: InvalidPolicyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/file-systems/{SourceFileSystemId}/replication-configuration:
    delete:
      description: "Deletes an existing replication configuration. To delete a replication\
        \ configuration, you must make the request from the Amazon Web Services Region\
        \ in which the destination file system is located. Deleting a replication\
        \ configuration ends the replication process. After a replication configuration\
        \ is deleted, the destination file system is no longer read-only. You can\
        \ write to the destination file system after its status becomes <code>Writeable</code>."
      operationId: delete_replication_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the source file system in the replication configuration.
        explode: false
        in: path
        name: SourceFileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
          description: ReplicationNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a replication configuration that replicates an existing\
        \ EFS file system to a new, read-only file system. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html\"\
        >Amazon EFS replication</a> in the <i>Amazon EFS User Guide</i>. The replication\
        \ configuration specifies the following:</p> <ul> <li> <p> <b>Source file\
        \ system</b> - An existing EFS file system that you want replicated. The source\
        \ file system cannot be a destination file system in an existing replication\
        \ configuration.</p> </li> <li> <p> <b>Destination file system configuration</b>\
        \ - The configuration of the destination file system to which the source file\
        \ system will be replicated. There can only be one destination file system\
        \ in a replication configuration. The destination file system configuration\
        \ consists of the following properties:</p> <ul> <li> <p> <b>Amazon Web Services\
        \ Region</b> - The Amazon Web Services Region in which the destination file\
        \ system is created. Amazon EFS replication is available in all Amazon Web\
        \ Services Regions that Amazon EFS is available in, except Africa (Cape Town),\
        \ Asia Pacific (Hong Kong), Asia Pacific (Jakarta), Europe (Milan), and Middle\
        \ East (Bahrain).</p> </li> <li> <p> <b>Availability Zone</b> - If you want\
        \ the destination file system to use EFS One Zone availability and durability,\
        \ you must specify the Availability Zone to create the file system in. For\
        \ more information about EFS storage classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\"\
        > Amazon EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>\
        \ </li> <li> <p> <b>Encryption</b> - All destination file systems are created\
        \ with encryption at rest enabled. You can specify the Key Management Service\
        \ (KMS) key that is used to encrypt the destination file system. If you don't\
        \ specify a KMS key, your service-managed KMS key for Amazon EFS is used.\
        \ </p> <note> <p>After the file system is created, you cannot change the KMS\
        \ key.</p> </note> </li> </ul> </li> </ul> <p>The following properties are\
        \ set by default:</p> <ul> <li> <p> <b>Performance mode</b> - The destination\
        \ file system's performance mode matches that of the source file system, unless\
        \ the destination file system uses EFS One Zone storage. In that case, the\
        \ General Purpose performance mode is used. The performance mode cannot be\
        \ changed.</p> </li> <li> <p> <b>Throughput mode</b> - The destination file\
        \ system's throughput mode matches that of the source file system. After the\
        \ file system is created, you can modify the throughput mode.</p> </li> </ul>\
        \ <p>The following properties are turned off by default:</p> <ul> <li> <p>\
        \ <b>Lifecycle management</b> - EFS lifecycle management and EFS Intelligent-Tiering\
        \ are not enabled on the destination file system. After the destination file\
        \ system is created, you can enable EFS lifecycle management and EFS Intelligent-Tiering.</p>\
        \ </li> <li> <p> <b>Automatic backups</b> - Automatic daily backups not enabled\
        \ on the destination file system. After the file system is created, you can\
        \ change this setting.</p> </li> </ul> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html\">Amazon EFS\
        \ replication</a> in the <i>Amazon EFS User Guide</i>.</p>"
      operationId: create_replication_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the Amazon EFS file system that you want to replicate.
          This file system cannot already be a source or destination file system in
          another replication configuration.
        explode: false
        in: path
        name: SourceFileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReplicationConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
          description: ReplicationNotFound
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZone'
          description: UnsupportedAvailabilityZone
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemLimitExceeded'
          description: FileSystemLimitExceeded
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
          description: InsufficientThroughputCapacity
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputLimitExceeded'
          description: ThroughputLimitExceeded
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/mount-targets:
    get:
      description: "<p>Returns the descriptions of all the current mount targets,\
        \ or a specific mount target, for a file system. When requesting all of the\
        \ current mount targets, the order of mount targets returned in the response\
        \ is unspecified.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>\
        \ action, on either the file system ID that you specify in <code>FileSystemId</code>,\
        \ or on the file system of the mount target that you specify in <code>MountTargetId</code>.</p>"
      operationId: describe_mount_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "(Optional) Maximum number of mount targets to return in the\
          \ response. Currently, this number is automatically set to 10, and other\
          \ values are ignored. The response is paginated at 100 per page if you have\
          \ more than 100 mount targets."
        explode: true
        in: query
        name: MaxItems
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: "(Optional) Opaque pagination token returned from a previous\
          \ <code>DescribeMountTargets</code> operation (String). If present, it specifies\
          \ to continue the list from where the previous returning call left off."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: (Optional) ID of the file system whose mount targets you want
          to list (String). It must be included in your request if an <code>AccessPointId</code>
          or <code>MountTargetId</code> is not included. Accepts either a file system
          ID or ARN as input.
        explode: true
        in: query
        name: FileSystemId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: form
      - description: (Optional) ID of the mount target that you want to have described
          (String). It must be included in your request if <code>FileSystemId</code>
          is not included. Accepts either a mount target ID or ARN as input.
        explode: true
        in: query
        name: MountTargetId
        required: false
        schema:
          maxLength: 45
          minLength: 13
          pattern: "^fsmt-[0-9a-f]{8,40}$"
          type: string
        style: form
      - description: (Optional) The ID of the access point whose mount targets that
          you want to list. It must be included in your request if a <code>FileSystemId</code>
          or <code>MountTargetId</code> is not included in your request. Accepts either
          an access point ID or ARN as input.
        explode: true
        in: query
        name: AccessPointId
        required: false
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMountTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
          description: MountTargetNotFound
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a mount target for a file system. You can then mount\
        \ the file system on EC2 instances by using the mount target.</p> <p>You can\
        \ create one mount target in each Availability Zone in your VPC. All EC2 instances\
        \ in a VPC within a given Availability Zone share a single mount target for\
        \ a given file system. If you have multiple subnets in an Availability Zone,\
        \ you create a mount target in one of the subnets. EC2 instances do not need\
        \ to be in the same subnet as the mount target in order to access their file\
        \ system.</p> <p>You can create only one mount target for an EFS file system\
        \ using One Zone storage classes. You must create that mount target in the\
        \ same Availability Zone in which the file system is located. Use the <code>AvailabilityZoneName</code>\
        \ and <code>AvailabiltyZoneId</code> properties in the <a>DescribeFileSystems</a>\
        \ response object to get this information. Use the <code>subnetId</code> associated\
        \ with the file system's Availability Zone when creating the mount target.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\"\
        >Amazon EFS: How it Works</a>. </p> <p>To create a mount target for a file\
        \ system, the file system's lifecycle state must be <code>available</code>.\
        \ For more information, see <a>DescribeFileSystems</a>.</p> <p>In the request,\
        \ provide the following:</p> <ul> <li> <p>The file system ID for which you\
        \ are creating the mount target.</p> </li> <li> <p>A subnet ID, which determines\
        \ the following:</p> <ul> <li> <p>The VPC in which Amazon EFS creates the\
        \ mount target</p> </li> <li> <p>The Availability Zone in which Amazon EFS\
        \ creates the mount target</p> </li> <li> <p>The IP address range from which\
        \ Amazon EFS selects the IP address of the mount target (if you don't specify\
        \ an IP address in the request)</p> </li> </ul> </li> </ul> <p>After creating\
        \ the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>\
        \ and an <code>IpAddress</code>. You use this IP address when mounting the\
        \ file system in an EC2 instance. You can also use the mount target's DNS\
        \ name when mounting the file system. The EC2 instance on which you mount\
        \ the file system by using the mount target can resolve the mount target's\
        \ DNS name to its IP address. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation\"\
        >How it Works: Implementation Overview</a>. </p> <p>Note that you can create\
        \ mount targets for a file system in only one VPC, and there can be only one\
        \ mount target per Availability Zone. That is, if the file system already\
        \ has one or more mount targets created for it, the subnet specified in the\
        \ request to add another mount target must meet the following requirements:</p>\
        \ <ul> <li> <p>Must belong to the same VPC as the subnets of the existing\
        \ mount targets</p> </li> <li> <p>Must not be in the same Availability Zone\
        \ as any of the subnets of the existing mount targets</p> </li> </ul> <p>If\
        \ the request satisfies the requirements, Amazon EFS does the following:</p>\
        \ <ul> <li> <p>Creates a new mount target in the specified subnet.</p> </li>\
        \ <li> <p>Also creates a new network interface in the subnet as follows:</p>\
        \ <ul> <li> <p>If the request provides an <code>IpAddress</code>, Amazon EFS\
        \ assigns that IP address to the network interface. Otherwise, Amazon EFS\
        \ assigns a free address in the subnet (in the same way that the Amazon EC2\
        \ <code>CreateNetworkInterface</code> call does when a request does not specify\
        \ a primary private IP address).</p> </li> <li> <p>If the request provides\
        \ <code>SecurityGroups</code>, this network interface is associated with those\
        \ security groups. Otherwise, it belongs to the default security group for\
        \ the subnet's VPC.</p> </li> <li> <p>Assigns the description <code>Mount\
        \ target <i>fsmt-id</i> for file system <i>fs-id</i> </code> where <code>\
        \ <i>fsmt-id</i> </code> is the mount target ID, and <code> <i>fs-id</i> </code>\
        \ is the <code>FileSystemId</code>.</p> </li> <li> <p>Sets the <code>requesterManaged</code>\
        \ property of the network interface to <code>true</code>, and the <code>requesterId</code>\
        \ value to <code>EFS</code>.</p> </li> </ul> <p>Each Amazon EFS mount target\
        \ has one corresponding requester-managed EC2 network interface. After the\
        \ network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>\
        \ field in the mount target's description to the network interface ID, and\
        \ the <code>IpAddress</code> field to its address. If network interface creation\
        \ fails, the entire <code>CreateMountTarget</code> operation fails.</p> </li>\
        \ </ul> <note> <p>The <code>CreateMountTarget</code> call returns only after\
        \ creating the network interface, but while the mount target state is still\
        \ <code>creating</code>, you can check the mount target creation status by\
        \ calling the <a>DescribeMountTargets</a> operation, which among other things\
        \ returns the mount target state.</p> </note> <p>We recommend that you create\
        \ a mount target in each of the Availability Zones. There are cost considerations\
        \ for using a file system in an Availability Zone through a mount target created\
        \ in another Availability Zone. For more information, see <a href=\"http://aws.amazon.com/efs/\"\
        >Amazon EFS</a>. In addition, by always using a mount target local to the\
        \ instance's Availability Zone, you eliminate a partial failure scenario.\
        \ If the Availability Zone in which your mount target is created goes down,\
        \ then you can't access your file system through that mount target. </p> <p>This\
        \ operation requires permissions for the following action on the file system:</p>\
        \ <ul> <li> <p> <code>elasticfilesystem:CreateMountTarget</code> </p> </li>\
        \ </ul> <p>This operation also requires permissions for the following Amazon\
        \ EC2 actions:</p> <ul> <li> <p> <code>ec2:DescribeSubnets</code> </p> </li>\
        \ <li> <p> <code>ec2:DescribeNetworkInterfaces</code> </p> </li> <li> <p>\
        \ <code>ec2:CreateNetworkInterface</code> </p> </li> </ul>"
      operationId: create_mount_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMountTarget_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetDescription'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
          description: IncorrectFileSystemLifeCycleState
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetConflict'
          description: MountTargetConflict
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetNotFound'
          description: SubnetNotFound
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoFreeAddressesInSubnet'
          description: NoFreeAddressesInSubnet
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressInUse'
          description: IpAddressInUse
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceLimitExceeded'
          description: NetworkInterfaceLimitExceeded
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupLimitExceeded'
          description: SecurityGroupLimitExceeded
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupNotFound'
          description: SecurityGroupNotFound
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZone'
          description: UnsupportedAvailabilityZone
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityZonesMismatch'
          description: AvailabilityZonesMismatch
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/mount-targets/{MountTargetId}:
    delete:
      description: "<p>Deletes the specified mount target.</p> <p>This operation forcibly\
        \ breaks any mounts of the file system by using the mount target that is being\
        \ deleted, which might disrupt instances or applications using those mounts.\
        \ To avoid applications getting cut off abruptly, you might consider unmounting\
        \ any mounts of the mount target, if feasible. The operation also deletes\
        \ the associated network interface. Uncommitted writes might be lost, but\
        \ breaking a mount target using this operation does not corrupt the file system\
        \ itself. The file system you created remains. You can mount an EC2 instance\
        \ in your VPC by using another mount target.</p> <p>This operation requires\
        \ permissions for the following action on the file system:</p> <ul> <li> <p>\
        \ <code>elasticfilesystem:DeleteMountTarget</code> </p> </li> </ul> <note>\
        \ <p>The <code>DeleteMountTarget</code> call returns while the mount target\
        \ state is still <code>deleting</code>. You can check the mount target deletion\
        \ by calling the <a>DescribeMountTargets</a> operation, which returns a list\
        \ of mount target descriptions for the given file system. </p> </note> <p>The\
        \ operation also requires permissions for the following Amazon EC2 action\
        \ on the mount target's network interface:</p> <ul> <li> <p> <code>ec2:DeleteNetworkInterface</code>\
        \ </p> </li> </ul>"
      operationId: delete_mount_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the mount target to delete (String).
        explode: false
        in: path
        name: MountTargetId
        required: true
        schema:
          maxLength: 45
          minLength: 13
          pattern: "^fsmt-[0-9a-f]{8,40}$"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyTimeout'
          description: DependencyTimeout
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
          description: MountTargetNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2015-02-01/mount-targets/{MountTargetId}/security-groups:
    get:
      description: <p>Returns the security groups currently in effect for a mount
        target. This operation requires that the network interface of the mount target
        has been created and the lifecycle state of the mount target is not <code>deleted</code>.</p>
        <p>This operation requires permissions for the following actions:</p> <ul>
        <li> <p> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code>
        action on the mount target's file system. </p> </li> <li> <p> <code>ec2:DescribeNetworkInterfaceAttribute</code>
        action on the mount target's network interface. </p> </li> </ul>
      operationId: describe_mount_target_security_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the mount target whose security groups you want to
          retrieve.
        explode: false
        in: path
        name: MountTargetId
        required: true
        schema:
          maxLength: 45
          minLength: 13
          pattern: "^fsmt-[0-9a-f]{8,40}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMountTargetSecurityGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
          description: MountTargetNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectMountTargetState'
          description: IncorrectMountTargetState
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Modifies the set of security groups in effect for a mount target.</p>\
        \ <p>When you create a mount target, Amazon EFS also creates a new network\
        \ interface. For more information, see <a>CreateMountTarget</a>. This operation\
        \ replaces the security groups in effect for the network interface associated\
        \ with a mount target, with the <code>SecurityGroups</code> provided in the\
        \ request. This operation requires that the network interface of the mount\
        \ target has been created and the lifecycle state of the mount target is not\
        \ <code>deleted</code>. </p> <p>The operation requires permissions for the\
        \ following actions:</p> <ul> <li> <p> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code>\
        \ action on the mount target's file system. </p> </li> <li> <p> <code>ec2:ModifyNetworkInterfaceAttribute</code>\
        \ action on the mount target's network interface. </p> </li> </ul>"
      operationId: modify_mount_target_security_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the mount target whose security groups you want to
          modify.
        explode: false
        in: path
        name: MountTargetId
        required: true
        schema:
          maxLength: 45
          minLength: 13
          pattern: "^fsmt-[0-9a-f]{8,40}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMountTargetSecurityGroups_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
          description: MountTargetNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectMountTargetState'
          description: IncorrectMountTargetState
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupLimitExceeded'
          description: SecurityGroupLimitExceeded
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupNotFound'
          description: SecurityGroupNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/resource-tags/{ResourceId}:
    get:
      description: <p>Lists all tags for a top-level EFS resource. You must provide
        the ID of the resource that you want to retrieve the tags for.</p> <p>This
        operation requires permissions for the <code>elasticfilesystem:DescribeAccessPoints</code>
        action.</p>
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the EFS resource you want to retrieve tags for. You
          can retrieve tags for EFS file systems and access points using this API
          endpoint.
        explode: false
        in: path
        name: ResourceId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$"
          type: string
        style: simple
      - description: (Optional) Specifies the maximum number of tag objects to return
          in the response. The default value is 100.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          description: Max results used for pagination.
          minimum: 1
          type: integer
        style: form
      - description: (Optional) You can use <code>NextToken</code> in a subsequent
          request to fetch the next page of access point descriptions if the response
          payload was paginated.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          description: Token used for pagination.
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: <p>Creates a tag for an EFS resource. You can create tags for EFS
        file systems and access points using this API operation.</p> <p>This operation
        requires permissions for the <code>elasticfilesystem:TagResource</code> action.</p>
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID specifying the EFS resource that you want to create a
          tag for.
        explode: false
        in: path
        name: ResourceId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2015-02-01/resource-tags/{ResourceId}#tagKeys:
    delete:
      description: <p>Removes tags from an EFS resource. You can remove tags from
        EFS file systems and access points using this API operation.</p> <p>This operation
        requires permissions for the <code>elasticfilesystem:UntagResource</code>
        action.</p>
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the EFS resource that you want to remove tags from.
        explode: false
        in: path
        name: ResourceId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$"
          type: string
        style: simple
      - description: The keys of the key-value tag pairs that you want to remove from
          the specified EFS resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
          description: AccessPointNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2015-02-01/tags/{FileSystemId}/:
    get:
      deprecated: true
      description: "<note> <p>DEPRECATED - The <code>DescribeTags</code> action is\
        \ deprecated and not maintained. To view tags associated with EFS resources,\
        \ use the <code>ListTagsForResource</code> API action.</p> </note> <p>Returns\
        \ the tags associated with a file system. The order of tags returned in the\
        \ response of one <code>DescribeTags</code> call and the order of tags returned\
        \ across the responses of a multiple-call iteration (when using pagination)\
        \ is unspecified. </p> <p> This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>\
        \ action. </p>"
      operationId: describe_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "(Optional) The maximum number of file system tags to return\
          \ in the response. Currently, this number is automatically set to 100, and\
          \ other values are ignored. The response is paginated at 100 per page if\
          \ you have more than 100 tags."
        explode: true
        in: query
        name: MaxItems
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: "(Optional) An opaque pagination token returned from a previous\
          \ <code>DescribeTags</code> operation (String). If present, it specifies\
          \ to continue the list from where the previous call left off."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: .+
          type: string
        style: form
      - description: The ID of the file system whose tag set you want to retrieve.
        explode: false
        in: path
        name: FileSystemId
        required: true
        schema:
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
          description: FileSystemNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AccessPointDescription:
      description: Provides a description of an EFS file system access point.
      example:
        OwnerId: ""
        AccessPointArn: ""
        AccessPointId: ""
        LifeCycleState: ""
        FileSystemId: ""
        RootDirectory:
          Path: ""
          CreationInfo:
            OwnerGid: ""
            OwnerUid: ""
            Permissions: ""
        ClientToken: ""
        PosixUser:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        Tags: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The opaque string specified in the request to ensure idempotent
              creation.
          title: ClientToken
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the access point. This is the value of the <code>Name</code>
              tag.
          title: Name
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags associated with the access point, presented as\
              \ an array of Tag objects."
          title: Tags
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/AccessPointId'
          - description: "The ID of the access point, assigned by Amazon EFS."
          title: AccessPointId
        AccessPointArn:
          allOf:
          - $ref: '#/components/schemas/AccessPointArn'
          - description: The unique Amazon Resource Name (ARN) associated with the
              access point.
          title: AccessPointArn
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the EFS file system that the access point applies
              to.
          title: FileSystemId
        PosixUser:
          $ref: '#/components/schemas/AccessPointDescription_PosixUser'
        RootDirectory:
          $ref: '#/components/schemas/AccessPointDescription_RootDirectory'
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: Identifies the Amazon Web Services account that owns the
              access point resource.
          title: OwnerId
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          - description: Identifies the lifecycle phase of the access point.
          title: LifeCycleState
      title: AccessPointDescription
      type: object
    Tag:
      description: "A tag is a key-value pair. Allowed characters are letters, white\
        \ space, and numbers that can be represented in UTF-8, and the following characters:<code>\
        \ + - = . _ : /</code>."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key (String). The key can't start with <code>aws:</code>.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag key.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    Uid:
      maximum: 4294967295
      minimum: 0
      type: integer
    Gid:
      maximum: 4294967295
      minimum: 0
      title: Gid
      type: integer
    SecondaryGids:
      items:
        $ref: '#/components/schemas/Gid'
      maxItems: 16
      minItems: 0
      type: array
    Path:
      maxLength: 100
      minLength: 1
      pattern: "^(\\/|(\\/(?!\\.)+[^$#<>;`|&?{}^*/\\n]+){1,4})$"
      type: string
    CreationInfo:
      description: "<p>Required if the <code>RootDirectory</code> &gt; <code>Path</code>\
        \ specified does not exist. Specifies the POSIX IDs and permissions to apply\
        \ to the access point's <code>RootDirectory</code> &gt; <code>Path</code>.\
        \ If the access point root directory does not exist, EFS creates it with these\
        \ settings when a client connects to the access point. When specifying <code>CreationInfo</code>,\
        \ you must include values for all properties. </p> <p>Amazon EFS creates a\
        \ root directory only if you have provided the CreationInfo: OwnUid, OwnGID,\
        \ and permissions for the directory. If you do not provide this information,\
        \ Amazon EFS does not create the root directory. If the root directory does\
        \ not exist, attempts to mount using the access point will fail.</p> <important>\
        \ <p>If you do not provide <code>CreationInfo</code> and the specified <code>RootDirectory</code>\
        \ does not exist, attempts to mount the file system using the access point\
        \ will fail.</p> </important>"
      properties:
        OwnerUid:
          allOf:
          - $ref: '#/components/schemas/OwnerUid'
          - description: Specifies the POSIX user ID to apply to the <code>RootDirectory</code>.
              Accepts values from 0 to 2^32 (4294967295).
          title: OwnerUid
        OwnerGid:
          allOf:
          - $ref: '#/components/schemas/OwnerGid'
          - description: Specifies the POSIX group ID to apply to the <code>RootDirectory</code>.
              Accepts values from 0 to 2^32 (4294967295).
          title: OwnerGid
        Permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          - description: "Specifies the POSIX permissions to apply to the <code>RootDirectory</code>,\
              \ in the format of an octal number representing the file's mode bits."
          title: Permissions
      required:
      - OwnerGid
      - OwnerUid
      - Permissions
      title: CreationInfo
      type: object
    BadRequest: {}
    AccessPointAlreadyExists: {}
    IncorrectFileSystemLifeCycleState: {}
    InternalServerError: {}
    FileSystemNotFound: {}
    AccessPointLimitExceeded: {}
    ThrottlingException: {}
    FileSystemDescription:
      description: A description of the file system.
      example:
        CreationTime: "1481841524.0"
        CreationToken: tokenstring
        Encrypted: true
        FileSystemId: fs-01234567
        LifeCycleState: creating
        NumberOfMountTargets: 0
        OwnerId: "012345678912"
        PerformanceMode: generalPurpose
        SizeInBytes:
          Value: 0
        Tags:
        - Key: Name
          Value: MyFileSystem
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The Amazon Web Services account that created the file system.
        CreationToken:
          allOf:
          - $ref: '#/components/schemas/CreationToken'
          - description: The opaque string specified in the request.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: "The ID of the file system, assigned by Amazon EFS."
        FileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          - description: "The Amazon Resource Name (ARN) for the EFS file system,\
              \ in the format <code>arn:aws:elasticfilesystem:<i>region</i>:<i>account-id</i>:file-system/<i>file-system-id</i>\
              \ </code>. Example with sample data: <code>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</code> "
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time that the file system was created, in seconds (since\
              \ 1970-01-01T00:00:00Z)."
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          - description: The lifecycle phase of the file system.
        Name:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "You can add tags to a file system, including a <code>Name</code>\
              \ tag. For more information, see <a>CreateFileSystem</a>. If the file\
              \ system has a <code>Name</code> tag, Amazon EFS returns the value in\
              \ this field. "
        NumberOfMountTargets:
          allOf:
          - $ref: '#/components/schemas/MountTargetCount'
          - description: "The current number of mount targets that the file system\
              \ has. For more information, see <a>CreateMountTarget</a>."
        SizeInBytes:
          $ref: '#/components/schemas/FileSystemDescription_SizeInBytes'
        PerformanceMode:
          allOf:
          - $ref: '#/components/schemas/PerformanceMode'
          - description: The performance mode of the file system.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: "A Boolean value that, if true, indicates that the file system\
              \ is encrypted."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: The ID of an KMS key used to protect the encrypted file system.
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          - description: "Displays the file system's throughput mode. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes\"\
              >Throughput modes</a> in the <i>Amazon EFS User Guide</i>. "
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          - description: "The amount of provisioned throughput, measured in MiB/s,\
              \ for the file system. Valid for file systems using <code>ThroughputMode</code>\
              \ set to <code>provisioned</code>."
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          - description: "Describes the Amazon Web Services Availability Zone in which\
              \ the file system is located, and is valid only for file systems using\
              \ One Zone storage classes. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\"\
              >Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>."
        AvailabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneId'
          - description: "The unique and consistent identifier of the Availability\
              \ Zone in which the file system's One Zone storage classes exist. For\
              \ example, <code>use1-az1</code> is an Availability Zone ID for the\
              \ us-east-1 Amazon Web Services Region, and it has the same location\
              \ in every Amazon Web Services account."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags associated with the file system, presented as an\
              \ array of <code>Tag</code> objects."
      required:
      - CreationTime
      - CreationToken
      - FileSystemId
      - LifeCycleState
      - NumberOfMountTargets
      - OwnerId
      - PerformanceMode
      - SizeInBytes
      - Tags
      title: FileSystemDescription
      type: object
    FileSystemAlreadyExists: {}
    FileSystemLimitExceeded: {}
    InsufficientThroughputCapacity: {}
    ThroughputLimitExceeded: {}
    UnsupportedAvailabilityZone: {}
    MountTargetDescription:
      description: Provides a description of a mount target.
      example:
        FileSystemId: fs-01234567
        IpAddress: 192.0.0.2
        LifeCycleState: creating
        MountTargetId: fsmt-12340abc
        NetworkInterfaceId: eni-cedf6789
        OwnerId: "012345678912"
        SubnetId: subnet-1234abcd
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: Amazon Web Services account ID that owns the resource.
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          - description: System-assigned mount target ID.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the file system for which the mount target is intended.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          - description: The ID of the mount target's subnet.
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          - description: Lifecycle state of the mount target.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: Address at which the file system can be mounted by using
              the mount target.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceId'
          - description: The ID of the network interface that Amazon EFS created when
              it created the mount target.
        AvailabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneId'
          - description: "The unique and consistent identifier of the Availability\
              \ Zone that the mount target resides in. For example, <code>use1-az1</code>\
              \ is an AZ ID for the us-east-1 Region and it has the same location\
              \ in every Amazon Web Services account."
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          - description: "The name of the Availability Zone in which the mount target\
              \ is located. Availability Zones are independently mapped to names for\
              \ each Amazon Web Services account. For example, the Availability Zone\
              \ <code>us-east-1a</code> for your Amazon Web Services account might\
              \ not be the same location as <code>us-east-1a</code> for another Amazon\
              \ Web Services account."
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The virtual private cloud (VPC) ID that the mount target
              is configured in.
      required:
      - FileSystemId
      - LifeCycleState
      - MountTargetId
      - SubnetId
      title: MountTargetDescription
      type: object
    SecurityGroup:
      maxLength: 43
      minLength: 11
      pattern: "^sg-[0-9a-f]{8,40}"
      title: SecurityGroup
      type: string
    MountTargetConflict: {}
    SubnetNotFound: {}
    NoFreeAddressesInSubnet: {}
    IpAddressInUse: {}
    NetworkInterfaceLimitExceeded: {}
    SecurityGroupLimitExceeded: {}
    SecurityGroupNotFound: {}
    AvailabilityZonesMismatch: {}
    ReplicationConfigurationDescription:
      example:
        SourceFileSystemArn: ""
        CreationTime: ""
        Destinations: ""
        SourceFileSystemId: ""
        SourceFileSystemRegion: ""
        OriginalSourceFileSystemArn: ""
      properties:
        SourceFileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the source Amazon EFS file system that is being
              replicated.
          title: SourceFileSystemId
        SourceFileSystemRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          - description: The Amazon Web Services Region in which the source Amazon
              EFS file system is located.
          title: SourceFileSystemRegion
        SourceFileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          - description: The Amazon Resource Name (ARN) of the current source file
              system in the replication configuration.
          title: SourceFileSystemArn
        OriginalSourceFileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          - description: The Amazon Resource Name (ARN) of the original source Amazon
              EFS file system in the replication configuration.
          title: OriginalSourceFileSystemArn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Describes when the replication configuration was created.
          title: CreationTime
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: An array of destination objects. Only one destination object
              is supported.
          title: Destinations
      required:
      - CreationTime
      - Destinations
      - OriginalSourceFileSystemArn
      - SourceFileSystemArn
      - SourceFileSystemId
      - SourceFileSystemRegion
      title: ReplicationConfigurationDescription
      type: object
    DestinationToCreate:
      description: Describes the destination file system to create in the replication
        configuration.
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          - description: "To create a file system that uses Regional storage, specify\
              \ the Amazon Web Services Region in which to create the destination\
              \ file system."
          title: Region
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          - description: "To create a file system that uses EFS One Zone storage,\
              \ specify the name of the Availability Zone in which to create the destination\
              \ file system."
          title: AvailabilityZoneName
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>Specifies the Key Management Service (KMS) key that you\
              \ want to use to encrypt the destination file system. If you do not\
              \ specify a KMS key, Amazon EFS uses your default KMS key for Amazon\
              \ EFS, <code>/aws/elasticfilesystem</code>. This ID can be in one of\
              \ the following formats:</p> <ul> <li> <p>Key ID - The unique identifier\
              \ of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
              \ </li> <li> <p>ARN - The Amazon Resource Name (ARN) for the key, for\
              \ example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
              \ </li> <li> <p>Key alias - A previously created display name for a\
              \ key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key\
              \ alias ARN - The ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>\
              \ </li> </ul>"
          title: KmsKeyId
      title: DestinationToCreate
      type: object
    ValidationException: {}
    ReplicationNotFound: {}
    AccessPointNotFound: {}
    FileSystemInUse: {}
    DependencyTimeout: {}
    MountTargetNotFound: {}
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$"
      title: TagKey
      type: string
    DescribeAccessPointsResponse:
      example:
        AccessPoints: ""
        NextToken: ""
      properties:
        AccessPoints:
          allOf:
          - $ref: '#/components/schemas/AccessPointDescriptions'
          - description: An array of access point descriptions.
          title: AccessPoints
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Present if there are more access points than returned in
              the response. You can use the NextMarker in the subsequent request to
              fetch the additional descriptions.
          title: NextToken
      title: DescribeAccessPointsResponse
      type: object
    DescribeAccountPreferencesResponse:
      example:
        NextToken: ""
        ResourceIdPreference:
          ResourceIdType: ""
          Resources: ""
      properties:
        ResourceIdPreference:
          $ref: '#/components/schemas/DescribeAccountPreferencesResponse_ResourceIdPreference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Present if there are more records than returned in the response.
              You can use the <code>NextToken</code> in the subsequent request to
              fetch the additional descriptions.
          title: NextToken
      title: DescribeAccountPreferencesResponse
      type: object
    BackupPolicyDescription:
      example:
        BackupPolicy:
          Status: ""
      properties:
        BackupPolicy:
          $ref: '#/components/schemas/BackupPolicyDescription_BackupPolicy'
      title: BackupPolicyDescription
      type: object
    PolicyNotFound: {}
    FileSystemPolicyDescription:
      example:
        Policy: ""
        FileSystemId: ""
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: Specifies the EFS file system to which the <code>FileSystemPolicy</code>
              applies.
          title: FileSystemId
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: The JSON formatted <code>FileSystemPolicy</code> for the
              EFS file system.
          title: Policy
      title: FileSystemPolicyDescription
      type: object
    DescribeFileSystemsResponse:
      example:
        FileSystems:
        - CreationTime: "1481841524.0"
          CreationToken: tokenstring
          FileSystemId: fs-01234567
          LifeCycleState: available
          Name: MyFileSystem
          NumberOfMountTargets: 1
          OwnerId: "012345678912"
          PerformanceMode: generalPurpose
          SizeInBytes:
            Value: 6144
          Tags:
          - Key: Name
            Value: MyFileSystem
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: Present if provided by caller in the request (String).
        FileSystems:
          allOf:
          - $ref: '#/components/schemas/FileSystemDescriptions'
          - description: An array of file system descriptions.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: Present if there are more file systems than returned in the
              response (String). You can use the <code>NextMarker</code> in the subsequent
              request to fetch the descriptions.
      title: DescribeFileSystemsResponse
      type: object
    LifecycleConfigurationDescription:
      example:
        LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS
      properties:
        LifecyclePolicies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicies'
          - description: An array of lifecycle management policies. EFS supports a
              maximum of one policy per file system.
      title: LifecycleConfigurationDescription
      type: object
    DescribeMountTargetSecurityGroupsResponse:
      example:
        SecurityGroups:
        - sg-4567abcd
      properties:
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: An array of security groups.
      required:
      - SecurityGroups
      title: DescribeMountTargetSecurityGroupsResponse
      type: object
    IncorrectMountTargetState: {}
    DescribeMountTargetsResponse:
      description: <p/>
      example:
        MountTargets:
        - FileSystemId: fs-01234567
          IpAddress: 192.0.0.2
          LifeCycleState: available
          MountTargetId: fsmt-12340abc
          NetworkInterfaceId: eni-cedf6789
          OwnerId: "012345678912"
          SubnetId: subnet-1234abcd
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: "If the request included the <code>Marker</code>, the response\
              \ returns that value in this field."
        MountTargets:
          allOf:
          - $ref: '#/components/schemas/MountTargetDescriptions'
          - description: Returns the file system's mount targets as an array of <code>MountTargetDescription</code>
              objects.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: "If a value is present, there are more mount targets to return.\
              \ In a subsequent request, you can provide <code>Marker</code> in your\
              \ request with this value to retrieve the next set of mount targets."
      title: DescribeMountTargetsResponse
      type: object
    DescribeReplicationConfigurationsResponse:
      example:
        NextToken: ""
        Replications: ""
      properties:
        Replications:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDescriptions'
          - description: The collection of replication configurations that is returned.
          title: Replications
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: You can use the <code>NextToken</code> from the previous
              response in a subsequent request to fetch the additional descriptions.
          title: NextToken
      title: DescribeReplicationConfigurationsResponse
      type: object
    DescribeTagsResponse:
      description: <p/>
      example:
        Tags:
        - Key: Name
          Value: MyFileSystem
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: "If the request included a <code>Marker</code>, the response\
              \ returns that value in this field."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: 'Returns tags associated with the file system as an array
              of <code>Tag</code> objects. '
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: "If a value is present, there are more tags to return. In\
              \ a subsequent request, you can provide the value of <code>NextMarker</code>\
              \ as the value of the <code>Marker</code> parameter in your next request\
              \ to retrieve the next set of tags."
      required:
      - Tags
      title: DescribeTagsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: An array of the tags for the specified EFS resource.
          title: Tags
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: ' <code>NextToken</code> is present if the response payload
              is paginated. You can use <code>NextToken</code> in a subsequent request
              to fetch the next page of access point descriptions.'
          title: NextToken
      title: ListTagsForResourceResponse
      type: object
    PutAccountPreferencesResponse:
      example:
        ResourceIdPreference:
          ResourceIdType: ""
          Resources: ""
      properties:
        ResourceIdPreference:
          $ref: '#/components/schemas/ResourceIdPreference'
      title: PutAccountPreferencesResponse
      type: object
    Status:
      enum:
      - ENABLED
      - ENABLING
      - DISABLED
      - DISABLING
      title: Status
      type: string
    InvalidPolicyException: {}
    LifecyclePolicy:
      description: "<p>Describes a policy used by EFS lifecycle management and EFS\
        \ Intelligent-Tiering that specifies when to transition files into and out\
        \ of the file system's Infrequent Access (IA) storage class. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html\"\
        >EFS Intelligent‐Tiering and EFS Lifecycle Management</a>.</p> <note> <p>When\
        \ using the <code>put-lifecycle-configuration</code> CLI command or the <code>PutLifecycleConfiguration</code>\
        \ API action, Amazon EFS requires that each <code>LifecyclePolicy</code> object\
        \ have only a single transition. This means that in a request body, <code>LifecyclePolicies</code>\
        \ must be structured as an array of <code>LifecyclePolicy</code> objects,\
        \ one object for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>.\
        \ For more information, see the request examples in <a>PutLifecycleConfiguration</a>.</p>\
        \ </note>"
      properties:
        TransitionToIA:
          allOf:
          - $ref: '#/components/schemas/TransitionToIARules'
          - description: " Describes the period of time that a file is not accessed,\
              \ after which it transitions to IA storage. Metadata operations such\
              \ as listing the contents of a directory don't count as file access\
              \ events."
          title: TransitionToIA
        TransitionToPrimaryStorageClass:
          allOf:
          - $ref: '#/components/schemas/TransitionToPrimaryStorageClassRules'
          - description: Describes when to transition a file from IA storage to primary
              storage. Metadata operations such as listing the contents of a directory
              don't count as file access events.
          title: TransitionToPrimaryStorageClass
      title: LifecyclePolicy
      type: object
    TooManyRequests: {}
    AccessPointArn:
      maxLength: 128
      pattern: "^arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}$"
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: .+
      type: string
    Name:
      type: string
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    AccessPointId:
      maxLength: 128
      pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$"
      type: string
    FileSystemId:
      maxLength: 128
      pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
      type: string
    PosixUser:
      description: "The full POSIX identity, including the user ID, group ID, and\
        \ any secondary group IDs, on the access point that is used for all file system\
        \ operations performed by NFS clients using the access point."
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/Uid'
          - description: The POSIX user ID used for all file system operations using
              this access point.
          title: Uid
        Gid:
          allOf:
          - $ref: '#/components/schemas/Gid'
          - description: The POSIX group ID used for all file system operations using
              this access point.
          title: Gid
        SecondaryGids:
          allOf:
          - $ref: '#/components/schemas/SecondaryGids'
          - description: Secondary POSIX group IDs used for all file system operations
              using this access point.
          title: SecondaryGids
      required:
      - Gid
      - Uid
      title: PosixUser
      type: object
    RootDirectory:
      description: Specifies the directory on the Amazon EFS file system that the
        access point provides access to. The access point exposes the specified file
        system path as the root directory of your file system to applications using
        the access point. NFS clients using the access point can only access data
        in the access point's <code>RootDirectory</code> and it's subdirectories.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: "Specifies the path on the EFS file system to expose as the\
              \ root directory to NFS clients using the access point to access the\
              \ EFS file system. A path can have up to four subdirectories. If the\
              \ specified path does not exist, you are required to provide the <code>CreationInfo</code>."
          title: Path
        CreationInfo:
          $ref: '#/components/schemas/CreateAccessPoint_request_RootDirectory_CreationInfo'
      title: RootDirectory
      type: object
    AwsAccountId:
      maxLength: 14
      pattern: "^(\\d{12})|(\\d{4}-\\d{4}-\\d{4})$"
      type: string
    LifeCycleState:
      enum:
      - creating
      - available
      - updating
      - deleting
      - deleted
      - error
      title: LifeCycleState
      type: string
    AccessPointDescriptions:
      items:
        $ref: '#/components/schemas/AccessPointDescription'
      type: array
    AvailabilityZoneId:
      type: string
    AvailabilityZoneName:
      maxLength: 64
      minLength: 1
      pattern: .+
      type: string
    Backup:
      type: boolean
    BackupPolicy:
      description: "The backup policy for the file system used to create automatic\
        \ daily backups. If status has a value of <code>ENABLED</code>, the file system\
        \ is being automatically backed up. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\"\
        >Automatic backups</a>."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>Describes the status of the file system's backup policy.</p>
              <ul> <li> <p> <b> <code>ENABLED</code> </b> - EFS is automatically backing
              up the file system.</p> </li> <li> <p> <b> <code>ENABLING</code> </b>
              - EFS is turning on automatic backups for the file system.</p> </li>
              <li> <p> <b> <code>DISABLED</code> </b> - Automatic back ups are turned
              off for the file system.</p> </li> <li> <p> <b> <code>DISABLING</code>
              </b> - EFS is turning off automatic backups for the file system.</p>
              </li> </ul>
          title: Status
      required:
      - Status
      title: BackupPolicy
      type: object
    BypassPolicyLockoutSafetyCheck:
      type: boolean
    CreateAccessPointRequest:
      example:
        FileSystemId: ""
        RootDirectory:
          Path: ""
          CreationInfo:
            OwnerGid: ""
            OwnerUid: ""
            Permissions: ""
        ClientToken: ""
        PosixUser:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        Tags: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A string of up to 64 ASCII characters that Amazon EFS uses
              to ensure idempotent creation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Creates tags associated with the access point. Each tag\
              \ is a key-value pair, each key must be unique. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
              \ General Reference Guide</i>."
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the EFS file system that the access point provides
              access to.
        PosixUser:
          $ref: '#/components/schemas/CreateAccessPointRequest_PosixUser'
        RootDirectory:
          $ref: '#/components/schemas/CreateAccessPointRequest_RootDirectory'
      required:
      - ClientToken
      - FileSystemId
      title: CreateAccessPointRequest
      type: object
    CreationToken:
      maxLength: 64
      minLength: 1
      pattern: .+
      type: string
    PerformanceMode:
      enum:
      - generalPurpose
      - maxIO
      title: PerformanceMode
      type: string
    Encrypted:
      type: boolean
    KmsKeyId:
      maxLength: 2048
      pattern: "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\\\
        d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$"
      type: string
    ThroughputMode:
      enum:
      - bursting
      - provisioned
      - elastic
      title: ThroughputMode
      type: string
    ProvisionedThroughputInMibps:
      format: double
      minimum: 1
      type: number
    CreateFileSystemRequest:
      example:
        CreationToken: ""
        KmsKeyId: ""
        PerformanceMode: ""
        Encrypted: ""
        Backup: ""
        ProvisionedThroughputInMibps: ""
        AvailabilityZoneName: ""
        ThroughputMode: ""
        Tags: ""
      properties:
        CreationToken:
          allOf:
          - $ref: '#/components/schemas/CreationToken'
          - description: A string of up to 64 ASCII characters. Amazon EFS uses this
              to ensure idempotent creation.
        PerformanceMode:
          allOf:
          - $ref: '#/components/schemas/PerformanceMode'
          - description: <p>The performance mode of the file system. We recommend
              <code>generalPurpose</code> performance mode for most file systems.
              File systems using the <code>maxIO</code> performance mode can scale
              to higher levels of aggregate throughput and operations per second with
              a tradeoff of slightly higher latencies for most file operations. The
              performance mode can't be changed after the file system has been created.</p>
              <note> <p>The <code>maxIO</code> mode is not supported on file systems
              using One Zone storage classes.</p> </note>
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          - description: "A Boolean value that, if true, creates an encrypted file\
              \ system. When creating an encrypted file system, you have the option\
              \ of specifying an existing Key Management Service key (KMS key). If\
              \ you don't specify a KMS key, then the default KMS key for Amazon EFS,\
              \ <code>/aws/elasticfilesystem</code>, is used to protect the encrypted\
              \ file system. "
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the KMS key that you want to use to protect\
              \ the encrypted file system. This parameter is required only if you\
              \ want to use a non-default KMS key. If this parameter is not specified,\
              \ the default KMS key for Amazon EFS is used. You can specify a KMS\
              \ key ID using the following formats:</p> <ul> <li> <p>Key ID - A unique\
              \ identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
              \ </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for\
              \ example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
              \ </li> <li> <p>Key alias - A previously created display name for a\
              \ key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key\
              \ alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>\
              \ </li> </ul> <p>If you use <code>KmsKeyId</code>, you must set the\
              \ <a>CreateFileSystemRequest$Encrypted</a> parameter to true.</p> <important>\
              \ <p>EFS accepts only symmetric KMS keys. You cannot use asymmetric\
              \ KMS keys with Amazon EFS file systems.</p> </important>"
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          - description: "<p>Specifies the throughput mode for the file system. The\
              \ mode can be <code>bursting</code>, <code>provisioned</code>, or <code>elastic</code>.\
              \ If you set <code>ThroughputMode</code> to <code>provisioned</code>,\
              \ you must also set a value for <code>ProvisionedThroughputInMibps</code>.\
              \ After you create the file system, you can decrease your file system's\
              \ throughput in Provisioned Throughput mode or change between the throughput\
              \ modes, with certain time restrictions. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput\"\
              >Specifying throughput with provisioned mode</a> in the <i>Amazon EFS\
              \ User Guide</i>. </p> <p>Default is <code>bursting</code>.</p>"
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          - description: "The throughput, measured in MiB/s, that you want to provision\
              \ for a file system that you're creating. Valid values are 1-1024. Required\
              \ if <code>ThroughputMode</code> is set to <code>provisioned</code>.\
              \ The upper limit for throughput is 1024 MiB/s. To increase this limit,\
              \ contact Amazon Web Services Support. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\"\
              >Amazon EFS quotas that you can increase</a> in the <i>Amazon EFS User\
              \ Guide</i>."
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          - description: "<p>Used to create a file system that uses One Zone storage\
              \ classes. It specifies the Amazon Web Services Availability Zone in\
              \ which to create the file system. Use the format <code>us-east-1a</code>\
              \ to specify the Availability Zone. For more information about One Zone\
              \ storage classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\"\
              >Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>\
              \ <note> <p>One Zone storage classes are not available in all Availability\
              \ Zones in Amazon Web Services Regions where Amazon EFS is available.</p>\
              \ </note>"
        Backup:
          allOf:
          - $ref: '#/components/schemas/Backup'
          - description: "<p>Specifies whether automatic backups are enabled on the\
              \ file system that you are creating. Set the value to <code>true</code>\
              \ to enable automatic backups. If you are creating a file system that\
              \ uses One Zone storage classes, automatic backups are enabled by default.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\"\
              >Automatic backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default\
              \ is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>,\
              \ the default is <code>true</code>.</p> <note> <p>Backup is not available\
              \ in all Amazon Web Services Regions where Amazon EFS is available.</p>\
              \ </note>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Use to create one or more tags associated with the file\
              \ system. Each tag is a user-defined key-value pair. Name your file\
              \ system on creation by including a <code>\"Key\":\"Name\",\"Value\"\
              :\"{value}\"</code> key-value pair. Each key must be unique. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
              \ General Reference Guide</i>."
      required:
      - CreationToken
      title: CreateFileSystemRequest
      type: object
    SubnetId:
      maxLength: 47
      minLength: 15
      pattern: "^subnet-[0-9a-f]{8,40}$"
      type: string
    IpAddress:
      maxLength: 15
      minLength: 7
      pattern: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$"
      type: string
    SecurityGroups:
      items:
        $ref: '#/components/schemas/SecurityGroup'
      maxItems: 100
      type: array
    CreateMountTargetRequest:
      description: <p/>
      example:
        SecurityGroups: ""
        FileSystemId: ""
        IpAddress: ""
        SubnetId: ""
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the file system for which to create the mount target.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          - description: "The ID of the subnet to add the mount target in. For file\
              \ systems that use One Zone storage classes, use the subnet that is\
              \ associated with the file system's Availability Zone."
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: Valid IPv4 address within the address range of the specified
              subnet.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: "Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>.\
              \ These must be for the same VPC as subnet specified."
      required:
      - FileSystemId
      - SubnetId
      title: CreateMountTargetRequest
      type: object
    DestinationsToCreate:
      items:
        $ref: '#/components/schemas/DestinationToCreate'
      type: array
    CreateReplicationConfigurationRequest:
      example:
        Destinations: ""
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/DestinationsToCreate'
          - description: An array of destination configuration objects. Only one destination
              configuration object is supported.
      required:
      - Destinations
      title: CreateReplicationConfigurationRequest
      type: object
    CreateTagsRequest:
      description: <p/>
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: 'An array of <code>Tag</code> objects to add. Each <code>Tag</code>
              object is a key-value pair. '
      required:
      - Tags
      title: CreateTagsRequest
      type: object
    OwnerUid:
      maximum: 4294967295
      minimum: 0
      type: integer
    OwnerGid:
      maximum: 4294967295
      minimum: 0
      type: integer
    Permissions:
      maxLength: 4
      minLength: 3
      pattern: "^[0-7]{3,4}$"
      type: string
    DeleteAccessPointRequest:
      properties: {}
      title: DeleteAccessPointRequest
      type: object
    DeleteFileSystemPolicyRequest:
      properties: {}
      title: DeleteFileSystemPolicyRequest
      type: object
    DeleteFileSystemRequest:
      description: <p/>
      properties: {}
      title: DeleteFileSystemRequest
      type: object
    MountTargetId:
      maxLength: 45
      minLength: 13
      pattern: "^fsmt-[0-9a-f]{8,40}$"
      type: string
    DeleteMountTargetRequest:
      description: <p/>
      properties: {}
      title: DeleteMountTargetRequest
      type: object
    DeleteReplicationConfigurationRequest:
      properties: {}
      title: DeleteReplicationConfigurationRequest
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    DeleteTagsRequest:
      description: <p/>
      example:
        TagKeys: ""
      properties:
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: A list of tag keys to delete.
      required:
      - TagKeys
      title: DeleteTagsRequest
      type: object
    MaxResults:
      description: Max results used for pagination.
      minimum: 1
      type: integer
    Token:
      description: Token used for pagination.
      maxLength: 128
      minLength: 1
      pattern: .+
      type: string
    DescribeAccessPointsRequest:
      properties: {}
      title: DescribeAccessPointsRequest
      type: object
    DescribeAccountPreferencesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: (Optional) You can use <code>NextToken</code> in a subsequent
              request to fetch the next page of Amazon Web Services account preferences
              if the response payload was paginated.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "(Optional) When retrieving account preferences, you can\
              \ optionally specify the <code>MaxItems</code> parameter to limit the\
              \ number of objects returned in a response. The default value is 100. "
      title: DescribeAccountPreferencesRequest
      type: object
    ResourceIdPreference:
      description: "Describes the resource type and its ID preference for the user's\
        \ Amazon Web Services account, in the current Amazon Web Services Region."
      example:
        ResourceIdType: ""
        Resources: ""
      properties:
        ResourceIdType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          - description: "Identifies the EFS resource ID preference, either <code>LONG_ID</code>\
              \ (17 characters) or <code>SHORT_ID</code> (8 characters)."
          title: ResourceIdType
        Resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          - description: "Identifies the Amazon EFS resources to which the ID preference\
              \ setting applies, <code>FILE_SYSTEM</code> and <code>MOUNT_TARGET</code>."
          title: Resources
      title: ResourceIdPreference
      type: object
    DescribeBackupPolicyRequest:
      properties: {}
      title: DescribeBackupPolicyRequest
      type: object
    DescribeFileSystemPolicyRequest:
      properties: {}
      title: DescribeFileSystemPolicyRequest
      type: object
    MaxItems:
      minimum: 1
      type: integer
    Marker:
      maxLength: 128
      minLength: 1
      pattern: .+
      type: string
    DescribeFileSystemsRequest:
      description: <p/>
      properties: {}
      title: DescribeFileSystemsRequest
      type: object
    FileSystemDescriptions:
      items:
        $ref: '#/components/schemas/FileSystemDescription'
      type: array
    DescribeLifecycleConfigurationRequest:
      properties: {}
      title: DescribeLifecycleConfigurationRequest
      type: object
    DescribeMountTargetSecurityGroupsRequest:
      description: <p/>
      properties: {}
      title: DescribeMountTargetSecurityGroupsRequest
      type: object
    DescribeMountTargetsRequest:
      description: <p/>
      properties: {}
      title: DescribeMountTargetsRequest
      type: object
    MountTargetDescriptions:
      items:
        $ref: '#/components/schemas/MountTargetDescription'
      type: array
    DescribeReplicationConfigurationsRequest:
      properties: {}
      title: DescribeReplicationConfigurationsRequest
      type: object
    ReplicationConfigurationDescriptions:
      items:
        $ref: '#/components/schemas/ReplicationConfigurationDescription'
      type: array
    DescribeTagsRequest:
      description: <p/>
      properties: {}
      title: DescribeTagsRequest
      type: object
    ReplicationStatus:
      enum:
      - ENABLED
      - ENABLING
      - DELETING
      - ERROR
      - PAUSED
      - PAUSING
      title: ReplicationStatus
      type: string
    RegionName:
      maxLength: 64
      minLength: 1
      pattern: "^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-{0,1}[0-9]{0,1}$"
      type: string
    Timestamp:
      format: date-time
      type: string
    Destination:
      description: Describes the destination file system in the replication configuration.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReplicationStatus'
          - description: "<p>Describes the status of the destination Amazon EFS file\
              \ system.</p> <ul> <li> <p>The <code>Paused</code> state occurs as a\
              \ result of opting out of the source or destination Region after the\
              \ replication configuration was created. To resume replication for the\
              \ file system, you need to again opt in to the Amazon Web Services Region.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html#rande-manage-enable\"\
              >Managing Amazon Web Services Regions</a> in the <i>Amazon Web Services\
              \ General Reference Guide</i>.</p> </li> <li> <p>The <code>Error</code>\
              \ state occurs when either the source or the destination file system\
              \ (or both) is in a failed state and is unrecoverable. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#restoring-backup-efsmonitoring-replication-status.html\"\
              >Monitoring replication status</a> in the <i>Amazon EFS User Guide</i>.\
              \ You must delete the replication configuration, and then restore the\
              \ most recent backup of the failed file system (either the source or\
              \ the destination) to a new file system.</p> </li> </ul>"
          title: Status
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          - description: The ID of the destination Amazon EFS file system.
          title: FileSystemId
        Region:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          - description: The Amazon Web Services Region in which the destination file
              system is located.
          title: Region
        LastReplicatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the most recent sync was successfully completed
              on the destination file system. Any changes to data on the source file
              system that occurred before this time have been successfully replicated
              to the destination file system. Any changes that occurred after this
              time might not be fully replicated.
          title: LastReplicatedTimestamp
      required:
      - FileSystemId
      - Region
      - Status
      title: Destination
      type: object
    Destinations:
      items:
        $ref: '#/components/schemas/Destination'
      type: array
    FileSystemArn:
      type: string
    TagValue:
      maxLength: 256
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    MountTargetCount:
      minimum: 0
      type: integer
    FileSystemSize:
      description: "The latest known metered size (in bytes) of data stored in the\
        \ file system, in its <code>Value</code> field, and the time at which that\
        \ size was determined in its <code>Timestamp</code> field. The value doesn't\
        \ represent the size of a consistent snapshot of the file system, but it is\
        \ eventually consistent when there are no writes to the file system. That\
        \ is, the value represents the actual size only if the file system is not\
        \ modified for a period longer than a couple of hours. Otherwise, the value\
        \ is not necessarily the exact size the file system was at any instant in\
        \ time."
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/FileSystemSizeValue'
          - description: The latest known metered size (in bytes) of data stored in
              the file system.
          title: Value
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time at which the size of data, returned in the <code>Value</code>\
              \ field, was determined. The value is the integer number of seconds\
              \ since 1970-01-01T00:00:00Z."
          title: Timestamp
        ValueInIA:
          allOf:
          - $ref: '#/components/schemas/FileSystemNullableSizeValue'
          - description: The latest known metered size (in bytes) of data stored in
              the Infrequent Access storage class.
          title: ValueInIA
        ValueInStandard:
          allOf:
          - $ref: '#/components/schemas/FileSystemNullableSizeValue'
          - description: The latest known metered size (in bytes) of data stored in
              the Standard storage class.
          title: ValueInStandard
      required:
      - Value
      title: FileSystemSize
      type: object
    FileSystemNullableSizeValue:
      minimum: 0
      type: integer
    Policy:
      maxLength: 20000
      minLength: 1
      pattern: "[\\s\\S]+"
      type: string
    FileSystemSizeValue:
      minimum: 0
      type: integer
    LifecyclePolicies:
      items:
        $ref: '#/components/schemas/LifecyclePolicy'
      maxItems: 2
      type: array
    TransitionToIARules:
      enum:
      - AFTER_7_DAYS
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_90_DAYS
      - AFTER_1_DAY
      title: TransitionToIARules
      type: string
    TransitionToPrimaryStorageClassRules:
      enum:
      - AFTER_1_ACCESS
      title: TransitionToPrimaryStorageClassRules
      type: string
    ResourceId:
      maxLength: 128
      pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$"
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ModifyMountTargetSecurityGroupsRequest:
      description: <p/>
      example:
        SecurityGroups: ""
      properties:
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: An array of up to five VPC security group IDs.
      title: ModifyMountTargetSecurityGroupsRequest
      type: object
    NetworkInterfaceId:
      type: string
    VpcId:
      type: string
    ResourceIdType:
      description: A preference indicating a choice to use 63bit/32bit IDs for all
        applicable resources.
      enum:
      - LONG_ID
      - SHORT_ID
      title: ResourceIdType
      type: string
    PutAccountPreferencesRequest:
      example:
        ResourceIdType: ""
      properties:
        ResourceIdType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          - description: "<p>Specifies the EFS resource ID preference to set for the\
              \ user's Amazon Web Services account, in the current Amazon Web Services\
              \ Region, either <code>LONG_ID</code> (17 characters), or <code>SHORT_ID</code>\
              \ (8 characters).</p> <note> <p>Starting in October, 2021, you will\
              \ receive an error when setting the account preference to <code>SHORT_ID</code>.\
              \ Contact Amazon Web Services support if you receive an error and must\
              \ use short IDs for file system and mount target resources.</p> </note>"
      required:
      - ResourceIdType
      title: PutAccountPreferencesRequest
      type: object
    PutBackupPolicyRequest:
      example:
        BackupPolicy:
          Status: ""
      properties:
        BackupPolicy:
          $ref: '#/components/schemas/PutBackupPolicyRequest_BackupPolicy'
      required:
      - BackupPolicy
      title: PutBackupPolicyRequest
      type: object
    PutFileSystemPolicyRequest:
      example:
        Policy: ""
        BypassPolicyLockoutSafetyCheck: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "The <code>FileSystemPolicy</code> that you're creating.\
              \ Accepts a JSON formatted policy definition. EFS file system policies\
              \ have a 20,000 character limit. To find out more about the elements\
              \ that make up a file system policy, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies\"\
              >EFS Resource-based Policies</a>. "
        BypassPolicyLockoutSafetyCheck:
          allOf:
          - $ref: '#/components/schemas/BypassPolicyLockoutSafetyCheck'
          - description: "(Optional) A boolean that specifies whether or not to bypass\
              \ the <code>FileSystemPolicy</code> lockout safety check. The lockout\
              \ safety check determines whether the policy in the request will lock\
              \ out, or prevent, the IAM principal that is making the request from\
              \ making future <code>PutFileSystemPolicy</code> requests on this file\
              \ system. Set <code>BypassPolicyLockoutSafetyCheck</code> to <code>True</code>\
              \ only when you intend to prevent the IAM principal that is making the\
              \ request from making subsequent <code>PutFileSystemPolicy</code> requests\
              \ on this file system. The default value is <code>False</code>. "
      required:
      - Policy
      title: PutFileSystemPolicyRequest
      type: object
    PutLifecycleConfigurationRequest:
      example:
        LifecyclePolicies: ""
      properties:
        LifecyclePolicies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicies'
          - description: "<p>An array of <code>LifecyclePolicy</code> objects that\
              \ define the file system's <code>LifecycleConfiguration</code> object.\
              \ A <code>LifecycleConfiguration</code> object informs EFS lifecycle\
              \ management and EFS Intelligent-Tiering of the following:</p> <ul>\
              \ <li> <p>When to move files in the file system from primary storage\
              \ to the IA storage class.</p> </li> <li> <p>When to move files that\
              \ are in IA storage to primary storage.</p> </li> </ul> <note> <p>When\
              \ using the <code>put-lifecycle-configuration</code> CLI command or\
              \ the <code>PutLifecycleConfiguration</code> API action, Amazon EFS\
              \ requires that each <code>LifecyclePolicy</code> object have only a\
              \ single transition. This means that in a request body, <code>LifecyclePolicies</code>\
              \ must be structured as an array of <code>LifecyclePolicy</code> objects,\
              \ one object for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>.\
              \ See the example requests in the following section for more information.</p>\
              \ </note>"
      required:
      - LifecyclePolicies
      title: PutLifecycleConfigurationRequest
      type: object
    Resource:
      description: "An EFS resource, for example a file system or a mount target."
      enum:
      - FILE_SYSTEM
      - MOUNT_TARGET
      title: Resource
      type: string
    Resources:
      description: EFS resources to which a preference applies to.
      items:
        $ref: '#/components/schemas/Resource'
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: An array of <code>Tag</code> objects to add. Each <code>Tag</code>
              object is a key-value pair.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateFileSystemRequest:
      example:
        ProvisionedThroughputInMibps: ""
        ThroughputMode: ""
      properties:
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          - description: "(Optional) Updates the file system's throughput mode. If\
              \ you're not updating your throughput mode, you don't need to provide\
              \ this value in your request. If you are changing the <code>ThroughputMode</code>\
              \ to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>."
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          - description: "(Optional) Sets the amount of provisioned throughput, in\
              \ MiB/s, for the file system. Valid values are 1-1024. If you are changing\
              \ the throughput mode to provisioned, you must also provide the amount\
              \ of provisioned throughput. Required if <code>ThroughputMode</code>\
              \ is changed to <code>provisioned</code> on update."
      title: UpdateFileSystemRequest
      type: object
    CreateAccessPoint_request_PosixUser:
      description: "The full POSIX identity, including the user ID, group ID, and\
        \ any secondary group IDs, on the access point that is used for all file system\
        \ operations performed by NFS clients using the access point."
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/Uid'
          - description: The POSIX user ID used for all file system operations using
              this access point.
          title: Uid
        Gid:
          allOf:
          - $ref: '#/components/schemas/Gid'
          - description: The POSIX group ID used for all file system operations using
              this access point.
          title: Gid
        SecondaryGids:
          allOf:
          - $ref: '#/components/schemas/SecondaryGids'
          - description: Secondary POSIX group IDs used for all file system operations
              using this access point.
          title: SecondaryGids
      title: CreateAccessPoint_request_PosixUser
      type: object
    CreateAccessPoint_request_RootDirectory_CreationInfo:
      allOf:
      - $ref: '#/components/schemas/CreationInfo'
      - description: "<p>(Optional) Specifies the POSIX IDs and permissions to apply\
          \ to the access point's <code>RootDirectory</code>. If the <code>RootDirectory</code>\
          \ &gt; <code>Path</code> specified does not exist, EFS creates the root\
          \ directory using the <code>CreationInfo</code> settings when a client connects\
          \ to an access point. When specifying the <code>CreationInfo</code>, you\
          \ must provide values for all properties. </p> <important> <p>If you do\
          \ not provide <code>CreationInfo</code> and the specified <code>RootDirectory</code>\
          \ &gt; <code>Path</code> does not exist, attempts to mount the file system\
          \ using the access point will fail.</p> </important>"
      example:
        OwnerGid: ""
        OwnerUid: ""
        Permissions: ""
      title: CreateAccessPoint_request_RootDirectory_CreationInfo
    CreateAccessPoint_request_RootDirectory:
      description: Specifies the directory on the Amazon EFS file system that the
        access point provides access to. The access point exposes the specified file
        system path as the root directory of your file system to applications using
        the access point. NFS clients using the access point can only access data
        in the access point's <code>RootDirectory</code> and it's subdirectories.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: "Specifies the path on the EFS file system to expose as the\
              \ root directory to NFS clients using the access point to access the\
              \ EFS file system. A path can have up to four subdirectories. If the\
              \ specified path does not exist, you are required to provide the <code>CreationInfo</code>."
          title: Path
        CreationInfo:
          $ref: '#/components/schemas/CreateAccessPoint_request_RootDirectory_CreationInfo'
      title: CreateAccessPoint_request_RootDirectory
      type: object
    CreateAccessPoint_request:
      properties:
        ClientToken:
          description: A string of up to 64 ASCII characters that Amazon EFS uses
            to ensure idempotent creation.
          maxLength: 64
          minLength: 1
          pattern: .+
          title: ClientToken
          type: string
        Tags:
          description: "Creates tags associated with the access point. Each tag is\
            \ a key-value pair, each key must be unique. For more information, see\
            \ <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
            \ General Reference Guide</i>."
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
        FileSystemId:
          description: The ID of the EFS file system that the access point provides
            access to.
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          title: FileSystemId
          type: string
        PosixUser:
          $ref: '#/components/schemas/CreateAccessPoint_request_PosixUser'
        RootDirectory:
          $ref: '#/components/schemas/CreateAccessPoint_request_RootDirectory'
      required:
      - ClientToken
      - FileSystemId
      title: CreateAccessPoint_request
      type: object
    CreateFileSystem_request:
      properties:
        CreationToken:
          description: A string of up to 64 ASCII characters. Amazon EFS uses this
            to ensure idempotent creation.
          maxLength: 64
          minLength: 1
          pattern: .+
          title: CreationToken
          type: string
        PerformanceMode:
          description: <p>The performance mode of the file system. We recommend <code>generalPurpose</code>
            performance mode for most file systems. File systems using the <code>maxIO</code>
            performance mode can scale to higher levels of aggregate throughput and
            operations per second with a tradeoff of slightly higher latencies for
            most file operations. The performance mode can't be changed after the
            file system has been created.</p> <note> <p>The <code>maxIO</code> mode
            is not supported on file systems using One Zone storage classes.</p> </note>
          enum:
          - generalPurpose
          - maxIO
          title: PerformanceMode
          type: string
        Encrypted:
          description: "A Boolean value that, if true, creates an encrypted file system.\
            \ When creating an encrypted file system, you have the option of specifying\
            \ an existing Key Management Service key (KMS key). If you don't specify\
            \ a KMS key, then the default KMS key for Amazon EFS, <code>/aws/elasticfilesystem</code>,\
            \ is used to protect the encrypted file system. "
          title: Encrypted
          type: boolean
        KmsKeyId:
          description: "<p>The ID of the KMS key that you want to use to protect the\
            \ encrypted file system. This parameter is required only if you want to\
            \ use a non-default KMS key. If this parameter is not specified, the default\
            \ KMS key for Amazon EFS is used. You can specify a KMS key ID using the\
            \ following formats:</p> <ul> <li> <p>Key ID - A unique identifier of\
            \ the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
            \ </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example\
            \ <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>\
            \ </li> <li> <p>Key alias - A previously created display name for a key,\
            \ for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias\
            \ ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>\
            \ </li> </ul> <p>If you use <code>KmsKeyId</code>, you must set the <a>CreateFileSystemRequest$Encrypted</a>\
            \ parameter to true.</p> <important> <p>EFS accepts only symmetric KMS\
            \ keys. You cannot use asymmetric KMS keys with Amazon EFS file systems.</p>\
            \ </important>"
          maxLength: 2048
          pattern: "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\\\
            d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$"
          title: KmsKeyId
          type: string
        ThroughputMode:
          description: "<p>Specifies the throughput mode for the file system. The\
            \ mode can be <code>bursting</code>, <code>provisioned</code>, or <code>elastic</code>.\
            \ If you set <code>ThroughputMode</code> to <code>provisioned</code>,\
            \ you must also set a value for <code>ProvisionedThroughputInMibps</code>.\
            \ After you create the file system, you can decrease your file system's\
            \ throughput in Provisioned Throughput mode or change between the throughput\
            \ modes, with certain time restrictions. For more information, see <a\
            \ href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput\"\
            >Specifying throughput with provisioned mode</a> in the <i>Amazon EFS\
            \ User Guide</i>. </p> <p>Default is <code>bursting</code>.</p>"
          enum:
          - bursting
          - provisioned
          - elastic
          title: ThroughputMode
          type: string
        ProvisionedThroughputInMibps:
          description: "The throughput, measured in MiB/s, that you want to provision\
            \ for a file system that you're creating. Valid values are 1-1024. Required\
            \ if <code>ThroughputMode</code> is set to <code>provisioned</code>. The\
            \ upper limit for throughput is 1024 MiB/s. To increase this limit, contact\
            \ Amazon Web Services Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\"\
            >Amazon EFS quotas that you can increase</a> in the <i>Amazon EFS User\
            \ Guide</i>."
          format: double
          minimum: 1
          title: ProvisionedThroughputInMibps
          type: number
        AvailabilityZoneName:
          description: "<p>Used to create a file system that uses One Zone storage\
            \ classes. It specifies the Amazon Web Services Availability Zone in which\
            \ to create the file system. Use the format <code>us-east-1a</code> to\
            \ specify the Availability Zone. For more information about One Zone storage\
            \ classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\"\
            >Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>\
            \ <note> <p>One Zone storage classes are not available in all Availability\
            \ Zones in Amazon Web Services Regions where Amazon EFS is available.</p>\
            \ </note>"
          maxLength: 64
          minLength: 1
          pattern: .+
          title: AvailabilityZoneName
          type: string
        Backup:
          description: "<p>Specifies whether automatic backups are enabled on the\
            \ file system that you are creating. Set the value to <code>true</code>\
            \ to enable automatic backups. If you are creating a file system that\
            \ uses One Zone storage classes, automatic backups are enabled by default.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\"\
            >Automatic backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default\
            \ is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>,\
            \ the default is <code>true</code>.</p> <note> <p>Backup is not available\
            \ in all Amazon Web Services Regions where Amazon EFS is available.</p>\
            \ </note>"
          title: Backup
          type: boolean
        Tags:
          description: "Use to create one or more tags associated with the file system.\
            \ Each tag is a user-defined key-value pair. Name your file system on\
            \ creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"\
            </code> key-value pair. Each key must be unique. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
            \ General Reference Guide</i>."
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - CreationToken
      title: CreateFileSystem_request
      type: object
    CreateMountTarget_request:
      properties:
        FileSystemId:
          description: The ID of the file system for which to create the mount target.
          maxLength: 128
          pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$"
          title: FileSystemId
          type: string
        SubnetId:
          description: "The ID of the subnet to add the mount target in. For file\
            \ systems that use One Zone storage classes, use the subnet that is associated\
            \ with the file system's Availability Zone."
          maxLength: 47
          minLength: 15
          pattern: "^subnet-[0-9a-f]{8,40}$"
          title: SubnetId
          type: string
        IpAddress:
          description: Valid IPv4 address within the address range of the specified
            subnet.
          maxLength: 15
          minLength: 7
          pattern: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$"
          title: IpAddress
          type: string
        SecurityGroups:
          description: "Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>.\
            \ These must be for the same VPC as subnet specified."
          items:
            $ref: '#/components/schemas/SecurityGroup'
          maxItems: 100
          title: SecurityGroups
          type: array
      required:
      - FileSystemId
      - SubnetId
      title: CreateMountTarget_request
      type: object
    CreateReplicationConfiguration_request:
      properties:
        Destinations:
          description: An array of destination configuration objects. Only one destination
            configuration object is supported.
          items:
            $ref: '#/components/schemas/DestinationToCreate'
          title: Destinations
          type: array
      required:
      - Destinations
      title: CreateReplicationConfiguration_request
      type: object
    CreateTags_request:
      properties:
        Tags:
          description: 'An array of <code>Tag</code> objects to add. Each <code>Tag</code>
            object is a key-value pair. '
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - Tags
      title: CreateTags_request
      type: object
    UpdateFileSystem_request:
      properties:
        ThroughputMode:
          description: "(Optional) Updates the file system's throughput mode. If you're\
            \ not updating your throughput mode, you don't need to provide this value\
            \ in your request. If you are changing the <code>ThroughputMode</code>\
            \ to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>."
          enum:
          - bursting
          - provisioned
          - elastic
          title: ThroughputMode
          type: string
        ProvisionedThroughputInMibps:
          description: "(Optional) Sets the amount of provisioned throughput, in MiB/s,\
            \ for the file system. Valid values are 1-1024. If you are changing the\
            \ throughput mode to provisioned, you must also provide the amount of\
            \ provisioned throughput. Required if <code>ThroughputMode</code> is changed\
            \ to <code>provisioned</code> on update."
          format: double
          minimum: 1
          title: ProvisionedThroughputInMibps
          type: number
      title: UpdateFileSystem_request
      type: object
    PutFileSystemPolicy_request:
      properties:
        Policy:
          description: "The <code>FileSystemPolicy</code> that you're creating. Accepts\
            \ a JSON formatted policy definition. EFS file system policies have a\
            \ 20,000 character limit. To find out more about the elements that make\
            \ up a file system policy, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies\"\
            >EFS Resource-based Policies</a>. "
          maxLength: 20000
          minLength: 1
          pattern: "[\\s\\S]+"
          title: Policy
          type: string
        BypassPolicyLockoutSafetyCheck:
          description: "(Optional) A boolean that specifies whether or not to bypass\
            \ the <code>FileSystemPolicy</code> lockout safety check. The lockout\
            \ safety check determines whether the policy in the request will lock\
            \ out, or prevent, the IAM principal that is making the request from making\
            \ future <code>PutFileSystemPolicy</code> requests on this file system.\
            \ Set <code>BypassPolicyLockoutSafetyCheck</code> to <code>True</code>\
            \ only when you intend to prevent the IAM principal that is making the\
            \ request from making subsequent <code>PutFileSystemPolicy</code> requests\
            \ on this file system. The default value is <code>False</code>. "
          title: BypassPolicyLockoutSafetyCheck
          type: boolean
      required:
      - Policy
      title: PutFileSystemPolicy_request
      type: object
    DeleteTags_request:
      properties:
        TagKeys:
          description: A list of tag keys to delete.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          title: TagKeys
          type: array
      required:
      - TagKeys
      title: DeleteTags_request
      type: object
    DescribeAccountPreferences_request:
      properties:
        NextToken:
          description: Token used for pagination.
          maxLength: 128
          minLength: 1
          pattern: .+
          title: NextToken
          type: string
        MaxResults:
          description: Max results used for pagination.
          minimum: 1
          title: MaxResults
          type: integer
      title: DescribeAccountPreferences_request
      type: object
    PutAccountPreferences_request:
      properties:
        ResourceIdType:
          description: A preference indicating a choice to use 63bit/32bit IDs for
            all applicable resources.
          enum:
          - LONG_ID
          - SHORT_ID
          title: ResourceIdType
          type: string
      required:
      - ResourceIdType
      title: PutAccountPreferences_request
      type: object
    PutBackupPolicy_request_BackupPolicy:
      description: "The backup policy for the file system used to create automatic\
        \ daily backups. If status has a value of <code>ENABLED</code>, the file system\
        \ is being automatically backed up. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\"\
        >Automatic backups</a>."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>Describes the status of the file system's backup policy.</p>
              <ul> <li> <p> <b> <code>ENABLED</code> </b> - EFS is automatically backing
              up the file system.</p> </li> <li> <p> <b> <code>ENABLING</code> </b>
              - EFS is turning on automatic backups for the file system.</p> </li>
              <li> <p> <b> <code>DISABLED</code> </b> - Automatic back ups are turned
              off for the file system.</p> </li> <li> <p> <b> <code>DISABLING</code>
              </b> - EFS is turning off automatic backups for the file system.</p>
              </li> </ul>
          title: Status
      title: PutBackupPolicy_request_BackupPolicy
      type: object
    PutBackupPolicy_request:
      properties:
        BackupPolicy:
          $ref: '#/components/schemas/PutBackupPolicy_request_BackupPolicy'
      required:
      - BackupPolicy
      title: PutBackupPolicy_request
      type: object
    PutLifecycleConfiguration_request:
      properties:
        LifecyclePolicies:
          description: "<p>An array of <code>LifecyclePolicy</code> objects that define\
            \ the file system's <code>LifecycleConfiguration</code> object. A <code>LifecycleConfiguration</code>\
            \ object informs EFS lifecycle management and EFS Intelligent-Tiering\
            \ of the following:</p> <ul> <li> <p>When to move files in the file system\
            \ from primary storage to the IA storage class.</p> </li> <li> <p>When\
            \ to move files that are in IA storage to primary storage.</p> </li> </ul>\
            \ <note> <p>When using the <code>put-lifecycle-configuration</code> CLI\
            \ command or the <code>PutLifecycleConfiguration</code> API action, Amazon\
            \ EFS requires that each <code>LifecyclePolicy</code> object have only\
            \ a single transition. This means that in a request body, <code>LifecyclePolicies</code>\
            \ must be structured as an array of <code>LifecyclePolicy</code> objects,\
            \ one object for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>.\
            \ See the example requests in the following section for more information.</p>\
            \ </note>"
          items:
            $ref: '#/components/schemas/LifecyclePolicy'
          maxItems: 2
          title: LifecyclePolicies
          type: array
      required:
      - LifecyclePolicies
      title: PutLifecycleConfiguration_request
      type: object
    ModifyMountTargetSecurityGroups_request:
      properties:
        SecurityGroups:
          description: An array of up to five VPC security group IDs.
          items:
            $ref: '#/components/schemas/SecurityGroup'
          maxItems: 100
          title: SecurityGroups
          type: array
      title: ModifyMountTargetSecurityGroups_request
      type: object
    TagResource_request:
      properties:
        Tags:
          description: An array of <code>Tag</code> objects to add. Each <code>Tag</code>
            object is a key-value pair.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - Tags
      title: TagResource_request
      type: object
    AccessPointDescription_PosixUser:
      allOf:
      - $ref: '#/components/schemas/PosixUser'
      - description: "The full POSIX identity, including the user ID, group ID, and\
          \ secondary group IDs on the access point that is used for all file operations\
          \ by NFS clients using the access point."
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
      title: AccessPointDescription_PosixUser
    AccessPointDescription_RootDirectory:
      allOf:
      - $ref: '#/components/schemas/RootDirectory'
      - description: The directory on the Amazon EFS file system that the access point
          exposes as the root directory to NFS clients using the access point.
      example:
        Path: ""
        CreationInfo:
          OwnerGid: ""
          OwnerUid: ""
          Permissions: ""
      title: AccessPointDescription_RootDirectory
    FileSystemDescription_SizeInBytes:
      allOf:
      - $ref: '#/components/schemas/FileSystemSize'
      - description: "The latest known metered size (in bytes) of data stored in the\
          \ file system, in its <code>Value</code> field, and the time at which that\
          \ size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code>\
          \ value is the integer number of seconds since 1970-01-01T00:00:00Z. The\
          \ <code>SizeInBytes</code> value doesn't represent the size of a consistent\
          \ snapshot of the file system, but it is eventually consistent when there\
          \ are no writes to the file system. That is, <code>SizeInBytes</code> represents\
          \ actual size only if the file system is not modified for a period longer\
          \ than a couple of hours. Otherwise, the value is not the exact size that\
          \ the file system was at any point in time. "
      title: FileSystemDescription_SizeInBytes
    DescribeAccountPreferencesResponse_ResourceIdPreference:
      allOf:
      - $ref: '#/components/schemas/ResourceIdPreference'
      - description: "Describes the resource ID preference setting for the Amazon\
          \ Web Services account associated with the user making the request, in the\
          \ current Amazon Web Services Region."
      example:
        ResourceIdType: ""
        Resources: ""
      title: DescribeAccountPreferencesResponse_ResourceIdPreference
    BackupPolicyDescription_BackupPolicy:
      allOf:
      - $ref: '#/components/schemas/BackupPolicy'
      - description: "Describes the file system's backup policy, indicating whether\
          \ automatic backups are turned on or off."
      example:
        Status: ""
      title: BackupPolicyDescription_BackupPolicy
    CreateAccessPointRequest_PosixUser:
      allOf:
      - $ref: '#/components/schemas/PosixUser'
      - description: The operating system user and group applied to all file system
          requests made using the access point.
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
      title: CreateAccessPointRequest_PosixUser
    CreateAccessPointRequest_RootDirectory:
      allOf:
      - $ref: '#/components/schemas/RootDirectory'
      - description: "<p>Specifies the directory on the Amazon EFS file system that\
          \ the access point exposes as the root directory of your file system to\
          \ NFS clients using the access point. The clients using the access point\
          \ can only access the root directory and below. If the <code>RootDirectory</code>\
          \ &gt; <code>Path</code> specified does not exist, EFS creates it and applies\
          \ the <code>CreationInfo</code> settings when a client connects to an access\
          \ point. When specifying a <code>RootDirectory</code>, you must provide\
          \ the <code>Path</code>, and the <code>CreationInfo</code>.</p> <p>Amazon\
          \ EFS creates a root directory only if you have provided the CreationInfo:\
          \ OwnUid, OwnGID, and permissions for the directory. If you do not provide\
          \ this information, Amazon EFS does not create the root directory. If the\
          \ root directory does not exist, attempts to mount using the access point\
          \ will fail.</p>"
      example:
        Path: ""
        CreationInfo:
          OwnerGid: ""
          OwnerUid: ""
          Permissions: ""
      title: CreateAccessPointRequest_RootDirectory
    PutBackupPolicyRequest_BackupPolicy:
      allOf:
      - $ref: '#/components/schemas/BackupPolicy'
      - description: The backup policy included in the <code>PutBackupPolicy</code>
          request.
      example:
        Status: ""
      title: PutBackupPolicyRequest_BackupPolicy
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
