# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_point_description_posix_user import AccessPointDescriptionPosixUser
from openapi_server.models.access_point_description_root_directory import AccessPointDescriptionRootDirectory
from openapi_server.models.life_cycle_state import LifeCycleState
from openapi_server import util


class AccessPointDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, name: str=None, tags: List=None, access_point_id: str=None, access_point_arn: str=None, file_system_id: str=None, posix_user: AccessPointDescriptionPosixUser=None, root_directory: AccessPointDescriptionRootDirectory=None, owner_id: str=None, life_cycle_state: LifeCycleState=None):
        """AccessPointDescription - a model defined in OpenAPI

        :param client_token: The client_token of this AccessPointDescription.
        :param name: The name of this AccessPointDescription.
        :param tags: The tags of this AccessPointDescription.
        :param access_point_id: The access_point_id of this AccessPointDescription.
        :param access_point_arn: The access_point_arn of this AccessPointDescription.
        :param file_system_id: The file_system_id of this AccessPointDescription.
        :param posix_user: The posix_user of this AccessPointDescription.
        :param root_directory: The root_directory of this AccessPointDescription.
        :param owner_id: The owner_id of this AccessPointDescription.
        :param life_cycle_state: The life_cycle_state of this AccessPointDescription.
        """
        self.openapi_types = {
            'client_token': str,
            'name': str,
            'tags': List,
            'access_point_id': str,
            'access_point_arn': str,
            'file_system_id': str,
            'posix_user': AccessPointDescriptionPosixUser,
            'root_directory': AccessPointDescriptionRootDirectory,
            'owner_id': str,
            'life_cycle_state': LifeCycleState
        }

        self.attribute_map = {
            'client_token': 'ClientToken',
            'name': 'Name',
            'tags': 'Tags',
            'access_point_id': 'AccessPointId',
            'access_point_arn': 'AccessPointArn',
            'file_system_id': 'FileSystemId',
            'posix_user': 'PosixUser',
            'root_directory': 'RootDirectory',
            'owner_id': 'OwnerId',
            'life_cycle_state': 'LifeCycleState'
        }

        self._client_token = client_token
        self._name = name
        self._tags = tags
        self._access_point_id = access_point_id
        self._access_point_arn = access_point_arn
        self._file_system_id = file_system_id
        self._posix_user = posix_user
        self._root_directory = root_directory
        self._owner_id = owner_id
        self._life_cycle_state = life_cycle_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessPointDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessPointDescription of this AccessPointDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this AccessPointDescription.


        :return: The client_token of this AccessPointDescription.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this AccessPointDescription.


        :param client_token: The client_token of this AccessPointDescription.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def name(self):
        """Gets the name of this AccessPointDescription.


        :return: The name of this AccessPointDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccessPointDescription.


        :param name: The name of this AccessPointDescription.
        :type name: str
        """

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this AccessPointDescription.


        :return: The tags of this AccessPointDescription.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AccessPointDescription.


        :param tags: The tags of this AccessPointDescription.
        :type tags: List
        """

        self._tags = tags

    @property
    def access_point_id(self):
        """Gets the access_point_id of this AccessPointDescription.


        :return: The access_point_id of this AccessPointDescription.
        :rtype: str
        """
        return self._access_point_id

    @access_point_id.setter
    def access_point_id(self, access_point_id):
        """Sets the access_point_id of this AccessPointDescription.


        :param access_point_id: The access_point_id of this AccessPointDescription.
        :type access_point_id: str
        """

        self._access_point_id = access_point_id

    @property
    def access_point_arn(self):
        """Gets the access_point_arn of this AccessPointDescription.


        :return: The access_point_arn of this AccessPointDescription.
        :rtype: str
        """
        return self._access_point_arn

    @access_point_arn.setter
    def access_point_arn(self, access_point_arn):
        """Sets the access_point_arn of this AccessPointDescription.


        :param access_point_arn: The access_point_arn of this AccessPointDescription.
        :type access_point_arn: str
        """

        self._access_point_arn = access_point_arn

    @property
    def file_system_id(self):
        """Gets the file_system_id of this AccessPointDescription.


        :return: The file_system_id of this AccessPointDescription.
        :rtype: str
        """
        return self._file_system_id

    @file_system_id.setter
    def file_system_id(self, file_system_id):
        """Sets the file_system_id of this AccessPointDescription.


        :param file_system_id: The file_system_id of this AccessPointDescription.
        :type file_system_id: str
        """

        self._file_system_id = file_system_id

    @property
    def posix_user(self):
        """Gets the posix_user of this AccessPointDescription.


        :return: The posix_user of this AccessPointDescription.
        :rtype: AccessPointDescriptionPosixUser
        """
        return self._posix_user

    @posix_user.setter
    def posix_user(self, posix_user):
        """Sets the posix_user of this AccessPointDescription.


        :param posix_user: The posix_user of this AccessPointDescription.
        :type posix_user: AccessPointDescriptionPosixUser
        """

        self._posix_user = posix_user

    @property
    def root_directory(self):
        """Gets the root_directory of this AccessPointDescription.


        :return: The root_directory of this AccessPointDescription.
        :rtype: AccessPointDescriptionRootDirectory
        """
        return self._root_directory

    @root_directory.setter
    def root_directory(self, root_directory):
        """Sets the root_directory of this AccessPointDescription.


        :param root_directory: The root_directory of this AccessPointDescription.
        :type root_directory: AccessPointDescriptionRootDirectory
        """

        self._root_directory = root_directory

    @property
    def owner_id(self):
        """Gets the owner_id of this AccessPointDescription.


        :return: The owner_id of this AccessPointDescription.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this AccessPointDescription.


        :param owner_id: The owner_id of this AccessPointDescription.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def life_cycle_state(self):
        """Gets the life_cycle_state of this AccessPointDescription.


        :return: The life_cycle_state of this AccessPointDescription.
        :rtype: LifeCycleState
        """
        return self._life_cycle_state

    @life_cycle_state.setter
    def life_cycle_state(self, life_cycle_state):
        """Sets the life_cycle_state of this AccessPointDescription.


        :param life_cycle_state: The life_cycle_state of this AccessPointDescription.
        :type life_cycle_state: LifeCycleState
        """

        self._life_cycle_state = life_cycle_state
