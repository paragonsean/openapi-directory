# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_id_type import ResourceIdType
from openapi_server import util


class ResourceIdPreference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id_type: ResourceIdType=None, resources: List=None):
        """ResourceIdPreference - a model defined in OpenAPI

        :param resource_id_type: The resource_id_type of this ResourceIdPreference.
        :param resources: The resources of this ResourceIdPreference.
        """
        self.openapi_types = {
            'resource_id_type': ResourceIdType,
            'resources': List
        }

        self.attribute_map = {
            'resource_id_type': 'ResourceIdType',
            'resources': 'Resources'
        }

        self._resource_id_type = resource_id_type
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceIdPreference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceIdPreference of this ResourceIdPreference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id_type(self):
        """Gets the resource_id_type of this ResourceIdPreference.


        :return: The resource_id_type of this ResourceIdPreference.
        :rtype: ResourceIdType
        """
        return self._resource_id_type

    @resource_id_type.setter
    def resource_id_type(self, resource_id_type):
        """Sets the resource_id_type of this ResourceIdPreference.


        :param resource_id_type: The resource_id_type of this ResourceIdPreference.
        :type resource_id_type: ResourceIdType
        """

        self._resource_id_type = resource_id_type

    @property
    def resources(self):
        """Gets the resources of this ResourceIdPreference.


        :return: The resources of this ResourceIdPreference.
        :rtype: List
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this ResourceIdPreference.


        :param resources: The resources of this ResourceIdPreference.
        :type resources: List
        """

        self._resources = resources
