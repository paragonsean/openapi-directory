# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateFileSystemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, throughput_mode: str=None, provisioned_throughput_in_mibps: float=None):
        """UpdateFileSystemRequest - a model defined in OpenAPI

        :param throughput_mode: The throughput_mode of this UpdateFileSystemRequest.
        :param provisioned_throughput_in_mibps: The provisioned_throughput_in_mibps of this UpdateFileSystemRequest.
        """
        self.openapi_types = {
            'throughput_mode': str,
            'provisioned_throughput_in_mibps': float
        }

        self.attribute_map = {
            'throughput_mode': 'ThroughputMode',
            'provisioned_throughput_in_mibps': 'ProvisionedThroughputInMibps'
        }

        self._throughput_mode = throughput_mode
        self._provisioned_throughput_in_mibps = provisioned_throughput_in_mibps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFileSystemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFileSystem_request of this UpdateFileSystemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def throughput_mode(self):
        """Gets the throughput_mode of this UpdateFileSystemRequest.

        (Optional) Updates the file system's throughput mode. If you're not updating your throughput mode, you don't need to provide this value in your request. If you are changing the <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>.

        :return: The throughput_mode of this UpdateFileSystemRequest.
        :rtype: str
        """
        return self._throughput_mode

    @throughput_mode.setter
    def throughput_mode(self, throughput_mode):
        """Sets the throughput_mode of this UpdateFileSystemRequest.

        (Optional) Updates the file system's throughput mode. If you're not updating your throughput mode, you don't need to provide this value in your request. If you are changing the <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>.

        :param throughput_mode: The throughput_mode of this UpdateFileSystemRequest.
        :type throughput_mode: str
        """
        allowed_values = ["bursting", "provisioned", "elastic"]  # noqa: E501
        if throughput_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `throughput_mode` ({0}), must be one of {1}"
                .format(throughput_mode, allowed_values)
            )

        self._throughput_mode = throughput_mode

    @property
    def provisioned_throughput_in_mibps(self):
        """Gets the provisioned_throughput_in_mibps of this UpdateFileSystemRequest.

        (Optional) Sets the amount of provisioned throughput, in MiB/s, for the file system. Valid values are 1-1024. If you are changing the throughput mode to provisioned, you must also provide the amount of provisioned throughput. Required if <code>ThroughputMode</code> is changed to <code>provisioned</code> on update.

        :return: The provisioned_throughput_in_mibps of this UpdateFileSystemRequest.
        :rtype: float
        """
        return self._provisioned_throughput_in_mibps

    @provisioned_throughput_in_mibps.setter
    def provisioned_throughput_in_mibps(self, provisioned_throughput_in_mibps):
        """Sets the provisioned_throughput_in_mibps of this UpdateFileSystemRequest.

        (Optional) Sets the amount of provisioned throughput, in MiB/s, for the file system. Valid values are 1-1024. If you are changing the throughput mode to provisioned, you must also provide the amount of provisioned throughput. Required if <code>ThroughputMode</code> is changed to <code>provisioned</code> on update.

        :param provisioned_throughput_in_mibps: The provisioned_throughput_in_mibps of this UpdateFileSystemRequest.
        :type provisioned_throughput_in_mibps: float
        """
        if provisioned_throughput_in_mibps is not None and provisioned_throughput_in_mibps < 1:
            raise ValueError("Invalid value for `provisioned_throughput_in_mibps`, must be a value greater than or equal to `1`")

        self._provisioned_throughput_in_mibps = provisioned_throughput_in_mibps
