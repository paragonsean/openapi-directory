# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileSystemDescriptionSizeInBytes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: int=None, timestamp: datetime=None, value_in_ia: int=None, value_in_standard: int=None):
        """FileSystemDescriptionSizeInBytes - a model defined in OpenAPI

        :param value: The value of this FileSystemDescriptionSizeInBytes.
        :param timestamp: The timestamp of this FileSystemDescriptionSizeInBytes.
        :param value_in_ia: The value_in_ia of this FileSystemDescriptionSizeInBytes.
        :param value_in_standard: The value_in_standard of this FileSystemDescriptionSizeInBytes.
        """
        self.openapi_types = {
            'value': int,
            'timestamp': datetime,
            'value_in_ia': int,
            'value_in_standard': int
        }

        self.attribute_map = {
            'value': 'Value',
            'timestamp': 'Timestamp',
            'value_in_ia': 'ValueInIA',
            'value_in_standard': 'ValueInStandard'
        }

        self._value = value
        self._timestamp = timestamp
        self._value_in_ia = value_in_ia
        self._value_in_standard = value_in_standard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileSystemDescriptionSizeInBytes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileSystemDescription_SizeInBytes of this FileSystemDescriptionSizeInBytes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this FileSystemDescriptionSizeInBytes.


        :return: The value of this FileSystemDescriptionSizeInBytes.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this FileSystemDescriptionSizeInBytes.


        :param value: The value of this FileSystemDescriptionSizeInBytes.
        :type value: int
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value

    @property
    def timestamp(self):
        """Gets the timestamp of this FileSystemDescriptionSizeInBytes.


        :return: The timestamp of this FileSystemDescriptionSizeInBytes.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this FileSystemDescriptionSizeInBytes.


        :param timestamp: The timestamp of this FileSystemDescriptionSizeInBytes.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def value_in_ia(self):
        """Gets the value_in_ia of this FileSystemDescriptionSizeInBytes.


        :return: The value_in_ia of this FileSystemDescriptionSizeInBytes.
        :rtype: int
        """
        return self._value_in_ia

    @value_in_ia.setter
    def value_in_ia(self, value_in_ia):
        """Sets the value_in_ia of this FileSystemDescriptionSizeInBytes.


        :param value_in_ia: The value_in_ia of this FileSystemDescriptionSizeInBytes.
        :type value_in_ia: int
        """

        self._value_in_ia = value_in_ia

    @property
    def value_in_standard(self):
        """Gets the value_in_standard of this FileSystemDescriptionSizeInBytes.


        :return: The value_in_standard of this FileSystemDescriptionSizeInBytes.
        :rtype: int
        """
        return self._value_in_standard

    @value_in_standard.setter
    def value_in_standard(self, value_in_standard):
        """Sets the value_in_standard of this FileSystemDescriptionSizeInBytes.


        :param value_in_standard: The value_in_standard of this FileSystemDescriptionSizeInBytes.
        :type value_in_standard: int
        """

        self._value_in_standard = value_in_standard
