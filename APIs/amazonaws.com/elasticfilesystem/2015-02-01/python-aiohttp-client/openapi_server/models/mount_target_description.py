# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.life_cycle_state import LifeCycleState
from openapi_server import util


class MountTargetDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, owner_id: str=None, mount_target_id: str=None, file_system_id: str=None, subnet_id: str=None, life_cycle_state: LifeCycleState=None, ip_address: str=None, network_interface_id: str=None, availability_zone_id: str=None, availability_zone_name: str=None, vpc_id: str=None):
        """MountTargetDescription - a model defined in OpenAPI

        :param owner_id: The owner_id of this MountTargetDescription.
        :param mount_target_id: The mount_target_id of this MountTargetDescription.
        :param file_system_id: The file_system_id of this MountTargetDescription.
        :param subnet_id: The subnet_id of this MountTargetDescription.
        :param life_cycle_state: The life_cycle_state of this MountTargetDescription.
        :param ip_address: The ip_address of this MountTargetDescription.
        :param network_interface_id: The network_interface_id of this MountTargetDescription.
        :param availability_zone_id: The availability_zone_id of this MountTargetDescription.
        :param availability_zone_name: The availability_zone_name of this MountTargetDescription.
        :param vpc_id: The vpc_id of this MountTargetDescription.
        """
        self.openapi_types = {
            'owner_id': str,
            'mount_target_id': str,
            'file_system_id': str,
            'subnet_id': str,
            'life_cycle_state': LifeCycleState,
            'ip_address': str,
            'network_interface_id': str,
            'availability_zone_id': str,
            'availability_zone_name': str,
            'vpc_id': str
        }

        self.attribute_map = {
            'owner_id': 'OwnerId',
            'mount_target_id': 'MountTargetId',
            'file_system_id': 'FileSystemId',
            'subnet_id': 'SubnetId',
            'life_cycle_state': 'LifeCycleState',
            'ip_address': 'IpAddress',
            'network_interface_id': 'NetworkInterfaceId',
            'availability_zone_id': 'AvailabilityZoneId',
            'availability_zone_name': 'AvailabilityZoneName',
            'vpc_id': 'VpcId'
        }

        self._owner_id = owner_id
        self._mount_target_id = mount_target_id
        self._file_system_id = file_system_id
        self._subnet_id = subnet_id
        self._life_cycle_state = life_cycle_state
        self._ip_address = ip_address
        self._network_interface_id = network_interface_id
        self._availability_zone_id = availability_zone_id
        self._availability_zone_name = availability_zone_name
        self._vpc_id = vpc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MountTargetDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MountTargetDescription of this MountTargetDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def owner_id(self):
        """Gets the owner_id of this MountTargetDescription.


        :return: The owner_id of this MountTargetDescription.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this MountTargetDescription.


        :param owner_id: The owner_id of this MountTargetDescription.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def mount_target_id(self):
        """Gets the mount_target_id of this MountTargetDescription.


        :return: The mount_target_id of this MountTargetDescription.
        :rtype: str
        """
        return self._mount_target_id

    @mount_target_id.setter
    def mount_target_id(self, mount_target_id):
        """Sets the mount_target_id of this MountTargetDescription.


        :param mount_target_id: The mount_target_id of this MountTargetDescription.
        :type mount_target_id: str
        """
        if mount_target_id is None:
            raise ValueError("Invalid value for `mount_target_id`, must not be `None`")

        self._mount_target_id = mount_target_id

    @property
    def file_system_id(self):
        """Gets the file_system_id of this MountTargetDescription.


        :return: The file_system_id of this MountTargetDescription.
        :rtype: str
        """
        return self._file_system_id

    @file_system_id.setter
    def file_system_id(self, file_system_id):
        """Sets the file_system_id of this MountTargetDescription.


        :param file_system_id: The file_system_id of this MountTargetDescription.
        :type file_system_id: str
        """
        if file_system_id is None:
            raise ValueError("Invalid value for `file_system_id`, must not be `None`")

        self._file_system_id = file_system_id

    @property
    def subnet_id(self):
        """Gets the subnet_id of this MountTargetDescription.


        :return: The subnet_id of this MountTargetDescription.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this MountTargetDescription.


        :param subnet_id: The subnet_id of this MountTargetDescription.
        :type subnet_id: str
        """
        if subnet_id is None:
            raise ValueError("Invalid value for `subnet_id`, must not be `None`")

        self._subnet_id = subnet_id

    @property
    def life_cycle_state(self):
        """Gets the life_cycle_state of this MountTargetDescription.


        :return: The life_cycle_state of this MountTargetDescription.
        :rtype: LifeCycleState
        """
        return self._life_cycle_state

    @life_cycle_state.setter
    def life_cycle_state(self, life_cycle_state):
        """Sets the life_cycle_state of this MountTargetDescription.


        :param life_cycle_state: The life_cycle_state of this MountTargetDescription.
        :type life_cycle_state: LifeCycleState
        """
        if life_cycle_state is None:
            raise ValueError("Invalid value for `life_cycle_state`, must not be `None`")

        self._life_cycle_state = life_cycle_state

    @property
    def ip_address(self):
        """Gets the ip_address of this MountTargetDescription.


        :return: The ip_address of this MountTargetDescription.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this MountTargetDescription.


        :param ip_address: The ip_address of this MountTargetDescription.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def network_interface_id(self):
        """Gets the network_interface_id of this MountTargetDescription.


        :return: The network_interface_id of this MountTargetDescription.
        :rtype: str
        """
        return self._network_interface_id

    @network_interface_id.setter
    def network_interface_id(self, network_interface_id):
        """Sets the network_interface_id of this MountTargetDescription.


        :param network_interface_id: The network_interface_id of this MountTargetDescription.
        :type network_interface_id: str
        """

        self._network_interface_id = network_interface_id

    @property
    def availability_zone_id(self):
        """Gets the availability_zone_id of this MountTargetDescription.


        :return: The availability_zone_id of this MountTargetDescription.
        :rtype: str
        """
        return self._availability_zone_id

    @availability_zone_id.setter
    def availability_zone_id(self, availability_zone_id):
        """Sets the availability_zone_id of this MountTargetDescription.


        :param availability_zone_id: The availability_zone_id of this MountTargetDescription.
        :type availability_zone_id: str
        """

        self._availability_zone_id = availability_zone_id

    @property
    def availability_zone_name(self):
        """Gets the availability_zone_name of this MountTargetDescription.


        :return: The availability_zone_name of this MountTargetDescription.
        :rtype: str
        """
        return self._availability_zone_name

    @availability_zone_name.setter
    def availability_zone_name(self, availability_zone_name):
        """Sets the availability_zone_name of this MountTargetDescription.


        :param availability_zone_name: The availability_zone_name of this MountTargetDescription.
        :type availability_zone_name: str
        """

        self._availability_zone_name = availability_zone_name

    @property
    def vpc_id(self):
        """Gets the vpc_id of this MountTargetDescription.


        :return: The vpc_id of this MountTargetDescription.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this MountTargetDescription.


        :param vpc_id: The vpc_id of this MountTargetDescription.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id
