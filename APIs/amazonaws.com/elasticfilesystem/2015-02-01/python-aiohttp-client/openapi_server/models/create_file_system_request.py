# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
import re
from openapi_server import util


class CreateFileSystemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_token: str=None, performance_mode: str=None, encrypted: bool=None, kms_key_id: str=None, throughput_mode: str=None, provisioned_throughput_in_mibps: float=None, availability_zone_name: str=None, backup: bool=None, tags: List[Tag]=None):
        """CreateFileSystemRequest - a model defined in OpenAPI

        :param creation_token: The creation_token of this CreateFileSystemRequest.
        :param performance_mode: The performance_mode of this CreateFileSystemRequest.
        :param encrypted: The encrypted of this CreateFileSystemRequest.
        :param kms_key_id: The kms_key_id of this CreateFileSystemRequest.
        :param throughput_mode: The throughput_mode of this CreateFileSystemRequest.
        :param provisioned_throughput_in_mibps: The provisioned_throughput_in_mibps of this CreateFileSystemRequest.
        :param availability_zone_name: The availability_zone_name of this CreateFileSystemRequest.
        :param backup: The backup of this CreateFileSystemRequest.
        :param tags: The tags of this CreateFileSystemRequest.
        """
        self.openapi_types = {
            'creation_token': str,
            'performance_mode': str,
            'encrypted': bool,
            'kms_key_id': str,
            'throughput_mode': str,
            'provisioned_throughput_in_mibps': float,
            'availability_zone_name': str,
            'backup': bool,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'creation_token': 'CreationToken',
            'performance_mode': 'PerformanceMode',
            'encrypted': 'Encrypted',
            'kms_key_id': 'KmsKeyId',
            'throughput_mode': 'ThroughputMode',
            'provisioned_throughput_in_mibps': 'ProvisionedThroughputInMibps',
            'availability_zone_name': 'AvailabilityZoneName',
            'backup': 'Backup',
            'tags': 'Tags'
        }

        self._creation_token = creation_token
        self._performance_mode = performance_mode
        self._encrypted = encrypted
        self._kms_key_id = kms_key_id
        self._throughput_mode = throughput_mode
        self._provisioned_throughput_in_mibps = provisioned_throughput_in_mibps
        self._availability_zone_name = availability_zone_name
        self._backup = backup
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFileSystemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFileSystem_request of this CreateFileSystemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_token(self):
        """Gets the creation_token of this CreateFileSystemRequest.

        A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.

        :return: The creation_token of this CreateFileSystemRequest.
        :rtype: str
        """
        return self._creation_token

    @creation_token.setter
    def creation_token(self, creation_token):
        """Sets the creation_token of this CreateFileSystemRequest.

        A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.

        :param creation_token: The creation_token of this CreateFileSystemRequest.
        :type creation_token: str
        """
        if creation_token is None:
            raise ValueError("Invalid value for `creation_token`, must not be `None`")
        if creation_token is not None and len(creation_token) > 64:
            raise ValueError("Invalid value for `creation_token`, length must be less than or equal to `64`")
        if creation_token is not None and len(creation_token) < 1:
            raise ValueError("Invalid value for `creation_token`, length must be greater than or equal to `1`")
        if creation_token is not None and not re.search(r'.+', creation_token):
            raise ValueError("Invalid value for `creation_token`, must be a follow pattern or equal to `/.+/`")

        self._creation_token = creation_token

    @property
    def performance_mode(self):
        """Gets the performance_mode of this CreateFileSystemRequest.

        <p>The performance mode of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.</p> <note> <p>The <code>maxIO</code> mode is not supported on file systems using One Zone storage classes.</p> </note>

        :return: The performance_mode of this CreateFileSystemRequest.
        :rtype: str
        """
        return self._performance_mode

    @performance_mode.setter
    def performance_mode(self, performance_mode):
        """Sets the performance_mode of this CreateFileSystemRequest.

        <p>The performance mode of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.</p> <note> <p>The <code>maxIO</code> mode is not supported on file systems using One Zone storage classes.</p> </note>

        :param performance_mode: The performance_mode of this CreateFileSystemRequest.
        :type performance_mode: str
        """
        allowed_values = ["generalPurpose", "maxIO"]  # noqa: E501
        if performance_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `performance_mode` ({0}), must be one of {1}"
                .format(performance_mode, allowed_values)
            )

        self._performance_mode = performance_mode

    @property
    def encrypted(self):
        """Gets the encrypted of this CreateFileSystemRequest.

        A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying an existing Key Management Service key (KMS key). If you don't specify a KMS key, then the default KMS key for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system. 

        :return: The encrypted of this CreateFileSystemRequest.
        :rtype: bool
        """
        return self._encrypted

    @encrypted.setter
    def encrypted(self, encrypted):
        """Sets the encrypted of this CreateFileSystemRequest.

        A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying an existing Key Management Service key (KMS key). If you don't specify a KMS key, then the default KMS key for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system. 

        :param encrypted: The encrypted of this CreateFileSystemRequest.
        :type encrypted: bool
        """

        self._encrypted = encrypted

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateFileSystemRequest.

        <p>The ID of the KMS key that you want to use to protect the encrypted file system. This parameter is required only if you want to use a non-default KMS key. If this parameter is not specified, the default KMS key for Amazon EFS is used. You can specify a KMS key ID using the following formats:</p> <ul> <li> <p>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p> </li> </ul> <p>If you use <code>KmsKeyId</code>, you must set the <a>CreateFileSystemRequest$Encrypted</a> parameter to true.</p> <important> <p>EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with Amazon EFS file systems.</p> </important>

        :return: The kms_key_id of this CreateFileSystemRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateFileSystemRequest.

        <p>The ID of the KMS key that you want to use to protect the encrypted file system. This parameter is required only if you want to use a non-default KMS key. If this parameter is not specified, the default KMS key for Amazon EFS is used. You can specify a KMS key ID using the following formats:</p> <ul> <li> <p>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p> </li> </ul> <p>If you use <code>KmsKeyId</code>, you must set the <a>CreateFileSystemRequest$Encrypted</a> parameter to true.</p> <important> <p>EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with Amazon EFS file systems.</p> </important>

        :param kms_key_id: The kms_key_id of this CreateFileSystemRequest.
        :type kms_key_id: str
        """
        if kms_key_id is not None and len(kms_key_id) > 2048:
            raise ValueError("Invalid value for `kms_key_id`, length must be less than or equal to `2048`")
        if kms_key_id is not None and not re.search(r'^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias\/[a-zA-Z0-9\/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\d{12}:((key\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key\/mrk-[0-9a-f]{32})|(alias\/[a-zA-Z0-9\/_-]+))))$', kms_key_id):
            raise ValueError("Invalid value for `kms_key_id`, must be a follow pattern or equal to `/^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias\/[a-zA-Z0-9\/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\d{12}:((key\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key\/mrk-[0-9a-f]{32})|(alias\/[a-zA-Z0-9\/_-]+))))$/`")

        self._kms_key_id = kms_key_id

    @property
    def throughput_mode(self):
        """Gets the throughput_mode of this CreateFileSystemRequest.

        <p>Specifies the throughput mode for the file system. The mode can be <code>bursting</code>, <code>provisioned</code>, or <code>elastic</code>. If you set <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>. After you create the file system, you can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes, with certain time restrictions. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput\">Specifying throughput with provisioned mode</a> in the <i>Amazon EFS User Guide</i>. </p> <p>Default is <code>bursting</code>.</p>

        :return: The throughput_mode of this CreateFileSystemRequest.
        :rtype: str
        """
        return self._throughput_mode

    @throughput_mode.setter
    def throughput_mode(self, throughput_mode):
        """Sets the throughput_mode of this CreateFileSystemRequest.

        <p>Specifies the throughput mode for the file system. The mode can be <code>bursting</code>, <code>provisioned</code>, or <code>elastic</code>. If you set <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>. After you create the file system, you can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes, with certain time restrictions. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput\">Specifying throughput with provisioned mode</a> in the <i>Amazon EFS User Guide</i>. </p> <p>Default is <code>bursting</code>.</p>

        :param throughput_mode: The throughput_mode of this CreateFileSystemRequest.
        :type throughput_mode: str
        """
        allowed_values = ["bursting", "provisioned", "elastic"]  # noqa: E501
        if throughput_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `throughput_mode` ({0}), must be one of {1}"
                .format(throughput_mode, allowed_values)
            )

        self._throughput_mode = throughput_mode

    @property
    def provisioned_throughput_in_mibps(self):
        """Gets the provisioned_throughput_in_mibps of this CreateFileSystemRequest.

        The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s. To increase this limit, contact Amazon Web Services Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.

        :return: The provisioned_throughput_in_mibps of this CreateFileSystemRequest.
        :rtype: float
        """
        return self._provisioned_throughput_in_mibps

    @provisioned_throughput_in_mibps.setter
    def provisioned_throughput_in_mibps(self, provisioned_throughput_in_mibps):
        """Sets the provisioned_throughput_in_mibps of this CreateFileSystemRequest.

        The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s. To increase this limit, contact Amazon Web Services Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.

        :param provisioned_throughput_in_mibps: The provisioned_throughput_in_mibps of this CreateFileSystemRequest.
        :type provisioned_throughput_in_mibps: float
        """
        if provisioned_throughput_in_mibps is not None and provisioned_throughput_in_mibps < 1:
            raise ValueError("Invalid value for `provisioned_throughput_in_mibps`, must be a value greater than or equal to `1`")

        self._provisioned_throughput_in_mibps = provisioned_throughput_in_mibps

    @property
    def availability_zone_name(self):
        """Gets the availability_zone_name of this CreateFileSystemRequest.

        <p>Used to create a file system that uses One Zone storage classes. It specifies the Amazon Web Services Availability Zone in which to create the file system. Use the format <code>us-east-1a</code> to specify the Availability Zone. For more information about One Zone storage classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\">Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p> <note> <p>One Zone storage classes are not available in all Availability Zones in Amazon Web Services Regions where Amazon EFS is available.</p> </note>

        :return: The availability_zone_name of this CreateFileSystemRequest.
        :rtype: str
        """
        return self._availability_zone_name

    @availability_zone_name.setter
    def availability_zone_name(self, availability_zone_name):
        """Sets the availability_zone_name of this CreateFileSystemRequest.

        <p>Used to create a file system that uses One Zone storage classes. It specifies the Amazon Web Services Availability Zone in which to create the file system. Use the format <code>us-east-1a</code> to specify the Availability Zone. For more information about One Zone storage classes, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html\">Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p> <note> <p>One Zone storage classes are not available in all Availability Zones in Amazon Web Services Regions where Amazon EFS is available.</p> </note>

        :param availability_zone_name: The availability_zone_name of this CreateFileSystemRequest.
        :type availability_zone_name: str
        """
        if availability_zone_name is not None and len(availability_zone_name) > 64:
            raise ValueError("Invalid value for `availability_zone_name`, length must be less than or equal to `64`")
        if availability_zone_name is not None and len(availability_zone_name) < 1:
            raise ValueError("Invalid value for `availability_zone_name`, length must be greater than or equal to `1`")
        if availability_zone_name is not None and not re.search(r'.+', availability_zone_name):
            raise ValueError("Invalid value for `availability_zone_name`, must be a follow pattern or equal to `/.+/`")

        self._availability_zone_name = availability_zone_name

    @property
    def backup(self):
        """Gets the backup of this CreateFileSystemRequest.

        <p>Specifies whether automatic backups are enabled on the file system that you are creating. Set the value to <code>true</code> to enable automatic backups. If you are creating a file system that uses One Zone storage classes, automatic backups are enabled by default. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\">Automatic backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>, the default is <code>true</code>.</p> <note> <p>Backup is not available in all Amazon Web Services Regions where Amazon EFS is available.</p> </note>

        :return: The backup of this CreateFileSystemRequest.
        :rtype: bool
        """
        return self._backup

    @backup.setter
    def backup(self, backup):
        """Sets the backup of this CreateFileSystemRequest.

        <p>Specifies whether automatic backups are enabled on the file system that you are creating. Set the value to <code>true</code> to enable automatic backups. If you are creating a file system that uses One Zone storage classes, automatic backups are enabled by default. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups\">Automatic backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>, the default is <code>true</code>.</p> <note> <p>Backup is not available in all Amazon Web Services Regions where Amazon EFS is available.</p> </note>

        :param backup: The backup of this CreateFileSystemRequest.
        :type backup: bool
        """

        self._backup = backup

    @property
    def tags(self):
        """Gets the tags of this CreateFileSystemRequest.

        Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"</code> key-value pair. Each key must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.

        :return: The tags of this CreateFileSystemRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateFileSystemRequest.

        Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"</code> key-value pair. Each key must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.

        :param tags: The tags of this CreateFileSystemRequest.
        :type tags: List[Tag]
        """

        self._tags = tags
