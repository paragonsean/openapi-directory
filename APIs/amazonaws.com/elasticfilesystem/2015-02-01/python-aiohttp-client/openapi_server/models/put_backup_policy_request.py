# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_backup_policy_request_backup_policy import PutBackupPolicyRequestBackupPolicy
from openapi_server import util


class PutBackupPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_policy: PutBackupPolicyRequestBackupPolicy=None):
        """PutBackupPolicyRequest - a model defined in OpenAPI

        :param backup_policy: The backup_policy of this PutBackupPolicyRequest.
        """
        self.openapi_types = {
            'backup_policy': PutBackupPolicyRequestBackupPolicy
        }

        self.attribute_map = {
            'backup_policy': 'BackupPolicy'
        }

        self._backup_policy = backup_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutBackupPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutBackupPolicy_request of this PutBackupPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_policy(self):
        """Gets the backup_policy of this PutBackupPolicyRequest.


        :return: The backup_policy of this PutBackupPolicyRequest.
        :rtype: PutBackupPolicyRequestBackupPolicy
        """
        return self._backup_policy

    @backup_policy.setter
    def backup_policy(self, backup_policy):
        """Sets the backup_policy of this PutBackupPolicyRequest.


        :param backup_policy: The backup_policy of this PutBackupPolicyRequest.
        :type backup_policy: PutBackupPolicyRequestBackupPolicy
        """
        if backup_policy is None:
            raise ValueError("Invalid value for `backup_policy`, must not be `None`")

        self._backup_policy = backup_policy
