# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAccessPointRequestRootDirectoryCreationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, owner_uid: int=None, owner_gid: int=None, permissions: str=None):
        """CreateAccessPointRequestRootDirectoryCreationInfo - a model defined in OpenAPI

        :param owner_uid: The owner_uid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :param owner_gid: The owner_gid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :param permissions: The permissions of this CreateAccessPointRequestRootDirectoryCreationInfo.
        """
        self.openapi_types = {
            'owner_uid': int,
            'owner_gid': int,
            'permissions': str
        }

        self.attribute_map = {
            'owner_uid': 'OwnerUid',
            'owner_gid': 'OwnerGid',
            'permissions': 'Permissions'
        }

        self._owner_uid = owner_uid
        self._owner_gid = owner_gid
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccessPointRequestRootDirectoryCreationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccessPoint_request_RootDirectory_CreationInfo of this CreateAccessPointRequestRootDirectoryCreationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def owner_uid(self):
        """Gets the owner_uid of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :return: The owner_uid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :rtype: int
        """
        return self._owner_uid

    @owner_uid.setter
    def owner_uid(self, owner_uid):
        """Sets the owner_uid of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :param owner_uid: The owner_uid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :type owner_uid: int
        """
        if owner_uid is None:
            raise ValueError("Invalid value for `owner_uid`, must not be `None`")

        self._owner_uid = owner_uid

    @property
    def owner_gid(self):
        """Gets the owner_gid of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :return: The owner_gid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :rtype: int
        """
        return self._owner_gid

    @owner_gid.setter
    def owner_gid(self, owner_gid):
        """Sets the owner_gid of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :param owner_gid: The owner_gid of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :type owner_gid: int
        """
        if owner_gid is None:
            raise ValueError("Invalid value for `owner_gid`, must not be `None`")

        self._owner_gid = owner_gid

    @property
    def permissions(self):
        """Gets the permissions of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :return: The permissions of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :rtype: str
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this CreateAccessPointRequestRootDirectoryCreationInfo.


        :param permissions: The permissions of this CreateAccessPointRequestRootDirectoryCreationInfo.
        :type permissions: str
        """
        if permissions is None:
            raise ValueError("Invalid value for `permissions`, must not be `None`")

        self._permissions = permissions
