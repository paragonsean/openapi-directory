/**
 * Amazon Cognito Identity
 * <fullname>Amazon Cognito Federated Identities</fullname> <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary credentials to mobile devices and other untrusted environments. It uniquely identifies a device and supplies the user with a consistent identity over the lifetime of an application.</p> <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon Cognito user pool, and you can also choose to support unauthenticated access from your app. Cognito delivers a unique identifier for each user and acts as an OpenID token provider trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS credentials.</p> <p>For a description of the authentication flow from the Amazon Cognito Developer Guide see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p> <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateIdentityPoolInput.h
 *
 * Input to the CreateIdentityPool action.
 */

#ifndef OAICreateIdentityPoolInput_H
#define OAICreateIdentityPoolInput_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateIdentityPoolInput : public OAIObject {
public:
    OAICreateIdentityPoolInput();
    OAICreateIdentityPoolInput(QString json);
    ~OAICreateIdentityPoolInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentityPoolName() const;
    void setIdentityPoolName(const QString &identity_pool_name);
    bool is_identity_pool_name_Set() const;
    bool is_identity_pool_name_Valid() const;

    bool getAllowUnauthenticatedIdentities() const;
    void setAllowUnauthenticatedIdentities(const bool &allow_unauthenticated_identities);
    bool is_allow_unauthenticated_identities_Set() const;
    bool is_allow_unauthenticated_identities_Valid() const;

    bool getAllowClassicFlow() const;
    void setAllowClassicFlow(const bool &allow_classic_flow);
    bool is_allow_classic_flow_Set() const;
    bool is_allow_classic_flow_Valid() const;

    QMap getSupportedLoginProviders() const;
    void setSupportedLoginProviders(const QMap &supported_login_providers);
    bool is_supported_login_providers_Set() const;
    bool is_supported_login_providers_Valid() const;

    QString getDeveloperProviderName() const;
    void setDeveloperProviderName(const QString &developer_provider_name);
    bool is_developer_provider_name_Set() const;
    bool is_developer_provider_name_Valid() const;

    QList getOpenIdConnectProviderArns() const;
    void setOpenIdConnectProviderArns(const QList &open_id_connect_provider_arns);
    bool is_open_id_connect_provider_arns_Set() const;
    bool is_open_id_connect_provider_arns_Valid() const;

    QList getCognitoIdentityProviders() const;
    void setCognitoIdentityProviders(const QList &cognito_identity_providers);
    bool is_cognito_identity_providers_Set() const;
    bool is_cognito_identity_providers_Valid() const;

    QList getSamlProviderArns() const;
    void setSamlProviderArns(const QList &saml_provider_arns);
    bool is_saml_provider_arns_Set() const;
    bool is_saml_provider_arns_Valid() const;

    QMap getIdentityPoolTags() const;
    void setIdentityPoolTags(const QMap &identity_pool_tags);
    bool is_identity_pool_tags_Set() const;
    bool is_identity_pool_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identity_pool_name;
    bool m_identity_pool_name_isSet;
    bool m_identity_pool_name_isValid;

    bool m_allow_unauthenticated_identities;
    bool m_allow_unauthenticated_identities_isSet;
    bool m_allow_unauthenticated_identities_isValid;

    bool m_allow_classic_flow;
    bool m_allow_classic_flow_isSet;
    bool m_allow_classic_flow_isValid;

    QMap m_supported_login_providers;
    bool m_supported_login_providers_isSet;
    bool m_supported_login_providers_isValid;

    QString m_developer_provider_name;
    bool m_developer_provider_name_isSet;
    bool m_developer_provider_name_isValid;

    QList m_open_id_connect_provider_arns;
    bool m_open_id_connect_provider_arns_isSet;
    bool m_open_id_connect_provider_arns_isValid;

    QList m_cognito_identity_providers;
    bool m_cognito_identity_providers_isSet;
    bool m_cognito_identity_providers_isValid;

    QList m_saml_provider_arns;
    bool m_saml_provider_arns_isSet;
    bool m_saml_provider_arns_isValid;

    QMap m_identity_pool_tags;
    bool m_identity_pool_tags_isSet;
    bool m_identity_pool_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateIdentityPoolInput)

#endif // OAICreateIdentityPoolInput_H
