/**
 * Amazon Cognito Identity
 * <fullname>Amazon Cognito Federated Identities</fullname> <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary credentials to mobile devices and other untrusted environments. It uniquely identifies a device and supplies the user with a consistent identity over the lifetime of an application.</p> <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon Cognito user pool, and you can also choose to support unauthenticated access from your app. Cognito delivers a unique identifier for each user and acts as an OpenID token provider trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS credentials.</p> <p>For a description of the authentication flow from the Amazon Cognito Developer Guide see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p> <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityPool model module.
 * @module model/IdentityPool
 * @version 2014-06-30
 */
class IdentityPool {
    /**
     * Constructs a new <code>IdentityPool</code>.
     * An object representing an Amazon Cognito identity pool.
     * @alias module:model/IdentityPool
     * @param identityPoolId {String} 
     * @param identityPoolName {String} 
     * @param allowUnauthenticatedIdentities {Boolean} 
     */
    constructor(identityPoolId, identityPoolName, allowUnauthenticatedIdentities) { 
        
        IdentityPool.initialize(this, identityPoolId, identityPoolName, allowUnauthenticatedIdentities);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identityPoolId, identityPoolName, allowUnauthenticatedIdentities) { 
        obj['IdentityPoolId'] = identityPoolId;
        obj['IdentityPoolName'] = identityPoolName;
        obj['AllowUnauthenticatedIdentities'] = allowUnauthenticatedIdentities;
    }

    /**
     * Constructs a <code>IdentityPool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityPool} obj Optional instance to populate.
     * @return {module:model/IdentityPool} The populated <code>IdentityPool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityPool();

            if (data.hasOwnProperty('IdentityPoolId')) {
                obj['IdentityPoolId'] = ApiClient.convertToType(data['IdentityPoolId'], 'String');
            }
            if (data.hasOwnProperty('IdentityPoolName')) {
                obj['IdentityPoolName'] = ApiClient.convertToType(data['IdentityPoolName'], 'String');
            }
            if (data.hasOwnProperty('AllowUnauthenticatedIdentities')) {
                obj['AllowUnauthenticatedIdentities'] = ApiClient.convertToType(data['AllowUnauthenticatedIdentities'], 'Boolean');
            }
            if (data.hasOwnProperty('AllowClassicFlow')) {
                obj['AllowClassicFlow'] = ApiClient.convertToType(data['AllowClassicFlow'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportedLoginProviders')) {
                obj['SupportedLoginProviders'] = ApiClient.convertToType(data['SupportedLoginProviders'], Object);
            }
            if (data.hasOwnProperty('DeveloperProviderName')) {
                obj['DeveloperProviderName'] = ApiClient.convertToType(data['DeveloperProviderName'], 'String');
            }
            if (data.hasOwnProperty('OpenIdConnectProviderARNs')) {
                obj['OpenIdConnectProviderARNs'] = ApiClient.convertToType(data['OpenIdConnectProviderARNs'], Array);
            }
            if (data.hasOwnProperty('CognitoIdentityProviders')) {
                obj['CognitoIdentityProviders'] = ApiClient.convertToType(data['CognitoIdentityProviders'], Array);
            }
            if (data.hasOwnProperty('SamlProviderARNs')) {
                obj['SamlProviderARNs'] = ApiClient.convertToType(data['SamlProviderARNs'], Array);
            }
            if (data.hasOwnProperty('IdentityPoolTags')) {
                obj['IdentityPoolTags'] = ApiClient.convertToType(data['IdentityPoolTags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityPool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityPool</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityPool.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IdentityPoolId`
        if (data['IdentityPoolId']) { // data not null
          String.validateJSON(data['IdentityPoolId']);
        }
        // validate the optional field `IdentityPoolName`
        if (data['IdentityPoolName']) { // data not null
          String.validateJSON(data['IdentityPoolName']);
        }
        // validate the optional field `AllowUnauthenticatedIdentities`
        if (data['AllowUnauthenticatedIdentities']) { // data not null
          Boolean.validateJSON(data['AllowUnauthenticatedIdentities']);
        }
        // validate the optional field `AllowClassicFlow`
        if (data['AllowClassicFlow']) { // data not null
          Boolean.validateJSON(data['AllowClassicFlow']);
        }
        // validate the optional field `SupportedLoginProviders`
        if (data['SupportedLoginProviders']) { // data not null
          Object.validateJSON(data['SupportedLoginProviders']);
        }
        // validate the optional field `DeveloperProviderName`
        if (data['DeveloperProviderName']) { // data not null
          String.validateJSON(data['DeveloperProviderName']);
        }
        // validate the optional field `OpenIdConnectProviderARNs`
        if (data['OpenIdConnectProviderARNs']) { // data not null
          Array.validateJSON(data['OpenIdConnectProviderARNs']);
        }
        // validate the optional field `CognitoIdentityProviders`
        if (data['CognitoIdentityProviders']) { // data not null
          Array.validateJSON(data['CognitoIdentityProviders']);
        }
        // validate the optional field `SamlProviderARNs`
        if (data['SamlProviderARNs']) { // data not null
          Array.validateJSON(data['SamlProviderARNs']);
        }
        // validate the optional field `IdentityPoolTags`
        if (data['IdentityPoolTags']) { // data not null
          Object.validateJSON(data['IdentityPoolTags']);
        }

        return true;
    }


}

IdentityPool.RequiredProperties = ["IdentityPoolId", "IdentityPoolName", "AllowUnauthenticatedIdentities"];

/**
 * @member {String} IdentityPoolId
 */
IdentityPool.prototype['IdentityPoolId'] = undefined;

/**
 * @member {String} IdentityPoolName
 */
IdentityPool.prototype['IdentityPoolName'] = undefined;

/**
 * @member {Boolean} AllowUnauthenticatedIdentities
 */
IdentityPool.prototype['AllowUnauthenticatedIdentities'] = undefined;

/**
 * @member {Boolean} AllowClassicFlow
 */
IdentityPool.prototype['AllowClassicFlow'] = undefined;

/**
 * @member {Object} SupportedLoginProviders
 */
IdentityPool.prototype['SupportedLoginProviders'] = undefined;

/**
 * @member {String} DeveloperProviderName
 */
IdentityPool.prototype['DeveloperProviderName'] = undefined;

/**
 * @member {Array} OpenIdConnectProviderARNs
 */
IdentityPool.prototype['OpenIdConnectProviderARNs'] = undefined;

/**
 * @member {Array} CognitoIdentityProviders
 */
IdentityPool.prototype['CognitoIdentityProviders'] = undefined;

/**
 * @member {Array} SamlProviderARNs
 */
IdentityPool.prototype['SamlProviderARNs'] = undefined;

/**
 * @member {Object} IdentityPoolTags
 */
IdentityPool.prototype['IdentityPoolTags'] = undefined;






export default IdentityPool;

