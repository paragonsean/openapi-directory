/**
 * Amazon Cognito Identity
 * <fullname>Amazon Cognito Federated Identities</fullname> <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary credentials to mobile devices and other untrusted environments. It uniquely identifies a device and supplies the user with a consistent identity over the lifetime of an application.</p> <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon Cognito user pool, and you can also choose to support unauthenticated access from your app. Cognito delivers a unique identifier for each user and acts as an OpenID token provider trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS credentials.</p> <p>For a description of the authentication flow from the Amazon Cognito Developer Guide see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p> <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SetPrincipalTagAttributeMapInput model module.
 * @module model/SetPrincipalTagAttributeMapInput
 * @version 2014-06-30
 */
class SetPrincipalTagAttributeMapInput {
    /**
     * Constructs a new <code>SetPrincipalTagAttributeMapInput</code>.
     * @alias module:model/SetPrincipalTagAttributeMapInput
     * @param identityPoolId {String} 
     * @param identityProviderName {String} 
     */
    constructor(identityPoolId, identityProviderName) { 
        
        SetPrincipalTagAttributeMapInput.initialize(this, identityPoolId, identityProviderName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identityPoolId, identityProviderName) { 
        obj['IdentityPoolId'] = identityPoolId;
        obj['IdentityProviderName'] = identityProviderName;
    }

    /**
     * Constructs a <code>SetPrincipalTagAttributeMapInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetPrincipalTagAttributeMapInput} obj Optional instance to populate.
     * @return {module:model/SetPrincipalTagAttributeMapInput} The populated <code>SetPrincipalTagAttributeMapInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetPrincipalTagAttributeMapInput();

            if (data.hasOwnProperty('IdentityPoolId')) {
                obj['IdentityPoolId'] = ApiClient.convertToType(data['IdentityPoolId'], 'String');
            }
            if (data.hasOwnProperty('IdentityProviderName')) {
                obj['IdentityProviderName'] = ApiClient.convertToType(data['IdentityProviderName'], 'String');
            }
            if (data.hasOwnProperty('UseDefaults')) {
                obj['UseDefaults'] = ApiClient.convertToType(data['UseDefaults'], 'Boolean');
            }
            if (data.hasOwnProperty('PrincipalTags')) {
                obj['PrincipalTags'] = ApiClient.convertToType(data['PrincipalTags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetPrincipalTagAttributeMapInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetPrincipalTagAttributeMapInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SetPrincipalTagAttributeMapInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IdentityPoolId`
        if (data['IdentityPoolId']) { // data not null
          String.validateJSON(data['IdentityPoolId']);
        }
        // validate the optional field `IdentityProviderName`
        if (data['IdentityProviderName']) { // data not null
          String.validateJSON(data['IdentityProviderName']);
        }
        // validate the optional field `UseDefaults`
        if (data['UseDefaults']) { // data not null
          Boolean.validateJSON(data['UseDefaults']);
        }
        // validate the optional field `PrincipalTags`
        if (data['PrincipalTags']) { // data not null
          Object.validateJSON(data['PrincipalTags']);
        }

        return true;
    }


}

SetPrincipalTagAttributeMapInput.RequiredProperties = ["IdentityPoolId", "IdentityProviderName"];

/**
 * @member {String} IdentityPoolId
 */
SetPrincipalTagAttributeMapInput.prototype['IdentityPoolId'] = undefined;

/**
 * @member {String} IdentityProviderName
 */
SetPrincipalTagAttributeMapInput.prototype['IdentityProviderName'] = undefined;

/**
 * @member {Boolean} UseDefaults
 */
SetPrincipalTagAttributeMapInput.prototype['UseDefaults'] = undefined;

/**
 * @member {Object} PrincipalTags
 */
SetPrincipalTagAttributeMapInput.prototype['PrincipalTags'] = undefined;






export default SetPrincipalTagAttributeMapInput;

