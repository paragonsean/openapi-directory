# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIdInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, identity_pool_id: str=None, logins: Dict=None):
        """GetIdInput - a model defined in OpenAPI

        :param account_id: The account_id of this GetIdInput.
        :param identity_pool_id: The identity_pool_id of this GetIdInput.
        :param logins: The logins of this GetIdInput.
        """
        self.openapi_types = {
            'account_id': str,
            'identity_pool_id': str,
            'logins': Dict
        }

        self.attribute_map = {
            'account_id': 'AccountId',
            'identity_pool_id': 'IdentityPoolId',
            'logins': 'Logins'
        }

        self._account_id = account_id
        self._identity_pool_id = identity_pool_id
        self._logins = logins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIdInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIdInput of this GetIdInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this GetIdInput.


        :return: The account_id of this GetIdInput.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetIdInput.


        :param account_id: The account_id of this GetIdInput.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def identity_pool_id(self):
        """Gets the identity_pool_id of this GetIdInput.


        :return: The identity_pool_id of this GetIdInput.
        :rtype: str
        """
        return self._identity_pool_id

    @identity_pool_id.setter
    def identity_pool_id(self, identity_pool_id):
        """Sets the identity_pool_id of this GetIdInput.


        :param identity_pool_id: The identity_pool_id of this GetIdInput.
        :type identity_pool_id: str
        """
        if identity_pool_id is None:
            raise ValueError("Invalid value for `identity_pool_id`, must not be `None`")

        self._identity_pool_id = identity_pool_id

    @property
    def logins(self):
        """Gets the logins of this GetIdInput.


        :return: The logins of this GetIdInput.
        :rtype: Dict
        """
        return self._logins

    @logins.setter
    def logins(self, logins):
        """Sets the logins of this GetIdInput.


        :param logins: The logins of this GetIdInput.
        :type logins: Dict
        """

        self._logins = logins
