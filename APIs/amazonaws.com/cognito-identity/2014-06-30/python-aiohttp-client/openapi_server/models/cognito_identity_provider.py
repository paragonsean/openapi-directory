# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CognitoIdentityProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider_name: str=None, client_id: str=None, server_side_token_check: bool=None):
        """CognitoIdentityProvider - a model defined in OpenAPI

        :param provider_name: The provider_name of this CognitoIdentityProvider.
        :param client_id: The client_id of this CognitoIdentityProvider.
        :param server_side_token_check: The server_side_token_check of this CognitoIdentityProvider.
        """
        self.openapi_types = {
            'provider_name': str,
            'client_id': str,
            'server_side_token_check': bool
        }

        self.attribute_map = {
            'provider_name': 'ProviderName',
            'client_id': 'ClientId',
            'server_side_token_check': 'ServerSideTokenCheck'
        }

        self._provider_name = provider_name
        self._client_id = client_id
        self._server_side_token_check = server_side_token_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CognitoIdentityProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CognitoIdentityProvider of this CognitoIdentityProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider_name(self):
        """Gets the provider_name of this CognitoIdentityProvider.


        :return: The provider_name of this CognitoIdentityProvider.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this CognitoIdentityProvider.


        :param provider_name: The provider_name of this CognitoIdentityProvider.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def client_id(self):
        """Gets the client_id of this CognitoIdentityProvider.


        :return: The client_id of this CognitoIdentityProvider.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this CognitoIdentityProvider.


        :param client_id: The client_id of this CognitoIdentityProvider.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def server_side_token_check(self):
        """Gets the server_side_token_check of this CognitoIdentityProvider.


        :return: The server_side_token_check of this CognitoIdentityProvider.
        :rtype: bool
        """
        return self._server_side_token_check

    @server_side_token_check.setter
    def server_side_token_check(self, server_side_token_check):
        """Sets the server_side_token_check of this CognitoIdentityProvider.


        :param server_side_token_check: The server_side_token_check of this CognitoIdentityProvider.
        :type server_side_token_check: bool
        """

        self._server_side_token_check = server_side_token_check
