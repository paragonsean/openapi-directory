# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteIdentitiesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_ids_to_delete: List=None):
        """DeleteIdentitiesInput - a model defined in OpenAPI

        :param identity_ids_to_delete: The identity_ids_to_delete of this DeleteIdentitiesInput.
        """
        self.openapi_types = {
            'identity_ids_to_delete': List
        }

        self.attribute_map = {
            'identity_ids_to_delete': 'IdentityIdsToDelete'
        }

        self._identity_ids_to_delete = identity_ids_to_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteIdentitiesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteIdentitiesInput of this DeleteIdentitiesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_ids_to_delete(self):
        """Gets the identity_ids_to_delete of this DeleteIdentitiesInput.


        :return: The identity_ids_to_delete of this DeleteIdentitiesInput.
        :rtype: List
        """
        return self._identity_ids_to_delete

    @identity_ids_to_delete.setter
    def identity_ids_to_delete(self, identity_ids_to_delete):
        """Sets the identity_ids_to_delete of this DeleteIdentitiesInput.


        :param identity_ids_to_delete: The identity_ids_to_delete of this DeleteIdentitiesInput.
        :type identity_ids_to_delete: List
        """
        if identity_ids_to_delete is None:
            raise ValueError("Invalid value for `identity_ids_to_delete`, must not be `None`")

        self._identity_ids_to_delete = identity_ids_to_delete
