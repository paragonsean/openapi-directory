# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_id: str=None, logins: List=None, creation_date: datetime=None, last_modified_date: datetime=None):
        """IdentityDescription - a model defined in OpenAPI

        :param identity_id: The identity_id of this IdentityDescription.
        :param logins: The logins of this IdentityDescription.
        :param creation_date: The creation_date of this IdentityDescription.
        :param last_modified_date: The last_modified_date of this IdentityDescription.
        """
        self.openapi_types = {
            'identity_id': str,
            'logins': List,
            'creation_date': datetime,
            'last_modified_date': datetime
        }

        self.attribute_map = {
            'identity_id': 'IdentityId',
            'logins': 'Logins',
            'creation_date': 'CreationDate',
            'last_modified_date': 'LastModifiedDate'
        }

        self._identity_id = identity_id
        self._logins = logins
        self._creation_date = creation_date
        self._last_modified_date = last_modified_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityDescription of this IdentityDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_id(self):
        """Gets the identity_id of this IdentityDescription.


        :return: The identity_id of this IdentityDescription.
        :rtype: str
        """
        return self._identity_id

    @identity_id.setter
    def identity_id(self, identity_id):
        """Sets the identity_id of this IdentityDescription.


        :param identity_id: The identity_id of this IdentityDescription.
        :type identity_id: str
        """

        self._identity_id = identity_id

    @property
    def logins(self):
        """Gets the logins of this IdentityDescription.


        :return: The logins of this IdentityDescription.
        :rtype: List
        """
        return self._logins

    @logins.setter
    def logins(self, logins):
        """Sets the logins of this IdentityDescription.


        :param logins: The logins of this IdentityDescription.
        :type logins: List
        """

        self._logins = logins

    @property
    def creation_date(self):
        """Gets the creation_date of this IdentityDescription.


        :return: The creation_date of this IdentityDescription.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this IdentityDescription.


        :param creation_date: The creation_date of this IdentityDescription.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this IdentityDescription.


        :return: The last_modified_date of this IdentityDescription.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this IdentityDescription.


        :param last_modified_date: The last_modified_date of this IdentityDescription.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date
