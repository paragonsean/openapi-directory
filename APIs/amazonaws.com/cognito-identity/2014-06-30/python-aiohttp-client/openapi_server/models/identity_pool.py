# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityPool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_pool_id: str=None, identity_pool_name: str=None, allow_unauthenticated_identities: bool=None, allow_classic_flow: bool=None, supported_login_providers: Dict=None, developer_provider_name: str=None, open_id_connect_provider_arns: List=None, cognito_identity_providers: List=None, saml_provider_arns: List=None, identity_pool_tags: Dict=None):
        """IdentityPool - a model defined in OpenAPI

        :param identity_pool_id: The identity_pool_id of this IdentityPool.
        :param identity_pool_name: The identity_pool_name of this IdentityPool.
        :param allow_unauthenticated_identities: The allow_unauthenticated_identities of this IdentityPool.
        :param allow_classic_flow: The allow_classic_flow of this IdentityPool.
        :param supported_login_providers: The supported_login_providers of this IdentityPool.
        :param developer_provider_name: The developer_provider_name of this IdentityPool.
        :param open_id_connect_provider_arns: The open_id_connect_provider_arns of this IdentityPool.
        :param cognito_identity_providers: The cognito_identity_providers of this IdentityPool.
        :param saml_provider_arns: The saml_provider_arns of this IdentityPool.
        :param identity_pool_tags: The identity_pool_tags of this IdentityPool.
        """
        self.openapi_types = {
            'identity_pool_id': str,
            'identity_pool_name': str,
            'allow_unauthenticated_identities': bool,
            'allow_classic_flow': bool,
            'supported_login_providers': Dict,
            'developer_provider_name': str,
            'open_id_connect_provider_arns': List,
            'cognito_identity_providers': List,
            'saml_provider_arns': List,
            'identity_pool_tags': Dict
        }

        self.attribute_map = {
            'identity_pool_id': 'IdentityPoolId',
            'identity_pool_name': 'IdentityPoolName',
            'allow_unauthenticated_identities': 'AllowUnauthenticatedIdentities',
            'allow_classic_flow': 'AllowClassicFlow',
            'supported_login_providers': 'SupportedLoginProviders',
            'developer_provider_name': 'DeveloperProviderName',
            'open_id_connect_provider_arns': 'OpenIdConnectProviderARNs',
            'cognito_identity_providers': 'CognitoIdentityProviders',
            'saml_provider_arns': 'SamlProviderARNs',
            'identity_pool_tags': 'IdentityPoolTags'
        }

        self._identity_pool_id = identity_pool_id
        self._identity_pool_name = identity_pool_name
        self._allow_unauthenticated_identities = allow_unauthenticated_identities
        self._allow_classic_flow = allow_classic_flow
        self._supported_login_providers = supported_login_providers
        self._developer_provider_name = developer_provider_name
        self._open_id_connect_provider_arns = open_id_connect_provider_arns
        self._cognito_identity_providers = cognito_identity_providers
        self._saml_provider_arns = saml_provider_arns
        self._identity_pool_tags = identity_pool_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityPool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityPool of this IdentityPool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_pool_id(self):
        """Gets the identity_pool_id of this IdentityPool.


        :return: The identity_pool_id of this IdentityPool.
        :rtype: str
        """
        return self._identity_pool_id

    @identity_pool_id.setter
    def identity_pool_id(self, identity_pool_id):
        """Sets the identity_pool_id of this IdentityPool.


        :param identity_pool_id: The identity_pool_id of this IdentityPool.
        :type identity_pool_id: str
        """
        if identity_pool_id is None:
            raise ValueError("Invalid value for `identity_pool_id`, must not be `None`")

        self._identity_pool_id = identity_pool_id

    @property
    def identity_pool_name(self):
        """Gets the identity_pool_name of this IdentityPool.


        :return: The identity_pool_name of this IdentityPool.
        :rtype: str
        """
        return self._identity_pool_name

    @identity_pool_name.setter
    def identity_pool_name(self, identity_pool_name):
        """Sets the identity_pool_name of this IdentityPool.


        :param identity_pool_name: The identity_pool_name of this IdentityPool.
        :type identity_pool_name: str
        """
        if identity_pool_name is None:
            raise ValueError("Invalid value for `identity_pool_name`, must not be `None`")

        self._identity_pool_name = identity_pool_name

    @property
    def allow_unauthenticated_identities(self):
        """Gets the allow_unauthenticated_identities of this IdentityPool.


        :return: The allow_unauthenticated_identities of this IdentityPool.
        :rtype: bool
        """
        return self._allow_unauthenticated_identities

    @allow_unauthenticated_identities.setter
    def allow_unauthenticated_identities(self, allow_unauthenticated_identities):
        """Sets the allow_unauthenticated_identities of this IdentityPool.


        :param allow_unauthenticated_identities: The allow_unauthenticated_identities of this IdentityPool.
        :type allow_unauthenticated_identities: bool
        """
        if allow_unauthenticated_identities is None:
            raise ValueError("Invalid value for `allow_unauthenticated_identities`, must not be `None`")

        self._allow_unauthenticated_identities = allow_unauthenticated_identities

    @property
    def allow_classic_flow(self):
        """Gets the allow_classic_flow of this IdentityPool.


        :return: The allow_classic_flow of this IdentityPool.
        :rtype: bool
        """
        return self._allow_classic_flow

    @allow_classic_flow.setter
    def allow_classic_flow(self, allow_classic_flow):
        """Sets the allow_classic_flow of this IdentityPool.


        :param allow_classic_flow: The allow_classic_flow of this IdentityPool.
        :type allow_classic_flow: bool
        """

        self._allow_classic_flow = allow_classic_flow

    @property
    def supported_login_providers(self):
        """Gets the supported_login_providers of this IdentityPool.


        :return: The supported_login_providers of this IdentityPool.
        :rtype: Dict
        """
        return self._supported_login_providers

    @supported_login_providers.setter
    def supported_login_providers(self, supported_login_providers):
        """Sets the supported_login_providers of this IdentityPool.


        :param supported_login_providers: The supported_login_providers of this IdentityPool.
        :type supported_login_providers: Dict
        """

        self._supported_login_providers = supported_login_providers

    @property
    def developer_provider_name(self):
        """Gets the developer_provider_name of this IdentityPool.


        :return: The developer_provider_name of this IdentityPool.
        :rtype: str
        """
        return self._developer_provider_name

    @developer_provider_name.setter
    def developer_provider_name(self, developer_provider_name):
        """Sets the developer_provider_name of this IdentityPool.


        :param developer_provider_name: The developer_provider_name of this IdentityPool.
        :type developer_provider_name: str
        """

        self._developer_provider_name = developer_provider_name

    @property
    def open_id_connect_provider_arns(self):
        """Gets the open_id_connect_provider_arns of this IdentityPool.


        :return: The open_id_connect_provider_arns of this IdentityPool.
        :rtype: List
        """
        return self._open_id_connect_provider_arns

    @open_id_connect_provider_arns.setter
    def open_id_connect_provider_arns(self, open_id_connect_provider_arns):
        """Sets the open_id_connect_provider_arns of this IdentityPool.


        :param open_id_connect_provider_arns: The open_id_connect_provider_arns of this IdentityPool.
        :type open_id_connect_provider_arns: List
        """

        self._open_id_connect_provider_arns = open_id_connect_provider_arns

    @property
    def cognito_identity_providers(self):
        """Gets the cognito_identity_providers of this IdentityPool.


        :return: The cognito_identity_providers of this IdentityPool.
        :rtype: List
        """
        return self._cognito_identity_providers

    @cognito_identity_providers.setter
    def cognito_identity_providers(self, cognito_identity_providers):
        """Sets the cognito_identity_providers of this IdentityPool.


        :param cognito_identity_providers: The cognito_identity_providers of this IdentityPool.
        :type cognito_identity_providers: List
        """

        self._cognito_identity_providers = cognito_identity_providers

    @property
    def saml_provider_arns(self):
        """Gets the saml_provider_arns of this IdentityPool.


        :return: The saml_provider_arns of this IdentityPool.
        :rtype: List
        """
        return self._saml_provider_arns

    @saml_provider_arns.setter
    def saml_provider_arns(self, saml_provider_arns):
        """Sets the saml_provider_arns of this IdentityPool.


        :param saml_provider_arns: The saml_provider_arns of this IdentityPool.
        :type saml_provider_arns: List
        """

        self._saml_provider_arns = saml_provider_arns

    @property
    def identity_pool_tags(self):
        """Gets the identity_pool_tags of this IdentityPool.


        :return: The identity_pool_tags of this IdentityPool.
        :rtype: Dict
        """
        return self._identity_pool_tags

    @identity_pool_tags.setter
    def identity_pool_tags(self, identity_pool_tags):
        """Sets the identity_pool_tags of this IdentityPool.


        :param identity_pool_tags: The identity_pool_tags of this IdentityPool.
        :type identity_pool_tags: Dict
        """

        self._identity_pool_tags = identity_pool_tags
