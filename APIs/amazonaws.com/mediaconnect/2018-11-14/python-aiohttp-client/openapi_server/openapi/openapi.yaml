openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: API for AWS Elemental MediaConnect
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS MediaConnect
  version: 2018-11-14
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediaconnect
  x-aws-signingName: mediaconnect
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediaconnect-2018-11-14.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediaconnect/
servers:
- description: The AWS MediaConnect multi-region endpoint
  url: "http://mediaconnect.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS MediaConnect multi-region endpoint
  url: "https://mediaconnect.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
  url: "http://mediaconnect.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
  url: "https://mediaconnect.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /tags/{resourceArn}:
    get:
      description: List all tags on an AWS Elemental MediaConnect resource
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) that identifies the AWS Elemental
          MediaConnect resource for which to list the tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Associates the specified tags to a resource with the specified\
        \ resourceArn. If existing tags on a resource are not specified in the request\
        \ parameters, they are not changed. When a resource is deleted, the tags associated\
        \ with that resource are deleted as well."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) that identifies the AWS Elemental
          MediaConnect resource to which to add tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Deletes specified tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) that identifies the AWS Elemental
          MediaConnect resource from which to delete tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: The keys of the tags to be removed.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/bridges:
    get:
      description: Displays a list of bridges that are associated with this account
        and an optionally specified Arn. This request returns a paginated result.
      operationId: list_bridges
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Filter the list results to display only the bridges associated
          with the selected Amazon Resource Name (ARN).
        explode: true
        in: query
        name: filterArn
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListBridges request with MaxResults set at 5. Although\
          \ 20 items match your request, the service returns no more than the first\
          \ 5 items. (The service also returns a NextToken value that you can use\
          \ to fetch the next batch of results.) The service might return fewer results\
          \ than the MaxResults value. If MaxResults is not included in the request,\
          \ the service defaults to pagination with a maximum of 10 results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListBridges request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListBridges request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBridgesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new bridge. The request must include one source.
      operationId: create_bridge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBridge_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBridgeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBridge420Exception'
          description: CreateBridge420Exception
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}:
    delete:
      description: "Deletes a bridge. Before you can delete a bridge, you must stop\
        \ the bridge."
      operationId: delete_bridge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to delete.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBridgeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Displays the details of a bridge.
      operationId: describe_bridge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to describe.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBridgeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the bridge
      operationId: update_bridge
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Number (ARN) of the bridge that you want
          to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBridge_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBridgeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}/outputs:
    post:
      description: Adds outputs to an existing bridge.
      operationId: add_bridge_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBridgeOutputs_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBridgeOutputsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}/outputs/{outputName}:
    delete:
      description: Removes an output from a bridge.
      operationId: remove_bridge_output
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the bridge output that you want to remove.
        explode: false
        in: path
        name: outputName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveBridgeOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing bridge output.
      operationId: update_bridge_output
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the bridge output that you want to update.
        explode: false
        in: path
        name: outputName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBridgeOutput_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBridgeOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}/sources:
    post:
      description: Adds sources to an existing bridge.
      operationId: add_bridge_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBridgeSources_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBridgeSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}/sources/{sourceName}:
    delete:
      description: Removes a source from a bridge.
      operationId: remove_bridge_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the bridge source that you want to remove.
        explode: false
        in: path
        name: sourceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveBridgeSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing bridge source.
      operationId: update_bridge_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the source that you want to update.
        explode: false
        in: path
        name: sourceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBridgeSource_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBridgeSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/bridges/{bridgeArn}/state:
    put:
      description: Updates the bridge state
      operationId: update_bridge_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the bridge that you want to update.
        explode: false
        in: path
        name: bridgeArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBridgeState_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBridgeStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/entitlements:
    get:
      description: Displays a list of all entitlements that have been granted to this
        account. This request returns 20 results per page.
      operationId: list_entitlements
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListEntitlements request with MaxResults set at\
          \ 5. Although 20 items match your request, the service returns no more than\
          \ the first 5 items. (The service also returns a NextToken value that you\
          \ can use to fetch the next batch of results.) The service might return\
          \ fewer results than the MaxResults value. If MaxResults is not included\
          \ in the request, the service defaults to pagination with a maximum of 20\
          \ results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListEntitlements request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListEntitlements request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitlementsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/flows:
    get:
      description: Displays a list of flows that are associated with this account.
        This request returns a paginated result.
      operationId: list_flows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListFlows request with MaxResults set at 5. Although\
          \ 20 items match your request, the service returns no more than the first\
          \ 5 items. (The service also returns a NextToken value that you can use\
          \ to fetch the next batch of results.) The service might return fewer results\
          \ than the MaxResults value. If MaxResults is not included in the request,\
          \ the service defaults to pagination with a maximum of 10 results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListFlows request with MaxResults set\
          \ at 5. The service returns the first batch of results (up to 5) and a NextToken\
          \ value. To see the next batch of results, you can submit the ListFlows\
          \ request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new flow. The request must include one source. The request
        optionally can include outputs (up to 50) and entitlements (up to 50).
      operationId: create_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlow_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlow420Exception'
          description: CreateFlow420Exception
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/start/{flowArn}:
    post:
      description: Starts a flow.
      operationId: start_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the flow that you want to start.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/flows/stop/{flowArn}:
    post:
      description: Stops a flow.
      operationId: stop_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the flow that you want to stop.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/flows/{flowArn}:
    delete:
      description: "Deletes a flow. Before you can delete a flow, you must stop the\
        \ flow."
      operationId: delete_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the flow that you want to delete.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Displays the details of a flow. The response includes the flow\
        \ ARN, name, and Availability Zone, as well as details about the source, outputs,\
        \ and entitlements."
      operationId: describe_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the flow that you want to describe.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates flow
      operationId: update_flow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to update.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlow_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/entitlements:
    post:
      description: Grants entitlements to an existing flow.
      operationId: grant_flow_entitlements
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to grant entitlements on.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantFlowEntitlements_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlementsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlements420Exception'
          description: GrantFlowEntitlements420Exception
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/entitlements/{entitlementArn}:
    delete:
      description: "Revokes an entitlement from a flow. Once an entitlement is revoked,\
        \ the content becomes unavailable to the subscriber and the associated output\
        \ is removed."
      operationId: revoke_flow_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the entitlement that you want to revoke.
        explode: false
        in: path
        name: entitlementArn
        required: true
        schema:
          type: string
        style: simple
      - description: The flow that you want to revoke an entitlement from.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeFlowEntitlementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "You can change an entitlement's description, subscribers, and\
        \ encryption. If you change the subscribers, the service will remove the outputs\
        \ that are are used by the subscribers that are removed."
      operationId: update_flow_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the entitlement that you want to update.
        explode: false
        in: path
        name: entitlementArn
        required: true
        schema:
          type: string
        style: simple
      - description: The flow that is associated with the entitlement that you want
          to update.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlowEntitlement_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowEntitlementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/mediaStreams:
    post:
      description: "Adds media streams to an existing flow. After you add a media\
        \ stream to a flow, you can associate it with a source and/or an output that\
        \ uses the ST 2110 JPEG XS or CDI protocol."
      operationId: add_flow_media_streams
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the flow.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFlowMediaStreams_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowMediaStreamsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/mediaStreams/{mediaStreamName}:
    delete:
      description: Removes a media stream from a flow. This action is only available
        if the media stream is not associated with a source or output.
      operationId: remove_flow_media_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the flow.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the media stream that you want to remove.
        explode: false
        in: path
        name: mediaStreamName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowMediaStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing media stream.
      operationId: update_flow_media_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the flow.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the media stream that you want to update.
        explode: false
        in: path
        name: mediaStreamName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlowMediaStream_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowMediaStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/outputs:
    post:
      description: Adds outputs to an existing flow. You can create up to 50 outputs
        per flow.
      operationId: add_flow_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to add outputs to.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFlowOutputs_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputs420Exception'
          description: AddFlowOutputs420Exception
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/outputs/{outputArn}:
    delete:
      description: "Removes an output from an existing flow. This request can be made\
        \ only on an output that does not have an entitlement associated with it.\
        \ If the output has an entitlement, you must revoke the entitlement instead.\
        \ When an entitlement is revoked from a flow, the service automatically removes\
        \ the associated output."
      operationId: remove_flow_output
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to remove an output from.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The ARN of the output that you want to remove.
        explode: false
        in: path
        name: outputArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing flow output.
      operationId: update_flow_output
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that is associated with the output that you want to
          update.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The ARN of the output that you want to update.
        explode: false
        in: path
        name: outputArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlowOutput_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowOutputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/source:
    post:
      description: Adds Sources to flow
      operationId: add_flow_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to mutate.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFlowSources_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/source/{sourceArn}:
    delete:
      description: Removes a source from an existing flow. This request can be made
        only if there is more than one source on the flow.
      operationId: remove_flow_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to remove a source from.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The ARN of the source that you want to remove.
        explode: false
        in: path
        name: sourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the source of a flow.
      operationId: update_flow_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that is associated with the source that you want to
          update.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The ARN of the source that you want to update.
        explode: false
        in: path
        name: sourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlowSource_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/vpcInterfaces:
    post:
      description: Adds VPC interfaces to flow
      operationId: add_flow_vpc_interfaces
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to mutate.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFlowVpcInterfaces_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowVpcInterfacesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/flows/{flowArn}/vpcInterfaces/{vpcInterfaceName}:
    delete:
      description: "Removes a VPC Interface from an existing flow. This request can\
        \ be made only on a VPC interface that does not have a Source or Output associated\
        \ with it. If the VPC interface is referenced by a Source or Output, you must\
        \ first delete or update the Source or Output to no longer reference the VPC\
        \ interface."
      operationId: remove_flow_vpc_interface
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The flow that you want to remove a VPC interface from.
        explode: false
        in: path
        name: flowArn
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the VPC interface that you want to remove.
        explode: false
        in: path
        name: vpcInterfaceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowVpcInterfaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/gateway-instances:
    get:
      description: Displays a list of instances associated with the AWS account. This
        request returns a paginated result. You can use the filterArn property to
        display only the instances associated with the selected Gateway Amazon Resource
        Name (ARN).
      operationId: list_gateway_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Filter the list results to display only the instances associated
          with the selected Gateway Amazon Resource Name (ARN).
        explode: true
        in: query
        name: filterArn
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListInstances request with MaxResults set at 5.\
          \ Although 20 items match your request, the service returns no more than\
          \ the first 5 items. (The service also returns a NextToken value that you\
          \ can use to fetch the next batch of results.) The service might return\
          \ fewer results than the MaxResults value. If MaxResults is not included\
          \ in the request, the service defaults to pagination with a maximum of 10\
          \ results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListInstances request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListInstances request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewayInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/gateway-instances/{gatewayInstanceArn}:
    delete:
      description: "Deregisters an instance. Before you deregister an instance, all\
        \ bridges running on the instance must be stopped. If you want to deregister\
        \ an instance without stopping the bridges, you must use the --force option."
      operationId: deregister_gateway_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Force the deregistration of an instance. Force will deregister\
          \ an instance, even if there are bridges running on it."
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: The Amazon Resource Name (ARN) of the gateway that contains the
          instance that you want to deregister.
        explode: false
        in: path
        name: gatewayInstanceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterGatewayInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Displays the details of an instance.
      operationId: describe_gateway_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the gateway instance that you
          want to describe.
        explode: false
        in: path
        name: gatewayInstanceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGatewayInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the configuration of an existing Gateway Instance.
      operationId: update_gateway_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the instance that you want
          to update.
        explode: false
        in: path
        name: gatewayInstanceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGatewayInstance_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGatewayInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/gateways:
    get:
      description: Displays a list of gateways that are associated with this account.
        This request returns a paginated result.
      operationId: list_gateways
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListGateways request with MaxResults set at 5. Although\
          \ 20 items match your request, the service returns no more than the first\
          \ 5 items. (The service also returns a NextToken value that you can use\
          \ to fetch the next batch of results.) The service might return fewer results\
          \ than the MaxResults value. If MaxResults is not included in the request,\
          \ the service defaults to pagination with a maximum of 10 results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListGateways request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListGateways request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new gateway. The request must include at least one network
        (up to 4).
      operationId: create_gateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGateway_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGateway420Exception'
          description: CreateGateway420Exception
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/gateways/{gatewayArn}:
    delete:
      description: "Deletes a gateway. Before you can delete a gateway, you must deregister\
        \ its instances and delete its bridges."
      operationId: delete_gateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the gateway that you want to delete.
        explode: false
        in: path
        name: gatewayArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Displays the details of a gateway. The response includes the gateway\
        \ ARN, name, and CIDR blocks, as well as details about the networks."
      operationId: describe_gateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the gateway that you want to
          describe.
        explode: false
        in: path
        name: gatewayArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/offerings:
    get:
      description: "Displays a list of all offerings that are available to this account\
        \ in the current AWS Region. If you have an active reservation (which means\
        \ you've purchased an offering that has already started and hasn't expired\
        \ yet), your account isn't eligible for other offerings."
      operationId: list_offerings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListOfferings request with MaxResults set at 5.\
          \ Although 20 items match your request, the service returns no more than\
          \ the first 5 items. (The service also returns a NextToken value that you\
          \ can use to fetch the next batch of results.) The service might return\
          \ fewer results than the MaxResults value. If MaxResults is not included\
          \ in the request, the service defaults to pagination with a maximum of 10\
          \ results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListOfferings request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListOfferings request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/offerings/{offeringArn}:
    get:
      description: "Displays the details of an offering. The response includes the\
        \ offering description, duration, outbound bandwidth, price, and Amazon Resource\
        \ Name (ARN)."
      operationId: describe_offering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the offering.
        explode: false
        in: path
        name: offeringArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOfferingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Submits a request to purchase an offering. If you already have\
        \ an active reservation, you can't purchase another offering."
      operationId: purchase_offering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the offering.
        explode: false
        in: path
        name: offeringArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOffering_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOfferingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/reservations:
    get:
      description: Displays a list of all reservations that have been purchased by
        this account in the current AWS Region. This list includes all reservations
        in all states (such as active and expired).
      operationId: list_reservations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return per API request. For\
          \ example, you submit a ListReservations request with MaxResults set at\
          \ 5. Although 20 items match your request, the service returns no more than\
          \ the first 5 items. (The service also returns a NextToken value that you\
          \ can use to fetch the next batch of results.) The service might return\
          \ fewer results than the MaxResults value. If MaxResults is not included\
          \ in the request, the service defaults to pagination with a maximum of 10\
          \ results per page."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The token that identifies which batch of results that you want\
          \ to see. For example, you submit a ListReservations request with MaxResults\
          \ set at 5. The service returns the first batch of results (up to 5) and\
          \ a NextToken value. To see the next batch of results, you can submit the\
          \ ListOfferings request a second time and specify the NextToken value."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/reservations/{reservationArn}:
    get:
      description: "Displays the details of a reservation. The response includes the\
        \ reservation name, state, start date and time, and the details of the offering\
        \ that make up the rest of the reservation (such as price, duration, and outbound\
        \ bandwidth)."
      operationId: describe_reservation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the reservation.
        explode: false
        in: path
        name: reservationArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddBridgeOutputsResponse:
      example:
        BridgeArn: ""
        Outputs: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfBridgeOutput'
          - description: The outputs that you added to this bridge.
            xml:
              name: outputs
          title: Outputs
      title: AddBridgeOutputsResponse
      type: object
    AddBridgeOutputRequest:
      description: Add an output to a bridge.
      properties:
        NetworkOutput:
          $ref: '#/components/schemas/AddBridgeOutputRequest_NetworkOutput'
      title: AddBridgeOutputRequest
      type: object
    BadRequestException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    ConflictException: {}
    AddBridgeSourcesResponse:
      example:
        BridgeArn: ""
        Sources: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfBridgeSource'
          - description: The sources that you added to this bridge.
            xml:
              name: sources
          title: Sources
      title: AddBridgeSourcesResponse
      type: object
    AddBridgeSourceRequest:
      description: Add a source to an existing bridge.
      properties:
        FlowSource:
          $ref: '#/components/schemas/AddBridgeSourceRequest_FlowSource'
        NetworkSource:
          $ref: '#/components/schemas/AddBridgeSourceRequest_NetworkSource'
      title: AddBridgeSourceRequest
      type: object
    AddFlowMediaStreamsResponse:
      example:
        MediaStreams: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that you added media streams to.
            xml:
              name: flowArn
          title: FlowArn
        MediaStreams:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStream'
          - description: The media streams that you added to the flow.
            xml:
              name: mediaStreams
          title: MediaStreams
      title: AddFlowMediaStreamsResponse
      type: object
    AddMediaStreamRequest:
      description: The media stream that you want to add to the flow.
      properties:
        Attributes:
          $ref: '#/components/schemas/AddMediaStreamRequest_Attributes'
        ClockRate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The sample rate (in Hz) for the stream. If the media stream\
              \ type is video or ancillary data, set this value to 90000. If the media\
              \ stream type is audio, set this value to either 48000 or 96000."
            xml:
              name: clockRate
          title: ClockRate
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description that can help you quickly identify what your
              media stream is used for.
            xml:
              name: description
          title: Description
        MediaStreamId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: A unique identifier for the media stream.
            xml:
              name: mediaStreamId
          title: MediaStreamId
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A name that helps you distinguish one media stream from another.
            xml:
              name: mediaStreamName
          title: MediaStreamName
        MediaStreamType:
          allOf:
          - $ref: '#/components/schemas/MediaStreamType'
          - description: The type of media stream.
            xml:
              name: mediaStreamType
          title: MediaStreamType
        VideoFormat:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resolution of the video.
            xml:
              name: videoFormat
          title: VideoFormat
      required:
      - MediaStreamId
      - MediaStreamName
      - MediaStreamType
      title: AddMediaStreamRequest
      type: object
    AddFlowOutputsResponse:
      example:
        Outputs: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that these outputs were added to.
            xml:
              name: flowArn
          title: FlowArn
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfOutput'
          - description: The details of the newly added outputs.
            xml:
              name: outputs
          title: Outputs
      title: AddFlowOutputsResponse
      type: object
    AddOutputRequest:
      description: The output that you want to add to this flow.
      properties:
        CidrAllowList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "The range of IP addresses that should be allowed to initiate\
              \ output requests to this flow. These IP addresses should be in the\
              \ form of a Classless Inter-Domain Routing (CIDR) block; for example,\
              \ 10.0.0.0/16."
            xml:
              name: cidrAllowList
          title: CidrAllowList
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the output. This description appears only
              on the AWS Elemental MediaConnect console and will not be seen by the
              end user.
            xml:
              name: description
          title: Description
        Destination:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address from which video will be sent to output destinations.
            xml:
              name: destination
          title: Destination
        Encryption:
          $ref: '#/components/schemas/AddOutputRequest_Encryption'
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
          title: MaxLatency
        MediaStreamOutputConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'
          - description: "The media streams that are associated with the output, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamOutputConfigurations
          title: MediaStreamOutputConfigurations
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
          title: MinLatency
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the output. This value must be unique within
              the current flow.
            xml:
              name: name
          title: Name
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port to use when content is distributed to this output.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol to use for the output.
            xml:
              name: protocol
          title: Protocol
        RemoteId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The remote ID for the Zixi-pull output stream.
            xml:
              name: remoteId
          title: RemoteId
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
          title: SenderControlPort
        SmoothingLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing latency in milliseconds for RIST, RTP, and\
              \ RTP-FEC streams."
            xml:
              name: smoothingLatency
          title: SmoothingLatency
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
          title: StreamId
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/AddOutputRequest_VpcInterfaceAttachment'
      required:
      - Protocol
      title: AddOutputRequest
      type: object
    AddFlowOutputs420Exception: {}
    AddFlowSourcesResponse:
      example:
        FlowArn: ""
        Sources: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that these sources were added to.
            xml:
              name: flowArn
          title: FlowArn
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfSource'
          - description: The details of the newly added sources.
            xml:
              name: sources
          title: Sources
      title: AddFlowSourcesResponse
      type: object
    SetSourceRequest:
      description: The settings for the source of the flow.
      properties:
        Decryption:
          $ref: '#/components/schemas/CreateFlow_request_source_Decryption'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description for the source. This value is not used or seen
              outside of the current AWS Elemental MediaConnect account.
            xml:
              name: description
          title: Description
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The ARN of the entitlement that allows you to subscribe\
              \ to this flow. The entitlement is set by the flow originator, and the\
              \ ARN is generated as part of the originator's flow."
            pattern: ^arn:.+:mediaconnect.+:entitlement:.+$
            xml:
              name: entitlementArn
          title: EntitlementArn
        IngestPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow will be listening on for incoming
              content.
            xml:
              name: ingestPort
          title: IngestPort
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC\
              \ streams."
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
          title: MaxLatency
        MaxSyncBuffer:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The size of the buffer (in milliseconds) to use to sync incoming
              source data.
            xml:
              name: maxSyncBuffer
          title: MaxSyncBuffer
        MediaStreamSourceConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
          - description: "The media streams that are associated with the source, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamSourceConfigurations
          title: MediaStreamSourceConfigurations
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
          title: MinLatency
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source.
            xml:
              name: name
          title: Name
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol that is used by the source.
            xml:
              name: protocol
          title: Protocol
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
          title: SenderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
          title: SenderIpAddress
        SourceListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Source IP or domain name for SRT-caller protocol.
            xml:
              name: sourceListenerAddress
          title: SourceListenerAddress
        SourceListenerPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Source port for SRT-caller protocol.
            xml:
              name: sourceListenerPort
          title: SourceListenerPort
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
          title: StreamId
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface to use for this source.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
        WhitelistCidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The range of IP addresses that should be allowed to contribute\
              \ content to your source. These IP addresses should be in the form of\
              \ a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: whitelistCidr
          title: WhitelistCidr
        GatewayBridgeSource:
          $ref: '#/components/schemas/CreateFlow_request_source_GatewayBridgeSource'
      title: SetSourceRequest
      type: object
    AddFlowVpcInterfacesResponse:
      example:
        VpcInterfaces: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that these VPC interfaces were added
              to.
            xml:
              name: flowArn
          title: FlowArn
        VpcInterfaces:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcInterface'
          - description: The details of the newly added VPC interfaces.
            xml:
              name: vpcInterfaces
          title: VpcInterfaces
      title: AddFlowVpcInterfacesResponse
      type: object
    VpcInterfaceRequest:
      description: Desired VPC Interface for a Flow
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC Interface. This value must be unique
              within the current flow.
            xml:
              name: name
          title: Name
        NetworkInterfaceType:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceType'
          - description: "The type of network interface. If this value is not included\
              \ in the request, MediaConnect uses ENA as the networkInterfaceType."
            xml:
              name: networkInterfaceType
          title: NetworkInterfaceType
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Role Arn MediaConnect can assumes to create ENIs in customer's
              account
            xml:
              name: roleArn
          title: RoleArn
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: Security Group IDs to be used on ENI.
            xml:
              name: securityGroupIds
          title: SecurityGroupIds
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Subnet must be in the AZ of the Flow
            xml:
              name: subnetId
          title: SubnetId
      required:
      - Name
      - RoleArn
      - SecurityGroupIds
      - SubnetId
      title: VpcInterfaceRequest
      type: object
    CreateBridgeResponse:
      example:
        Bridge:
          BridgeMessages: ""
          BridgeArn: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          EgressGatewayBridge:
            InstanceId: ""
            MaxBitrate: ""
          IngressGatewayBridge:
            MaxOutputs: ""
            InstanceId: ""
            MaxBitrate: ""
          Outputs: ""
          BridgeState: ""
          PlacementArn: ""
          Sources: ""
          Name: ""
      properties:
        Bridge:
          $ref: '#/components/schemas/CreateBridgeResponse_Bridge'
      title: CreateBridgeResponse
      type: object
    __integer:
      title: __integer
      type: integer
    FailoverMode:
      enum:
      - MERGE
      - FAILOVER
      title: FailoverMode
      type: string
    SourcePriority:
      description: The priority you want to assign to a source. You can have a primary
        stream and a backup stream or two equally prioritized streams.
      properties:
        PrimarySource:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source you choose as the primary source for
              this flow.
            xml:
              name: primarySource
          title: PrimarySource
      title: SourcePriority
      type: object
    State:
      enum:
      - ENABLED
      - DISABLED
      title: State
      type: string
    CreateBridge420Exception: {}
    CreateFlowResponse:
      example:
        Flow:
          Status: ""
          Description: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          MediaStreams: ""
          AvailabilityZone: ""
          Maintenance:
            MaintenanceDay: ""
            MaintenanceScheduledDate: ""
            MaintenanceDeadline: ""
            MaintenanceStartHour: ""
          Sources: ""
          Source:
            IngestIp: ""
            DataTransferSubscriberFeePercent: ""
            Description: ""
            SenderIpAddress: ""
            MediaStreamSourceConfigurations: ""
            IngestPort: ""
            SenderControlPort: ""
            Decryption:
              SecretArn: ""
              KeyType: ""
              ResourceId: ""
              DeviceId: ""
              Region: ""
              ConstantInitializationVector: ""
              Algorithm: ""
              RoleArn: ""
              Url: ""
            GatewayBridgeSource:
              BridgeArn: ""
              VpcInterfaceAttachment:
                VpcInterfaceName: ""
            Name: ""
            WhitelistCidr: ""
            EntitlementArn: ""
            SourceArn: ""
            VpcInterfaceName: ""
            Transport:
              MaxSyncBuffer: ""
              SmoothingLatency: ""
              StreamId: ""
              SenderIpAddress: ""
              RemoteId: ""
              SenderControlPort: ""
              SourceListenerAddress: ""
              SourceListenerPort: ""
              MinLatency: ""
              MaxBitrate: ""
              Protocol: ""
              MaxLatency: ""
              CidrAllowList: ""
          Name: ""
          VpcInterfaces: ""
          Entitlements: ""
          Outputs: ""
          EgressIp: ""
          FlowArn: ""
      properties:
        Flow:
          $ref: '#/components/schemas/CreateFlowResponse_Flow'
      title: CreateFlowResponse
      type: object
    GrantEntitlementRequest:
      description: The entitlements that you want to grant on a flow.
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Percentage from 0-100 of the data transfer cost to be billed
              to the subscriber.
            xml:
              name: dataTransferSubscriberFeePercent
          title: DataTransferSubscriberFeePercent
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the entitlement. This description appears
              only on the AWS Elemental MediaConnect console and will not be seen
              by the subscriber or end user.
            xml:
              name: description
          title: Description
        Encryption:
          $ref: '#/components/schemas/GrantEntitlementRequest_Encryption'
        EntitlementStatus:
          allOf:
          - $ref: '#/components/schemas/EntitlementStatus'
          - description: "An indication of whether the new entitlement should be enabled\
              \ or disabled as soon as it is created. If you don’t specify the entitlementStatus\
              \ field in your request, MediaConnect sets it to ENABLED."
            xml:
              name: entitlementStatus
          title: EntitlementStatus
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the entitlement. This value must be unique within
              the current flow.
            xml:
              name: name
          title: Name
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The AWS account IDs that you want to share your content with.
              The receiving accounts (subscribers) will be allowed to create their
              own flows using your content as the source.
            xml:
              name: subscribers
          title: Subscribers
      required:
      - Subscribers
      title: GrantEntitlementRequest
      type: object
    Encryption:
      description: Information about the encryption of the flow.
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          - description: "The type of algorithm that is used for the encryption (such\
              \ as aes128, aes192, or aes256)."
            xml:
              name: algorithm
          title: Algorithm
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A 128-bit, 16-byte hex value represented by a 32-character\
              \ string, to be used with the key for encrypting content. This parameter\
              \ is not valid for static key encryption."
            xml:
              name: constantInitializationVector
          title: ConstantInitializationVector
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The value of one of the devices that you configured with
              your digital rights management (DRM) platform key provider. This parameter
              is required for SPEKE encryption and is not valid for static key encryption.
            xml:
              name: deviceId
          title: DeviceId
        KeyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: "The type of key that is used for the encryption. If no keyType\
              \ is provided, the service will use the default setting (static-key)."
            xml:
              name: keyType
          title: KeyType
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Region that the API Gateway proxy endpoint was created
              in. This parameter is required for SPEKE encryption and is not valid
              for static key encryption.
            xml:
              name: region
          title: Region
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An identifier for the content. The service sends this value
              to the key server to identify the current endpoint. The resource ID
              is also known as the content ID. This parameter is required for SPEKE
              encryption and is not valid for static key encryption.
            xml:
              name: resourceId
          title: ResourceId
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the role that you created during setup (when you
              set up AWS Elemental MediaConnect as a trusted entity).
            xml:
              name: roleArn
          title: RoleArn
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the secret that you created in AWS Secrets Manager
              to store the encryption key. This parameter is required for static key
              encryption and is not valid for SPEKE encryption.
            xml:
              name: secretArn
          title: SecretArn
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL from the API Gateway proxy that you set up to talk
              to your key server. This parameter is required for SPEKE encryption
              and is not valid for static key encryption.
            xml:
              name: url
          title: Url
      required:
      - RoleArn
      title: Encryption
      type: object
    __string:
      title: __string
      type: string
    __listOfMediaStreamSourceConfigurationRequest:
      items:
        $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'
      type: array
    Protocol:
      enum:
      - zixi-push
      - rtp-fec
      - rtp
      - zixi-pull
      - rist
      - st2110-jpegxs
      - cdi
      - srt-listener
      - srt-caller
      - fujitsu-qos
      - udp
      title: Protocol
      type: string
    SetGatewayBridgeSourceRequest:
      description: The source configuration for cloud flows receiving a stream from
        a bridge.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge feeding this flow.
            pattern: ^arn:.+:mediaconnect.+:bridge:.+$
            xml:
              name: bridgeArn
          title: BridgeArn
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment'
      required:
      - BridgeArn
      title: SetGatewayBridgeSourceRequest
      type: object
    MaintenanceDay:
      enum:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
      title: MaintenanceDay
      type: string
    CreateFlow420Exception: {}
    CreateGatewayResponse:
      example:
        Gateway:
          GatewayArn: ""
          Networks: ""
          GatewayMessages: ""
          GatewayState: ""
          EgressCidrBlocks: ""
          Name: ""
      properties:
        Gateway:
          $ref: '#/components/schemas/CreateGatewayResponse_Gateway'
      title: CreateGatewayResponse
      type: object
    GatewayNetwork:
      description: The network settings for a gateway.
      properties:
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A unique IP address range to use for this network. These\
              \ IP addresses should be in the form of a Classless Inter-Domain Routing\
              \ (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: cidrBlock
          title: CidrBlock
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the network. This name is used to reference the
              network and must be unique among networks in this gateway.
            xml:
              name: name
          title: Name
      required:
      - CidrBlock
      - Name
      title: GatewayNetwork
      type: object
    CreateGateway420Exception: {}
    DeleteBridgeResponse:
      example:
        BridgeArn: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the deleted bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
      title: DeleteBridgeResponse
      type: object
    DeleteFlowResponse:
      example:
        Status: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that was deleted.
            xml:
              name: flowArn
          title: FlowArn
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the flow when the DeleteFlow process begins.
            xml:
              name: status
          title: Status
      title: DeleteFlowResponse
      type: object
    DeleteGatewayResponse:
      example:
        GatewayArn: ""
      properties:
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the gateway that was deleted.
            xml:
              name: gatewayArn
          title: GatewayArn
      title: DeleteGatewayResponse
      type: object
    DeregisterGatewayInstanceResponse:
      example:
        InstanceState: ""
        GatewayInstanceArn: ""
      properties:
        GatewayInstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the instance.
            xml:
              name: gatewayInstanceArn
          title: GatewayInstanceArn
        InstanceState:
          allOf:
          - $ref: '#/components/schemas/InstanceState'
          - description: The status of the instance.
            xml:
              name: instanceState
          title: InstanceState
      title: DeregisterGatewayInstanceResponse
      type: object
    DescribeBridgeResponse:
      example:
        Bridge:
          BridgeMessages: ""
          BridgeArn: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          EgressGatewayBridge:
            InstanceId: ""
            MaxBitrate: ""
          IngressGatewayBridge:
            MaxOutputs: ""
            InstanceId: ""
            MaxBitrate: ""
          Outputs: ""
          BridgeState: ""
          PlacementArn: ""
          Sources: ""
          Name: ""
      properties:
        Bridge:
          $ref: '#/components/schemas/CreateBridgeResponse_Bridge'
      title: DescribeBridgeResponse
      type: object
    DescribeFlowResponse:
      example:
        Messages:
          Errors: ""
        Flow:
          Status: ""
          Description: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          MediaStreams: ""
          AvailabilityZone: ""
          Maintenance:
            MaintenanceDay: ""
            MaintenanceScheduledDate: ""
            MaintenanceDeadline: ""
            MaintenanceStartHour: ""
          Sources: ""
          Source:
            IngestIp: ""
            DataTransferSubscriberFeePercent: ""
            Description: ""
            SenderIpAddress: ""
            MediaStreamSourceConfigurations: ""
            IngestPort: ""
            SenderControlPort: ""
            Decryption:
              SecretArn: ""
              KeyType: ""
              ResourceId: ""
              DeviceId: ""
              Region: ""
              ConstantInitializationVector: ""
              Algorithm: ""
              RoleArn: ""
              Url: ""
            GatewayBridgeSource:
              BridgeArn: ""
              VpcInterfaceAttachment:
                VpcInterfaceName: ""
            Name: ""
            WhitelistCidr: ""
            EntitlementArn: ""
            SourceArn: ""
            VpcInterfaceName: ""
            Transport:
              MaxSyncBuffer: ""
              SmoothingLatency: ""
              StreamId: ""
              SenderIpAddress: ""
              RemoteId: ""
              SenderControlPort: ""
              SourceListenerAddress: ""
              SourceListenerPort: ""
              MinLatency: ""
              MaxBitrate: ""
              Protocol: ""
              MaxLatency: ""
              CidrAllowList: ""
          Name: ""
          VpcInterfaces: ""
          Entitlements: ""
          Outputs: ""
          EgressIp: ""
          FlowArn: ""
      properties:
        Flow:
          $ref: '#/components/schemas/CreateFlowResponse_Flow'
        Messages:
          $ref: '#/components/schemas/DescribeFlowResponse_Messages'
      title: DescribeFlowResponse
      type: object
    DescribeGatewayResponse:
      example:
        Gateway:
          GatewayArn: ""
          Networks: ""
          GatewayMessages: ""
          GatewayState: ""
          EgressCidrBlocks: ""
          Name: ""
      properties:
        Gateway:
          $ref: '#/components/schemas/CreateGatewayResponse_Gateway'
      title: DescribeGatewayResponse
      type: object
    DescribeGatewayInstanceResponse:
      example:
        GatewayInstance:
          GatewayArn: ""
          InstanceState: ""
          GatewayInstanceArn: ""
          InstanceId: ""
          RunningBridgeCount: ""
          BridgePlacement: ""
          InstanceMessages: ""
          ConnectionStatus: ""
      properties:
        GatewayInstance:
          $ref: '#/components/schemas/DescribeGatewayInstanceResponse_GatewayInstance'
      title: DescribeGatewayInstanceResponse
      type: object
    DescribeOfferingResponse:
      example:
        Offering:
          CurrencyCode: ""
          OfferingArn: ""
          OfferingDescription: ""
          Duration: ""
          DurationUnits: ""
          PricePerUnit: ""
          ResourceSpecification:
            ReservedBitrate: ""
            ResourceType: ""
          PriceUnits: ""
      properties:
        Offering:
          $ref: '#/components/schemas/DescribeOfferingResponse_Offering'
      title: DescribeOfferingResponse
      type: object
    DescribeReservationResponse:
      example:
        Reservation:
          ReservationState: ""
          Start: ""
          Duration: ""
          DurationUnits: ""
          ResourceSpecification:
            ReservedBitrate: ""
            ResourceType: ""
          PriceUnits: ""
          CurrencyCode: ""
          OfferingArn: ""
          ReservationArn: ""
          OfferingDescription: ""
          ReservationName: ""
          End: ""
          PricePerUnit: ""
      properties:
        Reservation:
          $ref: '#/components/schemas/DescribeReservationResponse_Reservation'
      title: DescribeReservationResponse
      type: object
    GrantFlowEntitlementsResponse:
      example:
        Entitlements: ""
        FlowArn: ""
      properties:
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/__listOfEntitlement'
          - description: The entitlements that were just granted.
            xml:
              name: entitlements
          title: Entitlements
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that these entitlements were granted
              to.
            xml:
              name: flowArn
          title: FlowArn
      title: GrantFlowEntitlementsResponse
      type: object
    GrantFlowEntitlements420Exception: {}
    ListBridgesResponse:
      example:
        Bridges: ""
        NextToken: ""
      properties:
        Bridges:
          allOf:
          - $ref: '#/components/schemas/__listOfListedBridge'
          - description: A list of bridge summaries.
            xml:
              name: bridges
          title: Bridges
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListBridges request with MaxResults\
              \ set at 5. The service returns the first batch of results (up to 5)\
              \ and a NextToken value. To see the next batch of results, you can submit\
              \ the ListBridges request a second time and specify the NextToken value."
            xml:
              name: nextToken
          title: NextToken
      title: ListBridgesResponse
      type: object
    ListEntitlementsResponse:
      example:
        NextToken: ""
        Entitlements: ""
      properties:
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/__listOfListedEntitlement'
          - description: A list of entitlements that have been granted to you from
              other AWS accounts.
            xml:
              name: entitlements
          title: Entitlements
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListEntitlements request with\
              \ MaxResults set at 5. The service returns the first batch of results\
              \ (up to 5) and a NextToken value. To see the next batch of results,\
              \ you can submit the ListEntitlements request a second time and specify\
              \ the NextToken value."
            xml:
              name: nextToken
          title: NextToken
      title: ListEntitlementsResponse
      type: object
    ListFlowsResponse:
      example:
        NextToken: ""
        Flows: ""
      properties:
        Flows:
          allOf:
          - $ref: '#/components/schemas/__listOfListedFlow'
          - description: A list of flow summaries.
            xml:
              name: flows
          title: Flows
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListFlows request with MaxResults\
              \ set at 5. The service returns the first batch of results (up to 5)\
              \ and a NextToken value. To see the next batch of results, you can submit\
              \ the ListFlows request a second time and specify the NextToken value."
            xml:
              name: nextToken
          title: NextToken
      title: ListFlowsResponse
      type: object
    ListGatewayInstancesResponse:
      example:
        Instances: ""
        NextToken: ""
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/__listOfListedGatewayInstance'
          - description: A list of instance summaries.
            xml:
              name: instances
          title: Instances
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListInstances request with\
              \ MaxResults set at 5. The service returns the first batch of results\
              \ (up to 5) and a NextToken value. To see the next batch of results,\
              \ you can submit the ListInstances request a second time and specify\
              \ the NextToken value."
            xml:
              name: nextToken
          title: NextToken
      title: ListGatewayInstancesResponse
      type: object
    ListGatewaysResponse:
      example:
        NextToken: ""
        Gateways: ""
      properties:
        Gateways:
          allOf:
          - $ref: '#/components/schemas/__listOfListedGateway'
          - description: A list of gateway summaries.
            xml:
              name: gateways
          title: Gateways
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListGateways request with MaxResults\
              \ set at 5. The service returns the first batch of results (up to 5)\
              \ and a NextToken value. To see the next batch of results, you can submit\
              \ the ListGateways request a second time and specify the NextToken value."
            xml:
              name: nextToken
          title: NextToken
      title: ListGatewaysResponse
      type: object
    ListOfferingsResponse:
      example:
        NextToken: ""
        Offerings: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListOfferings request with\
              \ MaxResults set at 5. The service returns the first batch of results\
              \ (up to 5) and a NextToken value. To see the next batch of results,\
              \ you can submit the ListOfferings request a second time and specify\
              \ the NextToken value."
            xml:
              name: nextToken
          title: NextToken
        Offerings:
          allOf:
          - $ref: '#/components/schemas/__listOfOffering'
          - description: A list of offerings that are available to this account in
              the current AWS Region.
            xml:
              name: offerings
          title: Offerings
      title: ListOfferingsResponse
      type: object
    ListReservationsResponse:
      example:
        NextToken: ""
        Reservations: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that identifies which batch of results that you\
              \ want to see. For example, you submit a ListReservations request with\
              \ MaxResults set at 5. The service returns the first batch of results\
              \ (up to 5) and a NextToken value. To see the next batch of results,\
              \ you can submit the ListReservations request a second time and specify\
              \ the NextToken value."
            xml:
              name: nextToken
          title: NextToken
        Reservations:
          allOf:
          - $ref: '#/components/schemas/__listOfReservation'
          - description: A list of all reservations that have been purchased by this
              account in the current AWS Region.
            xml:
              name: reservations
          title: Reservations
      title: ListReservationsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "A map from tag keys to values. Tag keys can have a maximum\
              \ character length of 128 characters, and tag values can have a maximum\
              \ length of 256 characters."
            xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PurchaseOfferingResponse:
      example:
        Reservation:
          ReservationState: ""
          Start: ""
          Duration: ""
          DurationUnits: ""
          ResourceSpecification:
            ReservedBitrate: ""
            ResourceType: ""
          PriceUnits: ""
          CurrencyCode: ""
          OfferingArn: ""
          ReservationArn: ""
          OfferingDescription: ""
          ReservationName: ""
          End: ""
          PricePerUnit: ""
      properties:
        Reservation:
          $ref: '#/components/schemas/DescribeReservationResponse_Reservation'
      title: PurchaseOfferingResponse
      type: object
    RemoveBridgeOutputResponse:
      example:
        BridgeArn: ""
        OutputName: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: bridgeArn
          title: BridgeArn
        OutputName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: outputName
          title: OutputName
      title: RemoveBridgeOutputResponse
      type: object
    RemoveBridgeSourceResponse:
      example:
        BridgeArn: ""
        SourceName: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: bridgeArn
          title: BridgeArn
        SourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - xml:
              name: sourceName
          title: SourceName
      title: RemoveBridgeSourceResponse
      type: object
    RemoveFlowMediaStreamResponse:
      example:
        MediaStreamName: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the flow.
            xml:
              name: flowArn
          title: FlowArn
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the media stream that was removed.
            xml:
              name: mediaStreamName
          title: MediaStreamName
      title: RemoveFlowMediaStreamResponse
      type: object
    RemoveFlowOutputResponse:
      example:
        OutputArn: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that is associated with the output you
              removed.
            xml:
              name: flowArn
          title: FlowArn
        OutputArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the output that was removed.
            xml:
              name: outputArn
          title: OutputArn
      title: RemoveFlowOutputResponse
      type: object
    RemoveFlowSourceResponse:
      example:
        SourceArn: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that is associated with the source you
              removed.
            xml:
              name: flowArn
          title: FlowArn
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the source that was removed.
            xml:
              name: sourceArn
          title: SourceArn
      title: RemoveFlowSourceResponse
      type: object
    RemoveFlowVpcInterfaceResponse:
      example:
        NonDeletedNetworkInterfaceIds: ""
        VpcInterfaceName: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that is associated with the VPC interface
              you removed.
            xml:
              name: flowArn
          title: FlowArn
        NonDeletedNetworkInterfaceIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: IDs of network interfaces associated with the removed VPC
              interface that Media Connect was unable to remove.
            xml:
              name: nonDeletedNetworkInterfaceIds
          title: NonDeletedNetworkInterfaceIds
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface that was removed.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
      title: RemoveFlowVpcInterfaceResponse
      type: object
    RevokeFlowEntitlementResponse:
      example:
        EntitlementArn: ""
        FlowArn: ""
      properties:
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the entitlement that was revoked.
            xml:
              name: entitlementArn
          title: EntitlementArn
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that the entitlement was revoked from.
            xml:
              name: flowArn
          title: FlowArn
      title: RevokeFlowEntitlementResponse
      type: object
    StartFlowResponse:
      example:
        Status: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that you started.
            xml:
              name: flowArn
          title: FlowArn
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the flow when the StartFlow process begins.
            xml:
              name: status
          title: Status
      title: StartFlowResponse
      type: object
    StopFlowResponse:
      example:
        Status: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that you stopped.
            xml:
              name: flowArn
          title: FlowArn
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the flow when the StopFlow process begins.
            xml:
              name: status
          title: Status
      title: StopFlowResponse
      type: object
    UpdateBridgeResponse:
      example:
        Bridge:
          BridgeMessages: ""
          BridgeArn: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          EgressGatewayBridge:
            InstanceId: ""
            MaxBitrate: ""
          IngressGatewayBridge:
            MaxOutputs: ""
            InstanceId: ""
            MaxBitrate: ""
          Outputs: ""
          BridgeState: ""
          PlacementArn: ""
          Sources: ""
          Name: ""
      properties:
        Bridge:
          $ref: '#/components/schemas/CreateBridgeResponse_Bridge'
      title: UpdateBridgeResponse
      type: object
    UpdateBridgeOutputResponse:
      example:
        BridgeArn: ""
        Output:
          NetworkOutput:
            NetworkName: ""
            Port: ""
            IpAddress: ""
            Protocol: ""
            Ttl: ""
            Name: ""
          FlowOutput:
            FlowSourceArn: ""
            FlowArn: ""
            Name: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        Output:
          $ref: '#/components/schemas/UpdateBridgeOutputResponse_Output'
      title: UpdateBridgeOutputResponse
      type: object
    UpdateBridgeSourceResponse:
      example:
        BridgeArn: ""
        Source:
          NetworkSource:
            NetworkName: ""
            MulticastIp: ""
            Port: ""
            Protocol: ""
            Name: ""
          FlowSource:
            FlowVpcInterfaceAttachment:
              VpcInterfaceName: ""
            OutputArn: ""
            FlowArn: ""
            Name: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        Source:
          $ref: '#/components/schemas/UpdateBridgeSourceResponse_Source'
      title: UpdateBridgeSourceResponse
      type: object
    VpcInterfaceAttachment:
      description: The settings for attaching a VPC interface to an resource.
      properties:
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface to use for this resource.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
      title: VpcInterfaceAttachment
      type: object
    UpdateBridgeStateResponse:
      example:
        BridgeArn: ""
        DesiredState: ""
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/DesiredState'
          - description: The state of the bridge. ACTIVE or STANDBY.
            xml:
              name: desiredState
          title: DesiredState
      title: UpdateBridgeStateResponse
      type: object
    UpdateFlowResponse:
      example:
        Flow:
          Status: ""
          Description: ""
          SourceFailoverConfig:
            SourcePriority:
              PrimarySource: ""
            State: ""
            FailoverMode: ""
            RecoveryWindow: ""
          MediaStreams: ""
          AvailabilityZone: ""
          Maintenance:
            MaintenanceDay: ""
            MaintenanceScheduledDate: ""
            MaintenanceDeadline: ""
            MaintenanceStartHour: ""
          Sources: ""
          Source:
            IngestIp: ""
            DataTransferSubscriberFeePercent: ""
            Description: ""
            SenderIpAddress: ""
            MediaStreamSourceConfigurations: ""
            IngestPort: ""
            SenderControlPort: ""
            Decryption:
              SecretArn: ""
              KeyType: ""
              ResourceId: ""
              DeviceId: ""
              Region: ""
              ConstantInitializationVector: ""
              Algorithm: ""
              RoleArn: ""
              Url: ""
            GatewayBridgeSource:
              BridgeArn: ""
              VpcInterfaceAttachment:
                VpcInterfaceName: ""
            Name: ""
            WhitelistCidr: ""
            EntitlementArn: ""
            SourceArn: ""
            VpcInterfaceName: ""
            Transport:
              MaxSyncBuffer: ""
              SmoothingLatency: ""
              StreamId: ""
              SenderIpAddress: ""
              RemoteId: ""
              SenderControlPort: ""
              SourceListenerAddress: ""
              SourceListenerPort: ""
              MinLatency: ""
              MaxBitrate: ""
              Protocol: ""
              MaxLatency: ""
              CidrAllowList: ""
          Name: ""
          VpcInterfaces: ""
          Entitlements: ""
          Outputs: ""
          EgressIp: ""
          FlowArn: ""
      properties:
        Flow:
          $ref: '#/components/schemas/CreateFlowResponse_Flow'
      title: UpdateFlowResponse
      type: object
    UpdateFlowEntitlementResponse:
      example:
        Entitlement:
          EntitlementArn: ""
          DataTransferSubscriberFeePercent: ""
          Description: ""
          Encryption:
            SecretArn: ""
            KeyType: ""
            ResourceId: ""
            DeviceId: ""
            Region: ""
            ConstantInitializationVector: ""
            Algorithm: ""
            RoleArn: ""
            Url: ""
          Subscribers: ""
          EntitlementStatus: ""
          Name: ""
        FlowArn: ""
      properties:
        Entitlement:
          $ref: '#/components/schemas/UpdateFlowEntitlementResponse_Entitlement'
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that this entitlement was granted on.
            xml:
              name: flowArn
          title: FlowArn
      title: UpdateFlowEntitlementResponse
      type: object
    Algorithm:
      enum:
      - aes128
      - aes192
      - aes256
      title: Algorithm
      type: string
    KeyType:
      enum:
      - speke
      - static-key
      - srt-password
      title: KeyType
      type: string
    UpdateFlowMediaStreamResponse:
      example:
        MediaStream:
          MediaStreamType: ""
          Description: ""
          MediaStreamId: ""
          MediaStreamName: ""
          Attributes:
            Fmtp:
              Par: ""
              ScanMode: ""
              Tcs: ""
              ExactFramerate: ""
              ChannelOrder: ""
              Colorimetry: ""
              Range: ""
            Lang: ""
          ClockRate: ""
          Fmt: ""
          VideoFormat: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that is associated with the media stream
              that you updated.
            xml:
              name: flowArn
          title: FlowArn
        MediaStream:
          $ref: '#/components/schemas/UpdateFlowMediaStreamResponse_MediaStream'
      title: UpdateFlowMediaStreamResponse
      type: object
    FmtpRequest:
      description: The settings that you want to use to define the media stream.
      properties:
        ChannelOrder:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The format of the audio channel.
            xml:
              name: channelOrder
          title: ChannelOrder
        Colorimetry:
          allOf:
          - $ref: '#/components/schemas/Colorimetry'
          - description: The format that is used for the representation of color.
            xml:
              name: colorimetry
          title: Colorimetry
        ExactFramerate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The frame rate for the video stream, in frames/second. For\
              \ example: 60000/1001. If you specify a whole number, MediaConnect uses\
              \ a ratio of N/1. For example, if you specify 60, MediaConnect uses\
              \ 60/1 as the exactFramerate."
            xml:
              name: exactFramerate
          title: ExactFramerate
        Par:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The pixel aspect ratio (PAR) of the video.
            xml:
              name: par
          title: Par
        Range:
          allOf:
          - $ref: '#/components/schemas/Range'
          - description: The encoding range of the video.
            xml:
              name: range
          title: Range
        ScanMode:
          allOf:
          - $ref: '#/components/schemas/ScanMode'
          - description: The type of compression that was used to smooth the video’s
              appearance.
            xml:
              name: scanMode
          title: ScanMode
        Tcs:
          allOf:
          - $ref: '#/components/schemas/Tcs'
          - description: The transfer characteristic system (TCS) that is used in
              the video.
            xml:
              name: tcs
          title: Tcs
      title: FmtpRequest
      type: object
    UpdateFlowOutputResponse:
      example:
        Output:
          MediaLiveInputArn: ""
          Destination: ""
          BridgePorts: ""
          DataTransferSubscriberFeePercent: ""
          Description: ""
          OutputArn: ""
          BridgeArn: ""
          Port: ""
          MediaStreamOutputConfigurations: ""
          Encryption:
            SecretArn: ""
            KeyType: ""
            ResourceId: ""
            DeviceId: ""
            Region: ""
            ConstantInitializationVector: ""
            Algorithm: ""
            RoleArn: ""
            Url: ""
          Name: ""
          EntitlementArn: ""
          VpcInterfaceAttachment:
            VpcInterfaceName: ""
          ListenerAddress: ""
          Transport:
            MaxSyncBuffer: ""
            SmoothingLatency: ""
            StreamId: ""
            SenderIpAddress: ""
            RemoteId: ""
            SenderControlPort: ""
            SourceListenerAddress: ""
            SourceListenerPort: ""
            MinLatency: ""
            MaxBitrate: ""
            Protocol: ""
            MaxLatency: ""
            CidrAllowList: ""
        FlowArn: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that is associated with the updated output.
            xml:
              name: flowArn
          title: FlowArn
        Output:
          $ref: '#/components/schemas/UpdateFlowOutputResponse_Output'
      title: UpdateFlowOutputResponse
      type: object
    MediaStreamOutputConfigurationRequest:
      description: "The media stream that you want to associate with the output, and\
        \ the parameters for that association."
      properties:
        DestinationConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfDestinationConfigurationRequest'
          - description: The transport parameters that you want to associate with
              the media stream.
            xml:
              name: destinationConfigurations
          title: DestinationConfigurations
        EncodingName:
          allOf:
          - $ref: '#/components/schemas/EncodingName'
          - description: "The format that will be used to encode the data. For ancillary\
              \ data streams, set the encoding name to smpte291. For audio streams,\
              \ set the encoding name to pcm. For video, 2110 streams, set the encoding\
              \ name to raw. For video, JPEG XS streams, set the encoding name to\
              \ jxsv."
            xml:
              name: encodingName
          title: EncodingName
        EncodingParameters:
          $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest_EncodingParameters'
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the media stream that is associated with the
              output.
            xml:
              name: mediaStreamName
          title: MediaStreamName
      required:
      - EncodingName
      - MediaStreamName
      title: MediaStreamOutputConfigurationRequest
      type: object
    UpdateFlowSourceResponse:
      example:
        FlowArn: ""
        Source:
          IngestIp: ""
          DataTransferSubscriberFeePercent: ""
          Description: ""
          SenderIpAddress: ""
          MediaStreamSourceConfigurations: ""
          IngestPort: ""
          SenderControlPort: ""
          Decryption:
            SecretArn: ""
            KeyType: ""
            ResourceId: ""
            DeviceId: ""
            Region: ""
            ConstantInitializationVector: ""
            Algorithm: ""
            RoleArn: ""
            Url: ""
          GatewayBridgeSource:
            BridgeArn: ""
            VpcInterfaceAttachment:
              VpcInterfaceName: ""
          Name: ""
          WhitelistCidr: ""
          EntitlementArn: ""
          SourceArn: ""
          VpcInterfaceName: ""
          Transport:
            MaxSyncBuffer: ""
            SmoothingLatency: ""
            StreamId: ""
            SenderIpAddress: ""
            RemoteId: ""
            SenderControlPort: ""
            SourceListenerAddress: ""
            SourceListenerPort: ""
            MinLatency: ""
            MaxBitrate: ""
            Protocol: ""
            MaxLatency: ""
            CidrAllowList: ""
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow that you want to update.
            xml:
              name: flowArn
          title: FlowArn
        Source:
          $ref: '#/components/schemas/UpdateFlowSourceResponse_Source'
      title: UpdateFlowSourceResponse
      type: object
    MediaStreamSourceConfigurationRequest:
      description: The definition of a media stream that you want to associate with
        the source.
      properties:
        EncodingName:
          allOf:
          - $ref: '#/components/schemas/EncodingName'
          - description: "The format you want to use to encode the data. For ancillary\
              \ data streams, set the encoding name to smpte291. For audio streams,\
              \ set the encoding name to pcm. For video, 2110 streams, set the encoding\
              \ name to raw. For video, JPEG XS streams, set the encoding name to\
              \ jxsv."
            xml:
              name: encodingName
          title: EncodingName
        InputConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputConfigurationRequest'
          - description: The transport parameters that you want to associate with
              the media stream.
            xml:
              name: inputConfigurations
          title: InputConfigurations
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the media stream.
            xml:
              name: mediaStreamName
          title: MediaStreamName
      required:
      - EncodingName
      - MediaStreamName
      title: MediaStreamSourceConfigurationRequest
      type: object
    UpdateGatewayInstanceResponse:
      example:
        GatewayInstanceArn: ""
        BridgePlacement: ""
      properties:
        BridgePlacement:
          allOf:
          - $ref: '#/components/schemas/BridgePlacement'
          - description: "The availability of the instance to host new bridges. The\
              \ bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED,\
              \ no new bridges can be deployed to this instance. If it is AVAILABLE,\
              \ new bridges can be added to this instance."
            xml:
              name: bridgePlacement
          title: BridgePlacement
        GatewayInstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the instance.
            xml:
              name: gatewayInstanceArn
          title: GatewayInstanceArn
      title: UpdateGatewayInstanceResponse
      type: object
    AddBridgeFlowSourceRequest:
      description: Add a flow source to an existing bridge.
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the cloud flow to use
              as a source of this bridge.
            pattern: ^arn:.+:mediaconnect.+:flow:.+$
            xml:
              name: flowArn
          title: FlowArn
        FlowVpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the flow source. This name is used to reference
              the source and must be unique among sources in this bridge.
            xml:
              name: name
          title: Name
      required:
      - FlowArn
      - Name
      title: AddBridgeFlowSourceRequest
      type: object
    AddBridgeNetworkOutputRequest:
      description: Add a network output to an existing bridge.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output IP Address.
            xml:
              name: ipAddress
          title: IpAddress
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output name. This name is used to reference the
              output and must be unique among outputs in this bridge.
            xml:
              name: name
          title: Name
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network output protocol.
            xml:
              name: protocol
          title: Protocol
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output TTL.
            xml:
              name: ttl
          title: Ttl
      required:
      - IpAddress
      - Name
      - NetworkName
      - Port
      - Protocol
      - Ttl
      title: AddBridgeNetworkOutputRequest
      type: object
    AddBridgeNetworkSourceRequest:
      description: Add a network source to an existing bridge.
      properties:
        MulticastIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source multicast IP.
            xml:
              name: multicastIp
          title: MulticastIp
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the network source. This name is used to reference
              the source and must be unique among sources in this bridge.
            xml:
              name: name
          title: Name
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network source port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network source protocol.
            xml:
              name: protocol
          title: Protocol
      required:
      - MulticastIp
      - Name
      - NetworkName
      - Port
      - Protocol
      title: AddBridgeNetworkSourceRequest
      type: object
    __listOfAddBridgeOutputRequest:
      items:
        $ref: '#/components/schemas/AddBridgeOutputRequest'
      type: array
    AddBridgeOutputsRequest:
      description: A request to add outputs to the specified bridge.
      example:
        Outputs: ""
      properties:
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfAddBridgeOutputRequest'
          - description: The outputs that you want to add to this bridge.
            xml:
              name: outputs
      required:
      - Outputs
      title: AddBridgeOutputsRequest
      type: object
    __listOfBridgeOutput:
      items:
        $ref: '#/components/schemas/BridgeOutput'
      type: array
    __listOfAddBridgeSourceRequest:
      items:
        $ref: '#/components/schemas/AddBridgeSourceRequest'
      type: array
    AddBridgeSourcesRequest:
      description: A request to add sources to the specified bridge.
      example:
        Sources: ""
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfAddBridgeSourceRequest'
          - description: The sources that you want to add to this bridge.
            xml:
              name: sources
      required:
      - Sources
      title: AddBridgeSourcesRequest
      type: object
    __listOfBridgeSource:
      items:
        $ref: '#/components/schemas/BridgeSource'
      type: array
    AddEgressGatewayBridgeRequest:
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
      required:
      - MaxBitrate
      title: AddEgressGatewayBridgeRequest
      type: object
    __listOfAddMediaStreamRequest:
      items:
        $ref: '#/components/schemas/AddMediaStreamRequest'
      type: array
    AddFlowMediaStreamsRequest:
      description: A request to add media streams to the flow.
      example:
        MediaStreams: ""
      properties:
        MediaStreams:
          allOf:
          - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'
          - description: The media streams that you want to add to the flow.
            xml:
              name: mediaStreams
      required:
      - MediaStreams
      title: AddFlowMediaStreamsRequest
      type: object
    __listOfMediaStream:
      items:
        $ref: '#/components/schemas/MediaStream'
      type: array
    __listOfAddOutputRequest:
      items:
        $ref: '#/components/schemas/AddOutputRequest'
      type: array
    AddFlowOutputsRequest:
      description: A request to add outputs to the specified flow.
      example:
        Outputs: ""
      properties:
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfAddOutputRequest'
          - description: A list of outputs that you want to add.
            xml:
              name: outputs
      required:
      - Outputs
      title: AddFlowOutputsRequest
      type: object
    __listOfOutput:
      items:
        $ref: '#/components/schemas/Output'
      type: array
    __listOfSetSourceRequest:
      items:
        $ref: '#/components/schemas/SetSourceRequest'
      type: array
    AddFlowSourcesRequest:
      description: A request to add sources to the flow.
      example:
        Sources: ""
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfSetSourceRequest'
          - description: A list of sources that you want to add.
            xml:
              name: sources
      required:
      - Sources
      title: AddFlowSourcesRequest
      type: object
    __listOfSource:
      items:
        $ref: '#/components/schemas/Source'
      type: array
    __listOfVpcInterfaceRequest:
      items:
        $ref: '#/components/schemas/VpcInterfaceRequest'
      type: array
    AddFlowVpcInterfacesRequest:
      description: A request to add VPC interfaces to the flow.
      example:
        VpcInterfaces: ""
      properties:
        VpcInterfaces:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
          - description: A list of VPC interfaces that you want to add.
            xml:
              name: vpcInterfaces
      required:
      - VpcInterfaces
      title: AddFlowVpcInterfacesRequest
      type: object
    __listOfVpcInterface:
      items:
        $ref: '#/components/schemas/VpcInterface'
      type: array
    AddIngressGatewayBridgeRequest:
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxOutputs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of expected outputs.
            xml:
              name: maxOutputs
          title: MaxOutputs
      required:
      - MaxBitrate
      - MaxOutputs
      title: AddIngressGatewayBridgeRequest
      type: object
    AddMaintenance:
      description: Create maintenance setting for a flow
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          - description: A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
            xml:
              name: maintenanceDay
          title: MaintenanceDay
        MaintenanceStartHour:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "UTC time when the maintenance will happen. Use 24-hour HH:MM\
              \ format. Minutes must be 00. Example: 13:00. The default value is 02:00."
            xml:
              name: maintenanceStartHour
          title: MaintenanceStartHour
      required:
      - MaintenanceDay
      - MaintenanceStartHour
      title: AddMaintenance
      type: object
    MediaStreamAttributesRequest:
      description: Attributes that are related to the media stream.
      properties:
        Fmtp:
          $ref: '#/components/schemas/UpdateFlowMediaStream_request_attributes_Fmtp'
        Lang:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The audio language, in a format that is recognized by the\
              \ receiver."
            xml:
              name: lang
          title: Lang
      title: MediaStreamAttributesRequest
      type: object
    MediaStreamType:
      enum:
      - video
      - audio
      - ancillary-data
      title: MediaStreamType
      type: string
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    __listOfMediaStreamOutputConfigurationRequest:
      items:
        $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'
      type: array
    __listOfMessageDetail:
      items:
        $ref: '#/components/schemas/MessageDetail'
      type: array
    BridgeState:
      enum:
      - CREATING
      - STANDBY
      - STARTING
      - DEPLOYING
      - ACTIVE
      - STOPPING
      - DELETING
      - DELETED
      - START_FAILED
      - START_PENDING
      - STOP_FAILED
      - UPDATING
      title: BridgeState
      type: string
    EgressGatewayBridge:
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the instance running this bridge.
            xml:
              name: instanceId
          title: InstanceId
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps) of the egress bridge.
            xml:
              name: maxBitrate
          title: MaxBitrate
      required:
      - MaxBitrate
      title: EgressGatewayBridge
      type: object
    IngressGatewayBridge:
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the instance running this bridge.
            xml:
              name: instanceId
          title: InstanceId
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps) of the ingress bridge.
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxOutputs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of outputs on the ingress bridge.
            xml:
              name: maxOutputs
          title: MaxOutputs
      required:
      - MaxBitrate
      - MaxOutputs
      title: IngressGatewayBridge
      type: object
    FailoverConfig:
      description: The settings for source failover.
      properties:
        FailoverMode:
          allOf:
          - $ref: '#/components/schemas/FailoverMode'
          - description: "The type of failover you choose for this flow. MERGE combines\
              \ the source streams into a single stream, allowing graceful recovery\
              \ from any single-source loss. FAILOVER allows switching between different\
              \ streams."
            xml:
              name: failoverMode
          title: FailoverMode
        RecoveryWindow:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Search window time to look for dash-7 packets
            xml:
              name: recoveryWindow
          title: RecoveryWindow
        SourcePriority:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig_SourcePriority'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - xml:
              name: state
          title: State
      title: FailoverConfig
      type: object
    Bridge:
      description: A Bridge is the connection between your datacenter's Instances
        and the AWS cloud. A bridge can be used to send video from the AWS cloud to
        your datacenter or from your datacenter to the AWS cloud.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        BridgeMessages:
          allOf:
          - $ref: '#/components/schemas/__listOfMessageDetail'
          - xml:
              name: bridgeMessages
          title: BridgeMessages
        BridgeState:
          allOf:
          - $ref: '#/components/schemas/BridgeState'
          - xml:
              name: bridgeState
          title: BridgeState
        EgressGatewayBridge:
          $ref: '#/components/schemas/Bridge_EgressGatewayBridge'
        IngressGatewayBridge:
          $ref: '#/components/schemas/Bridge_IngressGatewayBridge'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the bridge.
            xml:
              name: name
          title: Name
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfBridgeOutput'
          - description: The outputs on this bridge.
            xml:
              name: outputs
          title: Outputs
        PlacementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The placement Amazon Resource Number (ARN) of the bridge.
            xml:
              name: placementArn
          title: PlacementArn
        SourceFailoverConfig:
          $ref: '#/components/schemas/Bridge_SourceFailoverConfig'
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfBridgeSource'
          - description: The sources on this bridge.
            xml:
              name: sources
          title: Sources
      required:
      - BridgeArn
      - BridgeState
      - Name
      - PlacementArn
      title: Bridge
      type: object
    BridgeFlowOutput:
      description: The output of the bridge. A flow output is delivered to the AWS
        cloud.
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the cloud flow.
            xml:
              name: flowArn
          title: FlowArn
        FlowSourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the flow source.
            xml:
              name: flowSourceArn
          title: FlowSourceArn
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the bridge's output.
            xml:
              name: name
          title: Name
      required:
      - FlowArn
      - FlowSourceArn
      - Name
      title: BridgeFlowOutput
      type: object
    BridgeFlowSource:
      description: The source of the bridge. A flow source originates in MediaConnect
        as an existing cloud flow.
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the cloud flow used as a source of this bridge.
            xml:
              name: flowArn
          title: FlowArn
        FlowVpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the flow source.
            xml:
              name: name
          title: Name
        OutputArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Number (ARN) of the output.
            xml:
              name: outputArn
          title: OutputArn
      required:
      - FlowArn
      - Name
      title: BridgeFlowSource
      type: object
    BridgeNetworkOutput:
      description: The output of the bridge. A network output is delivered to your
        premises.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output IP Address.
            xml:
              name: ipAddress
          title: IpAddress
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output name.
            xml:
              name: name
          title: Name
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network output protocol.
            xml:
              name: protocol
          title: Protocol
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output TTL.
            xml:
              name: ttl
          title: Ttl
      required:
      - IpAddress
      - Name
      - NetworkName
      - Port
      - Protocol
      - Ttl
      title: BridgeNetworkOutput
      type: object
    BridgeNetworkSource:
      description: The source of the bridge. A network source originates at your premises.
      properties:
        MulticastIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source multicast IP.
            xml:
              name: multicastIp
          title: MulticastIp
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the network source.
            xml:
              name: name
          title: Name
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network source port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network source protocol.
            xml:
              name: protocol
          title: Protocol
      required:
      - MulticastIp
      - Name
      - NetworkName
      - Port
      - Protocol
      title: BridgeNetworkSource
      type: object
    BridgeOutput:
      description: The output of the bridge.
      properties:
        FlowOutput:
          $ref: '#/components/schemas/BridgeOutput_FlowOutput'
        NetworkOutput:
          $ref: '#/components/schemas/BridgeOutput_NetworkOutput'
      title: BridgeOutput
      type: object
    BridgePlacement:
      enum:
      - AVAILABLE
      - LOCKED
      title: BridgePlacement
      type: string
    BridgeSource:
      description: The bridge's source.
      properties:
        FlowSource:
          $ref: '#/components/schemas/BridgeSource_FlowSource'
        NetworkSource:
          $ref: '#/components/schemas/BridgeSource_NetworkSource'
      title: BridgeSource
      type: object
    Colorimetry:
      enum:
      - BT601
      - BT709
      - BT2020
      - BT2100
      - ST2065-1
      - ST2065-3
      - XYZ
      title: Colorimetry
      type: string
    ConnectionStatus:
      enum:
      - CONNECTED
      - DISCONNECTED
      title: ConnectionStatus
      type: string
    CreateBridgeRequest:
      description: Creates a new bridge. The request must include one source.
      example:
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        EgressGatewayBridge:
          MaxBitrate: ""
        IngressGatewayBridge:
          MaxOutputs: ""
          MaxBitrate: ""
        Outputs: ""
        PlacementArn: ""
        Sources: ""
        Name: ""
      properties:
        EgressGatewayBridge:
          $ref: '#/components/schemas/CreateBridgeRequest_EgressGatewayBridge'
        IngressGatewayBridge:
          $ref: '#/components/schemas/CreateBridgeRequest_IngressGatewayBridge'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the bridge. This name can not be modified after
              the bridge is created.
            xml:
              name: name
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfAddBridgeOutputRequest'
          - description: The outputs that you want to add to this bridge.
            xml:
              name: outputs
        PlacementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bridge placement Amazon Resource Number (ARN).
            xml:
              name: placementArn
        SourceFailoverConfig:
          $ref: '#/components/schemas/CreateBridgeRequest_SourceFailoverConfig'
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfAddBridgeSourceRequest'
          - description: The sources that you want to add to this bridge.
            xml:
              name: sources
      required:
      - Name
      - PlacementArn
      - Sources
      title: CreateBridgeRequest
      type: object
    __listOfGrantEntitlementRequest:
      items:
        $ref: '#/components/schemas/GrantEntitlementRequest'
      type: array
    CreateFlowRequest:
      description: Creates a new flow. The request must include one source. The request
        optionally can include outputs (up to 50) and entitlements (up to 50).
      example:
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        VpcInterfaces: ""
        MediaStreams: ""
        Entitlements: ""
        Outputs: ""
        AvailabilityZone: ""
        Maintenance:
          MaintenanceDay: ""
          MaintenanceStartHour: ""
        Sources: ""
        Source:
          MaxSyncBuffer: ""
          StreamId: ""
          Description: ""
          SenderIpAddress: ""
          MediaStreamSourceConfigurations: ""
          IngestPort: ""
          SenderControlPort: ""
          Decryption:
            SecretArn: ""
            KeyType: ""
            ResourceId: ""
            DeviceId: ""
            Region: ""
            ConstantInitializationVector: ""
            Algorithm: ""
            RoleArn: ""
            Url: ""
          GatewayBridgeSource:
            BridgeArn: ""
            VpcInterfaceAttachment:
              VpcInterfaceName: ""
          SourceListenerAddress: ""
          SourceListenerPort: ""
          Name: ""
          WhitelistCidr: ""
          EntitlementArn: ""
          MinLatency: ""
          VpcInterfaceName: ""
          MaxBitrate: ""
          Protocol: ""
          MaxLatency: ""
        Name: ""
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Availability Zone that you want to create the flow in.
              These options are limited to the Availability Zones within the current
              AWS Region.
            xml:
              name: availabilityZone
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
          - description: The entitlements that you want to grant on a flow.
            xml:
              name: entitlements
        MediaStreams:
          allOf:
          - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'
          - description: The media streams that you want to add to the flow. You can
              associate these media streams with sources and outputs on the flow.
            xml:
              name: mediaStreams
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the flow.
            xml:
              name: name
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfAddOutputRequest'
          - description: The outputs that you want to add to this flow.
            xml:
              name: outputs
        Source:
          $ref: '#/components/schemas/CreateFlowRequest_Source'
        SourceFailoverConfig:
          $ref: '#/components/schemas/Bridge_SourceFailoverConfig'
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfSetSourceRequest'
          - xml:
              name: sources
        VpcInterfaces:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
          - description: The VPC interfaces you want on the flow.
            xml:
              name: vpcInterfaces
        Maintenance:
          $ref: '#/components/schemas/CreateFlowRequest_Maintenance'
      required:
      - Name
      title: CreateFlowRequest
      type: object
    Flow:
      description: "The settings for a flow, including its source, outputs, and entitlements."
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Availability Zone that you want to create the flow in.
              These options are limited to the Availability Zones within the current
              AWS.
            xml:
              name: availabilityZone
          title: AvailabilityZone
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the flow. This value is not used or seen
              outside of the current AWS Elemental MediaConnect account.
            xml:
              name: description
          title: Description
        EgressIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address from which video will be sent to output destinations.
            xml:
              name: egressIp
          title: EgressIp
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/__listOfEntitlement'
          - description: The entitlements in this flow.
            xml:
              name: entitlements
          title: Entitlements
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the flow.
            xml:
              name: flowArn
          title: FlowArn
        MediaStreams:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStream'
          - description: "The media streams that are associated with the flow. After\
              \ you associate a media stream with a source, you can also associate\
              \ it with outputs on the flow."
            xml:
              name: mediaStreams
          title: MediaStreams
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the flow.
            xml:
              name: name
          title: Name
        Outputs:
          allOf:
          - $ref: '#/components/schemas/__listOfOutput'
          - description: The outputs in this flow.
            xml:
              name: outputs
          title: Outputs
        Source:
          $ref: '#/components/schemas/Flow_Source'
        SourceFailoverConfig:
          $ref: '#/components/schemas/Bridge_SourceFailoverConfig'
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfSource'
          - xml:
              name: sources
          title: Sources
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The current status of the flow.
            xml:
              name: status
          title: Status
        VpcInterfaces:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcInterface'
          - description: The VPC Interfaces for this flow.
            xml:
              name: vpcInterfaces
          title: VpcInterfaces
        Maintenance:
          $ref: '#/components/schemas/Flow_Maintenance'
      required:
      - AvailabilityZone
      - Entitlements
      - FlowArn
      - Name
      - Outputs
      - Source
      - Status
      title: Flow
      type: object
    __listOfGatewayNetwork:
      items:
        $ref: '#/components/schemas/GatewayNetwork'
      type: array
    CreateGatewayRequest:
      description: Creates a new gateway. The request must include at least one network
        (up to 4).
      example:
        Networks: ""
        EgressCidrBlocks: ""
        Name: ""
      properties:
        EgressCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "The range of IP addresses that are allowed to contribute\
              \ content or initiate output requests for flows communicating with this\
              \ gateway. These IP addresses should be in the form of a Classless Inter-Domain\
              \ Routing (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: egressCidrBlocks
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the gateway. This name can not be modified after
              the gateway is created.
            xml:
              name: name
        Networks:
          allOf:
          - $ref: '#/components/schemas/__listOfGatewayNetwork'
          - description: The list of networks that you want to add.
            xml:
              name: networks
      required:
      - EgressCidrBlocks
      - Name
      - Networks
      title: CreateGatewayRequest
      type: object
    Gateway:
      description: "The settings for a gateway, including its networks."
      properties:
        EgressCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "The range of IP addresses that contribute content or initiate\
              \ output requests for flows communicating with this gateway. These IP\
              \ addresses should be in the form of a Classless Inter-Domain Routing\
              \ (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: egressCidrBlocks
          title: EgressCidrBlocks
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the gateway.
            xml:
              name: gatewayArn
          title: GatewayArn
        GatewayMessages:
          allOf:
          - $ref: '#/components/schemas/__listOfMessageDetail'
          - xml:
              name: gatewayMessages
          title: GatewayMessages
        GatewayState:
          allOf:
          - $ref: '#/components/schemas/GatewayState'
          - description: The current status of the gateway.
            xml:
              name: gatewayState
          title: GatewayState
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the gateway. This name can not be modified after
              the gateway is created.
            xml:
              name: name
          title: Name
        Networks:
          allOf:
          - $ref: '#/components/schemas/__listOfGatewayNetwork'
          - description: The list of networks in the gateway.
            xml:
              name: networks
          title: Networks
      required:
      - EgressCidrBlocks
      - GatewayArn
      - Name
      - Networks
      title: Gateway
      type: object
    DeleteBridgeRequest:
      properties: {}
      title: DeleteBridgeRequest
      type: object
    DeleteFlowRequest:
      properties: {}
      title: DeleteFlowRequest
      type: object
    Status:
      enum:
      - STANDBY
      - ACTIVE
      - UPDATING
      - DELETING
      - STARTING
      - STOPPING
      - ERROR
      title: Status
      type: string
    DeleteGatewayRequest:
      properties: {}
      title: DeleteGatewayRequest
      type: object
    __boolean:
      type: boolean
    DeregisterGatewayInstanceRequest:
      properties: {}
      title: DeregisterGatewayInstanceRequest
      type: object
    InstanceState:
      enum:
      - REGISTERING
      - ACTIVE
      - DEREGISTERING
      - DEREGISTERED
      - REGISTRATION_ERROR
      - DEREGISTRATION_ERROR
      title: InstanceState
      type: string
    DescribeBridgeRequest:
      properties: {}
      title: DescribeBridgeRequest
      type: object
    DescribeFlowRequest:
      properties: {}
      title: DescribeFlowRequest
      type: object
    Messages:
      description: Messages that provide the state of the flow.
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of errors that might have been generated from processes
              on this flow.
            xml:
              name: errors
          title: Errors
      required:
      - Errors
      title: Messages
      type: object
    DescribeGatewayInstanceRequest:
      properties: {}
      title: DescribeGatewayInstanceRequest
      type: object
    GatewayInstance:
      description: The settings for an instance in a gateway.
      properties:
        BridgePlacement:
          allOf:
          - $ref: '#/components/schemas/BridgePlacement'
          - description: "The availability of the instance to host new bridges. The\
              \ bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED,\
              \ no new bridges can be deployed to this instance. If it is AVAILABLE,\
              \ new bridges can be added to this instance."
            xml:
              name: bridgePlacement
          title: BridgePlacement
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          - description: The connection state of the instance.
            xml:
              name: connectionStatus
          title: ConnectionStatus
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the instance.
            xml:
              name: gatewayArn
          title: GatewayArn
        GatewayInstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the gateway.
            xml:
              name: gatewayInstanceArn
          title: GatewayInstanceArn
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The managed instance ID generated by the SSM install. This
              will begin with "mi-".
            xml:
              name: instanceId
          title: InstanceId
        InstanceMessages:
          allOf:
          - $ref: '#/components/schemas/__listOfMessageDetail'
          - xml:
              name: instanceMessages
          title: InstanceMessages
        InstanceState:
          allOf:
          - $ref: '#/components/schemas/InstanceState'
          - description: The status of the instance.
            xml:
              name: instanceState
          title: InstanceState
        RunningBridgeCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The running bridge count.
            xml:
              name: runningBridgeCount
          title: RunningBridgeCount
      required:
      - BridgePlacement
      - ConnectionStatus
      - GatewayArn
      - GatewayInstanceArn
      - InstanceId
      - InstanceState
      - RunningBridgeCount
      title: GatewayInstance
      type: object
    DescribeGatewayRequest:
      properties: {}
      title: DescribeGatewayRequest
      type: object
    DescribeOfferingRequest:
      properties: {}
      title: DescribeOfferingRequest
      type: object
    Offering:
      description: A savings plan that reserves a certain amount of outbound bandwidth
        usage at a discounted rate each month over a period of time.
      properties:
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of currency that is used for billing. The currencyCode
              used for all reservations is US dollars.
            xml:
              name: currencyCode
          title: CurrencyCode
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The length of time that your reservation would be active.
            xml:
              name: duration
          title: Duration
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/DurationUnits'
          - description: The unit of measurement for the duration of the offering.
            xml:
              name: durationUnits
          title: DurationUnits
        OfferingArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) that MediaConnect assigns
              to the offering.
            xml:
              name: offeringArn
          title: OfferingArn
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the offering.
            xml:
              name: offeringDescription
          title: OfferingDescription
        PricePerUnit:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The cost of a single unit. This value, in combination with\
              \ priceUnits, makes up the rate."
            xml:
              name: pricePerUnit
          title: PricePerUnit
        PriceUnits:
          allOf:
          - $ref: '#/components/schemas/PriceUnits'
          - description: "The unit of measurement that is used for billing. This value,\
              \ in combination with pricePerUnit, makes up the rate."
            xml:
              name: priceUnits
          title: PriceUnits
        ResourceSpecification:
          $ref: '#/components/schemas/Offering_ResourceSpecification'
      required:
      - CurrencyCode
      - Duration
      - DurationUnits
      - OfferingArn
      - OfferingDescription
      - PricePerUnit
      - PriceUnits
      - ResourceSpecification
      title: Offering
      type: object
    DescribeReservationRequest:
      properties: {}
      title: DescribeReservationRequest
      type: object
    Reservation:
      description: "A pricing agreement for a discounted rate for a specific outbound\
        \ bandwidth that your MediaConnect account will use each month over a specific\
        \ time period. The discounted rate in the reservation applies to outbound\
        \ bandwidth for all flows from your account until your account reaches the\
        \ amount of bandwidth in your reservation. If you use more outbound bandwidth\
        \ than the agreed upon amount in a single month, the overage is charged at\
        \ the on-demand rate."
      properties:
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of currency that is used for billing. The currencyCode
              used for your reservation is US dollars.
            xml:
              name: currencyCode
          title: CurrencyCode
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The length of time that this reservation is active. MediaConnect
              defines this value in the offering.
            xml:
              name: duration
          title: Duration
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/DurationUnits'
          - description: The unit of measurement for the duration of the reservation.
              MediaConnect defines this value in the offering.
            xml:
              name: durationUnits
          title: DurationUnits
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The day and time that this reservation expires. This value
              is calculated based on the start date and time that you set and the
              offering's duration.
            xml:
              name: end
          title: End
        OfferingArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) that MediaConnect assigns
              to the offering.
            xml:
              name: offeringArn
          title: OfferingArn
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the offering. MediaConnect defines this
              value in the offering.
            xml:
              name: offeringDescription
          title: OfferingDescription
        PricePerUnit:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The cost of a single unit. This value, in combination with\
              \ priceUnits, makes up the rate. MediaConnect defines this value in\
              \ the offering."
            xml:
              name: pricePerUnit
          title: PricePerUnit
        PriceUnits:
          allOf:
          - $ref: '#/components/schemas/PriceUnits'
          - description: "The unit of measurement that is used for billing. This value,\
              \ in combination with pricePerUnit, makes up the rate. MediaConnect\
              \ defines this value in the offering."
            xml:
              name: priceUnits
          title: PriceUnits
        ReservationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) that MediaConnect assigns
              to the reservation when you purchase an offering.
            xml:
              name: reservationArn
          title: ReservationArn
        ReservationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that you assigned to the reservation when you purchased
              the offering.
            xml:
              name: reservationName
          title: ReservationName
        ReservationState:
          allOf:
          - $ref: '#/components/schemas/ReservationState'
          - description: The status of your reservation.
            xml:
              name: reservationState
          title: ReservationState
        ResourceSpecification:
          $ref: '#/components/schemas/Reservation_ResourceSpecification'
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The day and time that the reservation becomes active. You
              set this value when you purchase the offering.
            xml:
              name: start
          title: Start
      required:
      - CurrencyCode
      - Duration
      - DurationUnits
      - End
      - OfferingArn
      - OfferingDescription
      - PricePerUnit
      - PriceUnits
      - ReservationArn
      - ReservationName
      - ReservationState
      - ResourceSpecification
      - Start
      title: Reservation
      type: object
    DesiredState:
      enum:
      - ACTIVE
      - STANDBY
      - DELETED
      title: DesiredState
      type: string
    Interface:
      description: The VPC interface that is used for the media stream associated
        with the source or output.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface.
            xml:
              name: name
          title: Name
      required:
      - Name
      title: Interface
      type: object
    DestinationConfiguration:
      description: The transport parameters that are associated with an outbound media
        stream.
      properties:
        DestinationIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address where contents of the media stream will be
              sent.
            xml:
              name: destinationIp
          title: DestinationIp
        DestinationPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port to use when the content of the media stream is distributed
              to the output.
            xml:
              name: destinationPort
          title: DestinationPort
        Interface:
          $ref: '#/components/schemas/DestinationConfiguration_Interface'
        OutboundIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the receiver requires in order to establish
              a connection with the flow. This value is represented by the elastic
              network interface IP address of the VPC. This field applies only to
              outputs that use the CDI or ST 2110 JPEG XS protocol.
            xml:
              name: outboundIp
          title: OutboundIp
      required:
      - DestinationIp
      - DestinationPort
      - Interface
      - OutboundIp
      title: DestinationConfiguration
      type: object
    InterfaceRequest:
      description: The VPC interface that you want to designate where the media stream
        is coming from or going to.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface.
            xml:
              name: name
          title: Name
      required:
      - Name
      title: InterfaceRequest
      type: object
    DestinationConfigurationRequest:
      description: The transport parameters that you want to associate with an outbound
        media stream.
      properties:
        DestinationIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address where you want MediaConnect to send contents
              of the media stream.
            xml:
              name: destinationIp
          title: DestinationIp
        DestinationPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that you want MediaConnect to use when it distributes
              the media stream to the output.
            xml:
              name: destinationPort
          title: DestinationPort
        Interface:
          $ref: '#/components/schemas/DestinationConfigurationRequest_Interface'
      required:
      - DestinationIp
      - DestinationPort
      - Interface
      title: DestinationConfigurationRequest
      type: object
    DurationUnits:
      enum:
      - MONTHS
      title: DurationUnits
      type: string
    EncoderProfile:
      enum:
      - main
      - high
      title: EncoderProfile
      type: string
    EncodingName:
      enum:
      - jxsv
      - raw
      - smpte291
      - pcm
      title: EncodingName
      type: string
    __double:
      format: double
      type: number
    EncodingParameters:
      description: A collection of parameters that determine how MediaConnect will
        convert the content. These fields only apply to outputs on flows that have
        a CDI source.
      properties:
        CompressionFactor:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "A value that is used to calculate compression for an output.\
              \ The bitrate of the output is calculated as follows: Output bitrate\
              \ = (1 / compressionFactor) * (source bitrate) This property only applies\
              \ to outputs that use the ST 2110 JPEG XS protocol, with a flow source\
              \ that uses the CDI protocol. Valid values are floating point numbers\
              \ in the range of 3.0 to 10.0, inclusive."
            xml:
              name: compressionFactor
          title: CompressionFactor
        EncoderProfile:
          allOf:
          - $ref: '#/components/schemas/EncoderProfile'
          - description: "A setting on the encoder that drives compression settings.\
              \ This property only applies to video media streams associated with\
              \ outputs that use the ST 2110 JPEG XS protocol, with a flow source\
              \ that uses the CDI protocol."
            xml:
              name: encoderProfile
          title: EncoderProfile
      required:
      - CompressionFactor
      - EncoderProfile
      title: EncodingParameters
      type: object
    EncodingParametersRequest:
      description: A collection of parameters that determine how MediaConnect will
        convert the content. These fields only apply to outputs on flows that have
        a CDI source.
      properties:
        CompressionFactor:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "A value that is used to calculate compression for an output.\
              \ The bitrate of the output is calculated as follows: Output bitrate\
              \ = (1 / compressionFactor) * (source bitrate) This property only applies\
              \ to outputs that use the ST 2110 JPEG XS protocol, with a flow source\
              \ that uses the CDI protocol. Valid values are floating point numbers\
              \ in the range of 3.0 to 10.0, inclusive."
            xml:
              name: compressionFactor
          title: CompressionFactor
        EncoderProfile:
          allOf:
          - $ref: '#/components/schemas/EncoderProfile'
          - description: "A setting on the encoder that drives compression settings.\
              \ This property only applies to video media streams associated with\
              \ outputs that use the ST 2110 JPEG XS protocol, if at least one source\
              \ on the flow uses the CDI protocol."
            xml:
              name: encoderProfile
          title: EncoderProfile
      required:
      - CompressionFactor
      - EncoderProfile
      title: EncodingParametersRequest
      type: object
    EntitlementStatus:
      enum:
      - ENABLED
      - DISABLED
      title: EntitlementStatus
      type: string
    Entitlement:
      description: The settings for a flow entitlement.
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Percentage from 0-100 of the data transfer cost to be billed
              to the subscriber.
            xml:
              name: dataTransferSubscriberFeePercent
          title: DataTransferSubscriberFeePercent
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the entitlement.
            xml:
              name: description
          title: Description
        Encryption:
          $ref: '#/components/schemas/Entitlement_Encryption'
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the entitlement.
            xml:
              name: entitlementArn
          title: EntitlementArn
        EntitlementStatus:
          allOf:
          - $ref: '#/components/schemas/EntitlementStatus'
          - description: An indication of whether the entitlement is enabled.
            xml:
              name: entitlementStatus
          title: EntitlementStatus
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the entitlement.
            xml:
              name: name
          title: Name
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The AWS account IDs that you want to share your content with.
              The receiving accounts (subscribers) will be allowed to create their
              own flow using your content as the source.
            xml:
              name: subscribers
          title: Subscribers
      required:
      - EntitlementArn
      - Name
      - Subscribers
      title: Entitlement
      type: object
    __listOfEntitlement:
      items:
        $ref: '#/components/schemas/Entitlement'
      type: array
    Source:
      description: The settings for the source of the flow.
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Percentage from 0-100 of the data transfer cost to be billed
              to the subscriber.
            xml:
              name: dataTransferSubscriberFeePercent
          title: DataTransferSubscriberFeePercent
        Decryption:
          $ref: '#/components/schemas/Source_Decryption'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description for the source. This value is not used or seen
              outside of the current AWS Elemental MediaConnect account.
            xml:
              name: description
          title: Description
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the entitlement that allows you to subscribe to
              content that comes from another AWS account. The entitlement is set
              by the content originator and the ARN is generated as part of the originator's
              flow.
            xml:
              name: entitlementArn
          title: EntitlementArn
        IngestIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow will be listening on for incoming
              content.
            xml:
              name: ingestIp
          title: IngestIp
        IngestPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow will be listening on for incoming
              content.
            xml:
              name: ingestPort
          title: IngestPort
        MediaStreamSourceConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamSourceConfiguration'
          - description: "The media streams that are associated with the source, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamSourceConfigurations
          title: MediaStreamSourceConfigurations
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source.
            xml:
              name: name
          title: Name
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
          title: SenderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
          title: SenderIpAddress
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the source.
            xml:
              name: sourceArn
          title: SourceArn
        Transport:
          $ref: '#/components/schemas/Source_Transport'
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface that is used for this source.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
        WhitelistCidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The range of IP addresses that should be allowed to contribute\
              \ content to your source. These IP addresses should be in the form of\
              \ a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: whitelistCidr
          title: WhitelistCidr
        GatewayBridgeSource:
          $ref: '#/components/schemas/Source_GatewayBridgeSource'
      required:
      - Name
      - SourceArn
      title: Source
      type: object
    Maintenance:
      description: The maintenance setting of a flow
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          - description: A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
            xml:
              name: maintenanceDay
          title: MaintenanceDay
        MaintenanceDeadline:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Maintenance has to be performed before this deadline\
              \ in ISO UTC format. Example: 2021-01-30T08:30:00Z."
            xml:
              name: maintenanceDeadline
          title: MaintenanceDeadline
        MaintenanceScheduledDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A scheduled date in ISO UTC format when the maintenance\
              \ will happen. Use YYYY-MM-DD format. Example: 2021-01-30."
            xml:
              name: maintenanceScheduledDate
          title: MaintenanceScheduledDate
        MaintenanceStartHour:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "UTC time when the maintenance will happen. Use 24-hour HH:MM\
              \ format. Minutes must be 00. Example: 13:00. The default value is 02:00."
            xml:
              name: maintenanceStartHour
          title: MaintenanceStartHour
      title: Maintenance
      type: object
    Range:
      enum:
      - NARROW
      - FULL
      - FULLPROTECT
      title: Range
      type: string
    ScanMode:
      enum:
      - progressive
      - interlace
      - progressive-segmented-frame
      title: ScanMode
      type: string
    Tcs:
      enum:
      - SDR
      - PQ
      - HLG
      - LINEAR
      - BT2100LINPQ
      - BT2100LINHLG
      - ST2065-1
      - ST428-1
      - DENSITY
      title: Tcs
      type: string
    Fmtp:
      description: FMTP
      properties:
        ChannelOrder:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The format of the audio channel.
            xml:
              name: channelOrder
          title: ChannelOrder
        Colorimetry:
          allOf:
          - $ref: '#/components/schemas/Colorimetry'
          - description: The format that is used for the representation of color.
            xml:
              name: colorimetry
          title: Colorimetry
        ExactFramerate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The frame rate for the video stream, in frames/second. For\
              \ example: 60000/1001. If you specify a whole number, MediaConnect uses\
              \ a ratio of N/1. For example, if you specify 60, MediaConnect uses\
              \ 60/1 as the exactFramerate."
            xml:
              name: exactFramerate
          title: ExactFramerate
        Par:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The pixel aspect ratio (PAR) of the video.
            xml:
              name: par
          title: Par
        Range:
          allOf:
          - $ref: '#/components/schemas/Range'
          - description: The encoding range of the video.
            xml:
              name: range
          title: Range
        ScanMode:
          allOf:
          - $ref: '#/components/schemas/ScanMode'
          - description: The type of compression that was used to smooth the video’s
              appearance
            xml:
              name: scanMode
          title: ScanMode
        Tcs:
          allOf:
          - $ref: '#/components/schemas/Tcs'
          - description: The transfer characteristic system (TCS) that is used in
              the video.
            xml:
              name: tcs
          title: Tcs
      title: Fmtp
      type: object
    GatewayState:
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - ERROR
      - DELETING
      - DELETED
      title: GatewayState
      type: string
    GatewayBridgeSource:
      description: The source configuration for cloud flows receiving a stream from
        a bridge.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge feeding this flow.
            xml:
              name: bridgeArn
          title: BridgeArn
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment'
      required:
      - BridgeArn
      title: GatewayBridgeSource
      type: object
    GrantFlowEntitlementsRequest:
      description: A request to grant entitlements on a flow.
      example:
        Entitlements: ""
      properties:
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
          - description: The list of entitlements that you want to grant.
            xml:
              name: entitlements
      required:
      - Entitlements
      title: GrantFlowEntitlementsRequest
      type: object
    InputConfiguration:
      description: The transport parameters that are associated with an incoming media
        stream.
      properties:
        InputIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow listens on for incoming content
              for a media stream.
            xml:
              name: inputIp
          title: InputIp
        InputPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow listens on for an incoming media stream.
            xml:
              name: inputPort
          title: InputPort
        Interface:
          $ref: '#/components/schemas/InputConfiguration_Interface'
      required:
      - InputIp
      - InputPort
      - Interface
      title: InputConfiguration
      type: object
    InputConfigurationRequest:
      description: The transport parameters that you want to associate with an incoming
        media stream.
      properties:
        InputPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that you want the flow to listen on for an incoming
              media stream.
            xml:
              name: inputPort
          title: InputPort
        Interface:
          $ref: '#/components/schemas/InputConfigurationRequest_Interface'
      required:
      - InputPort
      - Interface
      title: InputConfigurationRequest
      type: object
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListBridgesRequest:
      properties: {}
      title: ListBridgesRequest
      type: object
    __listOfListedBridge:
      items:
        $ref: '#/components/schemas/ListedBridge'
      type: array
    ListEntitlementsRequest:
      properties: {}
      title: ListEntitlementsRequest
      type: object
    __listOfListedEntitlement:
      items:
        $ref: '#/components/schemas/ListedEntitlement'
      type: array
    ListFlowsRequest:
      properties: {}
      title: ListFlowsRequest
      type: object
    __listOfListedFlow:
      items:
        $ref: '#/components/schemas/ListedFlow'
      type: array
    ListGatewayInstancesRequest:
      properties: {}
      title: ListGatewayInstancesRequest
      type: object
    __listOfListedGatewayInstance:
      items:
        $ref: '#/components/schemas/ListedGatewayInstance'
      type: array
    ListGatewaysRequest:
      properties: {}
      title: ListGatewaysRequest
      type: object
    __listOfListedGateway:
      items:
        $ref: '#/components/schemas/ListedGateway'
      type: array
    ListOfferingsRequest:
      properties: {}
      title: ListOfferingsRequest
      type: object
    __listOfOffering:
      items:
        $ref: '#/components/schemas/Offering'
      type: array
    ListReservationsRequest:
      properties: {}
      title: ListReservationsRequest
      type: object
    __listOfReservation:
      items:
        $ref: '#/components/schemas/Reservation'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    ListedBridge:
      description: Displays details of the selected bridge.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge.
            xml:
              name: bridgeArn
          title: BridgeArn
        BridgeState:
          allOf:
          - $ref: '#/components/schemas/BridgeState'
          - xml:
              name: bridgeState
          title: BridgeState
        BridgeType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of the bridge.
            xml:
              name: bridgeType
          title: BridgeType
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the bridge.
            xml:
              name: name
          title: Name
        PlacementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the gateway associated with the bridge.
            xml:
              name: placementArn
          title: PlacementArn
      required:
      - BridgeArn
      - BridgeState
      - BridgeType
      - Name
      - PlacementArn
      title: ListedBridge
      type: object
    ListedEntitlement:
      description: An entitlement that has been granted to you from other AWS accounts.
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Percentage from 0-100 of the data transfer cost to be billed
              to the subscriber.
            xml:
              name: dataTransferSubscriberFeePercent
          title: DataTransferSubscriberFeePercent
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the entitlement.
            xml:
              name: entitlementArn
          title: EntitlementArn
        EntitlementName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the entitlement.
            xml:
              name: entitlementName
          title: EntitlementName
      required:
      - EntitlementArn
      - EntitlementName
      title: ListedEntitlement
      type: object
    SourceType:
      enum:
      - OWNED
      - ENTITLED
      title: SourceType
      type: string
    ListedFlow:
      description: "Provides a summary of a flow, including its ARN, Availability\
        \ Zone, and source type."
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Availability Zone that the flow was created in.
            xml:
              name: availabilityZone
          title: AvailabilityZone
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the flow.
            xml:
              name: description
          title: Description
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the flow.
            xml:
              name: flowArn
          title: FlowArn
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the flow.
            xml:
              name: name
          title: Name
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: The type of source. This value is either owned (originated
              somewhere other than an AWS Elemental MediaConnect flow owned by another
              AWS account) or entitled (originated at an AWS Elemental MediaConnect
              flow owned by another AWS account).
            xml:
              name: sourceType
          title: SourceType
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The current status of the flow.
            xml:
              name: status
          title: Status
        Maintenance:
          $ref: '#/components/schemas/Flow_Maintenance'
      required:
      - AvailabilityZone
      - Description
      - FlowArn
      - Name
      - SourceType
      - Status
      title: ListedFlow
      type: object
    ListedGateway:
      description: "Provides a summary of a gateway, including its name, ARN, and\
        \ status."
      properties:
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the gateway.
            xml:
              name: gatewayArn
          title: GatewayArn
        GatewayState:
          allOf:
          - $ref: '#/components/schemas/GatewayState'
          - xml:
              name: gatewayState
          title: GatewayState
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the gateway.
            xml:
              name: name
          title: Name
      required:
      - GatewayArn
      - GatewayState
      - Name
      title: ListedGateway
      type: object
    ListedGatewayInstance:
      description: Provides a summary of an instance.
      properties:
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the gateway.
            xml:
              name: gatewayArn
          title: GatewayArn
        GatewayInstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the instance.
            xml:
              name: gatewayInstanceArn
          title: GatewayInstanceArn
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The managed instance ID generated by the SSM install. This
              will begin with "mi-".
            xml:
              name: instanceId
          title: InstanceId
        InstanceState:
          allOf:
          - $ref: '#/components/schemas/InstanceState'
          - description: The status of the instance.
            xml:
              name: instanceState
          title: InstanceState
      required:
      - GatewayArn
      - GatewayInstanceArn
      - InstanceId
      title: ListedGatewayInstance
      type: object
    MediaStreamAttributes:
      description: Attributes that are related to the media stream.
      properties:
        Fmtp:
          $ref: '#/components/schemas/MediaStreamAttributes_Fmtp'
        Lang:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The audio language, in a format that is recognized by the\
              \ receiver."
            xml:
              name: lang
          title: Lang
      required:
      - Fmtp
      title: MediaStreamAttributes
      type: object
    MediaStream:
      description: "A single track or stream of media that contains video, audio,\
        \ or ancillary data. After you add a media stream to a flow, you can associate\
        \ it with sources and outputs on that flow, as long as they use the CDI protocol\
        \ or the ST 2110 JPEG XS protocol. Each source or output can consist of one\
        \ or many media streams."
      properties:
        Attributes:
          $ref: '#/components/schemas/MediaStream_Attributes'
        ClockRate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The sample rate for the stream. This value is measured in
              Hz.
            xml:
              name: clockRate
          title: ClockRate
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description that can help you quickly identify what your
              media stream is used for.
            xml:
              name: description
          title: Description
        Fmt:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The format type number (sometimes referred to as RTP payload\
              \ type) of the media stream. MediaConnect assigns this value to the\
              \ media stream. For ST 2110 JPEG XS outputs, you need to provide this\
              \ value to the receiver."
            xml:
              name: fmt
          title: Fmt
        MediaStreamId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: A unique identifier for the media stream.
            xml:
              name: mediaStreamId
          title: MediaStreamId
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A name that helps you distinguish one media stream from another.
            xml:
              name: mediaStreamName
          title: MediaStreamName
        MediaStreamType:
          allOf:
          - $ref: '#/components/schemas/MediaStreamType'
          - description: The type of media stream.
            xml:
              name: mediaStreamType
          title: MediaStreamType
        VideoFormat:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resolution of the video.
            xml:
              name: videoFormat
          title: VideoFormat
      required:
      - Fmt
      - MediaStreamId
      - MediaStreamName
      - MediaStreamType
      title: MediaStream
      type: object
    __listOfDestinationConfiguration:
      items:
        $ref: '#/components/schemas/DestinationConfiguration'
      type: array
    MediaStreamOutputConfiguration:
      description: "The media stream that is associated with the output, and the parameters\
        \ for that association."
      properties:
        DestinationConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfDestinationConfiguration'
          - description: The transport parameters that are associated with each outbound
              media stream.
            xml:
              name: destinationConfigurations
          title: DestinationConfigurations
        EncodingName:
          allOf:
          - $ref: '#/components/schemas/EncodingName'
          - description: "The format that was used to encode the data. For ancillary\
              \ data streams, set the encoding name to smpte291. For audio streams,\
              \ set the encoding name to pcm. For video, 2110 streams, set the encoding\
              \ name to raw. For video, JPEG XS streams, set the encoding name to\
              \ jxsv."
            xml:
              name: encodingName
          title: EncodingName
        EncodingParameters:
          $ref: '#/components/schemas/MediaStreamOutputConfiguration_EncodingParameters'
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the media stream.
            xml:
              name: mediaStreamName
          title: MediaStreamName
      required:
      - EncodingName
      - MediaStreamName
      title: MediaStreamOutputConfiguration
      type: object
    __listOfDestinationConfigurationRequest:
      items:
        $ref: '#/components/schemas/DestinationConfigurationRequest'
      type: array
    __listOfInputConfiguration:
      items:
        $ref: '#/components/schemas/InputConfiguration'
      type: array
    MediaStreamSourceConfiguration:
      description: "The media stream that is associated with the source, and the parameters\
        \ for that association."
      properties:
        EncodingName:
          allOf:
          - $ref: '#/components/schemas/EncodingName'
          - description: "The format that was used to encode the data. For ancillary\
              \ data streams, set the encoding name to smpte291. For audio streams,\
              \ set the encoding name to pcm. For video, 2110 streams, set the encoding\
              \ name to raw. For video, JPEG XS streams, set the encoding name to\
              \ jxsv."
            xml:
              name: encodingName
          title: EncodingName
        InputConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputConfiguration'
          - description: The transport parameters that are associated with an incoming
              media stream.
            xml:
              name: inputConfigurations
          title: InputConfigurations
        MediaStreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the media stream.
            xml:
              name: mediaStreamName
          title: MediaStreamName
      required:
      - EncodingName
      - MediaStreamName
      title: MediaStreamSourceConfiguration
      type: object
    __listOfInputConfigurationRequest:
      items:
        $ref: '#/components/schemas/InputConfigurationRequest'
      type: array
    MessageDetail:
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The error code.
            xml:
              name: code
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The specific error message that MediaConnect returns to help
              you understand the reason that the request did not succeed.
            xml:
              name: message
          title: Message
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the resource.
            xml:
              name: resourceName
          title: ResourceName
      required:
      - Code
      - Message
      title: MessageDetail
      type: object
    NetworkInterfaceType:
      enum:
      - ena
      - efa
      title: NetworkInterfaceType
      type: string
    PriceUnits:
      enum:
      - HOURLY
      title: PriceUnits
      type: string
    ResourceSpecification:
      description: "A definition of what is being billed for, including the type and\
        \ amount."
      properties:
        ReservedBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The amount of outbound bandwidth that is discounted in the
              offering.
            xml:
              name: reservedBitrate
          title: ReservedBitrate
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The type of resource and the unit that is being billed for.
            xml:
              name: resourceType
          title: ResourceType
      required:
      - ResourceType
      title: ResourceSpecification
      type: object
    __listOfMediaStreamOutputConfiguration:
      items:
        $ref: '#/components/schemas/MediaStreamOutputConfiguration'
      type: array
    Transport:
      description: Attributes related to the transport stream that are used in a source
        or output.
      properties:
        CidrAllowList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "The range of IP addresses that should be allowed to initiate\
              \ output requests to this flow. These IP addresses should be in the\
              \ form of a Classless Inter-Domain Routing (CIDR) block; for example,\
              \ 10.0.0.0/16."
            xml:
              name: cidrAllowList
          title: CidrAllowList
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC\
              \ streams."
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
          title: MaxLatency
        MaxSyncBuffer:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The size of the buffer (in milliseconds) to use to sync incoming
              source data.
            xml:
              name: maxSyncBuffer
          title: MaxSyncBuffer
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
          title: MinLatency
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol that is used by the source or output.
            xml:
              name: protocol
          title: Protocol
        RemoteId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The remote ID for the Zixi-pull stream.
            xml:
              name: remoteId
          title: RemoteId
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
          title: SenderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
          title: SenderIpAddress
        SmoothingLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing latency in milliseconds for RIST, RTP, and\
              \ RTP-FEC streams."
            xml:
              name: smoothingLatency
          title: SmoothingLatency
        SourceListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Source IP or domain name for SRT-caller protocol.
            xml:
              name: sourceListenerAddress
          title: SourceListenerAddress
        SourceListenerPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Source port for SRT-caller protocol.
            xml:
              name: sourceListenerPort
          title: SourceListenerPort
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
          title: StreamId
      required:
      - Protocol
      title: Transport
      type: object
    __listOf__integer:
      items:
        $ref: '#/components/schemas/__integer'
      type: array
    Output:
      description: The settings for an output.
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Percentage from 0-100 of the data transfer cost to be billed
              to the subscriber.
            xml:
              name: dataTransferSubscriberFeePercent
          title: DataTransferSubscriberFeePercent
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the output.
            xml:
              name: description
          title: Description
        Destination:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The address where you want to send the output.
            xml:
              name: destination
          title: Destination
        Encryption:
          $ref: '#/components/schemas/Output_Encryption'
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the entitlement on the originator''s flow. This
              value is relevant only on entitled flows.
            xml:
              name: entitlementArn
          title: EntitlementArn
        ListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The IP address that the receiver requires in order to establish\
              \ a connection with the flow. For public networking, the ListenerAddress\
              \ is represented by the elastic IP address of the flow. For private\
              \ networking, the ListenerAddress is represented by the elastic network\
              \ interface IP address of the VPC. This field applies only to outputs\
              \ that use the Zixi pull or SRT listener protocol."
            xml:
              name: listenerAddress
          title: ListenerAddress
        MediaLiveInputArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The input ARN of the AWS Elemental MediaLive channel. This
              parameter is relevant only for outputs that were added by creating a
              MediaLive input.
            xml:
              name: mediaLiveInputArn
          title: MediaLiveInputArn
        MediaStreamOutputConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamOutputConfiguration'
          - description: The configuration for each media stream that is associated
              with the output.
            xml:
              name: mediaStreamOutputConfigurations
          title: MediaStreamOutputConfigurations
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the output. This value must be unique within
              the current flow.
            xml:
              name: name
          title: Name
        OutputArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the output.
            xml:
              name: outputArn
          title: OutputArn
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port to use when content is distributed to this output.
            xml:
              name: port
          title: Port
        Transport:
          $ref: '#/components/schemas/Output_Transport'
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/AddOutputRequest_VpcInterfaceAttachment'
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge that added this output.
            xml:
              name: bridgeArn
          title: BridgeArn
        BridgePorts:
          allOf:
          - $ref: '#/components/schemas/__listOf__integer'
          - description: The bridge output ports currently in use.
            xml:
              name: bridgePorts
          title: BridgePorts
      required:
      - Name
      - OutputArn
      title: Output
      type: object
    PurchaseOfferingRequest:
      description: A request to purchase a offering.
      example:
        Start: ""
        ReservationName: ""
      properties:
        ReservationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that you want to use for the reservation.
            xml:
              name: reservationName
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time that you want the reservation to begin,\
              \ in Coordinated Universal Time (UTC). You can specify any date and\
              \ time between 12:00am on the first day of the current month to the\
              \ current time on today's date, inclusive. Specify the start in a 24-hour\
              \ notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T\
              \ and Z are literal characters. For example, to specify 11:30pm on March\
              \ 5, 2020, enter 2020-03-05T23:30:00Z."
            xml:
              name: start
      required:
      - ReservationName
      - Start
      title: PurchaseOfferingRequest
      type: object
    RemoveBridgeOutputRequest:
      properties: {}
      title: RemoveBridgeOutputRequest
      type: object
    RemoveBridgeSourceRequest:
      properties: {}
      title: RemoveBridgeSourceRequest
      type: object
    RemoveFlowMediaStreamRequest:
      properties: {}
      title: RemoveFlowMediaStreamRequest
      type: object
    RemoveFlowOutputRequest:
      properties: {}
      title: RemoveFlowOutputRequest
      type: object
    RemoveFlowSourceRequest:
      properties: {}
      title: RemoveFlowSourceRequest
      type: object
    RemoveFlowVpcInterfaceRequest:
      properties: {}
      title: RemoveFlowVpcInterfaceRequest
      type: object
    ReservationState:
      enum:
      - ACTIVE
      - EXPIRED
      - PROCESSING
      - CANCELED
      title: ReservationState
      type: string
    ResourceType:
      enum:
      - Mbps_Outbound_Bandwidth
      title: ResourceType
      type: string
    RevokeFlowEntitlementRequest:
      properties: {}
      title: RevokeFlowEntitlementRequest
      type: object
    __listOfMediaStreamSourceConfiguration:
      items:
        $ref: '#/components/schemas/MediaStreamSourceConfiguration'
      type: array
    StartFlowRequest:
      properties: {}
      title: StartFlowRequest
      type: object
    StopFlowRequest:
      properties: {}
      title: StopFlowRequest
      type: object
    TagResourceRequest:
      description: "The tags to add to the resource. A tag is an array of key-value\
        \ pairs. Tag keys can have a maximum character length of 128 characters, and\
        \ tag values can have a maximum length of 256 characters."
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "A map from tag keys to values. Tag keys can have a maximum\
              \ character length of 128 characters, and tag values can have a maximum\
              \ length of 256 characters."
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateBridgeFlowSourceRequest:
      description: Update the flow source of the bridge.
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the cloud flow to use as a source of this bridge.
            pattern: ^arn:.+:mediaconnect.+:flow:.+$
            xml:
              name: flowArn
          title: FlowArn
        FlowVpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment'
      title: UpdateBridgeFlowSourceRequest
      type: object
    UpdateBridgeNetworkOutputRequest:
      description: Update an existing network output.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output IP Address.
            xml:
              name: ipAddress
          title: IpAddress
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network output protocol.
            xml:
              name: protocol
          title: Protocol
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output TTL.
            xml:
              name: ttl
          title: Ttl
      title: UpdateBridgeNetworkOutputRequest
      type: object
    UpdateBridgeNetworkSourceRequest:
      description: Update the network source of the bridge.
      properties:
        MulticastIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source multicast IP.
            xml:
              name: multicastIp
          title: MulticastIp
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network source port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network source protocol.
            xml:
              name: protocol
          title: Protocol
      title: UpdateBridgeNetworkSourceRequest
      type: object
    UpdateBridgeOutputRequest:
      description: The fields that you want to update in the bridge output.
      example:
        NetworkOutput:
          NetworkName: ""
          Port: ""
          IpAddress: ""
          Protocol: ""
          Ttl: ""
      properties:
        NetworkOutput:
          $ref: '#/components/schemas/UpdateBridgeOutputRequest_NetworkOutput'
      title: UpdateBridgeOutputRequest
      type: object
    UpdateEgressGatewayBridgeRequest:
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Update an existing egress-type bridge.
            xml:
              name: maxBitrate
          title: MaxBitrate
      title: UpdateEgressGatewayBridgeRequest
      type: object
    UpdateIngressGatewayBridgeRequest:
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxOutputs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of expected outputs.
            xml:
              name: maxOutputs
          title: MaxOutputs
      title: UpdateIngressGatewayBridgeRequest
      type: object
    UpdateFailoverConfig:
      description: The settings for source failover.
      properties:
        FailoverMode:
          allOf:
          - $ref: '#/components/schemas/FailoverMode'
          - description: "The type of failover you choose for this flow. MERGE combines\
              \ the source streams into a single stream, allowing graceful recovery\
              \ from any single-source loss. FAILOVER allows switching between different\
              \ streams."
            xml:
              name: failoverMode
          title: FailoverMode
        RecoveryWindow:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Recovery window time to look for dash-7 packets
            xml:
              name: recoveryWindow
          title: RecoveryWindow
        SourcePriority:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig_SourcePriority'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - xml:
              name: state
          title: State
      title: UpdateFailoverConfig
      type: object
    UpdateBridgeRequest:
      description: A request to update the bridge.
      example:
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        EgressGatewayBridge:
          MaxBitrate: ""
        IngressGatewayBridge:
          MaxOutputs: ""
          MaxBitrate: ""
      properties:
        EgressGatewayBridge:
          $ref: '#/components/schemas/UpdateBridgeRequest_EgressGatewayBridge'
        IngressGatewayBridge:
          $ref: '#/components/schemas/UpdateBridgeRequest_IngressGatewayBridge'
        SourceFailoverConfig:
          $ref: '#/components/schemas/UpdateBridgeRequest_SourceFailoverConfig'
      title: UpdateBridgeRequest
      type: object
    UpdateBridgeSourceRequest:
      description: The fields that you want to update in the bridge source.
      example:
        NetworkSource:
          NetworkName: ""
          MulticastIp: ""
          Port: ""
          Protocol: ""
        FlowSource:
          FlowVpcInterfaceAttachment:
            VpcInterfaceName: ""
          FlowArn: ""
      properties:
        FlowSource:
          $ref: '#/components/schemas/UpdateBridgeSourceRequest_FlowSource'
        NetworkSource:
          $ref: '#/components/schemas/UpdateBridgeSourceRequest_NetworkSource'
      title: UpdateBridgeSourceRequest
      type: object
    UpdateBridgeStateRequest:
      description: A request to update the bridge state.
      example:
        DesiredState: ""
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/DesiredState'
          - xml:
              name: desiredState
      required:
      - DesiredState
      title: UpdateBridgeStateRequest
      type: object
    UpdateEncryption:
      description: Information about the encryption of the flow.
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          - description: "The type of algorithm that is used for the encryption (such\
              \ as aes128, aes192, or aes256)."
            xml:
              name: algorithm
          title: Algorithm
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A 128-bit, 16-byte hex value represented by a 32-character\
              \ string, to be used with the key for encrypting content. This parameter\
              \ is not valid for static key encryption."
            xml:
              name: constantInitializationVector
          title: ConstantInitializationVector
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The value of one of the devices that you configured with
              your digital rights management (DRM) platform key provider. This parameter
              is required for SPEKE encryption and is not valid for static key encryption.
            xml:
              name: deviceId
          title: DeviceId
        KeyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: "The type of key that is used for the encryption. If no keyType\
              \ is provided, the service will use the default setting (static-key)."
            xml:
              name: keyType
          title: KeyType
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Region that the API Gateway proxy endpoint was created
              in. This parameter is required for SPEKE encryption and is not valid
              for static key encryption.
            xml:
              name: region
          title: Region
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An identifier for the content. The service sends this value
              to the key server to identify the current endpoint. The resource ID
              is also known as the content ID. This parameter is required for SPEKE
              encryption and is not valid for static key encryption.
            xml:
              name: resourceId
          title: ResourceId
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the role that you created during setup (when you
              set up AWS Elemental MediaConnect as a trusted entity).
            xml:
              name: roleArn
          title: RoleArn
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the secret that you created in AWS Secrets Manager
              to store the encryption key. This parameter is required for static key
              encryption and is not valid for SPEKE encryption.
            xml:
              name: secretArn
          title: SecretArn
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL from the API Gateway proxy that you set up to talk
              to your key server. This parameter is required for SPEKE encryption
              and is not valid for static key encryption.
            xml:
              name: url
          title: Url
      title: UpdateEncryption
      type: object
    UpdateFlowEntitlementRequest:
      description: The entitlement fields that you want to update.
      example:
        Description: ""
        Encryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        Subscribers: ""
        EntitlementStatus: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the entitlement. This description appears
              only on the AWS Elemental MediaConnect console and will not be seen
              by the subscriber or end user.
            xml:
              name: description
        Encryption:
          $ref: '#/components/schemas/UpdateFlowEntitlementRequest_Encryption'
        EntitlementStatus:
          allOf:
          - $ref: '#/components/schemas/EntitlementStatus'
          - description: "An indication of whether you want to enable the entitlement\
              \ to allow access, or disable it to stop streaming content to the subscriber’\
              s flow temporarily. If you don’t specify the entitlementStatus field\
              \ in your request, MediaConnect leaves the value unchanged."
            xml:
              name: entitlementStatus
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The AWS account IDs that you want to share your content with.
              The receiving accounts (subscribers) will be allowed to create their
              own flow using your content as the source.
            xml:
              name: subscribers
      title: UpdateFlowEntitlementRequest
      type: object
    UpdateFlowMediaStreamRequest:
      description: The fields that you want to update in the media stream.
      example:
        MediaStreamType: ""
        Description: ""
        Attributes:
          Fmtp:
            Par: ""
            ScanMode: ""
            Tcs: ""
            ExactFramerate: ""
            ChannelOrder: ""
            Colorimetry: ""
            Range: ""
          Lang: ""
        ClockRate: ""
        VideoFormat: ""
      properties:
        Attributes:
          $ref: '#/components/schemas/UpdateFlowMediaStreamRequest_Attributes'
        ClockRate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The sample rate (in Hz) for the stream. If the media stream\
              \ type is video or ancillary data, set this value to 90000. If the media\
              \ stream type is audio, set this value to either 48000 or 96000."
            xml:
              name: clockRate
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Description
            xml:
              name: description
        MediaStreamType:
          allOf:
          - $ref: '#/components/schemas/MediaStreamType'
          - description: The type of media stream.
            xml:
              name: mediaStreamType
        VideoFormat:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resolution of the video.
            xml:
              name: videoFormat
      title: UpdateFlowMediaStreamRequest
      type: object
    UpdateFlowOutputRequest:
      description: The fields that you want to update in the output.
      example:
        Destination: ""
        SmoothingLatency: ""
        StreamId: ""
        Description: ""
        SenderIpAddress: ""
        Port: ""
        RemoteId: ""
        MediaStreamOutputConfigurations: ""
        Encryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        SenderControlPort: ""
        VpcInterfaceAttachment:
          VpcInterfaceName: ""
        MinLatency: ""
        Protocol: ""
        MaxLatency: ""
        CidrAllowList: ""
      properties:
        CidrAllowList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: "The range of IP addresses that should be allowed to initiate\
              \ output requests to this flow. These IP addresses should be in the\
              \ form of a Classless Inter-Domain Routing (CIDR) block; for example,\
              \ 10.0.0.0/16."
            xml:
              name: cidrAllowList
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description of the output. This description appears only
              on the AWS Elemental MediaConnect console and will not be seen by the
              end user.
            xml:
              name: description
        Destination:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address where you want to send the output.
            xml:
              name: destination
        Encryption:
          $ref: '#/components/schemas/UpdateFlowOutputRequest_Encryption'
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
        MediaStreamOutputConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'
          - description: "The media streams that are associated with the output, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamOutputConfigurations
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port to use when content is distributed to this output.
            xml:
              name: port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol to use for the output.
            xml:
              name: protocol
        RemoteId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The remote ID for the Zixi-pull stream.
            xml:
              name: remoteId
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
        SmoothingLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing latency in milliseconds for RIST, RTP, and\
              \ RTP-FEC streams."
            xml:
              name: smoothingLatency
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/AddOutputRequest_VpcInterfaceAttachment'
      title: UpdateFlowOutputRequest
      type: object
    UpdateMaintenance:
      description: Update maintenance setting for a flow
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          - description: A day of a week when the maintenance will happen. use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
            xml:
              name: maintenanceDay
          title: MaintenanceDay
        MaintenanceScheduledDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A scheduled date in ISO UTC format when the maintenance\
              \ will happen. Use YYYY-MM-DD format. Example: 2021-01-30."
            xml:
              name: maintenanceScheduledDate
          title: MaintenanceScheduledDate
        MaintenanceStartHour:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "UTC time when the maintenance will happen. Use 24-hour HH:MM\
              \ format. Minutes must be 00. Example: 13:00. The default value is 02:00."
            xml:
              name: maintenanceStartHour
          title: MaintenanceStartHour
      title: UpdateMaintenance
      type: object
    UpdateFlowRequest:
      description: A request to update flow.
      example:
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        Maintenance:
          MaintenanceDay: ""
          MaintenanceScheduledDate: ""
          MaintenanceStartHour: ""
      properties:
        SourceFailoverConfig:
          $ref: '#/components/schemas/UpdateBridgeRequest_SourceFailoverConfig'
        Maintenance:
          $ref: '#/components/schemas/UpdateFlowRequest_Maintenance'
      title: UpdateFlowRequest
      type: object
    UpdateGatewayBridgeSourceRequest:
      description: The source configuration for cloud flows receiving a stream from
        a bridge.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge feeding this flow.
            pattern: ^arn:.+:mediaconnect.+:bridge:.+$
            xml:
              name: bridgeArn
          title: BridgeArn
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment'
      title: UpdateGatewayBridgeSourceRequest
      type: object
    UpdateFlowSourceRequest:
      description: A request to update the source of a flow.
      example:
        MaxSyncBuffer: ""
        StreamId: ""
        Description: ""
        SenderIpAddress: ""
        MediaStreamSourceConfigurations: ""
        IngestPort: ""
        SenderControlPort: ""
        Decryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        GatewayBridgeSource:
          BridgeArn: ""
          VpcInterfaceAttachment:
            VpcInterfaceName: ""
        SourceListenerAddress: ""
        SourceListenerPort: ""
        WhitelistCidr: ""
        EntitlementArn: ""
        MinLatency: ""
        VpcInterfaceName: ""
        MaxBitrate: ""
        Protocol: ""
        MaxLatency: ""
      properties:
        Decryption:
          $ref: '#/components/schemas/UpdateFlowSourceRequest_Decryption'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description for the source. This value is not used or seen
              outside of the current AWS Elemental MediaConnect account.
            xml:
              name: description
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The ARN of the entitlement that allows you to subscribe\
              \ to this flow. The entitlement is set by the flow originator, and the\
              \ ARN is generated as part of the originator's flow."
            pattern: ^arn:.+:mediaconnect.+:entitlement:.+$
            xml:
              name: entitlementArn
        IngestPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow will be listening on for incoming
              content.
            xml:
              name: ingestPort
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC\
              \ streams."
            xml:
              name: maxBitrate
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
        MaxSyncBuffer:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The size of the buffer (in milliseconds) to use to sync incoming
              source data.
            xml:
              name: maxSyncBuffer
        MediaStreamSourceConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
          - description: "The media streams that are associated with the source, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamSourceConfigurations
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol that is used by the source.
            xml:
              name: protocol
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
        SourceListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Source IP or domain name for SRT-caller protocol.
            xml:
              name: sourceListenerAddress
        SourceListenerPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Source port for SRT-caller protocol.
            xml:
              name: sourceListenerPort
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface to use for this source.
            xml:
              name: vpcInterfaceName
        WhitelistCidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The range of IP addresses that should be allowed to contribute\
              \ content to your source. These IP addresses should be in the form of\
              \ a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: whitelistCidr
        GatewayBridgeSource:
          $ref: '#/components/schemas/UpdateFlowSourceRequest_GatewayBridgeSource'
      title: UpdateFlowSourceRequest
      type: object
    UpdateGatewayInstanceRequest:
      description: A request to update gateway instance state.
      example:
        BridgePlacement: ""
      properties:
        BridgePlacement:
          allOf:
          - $ref: '#/components/schemas/BridgePlacement'
          - description: "The availability of the instance to host new bridges. The\
              \ bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED,\
              \ no new bridges can be deployed to this instance. If it is AVAILABLE,\
              \ new bridges can be added to this instance."
            xml:
              name: bridgePlacement
      title: UpdateGatewayInstanceRequest
      type: object
    VpcInterface:
      description: The settings for a VPC Source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Immutable and has to be a unique against other VpcInterfaces
              in this Flow.
            xml:
              name: name
          title: Name
        NetworkInterfaceIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: IDs of the network interfaces created in customer's account
              by MediaConnect.
            xml:
              name: networkInterfaceIds
          title: NetworkInterfaceIds
        NetworkInterfaceType:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceType'
          - description: The type of network interface.
            xml:
              name: networkInterfaceType
          title: NetworkInterfaceType
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Role Arn MediaConnect can assumes to create ENIs in customer's
              account
            xml:
              name: roleArn
          title: RoleArn
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: Security Group IDs to be used on ENI.
            xml:
              name: securityGroupIds
          title: SecurityGroupIds
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Subnet must be in the AZ of the Flow
            xml:
              name: subnetId
          title: SubnetId
      required:
      - Name
      - NetworkInterfaceIds
      - NetworkInterfaceType
      - RoleArn
      - SecurityGroupIds
      - SubnetId
      title: VpcInterface
      type: object
    AddBridgeOutputs_request:
      properties:
        outputs:
          description: The outputs that you want to add to this bridge.
          items:
            $ref: '#/components/schemas/AddBridgeOutputRequest'
          title: outputs
          type: array
      required:
      - outputs
      title: AddBridgeOutputs_request
      type: object
    AddBridgeSources_request:
      properties:
        sources:
          description: The sources that you want to add to this bridge.
          items:
            $ref: '#/components/schemas/AddBridgeSourceRequest'
          title: sources
          type: array
      required:
      - sources
      title: AddBridgeSources_request
      type: object
    AddFlowMediaStreams_request:
      properties:
        mediaStreams:
          description: The media streams that you want to add to the flow.
          items:
            $ref: '#/components/schemas/AddMediaStreamRequest'
          title: mediaStreams
          type: array
      required:
      - mediaStreams
      title: AddFlowMediaStreams_request
      type: object
    AddFlowOutputs_request:
      properties:
        outputs:
          description: A list of outputs that you want to add.
          items:
            $ref: '#/components/schemas/AddOutputRequest'
          title: outputs
          type: array
      required:
      - outputs
      title: AddFlowOutputs_request
      type: object
    AddFlowSources_request:
      properties:
        sources:
          description: A list of sources that you want to add.
          items:
            $ref: '#/components/schemas/SetSourceRequest'
          title: sources
          type: array
      required:
      - sources
      title: AddFlowSources_request
      type: object
    AddFlowVpcInterfaces_request:
      properties:
        vpcInterfaces:
          description: A list of VPC interfaces that you want to add.
          items:
            $ref: '#/components/schemas/VpcInterfaceRequest'
          title: vpcInterfaces
          type: array
      required:
      - vpcInterfaces
      title: AddFlowVpcInterfaces_request
      type: object
    CreateBridge_request_egressGatewayBridge:
      description: Create a bridge with the egress bridge type. An egress bridge is
        a cloud-to-ground bridge. The content comes from an existing MediaConnect
        flow and is delivered to your premises.
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
      title: CreateBridge_request_egressGatewayBridge
      type: object
    CreateBridge_request_ingressGatewayBridge:
      description: Create a bridge with the ingress bridge type. An ingress bridge
        is a ground-to-cloud bridge. The content originates at your premises and is
        delivered to the cloud.
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxOutputs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of expected outputs.
            xml:
              name: maxOutputs
          title: MaxOutputs
      title: CreateBridge_request_ingressGatewayBridge
      type: object
    CreateBridge_request_sourceFailoverConfig_SourcePriority:
      allOf:
      - $ref: '#/components/schemas/SourcePriority'
      - description: The priority you want to assign to a source. You can have a primary
          stream and a backup stream or two equally prioritized streams.
        xml:
          name: sourcePriority
      example:
        PrimarySource: ""
      title: CreateBridge_request_sourceFailoverConfig_SourcePriority
    CreateBridge_request_sourceFailoverConfig:
      description: The settings for source failover.
      properties:
        FailoverMode:
          allOf:
          - $ref: '#/components/schemas/FailoverMode'
          - description: "The type of failover you choose for this flow. MERGE combines\
              \ the source streams into a single stream, allowing graceful recovery\
              \ from any single-source loss. FAILOVER allows switching between different\
              \ streams."
            xml:
              name: failoverMode
          title: FailoverMode
        RecoveryWindow:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Search window time to look for dash-7 packets
            xml:
              name: recoveryWindow
          title: RecoveryWindow
        SourcePriority:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig_SourcePriority'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - xml:
              name: state
          title: State
      title: CreateBridge_request_sourceFailoverConfig
      type: object
    CreateBridge_request:
      properties:
        egressGatewayBridge:
          $ref: '#/components/schemas/CreateBridge_request_egressGatewayBridge'
        ingressGatewayBridge:
          $ref: '#/components/schemas/CreateBridge_request_ingressGatewayBridge'
        name:
          description: The name of the bridge. This name can not be modified after
            the bridge is created.
          title: name
          type: string
        outputs:
          description: The outputs that you want to add to this bridge.
          items:
            $ref: '#/components/schemas/AddBridgeOutputRequest'
          title: outputs
          type: array
        placementArn:
          description: The bridge placement Amazon Resource Number (ARN).
          title: placementArn
          type: string
        sourceFailoverConfig:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig'
        sources:
          description: The sources that you want to add to this bridge.
          items:
            $ref: '#/components/schemas/AddBridgeSourceRequest'
          title: sources
          type: array
      required:
      - name
      - placementArn
      - sources
      title: CreateBridge_request
      type: object
    CreateFlow_request_source_Decryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: "The type of encryption that is used on the content ingested\
          \ from this source. Allowable encryption types: static-key."
        xml:
          name: decryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: CreateFlow_request_source_Decryption
    CreateFlow_request_source_GatewayBridgeSource:
      allOf:
      - $ref: '#/components/schemas/SetGatewayBridgeSourceRequest'
      - description: The source configuration for cloud flows receiving a stream from
          a bridge.
        xml:
          name: gatewayBridgeSource
      example:
        BridgeArn: ""
        VpcInterfaceAttachment:
          VpcInterfaceName: ""
      title: CreateFlow_request_source_GatewayBridgeSource
    CreateFlow_request_source:
      description: The settings for the source of the flow.
      properties:
        Decryption:
          $ref: '#/components/schemas/CreateFlow_request_source_Decryption'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A description for the source. This value is not used or seen
              outside of the current AWS Elemental MediaConnect account.
            xml:
              name: description
          title: Description
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The ARN of the entitlement that allows you to subscribe\
              \ to this flow. The entitlement is set by the flow originator, and the\
              \ ARN is generated as part of the originator's flow."
            pattern: ^arn:.+:mediaconnect.+:entitlement:.+$
            xml:
              name: entitlementArn
          title: EntitlementArn
        IngestPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow will be listening on for incoming
              content.
            xml:
              name: ingestPort
          title: IngestPort
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC\
              \ streams."
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum latency in milliseconds. This parameter applies\
              \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
            xml:
              name: maxLatency
          title: MaxLatency
        MaxSyncBuffer:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The size of the buffer (in milliseconds) to use to sync incoming
              source data.
            xml:
              name: maxSyncBuffer
          title: MaxSyncBuffer
        MediaStreamSourceConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
          - description: "The media streams that are associated with the source, and\
              \ the parameters for those associations."
            xml:
              name: mediaStreamSourceConfigurations
          title: MediaStreamSourceConfigurations
        MinLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The minimum latency in milliseconds for SRT-based streams.\
              \ In streams that use the SRT protocol, this value that you set on your\
              \ MediaConnect source or output represents the minimal potential latency\
              \ of that connection. The latency of the stream is set to the highest\
              \ number between the sender’s minimum latency and the receiver’s minimum\
              \ latency."
            xml:
              name: minLatency
          title: MinLatency
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source.
            xml:
              name: name
          title: Name
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The protocol that is used by the source.
            xml:
              name: protocol
          title: Protocol
        SenderControlPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The port that the flow uses to send outbound requests to
              initiate connection with the sender.
            xml:
              name: senderControlPort
          title: SenderControlPort
        SenderIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IP address that the flow communicates with to initiate
              connection with the sender.
            xml:
              name: senderIpAddress
          title: SenderIpAddress
        SourceListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Source IP or domain name for SRT-caller protocol.
            xml:
              name: sourceListenerAddress
          title: SourceListenerAddress
        SourceListenerPort:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Source port for SRT-caller protocol.
            xml:
              name: sourceListenerPort
          title: SourceListenerPort
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The stream ID that you want to use for this transport. This
              parameter applies only to Zixi and SRT caller-based streams.
            xml:
              name: streamId
          title: StreamId
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface to use for this source.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
        WhitelistCidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The range of IP addresses that should be allowed to contribute\
              \ content to your source. These IP addresses should be in the form of\
              \ a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
            xml:
              name: whitelistCidr
          title: WhitelistCidr
        GatewayBridgeSource:
          $ref: '#/components/schemas/CreateFlow_request_source_GatewayBridgeSource'
      title: CreateFlow_request_source
      type: object
    CreateFlow_request_maintenance:
      description: Create maintenance setting for a flow
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          - description: A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
            xml:
              name: maintenanceDay
          title: MaintenanceDay
        MaintenanceStartHour:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "UTC time when the maintenance will happen. Use 24-hour HH:MM\
              \ format. Minutes must be 00. Example: 13:00. The default value is 02:00."
            xml:
              name: maintenanceStartHour
          title: MaintenanceStartHour
      title: CreateFlow_request_maintenance
      type: object
    CreateFlow_request:
      properties:
        availabilityZone:
          description: The Availability Zone that you want to create the flow in.
            These options are limited to the Availability Zones within the current
            AWS Region.
          title: availabilityZone
          type: string
        entitlements:
          description: The entitlements that you want to grant on a flow.
          items:
            $ref: '#/components/schemas/GrantEntitlementRequest'
          title: entitlements
          type: array
        mediaStreams:
          description: The media streams that you want to add to the flow. You can
            associate these media streams with sources and outputs on the flow.
          items:
            $ref: '#/components/schemas/AddMediaStreamRequest'
          title: mediaStreams
          type: array
        name:
          description: The name of the flow.
          title: name
          type: string
        outputs:
          description: The outputs that you want to add to this flow.
          items:
            $ref: '#/components/schemas/AddOutputRequest'
          title: outputs
          type: array
        source:
          $ref: '#/components/schemas/CreateFlow_request_source'
        sourceFailoverConfig:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig'
        sources:
          description: ""
          items:
            $ref: '#/components/schemas/SetSourceRequest'
          title: sources
          type: array
        vpcInterfaces:
          description: The VPC interfaces you want on the flow.
          items:
            $ref: '#/components/schemas/VpcInterfaceRequest'
          title: vpcInterfaces
          type: array
        maintenance:
          $ref: '#/components/schemas/CreateFlow_request_maintenance'
      required:
      - name
      title: CreateFlow_request
      type: object
    CreateGateway_request:
      properties:
        egressCidrBlocks:
          description: "The range of IP addresses that are allowed to contribute content\
            \ or initiate output requests for flows communicating with this gateway.\
            \ These IP addresses should be in the form of a Classless Inter-Domain\
            \ Routing (CIDR) block; for example, 10.0.0.0/16."
          items:
            $ref: '#/components/schemas/__string'
          title: egressCidrBlocks
          type: array
        name:
          description: The name of the gateway. This name can not be modified after
            the gateway is created.
          title: name
          type: string
        networks:
          description: The list of networks that you want to add.
          items:
            $ref: '#/components/schemas/GatewayNetwork'
          title: networks
          type: array
      required:
      - egressCidrBlocks
      - name
      - networks
      title: CreateGateway_request
      type: object
    UpdateBridge_request_egressGatewayBridge:
      description: ""
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Update an existing egress-type bridge.
            xml:
              name: maxBitrate
          title: MaxBitrate
      title: UpdateBridge_request_egressGatewayBridge
      type: object
    UpdateBridge_request_ingressGatewayBridge:
      description: ""
      properties:
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum expected bitrate (in bps).
            xml:
              name: maxBitrate
          title: MaxBitrate
        MaxOutputs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of expected outputs.
            xml:
              name: maxOutputs
          title: MaxOutputs
      title: UpdateBridge_request_ingressGatewayBridge
      type: object
    UpdateBridge_request_sourceFailoverConfig:
      description: The settings for source failover.
      properties:
        FailoverMode:
          allOf:
          - $ref: '#/components/schemas/FailoverMode'
          - description: "The type of failover you choose for this flow. MERGE combines\
              \ the source streams into a single stream, allowing graceful recovery\
              \ from any single-source loss. FAILOVER allows switching between different\
              \ streams."
            xml:
              name: failoverMode
          title: FailoverMode
        RecoveryWindow:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Recovery window time to look for dash-7 packets
            xml:
              name: recoveryWindow
          title: RecoveryWindow
        SourcePriority:
          $ref: '#/components/schemas/CreateBridge_request_sourceFailoverConfig_SourcePriority'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - xml:
              name: state
          title: State
      title: UpdateBridge_request_sourceFailoverConfig
      type: object
    UpdateBridge_request:
      properties:
        egressGatewayBridge:
          $ref: '#/components/schemas/UpdateBridge_request_egressGatewayBridge'
        ingressGatewayBridge:
          $ref: '#/components/schemas/UpdateBridge_request_ingressGatewayBridge'
        sourceFailoverConfig:
          $ref: '#/components/schemas/UpdateBridge_request_sourceFailoverConfig'
      title: UpdateBridge_request
      type: object
    UpdateFlow_request_maintenance:
      description: Update maintenance setting for a flow
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          - description: A day of a week when the maintenance will happen. use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
            xml:
              name: maintenanceDay
          title: MaintenanceDay
        MaintenanceScheduledDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A scheduled date in ISO UTC format when the maintenance\
              \ will happen. Use YYYY-MM-DD format. Example: 2021-01-30."
            xml:
              name: maintenanceScheduledDate
          title: MaintenanceScheduledDate
        MaintenanceStartHour:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "UTC time when the maintenance will happen. Use 24-hour HH:MM\
              \ format. Minutes must be 00. Example: 13:00. The default value is 02:00."
            xml:
              name: maintenanceStartHour
          title: MaintenanceStartHour
      title: UpdateFlow_request_maintenance
      type: object
    UpdateFlow_request:
      properties:
        sourceFailoverConfig:
          $ref: '#/components/schemas/UpdateBridge_request_sourceFailoverConfig'
        maintenance:
          $ref: '#/components/schemas/UpdateFlow_request_maintenance'
      title: UpdateFlow_request
      type: object
    UpdateGatewayInstance_request:
      properties:
        bridgePlacement:
          description: "The availability of the instance to host new bridges. The\
            \ bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED,\
            \ no new bridges can be deployed to this instance. If it is AVAILABLE,\
            \ new bridges can be added to this instance."
          enum:
          - AVAILABLE
          - LOCKED
          title: bridgePlacement
          type: string
      title: UpdateGatewayInstance_request
      type: object
    PurchaseOffering_request:
      properties:
        reservationName:
          description: The name that you want to use for the reservation.
          title: reservationName
          type: string
        start:
          description: "The date and time that you want the reservation to begin,\
            \ in Coordinated Universal Time (UTC). You can specify any date and time\
            \ between 12:00am on the first day of the current month to the current\
            \ time on today's date, inclusive. Specify the start in a 24-hour notation.\
            \ Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and Z are literal\
            \ characters. For example, to specify 11:30pm on March 5, 2020, enter\
            \ 2020-03-05T23:30:00Z."
          title: start
          type: string
      required:
      - reservationName
      - start
      title: PurchaseOffering_request
      type: object
    GrantFlowEntitlements_request:
      properties:
        entitlements:
          description: The list of entitlements that you want to grant.
          items:
            $ref: '#/components/schemas/GrantEntitlementRequest'
          title: entitlements
          type: array
      required:
      - entitlements
      title: GrantFlowEntitlements_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "A map from tag keys to values. Tag keys can have a maximum\
            \ character length of 128 characters, and tag values can have a maximum\
            \ length of 256 characters."
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    UpdateBridgeOutput_request_networkOutput:
      description: Update an existing network output.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output IP Address.
            xml:
              name: ipAddress
          title: IpAddress
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network output's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network output protocol.
            xml:
              name: protocol
          title: Protocol
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network output TTL.
            xml:
              name: ttl
          title: Ttl
      title: UpdateBridgeOutput_request_networkOutput
      type: object
    UpdateBridgeOutput_request:
      properties:
        networkOutput:
          $ref: '#/components/schemas/UpdateBridgeOutput_request_networkOutput'
      title: UpdateBridgeOutput_request
      type: object
    UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment:
      allOf:
      - $ref: '#/components/schemas/VpcInterfaceAttachment'
      - description: The name of the VPC interface attachment to use for this source.
        xml:
          name: flowVpcInterfaceAttachment
      example:
        VpcInterfaceName: ""
      title: UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment
    UpdateBridgeSource_request_flowSource:
      description: Update the flow source of the bridge.
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the cloud flow to use as a source of this bridge.
            pattern: ^arn:.+:mediaconnect.+:flow:.+$
            xml:
              name: flowArn
          title: FlowArn
        FlowVpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment'
      title: UpdateBridgeSource_request_flowSource
      type: object
    UpdateBridgeSource_request_networkSource:
      description: Update the network source of the bridge.
      properties:
        MulticastIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source multicast IP.
            xml:
              name: multicastIp
          title: MulticastIp
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The network source's gateway network name.
            xml:
              name: networkName
          title: NetworkName
        Port:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The network source port.
            xml:
              name: port
          title: Port
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: The network source protocol.
            xml:
              name: protocol
          title: Protocol
      title: UpdateBridgeSource_request_networkSource
      type: object
    UpdateBridgeSource_request:
      properties:
        flowSource:
          $ref: '#/components/schemas/UpdateBridgeSource_request_flowSource'
        networkSource:
          $ref: '#/components/schemas/UpdateBridgeSource_request_networkSource'
      title: UpdateBridgeSource_request
      type: object
    UpdateFlowMediaStream_request_attributes_Fmtp:
      allOf:
      - $ref: '#/components/schemas/FmtpRequest'
      - description: The settings that you want to use to define the media stream.
        xml:
          name: fmtp
      example:
        Par: ""
        ScanMode: ""
        Tcs: ""
        ExactFramerate: ""
        ChannelOrder: ""
        Colorimetry: ""
        Range: ""
      title: UpdateFlowMediaStream_request_attributes_Fmtp
    UpdateFlowMediaStream_request_attributes:
      description: Attributes that are related to the media stream.
      properties:
        Fmtp:
          $ref: '#/components/schemas/UpdateFlowMediaStream_request_attributes_Fmtp'
        Lang:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The audio language, in a format that is recognized by the\
              \ receiver."
            xml:
              name: lang
          title: Lang
      title: UpdateFlowMediaStream_request_attributes
      type: object
    UpdateFlowMediaStream_request:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateFlowMediaStream_request_attributes'
        clockRate:
          description: "The sample rate (in Hz) for the stream. If the media stream\
            \ type is video or ancillary data, set this value to 90000. If the media\
            \ stream type is audio, set this value to either 48000 or 96000."
          title: clockRate
          type: integer
        description:
          description: Description
          title: description
          type: string
        mediaStreamType:
          description: The type of media stream.
          enum:
          - video
          - audio
          - ancillary-data
          title: mediaStreamType
          type: string
        videoFormat:
          description: The resolution of the video.
          title: videoFormat
          type: string
      title: UpdateFlowMediaStream_request
      type: object
    UpdateFlowOutput_request_encryption:
      description: Information about the encryption of the flow.
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          - description: "The type of algorithm that is used for the encryption (such\
              \ as aes128, aes192, or aes256)."
            xml:
              name: algorithm
          title: Algorithm
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A 128-bit, 16-byte hex value represented by a 32-character\
              \ string, to be used with the key for encrypting content. This parameter\
              \ is not valid for static key encryption."
            xml:
              name: constantInitializationVector
          title: ConstantInitializationVector
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The value of one of the devices that you configured with
              your digital rights management (DRM) platform key provider. This parameter
              is required for SPEKE encryption and is not valid for static key encryption.
            xml:
              name: deviceId
          title: DeviceId
        KeyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: "The type of key that is used for the encryption. If no keyType\
              \ is provided, the service will use the default setting (static-key)."
            xml:
              name: keyType
          title: KeyType
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Region that the API Gateway proxy endpoint was created
              in. This parameter is required for SPEKE encryption and is not valid
              for static key encryption.
            xml:
              name: region
          title: Region
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An identifier for the content. The service sends this value
              to the key server to identify the current endpoint. The resource ID
              is also known as the content ID. This parameter is required for SPEKE
              encryption and is not valid for static key encryption.
            xml:
              name: resourceId
          title: ResourceId
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the role that you created during setup (when you
              set up AWS Elemental MediaConnect as a trusted entity).
            xml:
              name: roleArn
          title: RoleArn
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the secret that you created in AWS Secrets Manager
              to store the encryption key. This parameter is required for static key
              encryption and is not valid for SPEKE encryption.
            xml:
              name: secretArn
          title: SecretArn
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL from the API Gateway proxy that you set up to talk
              to your key server. This parameter is required for SPEKE encryption
              and is not valid for static key encryption.
            xml:
              name: url
          title: Url
      title: UpdateFlowOutput_request_encryption
      type: object
    UpdateFlowOutput_request_vpcInterfaceAttachment:
      description: The settings for attaching a VPC interface to an resource.
      properties:
        VpcInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VPC interface to use for this resource.
            xml:
              name: vpcInterfaceName
          title: VpcInterfaceName
      title: UpdateFlowOutput_request_vpcInterfaceAttachment
      type: object
    UpdateFlowOutput_request:
      properties:
        cidrAllowList:
          description: "The range of IP addresses that should be allowed to initiate\
            \ output requests to this flow. These IP addresses should be in the form\
            \ of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
          items:
            $ref: '#/components/schemas/__string'
          title: cidrAllowList
          type: array
        description:
          description: A description of the output. This description appears only
            on the AWS Elemental MediaConnect console and will not be seen by the
            end user.
          title: description
          type: string
        destination:
          description: The IP address where you want to send the output.
          title: destination
          type: string
        encryption:
          $ref: '#/components/schemas/UpdateFlowOutput_request_encryption'
        maxLatency:
          description: "The maximum latency in milliseconds. This parameter applies\
            \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
          title: maxLatency
          type: integer
        mediaStreamOutputConfigurations:
          description: "The media streams that are associated with the output, and\
            \ the parameters for those associations."
          items:
            $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'
          title: mediaStreamOutputConfigurations
          type: array
        minLatency:
          description: "The minimum latency in milliseconds for SRT-based streams.\
            \ In streams that use the SRT protocol, this value that you set on your\
            \ MediaConnect source or output represents the minimal potential latency\
            \ of that connection. The latency of the stream is set to the highest\
            \ number between the sender’s minimum latency and the receiver’s minimum\
            \ latency."
          title: minLatency
          type: integer
        port:
          description: The port to use when content is distributed to this output.
          title: port
          type: integer
        protocol:
          description: The protocol to use for the output.
          enum:
          - zixi-push
          - rtp-fec
          - rtp
          - zixi-pull
          - rist
          - st2110-jpegxs
          - cdi
          - srt-listener
          - srt-caller
          - fujitsu-qos
          - udp
          title: protocol
          type: string
        remoteId:
          description: The remote ID for the Zixi-pull stream.
          title: remoteId
          type: string
        senderControlPort:
          description: The port that the flow uses to send outbound requests to initiate
            connection with the sender.
          title: senderControlPort
          type: integer
        senderIpAddress:
          description: The IP address that the flow communicates with to initiate
            connection with the sender.
          title: senderIpAddress
          type: string
        smoothingLatency:
          description: "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC\
            \ streams."
          title: smoothingLatency
          type: integer
        streamId:
          description: The stream ID that you want to use for this transport. This
            parameter applies only to Zixi and SRT caller-based streams.
          title: streamId
          type: string
        vpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateFlowOutput_request_vpcInterfaceAttachment'
      title: UpdateFlowOutput_request
      type: object
    UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment:
      allOf:
      - $ref: '#/components/schemas/VpcInterfaceAttachment'
      - description: The name of the VPC interface attachment to use for this bridge
          source.
        xml:
          name: vpcInterfaceAttachment
      example:
        VpcInterfaceName: ""
      title: UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment
    UpdateFlowSource_request_gatewayBridgeSource:
      description: The source configuration for cloud flows receiving a stream from
        a bridge.
      properties:
        BridgeArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the bridge feeding this flow.
            pattern: ^arn:.+:mediaconnect.+:bridge:.+$
            xml:
              name: bridgeArn
          title: BridgeArn
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/UpdateFlowSource_request_gatewayBridgeSource_VpcInterfaceAttachment'
      title: UpdateFlowSource_request_gatewayBridgeSource
      type: object
    UpdateFlowSource_request:
      properties:
        decryption:
          $ref: '#/components/schemas/UpdateFlowOutput_request_encryption'
        description:
          description: A description for the source. This value is not used or seen
            outside of the current AWS Elemental MediaConnect account.
          title: description
          type: string
        entitlementArn:
          description: "The ARN of the entitlement that allows you to subscribe to\
            \ this flow. The entitlement is set by the flow originator, and the ARN\
            \ is generated as part of the originator's flow."
          title: entitlementArn
          type: string
        ingestPort:
          description: The port that the flow will be listening on for incoming content.
          title: ingestPort
          type: integer
        maxBitrate:
          description: "The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC\
            \ streams."
          title: maxBitrate
          type: integer
        maxLatency:
          description: "The maximum latency in milliseconds. This parameter applies\
            \ only to RIST-based, Zixi-based, and Fujitsu-based streams."
          title: maxLatency
          type: integer
        maxSyncBuffer:
          description: The size of the buffer (in milliseconds) to use to sync incoming
            source data.
          title: maxSyncBuffer
          type: integer
        mediaStreamSourceConfigurations:
          description: "The media streams that are associated with the source, and\
            \ the parameters for those associations."
          items:
            $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'
          title: mediaStreamSourceConfigurations
          type: array
        minLatency:
          description: "The minimum latency in milliseconds for SRT-based streams.\
            \ In streams that use the SRT protocol, this value that you set on your\
            \ MediaConnect source or output represents the minimal potential latency\
            \ of that connection. The latency of the stream is set to the highest\
            \ number between the sender’s minimum latency and the receiver’s minimum\
            \ latency."
          title: minLatency
          type: integer
        protocol:
          description: The protocol that is used by the source.
          enum:
          - zixi-push
          - rtp-fec
          - rtp
          - zixi-pull
          - rist
          - st2110-jpegxs
          - cdi
          - srt-listener
          - srt-caller
          - fujitsu-qos
          - udp
          title: protocol
          type: string
        senderControlPort:
          description: The port that the flow uses to send outbound requests to initiate
            connection with the sender.
          title: senderControlPort
          type: integer
        senderIpAddress:
          description: The IP address that the flow communicates with to initiate
            connection with the sender.
          title: senderIpAddress
          type: string
        sourceListenerAddress:
          description: Source IP or domain name for SRT-caller protocol.
          title: sourceListenerAddress
          type: string
        sourceListenerPort:
          description: Source port for SRT-caller protocol.
          title: sourceListenerPort
          type: integer
        streamId:
          description: The stream ID that you want to use for this transport. This
            parameter applies only to Zixi and SRT caller-based streams.
          title: streamId
          type: string
        vpcInterfaceName:
          description: The name of the VPC interface to use for this source.
          title: vpcInterfaceName
          type: string
        whitelistCidr:
          description: "The range of IP addresses that should be allowed to contribute\
            \ content to your source. These IP addresses should be in the form of\
            \ a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
          title: whitelistCidr
          type: string
        gatewayBridgeSource:
          $ref: '#/components/schemas/UpdateFlowSource_request_gatewayBridgeSource'
      title: UpdateFlowSource_request
      type: object
    UpdateFlowEntitlement_request:
      properties:
        description:
          description: A description of the entitlement. This description appears
            only on the AWS Elemental MediaConnect console and will not be seen by
            the subscriber or end user.
          title: description
          type: string
        encryption:
          $ref: '#/components/schemas/UpdateFlowOutput_request_encryption'
        entitlementStatus:
          description: "An indication of whether you want to enable the entitlement\
            \ to allow access, or disable it to stop streaming content to the subscriber’\
            s flow temporarily. If you don’t specify the entitlementStatus field in\
            \ your request, MediaConnect leaves the value unchanged."
          enum:
          - ENABLED
          - DISABLED
          title: entitlementStatus
          type: string
        subscribers:
          description: The AWS account IDs that you want to share your content with.
            The receiving accounts (subscribers) will be allowed to create their own
            flow using your content as the source.
          items:
            $ref: '#/components/schemas/__string'
          title: subscribers
          type: array
      title: UpdateFlowEntitlement_request
      type: object
    UpdateBridgeState_request:
      properties:
        desiredState:
          description: ""
          enum:
          - ACTIVE
          - STANDBY
          - DELETED
          title: desiredState
          type: string
      required:
      - desiredState
      title: UpdateBridgeState_request
      type: object
    AddBridgeOutputRequest_NetworkOutput:
      allOf:
      - $ref: '#/components/schemas/AddBridgeNetworkOutputRequest'
      - xml:
          name: networkOutput
      title: AddBridgeOutputRequest_NetworkOutput
    AddBridgeSourceRequest_FlowSource:
      allOf:
      - $ref: '#/components/schemas/AddBridgeFlowSourceRequest'
      - xml:
          name: flowSource
      title: AddBridgeSourceRequest_FlowSource
    AddBridgeSourceRequest_NetworkSource:
      allOf:
      - $ref: '#/components/schemas/AddBridgeNetworkSourceRequest'
      - xml:
          name: networkSource
      title: AddBridgeSourceRequest_NetworkSource
    AddMediaStreamRequest_Attributes:
      allOf:
      - $ref: '#/components/schemas/MediaStreamAttributesRequest'
      - description: The attributes that you want to assign to the new media stream.
        xml:
          name: attributes
      title: AddMediaStreamRequest_Attributes
    AddOutputRequest_Encryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: "The type of key used for the encryption. If no keyType is provided,\
          \ the service will use the default setting (static-key). Allowable encryption\
          \ types: static-key."
        xml:
          name: encryption
      title: AddOutputRequest_Encryption
    AddOutputRequest_VpcInterfaceAttachment:
      allOf:
      - $ref: '#/components/schemas/VpcInterfaceAttachment'
      - description: The name of the VPC interface attachment to use for this output.
        xml:
          name: vpcInterfaceAttachment
      example:
        VpcInterfaceName: ""
      title: AddOutputRequest_VpcInterfaceAttachment
    CreateBridgeResponse_Bridge:
      allOf:
      - $ref: '#/components/schemas/Bridge'
      - xml:
          name: bridge
      example:
        BridgeMessages: ""
        BridgeArn: ""
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        EgressGatewayBridge:
          InstanceId: ""
          MaxBitrate: ""
        IngressGatewayBridge:
          MaxOutputs: ""
          InstanceId: ""
          MaxBitrate: ""
        Outputs: ""
        BridgeState: ""
        PlacementArn: ""
        Sources: ""
        Name: ""
      title: CreateBridgeResponse_Bridge
    CreateFlowResponse_Flow:
      allOf:
      - $ref: '#/components/schemas/Flow'
      - xml:
          name: flow
      example:
        Status: ""
        Description: ""
        SourceFailoverConfig:
          SourcePriority:
            PrimarySource: ""
          State: ""
          FailoverMode: ""
          RecoveryWindow: ""
        MediaStreams: ""
        AvailabilityZone: ""
        Maintenance:
          MaintenanceDay: ""
          MaintenanceScheduledDate: ""
          MaintenanceDeadline: ""
          MaintenanceStartHour: ""
        Sources: ""
        Source:
          IngestIp: ""
          DataTransferSubscriberFeePercent: ""
          Description: ""
          SenderIpAddress: ""
          MediaStreamSourceConfigurations: ""
          IngestPort: ""
          SenderControlPort: ""
          Decryption:
            SecretArn: ""
            KeyType: ""
            ResourceId: ""
            DeviceId: ""
            Region: ""
            ConstantInitializationVector: ""
            Algorithm: ""
            RoleArn: ""
            Url: ""
          GatewayBridgeSource:
            BridgeArn: ""
            VpcInterfaceAttachment:
              VpcInterfaceName: ""
          Name: ""
          WhitelistCidr: ""
          EntitlementArn: ""
          SourceArn: ""
          VpcInterfaceName: ""
          Transport:
            MaxSyncBuffer: ""
            SmoothingLatency: ""
            StreamId: ""
            SenderIpAddress: ""
            RemoteId: ""
            SenderControlPort: ""
            SourceListenerAddress: ""
            SourceListenerPort: ""
            MinLatency: ""
            MaxBitrate: ""
            Protocol: ""
            MaxLatency: ""
            CidrAllowList: ""
        Name: ""
        VpcInterfaces: ""
        Entitlements: ""
        Outputs: ""
        EgressIp: ""
        FlowArn: ""
      title: CreateFlowResponse_Flow
    GrantEntitlementRequest_Encryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: "The type of encryption that will be used on the output that\
          \ is associated with this entitlement. Allowable encryption types: static-key,\
          \ speke."
        xml:
          name: encryption
      title: GrantEntitlementRequest_Encryption
    CreateGatewayResponse_Gateway:
      allOf:
      - $ref: '#/components/schemas/Gateway'
      - xml:
          name: gateway
      example:
        GatewayArn: ""
        Networks: ""
        GatewayMessages: ""
        GatewayState: ""
        EgressCidrBlocks: ""
        Name: ""
      title: CreateGatewayResponse_Gateway
    DescribeFlowResponse_Messages:
      allOf:
      - $ref: '#/components/schemas/Messages'
      - xml:
          name: messages
      example:
        Errors: ""
      title: DescribeFlowResponse_Messages
    DescribeGatewayInstanceResponse_GatewayInstance:
      allOf:
      - $ref: '#/components/schemas/GatewayInstance'
      - xml:
          name: gatewayInstance
      example:
        GatewayArn: ""
        InstanceState: ""
        GatewayInstanceArn: ""
        InstanceId: ""
        RunningBridgeCount: ""
        BridgePlacement: ""
        InstanceMessages: ""
        ConnectionStatus: ""
      title: DescribeGatewayInstanceResponse_GatewayInstance
    DescribeOfferingResponse_Offering:
      allOf:
      - $ref: '#/components/schemas/Offering'
      - xml:
          name: offering
      example:
        CurrencyCode: ""
        OfferingArn: ""
        OfferingDescription: ""
        Duration: ""
        DurationUnits: ""
        PricePerUnit: ""
        ResourceSpecification:
          ReservedBitrate: ""
          ResourceType: ""
        PriceUnits: ""
      title: DescribeOfferingResponse_Offering
    DescribeReservationResponse_Reservation:
      allOf:
      - $ref: '#/components/schemas/Reservation'
      - xml:
          name: reservation
      example:
        ReservationState: ""
        Start: ""
        Duration: ""
        DurationUnits: ""
        ResourceSpecification:
          ReservedBitrate: ""
          ResourceType: ""
        PriceUnits: ""
        CurrencyCode: ""
        OfferingArn: ""
        ReservationArn: ""
        OfferingDescription: ""
        ReservationName: ""
        End: ""
        PricePerUnit: ""
      title: DescribeReservationResponse_Reservation
    UpdateBridgeOutputResponse_Output:
      allOf:
      - $ref: '#/components/schemas/BridgeOutput'
      - description: The output that you updated.
        xml:
          name: output
      example:
        NetworkOutput:
          NetworkName: ""
          Port: ""
          IpAddress: ""
          Protocol: ""
          Ttl: ""
          Name: ""
        FlowOutput:
          FlowSourceArn: ""
          FlowArn: ""
          Name: ""
      title: UpdateBridgeOutputResponse_Output
    UpdateBridgeSourceResponse_Source:
      allOf:
      - $ref: '#/components/schemas/BridgeSource'
      - xml:
          name: source
      example:
        NetworkSource:
          NetworkName: ""
          MulticastIp: ""
          Port: ""
          Protocol: ""
          Name: ""
        FlowSource:
          FlowVpcInterfaceAttachment:
            VpcInterfaceName: ""
          OutputArn: ""
          FlowArn: ""
          Name: ""
      title: UpdateBridgeSourceResponse_Source
    UpdateFlowEntitlementResponse_Entitlement:
      allOf:
      - $ref: '#/components/schemas/Entitlement'
      - description: The new configuration of the entitlement that you updated.
        xml:
          name: entitlement
      example:
        EntitlementArn: ""
        DataTransferSubscriberFeePercent: ""
        Description: ""
        Encryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        Subscribers: ""
        EntitlementStatus: ""
        Name: ""
      title: UpdateFlowEntitlementResponse_Entitlement
    UpdateFlowMediaStreamResponse_MediaStream:
      allOf:
      - $ref: '#/components/schemas/MediaStream'
      - description: The media stream that you updated.
        xml:
          name: mediaStream
      example:
        MediaStreamType: ""
        Description: ""
        MediaStreamId: ""
        MediaStreamName: ""
        Attributes:
          Fmtp:
            Par: ""
            ScanMode: ""
            Tcs: ""
            ExactFramerate: ""
            ChannelOrder: ""
            Colorimetry: ""
            Range: ""
          Lang: ""
        ClockRate: ""
        Fmt: ""
        VideoFormat: ""
      title: UpdateFlowMediaStreamResponse_MediaStream
    UpdateFlowOutputResponse_Output:
      allOf:
      - $ref: '#/components/schemas/Output'
      - description: The new settings of the output that you updated.
        xml:
          name: output
      example:
        MediaLiveInputArn: ""
        Destination: ""
        BridgePorts: ""
        DataTransferSubscriberFeePercent: ""
        Description: ""
        OutputArn: ""
        BridgeArn: ""
        Port: ""
        MediaStreamOutputConfigurations: ""
        Encryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        Name: ""
        EntitlementArn: ""
        VpcInterfaceAttachment:
          VpcInterfaceName: ""
        ListenerAddress: ""
        Transport:
          MaxSyncBuffer: ""
          SmoothingLatency: ""
          StreamId: ""
          SenderIpAddress: ""
          RemoteId: ""
          SenderControlPort: ""
          SourceListenerAddress: ""
          SourceListenerPort: ""
          MinLatency: ""
          MaxBitrate: ""
          Protocol: ""
          MaxLatency: ""
          CidrAllowList: ""
      title: UpdateFlowOutputResponse_Output
    MediaStreamOutputConfigurationRequest_EncodingParameters:
      allOf:
      - $ref: '#/components/schemas/EncodingParametersRequest'
      - description: A collection of parameters that determine how MediaConnect will
          convert the content. These fields only apply to outputs on flows that have
          a CDI source.
        xml:
          name: encodingParameters
      title: MediaStreamOutputConfigurationRequest_EncodingParameters
    UpdateFlowSourceResponse_Source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - description: The settings for the source of the flow.
        xml:
          name: source
      example:
        IngestIp: ""
        DataTransferSubscriberFeePercent: ""
        Description: ""
        SenderIpAddress: ""
        MediaStreamSourceConfigurations: ""
        IngestPort: ""
        SenderControlPort: ""
        Decryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        GatewayBridgeSource:
          BridgeArn: ""
          VpcInterfaceAttachment:
            VpcInterfaceName: ""
        Name: ""
        WhitelistCidr: ""
        EntitlementArn: ""
        SourceArn: ""
        VpcInterfaceName: ""
        Transport:
          MaxSyncBuffer: ""
          SmoothingLatency: ""
          StreamId: ""
          SenderIpAddress: ""
          RemoteId: ""
          SenderControlPort: ""
          SourceListenerAddress: ""
          SourceListenerPort: ""
          MinLatency: ""
          MaxBitrate: ""
          Protocol: ""
          MaxLatency: ""
          CidrAllowList: ""
      title: UpdateFlowSourceResponse_Source
    Bridge_EgressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/EgressGatewayBridge'
      - xml:
          name: egressGatewayBridge
      example:
        InstanceId: ""
        MaxBitrate: ""
      title: Bridge_EgressGatewayBridge
    Bridge_IngressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/IngressGatewayBridge'
      - xml:
          name: ingressGatewayBridge
      example:
        MaxOutputs: ""
        InstanceId: ""
        MaxBitrate: ""
      title: Bridge_IngressGatewayBridge
    Bridge_SourceFailoverConfig:
      allOf:
      - $ref: '#/components/schemas/FailoverConfig'
      - xml:
          name: sourceFailoverConfig
      example:
        SourcePriority:
          PrimarySource: ""
        State: ""
        FailoverMode: ""
        RecoveryWindow: ""
      title: Bridge_SourceFailoverConfig
    BridgeOutput_FlowOutput:
      allOf:
      - $ref: '#/components/schemas/BridgeFlowOutput'
      - xml:
          name: flowOutput
      example:
        FlowSourceArn: ""
        FlowArn: ""
        Name: ""
      title: BridgeOutput_FlowOutput
    BridgeOutput_NetworkOutput:
      allOf:
      - $ref: '#/components/schemas/BridgeNetworkOutput'
      - xml:
          name: networkOutput
      example:
        NetworkName: ""
        Port: ""
        IpAddress: ""
        Protocol: ""
        Ttl: ""
        Name: ""
      title: BridgeOutput_NetworkOutput
    BridgeSource_FlowSource:
      allOf:
      - $ref: '#/components/schemas/BridgeFlowSource'
      - xml:
          name: flowSource
      example:
        FlowVpcInterfaceAttachment:
          VpcInterfaceName: ""
        OutputArn: ""
        FlowArn: ""
        Name: ""
      title: BridgeSource_FlowSource
    BridgeSource_NetworkSource:
      allOf:
      - $ref: '#/components/schemas/BridgeNetworkSource'
      - xml:
          name: networkSource
      example:
        NetworkName: ""
        MulticastIp: ""
        Port: ""
        Protocol: ""
        Name: ""
      title: BridgeSource_NetworkSource
    CreateBridgeRequest_EgressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/AddEgressGatewayBridgeRequest'
      - description: Create a bridge with the egress bridge type. An egress bridge
          is a cloud-to-ground bridge. The content comes from an existing MediaConnect
          flow and is delivered to your premises.
        xml:
          name: egressGatewayBridge
      example:
        MaxBitrate: ""
      title: CreateBridgeRequest_EgressGatewayBridge
    CreateBridgeRequest_IngressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/AddIngressGatewayBridgeRequest'
      - description: Create a bridge with the ingress bridge type. An ingress bridge
          is a ground-to-cloud bridge. The content originates at your premises and
          is delivered to the cloud.
        xml:
          name: ingressGatewayBridge
      example:
        MaxOutputs: ""
        MaxBitrate: ""
      title: CreateBridgeRequest_IngressGatewayBridge
    CreateBridgeRequest_SourceFailoverConfig:
      allOf:
      - $ref: '#/components/schemas/FailoverConfig'
      - description: The settings for source failover.
        xml:
          name: sourceFailoverConfig
      example:
        SourcePriority:
          PrimarySource: ""
        State: ""
        FailoverMode: ""
        RecoveryWindow: ""
      title: CreateBridgeRequest_SourceFailoverConfig
    CreateFlowRequest_Source:
      allOf:
      - $ref: '#/components/schemas/SetSourceRequest'
      - xml:
          name: source
      example:
        MaxSyncBuffer: ""
        StreamId: ""
        Description: ""
        SenderIpAddress: ""
        MediaStreamSourceConfigurations: ""
        IngestPort: ""
        SenderControlPort: ""
        Decryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        GatewayBridgeSource:
          BridgeArn: ""
          VpcInterfaceAttachment:
            VpcInterfaceName: ""
        SourceListenerAddress: ""
        SourceListenerPort: ""
        Name: ""
        WhitelistCidr: ""
        EntitlementArn: ""
        MinLatency: ""
        VpcInterfaceName: ""
        MaxBitrate: ""
        Protocol: ""
        MaxLatency: ""
      title: CreateFlowRequest_Source
    CreateFlowRequest_Maintenance:
      allOf:
      - $ref: '#/components/schemas/AddMaintenance'
      - xml:
          name: maintenance
      example:
        MaintenanceDay: ""
        MaintenanceStartHour: ""
      title: CreateFlowRequest_Maintenance
    Flow_Source:
      allOf:
      - $ref: '#/components/schemas/Source'
      - xml:
          name: source
      example:
        IngestIp: ""
        DataTransferSubscriberFeePercent: ""
        Description: ""
        SenderIpAddress: ""
        MediaStreamSourceConfigurations: ""
        IngestPort: ""
        SenderControlPort: ""
        Decryption:
          SecretArn: ""
          KeyType: ""
          ResourceId: ""
          DeviceId: ""
          Region: ""
          ConstantInitializationVector: ""
          Algorithm: ""
          RoleArn: ""
          Url: ""
        GatewayBridgeSource:
          BridgeArn: ""
          VpcInterfaceAttachment:
            VpcInterfaceName: ""
        Name: ""
        WhitelistCidr: ""
        EntitlementArn: ""
        SourceArn: ""
        VpcInterfaceName: ""
        Transport:
          MaxSyncBuffer: ""
          SmoothingLatency: ""
          StreamId: ""
          SenderIpAddress: ""
          RemoteId: ""
          SenderControlPort: ""
          SourceListenerAddress: ""
          SourceListenerPort: ""
          MinLatency: ""
          MaxBitrate: ""
          Protocol: ""
          MaxLatency: ""
          CidrAllowList: ""
      title: Flow_Source
    Flow_Maintenance:
      allOf:
      - $ref: '#/components/schemas/Maintenance'
      - xml:
          name: maintenance
      example:
        MaintenanceDay: ""
        MaintenanceScheduledDate: ""
        MaintenanceDeadline: ""
        MaintenanceStartHour: ""
      title: Flow_Maintenance
    Offering_ResourceSpecification:
      allOf:
      - $ref: '#/components/schemas/ResourceSpecification'
      - description: A definition of the amount of outbound bandwidth that you would
          be reserving if you purchase the offering.
        xml:
          name: resourceSpecification
      example:
        ReservedBitrate: ""
        ResourceType: ""
      title: Offering_ResourceSpecification
    Reservation_ResourceSpecification:
      allOf:
      - $ref: '#/components/schemas/ResourceSpecification'
      - description: A definition of the amount of outbound bandwidth that you would
          be reserving if you purchase the offering. MediaConnect defines the values
          that make up the resourceSpecification in the offering.
        xml:
          name: resourceSpecification
      example:
        ReservedBitrate: ""
        ResourceType: ""
      title: Reservation_ResourceSpecification
    DestinationConfiguration_Interface:
      allOf:
      - $ref: '#/components/schemas/Interface'
      - description: The VPC interface that is used for the media stream associated
          with the output.
        xml:
          name: interface
      title: DestinationConfiguration_Interface
    DestinationConfigurationRequest_Interface:
      allOf:
      - $ref: '#/components/schemas/InterfaceRequest'
      - description: The VPC interface that you want to use for the media stream associated
          with the output.
        xml:
          name: interface
      title: DestinationConfigurationRequest_Interface
    Entitlement_Encryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: The type of encryption that will be used on the output that is
          associated with this entitlement.
        xml:
          name: encryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: Entitlement_Encryption
    Source_Decryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: The type of encryption that is used on the content ingested from
          this source.
        xml:
          name: decryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: Source_Decryption
    Source_Transport:
      allOf:
      - $ref: '#/components/schemas/Transport'
      - description: Attributes related to the transport stream that are used in the
          source.
        xml:
          name: transport
      example:
        MaxSyncBuffer: ""
        SmoothingLatency: ""
        StreamId: ""
        SenderIpAddress: ""
        RemoteId: ""
        SenderControlPort: ""
        SourceListenerAddress: ""
        SourceListenerPort: ""
        MinLatency: ""
        MaxBitrate: ""
        Protocol: ""
        MaxLatency: ""
        CidrAllowList: ""
      title: Source_Transport
    Source_GatewayBridgeSource:
      allOf:
      - $ref: '#/components/schemas/GatewayBridgeSource'
      - description: The source configuration for cloud flows receiving a stream from
          a bridge.
        xml:
          name: gatewayBridgeSource
      example:
        BridgeArn: ""
        VpcInterfaceAttachment:
          VpcInterfaceName: ""
      title: Source_GatewayBridgeSource
    InputConfiguration_Interface:
      allOf:
      - $ref: '#/components/schemas/Interface'
      - description: The VPC interface where the media stream comes in from.
        xml:
          name: interface
      title: InputConfiguration_Interface
    InputConfigurationRequest_Interface:
      allOf:
      - $ref: '#/components/schemas/InterfaceRequest'
      - description: The VPC interface that you want to use for the incoming media
          stream.
        xml:
          name: interface
      title: InputConfigurationRequest_Interface
    MediaStreamAttributes_Fmtp:
      allOf:
      - $ref: '#/components/schemas/Fmtp'
      - description: A set of parameters that define the media stream.
        xml:
          name: fmtp
      example:
        Par: ""
        ScanMode: ""
        Tcs: ""
        ExactFramerate: ""
        ChannelOrder: ""
        Colorimetry: ""
        Range: ""
      title: MediaStreamAttributes_Fmtp
    MediaStream_Attributes:
      allOf:
      - $ref: '#/components/schemas/MediaStreamAttributes'
      - description: Attributes that are related to the media stream.
        xml:
          name: attributes
      example:
        Fmtp:
          Par: ""
          ScanMode: ""
          Tcs: ""
          ExactFramerate: ""
          ChannelOrder: ""
          Colorimetry: ""
          Range: ""
        Lang: ""
      title: MediaStream_Attributes
    MediaStreamOutputConfiguration_EncodingParameters:
      allOf:
      - $ref: '#/components/schemas/EncodingParameters'
      - description: Encoding parameters
        xml:
          name: encodingParameters
      title: MediaStreamOutputConfiguration_EncodingParameters
    Output_Encryption:
      allOf:
      - $ref: '#/components/schemas/Encryption'
      - description: "The type of key used for the encryption. If no keyType is provided,\
          \ the service will use the default setting (static-key)."
        xml:
          name: encryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: Output_Encryption
    Output_Transport:
      allOf:
      - $ref: '#/components/schemas/Transport'
      - description: Attributes related to the transport stream that are used in the
          output.
        xml:
          name: transport
      example:
        MaxSyncBuffer: ""
        SmoothingLatency: ""
        StreamId: ""
        SenderIpAddress: ""
        RemoteId: ""
        SenderControlPort: ""
        SourceListenerAddress: ""
        SourceListenerPort: ""
        MinLatency: ""
        MaxBitrate: ""
        Protocol: ""
        MaxLatency: ""
        CidrAllowList: ""
      title: Output_Transport
    UpdateBridgeOutputRequest_NetworkOutput:
      allOf:
      - $ref: '#/components/schemas/UpdateBridgeNetworkOutputRequest'
      - xml:
          name: networkOutput
      example:
        NetworkName: ""
        Port: ""
        IpAddress: ""
        Protocol: ""
        Ttl: ""
      title: UpdateBridgeOutputRequest_NetworkOutput
    UpdateBridgeRequest_EgressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/UpdateEgressGatewayBridgeRequest'
      - xml:
          name: egressGatewayBridge
      example:
        MaxBitrate: ""
      title: UpdateBridgeRequest_EgressGatewayBridge
    UpdateBridgeRequest_IngressGatewayBridge:
      allOf:
      - $ref: '#/components/schemas/UpdateIngressGatewayBridgeRequest'
      - xml:
          name: ingressGatewayBridge
      example:
        MaxOutputs: ""
        MaxBitrate: ""
      title: UpdateBridgeRequest_IngressGatewayBridge
    UpdateBridgeRequest_SourceFailoverConfig:
      allOf:
      - $ref: '#/components/schemas/UpdateFailoverConfig'
      - xml:
          name: sourceFailoverConfig
      example:
        SourcePriority:
          PrimarySource: ""
        State: ""
        FailoverMode: ""
        RecoveryWindow: ""
      title: UpdateBridgeRequest_SourceFailoverConfig
    UpdateBridgeSourceRequest_FlowSource:
      allOf:
      - $ref: '#/components/schemas/UpdateBridgeFlowSourceRequest'
      - xml:
          name: flowSource
      example:
        FlowVpcInterfaceAttachment:
          VpcInterfaceName: ""
        FlowArn: ""
      title: UpdateBridgeSourceRequest_FlowSource
    UpdateBridgeSourceRequest_NetworkSource:
      allOf:
      - $ref: '#/components/schemas/UpdateBridgeNetworkSourceRequest'
      - xml:
          name: networkSource
      example:
        NetworkName: ""
        MulticastIp: ""
        Port: ""
        Protocol: ""
      title: UpdateBridgeSourceRequest_NetworkSource
    UpdateFlowEntitlementRequest_Encryption:
      allOf:
      - $ref: '#/components/schemas/UpdateEncryption'
      - description: "The type of encryption that will be used on the output associated\
          \ with this entitlement. Allowable encryption types: static-key, speke."
        xml:
          name: encryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: UpdateFlowEntitlementRequest_Encryption
    UpdateFlowMediaStreamRequest_Attributes:
      allOf:
      - $ref: '#/components/schemas/MediaStreamAttributesRequest'
      - description: The attributes that you want to assign to the media stream.
        xml:
          name: attributes
      example:
        Fmtp:
          Par: ""
          ScanMode: ""
          Tcs: ""
          ExactFramerate: ""
          ChannelOrder: ""
          Colorimetry: ""
          Range: ""
        Lang: ""
      title: UpdateFlowMediaStreamRequest_Attributes
    UpdateFlowOutputRequest_Encryption:
      allOf:
      - $ref: '#/components/schemas/UpdateEncryption'
      - description: "The type of key used for the encryption. If no keyType is provided,\
          \ the service will use the default setting (static-key). Allowable encryption\
          \ types: static-key."
        xml:
          name: encryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: UpdateFlowOutputRequest_Encryption
    UpdateFlowRequest_Maintenance:
      allOf:
      - $ref: '#/components/schemas/UpdateMaintenance'
      - xml:
          name: maintenance
      example:
        MaintenanceDay: ""
        MaintenanceScheduledDate: ""
        MaintenanceStartHour: ""
      title: UpdateFlowRequest_Maintenance
    UpdateFlowSourceRequest_Decryption:
      allOf:
      - $ref: '#/components/schemas/UpdateEncryption'
      - description: "The type of encryption used on the content ingested from this\
          \ source. Allowable encryption types: static-key."
        xml:
          name: decryption
      example:
        SecretArn: ""
        KeyType: ""
        ResourceId: ""
        DeviceId: ""
        Region: ""
        ConstantInitializationVector: ""
        Algorithm: ""
        RoleArn: ""
        Url: ""
      title: UpdateFlowSourceRequest_Decryption
    UpdateFlowSourceRequest_GatewayBridgeSource:
      allOf:
      - $ref: '#/components/schemas/UpdateGatewayBridgeSourceRequest'
      - description: The source configuration for cloud flows receiving a stream from
          a bridge.
        xml:
          name: gatewayBridgeSource
      example:
        BridgeArn: ""
        VpcInterfaceAttachment:
          VpcInterfaceName: ""
      title: UpdateFlowSourceRequest_GatewayBridgeSource
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
