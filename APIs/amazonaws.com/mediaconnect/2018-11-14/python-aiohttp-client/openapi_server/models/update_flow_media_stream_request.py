# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_flow_media_stream_request_attributes import UpdateFlowMediaStreamRequestAttributes
from openapi_server import util


class UpdateFlowMediaStreamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: UpdateFlowMediaStreamRequestAttributes=None, clock_rate: int=None, description: str=None, media_stream_type: str=None, video_format: str=None):
        """UpdateFlowMediaStreamRequest - a model defined in OpenAPI

        :param attributes: The attributes of this UpdateFlowMediaStreamRequest.
        :param clock_rate: The clock_rate of this UpdateFlowMediaStreamRequest.
        :param description: The description of this UpdateFlowMediaStreamRequest.
        :param media_stream_type: The media_stream_type of this UpdateFlowMediaStreamRequest.
        :param video_format: The video_format of this UpdateFlowMediaStreamRequest.
        """
        self.openapi_types = {
            'attributes': UpdateFlowMediaStreamRequestAttributes,
            'clock_rate': int,
            'description': str,
            'media_stream_type': str,
            'video_format': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'clock_rate': 'clockRate',
            'description': 'description',
            'media_stream_type': 'mediaStreamType',
            'video_format': 'videoFormat'
        }

        self._attributes = attributes
        self._clock_rate = clock_rate
        self._description = description
        self._media_stream_type = media_stream_type
        self._video_format = video_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFlowMediaStreamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFlowMediaStream_request of this UpdateFlowMediaStreamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this UpdateFlowMediaStreamRequest.


        :return: The attributes of this UpdateFlowMediaStreamRequest.
        :rtype: UpdateFlowMediaStreamRequestAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this UpdateFlowMediaStreamRequest.


        :param attributes: The attributes of this UpdateFlowMediaStreamRequest.
        :type attributes: UpdateFlowMediaStreamRequestAttributes
        """

        self._attributes = attributes

    @property
    def clock_rate(self):
        """Gets the clock_rate of this UpdateFlowMediaStreamRequest.

        The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.

        :return: The clock_rate of this UpdateFlowMediaStreamRequest.
        :rtype: int
        """
        return self._clock_rate

    @clock_rate.setter
    def clock_rate(self, clock_rate):
        """Sets the clock_rate of this UpdateFlowMediaStreamRequest.

        The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.

        :param clock_rate: The clock_rate of this UpdateFlowMediaStreamRequest.
        :type clock_rate: int
        """

        self._clock_rate = clock_rate

    @property
    def description(self):
        """Gets the description of this UpdateFlowMediaStreamRequest.

        Description

        :return: The description of this UpdateFlowMediaStreamRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateFlowMediaStreamRequest.

        Description

        :param description: The description of this UpdateFlowMediaStreamRequest.
        :type description: str
        """

        self._description = description

    @property
    def media_stream_type(self):
        """Gets the media_stream_type of this UpdateFlowMediaStreamRequest.

        The type of media stream.

        :return: The media_stream_type of this UpdateFlowMediaStreamRequest.
        :rtype: str
        """
        return self._media_stream_type

    @media_stream_type.setter
    def media_stream_type(self, media_stream_type):
        """Sets the media_stream_type of this UpdateFlowMediaStreamRequest.

        The type of media stream.

        :param media_stream_type: The media_stream_type of this UpdateFlowMediaStreamRequest.
        :type media_stream_type: str
        """
        allowed_values = ["video", "audio", "ancillary-data"]  # noqa: E501
        if media_stream_type not in allowed_values:
            raise ValueError(
                "Invalid value for `media_stream_type` ({0}), must be one of {1}"
                .format(media_stream_type, allowed_values)
            )

        self._media_stream_type = media_stream_type

    @property
    def video_format(self):
        """Gets the video_format of this UpdateFlowMediaStreamRequest.

        The resolution of the video.

        :return: The video_format of this UpdateFlowMediaStreamRequest.
        :rtype: str
        """
        return self._video_format

    @video_format.setter
    def video_format(self, video_format):
        """Sets the video_format of this UpdateFlowMediaStreamRequest.

        The resolution of the video.

        :param video_format: The video_format of this UpdateFlowMediaStreamRequest.
        :type video_format: str
        """

        self._video_format = video_format
