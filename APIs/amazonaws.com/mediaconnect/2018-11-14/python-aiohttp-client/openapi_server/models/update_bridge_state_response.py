# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.desired_state import DesiredState
from openapi_server import util


class UpdateBridgeStateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bridge_arn: str=None, desired_state: DesiredState=None):
        """UpdateBridgeStateResponse - a model defined in OpenAPI

        :param bridge_arn: The bridge_arn of this UpdateBridgeStateResponse.
        :param desired_state: The desired_state of this UpdateBridgeStateResponse.
        """
        self.openapi_types = {
            'bridge_arn': str,
            'desired_state': DesiredState
        }

        self.attribute_map = {
            'bridge_arn': 'BridgeArn',
            'desired_state': 'DesiredState'
        }

        self._bridge_arn = bridge_arn
        self._desired_state = desired_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBridgeStateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBridgeStateResponse of this UpdateBridgeStateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bridge_arn(self):
        """Gets the bridge_arn of this UpdateBridgeStateResponse.


        :return: The bridge_arn of this UpdateBridgeStateResponse.
        :rtype: str
        """
        return self._bridge_arn

    @bridge_arn.setter
    def bridge_arn(self, bridge_arn):
        """Sets the bridge_arn of this UpdateBridgeStateResponse.


        :param bridge_arn: The bridge_arn of this UpdateBridgeStateResponse.
        :type bridge_arn: str
        """

        self._bridge_arn = bridge_arn

    @property
    def desired_state(self):
        """Gets the desired_state of this UpdateBridgeStateResponse.


        :return: The desired_state of this UpdateBridgeStateResponse.
        :rtype: DesiredState
        """
        return self._desired_state

    @desired_state.setter
    def desired_state(self, desired_state):
        """Sets the desired_state of this UpdateBridgeStateResponse.


        :param desired_state: The desired_state of this UpdateBridgeStateResponse.
        :type desired_state: DesiredState
        """

        self._desired_state = desired_state
