# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_flow_output_request_encryption import UpdateFlowOutputRequestEncryption
from openapi_server import util


class UpdateFlowEntitlementRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, encryption: UpdateFlowOutputRequestEncryption=None, entitlement_status: str=None, subscribers: List[str]=None):
        """UpdateFlowEntitlementRequest - a model defined in OpenAPI

        :param description: The description of this UpdateFlowEntitlementRequest.
        :param encryption: The encryption of this UpdateFlowEntitlementRequest.
        :param entitlement_status: The entitlement_status of this UpdateFlowEntitlementRequest.
        :param subscribers: The subscribers of this UpdateFlowEntitlementRequest.
        """
        self.openapi_types = {
            'description': str,
            'encryption': UpdateFlowOutputRequestEncryption,
            'entitlement_status': str,
            'subscribers': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'encryption': 'encryption',
            'entitlement_status': 'entitlementStatus',
            'subscribers': 'subscribers'
        }

        self._description = description
        self._encryption = encryption
        self._entitlement_status = entitlement_status
        self._subscribers = subscribers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFlowEntitlementRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFlowEntitlement_request of this UpdateFlowEntitlementRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UpdateFlowEntitlementRequest.

        A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.

        :return: The description of this UpdateFlowEntitlementRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateFlowEntitlementRequest.

        A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.

        :param description: The description of this UpdateFlowEntitlementRequest.
        :type description: str
        """

        self._description = description

    @property
    def encryption(self):
        """Gets the encryption of this UpdateFlowEntitlementRequest.


        :return: The encryption of this UpdateFlowEntitlementRequest.
        :rtype: UpdateFlowOutputRequestEncryption
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this UpdateFlowEntitlementRequest.


        :param encryption: The encryption of this UpdateFlowEntitlementRequest.
        :type encryption: UpdateFlowOutputRequestEncryption
        """

        self._encryption = encryption

    @property
    def entitlement_status(self):
        """Gets the entitlement_status of this UpdateFlowEntitlementRequest.

        An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.

        :return: The entitlement_status of this UpdateFlowEntitlementRequest.
        :rtype: str
        """
        return self._entitlement_status

    @entitlement_status.setter
    def entitlement_status(self, entitlement_status):
        """Sets the entitlement_status of this UpdateFlowEntitlementRequest.

        An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.

        :param entitlement_status: The entitlement_status of this UpdateFlowEntitlementRequest.
        :type entitlement_status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if entitlement_status not in allowed_values:
            raise ValueError(
                "Invalid value for `entitlement_status` ({0}), must be one of {1}"
                .format(entitlement_status, allowed_values)
            )

        self._entitlement_status = entitlement_status

    @property
    def subscribers(self):
        """Gets the subscribers of this UpdateFlowEntitlementRequest.

        The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.

        :return: The subscribers of this UpdateFlowEntitlementRequest.
        :rtype: List[str]
        """
        return self._subscribers

    @subscribers.setter
    def subscribers(self, subscribers):
        """Sets the subscribers of this UpdateFlowEntitlementRequest.

        The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.

        :param subscribers: The subscribers of this UpdateFlowEntitlementRequest.
        :type subscribers: List[str]
        """

        self._subscribers = subscribers
