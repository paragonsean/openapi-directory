# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_output_request_encryption import AddOutputRequestEncryption
from openapi_server.models.add_output_request_vpc_interface_attachment import AddOutputRequestVpcInterfaceAttachment
from openapi_server.models.protocol import Protocol
from openapi_server import util


class AddOutputRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cidr_allow_list: List=None, description: str=None, destination: str=None, encryption: AddOutputRequestEncryption=None, max_latency: int=None, media_stream_output_configurations: List=None, min_latency: int=None, name: str=None, port: int=None, protocol: Protocol=None, remote_id: str=None, sender_control_port: int=None, smoothing_latency: int=None, stream_id: str=None, vpc_interface_attachment: AddOutputRequestVpcInterfaceAttachment=None):
        """AddOutputRequest - a model defined in OpenAPI

        :param cidr_allow_list: The cidr_allow_list of this AddOutputRequest.
        :param description: The description of this AddOutputRequest.
        :param destination: The destination of this AddOutputRequest.
        :param encryption: The encryption of this AddOutputRequest.
        :param max_latency: The max_latency of this AddOutputRequest.
        :param media_stream_output_configurations: The media_stream_output_configurations of this AddOutputRequest.
        :param min_latency: The min_latency of this AddOutputRequest.
        :param name: The name of this AddOutputRequest.
        :param port: The port of this AddOutputRequest.
        :param protocol: The protocol of this AddOutputRequest.
        :param remote_id: The remote_id of this AddOutputRequest.
        :param sender_control_port: The sender_control_port of this AddOutputRequest.
        :param smoothing_latency: The smoothing_latency of this AddOutputRequest.
        :param stream_id: The stream_id of this AddOutputRequest.
        :param vpc_interface_attachment: The vpc_interface_attachment of this AddOutputRequest.
        """
        self.openapi_types = {
            'cidr_allow_list': List,
            'description': str,
            'destination': str,
            'encryption': AddOutputRequestEncryption,
            'max_latency': int,
            'media_stream_output_configurations': List,
            'min_latency': int,
            'name': str,
            'port': int,
            'protocol': Protocol,
            'remote_id': str,
            'sender_control_port': int,
            'smoothing_latency': int,
            'stream_id': str,
            'vpc_interface_attachment': AddOutputRequestVpcInterfaceAttachment
        }

        self.attribute_map = {
            'cidr_allow_list': 'CidrAllowList',
            'description': 'Description',
            'destination': 'Destination',
            'encryption': 'Encryption',
            'max_latency': 'MaxLatency',
            'media_stream_output_configurations': 'MediaStreamOutputConfigurations',
            'min_latency': 'MinLatency',
            'name': 'Name',
            'port': 'Port',
            'protocol': 'Protocol',
            'remote_id': 'RemoteId',
            'sender_control_port': 'SenderControlPort',
            'smoothing_latency': 'SmoothingLatency',
            'stream_id': 'StreamId',
            'vpc_interface_attachment': 'VpcInterfaceAttachment'
        }

        self._cidr_allow_list = cidr_allow_list
        self._description = description
        self._destination = destination
        self._encryption = encryption
        self._max_latency = max_latency
        self._media_stream_output_configurations = media_stream_output_configurations
        self._min_latency = min_latency
        self._name = name
        self._port = port
        self._protocol = protocol
        self._remote_id = remote_id
        self._sender_control_port = sender_control_port
        self._smoothing_latency = smoothing_latency
        self._stream_id = stream_id
        self._vpc_interface_attachment = vpc_interface_attachment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddOutputRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddOutputRequest of this AddOutputRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cidr_allow_list(self):
        """Gets the cidr_allow_list of this AddOutputRequest.


        :return: The cidr_allow_list of this AddOutputRequest.
        :rtype: List
        """
        return self._cidr_allow_list

    @cidr_allow_list.setter
    def cidr_allow_list(self, cidr_allow_list):
        """Sets the cidr_allow_list of this AddOutputRequest.


        :param cidr_allow_list: The cidr_allow_list of this AddOutputRequest.
        :type cidr_allow_list: List
        """

        self._cidr_allow_list = cidr_allow_list

    @property
    def description(self):
        """Gets the description of this AddOutputRequest.


        :return: The description of this AddOutputRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AddOutputRequest.


        :param description: The description of this AddOutputRequest.
        :type description: str
        """

        self._description = description

    @property
    def destination(self):
        """Gets the destination of this AddOutputRequest.


        :return: The destination of this AddOutputRequest.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this AddOutputRequest.


        :param destination: The destination of this AddOutputRequest.
        :type destination: str
        """

        self._destination = destination

    @property
    def encryption(self):
        """Gets the encryption of this AddOutputRequest.


        :return: The encryption of this AddOutputRequest.
        :rtype: AddOutputRequestEncryption
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this AddOutputRequest.


        :param encryption: The encryption of this AddOutputRequest.
        :type encryption: AddOutputRequestEncryption
        """

        self._encryption = encryption

    @property
    def max_latency(self):
        """Gets the max_latency of this AddOutputRequest.


        :return: The max_latency of this AddOutputRequest.
        :rtype: int
        """
        return self._max_latency

    @max_latency.setter
    def max_latency(self, max_latency):
        """Sets the max_latency of this AddOutputRequest.


        :param max_latency: The max_latency of this AddOutputRequest.
        :type max_latency: int
        """

        self._max_latency = max_latency

    @property
    def media_stream_output_configurations(self):
        """Gets the media_stream_output_configurations of this AddOutputRequest.


        :return: The media_stream_output_configurations of this AddOutputRequest.
        :rtype: List
        """
        return self._media_stream_output_configurations

    @media_stream_output_configurations.setter
    def media_stream_output_configurations(self, media_stream_output_configurations):
        """Sets the media_stream_output_configurations of this AddOutputRequest.


        :param media_stream_output_configurations: The media_stream_output_configurations of this AddOutputRequest.
        :type media_stream_output_configurations: List
        """

        self._media_stream_output_configurations = media_stream_output_configurations

    @property
    def min_latency(self):
        """Gets the min_latency of this AddOutputRequest.


        :return: The min_latency of this AddOutputRequest.
        :rtype: int
        """
        return self._min_latency

    @min_latency.setter
    def min_latency(self, min_latency):
        """Sets the min_latency of this AddOutputRequest.


        :param min_latency: The min_latency of this AddOutputRequest.
        :type min_latency: int
        """

        self._min_latency = min_latency

    @property
    def name(self):
        """Gets the name of this AddOutputRequest.


        :return: The name of this AddOutputRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddOutputRequest.


        :param name: The name of this AddOutputRequest.
        :type name: str
        """

        self._name = name

    @property
    def port(self):
        """Gets the port of this AddOutputRequest.


        :return: The port of this AddOutputRequest.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AddOutputRequest.


        :param port: The port of this AddOutputRequest.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this AddOutputRequest.


        :return: The protocol of this AddOutputRequest.
        :rtype: Protocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this AddOutputRequest.


        :param protocol: The protocol of this AddOutputRequest.
        :type protocol: Protocol
        """
        if protocol is None:
            raise ValueError("Invalid value for `protocol`, must not be `None`")

        self._protocol = protocol

    @property
    def remote_id(self):
        """Gets the remote_id of this AddOutputRequest.


        :return: The remote_id of this AddOutputRequest.
        :rtype: str
        """
        return self._remote_id

    @remote_id.setter
    def remote_id(self, remote_id):
        """Sets the remote_id of this AddOutputRequest.


        :param remote_id: The remote_id of this AddOutputRequest.
        :type remote_id: str
        """

        self._remote_id = remote_id

    @property
    def sender_control_port(self):
        """Gets the sender_control_port of this AddOutputRequest.


        :return: The sender_control_port of this AddOutputRequest.
        :rtype: int
        """
        return self._sender_control_port

    @sender_control_port.setter
    def sender_control_port(self, sender_control_port):
        """Sets the sender_control_port of this AddOutputRequest.


        :param sender_control_port: The sender_control_port of this AddOutputRequest.
        :type sender_control_port: int
        """

        self._sender_control_port = sender_control_port

    @property
    def smoothing_latency(self):
        """Gets the smoothing_latency of this AddOutputRequest.


        :return: The smoothing_latency of this AddOutputRequest.
        :rtype: int
        """
        return self._smoothing_latency

    @smoothing_latency.setter
    def smoothing_latency(self, smoothing_latency):
        """Sets the smoothing_latency of this AddOutputRequest.


        :param smoothing_latency: The smoothing_latency of this AddOutputRequest.
        :type smoothing_latency: int
        """

        self._smoothing_latency = smoothing_latency

    @property
    def stream_id(self):
        """Gets the stream_id of this AddOutputRequest.


        :return: The stream_id of this AddOutputRequest.
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this AddOutputRequest.


        :param stream_id: The stream_id of this AddOutputRequest.
        :type stream_id: str
        """

        self._stream_id = stream_id

    @property
    def vpc_interface_attachment(self):
        """Gets the vpc_interface_attachment of this AddOutputRequest.


        :return: The vpc_interface_attachment of this AddOutputRequest.
        :rtype: AddOutputRequestVpcInterfaceAttachment
        """
        return self._vpc_interface_attachment

    @vpc_interface_attachment.setter
    def vpc_interface_attachment(self, vpc_interface_attachment):
        """Sets the vpc_interface_attachment of this AddOutputRequest.


        :param vpc_interface_attachment: The vpc_interface_attachment of this AddOutputRequest.
        :type vpc_interface_attachment: AddOutputRequestVpcInterfaceAttachment
        """

        self._vpc_interface_attachment = vpc_interface_attachment
