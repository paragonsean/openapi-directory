# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_flow_request_source_decryption import CreateFlowRequestSourceDecryption
from openapi_server.models.create_flow_request_source_gateway_bridge_source import CreateFlowRequestSourceGatewayBridgeSource
from openapi_server.models.protocol import Protocol
from openapi_server import util


class SetSourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decryption: CreateFlowRequestSourceDecryption=None, description: str=None, entitlement_arn: str=None, ingest_port: int=None, max_bitrate: int=None, max_latency: int=None, max_sync_buffer: int=None, media_stream_source_configurations: List=None, min_latency: int=None, name: str=None, protocol: Protocol=None, sender_control_port: int=None, sender_ip_address: str=None, source_listener_address: str=None, source_listener_port: int=None, stream_id: str=None, vpc_interface_name: str=None, whitelist_cidr: str=None, gateway_bridge_source: CreateFlowRequestSourceGatewayBridgeSource=None):
        """SetSourceRequest - a model defined in OpenAPI

        :param decryption: The decryption of this SetSourceRequest.
        :param description: The description of this SetSourceRequest.
        :param entitlement_arn: The entitlement_arn of this SetSourceRequest.
        :param ingest_port: The ingest_port of this SetSourceRequest.
        :param max_bitrate: The max_bitrate of this SetSourceRequest.
        :param max_latency: The max_latency of this SetSourceRequest.
        :param max_sync_buffer: The max_sync_buffer of this SetSourceRequest.
        :param media_stream_source_configurations: The media_stream_source_configurations of this SetSourceRequest.
        :param min_latency: The min_latency of this SetSourceRequest.
        :param name: The name of this SetSourceRequest.
        :param protocol: The protocol of this SetSourceRequest.
        :param sender_control_port: The sender_control_port of this SetSourceRequest.
        :param sender_ip_address: The sender_ip_address of this SetSourceRequest.
        :param source_listener_address: The source_listener_address of this SetSourceRequest.
        :param source_listener_port: The source_listener_port of this SetSourceRequest.
        :param stream_id: The stream_id of this SetSourceRequest.
        :param vpc_interface_name: The vpc_interface_name of this SetSourceRequest.
        :param whitelist_cidr: The whitelist_cidr of this SetSourceRequest.
        :param gateway_bridge_source: The gateway_bridge_source of this SetSourceRequest.
        """
        self.openapi_types = {
            'decryption': CreateFlowRequestSourceDecryption,
            'description': str,
            'entitlement_arn': str,
            'ingest_port': int,
            'max_bitrate': int,
            'max_latency': int,
            'max_sync_buffer': int,
            'media_stream_source_configurations': List,
            'min_latency': int,
            'name': str,
            'protocol': Protocol,
            'sender_control_port': int,
            'sender_ip_address': str,
            'source_listener_address': str,
            'source_listener_port': int,
            'stream_id': str,
            'vpc_interface_name': str,
            'whitelist_cidr': str,
            'gateway_bridge_source': CreateFlowRequestSourceGatewayBridgeSource
        }

        self.attribute_map = {
            'decryption': 'Decryption',
            'description': 'Description',
            'entitlement_arn': 'EntitlementArn',
            'ingest_port': 'IngestPort',
            'max_bitrate': 'MaxBitrate',
            'max_latency': 'MaxLatency',
            'max_sync_buffer': 'MaxSyncBuffer',
            'media_stream_source_configurations': 'MediaStreamSourceConfigurations',
            'min_latency': 'MinLatency',
            'name': 'Name',
            'protocol': 'Protocol',
            'sender_control_port': 'SenderControlPort',
            'sender_ip_address': 'SenderIpAddress',
            'source_listener_address': 'SourceListenerAddress',
            'source_listener_port': 'SourceListenerPort',
            'stream_id': 'StreamId',
            'vpc_interface_name': 'VpcInterfaceName',
            'whitelist_cidr': 'WhitelistCidr',
            'gateway_bridge_source': 'GatewayBridgeSource'
        }

        self._decryption = decryption
        self._description = description
        self._entitlement_arn = entitlement_arn
        self._ingest_port = ingest_port
        self._max_bitrate = max_bitrate
        self._max_latency = max_latency
        self._max_sync_buffer = max_sync_buffer
        self._media_stream_source_configurations = media_stream_source_configurations
        self._min_latency = min_latency
        self._name = name
        self._protocol = protocol
        self._sender_control_port = sender_control_port
        self._sender_ip_address = sender_ip_address
        self._source_listener_address = source_listener_address
        self._source_listener_port = source_listener_port
        self._stream_id = stream_id
        self._vpc_interface_name = vpc_interface_name
        self._whitelist_cidr = whitelist_cidr
        self._gateway_bridge_source = gateway_bridge_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetSourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetSourceRequest of this SetSourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decryption(self):
        """Gets the decryption of this SetSourceRequest.


        :return: The decryption of this SetSourceRequest.
        :rtype: CreateFlowRequestSourceDecryption
        """
        return self._decryption

    @decryption.setter
    def decryption(self, decryption):
        """Sets the decryption of this SetSourceRequest.


        :param decryption: The decryption of this SetSourceRequest.
        :type decryption: CreateFlowRequestSourceDecryption
        """

        self._decryption = decryption

    @property
    def description(self):
        """Gets the description of this SetSourceRequest.


        :return: The description of this SetSourceRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SetSourceRequest.


        :param description: The description of this SetSourceRequest.
        :type description: str
        """

        self._description = description

    @property
    def entitlement_arn(self):
        """Gets the entitlement_arn of this SetSourceRequest.


        :return: The entitlement_arn of this SetSourceRequest.
        :rtype: str
        """
        return self._entitlement_arn

    @entitlement_arn.setter
    def entitlement_arn(self, entitlement_arn):
        """Sets the entitlement_arn of this SetSourceRequest.


        :param entitlement_arn: The entitlement_arn of this SetSourceRequest.
        :type entitlement_arn: str
        """

        self._entitlement_arn = entitlement_arn

    @property
    def ingest_port(self):
        """Gets the ingest_port of this SetSourceRequest.


        :return: The ingest_port of this SetSourceRequest.
        :rtype: int
        """
        return self._ingest_port

    @ingest_port.setter
    def ingest_port(self, ingest_port):
        """Sets the ingest_port of this SetSourceRequest.


        :param ingest_port: The ingest_port of this SetSourceRequest.
        :type ingest_port: int
        """

        self._ingest_port = ingest_port

    @property
    def max_bitrate(self):
        """Gets the max_bitrate of this SetSourceRequest.


        :return: The max_bitrate of this SetSourceRequest.
        :rtype: int
        """
        return self._max_bitrate

    @max_bitrate.setter
    def max_bitrate(self, max_bitrate):
        """Sets the max_bitrate of this SetSourceRequest.


        :param max_bitrate: The max_bitrate of this SetSourceRequest.
        :type max_bitrate: int
        """

        self._max_bitrate = max_bitrate

    @property
    def max_latency(self):
        """Gets the max_latency of this SetSourceRequest.


        :return: The max_latency of this SetSourceRequest.
        :rtype: int
        """
        return self._max_latency

    @max_latency.setter
    def max_latency(self, max_latency):
        """Sets the max_latency of this SetSourceRequest.


        :param max_latency: The max_latency of this SetSourceRequest.
        :type max_latency: int
        """

        self._max_latency = max_latency

    @property
    def max_sync_buffer(self):
        """Gets the max_sync_buffer of this SetSourceRequest.


        :return: The max_sync_buffer of this SetSourceRequest.
        :rtype: int
        """
        return self._max_sync_buffer

    @max_sync_buffer.setter
    def max_sync_buffer(self, max_sync_buffer):
        """Sets the max_sync_buffer of this SetSourceRequest.


        :param max_sync_buffer: The max_sync_buffer of this SetSourceRequest.
        :type max_sync_buffer: int
        """

        self._max_sync_buffer = max_sync_buffer

    @property
    def media_stream_source_configurations(self):
        """Gets the media_stream_source_configurations of this SetSourceRequest.


        :return: The media_stream_source_configurations of this SetSourceRequest.
        :rtype: List
        """
        return self._media_stream_source_configurations

    @media_stream_source_configurations.setter
    def media_stream_source_configurations(self, media_stream_source_configurations):
        """Sets the media_stream_source_configurations of this SetSourceRequest.


        :param media_stream_source_configurations: The media_stream_source_configurations of this SetSourceRequest.
        :type media_stream_source_configurations: List
        """

        self._media_stream_source_configurations = media_stream_source_configurations

    @property
    def min_latency(self):
        """Gets the min_latency of this SetSourceRequest.


        :return: The min_latency of this SetSourceRequest.
        :rtype: int
        """
        return self._min_latency

    @min_latency.setter
    def min_latency(self, min_latency):
        """Sets the min_latency of this SetSourceRequest.


        :param min_latency: The min_latency of this SetSourceRequest.
        :type min_latency: int
        """

        self._min_latency = min_latency

    @property
    def name(self):
        """Gets the name of this SetSourceRequest.


        :return: The name of this SetSourceRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SetSourceRequest.


        :param name: The name of this SetSourceRequest.
        :type name: str
        """

        self._name = name

    @property
    def protocol(self):
        """Gets the protocol of this SetSourceRequest.


        :return: The protocol of this SetSourceRequest.
        :rtype: Protocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SetSourceRequest.


        :param protocol: The protocol of this SetSourceRequest.
        :type protocol: Protocol
        """

        self._protocol = protocol

    @property
    def sender_control_port(self):
        """Gets the sender_control_port of this SetSourceRequest.


        :return: The sender_control_port of this SetSourceRequest.
        :rtype: int
        """
        return self._sender_control_port

    @sender_control_port.setter
    def sender_control_port(self, sender_control_port):
        """Sets the sender_control_port of this SetSourceRequest.


        :param sender_control_port: The sender_control_port of this SetSourceRequest.
        :type sender_control_port: int
        """

        self._sender_control_port = sender_control_port

    @property
    def sender_ip_address(self):
        """Gets the sender_ip_address of this SetSourceRequest.


        :return: The sender_ip_address of this SetSourceRequest.
        :rtype: str
        """
        return self._sender_ip_address

    @sender_ip_address.setter
    def sender_ip_address(self, sender_ip_address):
        """Sets the sender_ip_address of this SetSourceRequest.


        :param sender_ip_address: The sender_ip_address of this SetSourceRequest.
        :type sender_ip_address: str
        """

        self._sender_ip_address = sender_ip_address

    @property
    def source_listener_address(self):
        """Gets the source_listener_address of this SetSourceRequest.


        :return: The source_listener_address of this SetSourceRequest.
        :rtype: str
        """
        return self._source_listener_address

    @source_listener_address.setter
    def source_listener_address(self, source_listener_address):
        """Sets the source_listener_address of this SetSourceRequest.


        :param source_listener_address: The source_listener_address of this SetSourceRequest.
        :type source_listener_address: str
        """

        self._source_listener_address = source_listener_address

    @property
    def source_listener_port(self):
        """Gets the source_listener_port of this SetSourceRequest.


        :return: The source_listener_port of this SetSourceRequest.
        :rtype: int
        """
        return self._source_listener_port

    @source_listener_port.setter
    def source_listener_port(self, source_listener_port):
        """Sets the source_listener_port of this SetSourceRequest.


        :param source_listener_port: The source_listener_port of this SetSourceRequest.
        :type source_listener_port: int
        """

        self._source_listener_port = source_listener_port

    @property
    def stream_id(self):
        """Gets the stream_id of this SetSourceRequest.


        :return: The stream_id of this SetSourceRequest.
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this SetSourceRequest.


        :param stream_id: The stream_id of this SetSourceRequest.
        :type stream_id: str
        """

        self._stream_id = stream_id

    @property
    def vpc_interface_name(self):
        """Gets the vpc_interface_name of this SetSourceRequest.


        :return: The vpc_interface_name of this SetSourceRequest.
        :rtype: str
        """
        return self._vpc_interface_name

    @vpc_interface_name.setter
    def vpc_interface_name(self, vpc_interface_name):
        """Sets the vpc_interface_name of this SetSourceRequest.


        :param vpc_interface_name: The vpc_interface_name of this SetSourceRequest.
        :type vpc_interface_name: str
        """

        self._vpc_interface_name = vpc_interface_name

    @property
    def whitelist_cidr(self):
        """Gets the whitelist_cidr of this SetSourceRequest.


        :return: The whitelist_cidr of this SetSourceRequest.
        :rtype: str
        """
        return self._whitelist_cidr

    @whitelist_cidr.setter
    def whitelist_cidr(self, whitelist_cidr):
        """Sets the whitelist_cidr of this SetSourceRequest.


        :param whitelist_cidr: The whitelist_cidr of this SetSourceRequest.
        :type whitelist_cidr: str
        """

        self._whitelist_cidr = whitelist_cidr

    @property
    def gateway_bridge_source(self):
        """Gets the gateway_bridge_source of this SetSourceRequest.


        :return: The gateway_bridge_source of this SetSourceRequest.
        :rtype: CreateFlowRequestSourceGatewayBridgeSource
        """
        return self._gateway_bridge_source

    @gateway_bridge_source.setter
    def gateway_bridge_source(self, gateway_bridge_source):
        """Sets the gateway_bridge_source of this SetSourceRequest.


        :param gateway_bridge_source: The gateway_bridge_source of this SetSourceRequest.
        :type gateway_bridge_source: CreateFlowRequestSourceGatewayBridgeSource
        """

        self._gateway_bridge_source = gateway_bridge_source
