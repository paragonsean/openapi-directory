# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_decryption import SourceDecryption
from openapi_server.models.source_gateway_bridge_source import SourceGatewayBridgeSource
from openapi_server.models.source_transport import SourceTransport
from openapi_server import util


class UpdateFlowSourceResponseSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_transfer_subscriber_fee_percent: int=None, decryption: SourceDecryption=None, description: str=None, entitlement_arn: str=None, ingest_ip: str=None, ingest_port: int=None, media_stream_source_configurations: List=None, name: str=None, sender_control_port: int=None, sender_ip_address: str=None, source_arn: str=None, transport: SourceTransport=None, vpc_interface_name: str=None, whitelist_cidr: str=None, gateway_bridge_source: SourceGatewayBridgeSource=None):
        """UpdateFlowSourceResponseSource - a model defined in OpenAPI

        :param data_transfer_subscriber_fee_percent: The data_transfer_subscriber_fee_percent of this UpdateFlowSourceResponseSource.
        :param decryption: The decryption of this UpdateFlowSourceResponseSource.
        :param description: The description of this UpdateFlowSourceResponseSource.
        :param entitlement_arn: The entitlement_arn of this UpdateFlowSourceResponseSource.
        :param ingest_ip: The ingest_ip of this UpdateFlowSourceResponseSource.
        :param ingest_port: The ingest_port of this UpdateFlowSourceResponseSource.
        :param media_stream_source_configurations: The media_stream_source_configurations of this UpdateFlowSourceResponseSource.
        :param name: The name of this UpdateFlowSourceResponseSource.
        :param sender_control_port: The sender_control_port of this UpdateFlowSourceResponseSource.
        :param sender_ip_address: The sender_ip_address of this UpdateFlowSourceResponseSource.
        :param source_arn: The source_arn of this UpdateFlowSourceResponseSource.
        :param transport: The transport of this UpdateFlowSourceResponseSource.
        :param vpc_interface_name: The vpc_interface_name of this UpdateFlowSourceResponseSource.
        :param whitelist_cidr: The whitelist_cidr of this UpdateFlowSourceResponseSource.
        :param gateway_bridge_source: The gateway_bridge_source of this UpdateFlowSourceResponseSource.
        """
        self.openapi_types = {
            'data_transfer_subscriber_fee_percent': int,
            'decryption': SourceDecryption,
            'description': str,
            'entitlement_arn': str,
            'ingest_ip': str,
            'ingest_port': int,
            'media_stream_source_configurations': List,
            'name': str,
            'sender_control_port': int,
            'sender_ip_address': str,
            'source_arn': str,
            'transport': SourceTransport,
            'vpc_interface_name': str,
            'whitelist_cidr': str,
            'gateway_bridge_source': SourceGatewayBridgeSource
        }

        self.attribute_map = {
            'data_transfer_subscriber_fee_percent': 'DataTransferSubscriberFeePercent',
            'decryption': 'Decryption',
            'description': 'Description',
            'entitlement_arn': 'EntitlementArn',
            'ingest_ip': 'IngestIp',
            'ingest_port': 'IngestPort',
            'media_stream_source_configurations': 'MediaStreamSourceConfigurations',
            'name': 'Name',
            'sender_control_port': 'SenderControlPort',
            'sender_ip_address': 'SenderIpAddress',
            'source_arn': 'SourceArn',
            'transport': 'Transport',
            'vpc_interface_name': 'VpcInterfaceName',
            'whitelist_cidr': 'WhitelistCidr',
            'gateway_bridge_source': 'GatewayBridgeSource'
        }

        self._data_transfer_subscriber_fee_percent = data_transfer_subscriber_fee_percent
        self._decryption = decryption
        self._description = description
        self._entitlement_arn = entitlement_arn
        self._ingest_ip = ingest_ip
        self._ingest_port = ingest_port
        self._media_stream_source_configurations = media_stream_source_configurations
        self._name = name
        self._sender_control_port = sender_control_port
        self._sender_ip_address = sender_ip_address
        self._source_arn = source_arn
        self._transport = transport
        self._vpc_interface_name = vpc_interface_name
        self._whitelist_cidr = whitelist_cidr
        self._gateway_bridge_source = gateway_bridge_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFlowSourceResponseSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFlowSourceResponse_Source of this UpdateFlowSourceResponseSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_transfer_subscriber_fee_percent(self):
        """Gets the data_transfer_subscriber_fee_percent of this UpdateFlowSourceResponseSource.


        :return: The data_transfer_subscriber_fee_percent of this UpdateFlowSourceResponseSource.
        :rtype: int
        """
        return self._data_transfer_subscriber_fee_percent

    @data_transfer_subscriber_fee_percent.setter
    def data_transfer_subscriber_fee_percent(self, data_transfer_subscriber_fee_percent):
        """Sets the data_transfer_subscriber_fee_percent of this UpdateFlowSourceResponseSource.


        :param data_transfer_subscriber_fee_percent: The data_transfer_subscriber_fee_percent of this UpdateFlowSourceResponseSource.
        :type data_transfer_subscriber_fee_percent: int
        """

        self._data_transfer_subscriber_fee_percent = data_transfer_subscriber_fee_percent

    @property
    def decryption(self):
        """Gets the decryption of this UpdateFlowSourceResponseSource.


        :return: The decryption of this UpdateFlowSourceResponseSource.
        :rtype: SourceDecryption
        """
        return self._decryption

    @decryption.setter
    def decryption(self, decryption):
        """Sets the decryption of this UpdateFlowSourceResponseSource.


        :param decryption: The decryption of this UpdateFlowSourceResponseSource.
        :type decryption: SourceDecryption
        """

        self._decryption = decryption

    @property
    def description(self):
        """Gets the description of this UpdateFlowSourceResponseSource.


        :return: The description of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateFlowSourceResponseSource.


        :param description: The description of this UpdateFlowSourceResponseSource.
        :type description: str
        """

        self._description = description

    @property
    def entitlement_arn(self):
        """Gets the entitlement_arn of this UpdateFlowSourceResponseSource.


        :return: The entitlement_arn of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._entitlement_arn

    @entitlement_arn.setter
    def entitlement_arn(self, entitlement_arn):
        """Sets the entitlement_arn of this UpdateFlowSourceResponseSource.


        :param entitlement_arn: The entitlement_arn of this UpdateFlowSourceResponseSource.
        :type entitlement_arn: str
        """

        self._entitlement_arn = entitlement_arn

    @property
    def ingest_ip(self):
        """Gets the ingest_ip of this UpdateFlowSourceResponseSource.


        :return: The ingest_ip of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._ingest_ip

    @ingest_ip.setter
    def ingest_ip(self, ingest_ip):
        """Sets the ingest_ip of this UpdateFlowSourceResponseSource.


        :param ingest_ip: The ingest_ip of this UpdateFlowSourceResponseSource.
        :type ingest_ip: str
        """

        self._ingest_ip = ingest_ip

    @property
    def ingest_port(self):
        """Gets the ingest_port of this UpdateFlowSourceResponseSource.


        :return: The ingest_port of this UpdateFlowSourceResponseSource.
        :rtype: int
        """
        return self._ingest_port

    @ingest_port.setter
    def ingest_port(self, ingest_port):
        """Sets the ingest_port of this UpdateFlowSourceResponseSource.


        :param ingest_port: The ingest_port of this UpdateFlowSourceResponseSource.
        :type ingest_port: int
        """

        self._ingest_port = ingest_port

    @property
    def media_stream_source_configurations(self):
        """Gets the media_stream_source_configurations of this UpdateFlowSourceResponseSource.


        :return: The media_stream_source_configurations of this UpdateFlowSourceResponseSource.
        :rtype: List
        """
        return self._media_stream_source_configurations

    @media_stream_source_configurations.setter
    def media_stream_source_configurations(self, media_stream_source_configurations):
        """Sets the media_stream_source_configurations of this UpdateFlowSourceResponseSource.


        :param media_stream_source_configurations: The media_stream_source_configurations of this UpdateFlowSourceResponseSource.
        :type media_stream_source_configurations: List
        """

        self._media_stream_source_configurations = media_stream_source_configurations

    @property
    def name(self):
        """Gets the name of this UpdateFlowSourceResponseSource.


        :return: The name of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateFlowSourceResponseSource.


        :param name: The name of this UpdateFlowSourceResponseSource.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def sender_control_port(self):
        """Gets the sender_control_port of this UpdateFlowSourceResponseSource.


        :return: The sender_control_port of this UpdateFlowSourceResponseSource.
        :rtype: int
        """
        return self._sender_control_port

    @sender_control_port.setter
    def sender_control_port(self, sender_control_port):
        """Sets the sender_control_port of this UpdateFlowSourceResponseSource.


        :param sender_control_port: The sender_control_port of this UpdateFlowSourceResponseSource.
        :type sender_control_port: int
        """

        self._sender_control_port = sender_control_port

    @property
    def sender_ip_address(self):
        """Gets the sender_ip_address of this UpdateFlowSourceResponseSource.


        :return: The sender_ip_address of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._sender_ip_address

    @sender_ip_address.setter
    def sender_ip_address(self, sender_ip_address):
        """Sets the sender_ip_address of this UpdateFlowSourceResponseSource.


        :param sender_ip_address: The sender_ip_address of this UpdateFlowSourceResponseSource.
        :type sender_ip_address: str
        """

        self._sender_ip_address = sender_ip_address

    @property
    def source_arn(self):
        """Gets the source_arn of this UpdateFlowSourceResponseSource.


        :return: The source_arn of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._source_arn

    @source_arn.setter
    def source_arn(self, source_arn):
        """Sets the source_arn of this UpdateFlowSourceResponseSource.


        :param source_arn: The source_arn of this UpdateFlowSourceResponseSource.
        :type source_arn: str
        """
        if source_arn is None:
            raise ValueError("Invalid value for `source_arn`, must not be `None`")

        self._source_arn = source_arn

    @property
    def transport(self):
        """Gets the transport of this UpdateFlowSourceResponseSource.


        :return: The transport of this UpdateFlowSourceResponseSource.
        :rtype: SourceTransport
        """
        return self._transport

    @transport.setter
    def transport(self, transport):
        """Sets the transport of this UpdateFlowSourceResponseSource.


        :param transport: The transport of this UpdateFlowSourceResponseSource.
        :type transport: SourceTransport
        """

        self._transport = transport

    @property
    def vpc_interface_name(self):
        """Gets the vpc_interface_name of this UpdateFlowSourceResponseSource.


        :return: The vpc_interface_name of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._vpc_interface_name

    @vpc_interface_name.setter
    def vpc_interface_name(self, vpc_interface_name):
        """Sets the vpc_interface_name of this UpdateFlowSourceResponseSource.


        :param vpc_interface_name: The vpc_interface_name of this UpdateFlowSourceResponseSource.
        :type vpc_interface_name: str
        """

        self._vpc_interface_name = vpc_interface_name

    @property
    def whitelist_cidr(self):
        """Gets the whitelist_cidr of this UpdateFlowSourceResponseSource.


        :return: The whitelist_cidr of this UpdateFlowSourceResponseSource.
        :rtype: str
        """
        return self._whitelist_cidr

    @whitelist_cidr.setter
    def whitelist_cidr(self, whitelist_cidr):
        """Sets the whitelist_cidr of this UpdateFlowSourceResponseSource.


        :param whitelist_cidr: The whitelist_cidr of this UpdateFlowSourceResponseSource.
        :type whitelist_cidr: str
        """

        self._whitelist_cidr = whitelist_cidr

    @property
    def gateway_bridge_source(self):
        """Gets the gateway_bridge_source of this UpdateFlowSourceResponseSource.


        :return: The gateway_bridge_source of this UpdateFlowSourceResponseSource.
        :rtype: SourceGatewayBridgeSource
        """
        return self._gateway_bridge_source

    @gateway_bridge_source.setter
    def gateway_bridge_source(self, gateway_bridge_source):
        """Sets the gateway_bridge_source of this UpdateFlowSourceResponseSource.


        :param gateway_bridge_source: The gateway_bridge_source of this UpdateFlowSourceResponseSource.
        :type gateway_bridge_source: SourceGatewayBridgeSource
        """

        self._gateway_bridge_source = gateway_bridge_source
