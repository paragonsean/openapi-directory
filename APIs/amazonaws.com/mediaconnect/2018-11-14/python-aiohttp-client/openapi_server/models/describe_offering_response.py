# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_offering_response_offering import DescribeOfferingResponseOffering
from openapi_server import util


class DescribeOfferingResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering: DescribeOfferingResponseOffering=None):
        """DescribeOfferingResponse - a model defined in OpenAPI

        :param offering: The offering of this DescribeOfferingResponse.
        """
        self.openapi_types = {
            'offering': DescribeOfferingResponseOffering
        }

        self.attribute_map = {
            'offering': 'Offering'
        }

        self._offering = offering

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeOfferingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeOfferingResponse of this DescribeOfferingResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering(self):
        """Gets the offering of this DescribeOfferingResponse.


        :return: The offering of this DescribeOfferingResponse.
        :rtype: DescribeOfferingResponseOffering
        """
        return self._offering

    @offering.setter
    def offering(self, offering):
        """Sets the offering of this DescribeOfferingResponse.


        :param offering: The offering of this DescribeOfferingResponse.
        :type offering: DescribeOfferingResponseOffering
        """

        self._offering = offering
