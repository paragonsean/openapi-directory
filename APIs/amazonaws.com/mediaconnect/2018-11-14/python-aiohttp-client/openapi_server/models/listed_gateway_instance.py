# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_state import InstanceState
from openapi_server import util


class ListedGatewayInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_arn: str=None, gateway_instance_arn: str=None, instance_id: str=None, instance_state: InstanceState=None):
        """ListedGatewayInstance - a model defined in OpenAPI

        :param gateway_arn: The gateway_arn of this ListedGatewayInstance.
        :param gateway_instance_arn: The gateway_instance_arn of this ListedGatewayInstance.
        :param instance_id: The instance_id of this ListedGatewayInstance.
        :param instance_state: The instance_state of this ListedGatewayInstance.
        """
        self.openapi_types = {
            'gateway_arn': str,
            'gateway_instance_arn': str,
            'instance_id': str,
            'instance_state': InstanceState
        }

        self.attribute_map = {
            'gateway_arn': 'GatewayArn',
            'gateway_instance_arn': 'GatewayInstanceArn',
            'instance_id': 'InstanceId',
            'instance_state': 'InstanceState'
        }

        self._gateway_arn = gateway_arn
        self._gateway_instance_arn = gateway_instance_arn
        self._instance_id = instance_id
        self._instance_state = instance_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListedGatewayInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListedGatewayInstance of this ListedGatewayInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this ListedGatewayInstance.


        :return: The gateway_arn of this ListedGatewayInstance.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this ListedGatewayInstance.


        :param gateway_arn: The gateway_arn of this ListedGatewayInstance.
        :type gateway_arn: str
        """
        if gateway_arn is None:
            raise ValueError("Invalid value for `gateway_arn`, must not be `None`")

        self._gateway_arn = gateway_arn

    @property
    def gateway_instance_arn(self):
        """Gets the gateway_instance_arn of this ListedGatewayInstance.


        :return: The gateway_instance_arn of this ListedGatewayInstance.
        :rtype: str
        """
        return self._gateway_instance_arn

    @gateway_instance_arn.setter
    def gateway_instance_arn(self, gateway_instance_arn):
        """Sets the gateway_instance_arn of this ListedGatewayInstance.


        :param gateway_instance_arn: The gateway_instance_arn of this ListedGatewayInstance.
        :type gateway_instance_arn: str
        """
        if gateway_instance_arn is None:
            raise ValueError("Invalid value for `gateway_instance_arn`, must not be `None`")

        self._gateway_instance_arn = gateway_instance_arn

    @property
    def instance_id(self):
        """Gets the instance_id of this ListedGatewayInstance.


        :return: The instance_id of this ListedGatewayInstance.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this ListedGatewayInstance.


        :param instance_id: The instance_id of this ListedGatewayInstance.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")

        self._instance_id = instance_id

    @property
    def instance_state(self):
        """Gets the instance_state of this ListedGatewayInstance.


        :return: The instance_state of this ListedGatewayInstance.
        :rtype: InstanceState
        """
        return self._instance_state

    @instance_state.setter
    def instance_state(self, instance_state):
        """Sets the instance_state of this ListedGatewayInstance.


        :param instance_state: The instance_state of this ListedGatewayInstance.
        :type instance_state: InstanceState
        """

        self._instance_state = instance_state
