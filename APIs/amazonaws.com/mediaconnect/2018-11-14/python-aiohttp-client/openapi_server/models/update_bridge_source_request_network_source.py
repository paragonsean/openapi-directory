# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protocol import Protocol
from openapi_server import util


class UpdateBridgeSourceRequestNetworkSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, multicast_ip: str=None, network_name: str=None, port: int=None, protocol: Protocol=None):
        """UpdateBridgeSourceRequestNetworkSource - a model defined in OpenAPI

        :param multicast_ip: The multicast_ip of this UpdateBridgeSourceRequestNetworkSource.
        :param network_name: The network_name of this UpdateBridgeSourceRequestNetworkSource.
        :param port: The port of this UpdateBridgeSourceRequestNetworkSource.
        :param protocol: The protocol of this UpdateBridgeSourceRequestNetworkSource.
        """
        self.openapi_types = {
            'multicast_ip': str,
            'network_name': str,
            'port': int,
            'protocol': Protocol
        }

        self.attribute_map = {
            'multicast_ip': 'MulticastIp',
            'network_name': 'NetworkName',
            'port': 'Port',
            'protocol': 'Protocol'
        }

        self._multicast_ip = multicast_ip
        self._network_name = network_name
        self._port = port
        self._protocol = protocol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBridgeSourceRequestNetworkSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBridgeSourceRequest_NetworkSource of this UpdateBridgeSourceRequestNetworkSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def multicast_ip(self):
        """Gets the multicast_ip of this UpdateBridgeSourceRequestNetworkSource.


        :return: The multicast_ip of this UpdateBridgeSourceRequestNetworkSource.
        :rtype: str
        """
        return self._multicast_ip

    @multicast_ip.setter
    def multicast_ip(self, multicast_ip):
        """Sets the multicast_ip of this UpdateBridgeSourceRequestNetworkSource.


        :param multicast_ip: The multicast_ip of this UpdateBridgeSourceRequestNetworkSource.
        :type multicast_ip: str
        """

        self._multicast_ip = multicast_ip

    @property
    def network_name(self):
        """Gets the network_name of this UpdateBridgeSourceRequestNetworkSource.


        :return: The network_name of this UpdateBridgeSourceRequestNetworkSource.
        :rtype: str
        """
        return self._network_name

    @network_name.setter
    def network_name(self, network_name):
        """Sets the network_name of this UpdateBridgeSourceRequestNetworkSource.


        :param network_name: The network_name of this UpdateBridgeSourceRequestNetworkSource.
        :type network_name: str
        """

        self._network_name = network_name

    @property
    def port(self):
        """Gets the port of this UpdateBridgeSourceRequestNetworkSource.


        :return: The port of this UpdateBridgeSourceRequestNetworkSource.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this UpdateBridgeSourceRequestNetworkSource.


        :param port: The port of this UpdateBridgeSourceRequestNetworkSource.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this UpdateBridgeSourceRequestNetworkSource.


        :return: The protocol of this UpdateBridgeSourceRequestNetworkSource.
        :rtype: Protocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this UpdateBridgeSourceRequestNetworkSource.


        :param protocol: The protocol of this UpdateBridgeSourceRequestNetworkSource.
        :type protocol: Protocol
        """

        self._protocol = protocol
