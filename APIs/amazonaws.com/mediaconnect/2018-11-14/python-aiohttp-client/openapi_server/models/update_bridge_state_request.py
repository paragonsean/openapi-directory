# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateBridgeStateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, desired_state: str=None):
        """UpdateBridgeStateRequest - a model defined in OpenAPI

        :param desired_state: The desired_state of this UpdateBridgeStateRequest.
        """
        self.openapi_types = {
            'desired_state': str
        }

        self.attribute_map = {
            'desired_state': 'desiredState'
        }

        self._desired_state = desired_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBridgeStateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBridgeState_request of this UpdateBridgeStateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def desired_state(self):
        """Gets the desired_state of this UpdateBridgeStateRequest.

        

        :return: The desired_state of this UpdateBridgeStateRequest.
        :rtype: str
        """
        return self._desired_state

    @desired_state.setter
    def desired_state(self, desired_state):
        """Sets the desired_state of this UpdateBridgeStateRequest.

        

        :param desired_state: The desired_state of this UpdateBridgeStateRequest.
        :type desired_state: str
        """
        allowed_values = ["ACTIVE", "STANDBY", "DELETED"]  # noqa: E501
        if desired_state not in allowed_values:
            raise ValueError(
                "Invalid value for `desired_state` ({0}), must be one of {1}"
                .format(desired_state, allowed_values)
            )

        self._desired_state = desired_state
