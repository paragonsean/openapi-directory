# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bridge_output_flow_output import BridgeOutputFlowOutput
from openapi_server.models.bridge_output_network_output import BridgeOutputNetworkOutput
from openapi_server import util


class BridgeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow_output: BridgeOutputFlowOutput=None, network_output: BridgeOutputNetworkOutput=None):
        """BridgeOutput - a model defined in OpenAPI

        :param flow_output: The flow_output of this BridgeOutput.
        :param network_output: The network_output of this BridgeOutput.
        """
        self.openapi_types = {
            'flow_output': BridgeOutputFlowOutput,
            'network_output': BridgeOutputNetworkOutput
        }

        self.attribute_map = {
            'flow_output': 'FlowOutput',
            'network_output': 'NetworkOutput'
        }

        self._flow_output = flow_output
        self._network_output = network_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BridgeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BridgeOutput of this BridgeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow_output(self):
        """Gets the flow_output of this BridgeOutput.


        :return: The flow_output of this BridgeOutput.
        :rtype: BridgeOutputFlowOutput
        """
        return self._flow_output

    @flow_output.setter
    def flow_output(self, flow_output):
        """Sets the flow_output of this BridgeOutput.


        :param flow_output: The flow_output of this BridgeOutput.
        :type flow_output: BridgeOutputFlowOutput
        """

        self._flow_output = flow_output

    @property
    def network_output(self):
        """Gets the network_output of this BridgeOutput.


        :return: The network_output of this BridgeOutput.
        :rtype: BridgeOutputNetworkOutput
        """
        return self._network_output

    @network_output.setter
    def network_output(self, network_output):
        """Sets the network_output of this BridgeOutput.


        :param network_output: The network_output of this BridgeOutput.
        :type network_output: BridgeOutputNetworkOutput
        """

        self._network_output = network_output
