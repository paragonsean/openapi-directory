/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaStreamOutputConfigurationRequest.h
 *
 * The media stream that you want to associate with the output, and the parameters for that association.
 */

#ifndef OAIMediaStreamOutputConfigurationRequest_H
#define OAIMediaStreamOutputConfigurationRequest_H

#include <QJsonObject>

#include "OAIEncodingName.h"
#include "OAIMediaStreamOutputConfigurationRequest_EncodingParameters.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaStreamOutputConfigurationRequest_EncodingParameters;

class OAIMediaStreamOutputConfigurationRequest : public OAIObject {
public:
    OAIMediaStreamOutputConfigurationRequest();
    OAIMediaStreamOutputConfigurationRequest(QString json);
    ~OAIMediaStreamOutputConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDestinationConfigurations() const;
    void setDestinationConfigurations(const QList &destination_configurations);
    bool is_destination_configurations_Set() const;
    bool is_destination_configurations_Valid() const;

    OAIEncodingName getEncodingName() const;
    void setEncodingName(const OAIEncodingName &encoding_name);
    bool is_encoding_name_Set() const;
    bool is_encoding_name_Valid() const;

    OAIMediaStreamOutputConfigurationRequest_EncodingParameters getEncodingParameters() const;
    void setEncodingParameters(const OAIMediaStreamOutputConfigurationRequest_EncodingParameters &encoding_parameters);
    bool is_encoding_parameters_Set() const;
    bool is_encoding_parameters_Valid() const;

    QString getMediaStreamName() const;
    void setMediaStreamName(const QString &media_stream_name);
    bool is_media_stream_name_Set() const;
    bool is_media_stream_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_destination_configurations;
    bool m_destination_configurations_isSet;
    bool m_destination_configurations_isValid;

    OAIEncodingName m_encoding_name;
    bool m_encoding_name_isSet;
    bool m_encoding_name_isValid;

    OAIMediaStreamOutputConfigurationRequest_EncodingParameters m_encoding_parameters;
    bool m_encoding_parameters_isSet;
    bool m_encoding_parameters_isValid;

    QString m_media_stream_name;
    bool m_media_stream_name_isSet;
    bool m_media_stream_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaStreamOutputConfigurationRequest)

#endif // OAIMediaStreamOutputConfigurationRequest_H
