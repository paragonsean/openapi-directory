/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateGateway_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateGateway_request::OAICreateGateway_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateGateway_request::OAICreateGateway_request() {
    this->initializeModel();
}

OAICreateGateway_request::~OAICreateGateway_request() {}

void OAICreateGateway_request::initializeModel() {

    m_egress_cidr_blocks_isSet = false;
    m_egress_cidr_blocks_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_networks_isSet = false;
    m_networks_isValid = false;
}

void OAICreateGateway_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateGateway_request::fromJsonObject(QJsonObject json) {

    m_egress_cidr_blocks_isValid = ::OpenAPI::fromJsonValue(m_egress_cidr_blocks, json[QString("egressCidrBlocks")]);
    m_egress_cidr_blocks_isSet = !json[QString("egressCidrBlocks")].isNull() && m_egress_cidr_blocks_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_networks_isValid = ::OpenAPI::fromJsonValue(m_networks, json[QString("networks")]);
    m_networks_isSet = !json[QString("networks")].isNull() && m_networks_isValid;
}

QString OAICreateGateway_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateGateway_request::asJsonObject() const {
    QJsonObject obj;
    if (m_egress_cidr_blocks.size() > 0) {
        obj.insert(QString("egressCidrBlocks"), ::OpenAPI::toJsonValue(m_egress_cidr_blocks));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_networks.size() > 0) {
        obj.insert(QString("networks"), ::OpenAPI::toJsonValue(m_networks));
    }
    return obj;
}

QList<QString> OAICreateGateway_request::getEgressCidrBlocks() const {
    return m_egress_cidr_blocks;
}
void OAICreateGateway_request::setEgressCidrBlocks(const QList<QString> &egress_cidr_blocks) {
    m_egress_cidr_blocks = egress_cidr_blocks;
    m_egress_cidr_blocks_isSet = true;
}

bool OAICreateGateway_request::is_egress_cidr_blocks_Set() const{
    return m_egress_cidr_blocks_isSet;
}

bool OAICreateGateway_request::is_egress_cidr_blocks_Valid() const{
    return m_egress_cidr_blocks_isValid;
}

QString OAICreateGateway_request::getName() const {
    return m_name;
}
void OAICreateGateway_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateGateway_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateGateway_request::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGatewayNetwork> OAICreateGateway_request::getNetworks() const {
    return m_networks;
}
void OAICreateGateway_request::setNetworks(const QList<OAIGatewayNetwork> &networks) {
    m_networks = networks;
    m_networks_isSet = true;
}

bool OAICreateGateway_request::is_networks_Set() const{
    return m_networks_isSet;
}

bool OAICreateGateway_request::is_networks_Valid() const{
    return m_networks_isValid;
}

bool OAICreateGateway_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_egress_cidr_blocks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_networks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateGateway_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_egress_cidr_blocks_isValid && m_name_isValid && m_networks_isValid && true;
}

} // namespace OpenAPI
