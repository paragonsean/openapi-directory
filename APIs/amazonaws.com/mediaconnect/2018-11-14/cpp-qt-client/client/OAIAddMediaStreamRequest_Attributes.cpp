/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddMediaStreamRequest_Attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddMediaStreamRequest_Attributes::OAIAddMediaStreamRequest_Attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddMediaStreamRequest_Attributes::OAIAddMediaStreamRequest_Attributes() {
    this->initializeModel();
}

OAIAddMediaStreamRequest_Attributes::~OAIAddMediaStreamRequest_Attributes() {}

void OAIAddMediaStreamRequest_Attributes::initializeModel() {

    m_fmtp_isSet = false;
    m_fmtp_isValid = false;

    m_lang_isSet = false;
    m_lang_isValid = false;
}

void OAIAddMediaStreamRequest_Attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddMediaStreamRequest_Attributes::fromJsonObject(QJsonObject json) {

    m_fmtp_isValid = ::OpenAPI::fromJsonValue(m_fmtp, json[QString("Fmtp")]);
    m_fmtp_isSet = !json[QString("Fmtp")].isNull() && m_fmtp_isValid;

    m_lang_isValid = ::OpenAPI::fromJsonValue(m_lang, json[QString("Lang")]);
    m_lang_isSet = !json[QString("Lang")].isNull() && m_lang_isValid;
}

QString OAIAddMediaStreamRequest_Attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddMediaStreamRequest_Attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_fmtp.isSet()) {
        obj.insert(QString("Fmtp"), ::OpenAPI::toJsonValue(m_fmtp));
    }
    if (m_lang_isSet) {
        obj.insert(QString("Lang"), ::OpenAPI::toJsonValue(m_lang));
    }
    return obj;
}

OAIUpdateFlowMediaStream_request_attributes_Fmtp OAIAddMediaStreamRequest_Attributes::getFmtp() const {
    return m_fmtp;
}
void OAIAddMediaStreamRequest_Attributes::setFmtp(const OAIUpdateFlowMediaStream_request_attributes_Fmtp &fmtp) {
    m_fmtp = fmtp;
    m_fmtp_isSet = true;
}

bool OAIAddMediaStreamRequest_Attributes::is_fmtp_Set() const{
    return m_fmtp_isSet;
}

bool OAIAddMediaStreamRequest_Attributes::is_fmtp_Valid() const{
    return m_fmtp_isValid;
}

QString OAIAddMediaStreamRequest_Attributes::getLang() const {
    return m_lang;
}
void OAIAddMediaStreamRequest_Attributes::setLang(const QString &lang) {
    m_lang = lang;
    m_lang_isSet = true;
}

bool OAIAddMediaStreamRequest_Attributes::is_lang_Set() const{
    return m_lang_isSet;
}

bool OAIAddMediaStreamRequest_Attributes::is_lang_Valid() const{
    return m_lang_isValid;
}

bool OAIAddMediaStreamRequest_Attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fmtp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lang_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddMediaStreamRequest_Attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
