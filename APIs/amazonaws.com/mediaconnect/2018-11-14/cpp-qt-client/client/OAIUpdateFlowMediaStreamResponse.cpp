/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateFlowMediaStreamResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateFlowMediaStreamResponse::OAIUpdateFlowMediaStreamResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateFlowMediaStreamResponse::OAIUpdateFlowMediaStreamResponse() {
    this->initializeModel();
}

OAIUpdateFlowMediaStreamResponse::~OAIUpdateFlowMediaStreamResponse() {}

void OAIUpdateFlowMediaStreamResponse::initializeModel() {

    m_flow_arn_isSet = false;
    m_flow_arn_isValid = false;

    m_media_stream_isSet = false;
    m_media_stream_isValid = false;
}

void OAIUpdateFlowMediaStreamResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateFlowMediaStreamResponse::fromJsonObject(QJsonObject json) {

    m_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_arn, json[QString("FlowArn")]);
    m_flow_arn_isSet = !json[QString("FlowArn")].isNull() && m_flow_arn_isValid;

    m_media_stream_isValid = ::OpenAPI::fromJsonValue(m_media_stream, json[QString("MediaStream")]);
    m_media_stream_isSet = !json[QString("MediaStream")].isNull() && m_media_stream_isValid;
}

QString OAIUpdateFlowMediaStreamResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateFlowMediaStreamResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_arn_isSet) {
        obj.insert(QString("FlowArn"), ::OpenAPI::toJsonValue(m_flow_arn));
    }
    if (m_media_stream.isSet()) {
        obj.insert(QString("MediaStream"), ::OpenAPI::toJsonValue(m_media_stream));
    }
    return obj;
}

QString OAIUpdateFlowMediaStreamResponse::getFlowArn() const {
    return m_flow_arn;
}
void OAIUpdateFlowMediaStreamResponse::setFlowArn(const QString &flow_arn) {
    m_flow_arn = flow_arn;
    m_flow_arn_isSet = true;
}

bool OAIUpdateFlowMediaStreamResponse::is_flow_arn_Set() const{
    return m_flow_arn_isSet;
}

bool OAIUpdateFlowMediaStreamResponse::is_flow_arn_Valid() const{
    return m_flow_arn_isValid;
}

OAIUpdateFlowMediaStreamResponse_MediaStream OAIUpdateFlowMediaStreamResponse::getMediaStream() const {
    return m_media_stream;
}
void OAIUpdateFlowMediaStreamResponse::setMediaStream(const OAIUpdateFlowMediaStreamResponse_MediaStream &media_stream) {
    m_media_stream = media_stream;
    m_media_stream_isSet = true;
}

bool OAIUpdateFlowMediaStreamResponse::is_media_stream_Set() const{
    return m_media_stream_isSet;
}

bool OAIUpdateFlowMediaStreamResponse::is_media_stream_Valid() const{
    return m_media_stream_isValid;
}

bool OAIUpdateFlowMediaStreamResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_stream.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateFlowMediaStreamResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
