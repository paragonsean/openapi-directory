/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateGatewayInstanceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateGatewayInstanceResponse::OAIUpdateGatewayInstanceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateGatewayInstanceResponse::OAIUpdateGatewayInstanceResponse() {
    this->initializeModel();
}

OAIUpdateGatewayInstanceResponse::~OAIUpdateGatewayInstanceResponse() {}

void OAIUpdateGatewayInstanceResponse::initializeModel() {

    m_bridge_placement_isSet = false;
    m_bridge_placement_isValid = false;

    m_gateway_instance_arn_isSet = false;
    m_gateway_instance_arn_isValid = false;
}

void OAIUpdateGatewayInstanceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateGatewayInstanceResponse::fromJsonObject(QJsonObject json) {

    m_bridge_placement_isValid = ::OpenAPI::fromJsonValue(m_bridge_placement, json[QString("BridgePlacement")]);
    m_bridge_placement_isSet = !json[QString("BridgePlacement")].isNull() && m_bridge_placement_isValid;

    m_gateway_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_gateway_instance_arn, json[QString("GatewayInstanceArn")]);
    m_gateway_instance_arn_isSet = !json[QString("GatewayInstanceArn")].isNull() && m_gateway_instance_arn_isValid;
}

QString OAIUpdateGatewayInstanceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateGatewayInstanceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bridge_placement.isSet()) {
        obj.insert(QString("BridgePlacement"), ::OpenAPI::toJsonValue(m_bridge_placement));
    }
    if (m_gateway_instance_arn_isSet) {
        obj.insert(QString("GatewayInstanceArn"), ::OpenAPI::toJsonValue(m_gateway_instance_arn));
    }
    return obj;
}

OAIBridgePlacement OAIUpdateGatewayInstanceResponse::getBridgePlacement() const {
    return m_bridge_placement;
}
void OAIUpdateGatewayInstanceResponse::setBridgePlacement(const OAIBridgePlacement &bridge_placement) {
    m_bridge_placement = bridge_placement;
    m_bridge_placement_isSet = true;
}

bool OAIUpdateGatewayInstanceResponse::is_bridge_placement_Set() const{
    return m_bridge_placement_isSet;
}

bool OAIUpdateGatewayInstanceResponse::is_bridge_placement_Valid() const{
    return m_bridge_placement_isValid;
}

QString OAIUpdateGatewayInstanceResponse::getGatewayInstanceArn() const {
    return m_gateway_instance_arn;
}
void OAIUpdateGatewayInstanceResponse::setGatewayInstanceArn(const QString &gateway_instance_arn) {
    m_gateway_instance_arn = gateway_instance_arn;
    m_gateway_instance_arn_isSet = true;
}

bool OAIUpdateGatewayInstanceResponse::is_gateway_instance_arn_Set() const{
    return m_gateway_instance_arn_isSet;
}

bool OAIUpdateGatewayInstanceResponse::is_gateway_instance_arn_Valid() const{
    return m_gateway_instance_arn_isValid;
}

bool OAIUpdateGatewayInstanceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bridge_placement.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateGatewayInstanceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
