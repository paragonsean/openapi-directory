/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBridgesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBridgesResponse::OAIListBridgesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBridgesResponse::OAIListBridgesResponse() {
    this->initializeModel();
}

OAIListBridgesResponse::~OAIListBridgesResponse() {}

void OAIListBridgesResponse::initializeModel() {

    m_bridges_isSet = false;
    m_bridges_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListBridgesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBridgesResponse::fromJsonObject(QJsonObject json) {

    m_bridges_isValid = ::OpenAPI::fromJsonValue(m_bridges, json[QString("Bridges")]);
    m_bridges_isSet = !json[QString("Bridges")].isNull() && m_bridges_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListBridgesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBridgesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bridges.isSet()) {
        obj.insert(QString("Bridges"), ::OpenAPI::toJsonValue(m_bridges));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListBridgesResponse::getBridges() const {
    return m_bridges;
}
void OAIListBridgesResponse::setBridges(const QList &bridges) {
    m_bridges = bridges;
    m_bridges_isSet = true;
}

bool OAIListBridgesResponse::is_bridges_Set() const{
    return m_bridges_isSet;
}

bool OAIListBridgesResponse::is_bridges_Valid() const{
    return m_bridges_isValid;
}

QString OAIListBridgesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListBridgesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListBridgesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListBridgesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListBridgesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bridges.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBridgesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
