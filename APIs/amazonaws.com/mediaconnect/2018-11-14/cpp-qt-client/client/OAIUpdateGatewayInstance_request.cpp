/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateGatewayInstance_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateGatewayInstance_request::OAIUpdateGatewayInstance_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateGatewayInstance_request::OAIUpdateGatewayInstance_request() {
    this->initializeModel();
}

OAIUpdateGatewayInstance_request::~OAIUpdateGatewayInstance_request() {}

void OAIUpdateGatewayInstance_request::initializeModel() {

    m_bridge_placement_isSet = false;
    m_bridge_placement_isValid = false;
}

void OAIUpdateGatewayInstance_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateGatewayInstance_request::fromJsonObject(QJsonObject json) {

    m_bridge_placement_isValid = ::OpenAPI::fromJsonValue(m_bridge_placement, json[QString("bridgePlacement")]);
    m_bridge_placement_isSet = !json[QString("bridgePlacement")].isNull() && m_bridge_placement_isValid;
}

QString OAIUpdateGatewayInstance_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateGatewayInstance_request::asJsonObject() const {
    QJsonObject obj;
    if (m_bridge_placement_isSet) {
        obj.insert(QString("bridgePlacement"), ::OpenAPI::toJsonValue(m_bridge_placement));
    }
    return obj;
}

QString OAIUpdateGatewayInstance_request::getBridgePlacement() const {
    return m_bridge_placement;
}
void OAIUpdateGatewayInstance_request::setBridgePlacement(const QString &bridge_placement) {
    m_bridge_placement = bridge_placement;
    m_bridge_placement_isSet = true;
}

bool OAIUpdateGatewayInstance_request::is_bridge_placement_Set() const{
    return m_bridge_placement_isSet;
}

bool OAIUpdateGatewayInstance_request::is_bridge_placement_Valid() const{
    return m_bridge_placement_isValid;
}

bool OAIUpdateGatewayInstance_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bridge_placement_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateGatewayInstance_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
