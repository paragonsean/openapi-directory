/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeOfferingResponse_Offering.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeOfferingResponse_Offering::OAIDescribeOfferingResponse_Offering(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeOfferingResponse_Offering::OAIDescribeOfferingResponse_Offering() {
    this->initializeModel();
}

OAIDescribeOfferingResponse_Offering::~OAIDescribeOfferingResponse_Offering() {}

void OAIDescribeOfferingResponse_Offering::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_duration_units_isSet = false;
    m_duration_units_isValid = false;

    m_offering_arn_isSet = false;
    m_offering_arn_isValid = false;

    m_offering_description_isSet = false;
    m_offering_description_isValid = false;

    m_price_per_unit_isSet = false;
    m_price_per_unit_isValid = false;

    m_price_units_isSet = false;
    m_price_units_isValid = false;

    m_resource_specification_isSet = false;
    m_resource_specification_isValid = false;
}

void OAIDescribeOfferingResponse_Offering::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeOfferingResponse_Offering::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("CurrencyCode")]);
    m_currency_code_isSet = !json[QString("CurrencyCode")].isNull() && m_currency_code_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("Duration")]);
    m_duration_isSet = !json[QString("Duration")].isNull() && m_duration_isValid;

    m_duration_units_isValid = ::OpenAPI::fromJsonValue(m_duration_units, json[QString("DurationUnits")]);
    m_duration_units_isSet = !json[QString("DurationUnits")].isNull() && m_duration_units_isValid;

    m_offering_arn_isValid = ::OpenAPI::fromJsonValue(m_offering_arn, json[QString("OfferingArn")]);
    m_offering_arn_isSet = !json[QString("OfferingArn")].isNull() && m_offering_arn_isValid;

    m_offering_description_isValid = ::OpenAPI::fromJsonValue(m_offering_description, json[QString("OfferingDescription")]);
    m_offering_description_isSet = !json[QString("OfferingDescription")].isNull() && m_offering_description_isValid;

    m_price_per_unit_isValid = ::OpenAPI::fromJsonValue(m_price_per_unit, json[QString("PricePerUnit")]);
    m_price_per_unit_isSet = !json[QString("PricePerUnit")].isNull() && m_price_per_unit_isValid;

    m_price_units_isValid = ::OpenAPI::fromJsonValue(m_price_units, json[QString("PriceUnits")]);
    m_price_units_isSet = !json[QString("PriceUnits")].isNull() && m_price_units_isValid;

    m_resource_specification_isValid = ::OpenAPI::fromJsonValue(m_resource_specification, json[QString("ResourceSpecification")]);
    m_resource_specification_isSet = !json[QString("ResourceSpecification")].isNull() && m_resource_specification_isValid;
}

QString OAIDescribeOfferingResponse_Offering::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeOfferingResponse_Offering::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("CurrencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_duration_isSet) {
        obj.insert(QString("Duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_duration_units.isSet()) {
        obj.insert(QString("DurationUnits"), ::OpenAPI::toJsonValue(m_duration_units));
    }
    if (m_offering_arn_isSet) {
        obj.insert(QString("OfferingArn"), ::OpenAPI::toJsonValue(m_offering_arn));
    }
    if (m_offering_description_isSet) {
        obj.insert(QString("OfferingDescription"), ::OpenAPI::toJsonValue(m_offering_description));
    }
    if (m_price_per_unit_isSet) {
        obj.insert(QString("PricePerUnit"), ::OpenAPI::toJsonValue(m_price_per_unit));
    }
    if (m_price_units.isSet()) {
        obj.insert(QString("PriceUnits"), ::OpenAPI::toJsonValue(m_price_units));
    }
    if (m_resource_specification.isSet()) {
        obj.insert(QString("ResourceSpecification"), ::OpenAPI::toJsonValue(m_resource_specification));
    }
    return obj;
}

QString OAIDescribeOfferingResponse_Offering::getCurrencyCode() const {
    return m_currency_code;
}
void OAIDescribeOfferingResponse_Offering::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

qint32 OAIDescribeOfferingResponse_Offering::getDuration() const {
    return m_duration;
}
void OAIDescribeOfferingResponse_Offering::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_duration_Valid() const{
    return m_duration_isValid;
}

OAIDurationUnits OAIDescribeOfferingResponse_Offering::getDurationUnits() const {
    return m_duration_units;
}
void OAIDescribeOfferingResponse_Offering::setDurationUnits(const OAIDurationUnits &duration_units) {
    m_duration_units = duration_units;
    m_duration_units_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_duration_units_Set() const{
    return m_duration_units_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_duration_units_Valid() const{
    return m_duration_units_isValid;
}

QString OAIDescribeOfferingResponse_Offering::getOfferingArn() const {
    return m_offering_arn;
}
void OAIDescribeOfferingResponse_Offering::setOfferingArn(const QString &offering_arn) {
    m_offering_arn = offering_arn;
    m_offering_arn_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_offering_arn_Set() const{
    return m_offering_arn_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_offering_arn_Valid() const{
    return m_offering_arn_isValid;
}

QString OAIDescribeOfferingResponse_Offering::getOfferingDescription() const {
    return m_offering_description;
}
void OAIDescribeOfferingResponse_Offering::setOfferingDescription(const QString &offering_description) {
    m_offering_description = offering_description;
    m_offering_description_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_offering_description_Set() const{
    return m_offering_description_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_offering_description_Valid() const{
    return m_offering_description_isValid;
}

QString OAIDescribeOfferingResponse_Offering::getPricePerUnit() const {
    return m_price_per_unit;
}
void OAIDescribeOfferingResponse_Offering::setPricePerUnit(const QString &price_per_unit) {
    m_price_per_unit = price_per_unit;
    m_price_per_unit_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_price_per_unit_Set() const{
    return m_price_per_unit_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_price_per_unit_Valid() const{
    return m_price_per_unit_isValid;
}

OAIPriceUnits OAIDescribeOfferingResponse_Offering::getPriceUnits() const {
    return m_price_units;
}
void OAIDescribeOfferingResponse_Offering::setPriceUnits(const OAIPriceUnits &price_units) {
    m_price_units = price_units;
    m_price_units_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_price_units_Set() const{
    return m_price_units_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_price_units_Valid() const{
    return m_price_units_isValid;
}

OAIOffering_ResourceSpecification OAIDescribeOfferingResponse_Offering::getResourceSpecification() const {
    return m_resource_specification;
}
void OAIDescribeOfferingResponse_Offering::setResourceSpecification(const OAIOffering_ResourceSpecification &resource_specification) {
    m_resource_specification = resource_specification;
    m_resource_specification_isSet = true;
}

bool OAIDescribeOfferingResponse_Offering::is_resource_specification_Set() const{
    return m_resource_specification_isSet;
}

bool OAIDescribeOfferingResponse_Offering::is_resource_specification_Valid() const{
    return m_resource_specification_isValid;
}

bool OAIDescribeOfferingResponse_Offering::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_units.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offering_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offering_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_per_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_units.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeOfferingResponse_Offering::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_code_isValid && m_duration_isValid && m_duration_units_isValid && m_offering_arn_isValid && m_offering_description_isValid && m_price_per_unit_isValid && m_price_units_isValid && m_resource_specification_isValid && true;
}

} // namespace OpenAPI
