/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateFlowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateFlowRequest::OAIUpdateFlowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateFlowRequest::OAIUpdateFlowRequest() {
    this->initializeModel();
}

OAIUpdateFlowRequest::~OAIUpdateFlowRequest() {}

void OAIUpdateFlowRequest::initializeModel() {

    m_source_failover_config_isSet = false;
    m_source_failover_config_isValid = false;

    m_maintenance_isSet = false;
    m_maintenance_isValid = false;
}

void OAIUpdateFlowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateFlowRequest::fromJsonObject(QJsonObject json) {

    m_source_failover_config_isValid = ::OpenAPI::fromJsonValue(m_source_failover_config, json[QString("SourceFailoverConfig")]);
    m_source_failover_config_isSet = !json[QString("SourceFailoverConfig")].isNull() && m_source_failover_config_isValid;

    m_maintenance_isValid = ::OpenAPI::fromJsonValue(m_maintenance, json[QString("Maintenance")]);
    m_maintenance_isSet = !json[QString("Maintenance")].isNull() && m_maintenance_isValid;
}

QString OAIUpdateFlowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateFlowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_source_failover_config.isSet()) {
        obj.insert(QString("SourceFailoverConfig"), ::OpenAPI::toJsonValue(m_source_failover_config));
    }
    if (m_maintenance.isSet()) {
        obj.insert(QString("Maintenance"), ::OpenAPI::toJsonValue(m_maintenance));
    }
    return obj;
}

OAIUpdateBridgeRequest_SourceFailoverConfig OAIUpdateFlowRequest::getSourceFailoverConfig() const {
    return m_source_failover_config;
}
void OAIUpdateFlowRequest::setSourceFailoverConfig(const OAIUpdateBridgeRequest_SourceFailoverConfig &source_failover_config) {
    m_source_failover_config = source_failover_config;
    m_source_failover_config_isSet = true;
}

bool OAIUpdateFlowRequest::is_source_failover_config_Set() const{
    return m_source_failover_config_isSet;
}

bool OAIUpdateFlowRequest::is_source_failover_config_Valid() const{
    return m_source_failover_config_isValid;
}

OAIUpdateFlowRequest_Maintenance OAIUpdateFlowRequest::getMaintenance() const {
    return m_maintenance;
}
void OAIUpdateFlowRequest::setMaintenance(const OAIUpdateFlowRequest_Maintenance &maintenance) {
    m_maintenance = maintenance;
    m_maintenance_isSet = true;
}

bool OAIUpdateFlowRequest::is_maintenance_Set() const{
    return m_maintenance_isSet;
}

bool OAIUpdateFlowRequest::is_maintenance_Valid() const{
    return m_maintenance_isValid;
}

bool OAIUpdateFlowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_failover_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateFlowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
