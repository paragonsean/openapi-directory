/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFlowResponse_Flow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFlowResponse_Flow::OAICreateFlowResponse_Flow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFlowResponse_Flow::OAICreateFlowResponse_Flow() {
    this->initializeModel();
}

OAICreateFlowResponse_Flow::~OAICreateFlowResponse_Flow() {}

void OAICreateFlowResponse_Flow::initializeModel() {

    m_availability_zone_isSet = false;
    m_availability_zone_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_egress_ip_isSet = false;
    m_egress_ip_isValid = false;

    m_entitlements_isSet = false;
    m_entitlements_isValid = false;

    m_flow_arn_isSet = false;
    m_flow_arn_isValid = false;

    m_media_streams_isSet = false;
    m_media_streams_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_source_failover_config_isSet = false;
    m_source_failover_config_isValid = false;

    m_sources_isSet = false;
    m_sources_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_vpc_interfaces_isSet = false;
    m_vpc_interfaces_isValid = false;

    m_maintenance_isSet = false;
    m_maintenance_isValid = false;
}

void OAICreateFlowResponse_Flow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFlowResponse_Flow::fromJsonObject(QJsonObject json) {

    m_availability_zone_isValid = ::OpenAPI::fromJsonValue(m_availability_zone, json[QString("AvailabilityZone")]);
    m_availability_zone_isSet = !json[QString("AvailabilityZone")].isNull() && m_availability_zone_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_egress_ip_isValid = ::OpenAPI::fromJsonValue(m_egress_ip, json[QString("EgressIp")]);
    m_egress_ip_isSet = !json[QString("EgressIp")].isNull() && m_egress_ip_isValid;

    m_entitlements_isValid = ::OpenAPI::fromJsonValue(m_entitlements, json[QString("Entitlements")]);
    m_entitlements_isSet = !json[QString("Entitlements")].isNull() && m_entitlements_isValid;

    m_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_arn, json[QString("FlowArn")]);
    m_flow_arn_isSet = !json[QString("FlowArn")].isNull() && m_flow_arn_isValid;

    m_media_streams_isValid = ::OpenAPI::fromJsonValue(m_media_streams, json[QString("MediaStreams")]);
    m_media_streams_isSet = !json[QString("MediaStreams")].isNull() && m_media_streams_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("Outputs")]);
    m_outputs_isSet = !json[QString("Outputs")].isNull() && m_outputs_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_source_failover_config_isValid = ::OpenAPI::fromJsonValue(m_source_failover_config, json[QString("SourceFailoverConfig")]);
    m_source_failover_config_isSet = !json[QString("SourceFailoverConfig")].isNull() && m_source_failover_config_isValid;

    m_sources_isValid = ::OpenAPI::fromJsonValue(m_sources, json[QString("Sources")]);
    m_sources_isSet = !json[QString("Sources")].isNull() && m_sources_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_vpc_interfaces_isValid = ::OpenAPI::fromJsonValue(m_vpc_interfaces, json[QString("VpcInterfaces")]);
    m_vpc_interfaces_isSet = !json[QString("VpcInterfaces")].isNull() && m_vpc_interfaces_isValid;

    m_maintenance_isValid = ::OpenAPI::fromJsonValue(m_maintenance, json[QString("Maintenance")]);
    m_maintenance_isSet = !json[QString("Maintenance")].isNull() && m_maintenance_isValid;
}

QString OAICreateFlowResponse_Flow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFlowResponse_Flow::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_zone_isSet) {
        obj.insert(QString("AvailabilityZone"), ::OpenAPI::toJsonValue(m_availability_zone));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_egress_ip_isSet) {
        obj.insert(QString("EgressIp"), ::OpenAPI::toJsonValue(m_egress_ip));
    }
    if (m_entitlements.isSet()) {
        obj.insert(QString("Entitlements"), ::OpenAPI::toJsonValue(m_entitlements));
    }
    if (m_flow_arn_isSet) {
        obj.insert(QString("FlowArn"), ::OpenAPI::toJsonValue(m_flow_arn));
    }
    if (m_media_streams.isSet()) {
        obj.insert(QString("MediaStreams"), ::OpenAPI::toJsonValue(m_media_streams));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_outputs.isSet()) {
        obj.insert(QString("Outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    if (m_source.isSet()) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_source_failover_config.isSet()) {
        obj.insert(QString("SourceFailoverConfig"), ::OpenAPI::toJsonValue(m_source_failover_config));
    }
    if (m_sources.isSet()) {
        obj.insert(QString("Sources"), ::OpenAPI::toJsonValue(m_sources));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_vpc_interfaces.isSet()) {
        obj.insert(QString("VpcInterfaces"), ::OpenAPI::toJsonValue(m_vpc_interfaces));
    }
    if (m_maintenance.isSet()) {
        obj.insert(QString("Maintenance"), ::OpenAPI::toJsonValue(m_maintenance));
    }
    return obj;
}

QString OAICreateFlowResponse_Flow::getAvailabilityZone() const {
    return m_availability_zone;
}
void OAICreateFlowResponse_Flow::setAvailabilityZone(const QString &availability_zone) {
    m_availability_zone = availability_zone;
    m_availability_zone_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_availability_zone_Set() const{
    return m_availability_zone_isSet;
}

bool OAICreateFlowResponse_Flow::is_availability_zone_Valid() const{
    return m_availability_zone_isValid;
}

QString OAICreateFlowResponse_Flow::getDescription() const {
    return m_description;
}
void OAICreateFlowResponse_Flow::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateFlowResponse_Flow::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateFlowResponse_Flow::getEgressIp() const {
    return m_egress_ip;
}
void OAICreateFlowResponse_Flow::setEgressIp(const QString &egress_ip) {
    m_egress_ip = egress_ip;
    m_egress_ip_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_egress_ip_Set() const{
    return m_egress_ip_isSet;
}

bool OAICreateFlowResponse_Flow::is_egress_ip_Valid() const{
    return m_egress_ip_isValid;
}

QList OAICreateFlowResponse_Flow::getEntitlements() const {
    return m_entitlements;
}
void OAICreateFlowResponse_Flow::setEntitlements(const QList &entitlements) {
    m_entitlements = entitlements;
    m_entitlements_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_entitlements_Set() const{
    return m_entitlements_isSet;
}

bool OAICreateFlowResponse_Flow::is_entitlements_Valid() const{
    return m_entitlements_isValid;
}

QString OAICreateFlowResponse_Flow::getFlowArn() const {
    return m_flow_arn;
}
void OAICreateFlowResponse_Flow::setFlowArn(const QString &flow_arn) {
    m_flow_arn = flow_arn;
    m_flow_arn_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_flow_arn_Set() const{
    return m_flow_arn_isSet;
}

bool OAICreateFlowResponse_Flow::is_flow_arn_Valid() const{
    return m_flow_arn_isValid;
}

QList OAICreateFlowResponse_Flow::getMediaStreams() const {
    return m_media_streams;
}
void OAICreateFlowResponse_Flow::setMediaStreams(const QList &media_streams) {
    m_media_streams = media_streams;
    m_media_streams_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_media_streams_Set() const{
    return m_media_streams_isSet;
}

bool OAICreateFlowResponse_Flow::is_media_streams_Valid() const{
    return m_media_streams_isValid;
}

QString OAICreateFlowResponse_Flow::getName() const {
    return m_name;
}
void OAICreateFlowResponse_Flow::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateFlowResponse_Flow::is_name_Valid() const{
    return m_name_isValid;
}

QList OAICreateFlowResponse_Flow::getOutputs() const {
    return m_outputs;
}
void OAICreateFlowResponse_Flow::setOutputs(const QList &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAICreateFlowResponse_Flow::is_outputs_Valid() const{
    return m_outputs_isValid;
}

OAIFlow_Source OAICreateFlowResponse_Flow::getSource() const {
    return m_source;
}
void OAICreateFlowResponse_Flow::setSource(const OAIFlow_Source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_source_Set() const{
    return m_source_isSet;
}

bool OAICreateFlowResponse_Flow::is_source_Valid() const{
    return m_source_isValid;
}

OAIBridge_SourceFailoverConfig OAICreateFlowResponse_Flow::getSourceFailoverConfig() const {
    return m_source_failover_config;
}
void OAICreateFlowResponse_Flow::setSourceFailoverConfig(const OAIBridge_SourceFailoverConfig &source_failover_config) {
    m_source_failover_config = source_failover_config;
    m_source_failover_config_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_source_failover_config_Set() const{
    return m_source_failover_config_isSet;
}

bool OAICreateFlowResponse_Flow::is_source_failover_config_Valid() const{
    return m_source_failover_config_isValid;
}

QList OAICreateFlowResponse_Flow::getSources() const {
    return m_sources;
}
void OAICreateFlowResponse_Flow::setSources(const QList &sources) {
    m_sources = sources;
    m_sources_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_sources_Set() const{
    return m_sources_isSet;
}

bool OAICreateFlowResponse_Flow::is_sources_Valid() const{
    return m_sources_isValid;
}

OAIStatus OAICreateFlowResponse_Flow::getStatus() const {
    return m_status;
}
void OAICreateFlowResponse_Flow::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateFlowResponse_Flow::is_status_Valid() const{
    return m_status_isValid;
}

QList OAICreateFlowResponse_Flow::getVpcInterfaces() const {
    return m_vpc_interfaces;
}
void OAICreateFlowResponse_Flow::setVpcInterfaces(const QList &vpc_interfaces) {
    m_vpc_interfaces = vpc_interfaces;
    m_vpc_interfaces_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_vpc_interfaces_Set() const{
    return m_vpc_interfaces_isSet;
}

bool OAICreateFlowResponse_Flow::is_vpc_interfaces_Valid() const{
    return m_vpc_interfaces_isValid;
}

OAIFlow_Maintenance OAICreateFlowResponse_Flow::getMaintenance() const {
    return m_maintenance;
}
void OAICreateFlowResponse_Flow::setMaintenance(const OAIFlow_Maintenance &maintenance) {
    m_maintenance = maintenance;
    m_maintenance_isSet = true;
}

bool OAICreateFlowResponse_Flow::is_maintenance_Set() const{
    return m_maintenance_isSet;
}

bool OAICreateFlowResponse_Flow::is_maintenance_Valid() const{
    return m_maintenance_isValid;
}

bool OAICreateFlowResponse_Flow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_egress_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entitlements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_streams.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_failover_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_interfaces.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFlowResponse_Flow::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_availability_zone_isValid && m_entitlements_isValid && m_flow_arn_isValid && m_name_isValid && m_outputs_isValid && m_source_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
