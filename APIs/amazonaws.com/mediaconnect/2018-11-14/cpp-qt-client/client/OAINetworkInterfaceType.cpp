/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkInterfaceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkInterfaceType::OAINetworkInterfaceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkInterfaceType::OAINetworkInterfaceType() {
    this->initializeModel();
}

OAINetworkInterfaceType::~OAINetworkInterfaceType() {}

void OAINetworkInterfaceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINetworkInterfaceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINetworkInterfaceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ena", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkInterfaceType::ENA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("efa", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkInterfaceType::EFA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINetworkInterfaceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINetworkInterfaceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINetworkInterfaceType::ENA:
            val = "ena";
            break;
        case eOAINetworkInterfaceType::EFA:
            val = "efa";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINetworkInterfaceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINetworkInterfaceType::eOAINetworkInterfaceType OAINetworkInterfaceType::getValue() const {
    return m_value;
}

void OAINetworkInterfaceType::setValue(const OAINetworkInterfaceType::eOAINetworkInterfaceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINetworkInterfaceType::isSet() const {
    
    return m_value_isSet;
}

bool OAINetworkInterfaceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
