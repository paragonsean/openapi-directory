/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddFlowMediaStreams_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddFlowMediaStreams_request::OAIAddFlowMediaStreams_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddFlowMediaStreams_request::OAIAddFlowMediaStreams_request() {
    this->initializeModel();
}

OAIAddFlowMediaStreams_request::~OAIAddFlowMediaStreams_request() {}

void OAIAddFlowMediaStreams_request::initializeModel() {

    m_media_streams_isSet = false;
    m_media_streams_isValid = false;
}

void OAIAddFlowMediaStreams_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddFlowMediaStreams_request::fromJsonObject(QJsonObject json) {

    m_media_streams_isValid = ::OpenAPI::fromJsonValue(m_media_streams, json[QString("mediaStreams")]);
    m_media_streams_isSet = !json[QString("mediaStreams")].isNull() && m_media_streams_isValid;
}

QString OAIAddFlowMediaStreams_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddFlowMediaStreams_request::asJsonObject() const {
    QJsonObject obj;
    if (m_media_streams.size() > 0) {
        obj.insert(QString("mediaStreams"), ::OpenAPI::toJsonValue(m_media_streams));
    }
    return obj;
}

QList<OAIAddMediaStreamRequest> OAIAddFlowMediaStreams_request::getMediaStreams() const {
    return m_media_streams;
}
void OAIAddFlowMediaStreams_request::setMediaStreams(const QList<OAIAddMediaStreamRequest> &media_streams) {
    m_media_streams = media_streams;
    m_media_streams_isSet = true;
}

bool OAIAddFlowMediaStreams_request::is_media_streams_Set() const{
    return m_media_streams_isSet;
}

bool OAIAddFlowMediaStreams_request::is_media_streams_Valid() const{
    return m_media_streams_isValid;
}

bool OAIAddFlowMediaStreams_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_streams.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddFlowMediaStreams_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_media_streams_isValid && true;
}

} // namespace OpenAPI
