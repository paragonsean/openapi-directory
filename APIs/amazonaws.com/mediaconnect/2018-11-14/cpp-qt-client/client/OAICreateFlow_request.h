/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFlow_request.h
 *
 * 
 */

#ifndef OAICreateFlow_request_H
#define OAICreateFlow_request_H

#include <QJsonObject>

#include "OAIAddMediaStreamRequest.h"
#include "OAIAddOutputRequest.h"
#include "OAICreateBridge_request_sourceFailoverConfig.h"
#include "OAICreateFlow_request_maintenance.h"
#include "OAICreateFlow_request_source.h"
#include "OAIGrantEntitlementRequest.h"
#include "OAISetSourceRequest.h"
#include "OAIVpcInterfaceRequest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrantEntitlementRequest;
class OAIAddMediaStreamRequest;
class OAIAddOutputRequest;
class OAICreateFlow_request_source;
class OAICreateBridge_request_sourceFailoverConfig;
class OAISetSourceRequest;
class OAIVpcInterfaceRequest;
class OAICreateFlow_request_maintenance;

class OAICreateFlow_request : public OAIObject {
public:
    OAICreateFlow_request();
    OAICreateFlow_request(QString json);
    ~OAICreateFlow_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    QList<OAIGrantEntitlementRequest> getEntitlements() const;
    void setEntitlements(const QList<OAIGrantEntitlementRequest> &entitlements);
    bool is_entitlements_Set() const;
    bool is_entitlements_Valid() const;

    QList<OAIAddMediaStreamRequest> getMediaStreams() const;
    void setMediaStreams(const QList<OAIAddMediaStreamRequest> &media_streams);
    bool is_media_streams_Set() const;
    bool is_media_streams_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIAddOutputRequest> getOutputs() const;
    void setOutputs(const QList<OAIAddOutputRequest> &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    OAICreateFlow_request_source getSource() const;
    void setSource(const OAICreateFlow_request_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAICreateBridge_request_sourceFailoverConfig getSourceFailoverConfig() const;
    void setSourceFailoverConfig(const OAICreateBridge_request_sourceFailoverConfig &source_failover_config);
    bool is_source_failover_config_Set() const;
    bool is_source_failover_config_Valid() const;

    QList<OAISetSourceRequest> getSources() const;
    void setSources(const QList<OAISetSourceRequest> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QList<OAIVpcInterfaceRequest> getVpcInterfaces() const;
    void setVpcInterfaces(const QList<OAIVpcInterfaceRequest> &vpc_interfaces);
    bool is_vpc_interfaces_Set() const;
    bool is_vpc_interfaces_Valid() const;

    OAICreateFlow_request_maintenance getMaintenance() const;
    void setMaintenance(const OAICreateFlow_request_maintenance &maintenance);
    bool is_maintenance_Set() const;
    bool is_maintenance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    QList<OAIGrantEntitlementRequest> m_entitlements;
    bool m_entitlements_isSet;
    bool m_entitlements_isValid;

    QList<OAIAddMediaStreamRequest> m_media_streams;
    bool m_media_streams_isSet;
    bool m_media_streams_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIAddOutputRequest> m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    OAICreateFlow_request_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAICreateBridge_request_sourceFailoverConfig m_source_failover_config;
    bool m_source_failover_config_isSet;
    bool m_source_failover_config_isValid;

    QList<OAISetSourceRequest> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QList<OAIVpcInterfaceRequest> m_vpc_interfaces;
    bool m_vpc_interfaces_isSet;
    bool m_vpc_interfaces_isValid;

    OAICreateFlow_request_maintenance m_maintenance;
    bool m_maintenance_isSet;
    bool m_maintenance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFlow_request)

#endif // OAICreateFlow_request_H
