/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBridge.h
 *
 * A Bridge is the connection between your datacenter&#39;s Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
 */

#ifndef OAIBridge_H
#define OAIBridge_H

#include <QJsonObject>

#include "OAIBridgeState.h"
#include "OAIBridge_EgressGatewayBridge.h"
#include "OAIBridge_IngressGatewayBridge.h"
#include "OAIBridge_SourceFailoverConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBridge_EgressGatewayBridge;
class OAIBridge_IngressGatewayBridge;
class OAIBridge_SourceFailoverConfig;

class OAIBridge : public OAIObject {
public:
    OAIBridge();
    OAIBridge(QString json);
    ~OAIBridge() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBridgeArn() const;
    void setBridgeArn(const QString &bridge_arn);
    bool is_bridge_arn_Set() const;
    bool is_bridge_arn_Valid() const;

    QList getBridgeMessages() const;
    void setBridgeMessages(const QList &bridge_messages);
    bool is_bridge_messages_Set() const;
    bool is_bridge_messages_Valid() const;

    OAIBridgeState getBridgeState() const;
    void setBridgeState(const OAIBridgeState &bridge_state);
    bool is_bridge_state_Set() const;
    bool is_bridge_state_Valid() const;

    OAIBridge_EgressGatewayBridge getEgressGatewayBridge() const;
    void setEgressGatewayBridge(const OAIBridge_EgressGatewayBridge &egress_gateway_bridge);
    bool is_egress_gateway_bridge_Set() const;
    bool is_egress_gateway_bridge_Valid() const;

    OAIBridge_IngressGatewayBridge getIngressGatewayBridge() const;
    void setIngressGatewayBridge(const OAIBridge_IngressGatewayBridge &ingress_gateway_bridge);
    bool is_ingress_gateway_bridge_Set() const;
    bool is_ingress_gateway_bridge_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getOutputs() const;
    void setOutputs(const QList &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    QString getPlacementArn() const;
    void setPlacementArn(const QString &placement_arn);
    bool is_placement_arn_Set() const;
    bool is_placement_arn_Valid() const;

    OAIBridge_SourceFailoverConfig getSourceFailoverConfig() const;
    void setSourceFailoverConfig(const OAIBridge_SourceFailoverConfig &source_failover_config);
    bool is_source_failover_config_Set() const;
    bool is_source_failover_config_Valid() const;

    QList getSources() const;
    void setSources(const QList &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bridge_arn;
    bool m_bridge_arn_isSet;
    bool m_bridge_arn_isValid;

    QList m_bridge_messages;
    bool m_bridge_messages_isSet;
    bool m_bridge_messages_isValid;

    OAIBridgeState m_bridge_state;
    bool m_bridge_state_isSet;
    bool m_bridge_state_isValid;

    OAIBridge_EgressGatewayBridge m_egress_gateway_bridge;
    bool m_egress_gateway_bridge_isSet;
    bool m_egress_gateway_bridge_isValid;

    OAIBridge_IngressGatewayBridge m_ingress_gateway_bridge;
    bool m_ingress_gateway_bridge_isSet;
    bool m_ingress_gateway_bridge_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    QString m_placement_arn;
    bool m_placement_arn_isSet;
    bool m_placement_arn_isValid;

    OAIBridge_SourceFailoverConfig m_source_failover_config;
    bool m_source_failover_config_isSet;
    bool m_source_failover_config_isValid;

    QList m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBridge)

#endif // OAIBridge_H
