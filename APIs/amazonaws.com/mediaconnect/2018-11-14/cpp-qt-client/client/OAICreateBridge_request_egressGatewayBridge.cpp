/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBridge_request_egressGatewayBridge.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBridge_request_egressGatewayBridge::OAICreateBridge_request_egressGatewayBridge(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBridge_request_egressGatewayBridge::OAICreateBridge_request_egressGatewayBridge() {
    this->initializeModel();
}

OAICreateBridge_request_egressGatewayBridge::~OAICreateBridge_request_egressGatewayBridge() {}

void OAICreateBridge_request_egressGatewayBridge::initializeModel() {

    m_max_bitrate_isSet = false;
    m_max_bitrate_isValid = false;
}

void OAICreateBridge_request_egressGatewayBridge::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBridge_request_egressGatewayBridge::fromJsonObject(QJsonObject json) {

    m_max_bitrate_isValid = ::OpenAPI::fromJsonValue(m_max_bitrate, json[QString("MaxBitrate")]);
    m_max_bitrate_isSet = !json[QString("MaxBitrate")].isNull() && m_max_bitrate_isValid;
}

QString OAICreateBridge_request_egressGatewayBridge::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBridge_request_egressGatewayBridge::asJsonObject() const {
    QJsonObject obj;
    if (m_max_bitrate_isSet) {
        obj.insert(QString("MaxBitrate"), ::OpenAPI::toJsonValue(m_max_bitrate));
    }
    return obj;
}

qint32 OAICreateBridge_request_egressGatewayBridge::getMaxBitrate() const {
    return m_max_bitrate;
}
void OAICreateBridge_request_egressGatewayBridge::setMaxBitrate(const qint32 &max_bitrate) {
    m_max_bitrate = max_bitrate;
    m_max_bitrate_isSet = true;
}

bool OAICreateBridge_request_egressGatewayBridge::is_max_bitrate_Set() const{
    return m_max_bitrate_isSet;
}

bool OAICreateBridge_request_egressGatewayBridge::is_max_bitrate_Valid() const{
    return m_max_bitrate_isValid;
}

bool OAICreateBridge_request_egressGatewayBridge::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_bitrate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBridge_request_egressGatewayBridge::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
