/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddFlowVpcInterfacesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddFlowVpcInterfacesRequest::OAIAddFlowVpcInterfacesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddFlowVpcInterfacesRequest::OAIAddFlowVpcInterfacesRequest() {
    this->initializeModel();
}

OAIAddFlowVpcInterfacesRequest::~OAIAddFlowVpcInterfacesRequest() {}

void OAIAddFlowVpcInterfacesRequest::initializeModel() {

    m_vpc_interfaces_isSet = false;
    m_vpc_interfaces_isValid = false;
}

void OAIAddFlowVpcInterfacesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddFlowVpcInterfacesRequest::fromJsonObject(QJsonObject json) {

    m_vpc_interfaces_isValid = ::OpenAPI::fromJsonValue(m_vpc_interfaces, json[QString("VpcInterfaces")]);
    m_vpc_interfaces_isSet = !json[QString("VpcInterfaces")].isNull() && m_vpc_interfaces_isValid;
}

QString OAIAddFlowVpcInterfacesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddFlowVpcInterfacesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_interfaces.isSet()) {
        obj.insert(QString("VpcInterfaces"), ::OpenAPI::toJsonValue(m_vpc_interfaces));
    }
    return obj;
}

QList OAIAddFlowVpcInterfacesRequest::getVpcInterfaces() const {
    return m_vpc_interfaces;
}
void OAIAddFlowVpcInterfacesRequest::setVpcInterfaces(const QList &vpc_interfaces) {
    m_vpc_interfaces = vpc_interfaces;
    m_vpc_interfaces_isSet = true;
}

bool OAIAddFlowVpcInterfacesRequest::is_vpc_interfaces_Set() const{
    return m_vpc_interfaces_isSet;
}

bool OAIAddFlowVpcInterfacesRequest::is_vpc_interfaces_Valid() const{
    return m_vpc_interfaces_isValid;
}

bool OAIAddFlowVpcInterfacesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_interfaces.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddFlowVpcInterfacesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vpc_interfaces_isValid && true;
}

} // namespace OpenAPI
