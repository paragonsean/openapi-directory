/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoveFlowVpcInterfaceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoveFlowVpcInterfaceResponse::OAIRemoveFlowVpcInterfaceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoveFlowVpcInterfaceResponse::OAIRemoveFlowVpcInterfaceResponse() {
    this->initializeModel();
}

OAIRemoveFlowVpcInterfaceResponse::~OAIRemoveFlowVpcInterfaceResponse() {}

void OAIRemoveFlowVpcInterfaceResponse::initializeModel() {

    m_flow_arn_isSet = false;
    m_flow_arn_isValid = false;

    m_non_deleted_network_interface_ids_isSet = false;
    m_non_deleted_network_interface_ids_isValid = false;

    m_vpc_interface_name_isSet = false;
    m_vpc_interface_name_isValid = false;
}

void OAIRemoveFlowVpcInterfaceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoveFlowVpcInterfaceResponse::fromJsonObject(QJsonObject json) {

    m_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_arn, json[QString("FlowArn")]);
    m_flow_arn_isSet = !json[QString("FlowArn")].isNull() && m_flow_arn_isValid;

    m_non_deleted_network_interface_ids_isValid = ::OpenAPI::fromJsonValue(m_non_deleted_network_interface_ids, json[QString("NonDeletedNetworkInterfaceIds")]);
    m_non_deleted_network_interface_ids_isSet = !json[QString("NonDeletedNetworkInterfaceIds")].isNull() && m_non_deleted_network_interface_ids_isValid;

    m_vpc_interface_name_isValid = ::OpenAPI::fromJsonValue(m_vpc_interface_name, json[QString("VpcInterfaceName")]);
    m_vpc_interface_name_isSet = !json[QString("VpcInterfaceName")].isNull() && m_vpc_interface_name_isValid;
}

QString OAIRemoveFlowVpcInterfaceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoveFlowVpcInterfaceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_arn_isSet) {
        obj.insert(QString("FlowArn"), ::OpenAPI::toJsonValue(m_flow_arn));
    }
    if (m_non_deleted_network_interface_ids.isSet()) {
        obj.insert(QString("NonDeletedNetworkInterfaceIds"), ::OpenAPI::toJsonValue(m_non_deleted_network_interface_ids));
    }
    if (m_vpc_interface_name_isSet) {
        obj.insert(QString("VpcInterfaceName"), ::OpenAPI::toJsonValue(m_vpc_interface_name));
    }
    return obj;
}

QString OAIRemoveFlowVpcInterfaceResponse::getFlowArn() const {
    return m_flow_arn;
}
void OAIRemoveFlowVpcInterfaceResponse::setFlowArn(const QString &flow_arn) {
    m_flow_arn = flow_arn;
    m_flow_arn_isSet = true;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_flow_arn_Set() const{
    return m_flow_arn_isSet;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_flow_arn_Valid() const{
    return m_flow_arn_isValid;
}

QList OAIRemoveFlowVpcInterfaceResponse::getNonDeletedNetworkInterfaceIds() const {
    return m_non_deleted_network_interface_ids;
}
void OAIRemoveFlowVpcInterfaceResponse::setNonDeletedNetworkInterfaceIds(const QList &non_deleted_network_interface_ids) {
    m_non_deleted_network_interface_ids = non_deleted_network_interface_ids;
    m_non_deleted_network_interface_ids_isSet = true;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_non_deleted_network_interface_ids_Set() const{
    return m_non_deleted_network_interface_ids_isSet;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_non_deleted_network_interface_ids_Valid() const{
    return m_non_deleted_network_interface_ids_isValid;
}

QString OAIRemoveFlowVpcInterfaceResponse::getVpcInterfaceName() const {
    return m_vpc_interface_name;
}
void OAIRemoveFlowVpcInterfaceResponse::setVpcInterfaceName(const QString &vpc_interface_name) {
    m_vpc_interface_name = vpc_interface_name;
    m_vpc_interface_name_isSet = true;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_vpc_interface_name_Set() const{
    return m_vpc_interface_name_isSet;
}

bool OAIRemoveFlowVpcInterfaceResponse::is_vpc_interface_name_Valid() const{
    return m_vpc_interface_name_isValid;
}

bool OAIRemoveFlowVpcInterfaceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_deleted_network_interface_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_interface_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoveFlowVpcInterfaceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
