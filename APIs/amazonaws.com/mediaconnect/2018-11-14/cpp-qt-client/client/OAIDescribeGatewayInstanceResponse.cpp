/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeGatewayInstanceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeGatewayInstanceResponse::OAIDescribeGatewayInstanceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeGatewayInstanceResponse::OAIDescribeGatewayInstanceResponse() {
    this->initializeModel();
}

OAIDescribeGatewayInstanceResponse::~OAIDescribeGatewayInstanceResponse() {}

void OAIDescribeGatewayInstanceResponse::initializeModel() {

    m_gateway_instance_isSet = false;
    m_gateway_instance_isValid = false;
}

void OAIDescribeGatewayInstanceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeGatewayInstanceResponse::fromJsonObject(QJsonObject json) {

    m_gateway_instance_isValid = ::OpenAPI::fromJsonValue(m_gateway_instance, json[QString("GatewayInstance")]);
    m_gateway_instance_isSet = !json[QString("GatewayInstance")].isNull() && m_gateway_instance_isValid;
}

QString OAIDescribeGatewayInstanceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeGatewayInstanceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_gateway_instance.isSet()) {
        obj.insert(QString("GatewayInstance"), ::OpenAPI::toJsonValue(m_gateway_instance));
    }
    return obj;
}

OAIDescribeGatewayInstanceResponse_GatewayInstance OAIDescribeGatewayInstanceResponse::getGatewayInstance() const {
    return m_gateway_instance;
}
void OAIDescribeGatewayInstanceResponse::setGatewayInstance(const OAIDescribeGatewayInstanceResponse_GatewayInstance &gateway_instance) {
    m_gateway_instance = gateway_instance;
    m_gateway_instance_isSet = true;
}

bool OAIDescribeGatewayInstanceResponse::is_gateway_instance_Set() const{
    return m_gateway_instance_isSet;
}

bool OAIDescribeGatewayInstanceResponse::is_gateway_instance_Valid() const{
    return m_gateway_instance_isValid;
}

bool OAIDescribeGatewayInstanceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gateway_instance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeGatewayInstanceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
