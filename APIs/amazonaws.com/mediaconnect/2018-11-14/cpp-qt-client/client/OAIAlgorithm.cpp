/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlgorithm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlgorithm::OAIAlgorithm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlgorithm::OAIAlgorithm() {
    this->initializeModel();
}

OAIAlgorithm::~OAIAlgorithm() {}

void OAIAlgorithm::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlgorithm::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlgorithm::fromJson(QString jsonString) {
    
    if ( jsonString.compare("aes128", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlgorithm::AES128;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("aes192", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlgorithm::AES192;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("aes256", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlgorithm::AES256;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlgorithm::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlgorithm::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlgorithm::AES128:
            val = "aes128";
            break;
        case eOAIAlgorithm::AES192:
            val = "aes192";
            break;
        case eOAIAlgorithm::AES256:
            val = "aes256";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlgorithm::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlgorithm::eOAIAlgorithm OAIAlgorithm::getValue() const {
    return m_value;
}

void OAIAlgorithm::setValue(const OAIAlgorithm::eOAIAlgorithm& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlgorithm::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlgorithm::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
