/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEncodingName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEncodingName::OAIEncodingName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEncodingName::OAIEncodingName() {
    this->initializeModel();
}

OAIEncodingName::~OAIEncodingName() {}

void OAIEncodingName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEncodingName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEncodingName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("jxsv", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEncodingName::JXSV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("raw", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEncodingName::RAW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("smpte291", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEncodingName::SMPTE291;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pcm", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEncodingName::PCM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEncodingName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEncodingName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEncodingName::JXSV:
            val = "jxsv";
            break;
        case eOAIEncodingName::RAW:
            val = "raw";
            break;
        case eOAIEncodingName::SMPTE291:
            val = "smpte291";
            break;
        case eOAIEncodingName::PCM:
            val = "pcm";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEncodingName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEncodingName::eOAIEncodingName OAIEncodingName::getValue() const {
    return m_value;
}

void OAIEncodingName::setValue(const OAIEncodingName::eOAIEncodingName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEncodingName::isSet() const {
    
    return m_value_isSet;
}

bool OAIEncodingName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
