/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeBridgeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeBridgeResponse::OAIDescribeBridgeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeBridgeResponse::OAIDescribeBridgeResponse() {
    this->initializeModel();
}

OAIDescribeBridgeResponse::~OAIDescribeBridgeResponse() {}

void OAIDescribeBridgeResponse::initializeModel() {

    m_bridge_isSet = false;
    m_bridge_isValid = false;
}

void OAIDescribeBridgeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeBridgeResponse::fromJsonObject(QJsonObject json) {

    m_bridge_isValid = ::OpenAPI::fromJsonValue(m_bridge, json[QString("Bridge")]);
    m_bridge_isSet = !json[QString("Bridge")].isNull() && m_bridge_isValid;
}

QString OAIDescribeBridgeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeBridgeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bridge.isSet()) {
        obj.insert(QString("Bridge"), ::OpenAPI::toJsonValue(m_bridge));
    }
    return obj;
}

OAICreateBridgeResponse_Bridge OAIDescribeBridgeResponse::getBridge() const {
    return m_bridge;
}
void OAIDescribeBridgeResponse::setBridge(const OAICreateBridgeResponse_Bridge &bridge) {
    m_bridge = bridge;
    m_bridge_isSet = true;
}

bool OAIDescribeBridgeResponse::is_bridge_Set() const{
    return m_bridge_isSet;
}

bool OAIDescribeBridgeResponse::is_bridge_Valid() const{
    return m_bridge_isValid;
}

bool OAIDescribeBridgeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bridge.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeBridgeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
