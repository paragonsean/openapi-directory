/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment() {
    this->initializeModel();
}

OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::~OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment() {}

void OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::initializeModel() {

    m_vpc_interface_name_isSet = false;
    m_vpc_interface_name_isValid = false;
}

void OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::fromJsonObject(QJsonObject json) {

    m_vpc_interface_name_isValid = ::OpenAPI::fromJsonValue(m_vpc_interface_name, json[QString("VpcInterfaceName")]);
    m_vpc_interface_name_isSet = !json[QString("VpcInterfaceName")].isNull() && m_vpc_interface_name_isValid;
}

QString OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_interface_name_isSet) {
        obj.insert(QString("VpcInterfaceName"), ::OpenAPI::toJsonValue(m_vpc_interface_name));
    }
    return obj;
}

QString OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::getVpcInterfaceName() const {
    return m_vpc_interface_name;
}
void OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::setVpcInterfaceName(const QString &vpc_interface_name) {
    m_vpc_interface_name = vpc_interface_name;
    m_vpc_interface_name_isSet = true;
}

bool OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::is_vpc_interface_name_Set() const{
    return m_vpc_interface_name_isSet;
}

bool OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::is_vpc_interface_name_Valid() const{
    return m_vpc_interface_name_isValid;
}

bool OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_interface_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBridgeSource_request_flowSource_FlowVpcInterfaceAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
