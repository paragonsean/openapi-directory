/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITcs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITcs::OAITcs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITcs::OAITcs() {
    this->initializeModel();
}

OAITcs::~OAITcs() {}

void OAITcs::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITcs::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITcs::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::SDR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::PQ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HLG", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::HLG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LINEAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::LINEAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BT2100LINPQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::BT2100LINPQ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BT2100LINHLG", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::BT2100LINHLG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ST2065-1", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::ST2065_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ST428-1", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::ST428_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DENSITY", Qt::CaseInsensitive) == 0) {
        m_value = eOAITcs::DENSITY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITcs::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITcs::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITcs::SDR:
            val = "SDR";
            break;
        case eOAITcs::PQ:
            val = "PQ";
            break;
        case eOAITcs::HLG:
            val = "HLG";
            break;
        case eOAITcs::LINEAR:
            val = "LINEAR";
            break;
        case eOAITcs::BT2100LINPQ:
            val = "BT2100LINPQ";
            break;
        case eOAITcs::BT2100LINHLG:
            val = "BT2100LINHLG";
            break;
        case eOAITcs::ST2065_1:
            val = "ST2065-1";
            break;
        case eOAITcs::ST428_1:
            val = "ST428-1";
            break;
        case eOAITcs::DENSITY:
            val = "DENSITY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITcs::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITcs::eOAITcs OAITcs::getValue() const {
    return m_value;
}

void OAITcs::setValue(const OAITcs::eOAITcs& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITcs::isSet() const {
    
    return m_value_isSet;
}

bool OAITcs::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
