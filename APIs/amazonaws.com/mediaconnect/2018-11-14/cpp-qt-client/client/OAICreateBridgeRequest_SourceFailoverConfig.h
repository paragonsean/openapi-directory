/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBridgeRequest_SourceFailoverConfig.h
 *
 * 
 */

#ifndef OAICreateBridgeRequest_SourceFailoverConfig_H
#define OAICreateBridgeRequest_SourceFailoverConfig_H

#include <QJsonObject>

#include "OAICreateBridge_request_sourceFailoverConfig_SourcePriority.h"
#include "OAIFailoverMode.h"
#include "OAIState.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBridge_request_sourceFailoverConfig_SourcePriority;

class OAICreateBridgeRequest_SourceFailoverConfig : public OAIObject {
public:
    OAICreateBridgeRequest_SourceFailoverConfig();
    OAICreateBridgeRequest_SourceFailoverConfig(QString json);
    ~OAICreateBridgeRequest_SourceFailoverConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFailoverMode getFailoverMode() const;
    void setFailoverMode(const OAIFailoverMode &failover_mode);
    bool is_failover_mode_Set() const;
    bool is_failover_mode_Valid() const;

    qint32 getRecoveryWindow() const;
    void setRecoveryWindow(const qint32 &recovery_window);
    bool is_recovery_window_Set() const;
    bool is_recovery_window_Valid() const;

    OAICreateBridge_request_sourceFailoverConfig_SourcePriority getSourcePriority() const;
    void setSourcePriority(const OAICreateBridge_request_sourceFailoverConfig_SourcePriority &source_priority);
    bool is_source_priority_Set() const;
    bool is_source_priority_Valid() const;

    OAIState getState() const;
    void setState(const OAIState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFailoverMode m_failover_mode;
    bool m_failover_mode_isSet;
    bool m_failover_mode_isValid;

    qint32 m_recovery_window;
    bool m_recovery_window_isSet;
    bool m_recovery_window_isValid;

    OAICreateBridge_request_sourceFailoverConfig_SourcePriority m_source_priority;
    bool m_source_priority_isSet;
    bool m_source_priority_isValid;

    OAIState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBridgeRequest_SourceFailoverConfig)

#endif // OAICreateBridgeRequest_SourceFailoverConfig_H
