/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceType::OAIResourceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceType::OAIResourceType() {
    this->initializeModel();
}

OAIResourceType::~OAIResourceType() {}

void OAIResourceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIResourceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIResourceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Mbps_Outbound_Bandwidth", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceType::MBPS_OUTBOUND_BANDWIDTH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIResourceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIResourceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIResourceType::MBPS_OUTBOUND_BANDWIDTH:
            val = "Mbps_Outbound_Bandwidth";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIResourceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIResourceType::eOAIResourceType OAIResourceType::getValue() const {
    return m_value;
}

void OAIResourceType::setValue(const OAIResourceType::eOAIResourceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIResourceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIResourceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
