/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListedFlow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListedFlow::OAIListedFlow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListedFlow::OAIListedFlow() {
    this->initializeModel();
}

OAIListedFlow::~OAIListedFlow() {}

void OAIListedFlow::initializeModel() {

    m_availability_zone_isSet = false;
    m_availability_zone_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_flow_arn_isSet = false;
    m_flow_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_type_isSet = false;
    m_source_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_maintenance_isSet = false;
    m_maintenance_isValid = false;
}

void OAIListedFlow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListedFlow::fromJsonObject(QJsonObject json) {

    m_availability_zone_isValid = ::OpenAPI::fromJsonValue(m_availability_zone, json[QString("AvailabilityZone")]);
    m_availability_zone_isSet = !json[QString("AvailabilityZone")].isNull() && m_availability_zone_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_arn, json[QString("FlowArn")]);
    m_flow_arn_isSet = !json[QString("FlowArn")].isNull() && m_flow_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_source_type_isValid = ::OpenAPI::fromJsonValue(m_source_type, json[QString("SourceType")]);
    m_source_type_isSet = !json[QString("SourceType")].isNull() && m_source_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_maintenance_isValid = ::OpenAPI::fromJsonValue(m_maintenance, json[QString("Maintenance")]);
    m_maintenance_isSet = !json[QString("Maintenance")].isNull() && m_maintenance_isValid;
}

QString OAIListedFlow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListedFlow::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_zone_isSet) {
        obj.insert(QString("AvailabilityZone"), ::OpenAPI::toJsonValue(m_availability_zone));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_flow_arn_isSet) {
        obj.insert(QString("FlowArn"), ::OpenAPI::toJsonValue(m_flow_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_type.isSet()) {
        obj.insert(QString("SourceType"), ::OpenAPI::toJsonValue(m_source_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_maintenance.isSet()) {
        obj.insert(QString("Maintenance"), ::OpenAPI::toJsonValue(m_maintenance));
    }
    return obj;
}

QString OAIListedFlow::getAvailabilityZone() const {
    return m_availability_zone;
}
void OAIListedFlow::setAvailabilityZone(const QString &availability_zone) {
    m_availability_zone = availability_zone;
    m_availability_zone_isSet = true;
}

bool OAIListedFlow::is_availability_zone_Set() const{
    return m_availability_zone_isSet;
}

bool OAIListedFlow::is_availability_zone_Valid() const{
    return m_availability_zone_isValid;
}

QString OAIListedFlow::getDescription() const {
    return m_description;
}
void OAIListedFlow::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIListedFlow::is_description_Set() const{
    return m_description_isSet;
}

bool OAIListedFlow::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIListedFlow::getFlowArn() const {
    return m_flow_arn;
}
void OAIListedFlow::setFlowArn(const QString &flow_arn) {
    m_flow_arn = flow_arn;
    m_flow_arn_isSet = true;
}

bool OAIListedFlow::is_flow_arn_Set() const{
    return m_flow_arn_isSet;
}

bool OAIListedFlow::is_flow_arn_Valid() const{
    return m_flow_arn_isValid;
}

QString OAIListedFlow::getName() const {
    return m_name;
}
void OAIListedFlow::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIListedFlow::is_name_Set() const{
    return m_name_isSet;
}

bool OAIListedFlow::is_name_Valid() const{
    return m_name_isValid;
}

OAISourceType OAIListedFlow::getSourceType() const {
    return m_source_type;
}
void OAIListedFlow::setSourceType(const OAISourceType &source_type) {
    m_source_type = source_type;
    m_source_type_isSet = true;
}

bool OAIListedFlow::is_source_type_Set() const{
    return m_source_type_isSet;
}

bool OAIListedFlow::is_source_type_Valid() const{
    return m_source_type_isValid;
}

OAIStatus OAIListedFlow::getStatus() const {
    return m_status;
}
void OAIListedFlow::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIListedFlow::is_status_Set() const{
    return m_status_isSet;
}

bool OAIListedFlow::is_status_Valid() const{
    return m_status_isValid;
}

OAIFlow_Maintenance OAIListedFlow::getMaintenance() const {
    return m_maintenance;
}
void OAIListedFlow::setMaintenance(const OAIFlow_Maintenance &maintenance) {
    m_maintenance = maintenance;
    m_maintenance_isSet = true;
}

bool OAIListedFlow::is_maintenance_Set() const{
    return m_maintenance_isSet;
}

bool OAIListedFlow::is_maintenance_Valid() const{
    return m_maintenance_isValid;
}

bool OAIListedFlow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListedFlow::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_availability_zone_isValid && m_description_isValid && m_flow_arn_isValid && m_name_isValid && m_source_type_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
