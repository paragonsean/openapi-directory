/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GatewayState from './GatewayState';

/**
 * The Gateway model module.
 * @module model/Gateway
 * @version 2018-11-14
 */
class Gateway {
    /**
     * Constructs a new <code>Gateway</code>.
     * The settings for a gateway, including its networks.
     * @alias module:model/Gateway
     * @param egressCidrBlocks {Array} 
     * @param gatewayArn {String} 
     * @param name {String} 
     * @param networks {Array} 
     */
    constructor(egressCidrBlocks, gatewayArn, name, networks) { 
        
        Gateway.initialize(this, egressCidrBlocks, gatewayArn, name, networks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, egressCidrBlocks, gatewayArn, name, networks) { 
        obj['EgressCidrBlocks'] = egressCidrBlocks;
        obj['GatewayArn'] = gatewayArn;
        obj['Name'] = name;
        obj['Networks'] = networks;
    }

    /**
     * Constructs a <code>Gateway</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Gateway} obj Optional instance to populate.
     * @return {module:model/Gateway} The populated <code>Gateway</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Gateway();

            if (data.hasOwnProperty('EgressCidrBlocks')) {
                obj['EgressCidrBlocks'] = ApiClient.convertToType(data['EgressCidrBlocks'], Array);
            }
            if (data.hasOwnProperty('GatewayArn')) {
                obj['GatewayArn'] = ApiClient.convertToType(data['GatewayArn'], 'String');
            }
            if (data.hasOwnProperty('GatewayMessages')) {
                obj['GatewayMessages'] = ApiClient.convertToType(data['GatewayMessages'], Array);
            }
            if (data.hasOwnProperty('GatewayState')) {
                obj['GatewayState'] = ApiClient.convertToType(data['GatewayState'], GatewayState);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Networks')) {
                obj['Networks'] = ApiClient.convertToType(data['Networks'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Gateway</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Gateway</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Gateway.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EgressCidrBlocks`
        if (data['EgressCidrBlocks']) { // data not null
          Array.validateJSON(data['EgressCidrBlocks']);
        }
        // validate the optional field `GatewayArn`
        if (data['GatewayArn']) { // data not null
          String.validateJSON(data['GatewayArn']);
        }
        // validate the optional field `GatewayMessages`
        if (data['GatewayMessages']) { // data not null
          Array.validateJSON(data['GatewayMessages']);
        }
        // validate the optional field `GatewayState`
        if (data['GatewayState']) { // data not null
          GatewayState.validateJSON(data['GatewayState']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Networks`
        if (data['Networks']) { // data not null
          Array.validateJSON(data['Networks']);
        }

        return true;
    }


}

Gateway.RequiredProperties = ["EgressCidrBlocks", "GatewayArn", "Name", "Networks"];

/**
 * @member {Array} EgressCidrBlocks
 */
Gateway.prototype['EgressCidrBlocks'] = undefined;

/**
 * @member {String} GatewayArn
 */
Gateway.prototype['GatewayArn'] = undefined;

/**
 * @member {Array} GatewayMessages
 */
Gateway.prototype['GatewayMessages'] = undefined;

/**
 * @member {module:model/GatewayState} GatewayState
 */
Gateway.prototype['GatewayState'] = undefined;

/**
 * @member {String} Name
 */
Gateway.prototype['Name'] = undefined;

/**
 * @member {Array} Networks
 */
Gateway.prototype['Networks'] = undefined;






export default Gateway;

