/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntitlementEncryption from './EntitlementEncryption';
import EntitlementStatus from './EntitlementStatus';

/**
 * The Entitlement model module.
 * @module model/Entitlement
 * @version 2018-11-14
 */
class Entitlement {
    /**
     * Constructs a new <code>Entitlement</code>.
     * The settings for a flow entitlement.
     * @alias module:model/Entitlement
     * @param entitlementArn {String} 
     * @param name {String} 
     * @param subscribers {Array} 
     */
    constructor(entitlementArn, name, subscribers) { 
        
        Entitlement.initialize(this, entitlementArn, name, subscribers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entitlementArn, name, subscribers) { 
        obj['EntitlementArn'] = entitlementArn;
        obj['Name'] = name;
        obj['Subscribers'] = subscribers;
    }

    /**
     * Constructs a <code>Entitlement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Entitlement} obj Optional instance to populate.
     * @return {module:model/Entitlement} The populated <code>Entitlement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Entitlement();

            if (data.hasOwnProperty('DataTransferSubscriberFeePercent')) {
                obj['DataTransferSubscriberFeePercent'] = ApiClient.convertToType(data['DataTransferSubscriberFeePercent'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Encryption')) {
                obj['Encryption'] = EntitlementEncryption.constructFromObject(data['Encryption']);
            }
            if (data.hasOwnProperty('EntitlementArn')) {
                obj['EntitlementArn'] = ApiClient.convertToType(data['EntitlementArn'], 'String');
            }
            if (data.hasOwnProperty('EntitlementStatus')) {
                obj['EntitlementStatus'] = ApiClient.convertToType(data['EntitlementStatus'], EntitlementStatus);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Subscribers')) {
                obj['Subscribers'] = ApiClient.convertToType(data['Subscribers'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Entitlement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Entitlement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Entitlement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DataTransferSubscriberFeePercent`
        if (data['DataTransferSubscriberFeePercent']) { // data not null
          Number.validateJSON(data['DataTransferSubscriberFeePercent']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Encryption`
        if (data['Encryption']) { // data not null
          EntitlementEncryption.validateJSON(data['Encryption']);
        }
        // validate the optional field `EntitlementArn`
        if (data['EntitlementArn']) { // data not null
          String.validateJSON(data['EntitlementArn']);
        }
        // validate the optional field `EntitlementStatus`
        if (data['EntitlementStatus']) { // data not null
          EntitlementStatus.validateJSON(data['EntitlementStatus']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Subscribers`
        if (data['Subscribers']) { // data not null
          Array.validateJSON(data['Subscribers']);
        }

        return true;
    }


}

Entitlement.RequiredProperties = ["EntitlementArn", "Name", "Subscribers"];

/**
 * @member {Number} DataTransferSubscriberFeePercent
 */
Entitlement.prototype['DataTransferSubscriberFeePercent'] = undefined;

/**
 * @member {String} Description
 */
Entitlement.prototype['Description'] = undefined;

/**
 * @member {module:model/EntitlementEncryption} Encryption
 */
Entitlement.prototype['Encryption'] = undefined;

/**
 * @member {String} EntitlementArn
 */
Entitlement.prototype['EntitlementArn'] = undefined;

/**
 * @member {module:model/EntitlementStatus} EntitlementStatus
 */
Entitlement.prototype['EntitlementStatus'] = undefined;

/**
 * @member {String} Name
 */
Entitlement.prototype['Name'] = undefined;

/**
 * @member {Array} Subscribers
 */
Entitlement.prototype['Subscribers'] = undefined;






export default Entitlement;

