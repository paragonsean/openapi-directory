/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Bridge from './Bridge';
import BridgeEgressGatewayBridge from './BridgeEgressGatewayBridge';
import BridgeIngressGatewayBridge from './BridgeIngressGatewayBridge';
import BridgeSourceFailoverConfig from './BridgeSourceFailoverConfig';
import BridgeState from './BridgeState';

/**
 * The CreateBridgeResponseBridge model module.
 * @module model/CreateBridgeResponseBridge
 * @version 2018-11-14
 */
class CreateBridgeResponseBridge {
    /**
     * Constructs a new <code>CreateBridgeResponseBridge</code>.
     * @alias module:model/CreateBridgeResponseBridge
     * @implements module:model/Bridge
     * @param bridgeArn {String} 
     * @param bridgeState {module:model/BridgeState} 
     * @param name {String} 
     * @param placementArn {String} 
     */
    constructor(bridgeArn, bridgeState, name, placementArn) { 
        Bridge.initialize(this, bridgeArn, bridgeState, name, placementArn);
        CreateBridgeResponseBridge.initialize(this, bridgeArn, bridgeState, name, placementArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bridgeArn, bridgeState, name, placementArn) { 
        obj['BridgeArn'] = bridgeArn;
        obj['BridgeState'] = bridgeState;
        obj['Name'] = name;
        obj['PlacementArn'] = placementArn;
    }

    /**
     * Constructs a <code>CreateBridgeResponseBridge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBridgeResponseBridge} obj Optional instance to populate.
     * @return {module:model/CreateBridgeResponseBridge} The populated <code>CreateBridgeResponseBridge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBridgeResponseBridge();
            Bridge.constructFromObject(data, obj);

            if (data.hasOwnProperty('BridgeArn')) {
                obj['BridgeArn'] = ApiClient.convertToType(data['BridgeArn'], 'String');
            }
            if (data.hasOwnProperty('BridgeMessages')) {
                obj['BridgeMessages'] = ApiClient.convertToType(data['BridgeMessages'], Array);
            }
            if (data.hasOwnProperty('BridgeState')) {
                obj['BridgeState'] = ApiClient.convertToType(data['BridgeState'], BridgeState);
            }
            if (data.hasOwnProperty('EgressGatewayBridge')) {
                obj['EgressGatewayBridge'] = BridgeEgressGatewayBridge.constructFromObject(data['EgressGatewayBridge']);
            }
            if (data.hasOwnProperty('IngressGatewayBridge')) {
                obj['IngressGatewayBridge'] = BridgeIngressGatewayBridge.constructFromObject(data['IngressGatewayBridge']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Outputs')) {
                obj['Outputs'] = ApiClient.convertToType(data['Outputs'], Array);
            }
            if (data.hasOwnProperty('PlacementArn')) {
                obj['PlacementArn'] = ApiClient.convertToType(data['PlacementArn'], 'String');
            }
            if (data.hasOwnProperty('SourceFailoverConfig')) {
                obj['SourceFailoverConfig'] = BridgeSourceFailoverConfig.constructFromObject(data['SourceFailoverConfig']);
            }
            if (data.hasOwnProperty('Sources')) {
                obj['Sources'] = ApiClient.convertToType(data['Sources'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBridgeResponseBridge</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBridgeResponseBridge</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBridgeResponseBridge.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BridgeArn`
        if (data['BridgeArn']) { // data not null
          String.validateJSON(data['BridgeArn']);
        }
        // validate the optional field `BridgeMessages`
        if (data['BridgeMessages']) { // data not null
          Array.validateJSON(data['BridgeMessages']);
        }
        // validate the optional field `BridgeState`
        if (data['BridgeState']) { // data not null
          BridgeState.validateJSON(data['BridgeState']);
        }
        // validate the optional field `EgressGatewayBridge`
        if (data['EgressGatewayBridge']) { // data not null
          BridgeEgressGatewayBridge.validateJSON(data['EgressGatewayBridge']);
        }
        // validate the optional field `IngressGatewayBridge`
        if (data['IngressGatewayBridge']) { // data not null
          BridgeIngressGatewayBridge.validateJSON(data['IngressGatewayBridge']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Outputs`
        if (data['Outputs']) { // data not null
          Array.validateJSON(data['Outputs']);
        }
        // validate the optional field `PlacementArn`
        if (data['PlacementArn']) { // data not null
          String.validateJSON(data['PlacementArn']);
        }
        // validate the optional field `SourceFailoverConfig`
        if (data['SourceFailoverConfig']) { // data not null
          BridgeSourceFailoverConfig.validateJSON(data['SourceFailoverConfig']);
        }
        // validate the optional field `Sources`
        if (data['Sources']) { // data not null
          Array.validateJSON(data['Sources']);
        }

        return true;
    }


}

CreateBridgeResponseBridge.RequiredProperties = ["BridgeArn", "BridgeState", "Name", "PlacementArn"];

/**
 * @member {String} BridgeArn
 */
CreateBridgeResponseBridge.prototype['BridgeArn'] = undefined;

/**
 * @member {Array} BridgeMessages
 */
CreateBridgeResponseBridge.prototype['BridgeMessages'] = undefined;

/**
 * @member {module:model/BridgeState} BridgeState
 */
CreateBridgeResponseBridge.prototype['BridgeState'] = undefined;

/**
 * @member {module:model/BridgeEgressGatewayBridge} EgressGatewayBridge
 */
CreateBridgeResponseBridge.prototype['EgressGatewayBridge'] = undefined;

/**
 * @member {module:model/BridgeIngressGatewayBridge} IngressGatewayBridge
 */
CreateBridgeResponseBridge.prototype['IngressGatewayBridge'] = undefined;

/**
 * @member {String} Name
 */
CreateBridgeResponseBridge.prototype['Name'] = undefined;

/**
 * @member {Array} Outputs
 */
CreateBridgeResponseBridge.prototype['Outputs'] = undefined;

/**
 * @member {String} PlacementArn
 */
CreateBridgeResponseBridge.prototype['PlacementArn'] = undefined;

/**
 * @member {module:model/BridgeSourceFailoverConfig} SourceFailoverConfig
 */
CreateBridgeResponseBridge.prototype['SourceFailoverConfig'] = undefined;

/**
 * @member {Array} Sources
 */
CreateBridgeResponseBridge.prototype['Sources'] = undefined;


// Implement Bridge interface:
/**
 * @member {String} BridgeArn
 */
Bridge.prototype['BridgeArn'] = undefined;
/**
 * @member {Array} BridgeMessages
 */
Bridge.prototype['BridgeMessages'] = undefined;
/**
 * @member {module:model/BridgeState} BridgeState
 */
Bridge.prototype['BridgeState'] = undefined;
/**
 * @member {module:model/BridgeEgressGatewayBridge} EgressGatewayBridge
 */
Bridge.prototype['EgressGatewayBridge'] = undefined;
/**
 * @member {module:model/BridgeIngressGatewayBridge} IngressGatewayBridge
 */
Bridge.prototype['IngressGatewayBridge'] = undefined;
/**
 * @member {String} Name
 */
Bridge.prototype['Name'] = undefined;
/**
 * @member {Array} Outputs
 */
Bridge.prototype['Outputs'] = undefined;
/**
 * @member {String} PlacementArn
 */
Bridge.prototype['PlacementArn'] = undefined;
/**
 * @member {module:model/BridgeSourceFailoverConfig} SourceFailoverConfig
 */
Bridge.prototype['SourceFailoverConfig'] = undefined;
/**
 * @member {Array} Sources
 */
Bridge.prototype['Sources'] = undefined;




export default CreateBridgeResponseBridge;

