/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkInterfaceType from './NetworkInterfaceType';

/**
 * The VpcInterfaceRequest model module.
 * @module model/VpcInterfaceRequest
 * @version 2018-11-14
 */
class VpcInterfaceRequest {
    /**
     * Constructs a new <code>VpcInterfaceRequest</code>.
     * Desired VPC Interface for a Flow
     * @alias module:model/VpcInterfaceRequest
     * @param name {String} 
     * @param roleArn {String} 
     * @param securityGroupIds {Array} 
     * @param subnetId {String} 
     */
    constructor(name, roleArn, securityGroupIds, subnetId) { 
        
        VpcInterfaceRequest.initialize(this, name, roleArn, securityGroupIds, subnetId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, roleArn, securityGroupIds, subnetId) { 
        obj['Name'] = name;
        obj['RoleArn'] = roleArn;
        obj['SecurityGroupIds'] = securityGroupIds;
        obj['SubnetId'] = subnetId;
    }

    /**
     * Constructs a <code>VpcInterfaceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpcInterfaceRequest} obj Optional instance to populate.
     * @return {module:model/VpcInterfaceRequest} The populated <code>VpcInterfaceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpcInterfaceRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NetworkInterfaceType')) {
                obj['NetworkInterfaceType'] = ApiClient.convertToType(data['NetworkInterfaceType'], NetworkInterfaceType);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('SecurityGroupIds')) {
                obj['SecurityGroupIds'] = ApiClient.convertToType(data['SecurityGroupIds'], Array);
            }
            if (data.hasOwnProperty('SubnetId')) {
                obj['SubnetId'] = ApiClient.convertToType(data['SubnetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpcInterfaceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpcInterfaceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VpcInterfaceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `NetworkInterfaceType`
        if (data['NetworkInterfaceType']) { // data not null
          NetworkInterfaceType.validateJSON(data['NetworkInterfaceType']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `SecurityGroupIds`
        if (data['SecurityGroupIds']) { // data not null
          Array.validateJSON(data['SecurityGroupIds']);
        }
        // validate the optional field `SubnetId`
        if (data['SubnetId']) { // data not null
          String.validateJSON(data['SubnetId']);
        }

        return true;
    }


}

VpcInterfaceRequest.RequiredProperties = ["Name", "RoleArn", "SecurityGroupIds", "SubnetId"];

/**
 * @member {String} Name
 */
VpcInterfaceRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/NetworkInterfaceType} NetworkInterfaceType
 */
VpcInterfaceRequest.prototype['NetworkInterfaceType'] = undefined;

/**
 * @member {String} RoleArn
 */
VpcInterfaceRequest.prototype['RoleArn'] = undefined;

/**
 * @member {Array} SecurityGroupIds
 */
VpcInterfaceRequest.prototype['SecurityGroupIds'] = undefined;

/**
 * @member {String} SubnetId
 */
VpcInterfaceRequest.prototype['SubnetId'] = undefined;






export default VpcInterfaceRequest;

