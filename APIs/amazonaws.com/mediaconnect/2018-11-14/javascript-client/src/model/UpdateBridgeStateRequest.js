/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateBridgeStateRequest model module.
 * @module model/UpdateBridgeStateRequest
 * @version 2018-11-14
 */
class UpdateBridgeStateRequest {
    /**
     * Constructs a new <code>UpdateBridgeStateRequest</code>.
     * @alias module:model/UpdateBridgeStateRequest
     * @param desiredState {module:model/UpdateBridgeStateRequest.DesiredStateEnum} 
     */
    constructor(desiredState) { 
        
        UpdateBridgeStateRequest.initialize(this, desiredState);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, desiredState) { 
        obj['desiredState'] = desiredState;
    }

    /**
     * Constructs a <code>UpdateBridgeStateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateBridgeStateRequest} obj Optional instance to populate.
     * @return {module:model/UpdateBridgeStateRequest} The populated <code>UpdateBridgeStateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateBridgeStateRequest();

            if (data.hasOwnProperty('desiredState')) {
                obj['desiredState'] = ApiClient.convertToType(data['desiredState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateBridgeStateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateBridgeStateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateBridgeStateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['desiredState'] && !(typeof data['desiredState'] === 'string' || data['desiredState'] instanceof String)) {
            throw new Error("Expected the field `desiredState` to be a primitive type in the JSON string but got " + data['desiredState']);
        }

        return true;
    }


}

UpdateBridgeStateRequest.RequiredProperties = ["desiredState"];

/**
 * 
 * @member {module:model/UpdateBridgeStateRequest.DesiredStateEnum} desiredState
 */
UpdateBridgeStateRequest.prototype['desiredState'] = undefined;





/**
 * Allowed values for the <code>desiredState</code> property.
 * @enum {String}
 * @readonly
 */
UpdateBridgeStateRequest['DesiredStateEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "STANDBY"
     * @const
     */
    "STANDBY": "STANDBY",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED"
};



export default UpdateBridgeStateRequest;

