/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncoderProfile from './EncoderProfile';
import EncodingParameters from './EncodingParameters';

/**
 * The MediaStreamOutputConfigurationEncodingParameters model module.
 * @module model/MediaStreamOutputConfigurationEncodingParameters
 * @version 2018-11-14
 */
class MediaStreamOutputConfigurationEncodingParameters {
    /**
     * Constructs a new <code>MediaStreamOutputConfigurationEncodingParameters</code>.
     * @alias module:model/MediaStreamOutputConfigurationEncodingParameters
     * @implements module:model/EncodingParameters
     * @param compressionFactor {Number} 
     * @param encoderProfile {module:model/EncoderProfile} 
     */
    constructor(compressionFactor, encoderProfile) { 
        EncodingParameters.initialize(this, compressionFactor, encoderProfile);
        MediaStreamOutputConfigurationEncodingParameters.initialize(this, compressionFactor, encoderProfile);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, compressionFactor, encoderProfile) { 
        obj['CompressionFactor'] = compressionFactor;
        obj['EncoderProfile'] = encoderProfile;
    }

    /**
     * Constructs a <code>MediaStreamOutputConfigurationEncodingParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaStreamOutputConfigurationEncodingParameters} obj Optional instance to populate.
     * @return {module:model/MediaStreamOutputConfigurationEncodingParameters} The populated <code>MediaStreamOutputConfigurationEncodingParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaStreamOutputConfigurationEncodingParameters();
            EncodingParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('CompressionFactor')) {
                obj['CompressionFactor'] = ApiClient.convertToType(data['CompressionFactor'], 'Number');
            }
            if (data.hasOwnProperty('EncoderProfile')) {
                obj['EncoderProfile'] = ApiClient.convertToType(data['EncoderProfile'], EncoderProfile);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaStreamOutputConfigurationEncodingParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaStreamOutputConfigurationEncodingParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MediaStreamOutputConfigurationEncodingParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CompressionFactor`
        if (data['CompressionFactor']) { // data not null
          Number.validateJSON(data['CompressionFactor']);
        }
        // validate the optional field `EncoderProfile`
        if (data['EncoderProfile']) { // data not null
          EncoderProfile.validateJSON(data['EncoderProfile']);
        }

        return true;
    }


}

MediaStreamOutputConfigurationEncodingParameters.RequiredProperties = ["CompressionFactor", "EncoderProfile"];

/**
 * @member {Number} CompressionFactor
 */
MediaStreamOutputConfigurationEncodingParameters.prototype['CompressionFactor'] = undefined;

/**
 * @member {module:model/EncoderProfile} EncoderProfile
 */
MediaStreamOutputConfigurationEncodingParameters.prototype['EncoderProfile'] = undefined;


// Implement EncodingParameters interface:
/**
 * @member {Number} CompressionFactor
 */
EncodingParameters.prototype['CompressionFactor'] = undefined;
/**
 * @member {module:model/EncoderProfile} EncoderProfile
 */
EncodingParameters.prototype['EncoderProfile'] = undefined;




export default MediaStreamOutputConfigurationEncodingParameters;

