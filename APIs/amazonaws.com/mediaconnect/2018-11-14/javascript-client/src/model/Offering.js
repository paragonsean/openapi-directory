/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DurationUnits from './DurationUnits';
import OfferingResourceSpecification from './OfferingResourceSpecification';
import PriceUnits from './PriceUnits';

/**
 * The Offering model module.
 * @module model/Offering
 * @version 2018-11-14
 */
class Offering {
    /**
     * Constructs a new <code>Offering</code>.
     * A savings plan that reserves a certain amount of outbound bandwidth usage at a discounted rate each month over a period of time.
     * @alias module:model/Offering
     * @param currencyCode {String} 
     * @param duration {Number} 
     * @param durationUnits {module:model/DurationUnits} 
     * @param offeringArn {String} 
     * @param offeringDescription {String} 
     * @param pricePerUnit {String} 
     * @param priceUnits {module:model/PriceUnits} 
     * @param resourceSpecification {module:model/OfferingResourceSpecification} 
     */
    constructor(currencyCode, duration, durationUnits, offeringArn, offeringDescription, pricePerUnit, priceUnits, resourceSpecification) { 
        
        Offering.initialize(this, currencyCode, duration, durationUnits, offeringArn, offeringDescription, pricePerUnit, priceUnits, resourceSpecification);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currencyCode, duration, durationUnits, offeringArn, offeringDescription, pricePerUnit, priceUnits, resourceSpecification) { 
        obj['CurrencyCode'] = currencyCode;
        obj['Duration'] = duration;
        obj['DurationUnits'] = durationUnits;
        obj['OfferingArn'] = offeringArn;
        obj['OfferingDescription'] = offeringDescription;
        obj['PricePerUnit'] = pricePerUnit;
        obj['PriceUnits'] = priceUnits;
        obj['ResourceSpecification'] = resourceSpecification;
    }

    /**
     * Constructs a <code>Offering</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Offering} obj Optional instance to populate.
     * @return {module:model/Offering} The populated <code>Offering</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Offering();

            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('DurationUnits')) {
                obj['DurationUnits'] = ApiClient.convertToType(data['DurationUnits'], DurationUnits);
            }
            if (data.hasOwnProperty('OfferingArn')) {
                obj['OfferingArn'] = ApiClient.convertToType(data['OfferingArn'], 'String');
            }
            if (data.hasOwnProperty('OfferingDescription')) {
                obj['OfferingDescription'] = ApiClient.convertToType(data['OfferingDescription'], 'String');
            }
            if (data.hasOwnProperty('PricePerUnit')) {
                obj['PricePerUnit'] = ApiClient.convertToType(data['PricePerUnit'], 'String');
            }
            if (data.hasOwnProperty('PriceUnits')) {
                obj['PriceUnits'] = ApiClient.convertToType(data['PriceUnits'], PriceUnits);
            }
            if (data.hasOwnProperty('ResourceSpecification')) {
                obj['ResourceSpecification'] = OfferingResourceSpecification.constructFromObject(data['ResourceSpecification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Offering</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Offering</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Offering.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CurrencyCode`
        if (data['CurrencyCode']) { // data not null
          String.validateJSON(data['CurrencyCode']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `DurationUnits`
        if (data['DurationUnits']) { // data not null
          DurationUnits.validateJSON(data['DurationUnits']);
        }
        // validate the optional field `OfferingArn`
        if (data['OfferingArn']) { // data not null
          String.validateJSON(data['OfferingArn']);
        }
        // validate the optional field `OfferingDescription`
        if (data['OfferingDescription']) { // data not null
          String.validateJSON(data['OfferingDescription']);
        }
        // validate the optional field `PricePerUnit`
        if (data['PricePerUnit']) { // data not null
          String.validateJSON(data['PricePerUnit']);
        }
        // validate the optional field `PriceUnits`
        if (data['PriceUnits']) { // data not null
          PriceUnits.validateJSON(data['PriceUnits']);
        }
        // validate the optional field `ResourceSpecification`
        if (data['ResourceSpecification']) { // data not null
          OfferingResourceSpecification.validateJSON(data['ResourceSpecification']);
        }

        return true;
    }


}

Offering.RequiredProperties = ["CurrencyCode", "Duration", "DurationUnits", "OfferingArn", "OfferingDescription", "PricePerUnit", "PriceUnits", "ResourceSpecification"];

/**
 * @member {String} CurrencyCode
 */
Offering.prototype['CurrencyCode'] = undefined;

/**
 * @member {Number} Duration
 */
Offering.prototype['Duration'] = undefined;

/**
 * @member {module:model/DurationUnits} DurationUnits
 */
Offering.prototype['DurationUnits'] = undefined;

/**
 * @member {String} OfferingArn
 */
Offering.prototype['OfferingArn'] = undefined;

/**
 * @member {String} OfferingDescription
 */
Offering.prototype['OfferingDescription'] = undefined;

/**
 * @member {String} PricePerUnit
 */
Offering.prototype['PricePerUnit'] = undefined;

/**
 * @member {module:model/PriceUnits} PriceUnits
 */
Offering.prototype['PriceUnits'] = undefined;

/**
 * @member {module:model/OfferingResourceSpecification} ResourceSpecification
 */
Offering.prototype['ResourceSpecification'] = undefined;






export default Offering;

