/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Source from './Source';
import SourceDecryption from './SourceDecryption';
import SourceGatewayBridgeSource from './SourceGatewayBridgeSource';
import SourceTransport from './SourceTransport';

/**
 * The UpdateFlowSourceResponseSource model module.
 * @module model/UpdateFlowSourceResponseSource
 * @version 2018-11-14
 */
class UpdateFlowSourceResponseSource {
    /**
     * Constructs a new <code>UpdateFlowSourceResponseSource</code>.
     * @alias module:model/UpdateFlowSourceResponseSource
     * @implements module:model/Source
     * @param name {String} 
     * @param sourceArn {String} 
     */
    constructor(name, sourceArn) { 
        Source.initialize(this, name, sourceArn);
        UpdateFlowSourceResponseSource.initialize(this, name, sourceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, sourceArn) { 
        obj['Name'] = name;
        obj['SourceArn'] = sourceArn;
    }

    /**
     * Constructs a <code>UpdateFlowSourceResponseSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFlowSourceResponseSource} obj Optional instance to populate.
     * @return {module:model/UpdateFlowSourceResponseSource} The populated <code>UpdateFlowSourceResponseSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFlowSourceResponseSource();
            Source.constructFromObject(data, obj);

            if (data.hasOwnProperty('DataTransferSubscriberFeePercent')) {
                obj['DataTransferSubscriberFeePercent'] = ApiClient.convertToType(data['DataTransferSubscriberFeePercent'], 'Number');
            }
            if (data.hasOwnProperty('Decryption')) {
                obj['Decryption'] = SourceDecryption.constructFromObject(data['Decryption']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('EntitlementArn')) {
                obj['EntitlementArn'] = ApiClient.convertToType(data['EntitlementArn'], 'String');
            }
            if (data.hasOwnProperty('IngestIp')) {
                obj['IngestIp'] = ApiClient.convertToType(data['IngestIp'], 'String');
            }
            if (data.hasOwnProperty('IngestPort')) {
                obj['IngestPort'] = ApiClient.convertToType(data['IngestPort'], 'Number');
            }
            if (data.hasOwnProperty('MediaStreamSourceConfigurations')) {
                obj['MediaStreamSourceConfigurations'] = ApiClient.convertToType(data['MediaStreamSourceConfigurations'], Array);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('SenderControlPort')) {
                obj['SenderControlPort'] = ApiClient.convertToType(data['SenderControlPort'], 'Number');
            }
            if (data.hasOwnProperty('SenderIpAddress')) {
                obj['SenderIpAddress'] = ApiClient.convertToType(data['SenderIpAddress'], 'String');
            }
            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
            if (data.hasOwnProperty('Transport')) {
                obj['Transport'] = SourceTransport.constructFromObject(data['Transport']);
            }
            if (data.hasOwnProperty('VpcInterfaceName')) {
                obj['VpcInterfaceName'] = ApiClient.convertToType(data['VpcInterfaceName'], 'String');
            }
            if (data.hasOwnProperty('WhitelistCidr')) {
                obj['WhitelistCidr'] = ApiClient.convertToType(data['WhitelistCidr'], 'String');
            }
            if (data.hasOwnProperty('GatewayBridgeSource')) {
                obj['GatewayBridgeSource'] = SourceGatewayBridgeSource.constructFromObject(data['GatewayBridgeSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateFlowSourceResponseSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateFlowSourceResponseSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateFlowSourceResponseSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DataTransferSubscriberFeePercent`
        if (data['DataTransferSubscriberFeePercent']) { // data not null
          Number.validateJSON(data['DataTransferSubscriberFeePercent']);
        }
        // validate the optional field `Decryption`
        if (data['Decryption']) { // data not null
          SourceDecryption.validateJSON(data['Decryption']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `EntitlementArn`
        if (data['EntitlementArn']) { // data not null
          String.validateJSON(data['EntitlementArn']);
        }
        // validate the optional field `IngestIp`
        if (data['IngestIp']) { // data not null
          String.validateJSON(data['IngestIp']);
        }
        // validate the optional field `IngestPort`
        if (data['IngestPort']) { // data not null
          Number.validateJSON(data['IngestPort']);
        }
        // validate the optional field `MediaStreamSourceConfigurations`
        if (data['MediaStreamSourceConfigurations']) { // data not null
          Array.validateJSON(data['MediaStreamSourceConfigurations']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `SenderControlPort`
        if (data['SenderControlPort']) { // data not null
          Number.validateJSON(data['SenderControlPort']);
        }
        // validate the optional field `SenderIpAddress`
        if (data['SenderIpAddress']) { // data not null
          String.validateJSON(data['SenderIpAddress']);
        }
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }
        // validate the optional field `Transport`
        if (data['Transport']) { // data not null
          SourceTransport.validateJSON(data['Transport']);
        }
        // validate the optional field `VpcInterfaceName`
        if (data['VpcInterfaceName']) { // data not null
          String.validateJSON(data['VpcInterfaceName']);
        }
        // validate the optional field `WhitelistCidr`
        if (data['WhitelistCidr']) { // data not null
          String.validateJSON(data['WhitelistCidr']);
        }
        // validate the optional field `GatewayBridgeSource`
        if (data['GatewayBridgeSource']) { // data not null
          SourceGatewayBridgeSource.validateJSON(data['GatewayBridgeSource']);
        }

        return true;
    }


}

UpdateFlowSourceResponseSource.RequiredProperties = ["Name", "SourceArn"];

/**
 * @member {Number} DataTransferSubscriberFeePercent
 */
UpdateFlowSourceResponseSource.prototype['DataTransferSubscriberFeePercent'] = undefined;

/**
 * @member {module:model/SourceDecryption} Decryption
 */
UpdateFlowSourceResponseSource.prototype['Decryption'] = undefined;

/**
 * @member {String} Description
 */
UpdateFlowSourceResponseSource.prototype['Description'] = undefined;

/**
 * @member {String} EntitlementArn
 */
UpdateFlowSourceResponseSource.prototype['EntitlementArn'] = undefined;

/**
 * @member {String} IngestIp
 */
UpdateFlowSourceResponseSource.prototype['IngestIp'] = undefined;

/**
 * @member {Number} IngestPort
 */
UpdateFlowSourceResponseSource.prototype['IngestPort'] = undefined;

/**
 * @member {Array} MediaStreamSourceConfigurations
 */
UpdateFlowSourceResponseSource.prototype['MediaStreamSourceConfigurations'] = undefined;

/**
 * @member {String} Name
 */
UpdateFlowSourceResponseSource.prototype['Name'] = undefined;

/**
 * @member {Number} SenderControlPort
 */
UpdateFlowSourceResponseSource.prototype['SenderControlPort'] = undefined;

/**
 * @member {String} SenderIpAddress
 */
UpdateFlowSourceResponseSource.prototype['SenderIpAddress'] = undefined;

/**
 * @member {String} SourceArn
 */
UpdateFlowSourceResponseSource.prototype['SourceArn'] = undefined;

/**
 * @member {module:model/SourceTransport} Transport
 */
UpdateFlowSourceResponseSource.prototype['Transport'] = undefined;

/**
 * @member {String} VpcInterfaceName
 */
UpdateFlowSourceResponseSource.prototype['VpcInterfaceName'] = undefined;

/**
 * @member {String} WhitelistCidr
 */
UpdateFlowSourceResponseSource.prototype['WhitelistCidr'] = undefined;

/**
 * @member {module:model/SourceGatewayBridgeSource} GatewayBridgeSource
 */
UpdateFlowSourceResponseSource.prototype['GatewayBridgeSource'] = undefined;


// Implement Source interface:
/**
 * @member {Number} DataTransferSubscriberFeePercent
 */
Source.prototype['DataTransferSubscriberFeePercent'] = undefined;
/**
 * @member {module:model/SourceDecryption} Decryption
 */
Source.prototype['Decryption'] = undefined;
/**
 * @member {String} Description
 */
Source.prototype['Description'] = undefined;
/**
 * @member {String} EntitlementArn
 */
Source.prototype['EntitlementArn'] = undefined;
/**
 * @member {String} IngestIp
 */
Source.prototype['IngestIp'] = undefined;
/**
 * @member {Number} IngestPort
 */
Source.prototype['IngestPort'] = undefined;
/**
 * @member {Array} MediaStreamSourceConfigurations
 */
Source.prototype['MediaStreamSourceConfigurations'] = undefined;
/**
 * @member {String} Name
 */
Source.prototype['Name'] = undefined;
/**
 * @member {Number} SenderControlPort
 */
Source.prototype['SenderControlPort'] = undefined;
/**
 * @member {String} SenderIpAddress
 */
Source.prototype['SenderIpAddress'] = undefined;
/**
 * @member {String} SourceArn
 */
Source.prototype['SourceArn'] = undefined;
/**
 * @member {module:model/SourceTransport} Transport
 */
Source.prototype['Transport'] = undefined;
/**
 * @member {String} VpcInterfaceName
 */
Source.prototype['VpcInterfaceName'] = undefined;
/**
 * @member {String} WhitelistCidr
 */
Source.prototype['WhitelistCidr'] = undefined;
/**
 * @member {module:model/SourceGatewayBridgeSource} GatewayBridgeSource
 */
Source.prototype['GatewayBridgeSource'] = undefined;




export default UpdateFlowSourceResponseSource;

