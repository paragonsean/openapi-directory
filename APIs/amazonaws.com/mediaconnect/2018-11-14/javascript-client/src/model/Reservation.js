/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DurationUnits from './DurationUnits';
import PriceUnits from './PriceUnits';
import ReservationResourceSpecification from './ReservationResourceSpecification';
import ReservationState from './ReservationState';

/**
 * The Reservation model module.
 * @module model/Reservation
 * @version 2018-11-14
 */
class Reservation {
    /**
     * Constructs a new <code>Reservation</code>.
     * A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.
     * @alias module:model/Reservation
     * @param currencyCode {String} 
     * @param duration {Number} 
     * @param durationUnits {module:model/DurationUnits} 
     * @param end {String} 
     * @param offeringArn {String} 
     * @param offeringDescription {String} 
     * @param pricePerUnit {String} 
     * @param priceUnits {module:model/PriceUnits} 
     * @param reservationArn {String} 
     * @param reservationName {String} 
     * @param reservationState {module:model/ReservationState} 
     * @param resourceSpecification {module:model/ReservationResourceSpecification} 
     * @param start {String} 
     */
    constructor(currencyCode, duration, durationUnits, end, offeringArn, offeringDescription, pricePerUnit, priceUnits, reservationArn, reservationName, reservationState, resourceSpecification, start) { 
        
        Reservation.initialize(this, currencyCode, duration, durationUnits, end, offeringArn, offeringDescription, pricePerUnit, priceUnits, reservationArn, reservationName, reservationState, resourceSpecification, start);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currencyCode, duration, durationUnits, end, offeringArn, offeringDescription, pricePerUnit, priceUnits, reservationArn, reservationName, reservationState, resourceSpecification, start) { 
        obj['CurrencyCode'] = currencyCode;
        obj['Duration'] = duration;
        obj['DurationUnits'] = durationUnits;
        obj['End'] = end;
        obj['OfferingArn'] = offeringArn;
        obj['OfferingDescription'] = offeringDescription;
        obj['PricePerUnit'] = pricePerUnit;
        obj['PriceUnits'] = priceUnits;
        obj['ReservationArn'] = reservationArn;
        obj['ReservationName'] = reservationName;
        obj['ReservationState'] = reservationState;
        obj['ResourceSpecification'] = resourceSpecification;
        obj['Start'] = start;
    }

    /**
     * Constructs a <code>Reservation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Reservation} obj Optional instance to populate.
     * @return {module:model/Reservation} The populated <code>Reservation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Reservation();

            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('DurationUnits')) {
                obj['DurationUnits'] = ApiClient.convertToType(data['DurationUnits'], DurationUnits);
            }
            if (data.hasOwnProperty('End')) {
                obj['End'] = ApiClient.convertToType(data['End'], 'String');
            }
            if (data.hasOwnProperty('OfferingArn')) {
                obj['OfferingArn'] = ApiClient.convertToType(data['OfferingArn'], 'String');
            }
            if (data.hasOwnProperty('OfferingDescription')) {
                obj['OfferingDescription'] = ApiClient.convertToType(data['OfferingDescription'], 'String');
            }
            if (data.hasOwnProperty('PricePerUnit')) {
                obj['PricePerUnit'] = ApiClient.convertToType(data['PricePerUnit'], 'String');
            }
            if (data.hasOwnProperty('PriceUnits')) {
                obj['PriceUnits'] = ApiClient.convertToType(data['PriceUnits'], PriceUnits);
            }
            if (data.hasOwnProperty('ReservationArn')) {
                obj['ReservationArn'] = ApiClient.convertToType(data['ReservationArn'], 'String');
            }
            if (data.hasOwnProperty('ReservationName')) {
                obj['ReservationName'] = ApiClient.convertToType(data['ReservationName'], 'String');
            }
            if (data.hasOwnProperty('ReservationState')) {
                obj['ReservationState'] = ApiClient.convertToType(data['ReservationState'], ReservationState);
            }
            if (data.hasOwnProperty('ResourceSpecification')) {
                obj['ResourceSpecification'] = ReservationResourceSpecification.constructFromObject(data['ResourceSpecification']);
            }
            if (data.hasOwnProperty('Start')) {
                obj['Start'] = ApiClient.convertToType(data['Start'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Reservation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Reservation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Reservation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CurrencyCode`
        if (data['CurrencyCode']) { // data not null
          String.validateJSON(data['CurrencyCode']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `DurationUnits`
        if (data['DurationUnits']) { // data not null
          DurationUnits.validateJSON(data['DurationUnits']);
        }
        // validate the optional field `End`
        if (data['End']) { // data not null
          String.validateJSON(data['End']);
        }
        // validate the optional field `OfferingArn`
        if (data['OfferingArn']) { // data not null
          String.validateJSON(data['OfferingArn']);
        }
        // validate the optional field `OfferingDescription`
        if (data['OfferingDescription']) { // data not null
          String.validateJSON(data['OfferingDescription']);
        }
        // validate the optional field `PricePerUnit`
        if (data['PricePerUnit']) { // data not null
          String.validateJSON(data['PricePerUnit']);
        }
        // validate the optional field `PriceUnits`
        if (data['PriceUnits']) { // data not null
          PriceUnits.validateJSON(data['PriceUnits']);
        }
        // validate the optional field `ReservationArn`
        if (data['ReservationArn']) { // data not null
          String.validateJSON(data['ReservationArn']);
        }
        // validate the optional field `ReservationName`
        if (data['ReservationName']) { // data not null
          String.validateJSON(data['ReservationName']);
        }
        // validate the optional field `ReservationState`
        if (data['ReservationState']) { // data not null
          ReservationState.validateJSON(data['ReservationState']);
        }
        // validate the optional field `ResourceSpecification`
        if (data['ResourceSpecification']) { // data not null
          ReservationResourceSpecification.validateJSON(data['ResourceSpecification']);
        }
        // validate the optional field `Start`
        if (data['Start']) { // data not null
          String.validateJSON(data['Start']);
        }

        return true;
    }


}

Reservation.RequiredProperties = ["CurrencyCode", "Duration", "DurationUnits", "End", "OfferingArn", "OfferingDescription", "PricePerUnit", "PriceUnits", "ReservationArn", "ReservationName", "ReservationState", "ResourceSpecification", "Start"];

/**
 * @member {String} CurrencyCode
 */
Reservation.prototype['CurrencyCode'] = undefined;

/**
 * @member {Number} Duration
 */
Reservation.prototype['Duration'] = undefined;

/**
 * @member {module:model/DurationUnits} DurationUnits
 */
Reservation.prototype['DurationUnits'] = undefined;

/**
 * @member {String} End
 */
Reservation.prototype['End'] = undefined;

/**
 * @member {String} OfferingArn
 */
Reservation.prototype['OfferingArn'] = undefined;

/**
 * @member {String} OfferingDescription
 */
Reservation.prototype['OfferingDescription'] = undefined;

/**
 * @member {String} PricePerUnit
 */
Reservation.prototype['PricePerUnit'] = undefined;

/**
 * @member {module:model/PriceUnits} PriceUnits
 */
Reservation.prototype['PriceUnits'] = undefined;

/**
 * @member {String} ReservationArn
 */
Reservation.prototype['ReservationArn'] = undefined;

/**
 * @member {String} ReservationName
 */
Reservation.prototype['ReservationName'] = undefined;

/**
 * @member {module:model/ReservationState} ReservationState
 */
Reservation.prototype['ReservationState'] = undefined;

/**
 * @member {module:model/ReservationResourceSpecification} ResourceSpecification
 */
Reservation.prototype['ResourceSpecification'] = undefined;

/**
 * @member {String} Start
 */
Reservation.prototype['Start'] = undefined;






export default Reservation;

