/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinationConfigurationInterface from './DestinationConfigurationInterface';

/**
 * The DestinationConfiguration model module.
 * @module model/DestinationConfiguration
 * @version 2018-11-14
 */
class DestinationConfiguration {
    /**
     * Constructs a new <code>DestinationConfiguration</code>.
     * The transport parameters that are associated with an outbound media stream.
     * @alias module:model/DestinationConfiguration
     * @param destinationIp {String} 
     * @param destinationPort {Number} 
     * @param _interface {module:model/DestinationConfigurationInterface} 
     * @param outboundIp {String} 
     */
    constructor(destinationIp, destinationPort, _interface, outboundIp) { 
        
        DestinationConfiguration.initialize(this, destinationIp, destinationPort, _interface, outboundIp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationIp, destinationPort, _interface, outboundIp) { 
        obj['DestinationIp'] = destinationIp;
        obj['DestinationPort'] = destinationPort;
        obj['Interface'] = _interface;
        obj['OutboundIp'] = outboundIp;
    }

    /**
     * Constructs a <code>DestinationConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationConfiguration} obj Optional instance to populate.
     * @return {module:model/DestinationConfiguration} The populated <code>DestinationConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationConfiguration();

            if (data.hasOwnProperty('DestinationIp')) {
                obj['DestinationIp'] = ApiClient.convertToType(data['DestinationIp'], 'String');
            }
            if (data.hasOwnProperty('DestinationPort')) {
                obj['DestinationPort'] = ApiClient.convertToType(data['DestinationPort'], 'Number');
            }
            if (data.hasOwnProperty('Interface')) {
                obj['Interface'] = DestinationConfigurationInterface.constructFromObject(data['Interface']);
            }
            if (data.hasOwnProperty('OutboundIp')) {
                obj['OutboundIp'] = ApiClient.convertToType(data['OutboundIp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DestinationConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DestinationIp`
        if (data['DestinationIp']) { // data not null
          String.validateJSON(data['DestinationIp']);
        }
        // validate the optional field `DestinationPort`
        if (data['DestinationPort']) { // data not null
          Number.validateJSON(data['DestinationPort']);
        }
        // validate the optional field `Interface`
        if (data['Interface']) { // data not null
          DestinationConfigurationInterface.validateJSON(data['Interface']);
        }
        // validate the optional field `OutboundIp`
        if (data['OutboundIp']) { // data not null
          String.validateJSON(data['OutboundIp']);
        }

        return true;
    }


}

DestinationConfiguration.RequiredProperties = ["DestinationIp", "DestinationPort", "Interface", "OutboundIp"];

/**
 * @member {String} DestinationIp
 */
DestinationConfiguration.prototype['DestinationIp'] = undefined;

/**
 * @member {Number} DestinationPort
 */
DestinationConfiguration.prototype['DestinationPort'] = undefined;

/**
 * @member {module:model/DestinationConfigurationInterface} Interface
 */
DestinationConfiguration.prototype['Interface'] = undefined;

/**
 * @member {String} OutboundIp
 */
DestinationConfiguration.prototype['OutboundIp'] = undefined;






export default DestinationConfiguration;

