/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BridgeSource from './BridgeSource';
import BridgeSourceFlowSource from './BridgeSourceFlowSource';
import BridgeSourceNetworkSource from './BridgeSourceNetworkSource';

/**
 * The UpdateBridgeSourceResponseSource model module.
 * @module model/UpdateBridgeSourceResponseSource
 * @version 2018-11-14
 */
class UpdateBridgeSourceResponseSource {
    /**
     * Constructs a new <code>UpdateBridgeSourceResponseSource</code>.
     * @alias module:model/UpdateBridgeSourceResponseSource
     * @implements module:model/BridgeSource
     */
    constructor() { 
        BridgeSource.initialize(this);
        UpdateBridgeSourceResponseSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateBridgeSourceResponseSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateBridgeSourceResponseSource} obj Optional instance to populate.
     * @return {module:model/UpdateBridgeSourceResponseSource} The populated <code>UpdateBridgeSourceResponseSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateBridgeSourceResponseSource();
            BridgeSource.constructFromObject(data, obj);

            if (data.hasOwnProperty('FlowSource')) {
                obj['FlowSource'] = BridgeSourceFlowSource.constructFromObject(data['FlowSource']);
            }
            if (data.hasOwnProperty('NetworkSource')) {
                obj['NetworkSource'] = BridgeSourceNetworkSource.constructFromObject(data['NetworkSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateBridgeSourceResponseSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateBridgeSourceResponseSource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FlowSource`
        if (data['FlowSource']) { // data not null
          BridgeSourceFlowSource.validateJSON(data['FlowSource']);
        }
        // validate the optional field `NetworkSource`
        if (data['NetworkSource']) { // data not null
          BridgeSourceNetworkSource.validateJSON(data['NetworkSource']);
        }

        return true;
    }


}



/**
 * @member {module:model/BridgeSourceFlowSource} FlowSource
 */
UpdateBridgeSourceResponseSource.prototype['FlowSource'] = undefined;

/**
 * @member {module:model/BridgeSourceNetworkSource} NetworkSource
 */
UpdateBridgeSourceResponseSource.prototype['NetworkSource'] = undefined;


// Implement BridgeSource interface:
/**
 * @member {module:model/BridgeSourceFlowSource} FlowSource
 */
BridgeSource.prototype['FlowSource'] = undefined;
/**
 * @member {module:model/BridgeSourceNetworkSource} NetworkSource
 */
BridgeSource.prototype['NetworkSource'] = undefined;




export default UpdateBridgeSourceResponseSource;

