/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GatewayNetwork from './GatewayNetwork';

/**
 * The CreateGatewayRequest model module.
 * @module model/CreateGatewayRequest
 * @version 2018-11-14
 */
class CreateGatewayRequest {
    /**
     * Constructs a new <code>CreateGatewayRequest</code>.
     * @alias module:model/CreateGatewayRequest
     * @param egressCidrBlocks {Array.<String>} The range of IP addresses that are allowed to contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     * @param name {String} The name of the gateway. This name can not be modified after the gateway is created.
     * @param networks {Array.<module:model/GatewayNetwork>} The list of networks that you want to add.
     */
    constructor(egressCidrBlocks, name, networks) { 
        
        CreateGatewayRequest.initialize(this, egressCidrBlocks, name, networks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, egressCidrBlocks, name, networks) { 
        obj['egressCidrBlocks'] = egressCidrBlocks;
        obj['name'] = name;
        obj['networks'] = networks;
    }

    /**
     * Constructs a <code>CreateGatewayRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGatewayRequest} obj Optional instance to populate.
     * @return {module:model/CreateGatewayRequest} The populated <code>CreateGatewayRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGatewayRequest();

            if (data.hasOwnProperty('egressCidrBlocks')) {
                obj['egressCidrBlocks'] = ApiClient.convertToType(data['egressCidrBlocks'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networks')) {
                obj['networks'] = ApiClient.convertToType(data['networks'], [GatewayNetwork]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateGatewayRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateGatewayRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateGatewayRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['egressCidrBlocks'])) {
            throw new Error("Expected the field `egressCidrBlocks` to be an array in the JSON data but got " + data['egressCidrBlocks']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['networks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['networks'])) {
                throw new Error("Expected the field `networks` to be an array in the JSON data but got " + data['networks']);
            }
            // validate the optional field `networks` (array)
            for (const item of data['networks']) {
                GatewayNetwork.validateJSON(item);
            };
        }

        return true;
    }


}

CreateGatewayRequest.RequiredProperties = ["egressCidrBlocks", "name", "networks"];

/**
 * The range of IP addresses that are allowed to contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
 * @member {Array.<String>} egressCidrBlocks
 */
CreateGatewayRequest.prototype['egressCidrBlocks'] = undefined;

/**
 * The name of the gateway. This name can not be modified after the gateway is created.
 * @member {String} name
 */
CreateGatewayRequest.prototype['name'] = undefined;

/**
 * The list of networks that you want to add.
 * @member {Array.<module:model/GatewayNetwork>} networks
 */
CreateGatewayRequest.prototype['networks'] = undefined;






export default CreateGatewayRequest;

