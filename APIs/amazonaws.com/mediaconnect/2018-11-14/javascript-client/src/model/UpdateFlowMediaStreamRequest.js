/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateFlowMediaStreamRequestAttributes from './UpdateFlowMediaStreamRequestAttributes';

/**
 * The UpdateFlowMediaStreamRequest model module.
 * @module model/UpdateFlowMediaStreamRequest
 * @version 2018-11-14
 */
class UpdateFlowMediaStreamRequest {
    /**
     * Constructs a new <code>UpdateFlowMediaStreamRequest</code>.
     * @alias module:model/UpdateFlowMediaStreamRequest
     */
    constructor() { 
        
        UpdateFlowMediaStreamRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateFlowMediaStreamRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFlowMediaStreamRequest} obj Optional instance to populate.
     * @return {module:model/UpdateFlowMediaStreamRequest} The populated <code>UpdateFlowMediaStreamRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFlowMediaStreamRequest();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = UpdateFlowMediaStreamRequestAttributes.constructFromObject(data['attributes']);
            }
            if (data.hasOwnProperty('clockRate')) {
                obj['clockRate'] = ApiClient.convertToType(data['clockRate'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('mediaStreamType')) {
                obj['mediaStreamType'] = ApiClient.convertToType(data['mediaStreamType'], 'String');
            }
            if (data.hasOwnProperty('videoFormat')) {
                obj['videoFormat'] = ApiClient.convertToType(data['videoFormat'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateFlowMediaStreamRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateFlowMediaStreamRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attributes`
        if (data['attributes']) { // data not null
          UpdateFlowMediaStreamRequestAttributes.validateJSON(data['attributes']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['mediaStreamType'] && !(typeof data['mediaStreamType'] === 'string' || data['mediaStreamType'] instanceof String)) {
            throw new Error("Expected the field `mediaStreamType` to be a primitive type in the JSON string but got " + data['mediaStreamType']);
        }
        // ensure the json data is a string
        if (data['videoFormat'] && !(typeof data['videoFormat'] === 'string' || data['videoFormat'] instanceof String)) {
            throw new Error("Expected the field `videoFormat` to be a primitive type in the JSON string but got " + data['videoFormat']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdateFlowMediaStreamRequestAttributes} attributes
 */
UpdateFlowMediaStreamRequest.prototype['attributes'] = undefined;

/**
 * The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.
 * @member {Number} clockRate
 */
UpdateFlowMediaStreamRequest.prototype['clockRate'] = undefined;

/**
 * Description
 * @member {String} description
 */
UpdateFlowMediaStreamRequest.prototype['description'] = undefined;

/**
 * The type of media stream.
 * @member {module:model/UpdateFlowMediaStreamRequest.MediaStreamTypeEnum} mediaStreamType
 */
UpdateFlowMediaStreamRequest.prototype['mediaStreamType'] = undefined;

/**
 * The resolution of the video.
 * @member {String} videoFormat
 */
UpdateFlowMediaStreamRequest.prototype['videoFormat'] = undefined;





/**
 * Allowed values for the <code>mediaStreamType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateFlowMediaStreamRequest['MediaStreamTypeEnum'] = {

    /**
     * value: "video"
     * @const
     */
    "video": "video",

    /**
     * value: "audio"
     * @const
     */
    "audio": "audio",

    /**
     * value: "ancillary-data"
     * @const
     */
    "ancillary-data": "ancillary-data"
};



export default UpdateFlowMediaStreamRequest;

