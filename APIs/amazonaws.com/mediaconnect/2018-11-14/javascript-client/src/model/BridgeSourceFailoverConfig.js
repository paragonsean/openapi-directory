/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBridgeRequestSourceFailoverConfigSourcePriority from './CreateBridgeRequestSourceFailoverConfigSourcePriority';
import FailoverConfig from './FailoverConfig';
import FailoverMode from './FailoverMode';
import State from './State';

/**
 * The BridgeSourceFailoverConfig model module.
 * @module model/BridgeSourceFailoverConfig
 * @version 2018-11-14
 */
class BridgeSourceFailoverConfig {
    /**
     * Constructs a new <code>BridgeSourceFailoverConfig</code>.
     * @alias module:model/BridgeSourceFailoverConfig
     * @implements module:model/FailoverConfig
     */
    constructor() { 
        FailoverConfig.initialize(this);
        BridgeSourceFailoverConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BridgeSourceFailoverConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BridgeSourceFailoverConfig} obj Optional instance to populate.
     * @return {module:model/BridgeSourceFailoverConfig} The populated <code>BridgeSourceFailoverConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BridgeSourceFailoverConfig();
            FailoverConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('FailoverMode')) {
                obj['FailoverMode'] = ApiClient.convertToType(data['FailoverMode'], FailoverMode);
            }
            if (data.hasOwnProperty('RecoveryWindow')) {
                obj['RecoveryWindow'] = ApiClient.convertToType(data['RecoveryWindow'], 'Number');
            }
            if (data.hasOwnProperty('SourcePriority')) {
                obj['SourcePriority'] = CreateBridgeRequestSourceFailoverConfigSourcePriority.constructFromObject(data['SourcePriority']);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], State);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BridgeSourceFailoverConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BridgeSourceFailoverConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FailoverMode`
        if (data['FailoverMode']) { // data not null
          FailoverMode.validateJSON(data['FailoverMode']);
        }
        // validate the optional field `RecoveryWindow`
        if (data['RecoveryWindow']) { // data not null
          Number.validateJSON(data['RecoveryWindow']);
        }
        // validate the optional field `SourcePriority`
        if (data['SourcePriority']) { // data not null
          CreateBridgeRequestSourceFailoverConfigSourcePriority.validateJSON(data['SourcePriority']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          State.validateJSON(data['State']);
        }

        return true;
    }


}



/**
 * @member {module:model/FailoverMode} FailoverMode
 */
BridgeSourceFailoverConfig.prototype['FailoverMode'] = undefined;

/**
 * @member {Number} RecoveryWindow
 */
BridgeSourceFailoverConfig.prototype['RecoveryWindow'] = undefined;

/**
 * @member {module:model/CreateBridgeRequestSourceFailoverConfigSourcePriority} SourcePriority
 */
BridgeSourceFailoverConfig.prototype['SourcePriority'] = undefined;

/**
 * @member {module:model/State} State
 */
BridgeSourceFailoverConfig.prototype['State'] = undefined;


// Implement FailoverConfig interface:
/**
 * @member {module:model/FailoverMode} FailoverMode
 */
FailoverConfig.prototype['FailoverMode'] = undefined;
/**
 * @member {Number} RecoveryWindow
 */
FailoverConfig.prototype['RecoveryWindow'] = undefined;
/**
 * @member {module:model/CreateBridgeRequestSourceFailoverConfigSourcePriority} SourcePriority
 */
FailoverConfig.prototype['SourcePriority'] = undefined;
/**
 * @member {module:model/State} State
 */
FailoverConfig.prototype['State'] = undefined;




export default BridgeSourceFailoverConfig;

