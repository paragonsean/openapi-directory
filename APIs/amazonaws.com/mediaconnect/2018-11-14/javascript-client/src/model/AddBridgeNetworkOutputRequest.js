/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Protocol from './Protocol';

/**
 * The AddBridgeNetworkOutputRequest model module.
 * @module model/AddBridgeNetworkOutputRequest
 * @version 2018-11-14
 */
class AddBridgeNetworkOutputRequest {
    /**
     * Constructs a new <code>AddBridgeNetworkOutputRequest</code>.
     * Add a network output to an existing bridge.
     * @alias module:model/AddBridgeNetworkOutputRequest
     * @param ipAddress {String} 
     * @param name {String} 
     * @param networkName {String} 
     * @param port {Number} 
     * @param protocol {module:model/Protocol} 
     * @param ttl {Number} 
     */
    constructor(ipAddress, name, networkName, port, protocol, ttl) { 
        
        AddBridgeNetworkOutputRequest.initialize(this, ipAddress, name, networkName, port, protocol, ttl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ipAddress, name, networkName, port, protocol, ttl) { 
        obj['IpAddress'] = ipAddress;
        obj['Name'] = name;
        obj['NetworkName'] = networkName;
        obj['Port'] = port;
        obj['Protocol'] = protocol;
        obj['Ttl'] = ttl;
    }

    /**
     * Constructs a <code>AddBridgeNetworkOutputRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddBridgeNetworkOutputRequest} obj Optional instance to populate.
     * @return {module:model/AddBridgeNetworkOutputRequest} The populated <code>AddBridgeNetworkOutputRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddBridgeNetworkOutputRequest();

            if (data.hasOwnProperty('IpAddress')) {
                obj['IpAddress'] = ApiClient.convertToType(data['IpAddress'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NetworkName')) {
                obj['NetworkName'] = ApiClient.convertToType(data['NetworkName'], 'String');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('Protocol')) {
                obj['Protocol'] = ApiClient.convertToType(data['Protocol'], Protocol);
            }
            if (data.hasOwnProperty('Ttl')) {
                obj['Ttl'] = ApiClient.convertToType(data['Ttl'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddBridgeNetworkOutputRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddBridgeNetworkOutputRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddBridgeNetworkOutputRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IpAddress`
        if (data['IpAddress']) { // data not null
          String.validateJSON(data['IpAddress']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `NetworkName`
        if (data['NetworkName']) { // data not null
          String.validateJSON(data['NetworkName']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `Protocol`
        if (data['Protocol']) { // data not null
          Protocol.validateJSON(data['Protocol']);
        }
        // validate the optional field `Ttl`
        if (data['Ttl']) { // data not null
          Number.validateJSON(data['Ttl']);
        }

        return true;
    }


}

AddBridgeNetworkOutputRequest.RequiredProperties = ["IpAddress", "Name", "NetworkName", "Port", "Protocol", "Ttl"];

/**
 * @member {String} IpAddress
 */
AddBridgeNetworkOutputRequest.prototype['IpAddress'] = undefined;

/**
 * @member {String} Name
 */
AddBridgeNetworkOutputRequest.prototype['Name'] = undefined;

/**
 * @member {String} NetworkName
 */
AddBridgeNetworkOutputRequest.prototype['NetworkName'] = undefined;

/**
 * @member {Number} Port
 */
AddBridgeNetworkOutputRequest.prototype['Port'] = undefined;

/**
 * @member {module:model/Protocol} Protocol
 */
AddBridgeNetworkOutputRequest.prototype['Protocol'] = undefined;

/**
 * @member {Number} Ttl
 */
AddBridgeNetworkOutputRequest.prototype['Ttl'] = undefined;






export default AddBridgeNetworkOutputRequest;

