/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GrantEntitlementRequest from './GrantEntitlementRequest';

/**
 * The GrantFlowEntitlementsRequest model module.
 * @module model/GrantFlowEntitlementsRequest
 * @version 2018-11-14
 */
class GrantFlowEntitlementsRequest {
    /**
     * Constructs a new <code>GrantFlowEntitlementsRequest</code>.
     * @alias module:model/GrantFlowEntitlementsRequest
     * @param entitlements {Array.<module:model/GrantEntitlementRequest>} The list of entitlements that you want to grant.
     */
    constructor(entitlements) { 
        
        GrantFlowEntitlementsRequest.initialize(this, entitlements);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entitlements) { 
        obj['entitlements'] = entitlements;
    }

    /**
     * Constructs a <code>GrantFlowEntitlementsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrantFlowEntitlementsRequest} obj Optional instance to populate.
     * @return {module:model/GrantFlowEntitlementsRequest} The populated <code>GrantFlowEntitlementsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrantFlowEntitlementsRequest();

            if (data.hasOwnProperty('entitlements')) {
                obj['entitlements'] = ApiClient.convertToType(data['entitlements'], [GrantEntitlementRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrantFlowEntitlementsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrantFlowEntitlementsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GrantFlowEntitlementsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['entitlements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entitlements'])) {
                throw new Error("Expected the field `entitlements` to be an array in the JSON data but got " + data['entitlements']);
            }
            // validate the optional field `entitlements` (array)
            for (const item of data['entitlements']) {
                GrantEntitlementRequest.validateJSON(item);
            };
        }

        return true;
    }


}

GrantFlowEntitlementsRequest.RequiredProperties = ["entitlements"];

/**
 * The list of entitlements that you want to grant.
 * @member {Array.<module:model/GrantEntitlementRequest>} entitlements
 */
GrantFlowEntitlementsRequest.prototype['entitlements'] = undefined;






export default GrantFlowEntitlementsRequest;

