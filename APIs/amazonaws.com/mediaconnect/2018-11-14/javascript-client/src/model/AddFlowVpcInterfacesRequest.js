/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VpcInterfaceRequest from './VpcInterfaceRequest';

/**
 * The AddFlowVpcInterfacesRequest model module.
 * @module model/AddFlowVpcInterfacesRequest
 * @version 2018-11-14
 */
class AddFlowVpcInterfacesRequest {
    /**
     * Constructs a new <code>AddFlowVpcInterfacesRequest</code>.
     * @alias module:model/AddFlowVpcInterfacesRequest
     * @param vpcInterfaces {Array.<module:model/VpcInterfaceRequest>} A list of VPC interfaces that you want to add.
     */
    constructor(vpcInterfaces) { 
        
        AddFlowVpcInterfacesRequest.initialize(this, vpcInterfaces);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, vpcInterfaces) { 
        obj['vpcInterfaces'] = vpcInterfaces;
    }

    /**
     * Constructs a <code>AddFlowVpcInterfacesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddFlowVpcInterfacesRequest} obj Optional instance to populate.
     * @return {module:model/AddFlowVpcInterfacesRequest} The populated <code>AddFlowVpcInterfacesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddFlowVpcInterfacesRequest();

            if (data.hasOwnProperty('vpcInterfaces')) {
                obj['vpcInterfaces'] = ApiClient.convertToType(data['vpcInterfaces'], [VpcInterfaceRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddFlowVpcInterfacesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddFlowVpcInterfacesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddFlowVpcInterfacesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['vpcInterfaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vpcInterfaces'])) {
                throw new Error("Expected the field `vpcInterfaces` to be an array in the JSON data but got " + data['vpcInterfaces']);
            }
            // validate the optional field `vpcInterfaces` (array)
            for (const item of data['vpcInterfaces']) {
                VpcInterfaceRequest.validateJSON(item);
            };
        }

        return true;
    }


}

AddFlowVpcInterfacesRequest.RequiredProperties = ["vpcInterfaces"];

/**
 * A list of VPC interfaces that you want to add.
 * @member {Array.<module:model/VpcInterfaceRequest>} vpcInterfaces
 */
AddFlowVpcInterfacesRequest.prototype['vpcInterfaces'] = undefined;






export default AddFlowVpcInterfacesRequest;

