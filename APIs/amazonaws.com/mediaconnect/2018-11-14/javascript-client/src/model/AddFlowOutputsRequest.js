/**
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddOutputRequest from './AddOutputRequest';

/**
 * The AddFlowOutputsRequest model module.
 * @module model/AddFlowOutputsRequest
 * @version 2018-11-14
 */
class AddFlowOutputsRequest {
    /**
     * Constructs a new <code>AddFlowOutputsRequest</code>.
     * @alias module:model/AddFlowOutputsRequest
     * @param outputs {Array.<module:model/AddOutputRequest>} A list of outputs that you want to add.
     */
    constructor(outputs) { 
        
        AddFlowOutputsRequest.initialize(this, outputs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, outputs) { 
        obj['outputs'] = outputs;
    }

    /**
     * Constructs a <code>AddFlowOutputsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddFlowOutputsRequest} obj Optional instance to populate.
     * @return {module:model/AddFlowOutputsRequest} The populated <code>AddFlowOutputsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddFlowOutputsRequest();

            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], [AddOutputRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddFlowOutputsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddFlowOutputsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddFlowOutputsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['outputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outputs'])) {
                throw new Error("Expected the field `outputs` to be an array in the JSON data but got " + data['outputs']);
            }
            // validate the optional field `outputs` (array)
            for (const item of data['outputs']) {
                AddOutputRequest.validateJSON(item);
            };
        }

        return true;
    }


}

AddFlowOutputsRequest.RequiredProperties = ["outputs"];

/**
 * A list of outputs that you want to add.
 * @member {Array.<module:model/AddOutputRequest>} outputs
 */
AddFlowOutputsRequest.prototype['outputs'] = undefined;






export default AddFlowOutputsRequest;

