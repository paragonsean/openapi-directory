/*
 * AWS MediaConnect
 * API for AWS Elemental MediaConnect
 *
 * The version of the OpenAPI document: 2018-11-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Algorithm;
import org.openapitools.client.model.KeyType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateFlowEntitlementRequestEncryption
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:07.515051-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateFlowEntitlementRequestEncryption {
  public static final String SERIALIZED_NAME_ALGORITHM = "Algorithm";
  @SerializedName(SERIALIZED_NAME_ALGORITHM)
  private Algorithm algorithm;

  public static final String SERIALIZED_NAME_CONSTANT_INITIALIZATION_VECTOR = "ConstantInitializationVector";
  @SerializedName(SERIALIZED_NAME_CONSTANT_INITIALIZATION_VECTOR)
  private String constantInitializationVector;

  public static final String SERIALIZED_NAME_DEVICE_ID = "DeviceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_KEY_TYPE = "KeyType";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE)
  private KeyType keyType;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SECRET_ARN = "SecretArn";
  @SerializedName(SERIALIZED_NAME_SECRET_ARN)
  private String secretArn;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public UpdateFlowEntitlementRequestEncryption() {
  }

  public UpdateFlowEntitlementRequestEncryption algorithm(Algorithm algorithm) {
    this.algorithm = algorithm;
    return this;
  }

  /**
   * Get algorithm
   * @return algorithm
   */
  @javax.annotation.Nullable
  public Algorithm getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(Algorithm algorithm) {
    this.algorithm = algorithm;
  }


  public UpdateFlowEntitlementRequestEncryption constantInitializationVector(String constantInitializationVector) {
    this.constantInitializationVector = constantInitializationVector;
    return this;
  }

  /**
   * Get constantInitializationVector
   * @return constantInitializationVector
   */
  @javax.annotation.Nullable
  public String getConstantInitializationVector() {
    return constantInitializationVector;
  }

  public void setConstantInitializationVector(String constantInitializationVector) {
    this.constantInitializationVector = constantInitializationVector;
  }


  public UpdateFlowEntitlementRequestEncryption deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * Get deviceId
   * @return deviceId
   */
  @javax.annotation.Nullable
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public UpdateFlowEntitlementRequestEncryption keyType(KeyType keyType) {
    this.keyType = keyType;
    return this;
  }

  /**
   * Get keyType
   * @return keyType
   */
  @javax.annotation.Nullable
  public KeyType getKeyType() {
    return keyType;
  }

  public void setKeyType(KeyType keyType) {
    this.keyType = keyType;
  }


  public UpdateFlowEntitlementRequestEncryption region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public UpdateFlowEntitlementRequestEncryption resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public UpdateFlowEntitlementRequestEncryption roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public UpdateFlowEntitlementRequestEncryption secretArn(String secretArn) {
    this.secretArn = secretArn;
    return this;
  }

  /**
   * Get secretArn
   * @return secretArn
   */
  @javax.annotation.Nullable
  public String getSecretArn() {
    return secretArn;
  }

  public void setSecretArn(String secretArn) {
    this.secretArn = secretArn;
  }


  public UpdateFlowEntitlementRequestEncryption url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateFlowEntitlementRequestEncryption updateFlowEntitlementRequestEncryption = (UpdateFlowEntitlementRequestEncryption) o;
    return Objects.equals(this.algorithm, updateFlowEntitlementRequestEncryption.algorithm) &&
        Objects.equals(this.constantInitializationVector, updateFlowEntitlementRequestEncryption.constantInitializationVector) &&
        Objects.equals(this.deviceId, updateFlowEntitlementRequestEncryption.deviceId) &&
        Objects.equals(this.keyType, updateFlowEntitlementRequestEncryption.keyType) &&
        Objects.equals(this.region, updateFlowEntitlementRequestEncryption.region) &&
        Objects.equals(this.resourceId, updateFlowEntitlementRequestEncryption.resourceId) &&
        Objects.equals(this.roleArn, updateFlowEntitlementRequestEncryption.roleArn) &&
        Objects.equals(this.secretArn, updateFlowEntitlementRequestEncryption.secretArn) &&
        Objects.equals(this.url, updateFlowEntitlementRequestEncryption.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithm, constantInitializationVector, deviceId, keyType, region, resourceId, roleArn, secretArn, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateFlowEntitlementRequestEncryption {\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    constantInitializationVector: ").append(toIndentedString(constantInitializationVector)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    secretArn: ").append(toIndentedString(secretArn)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Algorithm");
    openapiFields.add("ConstantInitializationVector");
    openapiFields.add("DeviceId");
    openapiFields.add("KeyType");
    openapiFields.add("Region");
    openapiFields.add("ResourceId");
    openapiFields.add("RoleArn");
    openapiFields.add("SecretArn");
    openapiFields.add("Url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateFlowEntitlementRequestEncryption
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateFlowEntitlementRequestEncryption.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateFlowEntitlementRequestEncryption is not found in the empty JSON string", UpdateFlowEntitlementRequestEncryption.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateFlowEntitlementRequestEncryption.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateFlowEntitlementRequestEncryption` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Algorithm`
      if (jsonObj.get("Algorithm") != null && !jsonObj.get("Algorithm").isJsonNull()) {
        Algorithm.validateJsonElement(jsonObj.get("Algorithm"));
      }
      // validate the optional field `ConstantInitializationVector`
      if (jsonObj.get("ConstantInitializationVector") != null && !jsonObj.get("ConstantInitializationVector").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ConstantInitializationVector"));
      }
      // validate the optional field `DeviceId`
      if (jsonObj.get("DeviceId") != null && !jsonObj.get("DeviceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceId"));
      }
      // validate the optional field `KeyType`
      if (jsonObj.get("KeyType") != null && !jsonObj.get("KeyType").isJsonNull()) {
        KeyType.validateJsonElement(jsonObj.get("KeyType"));
      }
      // validate the optional field `Region`
      if (jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Region"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `SecretArn`
      if (jsonObj.get("SecretArn") != null && !jsonObj.get("SecretArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SecretArn"));
      }
      // validate the optional field `Url`
      if (jsonObj.get("Url") != null && !jsonObj.get("Url").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Url"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateFlowEntitlementRequestEncryption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateFlowEntitlementRequestEncryption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateFlowEntitlementRequestEncryption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateFlowEntitlementRequestEncryption.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateFlowEntitlementRequestEncryption>() {
           @Override
           public void write(JsonWriter out, UpdateFlowEntitlementRequestEncryption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateFlowEntitlementRequestEncryption read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateFlowEntitlementRequestEncryption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateFlowEntitlementRequestEncryption
   * @throws IOException if the JSON string is invalid with respect to UpdateFlowEntitlementRequestEncryption
   */
  public static UpdateFlowEntitlementRequestEncryption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateFlowEntitlementRequestEncryption.class);
  }

  /**
   * Convert an instance of UpdateFlowEntitlementRequestEncryption to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

