# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.listener_health_check import ListenerHealthCheck
from openapi_server.models.listener_port_mapping import ListenerPortMapping
from openapi_server import util


class Listener(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_check: ListenerHealthCheck=None, port_mapping: ListenerPortMapping=None):
        """Listener - a model defined in OpenAPI

        :param health_check: The health_check of this Listener.
        :param port_mapping: The port_mapping of this Listener.
        """
        self.openapi_types = {
            'health_check': ListenerHealthCheck,
            'port_mapping': ListenerPortMapping
        }

        self.attribute_map = {
            'health_check': 'healthCheck',
            'port_mapping': 'portMapping'
        }

        self._health_check = health_check
        self._port_mapping = port_mapping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Listener':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Listener of this Listener.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_check(self):
        """Gets the health_check of this Listener.


        :return: The health_check of this Listener.
        :rtype: ListenerHealthCheck
        """
        return self._health_check

    @health_check.setter
    def health_check(self, health_check):
        """Sets the health_check of this Listener.


        :param health_check: The health_check of this Listener.
        :type health_check: ListenerHealthCheck
        """

        self._health_check = health_check

    @property
    def port_mapping(self):
        """Gets the port_mapping of this Listener.


        :return: The port_mapping of this Listener.
        :rtype: ListenerPortMapping
        """
        return self._port_mapping

    @port_mapping.setter
    def port_mapping(self, port_mapping):
        """Sets the port_mapping of this Listener.


        :param port_mapping: The port_mapping of this Listener.
        :type port_mapping: ListenerPortMapping
        """

        self._port_mapping = port_mapping
