# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RouteRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, mesh_name: str=None, route_name: str=None, virtual_router_name: str=None):
        """RouteRef - a model defined in OpenAPI

        :param arn: The arn of this RouteRef.
        :param mesh_name: The mesh_name of this RouteRef.
        :param route_name: The route_name of this RouteRef.
        :param virtual_router_name: The virtual_router_name of this RouteRef.
        """
        self.openapi_types = {
            'arn': str,
            'mesh_name': str,
            'route_name': str,
            'virtual_router_name': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'mesh_name': 'meshName',
            'route_name': 'routeName',
            'virtual_router_name': 'virtualRouterName'
        }

        self._arn = arn
        self._mesh_name = mesh_name
        self._route_name = route_name
        self._virtual_router_name = virtual_router_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RouteRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RouteRef of this RouteRef.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this RouteRef.


        :return: The arn of this RouteRef.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this RouteRef.


        :param arn: The arn of this RouteRef.
        :type arn: str
        """

        self._arn = arn

    @property
    def mesh_name(self):
        """Gets the mesh_name of this RouteRef.


        :return: The mesh_name of this RouteRef.
        :rtype: str
        """
        return self._mesh_name

    @mesh_name.setter
    def mesh_name(self, mesh_name):
        """Sets the mesh_name of this RouteRef.


        :param mesh_name: The mesh_name of this RouteRef.
        :type mesh_name: str
        """

        self._mesh_name = mesh_name

    @property
    def route_name(self):
        """Gets the route_name of this RouteRef.


        :return: The route_name of this RouteRef.
        :rtype: str
        """
        return self._route_name

    @route_name.setter
    def route_name(self, route_name):
        """Sets the route_name of this RouteRef.


        :param route_name: The route_name of this RouteRef.
        :type route_name: str
        """

        self._route_name = route_name

    @property
    def virtual_router_name(self):
        """Gets the virtual_router_name of this RouteRef.


        :return: The virtual_router_name of this RouteRef.
        :rtype: str
        """
        return self._virtual_router_name

    @virtual_router_name.setter
    def virtual_router_name(self, virtual_router_name):
        """Sets the virtual_router_name of this RouteRef.


        :param virtual_router_name: The virtual_router_name of this RouteRef.
        :type virtual_router_name: str
        """

        self._virtual_router_name = virtual_router_name
