/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessLog from './model/AccessLog';
import AccessLogFile from './model/AccessLogFile';
import AwsCloudMapInstanceAttribute from './model/AwsCloudMapInstanceAttribute';
import AwsCloudMapServiceDiscovery from './model/AwsCloudMapServiceDiscovery';
import Backend from './model/Backend';
import BackendDefaults from './model/BackendDefaults';
import BackendDefaultsClientPolicy from './model/BackendDefaultsClientPolicy';
import BackendVirtualService from './model/BackendVirtualService';
import ClientPolicy from './model/ClientPolicy';
import ClientPolicyTls from './model/ClientPolicyTls';
import ClientPolicyTlsCertificate from './model/ClientPolicyTlsCertificate';
import ClientPolicyTlsValidation from './model/ClientPolicyTlsValidation';
import ClientTlsCertificate from './model/ClientTlsCertificate';
import ClientTlsCertificateFile from './model/ClientTlsCertificateFile';
import ClientTlsCertificateSds from './model/ClientTlsCertificateSds';
import CreateGatewayRouteInput from './model/CreateGatewayRouteInput';
import CreateGatewayRouteInputSpec from './model/CreateGatewayRouteInputSpec';
import CreateGatewayRouteOutput from './model/CreateGatewayRouteOutput';
import CreateGatewayRouteOutputGatewayRoute from './model/CreateGatewayRouteOutputGatewayRoute';
import CreateGatewayRouteRequest from './model/CreateGatewayRouteRequest';
import CreateGatewayRouteRequestSpec from './model/CreateGatewayRouteRequestSpec';
import CreateGatewayRouteRequestSpecGrpcRoute from './model/CreateGatewayRouteRequestSpecGrpcRoute';
import CreateGatewayRouteRequestSpecHttp2Route from './model/CreateGatewayRouteRequestSpecHttp2Route';
import CreateGatewayRouteRequestSpecHttpRoute from './model/CreateGatewayRouteRequestSpecHttpRoute';
import CreateMeshInput from './model/CreateMeshInput';
import CreateMeshInputSpec from './model/CreateMeshInputSpec';
import CreateMeshOutput from './model/CreateMeshOutput';
import CreateMeshOutputMesh from './model/CreateMeshOutputMesh';
import CreateMeshRequest from './model/CreateMeshRequest';
import CreateMeshRequestSpec from './model/CreateMeshRequestSpec';
import CreateMeshRequestSpecEgressFilter from './model/CreateMeshRequestSpecEgressFilter';
import CreateRouteInput from './model/CreateRouteInput';
import CreateRouteInputSpec from './model/CreateRouteInputSpec';
import CreateRouteOutput from './model/CreateRouteOutput';
import CreateRouteOutputRoute from './model/CreateRouteOutputRoute';
import CreateRouteRequest from './model/CreateRouteRequest';
import CreateRouteRequestSpec from './model/CreateRouteRequestSpec';
import CreateRouteRequestSpecGrpcRoute from './model/CreateRouteRequestSpecGrpcRoute';
import CreateRouteRequestSpecHttp2Route from './model/CreateRouteRequestSpecHttp2Route';
import CreateRouteRequestSpecHttpRoute from './model/CreateRouteRequestSpecHttpRoute';
import CreateRouteRequestSpecTcpRoute from './model/CreateRouteRequestSpecTcpRoute';
import CreateVirtualGatewayInput from './model/CreateVirtualGatewayInput';
import CreateVirtualGatewayInputSpec from './model/CreateVirtualGatewayInputSpec';
import CreateVirtualGatewayOutput from './model/CreateVirtualGatewayOutput';
import CreateVirtualGatewayOutputVirtualGateway from './model/CreateVirtualGatewayOutputVirtualGateway';
import CreateVirtualGatewayRequest from './model/CreateVirtualGatewayRequest';
import CreateVirtualGatewayRequestSpec from './model/CreateVirtualGatewayRequestSpec';
import CreateVirtualGatewayRequestSpecBackendDefaults from './model/CreateVirtualGatewayRequestSpecBackendDefaults';
import CreateVirtualNodeInput from './model/CreateVirtualNodeInput';
import CreateVirtualNodeInputSpec from './model/CreateVirtualNodeInputSpec';
import CreateVirtualNodeOutput from './model/CreateVirtualNodeOutput';
import CreateVirtualNodeOutputVirtualNode from './model/CreateVirtualNodeOutputVirtualNode';
import CreateVirtualNodeRequest from './model/CreateVirtualNodeRequest';
import CreateVirtualNodeRequestSpec from './model/CreateVirtualNodeRequestSpec';
import CreateVirtualNodeRequestSpecBackendDefaults from './model/CreateVirtualNodeRequestSpecBackendDefaults';
import CreateVirtualNodeRequestSpecLogging from './model/CreateVirtualNodeRequestSpecLogging';
import CreateVirtualNodeRequestSpecServiceDiscovery from './model/CreateVirtualNodeRequestSpecServiceDiscovery';
import CreateVirtualRouterInput from './model/CreateVirtualRouterInput';
import CreateVirtualRouterInputSpec from './model/CreateVirtualRouterInputSpec';
import CreateVirtualRouterOutput from './model/CreateVirtualRouterOutput';
import CreateVirtualRouterOutputVirtualRouter from './model/CreateVirtualRouterOutputVirtualRouter';
import CreateVirtualRouterRequest from './model/CreateVirtualRouterRequest';
import CreateVirtualRouterRequestSpec from './model/CreateVirtualRouterRequestSpec';
import CreateVirtualServiceInput from './model/CreateVirtualServiceInput';
import CreateVirtualServiceInputSpec from './model/CreateVirtualServiceInputSpec';
import CreateVirtualServiceOutput from './model/CreateVirtualServiceOutput';
import CreateVirtualServiceOutputVirtualService from './model/CreateVirtualServiceOutputVirtualService';
import CreateVirtualServiceRequest from './model/CreateVirtualServiceRequest';
import CreateVirtualServiceRequestSpec from './model/CreateVirtualServiceRequestSpec';
import CreateVirtualServiceRequestSpecProvider from './model/CreateVirtualServiceRequestSpecProvider';
import DefaultGatewayRouteRewrite from './model/DefaultGatewayRouteRewrite';
import DeleteGatewayRouteOutput from './model/DeleteGatewayRouteOutput';
import DeleteGatewayRouteOutputGatewayRoute from './model/DeleteGatewayRouteOutputGatewayRoute';
import DeleteMeshOutput from './model/DeleteMeshOutput';
import DeleteMeshOutputMesh from './model/DeleteMeshOutputMesh';
import DeleteRouteOutput from './model/DeleteRouteOutput';
import DeleteRouteOutputRoute from './model/DeleteRouteOutputRoute';
import DeleteVirtualGatewayOutput from './model/DeleteVirtualGatewayOutput';
import DeleteVirtualGatewayOutputVirtualGateway from './model/DeleteVirtualGatewayOutputVirtualGateway';
import DeleteVirtualNodeOutput from './model/DeleteVirtualNodeOutput';
import DeleteVirtualNodeOutputVirtualNode from './model/DeleteVirtualNodeOutputVirtualNode';
import DeleteVirtualRouterOutput from './model/DeleteVirtualRouterOutput';
import DeleteVirtualRouterOutputVirtualRouter from './model/DeleteVirtualRouterOutputVirtualRouter';
import DeleteVirtualServiceOutput from './model/DeleteVirtualServiceOutput';
import DeleteVirtualServiceOutputVirtualService from './model/DeleteVirtualServiceOutputVirtualService';
import DescribeGatewayRouteOutput from './model/DescribeGatewayRouteOutput';
import DescribeGatewayRouteOutputGatewayRoute from './model/DescribeGatewayRouteOutputGatewayRoute';
import DescribeMeshOutput from './model/DescribeMeshOutput';
import DescribeMeshOutputMesh from './model/DescribeMeshOutputMesh';
import DescribeRouteOutput from './model/DescribeRouteOutput';
import DescribeRouteOutputRoute from './model/DescribeRouteOutputRoute';
import DescribeVirtualGatewayOutput from './model/DescribeVirtualGatewayOutput';
import DescribeVirtualGatewayOutputVirtualGateway from './model/DescribeVirtualGatewayOutputVirtualGateway';
import DescribeVirtualNodeOutput from './model/DescribeVirtualNodeOutput';
import DescribeVirtualNodeOutputVirtualNode from './model/DescribeVirtualNodeOutputVirtualNode';
import DescribeVirtualRouterOutput from './model/DescribeVirtualRouterOutput';
import DescribeVirtualRouterOutputVirtualRouter from './model/DescribeVirtualRouterOutputVirtualRouter';
import DescribeVirtualServiceOutput from './model/DescribeVirtualServiceOutput';
import DescribeVirtualServiceOutputVirtualService from './model/DescribeVirtualServiceOutputVirtualService';
import DnsResponseType from './model/DnsResponseType';
import DnsServiceDiscovery from './model/DnsServiceDiscovery';
import Duration from './model/Duration';
import DurationUnit from './model/DurationUnit';
import EgressFilter from './model/EgressFilter';
import EgressFilterType from './model/EgressFilterType';
import FileAccessLog from './model/FileAccessLog';
import FileAccessLogFormat from './model/FileAccessLogFormat';
import GatewayRouteData from './model/GatewayRouteData';
import GatewayRouteDataSpec from './model/GatewayRouteDataSpec';
import GatewayRouteDataStatus from './model/GatewayRouteDataStatus';
import GatewayRouteHostnameMatch from './model/GatewayRouteHostnameMatch';
import GatewayRouteHostnameRewrite from './model/GatewayRouteHostnameRewrite';
import GatewayRouteRef from './model/GatewayRouteRef';
import GatewayRouteSpec from './model/GatewayRouteSpec';
import GatewayRouteStatus from './model/GatewayRouteStatus';
import GatewayRouteStatusCode from './model/GatewayRouteStatusCode';
import GatewayRouteTarget from './model/GatewayRouteTarget';
import GatewayRouteTargetVirtualService from './model/GatewayRouteTargetVirtualService';
import GatewayRouteVirtualService from './model/GatewayRouteVirtualService';
import GrpcGatewayRoute from './model/GrpcGatewayRoute';
import GrpcGatewayRouteAction from './model/GrpcGatewayRouteAction';
import GrpcGatewayRouteActionRewrite from './model/GrpcGatewayRouteActionRewrite';
import GrpcGatewayRouteActionTarget from './model/GrpcGatewayRouteActionTarget';
import GrpcGatewayRouteMatch from './model/GrpcGatewayRouteMatch';
import GrpcGatewayRouteMatchHostname from './model/GrpcGatewayRouteMatchHostname';
import GrpcGatewayRouteMetadata from './model/GrpcGatewayRouteMetadata';
import GrpcGatewayRouteMetadataMatch from './model/GrpcGatewayRouteMetadataMatch';
import GrpcGatewayRouteRewrite from './model/GrpcGatewayRouteRewrite';
import GrpcGatewayRouteRewriteHostname from './model/GrpcGatewayRouteRewriteHostname';
import GrpcMetadataMatchMethod from './model/GrpcMetadataMatchMethod';
import GrpcRetryPolicy from './model/GrpcRetryPolicy';
import GrpcRetryPolicyEvent from './model/GrpcRetryPolicyEvent';
import GrpcRetryPolicyPerRetryTimeout from './model/GrpcRetryPolicyPerRetryTimeout';
import GrpcRoute from './model/GrpcRoute';
import GrpcRouteAction from './model/GrpcRouteAction';
import GrpcRouteMatch from './model/GrpcRouteMatch';
import GrpcRouteMetadata from './model/GrpcRouteMetadata';
import GrpcRouteMetadataMatch from './model/GrpcRouteMetadataMatch';
import GrpcRouteMetadataMatchMethod from './model/GrpcRouteMetadataMatchMethod';
import GrpcRouteMetadataMatchMethodRange from './model/GrpcRouteMetadataMatchMethodRange';
import GrpcRouteRetryPolicy from './model/GrpcRouteRetryPolicy';
import GrpcRouteTimeout from './model/GrpcRouteTimeout';
import GrpcTimeout from './model/GrpcTimeout';
import GrpcTimeoutIdle from './model/GrpcTimeoutIdle';
import GrpcTimeoutPerRequest from './model/GrpcTimeoutPerRequest';
import HeaderMatchMethod from './model/HeaderMatchMethod';
import HealthCheckPolicy from './model/HealthCheckPolicy';
import HttpGatewayRoute from './model/HttpGatewayRoute';
import HttpGatewayRouteAction from './model/HttpGatewayRouteAction';
import HttpGatewayRouteActionRewrite from './model/HttpGatewayRouteActionRewrite';
import HttpGatewayRouteHeader from './model/HttpGatewayRouteHeader';
import HttpGatewayRouteHeaderMatch from './model/HttpGatewayRouteHeaderMatch';
import HttpGatewayRouteMatch from './model/HttpGatewayRouteMatch';
import HttpGatewayRouteMatchHostname from './model/HttpGatewayRouteMatchHostname';
import HttpGatewayRouteMatchPath from './model/HttpGatewayRouteMatchPath';
import HttpGatewayRoutePathRewrite from './model/HttpGatewayRoutePathRewrite';
import HttpGatewayRoutePrefixRewrite from './model/HttpGatewayRoutePrefixRewrite';
import HttpGatewayRouteRewrite from './model/HttpGatewayRouteRewrite';
import HttpGatewayRouteRewriteHostname from './model/HttpGatewayRouteRewriteHostname';
import HttpGatewayRouteRewritePath from './model/HttpGatewayRouteRewritePath';
import HttpGatewayRouteRewritePrefix from './model/HttpGatewayRouteRewritePrefix';
import HttpMethod from './model/HttpMethod';
import HttpPathMatch from './model/HttpPathMatch';
import HttpQueryParameter from './model/HttpQueryParameter';
import HttpQueryParameterMatch from './model/HttpQueryParameterMatch';
import HttpRetryPolicy from './model/HttpRetryPolicy';
import HttpRoute from './model/HttpRoute';
import HttpRouteAction from './model/HttpRouteAction';
import HttpRouteHeader from './model/HttpRouteHeader';
import HttpRouteHeaderMatch from './model/HttpRouteHeaderMatch';
import HttpRouteMatch from './model/HttpRouteMatch';
import HttpRouteMatchPath from './model/HttpRouteMatchPath';
import HttpRouteRetryPolicy from './model/HttpRouteRetryPolicy';
import HttpRouteTimeout from './model/HttpRouteTimeout';
import HttpScheme from './model/HttpScheme';
import HttpTimeout from './model/HttpTimeout';
import IpPreference from './model/IpPreference';
import JsonFormatRef from './model/JsonFormatRef';
import ListGatewayRoutesOutput from './model/ListGatewayRoutesOutput';
import ListMeshesOutput from './model/ListMeshesOutput';
import ListRoutesOutput from './model/ListRoutesOutput';
import ListTagsForResourceOutput from './model/ListTagsForResourceOutput';
import ListVirtualGatewaysOutput from './model/ListVirtualGatewaysOutput';
import ListVirtualNodesOutput from './model/ListVirtualNodesOutput';
import ListVirtualRoutersOutput from './model/ListVirtualRoutersOutput';
import ListVirtualServicesOutput from './model/ListVirtualServicesOutput';
import Listener from './model/Listener';
import ListenerConnectionPool from './model/ListenerConnectionPool';
import ListenerHealthCheck from './model/ListenerHealthCheck';
import ListenerOutlierDetection from './model/ListenerOutlierDetection';
import ListenerPortMapping from './model/ListenerPortMapping';
import ListenerTimeout from './model/ListenerTimeout';
import ListenerTls from './model/ListenerTls';
import ListenerTlsAcmCertificate from './model/ListenerTlsAcmCertificate';
import ListenerTlsCertificate from './model/ListenerTlsCertificate';
import ListenerTlsCertificateAcm from './model/ListenerTlsCertificateAcm';
import ListenerTlsCertificateFile from './model/ListenerTlsCertificateFile';
import ListenerTlsCertificateSds from './model/ListenerTlsCertificateSds';
import ListenerTlsFileCertificate from './model/ListenerTlsFileCertificate';
import ListenerTlsMode from './model/ListenerTlsMode';
import ListenerTlsSdsCertificate from './model/ListenerTlsSdsCertificate';
import ListenerTlsValidation from './model/ListenerTlsValidation';
import ListenerTlsValidationContext from './model/ListenerTlsValidationContext';
import ListenerTlsValidationContextSubjectAlternativeNames from './model/ListenerTlsValidationContextSubjectAlternativeNames';
import ListenerTlsValidationContextTrust from './model/ListenerTlsValidationContextTrust';
import ListenerTlsValidationContextTrustFile from './model/ListenerTlsValidationContextTrustFile';
import ListenerTlsValidationContextTrustSds from './model/ListenerTlsValidationContextTrustSds';
import Logging from './model/Logging';
import LoggingAccessLog from './model/LoggingAccessLog';
import LoggingFormat from './model/LoggingFormat';
import MatchRange from './model/MatchRange';
import MeshData from './model/MeshData';
import MeshDataMetadata from './model/MeshDataMetadata';
import MeshDataSpec from './model/MeshDataSpec';
import MeshDataStatus from './model/MeshDataStatus';
import MeshRef from './model/MeshRef';
import MeshServiceDiscovery from './model/MeshServiceDiscovery';
import MeshSpec from './model/MeshSpec';
import MeshStatus from './model/MeshStatus';
import MeshStatusCode from './model/MeshStatusCode';
import OutlierDetection from './model/OutlierDetection';
import OutlierDetectionBaseEjectionDuration from './model/OutlierDetectionBaseEjectionDuration';
import OutlierDetectionInterval from './model/OutlierDetectionInterval';
import PortMapping from './model/PortMapping';
import PortProtocol from './model/PortProtocol';
import QueryParameterMatch from './model/QueryParameterMatch';
import ResourceMetadata from './model/ResourceMetadata';
import RouteData from './model/RouteData';
import RouteDataMetadata from './model/RouteDataMetadata';
import RouteDataSpec from './model/RouteDataSpec';
import RouteDataStatus from './model/RouteDataStatus';
import RouteRef from './model/RouteRef';
import RouteSpec from './model/RouteSpec';
import RouteStatus from './model/RouteStatus';
import RouteStatusCode from './model/RouteStatusCode';
import ServiceDiscovery from './model/ServiceDiscovery';
import ServiceDiscoveryAwsCloudMap from './model/ServiceDiscoveryAwsCloudMap';
import ServiceDiscoveryDns from './model/ServiceDiscoveryDns';
import SubjectAlternativeNameMatchers from './model/SubjectAlternativeNameMatchers';
import SubjectAlternativeNames from './model/SubjectAlternativeNames';
import SubjectAlternativeNamesMatch from './model/SubjectAlternativeNamesMatch';
import TagRef from './model/TagRef';
import TagResourceInput from './model/TagResourceInput';
import TagResourceRequest from './model/TagResourceRequest';
import TcpRetryPolicyEvent from './model/TcpRetryPolicyEvent';
import TcpRoute from './model/TcpRoute';
import TcpRouteAction from './model/TcpRouteAction';
import TcpRouteMatch from './model/TcpRouteMatch';
import TcpRouteTimeout from './model/TcpRouteTimeout';
import TcpTimeout from './model/TcpTimeout';
import TlsValidationContext from './model/TlsValidationContext';
import TlsValidationContextAcmTrust from './model/TlsValidationContextAcmTrust';
import TlsValidationContextFileTrust from './model/TlsValidationContextFileTrust';
import TlsValidationContextSdsTrust from './model/TlsValidationContextSdsTrust';
import TlsValidationContextSubjectAlternativeNames from './model/TlsValidationContextSubjectAlternativeNames';
import TlsValidationContextTrust from './model/TlsValidationContextTrust';
import TlsValidationContextTrustAcm from './model/TlsValidationContextTrustAcm';
import TlsValidationContextTrustSds from './model/TlsValidationContextTrustSds';
import UntagResourceInput from './model/UntagResourceInput';
import UntagResourceRequest from './model/UntagResourceRequest';
import UpdateGatewayRouteInput from './model/UpdateGatewayRouteInput';
import UpdateGatewayRouteInputSpec from './model/UpdateGatewayRouteInputSpec';
import UpdateGatewayRouteOutput from './model/UpdateGatewayRouteOutput';
import UpdateGatewayRouteOutputGatewayRoute from './model/UpdateGatewayRouteOutputGatewayRoute';
import UpdateGatewayRouteRequest from './model/UpdateGatewayRouteRequest';
import UpdateMeshInput from './model/UpdateMeshInput';
import UpdateMeshOutput from './model/UpdateMeshOutput';
import UpdateMeshRequest from './model/UpdateMeshRequest';
import UpdateRouteInput from './model/UpdateRouteInput';
import UpdateRouteInputSpec from './model/UpdateRouteInputSpec';
import UpdateRouteOutput from './model/UpdateRouteOutput';
import UpdateRouteOutputRoute from './model/UpdateRouteOutputRoute';
import UpdateRouteRequest from './model/UpdateRouteRequest';
import UpdateVirtualGatewayInput from './model/UpdateVirtualGatewayInput';
import UpdateVirtualGatewayInputSpec from './model/UpdateVirtualGatewayInputSpec';
import UpdateVirtualGatewayOutput from './model/UpdateVirtualGatewayOutput';
import UpdateVirtualGatewayOutputVirtualGateway from './model/UpdateVirtualGatewayOutputVirtualGateway';
import UpdateVirtualGatewayRequest from './model/UpdateVirtualGatewayRequest';
import UpdateVirtualNodeInput from './model/UpdateVirtualNodeInput';
import UpdateVirtualNodeInputSpec from './model/UpdateVirtualNodeInputSpec';
import UpdateVirtualNodeOutput from './model/UpdateVirtualNodeOutput';
import UpdateVirtualNodeOutputVirtualNode from './model/UpdateVirtualNodeOutputVirtualNode';
import UpdateVirtualNodeRequest from './model/UpdateVirtualNodeRequest';
import UpdateVirtualRouterInput from './model/UpdateVirtualRouterInput';
import UpdateVirtualRouterInputSpec from './model/UpdateVirtualRouterInputSpec';
import UpdateVirtualRouterOutput from './model/UpdateVirtualRouterOutput';
import UpdateVirtualRouterOutputVirtualRouter from './model/UpdateVirtualRouterOutputVirtualRouter';
import UpdateVirtualRouterRequest from './model/UpdateVirtualRouterRequest';
import UpdateVirtualServiceInput from './model/UpdateVirtualServiceInput';
import UpdateVirtualServiceInputSpec from './model/UpdateVirtualServiceInputSpec';
import UpdateVirtualServiceOutput from './model/UpdateVirtualServiceOutput';
import UpdateVirtualServiceOutputVirtualService from './model/UpdateVirtualServiceOutputVirtualService';
import UpdateVirtualServiceRequest from './model/UpdateVirtualServiceRequest';
import VirtualGatewayAccessLog from './model/VirtualGatewayAccessLog';
import VirtualGatewayAccessLogFile from './model/VirtualGatewayAccessLogFile';
import VirtualGatewayBackendDefaults from './model/VirtualGatewayBackendDefaults';
import VirtualGatewayBackendDefaultsClientPolicy from './model/VirtualGatewayBackendDefaultsClientPolicy';
import VirtualGatewayClientPolicy from './model/VirtualGatewayClientPolicy';
import VirtualGatewayClientPolicyTls from './model/VirtualGatewayClientPolicyTls';
import VirtualGatewayClientPolicyTlsCertificate from './model/VirtualGatewayClientPolicyTlsCertificate';
import VirtualGatewayClientPolicyTlsValidation from './model/VirtualGatewayClientPolicyTlsValidation';
import VirtualGatewayClientTlsCertificate from './model/VirtualGatewayClientTlsCertificate';
import VirtualGatewayClientTlsCertificateFile from './model/VirtualGatewayClientTlsCertificateFile';
import VirtualGatewayClientTlsCertificateSds from './model/VirtualGatewayClientTlsCertificateSds';
import VirtualGatewayConnectionPool from './model/VirtualGatewayConnectionPool';
import VirtualGatewayConnectionPoolGrpc from './model/VirtualGatewayConnectionPoolGrpc';
import VirtualGatewayConnectionPoolHttp from './model/VirtualGatewayConnectionPoolHttp';
import VirtualGatewayConnectionPoolHttp2 from './model/VirtualGatewayConnectionPoolHttp2';
import VirtualGatewayData from './model/VirtualGatewayData';
import VirtualGatewayDataSpec from './model/VirtualGatewayDataSpec';
import VirtualGatewayDataStatus from './model/VirtualGatewayDataStatus';
import VirtualGatewayFileAccessLog from './model/VirtualGatewayFileAccessLog';
import VirtualGatewayFileAccessLogFormat from './model/VirtualGatewayFileAccessLogFormat';
import VirtualGatewayGrpcConnectionPool from './model/VirtualGatewayGrpcConnectionPool';
import VirtualGatewayHealthCheckPolicy from './model/VirtualGatewayHealthCheckPolicy';
import VirtualGatewayHttp2ConnectionPool from './model/VirtualGatewayHttp2ConnectionPool';
import VirtualGatewayHttpConnectionPool from './model/VirtualGatewayHttpConnectionPool';
import VirtualGatewayListener from './model/VirtualGatewayListener';
import VirtualGatewayListenerConnectionPool from './model/VirtualGatewayListenerConnectionPool';
import VirtualGatewayListenerHealthCheck from './model/VirtualGatewayListenerHealthCheck';
import VirtualGatewayListenerPortMapping from './model/VirtualGatewayListenerPortMapping';
import VirtualGatewayListenerTls from './model/VirtualGatewayListenerTls';
import VirtualGatewayListenerTlsAcmCertificate from './model/VirtualGatewayListenerTlsAcmCertificate';
import VirtualGatewayListenerTlsCertificate from './model/VirtualGatewayListenerTlsCertificate';
import VirtualGatewayListenerTlsCertificateAcm from './model/VirtualGatewayListenerTlsCertificateAcm';
import VirtualGatewayListenerTlsCertificateFile from './model/VirtualGatewayListenerTlsCertificateFile';
import VirtualGatewayListenerTlsCertificateSds from './model/VirtualGatewayListenerTlsCertificateSds';
import VirtualGatewayListenerTlsFileCertificate from './model/VirtualGatewayListenerTlsFileCertificate';
import VirtualGatewayListenerTlsMode from './model/VirtualGatewayListenerTlsMode';
import VirtualGatewayListenerTlsSdsCertificate from './model/VirtualGatewayListenerTlsSdsCertificate';
import VirtualGatewayListenerTlsValidation from './model/VirtualGatewayListenerTlsValidation';
import VirtualGatewayListenerTlsValidationContext from './model/VirtualGatewayListenerTlsValidationContext';
import VirtualGatewayListenerTlsValidationContextSubjectAlternativeNames from './model/VirtualGatewayListenerTlsValidationContextSubjectAlternativeNames';
import VirtualGatewayListenerTlsValidationContextTrust from './model/VirtualGatewayListenerTlsValidationContextTrust';
import VirtualGatewayListenerTlsValidationContextTrustFile from './model/VirtualGatewayListenerTlsValidationContextTrustFile';
import VirtualGatewayListenerTlsValidationContextTrustSds from './model/VirtualGatewayListenerTlsValidationContextTrustSds';
import VirtualGatewayLogging from './model/VirtualGatewayLogging';
import VirtualGatewayLoggingAccessLog from './model/VirtualGatewayLoggingAccessLog';
import VirtualGatewayPortMapping from './model/VirtualGatewayPortMapping';
import VirtualGatewayPortProtocol from './model/VirtualGatewayPortProtocol';
import VirtualGatewayRef from './model/VirtualGatewayRef';
import VirtualGatewaySpec from './model/VirtualGatewaySpec';
import VirtualGatewayStatus from './model/VirtualGatewayStatus';
import VirtualGatewayStatusCode from './model/VirtualGatewayStatusCode';
import VirtualGatewayTlsValidationContext from './model/VirtualGatewayTlsValidationContext';
import VirtualGatewayTlsValidationContextAcmTrust from './model/VirtualGatewayTlsValidationContextAcmTrust';
import VirtualGatewayTlsValidationContextFileTrust from './model/VirtualGatewayTlsValidationContextFileTrust';
import VirtualGatewayTlsValidationContextSdsTrust from './model/VirtualGatewayTlsValidationContextSdsTrust';
import VirtualGatewayTlsValidationContextSubjectAlternativeNames from './model/VirtualGatewayTlsValidationContextSubjectAlternativeNames';
import VirtualGatewayTlsValidationContextTrust from './model/VirtualGatewayTlsValidationContextTrust';
import VirtualGatewayTlsValidationContextTrustAcm from './model/VirtualGatewayTlsValidationContextTrustAcm';
import VirtualGatewayTlsValidationContextTrustSds from './model/VirtualGatewayTlsValidationContextTrustSds';
import VirtualNodeConnectionPool from './model/VirtualNodeConnectionPool';
import VirtualNodeConnectionPoolGrpc from './model/VirtualNodeConnectionPoolGrpc';
import VirtualNodeConnectionPoolHttp from './model/VirtualNodeConnectionPoolHttp';
import VirtualNodeConnectionPoolHttp2 from './model/VirtualNodeConnectionPoolHttp2';
import VirtualNodeConnectionPoolTcp from './model/VirtualNodeConnectionPoolTcp';
import VirtualNodeData from './model/VirtualNodeData';
import VirtualNodeDataMetadata from './model/VirtualNodeDataMetadata';
import VirtualNodeDataSpec from './model/VirtualNodeDataSpec';
import VirtualNodeDataStatus from './model/VirtualNodeDataStatus';
import VirtualNodeGrpcConnectionPool from './model/VirtualNodeGrpcConnectionPool';
import VirtualNodeHttp2ConnectionPool from './model/VirtualNodeHttp2ConnectionPool';
import VirtualNodeHttpConnectionPool from './model/VirtualNodeHttpConnectionPool';
import VirtualNodeRef from './model/VirtualNodeRef';
import VirtualNodeServiceProvider from './model/VirtualNodeServiceProvider';
import VirtualNodeSpec from './model/VirtualNodeSpec';
import VirtualNodeStatus from './model/VirtualNodeStatus';
import VirtualNodeStatusCode from './model/VirtualNodeStatusCode';
import VirtualNodeTcpConnectionPool from './model/VirtualNodeTcpConnectionPool';
import VirtualRouterData from './model/VirtualRouterData';
import VirtualRouterDataMetadata from './model/VirtualRouterDataMetadata';
import VirtualRouterDataSpec from './model/VirtualRouterDataSpec';
import VirtualRouterDataStatus from './model/VirtualRouterDataStatus';
import VirtualRouterListener from './model/VirtualRouterListener';
import VirtualRouterRef from './model/VirtualRouterRef';
import VirtualRouterServiceProvider from './model/VirtualRouterServiceProvider';
import VirtualRouterSpec from './model/VirtualRouterSpec';
import VirtualRouterStatus from './model/VirtualRouterStatus';
import VirtualRouterStatusCode from './model/VirtualRouterStatusCode';
import VirtualServiceBackend from './model/VirtualServiceBackend';
import VirtualServiceBackendClientPolicy from './model/VirtualServiceBackendClientPolicy';
import VirtualServiceData from './model/VirtualServiceData';
import VirtualServiceDataSpec from './model/VirtualServiceDataSpec';
import VirtualServiceDataStatus from './model/VirtualServiceDataStatus';
import VirtualServiceProvider from './model/VirtualServiceProvider';
import VirtualServiceProviderVirtualNode from './model/VirtualServiceProviderVirtualNode';
import VirtualServiceProviderVirtualRouter from './model/VirtualServiceProviderVirtualRouter';
import VirtualServiceRef from './model/VirtualServiceRef';
import VirtualServiceSpec from './model/VirtualServiceSpec';
import VirtualServiceStatus from './model/VirtualServiceStatus';
import VirtualServiceStatusCode from './model/VirtualServiceStatusCode';
import WeightedTarget from './model/WeightedTarget';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.&lt;/p&gt; &lt;p&gt;App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.&lt;/p&gt; &lt;note&gt; &lt;p&gt;App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\&quot;&gt;Service Discovery&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Service Developer Guide&lt;/i&gt;. Kubernetes &lt;code&gt;kube-dns&lt;/code&gt; and &lt;code&gt;coredns&lt;/code&gt; are supported. For more information, see &lt;a href&#x3D;\&quot;https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\&quot;&gt;DNS for Services and Pods&lt;/a&gt; in the Kubernetes documentation.&lt;/p&gt; &lt;/note&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsAppMesh = require('index'); // See note below*.
* var xxxSvc = new AwsAppMesh.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsAppMesh.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsAppMesh.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsAppMesh.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-01-25
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessLog model constructor.
     * @property {module:model/AccessLog}
     */
    AccessLog,

    /**
     * The AccessLogFile model constructor.
     * @property {module:model/AccessLogFile}
     */
    AccessLogFile,

    /**
     * The AwsCloudMapInstanceAttribute model constructor.
     * @property {module:model/AwsCloudMapInstanceAttribute}
     */
    AwsCloudMapInstanceAttribute,

    /**
     * The AwsCloudMapServiceDiscovery model constructor.
     * @property {module:model/AwsCloudMapServiceDiscovery}
     */
    AwsCloudMapServiceDiscovery,

    /**
     * The Backend model constructor.
     * @property {module:model/Backend}
     */
    Backend,

    /**
     * The BackendDefaults model constructor.
     * @property {module:model/BackendDefaults}
     */
    BackendDefaults,

    /**
     * The BackendDefaultsClientPolicy model constructor.
     * @property {module:model/BackendDefaultsClientPolicy}
     */
    BackendDefaultsClientPolicy,

    /**
     * The BackendVirtualService model constructor.
     * @property {module:model/BackendVirtualService}
     */
    BackendVirtualService,

    /**
     * The ClientPolicy model constructor.
     * @property {module:model/ClientPolicy}
     */
    ClientPolicy,

    /**
     * The ClientPolicyTls model constructor.
     * @property {module:model/ClientPolicyTls}
     */
    ClientPolicyTls,

    /**
     * The ClientPolicyTlsCertificate model constructor.
     * @property {module:model/ClientPolicyTlsCertificate}
     */
    ClientPolicyTlsCertificate,

    /**
     * The ClientPolicyTlsValidation model constructor.
     * @property {module:model/ClientPolicyTlsValidation}
     */
    ClientPolicyTlsValidation,

    /**
     * The ClientTlsCertificate model constructor.
     * @property {module:model/ClientTlsCertificate}
     */
    ClientTlsCertificate,

    /**
     * The ClientTlsCertificateFile model constructor.
     * @property {module:model/ClientTlsCertificateFile}
     */
    ClientTlsCertificateFile,

    /**
     * The ClientTlsCertificateSds model constructor.
     * @property {module:model/ClientTlsCertificateSds}
     */
    ClientTlsCertificateSds,

    /**
     * The CreateGatewayRouteInput model constructor.
     * @property {module:model/CreateGatewayRouteInput}
     */
    CreateGatewayRouteInput,

    /**
     * The CreateGatewayRouteInputSpec model constructor.
     * @property {module:model/CreateGatewayRouteInputSpec}
     */
    CreateGatewayRouteInputSpec,

    /**
     * The CreateGatewayRouteOutput model constructor.
     * @property {module:model/CreateGatewayRouteOutput}
     */
    CreateGatewayRouteOutput,

    /**
     * The CreateGatewayRouteOutputGatewayRoute model constructor.
     * @property {module:model/CreateGatewayRouteOutputGatewayRoute}
     */
    CreateGatewayRouteOutputGatewayRoute,

    /**
     * The CreateGatewayRouteRequest model constructor.
     * @property {module:model/CreateGatewayRouteRequest}
     */
    CreateGatewayRouteRequest,

    /**
     * The CreateGatewayRouteRequestSpec model constructor.
     * @property {module:model/CreateGatewayRouteRequestSpec}
     */
    CreateGatewayRouteRequestSpec,

    /**
     * The CreateGatewayRouteRequestSpecGrpcRoute model constructor.
     * @property {module:model/CreateGatewayRouteRequestSpecGrpcRoute}
     */
    CreateGatewayRouteRequestSpecGrpcRoute,

    /**
     * The CreateGatewayRouteRequestSpecHttp2Route model constructor.
     * @property {module:model/CreateGatewayRouteRequestSpecHttp2Route}
     */
    CreateGatewayRouteRequestSpecHttp2Route,

    /**
     * The CreateGatewayRouteRequestSpecHttpRoute model constructor.
     * @property {module:model/CreateGatewayRouteRequestSpecHttpRoute}
     */
    CreateGatewayRouteRequestSpecHttpRoute,

    /**
     * The CreateMeshInput model constructor.
     * @property {module:model/CreateMeshInput}
     */
    CreateMeshInput,

    /**
     * The CreateMeshInputSpec model constructor.
     * @property {module:model/CreateMeshInputSpec}
     */
    CreateMeshInputSpec,

    /**
     * The CreateMeshOutput model constructor.
     * @property {module:model/CreateMeshOutput}
     */
    CreateMeshOutput,

    /**
     * The CreateMeshOutputMesh model constructor.
     * @property {module:model/CreateMeshOutputMesh}
     */
    CreateMeshOutputMesh,

    /**
     * The CreateMeshRequest model constructor.
     * @property {module:model/CreateMeshRequest}
     */
    CreateMeshRequest,

    /**
     * The CreateMeshRequestSpec model constructor.
     * @property {module:model/CreateMeshRequestSpec}
     */
    CreateMeshRequestSpec,

    /**
     * The CreateMeshRequestSpecEgressFilter model constructor.
     * @property {module:model/CreateMeshRequestSpecEgressFilter}
     */
    CreateMeshRequestSpecEgressFilter,

    /**
     * The CreateRouteInput model constructor.
     * @property {module:model/CreateRouteInput}
     */
    CreateRouteInput,

    /**
     * The CreateRouteInputSpec model constructor.
     * @property {module:model/CreateRouteInputSpec}
     */
    CreateRouteInputSpec,

    /**
     * The CreateRouteOutput model constructor.
     * @property {module:model/CreateRouteOutput}
     */
    CreateRouteOutput,

    /**
     * The CreateRouteOutputRoute model constructor.
     * @property {module:model/CreateRouteOutputRoute}
     */
    CreateRouteOutputRoute,

    /**
     * The CreateRouteRequest model constructor.
     * @property {module:model/CreateRouteRequest}
     */
    CreateRouteRequest,

    /**
     * The CreateRouteRequestSpec model constructor.
     * @property {module:model/CreateRouteRequestSpec}
     */
    CreateRouteRequestSpec,

    /**
     * The CreateRouteRequestSpecGrpcRoute model constructor.
     * @property {module:model/CreateRouteRequestSpecGrpcRoute}
     */
    CreateRouteRequestSpecGrpcRoute,

    /**
     * The CreateRouteRequestSpecHttp2Route model constructor.
     * @property {module:model/CreateRouteRequestSpecHttp2Route}
     */
    CreateRouteRequestSpecHttp2Route,

    /**
     * The CreateRouteRequestSpecHttpRoute model constructor.
     * @property {module:model/CreateRouteRequestSpecHttpRoute}
     */
    CreateRouteRequestSpecHttpRoute,

    /**
     * The CreateRouteRequestSpecTcpRoute model constructor.
     * @property {module:model/CreateRouteRequestSpecTcpRoute}
     */
    CreateRouteRequestSpecTcpRoute,

    /**
     * The CreateVirtualGatewayInput model constructor.
     * @property {module:model/CreateVirtualGatewayInput}
     */
    CreateVirtualGatewayInput,

    /**
     * The CreateVirtualGatewayInputSpec model constructor.
     * @property {module:model/CreateVirtualGatewayInputSpec}
     */
    CreateVirtualGatewayInputSpec,

    /**
     * The CreateVirtualGatewayOutput model constructor.
     * @property {module:model/CreateVirtualGatewayOutput}
     */
    CreateVirtualGatewayOutput,

    /**
     * The CreateVirtualGatewayOutputVirtualGateway model constructor.
     * @property {module:model/CreateVirtualGatewayOutputVirtualGateway}
     */
    CreateVirtualGatewayOutputVirtualGateway,

    /**
     * The CreateVirtualGatewayRequest model constructor.
     * @property {module:model/CreateVirtualGatewayRequest}
     */
    CreateVirtualGatewayRequest,

    /**
     * The CreateVirtualGatewayRequestSpec model constructor.
     * @property {module:model/CreateVirtualGatewayRequestSpec}
     */
    CreateVirtualGatewayRequestSpec,

    /**
     * The CreateVirtualGatewayRequestSpecBackendDefaults model constructor.
     * @property {module:model/CreateVirtualGatewayRequestSpecBackendDefaults}
     */
    CreateVirtualGatewayRequestSpecBackendDefaults,

    /**
     * The CreateVirtualNodeInput model constructor.
     * @property {module:model/CreateVirtualNodeInput}
     */
    CreateVirtualNodeInput,

    /**
     * The CreateVirtualNodeInputSpec model constructor.
     * @property {module:model/CreateVirtualNodeInputSpec}
     */
    CreateVirtualNodeInputSpec,

    /**
     * The CreateVirtualNodeOutput model constructor.
     * @property {module:model/CreateVirtualNodeOutput}
     */
    CreateVirtualNodeOutput,

    /**
     * The CreateVirtualNodeOutputVirtualNode model constructor.
     * @property {module:model/CreateVirtualNodeOutputVirtualNode}
     */
    CreateVirtualNodeOutputVirtualNode,

    /**
     * The CreateVirtualNodeRequest model constructor.
     * @property {module:model/CreateVirtualNodeRequest}
     */
    CreateVirtualNodeRequest,

    /**
     * The CreateVirtualNodeRequestSpec model constructor.
     * @property {module:model/CreateVirtualNodeRequestSpec}
     */
    CreateVirtualNodeRequestSpec,

    /**
     * The CreateVirtualNodeRequestSpecBackendDefaults model constructor.
     * @property {module:model/CreateVirtualNodeRequestSpecBackendDefaults}
     */
    CreateVirtualNodeRequestSpecBackendDefaults,

    /**
     * The CreateVirtualNodeRequestSpecLogging model constructor.
     * @property {module:model/CreateVirtualNodeRequestSpecLogging}
     */
    CreateVirtualNodeRequestSpecLogging,

    /**
     * The CreateVirtualNodeRequestSpecServiceDiscovery model constructor.
     * @property {module:model/CreateVirtualNodeRequestSpecServiceDiscovery}
     */
    CreateVirtualNodeRequestSpecServiceDiscovery,

    /**
     * The CreateVirtualRouterInput model constructor.
     * @property {module:model/CreateVirtualRouterInput}
     */
    CreateVirtualRouterInput,

    /**
     * The CreateVirtualRouterInputSpec model constructor.
     * @property {module:model/CreateVirtualRouterInputSpec}
     */
    CreateVirtualRouterInputSpec,

    /**
     * The CreateVirtualRouterOutput model constructor.
     * @property {module:model/CreateVirtualRouterOutput}
     */
    CreateVirtualRouterOutput,

    /**
     * The CreateVirtualRouterOutputVirtualRouter model constructor.
     * @property {module:model/CreateVirtualRouterOutputVirtualRouter}
     */
    CreateVirtualRouterOutputVirtualRouter,

    /**
     * The CreateVirtualRouterRequest model constructor.
     * @property {module:model/CreateVirtualRouterRequest}
     */
    CreateVirtualRouterRequest,

    /**
     * The CreateVirtualRouterRequestSpec model constructor.
     * @property {module:model/CreateVirtualRouterRequestSpec}
     */
    CreateVirtualRouterRequestSpec,

    /**
     * The CreateVirtualServiceInput model constructor.
     * @property {module:model/CreateVirtualServiceInput}
     */
    CreateVirtualServiceInput,

    /**
     * The CreateVirtualServiceInputSpec model constructor.
     * @property {module:model/CreateVirtualServiceInputSpec}
     */
    CreateVirtualServiceInputSpec,

    /**
     * The CreateVirtualServiceOutput model constructor.
     * @property {module:model/CreateVirtualServiceOutput}
     */
    CreateVirtualServiceOutput,

    /**
     * The CreateVirtualServiceOutputVirtualService model constructor.
     * @property {module:model/CreateVirtualServiceOutputVirtualService}
     */
    CreateVirtualServiceOutputVirtualService,

    /**
     * The CreateVirtualServiceRequest model constructor.
     * @property {module:model/CreateVirtualServiceRequest}
     */
    CreateVirtualServiceRequest,

    /**
     * The CreateVirtualServiceRequestSpec model constructor.
     * @property {module:model/CreateVirtualServiceRequestSpec}
     */
    CreateVirtualServiceRequestSpec,

    /**
     * The CreateVirtualServiceRequestSpecProvider model constructor.
     * @property {module:model/CreateVirtualServiceRequestSpecProvider}
     */
    CreateVirtualServiceRequestSpecProvider,

    /**
     * The DefaultGatewayRouteRewrite model constructor.
     * @property {module:model/DefaultGatewayRouteRewrite}
     */
    DefaultGatewayRouteRewrite,

    /**
     * The DeleteGatewayRouteOutput model constructor.
     * @property {module:model/DeleteGatewayRouteOutput}
     */
    DeleteGatewayRouteOutput,

    /**
     * The DeleteGatewayRouteOutputGatewayRoute model constructor.
     * @property {module:model/DeleteGatewayRouteOutputGatewayRoute}
     */
    DeleteGatewayRouteOutputGatewayRoute,

    /**
     * The DeleteMeshOutput model constructor.
     * @property {module:model/DeleteMeshOutput}
     */
    DeleteMeshOutput,

    /**
     * The DeleteMeshOutputMesh model constructor.
     * @property {module:model/DeleteMeshOutputMesh}
     */
    DeleteMeshOutputMesh,

    /**
     * The DeleteRouteOutput model constructor.
     * @property {module:model/DeleteRouteOutput}
     */
    DeleteRouteOutput,

    /**
     * The DeleteRouteOutputRoute model constructor.
     * @property {module:model/DeleteRouteOutputRoute}
     */
    DeleteRouteOutputRoute,

    /**
     * The DeleteVirtualGatewayOutput model constructor.
     * @property {module:model/DeleteVirtualGatewayOutput}
     */
    DeleteVirtualGatewayOutput,

    /**
     * The DeleteVirtualGatewayOutputVirtualGateway model constructor.
     * @property {module:model/DeleteVirtualGatewayOutputVirtualGateway}
     */
    DeleteVirtualGatewayOutputVirtualGateway,

    /**
     * The DeleteVirtualNodeOutput model constructor.
     * @property {module:model/DeleteVirtualNodeOutput}
     */
    DeleteVirtualNodeOutput,

    /**
     * The DeleteVirtualNodeOutputVirtualNode model constructor.
     * @property {module:model/DeleteVirtualNodeOutputVirtualNode}
     */
    DeleteVirtualNodeOutputVirtualNode,

    /**
     * The DeleteVirtualRouterOutput model constructor.
     * @property {module:model/DeleteVirtualRouterOutput}
     */
    DeleteVirtualRouterOutput,

    /**
     * The DeleteVirtualRouterOutputVirtualRouter model constructor.
     * @property {module:model/DeleteVirtualRouterOutputVirtualRouter}
     */
    DeleteVirtualRouterOutputVirtualRouter,

    /**
     * The DeleteVirtualServiceOutput model constructor.
     * @property {module:model/DeleteVirtualServiceOutput}
     */
    DeleteVirtualServiceOutput,

    /**
     * The DeleteVirtualServiceOutputVirtualService model constructor.
     * @property {module:model/DeleteVirtualServiceOutputVirtualService}
     */
    DeleteVirtualServiceOutputVirtualService,

    /**
     * The DescribeGatewayRouteOutput model constructor.
     * @property {module:model/DescribeGatewayRouteOutput}
     */
    DescribeGatewayRouteOutput,

    /**
     * The DescribeGatewayRouteOutputGatewayRoute model constructor.
     * @property {module:model/DescribeGatewayRouteOutputGatewayRoute}
     */
    DescribeGatewayRouteOutputGatewayRoute,

    /**
     * The DescribeMeshOutput model constructor.
     * @property {module:model/DescribeMeshOutput}
     */
    DescribeMeshOutput,

    /**
     * The DescribeMeshOutputMesh model constructor.
     * @property {module:model/DescribeMeshOutputMesh}
     */
    DescribeMeshOutputMesh,

    /**
     * The DescribeRouteOutput model constructor.
     * @property {module:model/DescribeRouteOutput}
     */
    DescribeRouteOutput,

    /**
     * The DescribeRouteOutputRoute model constructor.
     * @property {module:model/DescribeRouteOutputRoute}
     */
    DescribeRouteOutputRoute,

    /**
     * The DescribeVirtualGatewayOutput model constructor.
     * @property {module:model/DescribeVirtualGatewayOutput}
     */
    DescribeVirtualGatewayOutput,

    /**
     * The DescribeVirtualGatewayOutputVirtualGateway model constructor.
     * @property {module:model/DescribeVirtualGatewayOutputVirtualGateway}
     */
    DescribeVirtualGatewayOutputVirtualGateway,

    /**
     * The DescribeVirtualNodeOutput model constructor.
     * @property {module:model/DescribeVirtualNodeOutput}
     */
    DescribeVirtualNodeOutput,

    /**
     * The DescribeVirtualNodeOutputVirtualNode model constructor.
     * @property {module:model/DescribeVirtualNodeOutputVirtualNode}
     */
    DescribeVirtualNodeOutputVirtualNode,

    /**
     * The DescribeVirtualRouterOutput model constructor.
     * @property {module:model/DescribeVirtualRouterOutput}
     */
    DescribeVirtualRouterOutput,

    /**
     * The DescribeVirtualRouterOutputVirtualRouter model constructor.
     * @property {module:model/DescribeVirtualRouterOutputVirtualRouter}
     */
    DescribeVirtualRouterOutputVirtualRouter,

    /**
     * The DescribeVirtualServiceOutput model constructor.
     * @property {module:model/DescribeVirtualServiceOutput}
     */
    DescribeVirtualServiceOutput,

    /**
     * The DescribeVirtualServiceOutputVirtualService model constructor.
     * @property {module:model/DescribeVirtualServiceOutputVirtualService}
     */
    DescribeVirtualServiceOutputVirtualService,

    /**
     * The DnsResponseType model constructor.
     * @property {module:model/DnsResponseType}
     */
    DnsResponseType,

    /**
     * The DnsServiceDiscovery model constructor.
     * @property {module:model/DnsServiceDiscovery}
     */
    DnsServiceDiscovery,

    /**
     * The Duration model constructor.
     * @property {module:model/Duration}
     */
    Duration,

    /**
     * The DurationUnit model constructor.
     * @property {module:model/DurationUnit}
     */
    DurationUnit,

    /**
     * The EgressFilter model constructor.
     * @property {module:model/EgressFilter}
     */
    EgressFilter,

    /**
     * The EgressFilterType model constructor.
     * @property {module:model/EgressFilterType}
     */
    EgressFilterType,

    /**
     * The FileAccessLog model constructor.
     * @property {module:model/FileAccessLog}
     */
    FileAccessLog,

    /**
     * The FileAccessLogFormat model constructor.
     * @property {module:model/FileAccessLogFormat}
     */
    FileAccessLogFormat,

    /**
     * The GatewayRouteData model constructor.
     * @property {module:model/GatewayRouteData}
     */
    GatewayRouteData,

    /**
     * The GatewayRouteDataSpec model constructor.
     * @property {module:model/GatewayRouteDataSpec}
     */
    GatewayRouteDataSpec,

    /**
     * The GatewayRouteDataStatus model constructor.
     * @property {module:model/GatewayRouteDataStatus}
     */
    GatewayRouteDataStatus,

    /**
     * The GatewayRouteHostnameMatch model constructor.
     * @property {module:model/GatewayRouteHostnameMatch}
     */
    GatewayRouteHostnameMatch,

    /**
     * The GatewayRouteHostnameRewrite model constructor.
     * @property {module:model/GatewayRouteHostnameRewrite}
     */
    GatewayRouteHostnameRewrite,

    /**
     * The GatewayRouteRef model constructor.
     * @property {module:model/GatewayRouteRef}
     */
    GatewayRouteRef,

    /**
     * The GatewayRouteSpec model constructor.
     * @property {module:model/GatewayRouteSpec}
     */
    GatewayRouteSpec,

    /**
     * The GatewayRouteStatus model constructor.
     * @property {module:model/GatewayRouteStatus}
     */
    GatewayRouteStatus,

    /**
     * The GatewayRouteStatusCode model constructor.
     * @property {module:model/GatewayRouteStatusCode}
     */
    GatewayRouteStatusCode,

    /**
     * The GatewayRouteTarget model constructor.
     * @property {module:model/GatewayRouteTarget}
     */
    GatewayRouteTarget,

    /**
     * The GatewayRouteTargetVirtualService model constructor.
     * @property {module:model/GatewayRouteTargetVirtualService}
     */
    GatewayRouteTargetVirtualService,

    /**
     * The GatewayRouteVirtualService model constructor.
     * @property {module:model/GatewayRouteVirtualService}
     */
    GatewayRouteVirtualService,

    /**
     * The GrpcGatewayRoute model constructor.
     * @property {module:model/GrpcGatewayRoute}
     */
    GrpcGatewayRoute,

    /**
     * The GrpcGatewayRouteAction model constructor.
     * @property {module:model/GrpcGatewayRouteAction}
     */
    GrpcGatewayRouteAction,

    /**
     * The GrpcGatewayRouteActionRewrite model constructor.
     * @property {module:model/GrpcGatewayRouteActionRewrite}
     */
    GrpcGatewayRouteActionRewrite,

    /**
     * The GrpcGatewayRouteActionTarget model constructor.
     * @property {module:model/GrpcGatewayRouteActionTarget}
     */
    GrpcGatewayRouteActionTarget,

    /**
     * The GrpcGatewayRouteMatch model constructor.
     * @property {module:model/GrpcGatewayRouteMatch}
     */
    GrpcGatewayRouteMatch,

    /**
     * The GrpcGatewayRouteMatchHostname model constructor.
     * @property {module:model/GrpcGatewayRouteMatchHostname}
     */
    GrpcGatewayRouteMatchHostname,

    /**
     * The GrpcGatewayRouteMetadata model constructor.
     * @property {module:model/GrpcGatewayRouteMetadata}
     */
    GrpcGatewayRouteMetadata,

    /**
     * The GrpcGatewayRouteMetadataMatch model constructor.
     * @property {module:model/GrpcGatewayRouteMetadataMatch}
     */
    GrpcGatewayRouteMetadataMatch,

    /**
     * The GrpcGatewayRouteRewrite model constructor.
     * @property {module:model/GrpcGatewayRouteRewrite}
     */
    GrpcGatewayRouteRewrite,

    /**
     * The GrpcGatewayRouteRewriteHostname model constructor.
     * @property {module:model/GrpcGatewayRouteRewriteHostname}
     */
    GrpcGatewayRouteRewriteHostname,

    /**
     * The GrpcMetadataMatchMethod model constructor.
     * @property {module:model/GrpcMetadataMatchMethod}
     */
    GrpcMetadataMatchMethod,

    /**
     * The GrpcRetryPolicy model constructor.
     * @property {module:model/GrpcRetryPolicy}
     */
    GrpcRetryPolicy,

    /**
     * The GrpcRetryPolicyEvent model constructor.
     * @property {module:model/GrpcRetryPolicyEvent}
     */
    GrpcRetryPolicyEvent,

    /**
     * The GrpcRetryPolicyPerRetryTimeout model constructor.
     * @property {module:model/GrpcRetryPolicyPerRetryTimeout}
     */
    GrpcRetryPolicyPerRetryTimeout,

    /**
     * The GrpcRoute model constructor.
     * @property {module:model/GrpcRoute}
     */
    GrpcRoute,

    /**
     * The GrpcRouteAction model constructor.
     * @property {module:model/GrpcRouteAction}
     */
    GrpcRouteAction,

    /**
     * The GrpcRouteMatch model constructor.
     * @property {module:model/GrpcRouteMatch}
     */
    GrpcRouteMatch,

    /**
     * The GrpcRouteMetadata model constructor.
     * @property {module:model/GrpcRouteMetadata}
     */
    GrpcRouteMetadata,

    /**
     * The GrpcRouteMetadataMatch model constructor.
     * @property {module:model/GrpcRouteMetadataMatch}
     */
    GrpcRouteMetadataMatch,

    /**
     * The GrpcRouteMetadataMatchMethod model constructor.
     * @property {module:model/GrpcRouteMetadataMatchMethod}
     */
    GrpcRouteMetadataMatchMethod,

    /**
     * The GrpcRouteMetadataMatchMethodRange model constructor.
     * @property {module:model/GrpcRouteMetadataMatchMethodRange}
     */
    GrpcRouteMetadataMatchMethodRange,

    /**
     * The GrpcRouteRetryPolicy model constructor.
     * @property {module:model/GrpcRouteRetryPolicy}
     */
    GrpcRouteRetryPolicy,

    /**
     * The GrpcRouteTimeout model constructor.
     * @property {module:model/GrpcRouteTimeout}
     */
    GrpcRouteTimeout,

    /**
     * The GrpcTimeout model constructor.
     * @property {module:model/GrpcTimeout}
     */
    GrpcTimeout,

    /**
     * The GrpcTimeoutIdle model constructor.
     * @property {module:model/GrpcTimeoutIdle}
     */
    GrpcTimeoutIdle,

    /**
     * The GrpcTimeoutPerRequest model constructor.
     * @property {module:model/GrpcTimeoutPerRequest}
     */
    GrpcTimeoutPerRequest,

    /**
     * The HeaderMatchMethod model constructor.
     * @property {module:model/HeaderMatchMethod}
     */
    HeaderMatchMethod,

    /**
     * The HealthCheckPolicy model constructor.
     * @property {module:model/HealthCheckPolicy}
     */
    HealthCheckPolicy,

    /**
     * The HttpGatewayRoute model constructor.
     * @property {module:model/HttpGatewayRoute}
     */
    HttpGatewayRoute,

    /**
     * The HttpGatewayRouteAction model constructor.
     * @property {module:model/HttpGatewayRouteAction}
     */
    HttpGatewayRouteAction,

    /**
     * The HttpGatewayRouteActionRewrite model constructor.
     * @property {module:model/HttpGatewayRouteActionRewrite}
     */
    HttpGatewayRouteActionRewrite,

    /**
     * The HttpGatewayRouteHeader model constructor.
     * @property {module:model/HttpGatewayRouteHeader}
     */
    HttpGatewayRouteHeader,

    /**
     * The HttpGatewayRouteHeaderMatch model constructor.
     * @property {module:model/HttpGatewayRouteHeaderMatch}
     */
    HttpGatewayRouteHeaderMatch,

    /**
     * The HttpGatewayRouteMatch model constructor.
     * @property {module:model/HttpGatewayRouteMatch}
     */
    HttpGatewayRouteMatch,

    /**
     * The HttpGatewayRouteMatchHostname model constructor.
     * @property {module:model/HttpGatewayRouteMatchHostname}
     */
    HttpGatewayRouteMatchHostname,

    /**
     * The HttpGatewayRouteMatchPath model constructor.
     * @property {module:model/HttpGatewayRouteMatchPath}
     */
    HttpGatewayRouteMatchPath,

    /**
     * The HttpGatewayRoutePathRewrite model constructor.
     * @property {module:model/HttpGatewayRoutePathRewrite}
     */
    HttpGatewayRoutePathRewrite,

    /**
     * The HttpGatewayRoutePrefixRewrite model constructor.
     * @property {module:model/HttpGatewayRoutePrefixRewrite}
     */
    HttpGatewayRoutePrefixRewrite,

    /**
     * The HttpGatewayRouteRewrite model constructor.
     * @property {module:model/HttpGatewayRouteRewrite}
     */
    HttpGatewayRouteRewrite,

    /**
     * The HttpGatewayRouteRewriteHostname model constructor.
     * @property {module:model/HttpGatewayRouteRewriteHostname}
     */
    HttpGatewayRouteRewriteHostname,

    /**
     * The HttpGatewayRouteRewritePath model constructor.
     * @property {module:model/HttpGatewayRouteRewritePath}
     */
    HttpGatewayRouteRewritePath,

    /**
     * The HttpGatewayRouteRewritePrefix model constructor.
     * @property {module:model/HttpGatewayRouteRewritePrefix}
     */
    HttpGatewayRouteRewritePrefix,

    /**
     * The HttpMethod model constructor.
     * @property {module:model/HttpMethod}
     */
    HttpMethod,

    /**
     * The HttpPathMatch model constructor.
     * @property {module:model/HttpPathMatch}
     */
    HttpPathMatch,

    /**
     * The HttpQueryParameter model constructor.
     * @property {module:model/HttpQueryParameter}
     */
    HttpQueryParameter,

    /**
     * The HttpQueryParameterMatch model constructor.
     * @property {module:model/HttpQueryParameterMatch}
     */
    HttpQueryParameterMatch,

    /**
     * The HttpRetryPolicy model constructor.
     * @property {module:model/HttpRetryPolicy}
     */
    HttpRetryPolicy,

    /**
     * The HttpRoute model constructor.
     * @property {module:model/HttpRoute}
     */
    HttpRoute,

    /**
     * The HttpRouteAction model constructor.
     * @property {module:model/HttpRouteAction}
     */
    HttpRouteAction,

    /**
     * The HttpRouteHeader model constructor.
     * @property {module:model/HttpRouteHeader}
     */
    HttpRouteHeader,

    /**
     * The HttpRouteHeaderMatch model constructor.
     * @property {module:model/HttpRouteHeaderMatch}
     */
    HttpRouteHeaderMatch,

    /**
     * The HttpRouteMatch model constructor.
     * @property {module:model/HttpRouteMatch}
     */
    HttpRouteMatch,

    /**
     * The HttpRouteMatchPath model constructor.
     * @property {module:model/HttpRouteMatchPath}
     */
    HttpRouteMatchPath,

    /**
     * The HttpRouteRetryPolicy model constructor.
     * @property {module:model/HttpRouteRetryPolicy}
     */
    HttpRouteRetryPolicy,

    /**
     * The HttpRouteTimeout model constructor.
     * @property {module:model/HttpRouteTimeout}
     */
    HttpRouteTimeout,

    /**
     * The HttpScheme model constructor.
     * @property {module:model/HttpScheme}
     */
    HttpScheme,

    /**
     * The HttpTimeout model constructor.
     * @property {module:model/HttpTimeout}
     */
    HttpTimeout,

    /**
     * The IpPreference model constructor.
     * @property {module:model/IpPreference}
     */
    IpPreference,

    /**
     * The JsonFormatRef model constructor.
     * @property {module:model/JsonFormatRef}
     */
    JsonFormatRef,

    /**
     * The ListGatewayRoutesOutput model constructor.
     * @property {module:model/ListGatewayRoutesOutput}
     */
    ListGatewayRoutesOutput,

    /**
     * The ListMeshesOutput model constructor.
     * @property {module:model/ListMeshesOutput}
     */
    ListMeshesOutput,

    /**
     * The ListRoutesOutput model constructor.
     * @property {module:model/ListRoutesOutput}
     */
    ListRoutesOutput,

    /**
     * The ListTagsForResourceOutput model constructor.
     * @property {module:model/ListTagsForResourceOutput}
     */
    ListTagsForResourceOutput,

    /**
     * The ListVirtualGatewaysOutput model constructor.
     * @property {module:model/ListVirtualGatewaysOutput}
     */
    ListVirtualGatewaysOutput,

    /**
     * The ListVirtualNodesOutput model constructor.
     * @property {module:model/ListVirtualNodesOutput}
     */
    ListVirtualNodesOutput,

    /**
     * The ListVirtualRoutersOutput model constructor.
     * @property {module:model/ListVirtualRoutersOutput}
     */
    ListVirtualRoutersOutput,

    /**
     * The ListVirtualServicesOutput model constructor.
     * @property {module:model/ListVirtualServicesOutput}
     */
    ListVirtualServicesOutput,

    /**
     * The Listener model constructor.
     * @property {module:model/Listener}
     */
    Listener,

    /**
     * The ListenerConnectionPool model constructor.
     * @property {module:model/ListenerConnectionPool}
     */
    ListenerConnectionPool,

    /**
     * The ListenerHealthCheck model constructor.
     * @property {module:model/ListenerHealthCheck}
     */
    ListenerHealthCheck,

    /**
     * The ListenerOutlierDetection model constructor.
     * @property {module:model/ListenerOutlierDetection}
     */
    ListenerOutlierDetection,

    /**
     * The ListenerPortMapping model constructor.
     * @property {module:model/ListenerPortMapping}
     */
    ListenerPortMapping,

    /**
     * The ListenerTimeout model constructor.
     * @property {module:model/ListenerTimeout}
     */
    ListenerTimeout,

    /**
     * The ListenerTls model constructor.
     * @property {module:model/ListenerTls}
     */
    ListenerTls,

    /**
     * The ListenerTlsAcmCertificate model constructor.
     * @property {module:model/ListenerTlsAcmCertificate}
     */
    ListenerTlsAcmCertificate,

    /**
     * The ListenerTlsCertificate model constructor.
     * @property {module:model/ListenerTlsCertificate}
     */
    ListenerTlsCertificate,

    /**
     * The ListenerTlsCertificateAcm model constructor.
     * @property {module:model/ListenerTlsCertificateAcm}
     */
    ListenerTlsCertificateAcm,

    /**
     * The ListenerTlsCertificateFile model constructor.
     * @property {module:model/ListenerTlsCertificateFile}
     */
    ListenerTlsCertificateFile,

    /**
     * The ListenerTlsCertificateSds model constructor.
     * @property {module:model/ListenerTlsCertificateSds}
     */
    ListenerTlsCertificateSds,

    /**
     * The ListenerTlsFileCertificate model constructor.
     * @property {module:model/ListenerTlsFileCertificate}
     */
    ListenerTlsFileCertificate,

    /**
     * The ListenerTlsMode model constructor.
     * @property {module:model/ListenerTlsMode}
     */
    ListenerTlsMode,

    /**
     * The ListenerTlsSdsCertificate model constructor.
     * @property {module:model/ListenerTlsSdsCertificate}
     */
    ListenerTlsSdsCertificate,

    /**
     * The ListenerTlsValidation model constructor.
     * @property {module:model/ListenerTlsValidation}
     */
    ListenerTlsValidation,

    /**
     * The ListenerTlsValidationContext model constructor.
     * @property {module:model/ListenerTlsValidationContext}
     */
    ListenerTlsValidationContext,

    /**
     * The ListenerTlsValidationContextSubjectAlternativeNames model constructor.
     * @property {module:model/ListenerTlsValidationContextSubjectAlternativeNames}
     */
    ListenerTlsValidationContextSubjectAlternativeNames,

    /**
     * The ListenerTlsValidationContextTrust model constructor.
     * @property {module:model/ListenerTlsValidationContextTrust}
     */
    ListenerTlsValidationContextTrust,

    /**
     * The ListenerTlsValidationContextTrustFile model constructor.
     * @property {module:model/ListenerTlsValidationContextTrustFile}
     */
    ListenerTlsValidationContextTrustFile,

    /**
     * The ListenerTlsValidationContextTrustSds model constructor.
     * @property {module:model/ListenerTlsValidationContextTrustSds}
     */
    ListenerTlsValidationContextTrustSds,

    /**
     * The Logging model constructor.
     * @property {module:model/Logging}
     */
    Logging,

    /**
     * The LoggingAccessLog model constructor.
     * @property {module:model/LoggingAccessLog}
     */
    LoggingAccessLog,

    /**
     * The LoggingFormat model constructor.
     * @property {module:model/LoggingFormat}
     */
    LoggingFormat,

    /**
     * The MatchRange model constructor.
     * @property {module:model/MatchRange}
     */
    MatchRange,

    /**
     * The MeshData model constructor.
     * @property {module:model/MeshData}
     */
    MeshData,

    /**
     * The MeshDataMetadata model constructor.
     * @property {module:model/MeshDataMetadata}
     */
    MeshDataMetadata,

    /**
     * The MeshDataSpec model constructor.
     * @property {module:model/MeshDataSpec}
     */
    MeshDataSpec,

    /**
     * The MeshDataStatus model constructor.
     * @property {module:model/MeshDataStatus}
     */
    MeshDataStatus,

    /**
     * The MeshRef model constructor.
     * @property {module:model/MeshRef}
     */
    MeshRef,

    /**
     * The MeshServiceDiscovery model constructor.
     * @property {module:model/MeshServiceDiscovery}
     */
    MeshServiceDiscovery,

    /**
     * The MeshSpec model constructor.
     * @property {module:model/MeshSpec}
     */
    MeshSpec,

    /**
     * The MeshStatus model constructor.
     * @property {module:model/MeshStatus}
     */
    MeshStatus,

    /**
     * The MeshStatusCode model constructor.
     * @property {module:model/MeshStatusCode}
     */
    MeshStatusCode,

    /**
     * The OutlierDetection model constructor.
     * @property {module:model/OutlierDetection}
     */
    OutlierDetection,

    /**
     * The OutlierDetectionBaseEjectionDuration model constructor.
     * @property {module:model/OutlierDetectionBaseEjectionDuration}
     */
    OutlierDetectionBaseEjectionDuration,

    /**
     * The OutlierDetectionInterval model constructor.
     * @property {module:model/OutlierDetectionInterval}
     */
    OutlierDetectionInterval,

    /**
     * The PortMapping model constructor.
     * @property {module:model/PortMapping}
     */
    PortMapping,

    /**
     * The PortProtocol model constructor.
     * @property {module:model/PortProtocol}
     */
    PortProtocol,

    /**
     * The QueryParameterMatch model constructor.
     * @property {module:model/QueryParameterMatch}
     */
    QueryParameterMatch,

    /**
     * The ResourceMetadata model constructor.
     * @property {module:model/ResourceMetadata}
     */
    ResourceMetadata,

    /**
     * The RouteData model constructor.
     * @property {module:model/RouteData}
     */
    RouteData,

    /**
     * The RouteDataMetadata model constructor.
     * @property {module:model/RouteDataMetadata}
     */
    RouteDataMetadata,

    /**
     * The RouteDataSpec model constructor.
     * @property {module:model/RouteDataSpec}
     */
    RouteDataSpec,

    /**
     * The RouteDataStatus model constructor.
     * @property {module:model/RouteDataStatus}
     */
    RouteDataStatus,

    /**
     * The RouteRef model constructor.
     * @property {module:model/RouteRef}
     */
    RouteRef,

    /**
     * The RouteSpec model constructor.
     * @property {module:model/RouteSpec}
     */
    RouteSpec,

    /**
     * The RouteStatus model constructor.
     * @property {module:model/RouteStatus}
     */
    RouteStatus,

    /**
     * The RouteStatusCode model constructor.
     * @property {module:model/RouteStatusCode}
     */
    RouteStatusCode,

    /**
     * The ServiceDiscovery model constructor.
     * @property {module:model/ServiceDiscovery}
     */
    ServiceDiscovery,

    /**
     * The ServiceDiscoveryAwsCloudMap model constructor.
     * @property {module:model/ServiceDiscoveryAwsCloudMap}
     */
    ServiceDiscoveryAwsCloudMap,

    /**
     * The ServiceDiscoveryDns model constructor.
     * @property {module:model/ServiceDiscoveryDns}
     */
    ServiceDiscoveryDns,

    /**
     * The SubjectAlternativeNameMatchers model constructor.
     * @property {module:model/SubjectAlternativeNameMatchers}
     */
    SubjectAlternativeNameMatchers,

    /**
     * The SubjectAlternativeNames model constructor.
     * @property {module:model/SubjectAlternativeNames}
     */
    SubjectAlternativeNames,

    /**
     * The SubjectAlternativeNamesMatch model constructor.
     * @property {module:model/SubjectAlternativeNamesMatch}
     */
    SubjectAlternativeNamesMatch,

    /**
     * The TagRef model constructor.
     * @property {module:model/TagRef}
     */
    TagRef,

    /**
     * The TagResourceInput model constructor.
     * @property {module:model/TagResourceInput}
     */
    TagResourceInput,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The TcpRetryPolicyEvent model constructor.
     * @property {module:model/TcpRetryPolicyEvent}
     */
    TcpRetryPolicyEvent,

    /**
     * The TcpRoute model constructor.
     * @property {module:model/TcpRoute}
     */
    TcpRoute,

    /**
     * The TcpRouteAction model constructor.
     * @property {module:model/TcpRouteAction}
     */
    TcpRouteAction,

    /**
     * The TcpRouteMatch model constructor.
     * @property {module:model/TcpRouteMatch}
     */
    TcpRouteMatch,

    /**
     * The TcpRouteTimeout model constructor.
     * @property {module:model/TcpRouteTimeout}
     */
    TcpRouteTimeout,

    /**
     * The TcpTimeout model constructor.
     * @property {module:model/TcpTimeout}
     */
    TcpTimeout,

    /**
     * The TlsValidationContext model constructor.
     * @property {module:model/TlsValidationContext}
     */
    TlsValidationContext,

    /**
     * The TlsValidationContextAcmTrust model constructor.
     * @property {module:model/TlsValidationContextAcmTrust}
     */
    TlsValidationContextAcmTrust,

    /**
     * The TlsValidationContextFileTrust model constructor.
     * @property {module:model/TlsValidationContextFileTrust}
     */
    TlsValidationContextFileTrust,

    /**
     * The TlsValidationContextSdsTrust model constructor.
     * @property {module:model/TlsValidationContextSdsTrust}
     */
    TlsValidationContextSdsTrust,

    /**
     * The TlsValidationContextSubjectAlternativeNames model constructor.
     * @property {module:model/TlsValidationContextSubjectAlternativeNames}
     */
    TlsValidationContextSubjectAlternativeNames,

    /**
     * The TlsValidationContextTrust model constructor.
     * @property {module:model/TlsValidationContextTrust}
     */
    TlsValidationContextTrust,

    /**
     * The TlsValidationContextTrustAcm model constructor.
     * @property {module:model/TlsValidationContextTrustAcm}
     */
    TlsValidationContextTrustAcm,

    /**
     * The TlsValidationContextTrustSds model constructor.
     * @property {module:model/TlsValidationContextTrustSds}
     */
    TlsValidationContextTrustSds,

    /**
     * The UntagResourceInput model constructor.
     * @property {module:model/UntagResourceInput}
     */
    UntagResourceInput,

    /**
     * The UntagResourceRequest model constructor.
     * @property {module:model/UntagResourceRequest}
     */
    UntagResourceRequest,

    /**
     * The UpdateGatewayRouteInput model constructor.
     * @property {module:model/UpdateGatewayRouteInput}
     */
    UpdateGatewayRouteInput,

    /**
     * The UpdateGatewayRouteInputSpec model constructor.
     * @property {module:model/UpdateGatewayRouteInputSpec}
     */
    UpdateGatewayRouteInputSpec,

    /**
     * The UpdateGatewayRouteOutput model constructor.
     * @property {module:model/UpdateGatewayRouteOutput}
     */
    UpdateGatewayRouteOutput,

    /**
     * The UpdateGatewayRouteOutputGatewayRoute model constructor.
     * @property {module:model/UpdateGatewayRouteOutputGatewayRoute}
     */
    UpdateGatewayRouteOutputGatewayRoute,

    /**
     * The UpdateGatewayRouteRequest model constructor.
     * @property {module:model/UpdateGatewayRouteRequest}
     */
    UpdateGatewayRouteRequest,

    /**
     * The UpdateMeshInput model constructor.
     * @property {module:model/UpdateMeshInput}
     */
    UpdateMeshInput,

    /**
     * The UpdateMeshOutput model constructor.
     * @property {module:model/UpdateMeshOutput}
     */
    UpdateMeshOutput,

    /**
     * The UpdateMeshRequest model constructor.
     * @property {module:model/UpdateMeshRequest}
     */
    UpdateMeshRequest,

    /**
     * The UpdateRouteInput model constructor.
     * @property {module:model/UpdateRouteInput}
     */
    UpdateRouteInput,

    /**
     * The UpdateRouteInputSpec model constructor.
     * @property {module:model/UpdateRouteInputSpec}
     */
    UpdateRouteInputSpec,

    /**
     * The UpdateRouteOutput model constructor.
     * @property {module:model/UpdateRouteOutput}
     */
    UpdateRouteOutput,

    /**
     * The UpdateRouteOutputRoute model constructor.
     * @property {module:model/UpdateRouteOutputRoute}
     */
    UpdateRouteOutputRoute,

    /**
     * The UpdateRouteRequest model constructor.
     * @property {module:model/UpdateRouteRequest}
     */
    UpdateRouteRequest,

    /**
     * The UpdateVirtualGatewayInput model constructor.
     * @property {module:model/UpdateVirtualGatewayInput}
     */
    UpdateVirtualGatewayInput,

    /**
     * The UpdateVirtualGatewayInputSpec model constructor.
     * @property {module:model/UpdateVirtualGatewayInputSpec}
     */
    UpdateVirtualGatewayInputSpec,

    /**
     * The UpdateVirtualGatewayOutput model constructor.
     * @property {module:model/UpdateVirtualGatewayOutput}
     */
    UpdateVirtualGatewayOutput,

    /**
     * The UpdateVirtualGatewayOutputVirtualGateway model constructor.
     * @property {module:model/UpdateVirtualGatewayOutputVirtualGateway}
     */
    UpdateVirtualGatewayOutputVirtualGateway,

    /**
     * The UpdateVirtualGatewayRequest model constructor.
     * @property {module:model/UpdateVirtualGatewayRequest}
     */
    UpdateVirtualGatewayRequest,

    /**
     * The UpdateVirtualNodeInput model constructor.
     * @property {module:model/UpdateVirtualNodeInput}
     */
    UpdateVirtualNodeInput,

    /**
     * The UpdateVirtualNodeInputSpec model constructor.
     * @property {module:model/UpdateVirtualNodeInputSpec}
     */
    UpdateVirtualNodeInputSpec,

    /**
     * The UpdateVirtualNodeOutput model constructor.
     * @property {module:model/UpdateVirtualNodeOutput}
     */
    UpdateVirtualNodeOutput,

    /**
     * The UpdateVirtualNodeOutputVirtualNode model constructor.
     * @property {module:model/UpdateVirtualNodeOutputVirtualNode}
     */
    UpdateVirtualNodeOutputVirtualNode,

    /**
     * The UpdateVirtualNodeRequest model constructor.
     * @property {module:model/UpdateVirtualNodeRequest}
     */
    UpdateVirtualNodeRequest,

    /**
     * The UpdateVirtualRouterInput model constructor.
     * @property {module:model/UpdateVirtualRouterInput}
     */
    UpdateVirtualRouterInput,

    /**
     * The UpdateVirtualRouterInputSpec model constructor.
     * @property {module:model/UpdateVirtualRouterInputSpec}
     */
    UpdateVirtualRouterInputSpec,

    /**
     * The UpdateVirtualRouterOutput model constructor.
     * @property {module:model/UpdateVirtualRouterOutput}
     */
    UpdateVirtualRouterOutput,

    /**
     * The UpdateVirtualRouterOutputVirtualRouter model constructor.
     * @property {module:model/UpdateVirtualRouterOutputVirtualRouter}
     */
    UpdateVirtualRouterOutputVirtualRouter,

    /**
     * The UpdateVirtualRouterRequest model constructor.
     * @property {module:model/UpdateVirtualRouterRequest}
     */
    UpdateVirtualRouterRequest,

    /**
     * The UpdateVirtualServiceInput model constructor.
     * @property {module:model/UpdateVirtualServiceInput}
     */
    UpdateVirtualServiceInput,

    /**
     * The UpdateVirtualServiceInputSpec model constructor.
     * @property {module:model/UpdateVirtualServiceInputSpec}
     */
    UpdateVirtualServiceInputSpec,

    /**
     * The UpdateVirtualServiceOutput model constructor.
     * @property {module:model/UpdateVirtualServiceOutput}
     */
    UpdateVirtualServiceOutput,

    /**
     * The UpdateVirtualServiceOutputVirtualService model constructor.
     * @property {module:model/UpdateVirtualServiceOutputVirtualService}
     */
    UpdateVirtualServiceOutputVirtualService,

    /**
     * The UpdateVirtualServiceRequest model constructor.
     * @property {module:model/UpdateVirtualServiceRequest}
     */
    UpdateVirtualServiceRequest,

    /**
     * The VirtualGatewayAccessLog model constructor.
     * @property {module:model/VirtualGatewayAccessLog}
     */
    VirtualGatewayAccessLog,

    /**
     * The VirtualGatewayAccessLogFile model constructor.
     * @property {module:model/VirtualGatewayAccessLogFile}
     */
    VirtualGatewayAccessLogFile,

    /**
     * The VirtualGatewayBackendDefaults model constructor.
     * @property {module:model/VirtualGatewayBackendDefaults}
     */
    VirtualGatewayBackendDefaults,

    /**
     * The VirtualGatewayBackendDefaultsClientPolicy model constructor.
     * @property {module:model/VirtualGatewayBackendDefaultsClientPolicy}
     */
    VirtualGatewayBackendDefaultsClientPolicy,

    /**
     * The VirtualGatewayClientPolicy model constructor.
     * @property {module:model/VirtualGatewayClientPolicy}
     */
    VirtualGatewayClientPolicy,

    /**
     * The VirtualGatewayClientPolicyTls model constructor.
     * @property {module:model/VirtualGatewayClientPolicyTls}
     */
    VirtualGatewayClientPolicyTls,

    /**
     * The VirtualGatewayClientPolicyTlsCertificate model constructor.
     * @property {module:model/VirtualGatewayClientPolicyTlsCertificate}
     */
    VirtualGatewayClientPolicyTlsCertificate,

    /**
     * The VirtualGatewayClientPolicyTlsValidation model constructor.
     * @property {module:model/VirtualGatewayClientPolicyTlsValidation}
     */
    VirtualGatewayClientPolicyTlsValidation,

    /**
     * The VirtualGatewayClientTlsCertificate model constructor.
     * @property {module:model/VirtualGatewayClientTlsCertificate}
     */
    VirtualGatewayClientTlsCertificate,

    /**
     * The VirtualGatewayClientTlsCertificateFile model constructor.
     * @property {module:model/VirtualGatewayClientTlsCertificateFile}
     */
    VirtualGatewayClientTlsCertificateFile,

    /**
     * The VirtualGatewayClientTlsCertificateSds model constructor.
     * @property {module:model/VirtualGatewayClientTlsCertificateSds}
     */
    VirtualGatewayClientTlsCertificateSds,

    /**
     * The VirtualGatewayConnectionPool model constructor.
     * @property {module:model/VirtualGatewayConnectionPool}
     */
    VirtualGatewayConnectionPool,

    /**
     * The VirtualGatewayConnectionPoolGrpc model constructor.
     * @property {module:model/VirtualGatewayConnectionPoolGrpc}
     */
    VirtualGatewayConnectionPoolGrpc,

    /**
     * The VirtualGatewayConnectionPoolHttp model constructor.
     * @property {module:model/VirtualGatewayConnectionPoolHttp}
     */
    VirtualGatewayConnectionPoolHttp,

    /**
     * The VirtualGatewayConnectionPoolHttp2 model constructor.
     * @property {module:model/VirtualGatewayConnectionPoolHttp2}
     */
    VirtualGatewayConnectionPoolHttp2,

    /**
     * The VirtualGatewayData model constructor.
     * @property {module:model/VirtualGatewayData}
     */
    VirtualGatewayData,

    /**
     * The VirtualGatewayDataSpec model constructor.
     * @property {module:model/VirtualGatewayDataSpec}
     */
    VirtualGatewayDataSpec,

    /**
     * The VirtualGatewayDataStatus model constructor.
     * @property {module:model/VirtualGatewayDataStatus}
     */
    VirtualGatewayDataStatus,

    /**
     * The VirtualGatewayFileAccessLog model constructor.
     * @property {module:model/VirtualGatewayFileAccessLog}
     */
    VirtualGatewayFileAccessLog,

    /**
     * The VirtualGatewayFileAccessLogFormat model constructor.
     * @property {module:model/VirtualGatewayFileAccessLogFormat}
     */
    VirtualGatewayFileAccessLogFormat,

    /**
     * The VirtualGatewayGrpcConnectionPool model constructor.
     * @property {module:model/VirtualGatewayGrpcConnectionPool}
     */
    VirtualGatewayGrpcConnectionPool,

    /**
     * The VirtualGatewayHealthCheckPolicy model constructor.
     * @property {module:model/VirtualGatewayHealthCheckPolicy}
     */
    VirtualGatewayHealthCheckPolicy,

    /**
     * The VirtualGatewayHttp2ConnectionPool model constructor.
     * @property {module:model/VirtualGatewayHttp2ConnectionPool}
     */
    VirtualGatewayHttp2ConnectionPool,

    /**
     * The VirtualGatewayHttpConnectionPool model constructor.
     * @property {module:model/VirtualGatewayHttpConnectionPool}
     */
    VirtualGatewayHttpConnectionPool,

    /**
     * The VirtualGatewayListener model constructor.
     * @property {module:model/VirtualGatewayListener}
     */
    VirtualGatewayListener,

    /**
     * The VirtualGatewayListenerConnectionPool model constructor.
     * @property {module:model/VirtualGatewayListenerConnectionPool}
     */
    VirtualGatewayListenerConnectionPool,

    /**
     * The VirtualGatewayListenerHealthCheck model constructor.
     * @property {module:model/VirtualGatewayListenerHealthCheck}
     */
    VirtualGatewayListenerHealthCheck,

    /**
     * The VirtualGatewayListenerPortMapping model constructor.
     * @property {module:model/VirtualGatewayListenerPortMapping}
     */
    VirtualGatewayListenerPortMapping,

    /**
     * The VirtualGatewayListenerTls model constructor.
     * @property {module:model/VirtualGatewayListenerTls}
     */
    VirtualGatewayListenerTls,

    /**
     * The VirtualGatewayListenerTlsAcmCertificate model constructor.
     * @property {module:model/VirtualGatewayListenerTlsAcmCertificate}
     */
    VirtualGatewayListenerTlsAcmCertificate,

    /**
     * The VirtualGatewayListenerTlsCertificate model constructor.
     * @property {module:model/VirtualGatewayListenerTlsCertificate}
     */
    VirtualGatewayListenerTlsCertificate,

    /**
     * The VirtualGatewayListenerTlsCertificateAcm model constructor.
     * @property {module:model/VirtualGatewayListenerTlsCertificateAcm}
     */
    VirtualGatewayListenerTlsCertificateAcm,

    /**
     * The VirtualGatewayListenerTlsCertificateFile model constructor.
     * @property {module:model/VirtualGatewayListenerTlsCertificateFile}
     */
    VirtualGatewayListenerTlsCertificateFile,

    /**
     * The VirtualGatewayListenerTlsCertificateSds model constructor.
     * @property {module:model/VirtualGatewayListenerTlsCertificateSds}
     */
    VirtualGatewayListenerTlsCertificateSds,

    /**
     * The VirtualGatewayListenerTlsFileCertificate model constructor.
     * @property {module:model/VirtualGatewayListenerTlsFileCertificate}
     */
    VirtualGatewayListenerTlsFileCertificate,

    /**
     * The VirtualGatewayListenerTlsMode model constructor.
     * @property {module:model/VirtualGatewayListenerTlsMode}
     */
    VirtualGatewayListenerTlsMode,

    /**
     * The VirtualGatewayListenerTlsSdsCertificate model constructor.
     * @property {module:model/VirtualGatewayListenerTlsSdsCertificate}
     */
    VirtualGatewayListenerTlsSdsCertificate,

    /**
     * The VirtualGatewayListenerTlsValidation model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidation}
     */
    VirtualGatewayListenerTlsValidation,

    /**
     * The VirtualGatewayListenerTlsValidationContext model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidationContext}
     */
    VirtualGatewayListenerTlsValidationContext,

    /**
     * The VirtualGatewayListenerTlsValidationContextSubjectAlternativeNames model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidationContextSubjectAlternativeNames}
     */
    VirtualGatewayListenerTlsValidationContextSubjectAlternativeNames,

    /**
     * The VirtualGatewayListenerTlsValidationContextTrust model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidationContextTrust}
     */
    VirtualGatewayListenerTlsValidationContextTrust,

    /**
     * The VirtualGatewayListenerTlsValidationContextTrustFile model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidationContextTrustFile}
     */
    VirtualGatewayListenerTlsValidationContextTrustFile,

    /**
     * The VirtualGatewayListenerTlsValidationContextTrustSds model constructor.
     * @property {module:model/VirtualGatewayListenerTlsValidationContextTrustSds}
     */
    VirtualGatewayListenerTlsValidationContextTrustSds,

    /**
     * The VirtualGatewayLogging model constructor.
     * @property {module:model/VirtualGatewayLogging}
     */
    VirtualGatewayLogging,

    /**
     * The VirtualGatewayLoggingAccessLog model constructor.
     * @property {module:model/VirtualGatewayLoggingAccessLog}
     */
    VirtualGatewayLoggingAccessLog,

    /**
     * The VirtualGatewayPortMapping model constructor.
     * @property {module:model/VirtualGatewayPortMapping}
     */
    VirtualGatewayPortMapping,

    /**
     * The VirtualGatewayPortProtocol model constructor.
     * @property {module:model/VirtualGatewayPortProtocol}
     */
    VirtualGatewayPortProtocol,

    /**
     * The VirtualGatewayRef model constructor.
     * @property {module:model/VirtualGatewayRef}
     */
    VirtualGatewayRef,

    /**
     * The VirtualGatewaySpec model constructor.
     * @property {module:model/VirtualGatewaySpec}
     */
    VirtualGatewaySpec,

    /**
     * The VirtualGatewayStatus model constructor.
     * @property {module:model/VirtualGatewayStatus}
     */
    VirtualGatewayStatus,

    /**
     * The VirtualGatewayStatusCode model constructor.
     * @property {module:model/VirtualGatewayStatusCode}
     */
    VirtualGatewayStatusCode,

    /**
     * The VirtualGatewayTlsValidationContext model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContext}
     */
    VirtualGatewayTlsValidationContext,

    /**
     * The VirtualGatewayTlsValidationContextAcmTrust model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextAcmTrust}
     */
    VirtualGatewayTlsValidationContextAcmTrust,

    /**
     * The VirtualGatewayTlsValidationContextFileTrust model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextFileTrust}
     */
    VirtualGatewayTlsValidationContextFileTrust,

    /**
     * The VirtualGatewayTlsValidationContextSdsTrust model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextSdsTrust}
     */
    VirtualGatewayTlsValidationContextSdsTrust,

    /**
     * The VirtualGatewayTlsValidationContextSubjectAlternativeNames model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextSubjectAlternativeNames}
     */
    VirtualGatewayTlsValidationContextSubjectAlternativeNames,

    /**
     * The VirtualGatewayTlsValidationContextTrust model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextTrust}
     */
    VirtualGatewayTlsValidationContextTrust,

    /**
     * The VirtualGatewayTlsValidationContextTrustAcm model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextTrustAcm}
     */
    VirtualGatewayTlsValidationContextTrustAcm,

    /**
     * The VirtualGatewayTlsValidationContextTrustSds model constructor.
     * @property {module:model/VirtualGatewayTlsValidationContextTrustSds}
     */
    VirtualGatewayTlsValidationContextTrustSds,

    /**
     * The VirtualNodeConnectionPool model constructor.
     * @property {module:model/VirtualNodeConnectionPool}
     */
    VirtualNodeConnectionPool,

    /**
     * The VirtualNodeConnectionPoolGrpc model constructor.
     * @property {module:model/VirtualNodeConnectionPoolGrpc}
     */
    VirtualNodeConnectionPoolGrpc,

    /**
     * The VirtualNodeConnectionPoolHttp model constructor.
     * @property {module:model/VirtualNodeConnectionPoolHttp}
     */
    VirtualNodeConnectionPoolHttp,

    /**
     * The VirtualNodeConnectionPoolHttp2 model constructor.
     * @property {module:model/VirtualNodeConnectionPoolHttp2}
     */
    VirtualNodeConnectionPoolHttp2,

    /**
     * The VirtualNodeConnectionPoolTcp model constructor.
     * @property {module:model/VirtualNodeConnectionPoolTcp}
     */
    VirtualNodeConnectionPoolTcp,

    /**
     * The VirtualNodeData model constructor.
     * @property {module:model/VirtualNodeData}
     */
    VirtualNodeData,

    /**
     * The VirtualNodeDataMetadata model constructor.
     * @property {module:model/VirtualNodeDataMetadata}
     */
    VirtualNodeDataMetadata,

    /**
     * The VirtualNodeDataSpec model constructor.
     * @property {module:model/VirtualNodeDataSpec}
     */
    VirtualNodeDataSpec,

    /**
     * The VirtualNodeDataStatus model constructor.
     * @property {module:model/VirtualNodeDataStatus}
     */
    VirtualNodeDataStatus,

    /**
     * The VirtualNodeGrpcConnectionPool model constructor.
     * @property {module:model/VirtualNodeGrpcConnectionPool}
     */
    VirtualNodeGrpcConnectionPool,

    /**
     * The VirtualNodeHttp2ConnectionPool model constructor.
     * @property {module:model/VirtualNodeHttp2ConnectionPool}
     */
    VirtualNodeHttp2ConnectionPool,

    /**
     * The VirtualNodeHttpConnectionPool model constructor.
     * @property {module:model/VirtualNodeHttpConnectionPool}
     */
    VirtualNodeHttpConnectionPool,

    /**
     * The VirtualNodeRef model constructor.
     * @property {module:model/VirtualNodeRef}
     */
    VirtualNodeRef,

    /**
     * The VirtualNodeServiceProvider model constructor.
     * @property {module:model/VirtualNodeServiceProvider}
     */
    VirtualNodeServiceProvider,

    /**
     * The VirtualNodeSpec model constructor.
     * @property {module:model/VirtualNodeSpec}
     */
    VirtualNodeSpec,

    /**
     * The VirtualNodeStatus model constructor.
     * @property {module:model/VirtualNodeStatus}
     */
    VirtualNodeStatus,

    /**
     * The VirtualNodeStatusCode model constructor.
     * @property {module:model/VirtualNodeStatusCode}
     */
    VirtualNodeStatusCode,

    /**
     * The VirtualNodeTcpConnectionPool model constructor.
     * @property {module:model/VirtualNodeTcpConnectionPool}
     */
    VirtualNodeTcpConnectionPool,

    /**
     * The VirtualRouterData model constructor.
     * @property {module:model/VirtualRouterData}
     */
    VirtualRouterData,

    /**
     * The VirtualRouterDataMetadata model constructor.
     * @property {module:model/VirtualRouterDataMetadata}
     */
    VirtualRouterDataMetadata,

    /**
     * The VirtualRouterDataSpec model constructor.
     * @property {module:model/VirtualRouterDataSpec}
     */
    VirtualRouterDataSpec,

    /**
     * The VirtualRouterDataStatus model constructor.
     * @property {module:model/VirtualRouterDataStatus}
     */
    VirtualRouterDataStatus,

    /**
     * The VirtualRouterListener model constructor.
     * @property {module:model/VirtualRouterListener}
     */
    VirtualRouterListener,

    /**
     * The VirtualRouterRef model constructor.
     * @property {module:model/VirtualRouterRef}
     */
    VirtualRouterRef,

    /**
     * The VirtualRouterServiceProvider model constructor.
     * @property {module:model/VirtualRouterServiceProvider}
     */
    VirtualRouterServiceProvider,

    /**
     * The VirtualRouterSpec model constructor.
     * @property {module:model/VirtualRouterSpec}
     */
    VirtualRouterSpec,

    /**
     * The VirtualRouterStatus model constructor.
     * @property {module:model/VirtualRouterStatus}
     */
    VirtualRouterStatus,

    /**
     * The VirtualRouterStatusCode model constructor.
     * @property {module:model/VirtualRouterStatusCode}
     */
    VirtualRouterStatusCode,

    /**
     * The VirtualServiceBackend model constructor.
     * @property {module:model/VirtualServiceBackend}
     */
    VirtualServiceBackend,

    /**
     * The VirtualServiceBackendClientPolicy model constructor.
     * @property {module:model/VirtualServiceBackendClientPolicy}
     */
    VirtualServiceBackendClientPolicy,

    /**
     * The VirtualServiceData model constructor.
     * @property {module:model/VirtualServiceData}
     */
    VirtualServiceData,

    /**
     * The VirtualServiceDataSpec model constructor.
     * @property {module:model/VirtualServiceDataSpec}
     */
    VirtualServiceDataSpec,

    /**
     * The VirtualServiceDataStatus model constructor.
     * @property {module:model/VirtualServiceDataStatus}
     */
    VirtualServiceDataStatus,

    /**
     * The VirtualServiceProvider model constructor.
     * @property {module:model/VirtualServiceProvider}
     */
    VirtualServiceProvider,

    /**
     * The VirtualServiceProviderVirtualNode model constructor.
     * @property {module:model/VirtualServiceProviderVirtualNode}
     */
    VirtualServiceProviderVirtualNode,

    /**
     * The VirtualServiceProviderVirtualRouter model constructor.
     * @property {module:model/VirtualServiceProviderVirtualRouter}
     */
    VirtualServiceProviderVirtualRouter,

    /**
     * The VirtualServiceRef model constructor.
     * @property {module:model/VirtualServiceRef}
     */
    VirtualServiceRef,

    /**
     * The VirtualServiceSpec model constructor.
     * @property {module:model/VirtualServiceSpec}
     */
    VirtualServiceSpec,

    /**
     * The VirtualServiceStatus model constructor.
     * @property {module:model/VirtualServiceStatus}
     */
    VirtualServiceStatus,

    /**
     * The VirtualServiceStatusCode model constructor.
     * @property {module:model/VirtualServiceStatusCode}
     */
    VirtualServiceStatusCode,

    /**
     * The WeightedTarget model constructor.
     * @property {module:model/WeightedTarget}
     */
    WeightedTarget,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
