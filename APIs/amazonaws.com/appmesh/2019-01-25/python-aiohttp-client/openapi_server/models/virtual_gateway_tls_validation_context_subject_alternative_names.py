# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subject_alternative_names_match import SubjectAlternativeNamesMatch
from openapi_server import util


class VirtualGatewayTlsValidationContextSubjectAlternativeNames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match: SubjectAlternativeNamesMatch=None):
        """VirtualGatewayTlsValidationContextSubjectAlternativeNames - a model defined in OpenAPI

        :param match: The match of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.
        """
        self.openapi_types = {
            'match': SubjectAlternativeNamesMatch
        }

        self.attribute_map = {
            'match': 'match'
        }

        self._match = match

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualGatewayTlsValidationContextSubjectAlternativeNames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualGatewayTlsValidationContext_subjectAlternativeNames of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match(self):
        """Gets the match of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.


        :return: The match of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.
        :rtype: SubjectAlternativeNamesMatch
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.


        :param match: The match of this VirtualGatewayTlsValidationContextSubjectAlternativeNames.
        :type match: SubjectAlternativeNamesMatch
        """
        if match is None:
            raise ValueError("Invalid value for `match`, must not be `None`")

        self._match = match
