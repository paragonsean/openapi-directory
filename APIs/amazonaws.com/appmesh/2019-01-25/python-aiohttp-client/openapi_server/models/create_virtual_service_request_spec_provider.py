# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_service_provider_virtual_node import VirtualServiceProviderVirtualNode
from openapi_server.models.virtual_service_provider_virtual_router import VirtualServiceProviderVirtualRouter
from openapi_server import util


class CreateVirtualServiceRequestSpecProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, virtual_node: VirtualServiceProviderVirtualNode=None, virtual_router: VirtualServiceProviderVirtualRouter=None):
        """CreateVirtualServiceRequestSpecProvider - a model defined in OpenAPI

        :param virtual_node: The virtual_node of this CreateVirtualServiceRequestSpecProvider.
        :param virtual_router: The virtual_router of this CreateVirtualServiceRequestSpecProvider.
        """
        self.openapi_types = {
            'virtual_node': VirtualServiceProviderVirtualNode,
            'virtual_router': VirtualServiceProviderVirtualRouter
        }

        self.attribute_map = {
            'virtual_node': 'virtualNode',
            'virtual_router': 'virtualRouter'
        }

        self._virtual_node = virtual_node
        self._virtual_router = virtual_router

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVirtualServiceRequestSpecProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVirtualService_request_spec_provider of this CreateVirtualServiceRequestSpecProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def virtual_node(self):
        """Gets the virtual_node of this CreateVirtualServiceRequestSpecProvider.


        :return: The virtual_node of this CreateVirtualServiceRequestSpecProvider.
        :rtype: VirtualServiceProviderVirtualNode
        """
        return self._virtual_node

    @virtual_node.setter
    def virtual_node(self, virtual_node):
        """Sets the virtual_node of this CreateVirtualServiceRequestSpecProvider.


        :param virtual_node: The virtual_node of this CreateVirtualServiceRequestSpecProvider.
        :type virtual_node: VirtualServiceProviderVirtualNode
        """

        self._virtual_node = virtual_node

    @property
    def virtual_router(self):
        """Gets the virtual_router of this CreateVirtualServiceRequestSpecProvider.


        :return: The virtual_router of this CreateVirtualServiceRequestSpecProvider.
        :rtype: VirtualServiceProviderVirtualRouter
        """
        return self._virtual_router

    @virtual_router.setter
    def virtual_router(self, virtual_router):
        """Sets the virtual_router of this CreateVirtualServiceRequestSpecProvider.


        :param virtual_router: The virtual_router of this CreateVirtualServiceRequestSpecProvider.
        :type virtual_router: VirtualServiceProviderVirtualRouter
        """

        self._virtual_router = virtual_router
