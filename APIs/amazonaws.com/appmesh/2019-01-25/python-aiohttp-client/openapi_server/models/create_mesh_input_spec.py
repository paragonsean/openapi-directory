# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_mesh_request_spec_egress_filter import CreateMeshRequestSpecEgressFilter
from openapi_server.models.mesh_service_discovery import MeshServiceDiscovery
from openapi_server import util


class CreateMeshInputSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, egress_filter: CreateMeshRequestSpecEgressFilter=None, service_discovery: MeshServiceDiscovery=None):
        """CreateMeshInputSpec - a model defined in OpenAPI

        :param egress_filter: The egress_filter of this CreateMeshInputSpec.
        :param service_discovery: The service_discovery of this CreateMeshInputSpec.
        """
        self.openapi_types = {
            'egress_filter': CreateMeshRequestSpecEgressFilter,
            'service_discovery': MeshServiceDiscovery
        }

        self.attribute_map = {
            'egress_filter': 'egressFilter',
            'service_discovery': 'serviceDiscovery'
        }

        self._egress_filter = egress_filter
        self._service_discovery = service_discovery

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMeshInputSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMeshInput_spec of this CreateMeshInputSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def egress_filter(self):
        """Gets the egress_filter of this CreateMeshInputSpec.


        :return: The egress_filter of this CreateMeshInputSpec.
        :rtype: CreateMeshRequestSpecEgressFilter
        """
        return self._egress_filter

    @egress_filter.setter
    def egress_filter(self, egress_filter):
        """Sets the egress_filter of this CreateMeshInputSpec.


        :param egress_filter: The egress_filter of this CreateMeshInputSpec.
        :type egress_filter: CreateMeshRequestSpecEgressFilter
        """

        self._egress_filter = egress_filter

    @property
    def service_discovery(self):
        """Gets the service_discovery of this CreateMeshInputSpec.


        :return: The service_discovery of this CreateMeshInputSpec.
        :rtype: MeshServiceDiscovery
        """
        return self._service_discovery

    @service_discovery.setter
    def service_discovery(self, service_discovery):
        """Sets the service_discovery of this CreateMeshInputSpec.


        :param service_discovery: The service_discovery of this CreateMeshInputSpec.
        :type service_discovery: MeshServiceDiscovery
        """

        self._service_discovery = service_discovery
