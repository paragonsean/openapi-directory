# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualNodeTcpConnectionPool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_connections: int=None):
        """VirtualNodeTcpConnectionPool - a model defined in OpenAPI

        :param max_connections: The max_connections of this VirtualNodeTcpConnectionPool.
        """
        self.openapi_types = {
            'max_connections': int
        }

        self.attribute_map = {
            'max_connections': 'maxConnections'
        }

        self._max_connections = max_connections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNodeTcpConnectionPool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNodeTcpConnectionPool of this VirtualNodeTcpConnectionPool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_connections(self):
        """Gets the max_connections of this VirtualNodeTcpConnectionPool.


        :return: The max_connections of this VirtualNodeTcpConnectionPool.
        :rtype: int
        """
        return self._max_connections

    @max_connections.setter
    def max_connections(self, max_connections):
        """Sets the max_connections of this VirtualNodeTcpConnectionPool.


        :param max_connections: The max_connections of this VirtualNodeTcpConnectionPool.
        :type max_connections: int
        """
        if max_connections is None:
            raise ValueError("Invalid value for `max_connections`, must not be `None`")

        self._max_connections = max_connections
