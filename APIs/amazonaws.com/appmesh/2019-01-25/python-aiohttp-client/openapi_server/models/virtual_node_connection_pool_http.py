# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualNodeConnectionPoolHttp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_connections: int=None, max_pending_requests: int=None):
        """VirtualNodeConnectionPoolHttp - a model defined in OpenAPI

        :param max_connections: The max_connections of this VirtualNodeConnectionPoolHttp.
        :param max_pending_requests: The max_pending_requests of this VirtualNodeConnectionPoolHttp.
        """
        self.openapi_types = {
            'max_connections': int,
            'max_pending_requests': int
        }

        self.attribute_map = {
            'max_connections': 'maxConnections',
            'max_pending_requests': 'maxPendingRequests'
        }

        self._max_connections = max_connections
        self._max_pending_requests = max_pending_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNodeConnectionPoolHttp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNodeConnectionPool_http of this VirtualNodeConnectionPoolHttp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_connections(self):
        """Gets the max_connections of this VirtualNodeConnectionPoolHttp.


        :return: The max_connections of this VirtualNodeConnectionPoolHttp.
        :rtype: int
        """
        return self._max_connections

    @max_connections.setter
    def max_connections(self, max_connections):
        """Sets the max_connections of this VirtualNodeConnectionPoolHttp.


        :param max_connections: The max_connections of this VirtualNodeConnectionPoolHttp.
        :type max_connections: int
        """
        if max_connections is None:
            raise ValueError("Invalid value for `max_connections`, must not be `None`")

        self._max_connections = max_connections

    @property
    def max_pending_requests(self):
        """Gets the max_pending_requests of this VirtualNodeConnectionPoolHttp.


        :return: The max_pending_requests of this VirtualNodeConnectionPoolHttp.
        :rtype: int
        """
        return self._max_pending_requests

    @max_pending_requests.setter
    def max_pending_requests(self, max_pending_requests):
        """Sets the max_pending_requests of this VirtualNodeConnectionPoolHttp.


        :param max_pending_requests: The max_pending_requests of this VirtualNodeConnectionPoolHttp.
        :type max_pending_requests: int
        """

        self._max_pending_requests = max_pending_requests
