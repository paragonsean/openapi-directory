# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListVirtualGatewaysOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, virtual_gateways: List=None):
        """ListVirtualGatewaysOutput - a model defined in OpenAPI

        :param next_token: The next_token of this ListVirtualGatewaysOutput.
        :param virtual_gateways: The virtual_gateways of this ListVirtualGatewaysOutput.
        """
        self.openapi_types = {
            'next_token': str,
            'virtual_gateways': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'virtual_gateways': 'virtualGateways'
        }

        self._next_token = next_token
        self._virtual_gateways = virtual_gateways

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListVirtualGatewaysOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListVirtualGatewaysOutput of this ListVirtualGatewaysOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListVirtualGatewaysOutput.


        :return: The next_token of this ListVirtualGatewaysOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListVirtualGatewaysOutput.


        :param next_token: The next_token of this ListVirtualGatewaysOutput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def virtual_gateways(self):
        """Gets the virtual_gateways of this ListVirtualGatewaysOutput.


        :return: The virtual_gateways of this ListVirtualGatewaysOutput.
        :rtype: List
        """
        return self._virtual_gateways

    @virtual_gateways.setter
    def virtual_gateways(self, virtual_gateways):
        """Sets the virtual_gateways of this ListVirtualGatewaysOutput.


        :param virtual_gateways: The virtual_gateways of this ListVirtualGatewaysOutput.
        :type virtual_gateways: List
        """
        if virtual_gateways is None:
            raise ValueError("Invalid value for `virtual_gateways`, must not be `None`")

        self._virtual_gateways = virtual_gateways
