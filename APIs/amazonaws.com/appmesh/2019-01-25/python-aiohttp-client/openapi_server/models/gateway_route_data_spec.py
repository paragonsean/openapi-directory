# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_gateway_route_request_spec_grpc_route import CreateGatewayRouteRequestSpecGrpcRoute
from openapi_server.models.create_gateway_route_request_spec_http2_route import CreateGatewayRouteRequestSpecHttp2Route
from openapi_server.models.create_gateway_route_request_spec_http_route import CreateGatewayRouteRequestSpecHttpRoute
from openapi_server import util


class GatewayRouteDataSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grpc_route: CreateGatewayRouteRequestSpecGrpcRoute=None, http2_route: CreateGatewayRouteRequestSpecHttp2Route=None, http_route: CreateGatewayRouteRequestSpecHttpRoute=None, priority: int=None):
        """GatewayRouteDataSpec - a model defined in OpenAPI

        :param grpc_route: The grpc_route of this GatewayRouteDataSpec.
        :param http2_route: The http2_route of this GatewayRouteDataSpec.
        :param http_route: The http_route of this GatewayRouteDataSpec.
        :param priority: The priority of this GatewayRouteDataSpec.
        """
        self.openapi_types = {
            'grpc_route': CreateGatewayRouteRequestSpecGrpcRoute,
            'http2_route': CreateGatewayRouteRequestSpecHttp2Route,
            'http_route': CreateGatewayRouteRequestSpecHttpRoute,
            'priority': int
        }

        self.attribute_map = {
            'grpc_route': 'grpcRoute',
            'http2_route': 'http2Route',
            'http_route': 'httpRoute',
            'priority': 'priority'
        }

        self._grpc_route = grpc_route
        self._http2_route = http2_route
        self._http_route = http_route
        self._priority = priority

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GatewayRouteDataSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GatewayRouteData_spec of this GatewayRouteDataSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grpc_route(self):
        """Gets the grpc_route of this GatewayRouteDataSpec.


        :return: The grpc_route of this GatewayRouteDataSpec.
        :rtype: CreateGatewayRouteRequestSpecGrpcRoute
        """
        return self._grpc_route

    @grpc_route.setter
    def grpc_route(self, grpc_route):
        """Sets the grpc_route of this GatewayRouteDataSpec.


        :param grpc_route: The grpc_route of this GatewayRouteDataSpec.
        :type grpc_route: CreateGatewayRouteRequestSpecGrpcRoute
        """

        self._grpc_route = grpc_route

    @property
    def http2_route(self):
        """Gets the http2_route of this GatewayRouteDataSpec.


        :return: The http2_route of this GatewayRouteDataSpec.
        :rtype: CreateGatewayRouteRequestSpecHttp2Route
        """
        return self._http2_route

    @http2_route.setter
    def http2_route(self, http2_route):
        """Sets the http2_route of this GatewayRouteDataSpec.


        :param http2_route: The http2_route of this GatewayRouteDataSpec.
        :type http2_route: CreateGatewayRouteRequestSpecHttp2Route
        """

        self._http2_route = http2_route

    @property
    def http_route(self):
        """Gets the http_route of this GatewayRouteDataSpec.


        :return: The http_route of this GatewayRouteDataSpec.
        :rtype: CreateGatewayRouteRequestSpecHttpRoute
        """
        return self._http_route

    @http_route.setter
    def http_route(self, http_route):
        """Sets the http_route of this GatewayRouteDataSpec.


        :param http_route: The http_route of this GatewayRouteDataSpec.
        :type http_route: CreateGatewayRouteRequestSpecHttpRoute
        """

        self._http_route = http_route

    @property
    def priority(self):
        """Gets the priority of this GatewayRouteDataSpec.


        :return: The priority of this GatewayRouteDataSpec.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this GatewayRouteDataSpec.


        :param priority: The priority of this GatewayRouteDataSpec.
        :type priority: int
        """

        self._priority = priority
