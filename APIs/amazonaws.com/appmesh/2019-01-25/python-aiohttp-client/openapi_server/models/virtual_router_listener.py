# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.port_mapping import PortMapping
from openapi_server import util


class VirtualRouterListener(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port_mapping: PortMapping=None):
        """VirtualRouterListener - a model defined in OpenAPI

        :param port_mapping: The port_mapping of this VirtualRouterListener.
        """
        self.openapi_types = {
            'port_mapping': PortMapping
        }

        self.attribute_map = {
            'port_mapping': 'portMapping'
        }

        self._port_mapping = port_mapping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualRouterListener':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualRouterListener of this VirtualRouterListener.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_mapping(self):
        """Gets the port_mapping of this VirtualRouterListener.


        :return: The port_mapping of this VirtualRouterListener.
        :rtype: PortMapping
        """
        return self._port_mapping

    @port_mapping.setter
    def port_mapping(self, port_mapping):
        """Sets the port_mapping of this VirtualRouterListener.


        :param port_mapping: The port_mapping of this VirtualRouterListener.
        :type port_mapping: PortMapping
        """
        if port_mapping is None:
            raise ValueError("Invalid value for `port_mapping`, must not be `None`")

        self._port_mapping = port_mapping
