# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_route_output_route import UpdateRouteOutputRoute
from openapi_server import util


class UpdateRouteOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, route: UpdateRouteOutputRoute=None):
        """UpdateRouteOutput - a model defined in OpenAPI

        :param route: The route of this UpdateRouteOutput.
        """
        self.openapi_types = {
            'route': UpdateRouteOutputRoute
        }

        self.attribute_map = {
            'route': 'route'
        }

        self._route = route

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRouteOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateRouteOutput of this UpdateRouteOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def route(self):
        """Gets the route of this UpdateRouteOutput.


        :return: The route of this UpdateRouteOutput.
        :rtype: UpdateRouteOutputRoute
        """
        return self._route

    @route.setter
    def route(self, route):
        """Sets the route of this UpdateRouteOutput.


        :param route: The route of this UpdateRouteOutput.
        :type route: UpdateRouteOutputRoute
        """
        if route is None:
            raise ValueError("Invalid value for `route`, must not be `None`")

        self._route = route
