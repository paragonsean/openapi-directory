# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_virtual_service_output_virtual_service import CreateVirtualServiceOutputVirtualService
from openapi_server import util


class CreateVirtualServiceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, virtual_service: CreateVirtualServiceOutputVirtualService=None):
        """CreateVirtualServiceOutput - a model defined in OpenAPI

        :param virtual_service: The virtual_service of this CreateVirtualServiceOutput.
        """
        self.openapi_types = {
            'virtual_service': CreateVirtualServiceOutputVirtualService
        }

        self.attribute_map = {
            'virtual_service': 'virtualService'
        }

        self._virtual_service = virtual_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVirtualServiceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVirtualServiceOutput of this CreateVirtualServiceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def virtual_service(self):
        """Gets the virtual_service of this CreateVirtualServiceOutput.


        :return: The virtual_service of this CreateVirtualServiceOutput.
        :rtype: CreateVirtualServiceOutputVirtualService
        """
        return self._virtual_service

    @virtual_service.setter
    def virtual_service(self, virtual_service):
        """Sets the virtual_service of this CreateVirtualServiceOutput.


        :param virtual_service: The virtual_service of this CreateVirtualServiceOutput.
        :type virtual_service: CreateVirtualServiceOutputVirtualService
        """
        if virtual_service is None:
            raise ValueError("Invalid value for `virtual_service`, must not be `None`")

        self._virtual_service = virtual_service
