# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_gateway_route_output_gateway_route import DescribeGatewayRouteOutputGatewayRoute
from openapi_server import util


class DescribeGatewayRouteOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_route: DescribeGatewayRouteOutputGatewayRoute=None):
        """DescribeGatewayRouteOutput - a model defined in OpenAPI

        :param gateway_route: The gateway_route of this DescribeGatewayRouteOutput.
        """
        self.openapi_types = {
            'gateway_route': DescribeGatewayRouteOutputGatewayRoute
        }

        self.attribute_map = {
            'gateway_route': 'gatewayRoute'
        }

        self._gateway_route = gateway_route

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGatewayRouteOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGatewayRouteOutput of this DescribeGatewayRouteOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_route(self):
        """Gets the gateway_route of this DescribeGatewayRouteOutput.


        :return: The gateway_route of this DescribeGatewayRouteOutput.
        :rtype: DescribeGatewayRouteOutputGatewayRoute
        """
        return self._gateway_route

    @gateway_route.setter
    def gateway_route(self, gateway_route):
        """Sets the gateway_route of this DescribeGatewayRouteOutput.


        :param gateway_route: The gateway_route of this DescribeGatewayRouteOutput.
        :type gateway_route: DescribeGatewayRouteOutputGatewayRoute
        """
        if gateway_route is None:
            raise ValueError("Invalid value for `gateway_route`, must not be `None`")

        self._gateway_route = gateway_route
