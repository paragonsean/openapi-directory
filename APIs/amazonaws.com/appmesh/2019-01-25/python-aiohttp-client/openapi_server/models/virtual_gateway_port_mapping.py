# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_gateway_port_protocol import VirtualGatewayPortProtocol
from openapi_server import util


class VirtualGatewayPortMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port: int=None, protocol: VirtualGatewayPortProtocol=None):
        """VirtualGatewayPortMapping - a model defined in OpenAPI

        :param port: The port of this VirtualGatewayPortMapping.
        :param protocol: The protocol of this VirtualGatewayPortMapping.
        """
        self.openapi_types = {
            'port': int,
            'protocol': VirtualGatewayPortProtocol
        }

        self.attribute_map = {
            'port': 'port',
            'protocol': 'protocol'
        }

        self._port = port
        self._protocol = protocol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualGatewayPortMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualGatewayPortMapping of this VirtualGatewayPortMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self):
        """Gets the port of this VirtualGatewayPortMapping.


        :return: The port of this VirtualGatewayPortMapping.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this VirtualGatewayPortMapping.


        :param port: The port of this VirtualGatewayPortMapping.
        :type port: int
        """
        if port is None:
            raise ValueError("Invalid value for `port`, must not be `None`")

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this VirtualGatewayPortMapping.


        :return: The protocol of this VirtualGatewayPortMapping.
        :rtype: VirtualGatewayPortProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this VirtualGatewayPortMapping.


        :param protocol: The protocol of this VirtualGatewayPortMapping.
        :type protocol: VirtualGatewayPortProtocol
        """
        if protocol is None:
            raise ValueError("Invalid value for `protocol`, must not be `None`")

        self._protocol = protocol
