# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logging_access_log import LoggingAccessLog
from openapi_server import util


class Logging(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_log: LoggingAccessLog=None):
        """Logging - a model defined in OpenAPI

        :param access_log: The access_log of this Logging.
        """
        self.openapi_types = {
            'access_log': LoggingAccessLog
        }

        self.attribute_map = {
            'access_log': 'accessLog'
        }

        self._access_log = access_log

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Logging':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Logging of this Logging.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_log(self):
        """Gets the access_log of this Logging.


        :return: The access_log of this Logging.
        :rtype: LoggingAccessLog
        """
        return self._access_log

    @access_log.setter
    def access_log(self, access_log):
        """Sets the access_log of this Logging.


        :param access_log: The access_log of this Logging.
        :type access_log: LoggingAccessLog
        """

        self._access_log = access_log
