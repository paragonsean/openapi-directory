/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateVirtualNodeInput_spec.h
 *
 * 
 */

#ifndef OAIUpdateVirtualNodeInput_spec_H
#define OAIUpdateVirtualNodeInput_spec_H

#include <QJsonObject>

#include "OAICreateVirtualNode_request_spec_backendDefaults.h"
#include "OAICreateVirtualNode_request_spec_logging.h"
#include "OAICreateVirtualNode_request_spec_serviceDiscovery.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateVirtualNode_request_spec_backendDefaults;
class OAICreateVirtualNode_request_spec_logging;
class OAICreateVirtualNode_request_spec_serviceDiscovery;

class OAIUpdateVirtualNodeInput_spec : public OAIObject {
public:
    OAIUpdateVirtualNodeInput_spec();
    OAIUpdateVirtualNodeInput_spec(QString json);
    ~OAIUpdateVirtualNodeInput_spec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateVirtualNode_request_spec_backendDefaults getBackendDefaults() const;
    void setBackendDefaults(const OAICreateVirtualNode_request_spec_backendDefaults &backend_defaults);
    bool is_backend_defaults_Set() const;
    bool is_backend_defaults_Valid() const;

    QList getBackends() const;
    void setBackends(const QList &backends);
    bool is_backends_Set() const;
    bool is_backends_Valid() const;

    QList getListeners() const;
    void setListeners(const QList &listeners);
    bool is_listeners_Set() const;
    bool is_listeners_Valid() const;

    OAICreateVirtualNode_request_spec_logging getLogging() const;
    void setLogging(const OAICreateVirtualNode_request_spec_logging &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    OAICreateVirtualNode_request_spec_serviceDiscovery getServiceDiscovery() const;
    void setServiceDiscovery(const OAICreateVirtualNode_request_spec_serviceDiscovery &service_discovery);
    bool is_service_discovery_Set() const;
    bool is_service_discovery_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateVirtualNode_request_spec_backendDefaults m_backend_defaults;
    bool m_backend_defaults_isSet;
    bool m_backend_defaults_isValid;

    QList m_backends;
    bool m_backends_isSet;
    bool m_backends_isValid;

    QList m_listeners;
    bool m_listeners_isSet;
    bool m_listeners_isValid;

    OAICreateVirtualNode_request_spec_logging m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;

    OAICreateVirtualNode_request_spec_serviceDiscovery m_service_discovery;
    bool m_service_discovery_isSet;
    bool m_service_discovery_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateVirtualNodeInput_spec)

#endif // OAIUpdateVirtualNodeInput_spec_H
