/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames.h
 *
 * 
 */

#ifndef OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames_H
#define OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames_H

#include <QJsonObject>

#include "OAISubjectAlternativeNames_match.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubjectAlternativeNames_match;

class OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames : public OAIObject {
public:
    OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames();
    OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames(QString json);
    ~OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubjectAlternativeNames_match getMatch() const;
    void setMatch(const OAISubjectAlternativeNames_match &match);
    bool is_match_Set() const;
    bool is_match_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubjectAlternativeNames_match m_match;
    bool m_match_isSet;
    bool m_match_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames)

#endif // OAIVirtualGatewayListenerTlsValidationContext_subjectAlternativeNames_H
