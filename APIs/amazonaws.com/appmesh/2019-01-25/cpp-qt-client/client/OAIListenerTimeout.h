/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListenerTimeout.h
 *
 * An object that represents timeouts for different protocols.
 */

#ifndef OAIListenerTimeout_H
#define OAIListenerTimeout_H

#include <QJsonObject>

#include "OAIGrpcRoute_timeout.h"
#include "OAIHttpRoute_timeout.h"
#include "OAITcpRoute_timeout.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrpcRoute_timeout;
class OAIHttpRoute_timeout;
class OAITcpRoute_timeout;

class OAIListenerTimeout : public OAIObject {
public:
    OAIListenerTimeout();
    OAIListenerTimeout(QString json);
    ~OAIListenerTimeout() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGrpcRoute_timeout getGrpc() const;
    void setGrpc(const OAIGrpcRoute_timeout &grpc);
    bool is_grpc_Set() const;
    bool is_grpc_Valid() const;

    OAIHttpRoute_timeout getHttp() const;
    void setHttp(const OAIHttpRoute_timeout &http);
    bool is_http_Set() const;
    bool is_http_Valid() const;

    OAIHttpRoute_timeout getHttp2() const;
    void setHttp2(const OAIHttpRoute_timeout &http2);
    bool is_http2_Set() const;
    bool is_http2_Valid() const;

    OAITcpRoute_timeout getTcp() const;
    void setTcp(const OAITcpRoute_timeout &tcp);
    bool is_tcp_Set() const;
    bool is_tcp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGrpcRoute_timeout m_grpc;
    bool m_grpc_isSet;
    bool m_grpc_isValid;

    OAIHttpRoute_timeout m_http;
    bool m_http_isSet;
    bool m_http_isValid;

    OAIHttpRoute_timeout m_http2;
    bool m_http2_isSet;
    bool m_http2_isValid;

    OAITcpRoute_timeout m_tcp;
    bool m_tcp_isSet;
    bool m_tcp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListenerTimeout)

#endif // OAIListenerTimeout_H
