/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateGatewayRouteInput_spec.h
 *
 * 
 */

#ifndef OAICreateGatewayRouteInput_spec_H
#define OAICreateGatewayRouteInput_spec_H

#include <QJsonObject>

#include "OAICreateGatewayRoute_request_spec_grpcRoute.h"
#include "OAICreateGatewayRoute_request_spec_http2Route.h"
#include "OAICreateGatewayRoute_request_spec_httpRoute.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateGatewayRoute_request_spec_grpcRoute;
class OAICreateGatewayRoute_request_spec_http2Route;
class OAICreateGatewayRoute_request_spec_httpRoute;

class OAICreateGatewayRouteInput_spec : public OAIObject {
public:
    OAICreateGatewayRouteInput_spec();
    OAICreateGatewayRouteInput_spec(QString json);
    ~OAICreateGatewayRouteInput_spec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateGatewayRoute_request_spec_grpcRoute getGrpcRoute() const;
    void setGrpcRoute(const OAICreateGatewayRoute_request_spec_grpcRoute &grpc_route);
    bool is_grpc_route_Set() const;
    bool is_grpc_route_Valid() const;

    OAICreateGatewayRoute_request_spec_http2Route getHttp2Route() const;
    void setHttp2Route(const OAICreateGatewayRoute_request_spec_http2Route &http2_route);
    bool is_http2_route_Set() const;
    bool is_http2_route_Valid() const;

    OAICreateGatewayRoute_request_spec_httpRoute getHttpRoute() const;
    void setHttpRoute(const OAICreateGatewayRoute_request_spec_httpRoute &http_route);
    bool is_http_route_Set() const;
    bool is_http_route_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateGatewayRoute_request_spec_grpcRoute m_grpc_route;
    bool m_grpc_route_isSet;
    bool m_grpc_route_isValid;

    OAICreateGatewayRoute_request_spec_http2Route m_http2_route;
    bool m_http2_route_isSet;
    bool m_http2_route_isValid;

    OAICreateGatewayRoute_request_spec_httpRoute m_http_route;
    bool m_http_route_isSet;
    bool m_http_route_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateGatewayRouteInput_spec)

#endif // OAICreateGatewayRouteInput_spec_H
