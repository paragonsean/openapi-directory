/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateVirtualNode_request_spec_serviceDiscovery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateVirtualNode_request_spec_serviceDiscovery::OAICreateVirtualNode_request_spec_serviceDiscovery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateVirtualNode_request_spec_serviceDiscovery::OAICreateVirtualNode_request_spec_serviceDiscovery() {
    this->initializeModel();
}

OAICreateVirtualNode_request_spec_serviceDiscovery::~OAICreateVirtualNode_request_spec_serviceDiscovery() {}

void OAICreateVirtualNode_request_spec_serviceDiscovery::initializeModel() {

    m_aws_cloud_map_isSet = false;
    m_aws_cloud_map_isValid = false;

    m_dns_isSet = false;
    m_dns_isValid = false;
}

void OAICreateVirtualNode_request_spec_serviceDiscovery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateVirtualNode_request_spec_serviceDiscovery::fromJsonObject(QJsonObject json) {

    m_aws_cloud_map_isValid = ::OpenAPI::fromJsonValue(m_aws_cloud_map, json[QString("awsCloudMap")]);
    m_aws_cloud_map_isSet = !json[QString("awsCloudMap")].isNull() && m_aws_cloud_map_isValid;

    m_dns_isValid = ::OpenAPI::fromJsonValue(m_dns, json[QString("dns")]);
    m_dns_isSet = !json[QString("dns")].isNull() && m_dns_isValid;
}

QString OAICreateVirtualNode_request_spec_serviceDiscovery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateVirtualNode_request_spec_serviceDiscovery::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_cloud_map.isSet()) {
        obj.insert(QString("awsCloudMap"), ::OpenAPI::toJsonValue(m_aws_cloud_map));
    }
    if (m_dns.isSet()) {
        obj.insert(QString("dns"), ::OpenAPI::toJsonValue(m_dns));
    }
    return obj;
}

OAIServiceDiscovery_awsCloudMap OAICreateVirtualNode_request_spec_serviceDiscovery::getAwsCloudMap() const {
    return m_aws_cloud_map;
}
void OAICreateVirtualNode_request_spec_serviceDiscovery::setAwsCloudMap(const OAIServiceDiscovery_awsCloudMap &aws_cloud_map) {
    m_aws_cloud_map = aws_cloud_map;
    m_aws_cloud_map_isSet = true;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::is_aws_cloud_map_Set() const{
    return m_aws_cloud_map_isSet;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::is_aws_cloud_map_Valid() const{
    return m_aws_cloud_map_isValid;
}

OAIServiceDiscovery_dns OAICreateVirtualNode_request_spec_serviceDiscovery::getDns() const {
    return m_dns;
}
void OAICreateVirtualNode_request_spec_serviceDiscovery::setDns(const OAIServiceDiscovery_dns &dns) {
    m_dns = dns;
    m_dns_isSet = true;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::is_dns_Set() const{
    return m_dns_isSet;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::is_dns_Valid() const{
    return m_dns_isValid;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_cloud_map.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateVirtualNode_request_spec_serviceDiscovery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
