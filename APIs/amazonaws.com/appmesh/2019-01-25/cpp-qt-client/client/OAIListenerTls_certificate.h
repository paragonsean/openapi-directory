/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListenerTls_certificate.h
 *
 * 
 */

#ifndef OAIListenerTls_certificate_H
#define OAIListenerTls_certificate_H

#include <QJsonObject>

#include "OAIListenerTlsCertificate_acm.h"
#include "OAIListenerTlsCertificate_file.h"
#include "OAIListenerTlsCertificate_sds.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListenerTlsCertificate_acm;
class OAIListenerTlsCertificate_file;
class OAIListenerTlsCertificate_sds;

class OAIListenerTls_certificate : public OAIObject {
public:
    OAIListenerTls_certificate();
    OAIListenerTls_certificate(QString json);
    ~OAIListenerTls_certificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListenerTlsCertificate_acm getAcm() const;
    void setAcm(const OAIListenerTlsCertificate_acm &acm);
    bool is_acm_Set() const;
    bool is_acm_Valid() const;

    OAIListenerTlsCertificate_file getFile() const;
    void setFile(const OAIListenerTlsCertificate_file &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    OAIListenerTlsCertificate_sds getSds() const;
    void setSds(const OAIListenerTlsCertificate_sds &sds);
    bool is_sds_Set() const;
    bool is_sds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListenerTlsCertificate_acm m_acm;
    bool m_acm_isSet;
    bool m_acm_isValid;

    OAIListenerTlsCertificate_file m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    OAIListenerTlsCertificate_sds m_sds;
    bool m_sds_isSet;
    bool m_sds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListenerTls_certificate)

#endif // OAIListenerTls_certificate_H
