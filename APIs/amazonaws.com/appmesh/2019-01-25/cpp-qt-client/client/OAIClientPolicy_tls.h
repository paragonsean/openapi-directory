/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClientPolicy_tls.h
 *
 * 
 */

#ifndef OAIClientPolicy_tls_H
#define OAIClientPolicy_tls_H

#include <QJsonObject>

#include "OAIClientPolicyTls_certificate.h"
#include "OAIClientPolicyTls_validation.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClientPolicyTls_certificate;
class OAIClientPolicyTls_validation;

class OAIClientPolicy_tls : public OAIObject {
public:
    OAIClientPolicy_tls();
    OAIClientPolicy_tls(QString json);
    ~OAIClientPolicy_tls() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClientPolicyTls_certificate getCertificate() const;
    void setCertificate(const OAIClientPolicyTls_certificate &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    bool getEnforce() const;
    void setEnforce(const bool &enforce);
    bool is_enforce_Set() const;
    bool is_enforce_Valid() const;

    QList getPorts() const;
    void setPorts(const QList &ports);
    bool is_ports_Set() const;
    bool is_ports_Valid() const;

    OAIClientPolicyTls_validation getValidation() const;
    void setValidation(const OAIClientPolicyTls_validation &validation);
    bool is_validation_Set() const;
    bool is_validation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClientPolicyTls_certificate m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    bool m_enforce;
    bool m_enforce_isSet;
    bool m_enforce_isValid;

    QList m_ports;
    bool m_ports_isSet;
    bool m_ports_isValid;

    OAIClientPolicyTls_validation m_validation;
    bool m_validation_isSet;
    bool m_validation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClientPolicy_tls)

#endif // OAIClientPolicy_tls_H
