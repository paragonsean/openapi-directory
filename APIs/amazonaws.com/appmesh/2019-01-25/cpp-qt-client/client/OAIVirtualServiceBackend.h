/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualServiceBackend.h
 *
 * An object that represents a virtual service backend for a virtual node.
 */

#ifndef OAIVirtualServiceBackend_H
#define OAIVirtualServiceBackend_H

#include <QJsonObject>

#include "OAIVirtualServiceBackend_clientPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualServiceBackend_clientPolicy;

class OAIVirtualServiceBackend : public OAIObject {
public:
    OAIVirtualServiceBackend();
    OAIVirtualServiceBackend(QString json);
    ~OAIVirtualServiceBackend() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVirtualServiceBackend_clientPolicy getClientPolicy() const;
    void setClientPolicy(const OAIVirtualServiceBackend_clientPolicy &client_policy);
    bool is_client_policy_Set() const;
    bool is_client_policy_Valid() const;

    QString getVirtualServiceName() const;
    void setVirtualServiceName(const QString &virtual_service_name);
    bool is_virtual_service_name_Set() const;
    bool is_virtual_service_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVirtualServiceBackend_clientPolicy m_client_policy;
    bool m_client_policy_isSet;
    bool m_client_policy_isValid;

    QString m_virtual_service_name;
    bool m_virtual_service_name_isSet;
    bool m_virtual_service_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualServiceBackend)

#endif // OAIVirtualServiceBackend_H
