/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAwsCloudMapServiceDiscovery.h
 *
 * &lt;p&gt;An object that represents the Cloud Map service discovery information for your virtual node.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Cloud Map is not available in the eu-south-1 Region.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIAwsCloudMapServiceDiscovery_H
#define OAIAwsCloudMapServiceDiscovery_H

#include <QJsonObject>

#include "OAIIpPreference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAwsCloudMapServiceDiscovery : public OAIObject {
public:
    OAIAwsCloudMapServiceDiscovery();
    OAIAwsCloudMapServiceDiscovery(QString json);
    ~OAIAwsCloudMapServiceDiscovery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAttributes() const;
    void setAttributes(const QList &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIIpPreference getIpPreference() const;
    void setIpPreference(const OAIIpPreference &ip_preference);
    bool is_ip_preference_Set() const;
    bool is_ip_preference_Valid() const;

    QString getNamespaceName() const;
    void setNamespaceName(const QString &namespace_name);
    bool is_namespace_name_Set() const;
    bool is_namespace_name_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIIpPreference m_ip_preference;
    bool m_ip_preference_isSet;
    bool m_ip_preference_isValid;

    QString m_namespace_name;
    bool m_namespace_name_isSet;
    bool m_namespace_name_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAwsCloudMapServiceDiscovery)

#endif // OAIAwsCloudMapServiceDiscovery_H
