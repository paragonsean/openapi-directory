/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpRouteHeader_match.h
 *
 * 
 */

#ifndef OAIHttpRouteHeader_match_H
#define OAIHttpRouteHeader_match_H

#include <QJsonObject>

#include "OAIGrpcRouteMetadataMatchMethod_range.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrpcRouteMetadataMatchMethod_range;

class OAIHttpRouteHeader_match : public OAIObject {
public:
    OAIHttpRouteHeader_match();
    OAIHttpRouteHeader_match(QString json);
    ~OAIHttpRouteHeader_match() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExact() const;
    void setExact(const QString &exact);
    bool is_exact_Set() const;
    bool is_exact_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAIGrpcRouteMetadataMatchMethod_range getRange() const;
    void setRange(const OAIGrpcRouteMetadataMatchMethod_range &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    QString getRegex() const;
    void setRegex(const QString &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    QString getSuffix() const;
    void setSuffix(const QString &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_exact;
    bool m_exact_isSet;
    bool m_exact_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAIGrpcRouteMetadataMatchMethod_range m_range;
    bool m_range_isSet;
    bool m_range_isValid;

    QString m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;

    QString m_suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpRouteHeader_match)

#endif // OAIHttpRouteHeader_match_H
