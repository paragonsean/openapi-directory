/**
 * AWS App Mesh
 * <p>App Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.</p> <p>App Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.</p> <note> <p>App Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\">Service Discovery</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. Kubernetes <code>kube-dns</code> and <code>coredns</code> are supported. For more information, see <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\">DNS for Services and Pods</a> in the Kubernetes documentation.</p> </note>
 *
 * The version of the OpenAPI document: 2019-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualGatewaySpec.h
 *
 * An object that represents the specification of a service mesh resource.
 */

#ifndef OAIVirtualGatewaySpec_H
#define OAIVirtualGatewaySpec_H

#include <QJsonObject>

#include "OAICreateVirtualGateway_request_spec_backendDefaults.h"
#include "OAIVirtualGatewayLogging.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateVirtualGateway_request_spec_backendDefaults;
class OAIVirtualGatewayLogging;

class OAIVirtualGatewaySpec : public OAIObject {
public:
    OAIVirtualGatewaySpec();
    OAIVirtualGatewaySpec(QString json);
    ~OAIVirtualGatewaySpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateVirtualGateway_request_spec_backendDefaults getBackendDefaults() const;
    void setBackendDefaults(const OAICreateVirtualGateway_request_spec_backendDefaults &backend_defaults);
    bool is_backend_defaults_Set() const;
    bool is_backend_defaults_Valid() const;

    QList getListeners() const;
    void setListeners(const QList &listeners);
    bool is_listeners_Set() const;
    bool is_listeners_Valid() const;

    OAIVirtualGatewayLogging getLogging() const;
    void setLogging(const OAIVirtualGatewayLogging &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateVirtualGateway_request_spec_backendDefaults m_backend_defaults;
    bool m_backend_defaults_isSet;
    bool m_backend_defaults_isValid;

    QList m_listeners;
    bool m_listeners_isSet;
    bool m_listeners_isValid;

    OAIVirtualGatewayLogging m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualGatewaySpec)

#endif // OAIVirtualGatewaySpec_H
