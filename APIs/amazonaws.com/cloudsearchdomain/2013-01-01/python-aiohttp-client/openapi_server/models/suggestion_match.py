# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuggestionMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggestion: str=None, score: int=None, id: str=None):
        """SuggestionMatch - a model defined in OpenAPI

        :param suggestion: The suggestion of this SuggestionMatch.
        :param score: The score of this SuggestionMatch.
        :param id: The id of this SuggestionMatch.
        """
        self.openapi_types = {
            'suggestion': str,
            'score': int,
            'id': str
        }

        self.attribute_map = {
            'suggestion': 'suggestion',
            'score': 'score',
            'id': 'id'
        }

        self._suggestion = suggestion
        self._score = score
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestionMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestionMatch of this SuggestionMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggestion(self):
        """Gets the suggestion of this SuggestionMatch.


        :return: The suggestion of this SuggestionMatch.
        :rtype: str
        """
        return self._suggestion

    @suggestion.setter
    def suggestion(self, suggestion):
        """Sets the suggestion of this SuggestionMatch.


        :param suggestion: The suggestion of this SuggestionMatch.
        :type suggestion: str
        """

        self._suggestion = suggestion

    @property
    def score(self):
        """Gets the score of this SuggestionMatch.


        :return: The score of this SuggestionMatch.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this SuggestionMatch.


        :param score: The score of this SuggestionMatch.
        :type score: int
        """

        self._score = score

    @property
    def id(self):
        """Gets the id of this SuggestionMatch.


        :return: The id of this SuggestionMatch.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SuggestionMatch.


        :param id: The id of this SuggestionMatch.
        :type id: str
        """

        self._id = id
