# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, fields: Dict=None, exprs: Dict=None, highlights: Dict=None):
        """Hit - a model defined in OpenAPI

        :param id: The id of this Hit.
        :param fields: The fields of this Hit.
        :param exprs: The exprs of this Hit.
        :param highlights: The highlights of this Hit.
        """
        self.openapi_types = {
            'id': str,
            'fields': Dict,
            'exprs': Dict,
            'highlights': Dict
        }

        self.attribute_map = {
            'id': 'id',
            'fields': 'fields',
            'exprs': 'exprs',
            'highlights': 'highlights'
        }

        self._id = id
        self._fields = fields
        self._exprs = exprs
        self._highlights = highlights

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hit of this Hit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Hit.


        :return: The id of this Hit.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Hit.


        :param id: The id of this Hit.
        :type id: str
        """

        self._id = id

    @property
    def fields(self):
        """Gets the fields of this Hit.


        :return: The fields of this Hit.
        :rtype: Dict
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this Hit.


        :param fields: The fields of this Hit.
        :type fields: Dict
        """

        self._fields = fields

    @property
    def exprs(self):
        """Gets the exprs of this Hit.


        :return: The exprs of this Hit.
        :rtype: Dict
        """
        return self._exprs

    @exprs.setter
    def exprs(self, exprs):
        """Sets the exprs of this Hit.


        :param exprs: The exprs of this Hit.
        :type exprs: Dict
        """

        self._exprs = exprs

    @property
    def highlights(self):
        """Gets the highlights of this Hit.


        :return: The highlights of this Hit.
        :rtype: Dict
        """
        return self._highlights

    @highlights.setter
    def highlights(self, highlights):
        """Sets the highlights of this Hit.


        :param highlights: The highlights of this Hit.
        :type highlights: Dict
        """

        self._highlights = highlights
