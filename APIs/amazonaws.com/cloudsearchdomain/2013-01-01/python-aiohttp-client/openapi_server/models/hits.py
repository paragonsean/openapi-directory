# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, found: int=None, start: int=None, cursor: str=None, hit: List=None):
        """Hits - a model defined in OpenAPI

        :param found: The found of this Hits.
        :param start: The start of this Hits.
        :param cursor: The cursor of this Hits.
        :param hit: The hit of this Hits.
        """
        self.openapi_types = {
            'found': int,
            'start': int,
            'cursor': str,
            'hit': List
        }

        self.attribute_map = {
            'found': 'found',
            'start': 'start',
            'cursor': 'cursor',
            'hit': 'hit'
        }

        self._found = found
        self._start = start
        self._cursor = cursor
        self._hit = hit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hits of this Hits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def found(self):
        """Gets the found of this Hits.


        :return: The found of this Hits.
        :rtype: int
        """
        return self._found

    @found.setter
    def found(self, found):
        """Sets the found of this Hits.


        :param found: The found of this Hits.
        :type found: int
        """

        self._found = found

    @property
    def start(self):
        """Gets the start of this Hits.


        :return: The start of this Hits.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Hits.


        :param start: The start of this Hits.
        :type start: int
        """

        self._start = start

    @property
    def cursor(self):
        """Gets the cursor of this Hits.


        :return: The cursor of this Hits.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this Hits.


        :param cursor: The cursor of this Hits.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def hit(self):
        """Gets the hit of this Hits.


        :return: The hit of this Hits.
        :rtype: List
        """
        return self._hit

    @hit.setter
    def hit(self, hit):
        """Sets the hit of this Hits.


        :param hit: The hit of this Hits.
        :type hit: List
        """

        self._hit = hit
