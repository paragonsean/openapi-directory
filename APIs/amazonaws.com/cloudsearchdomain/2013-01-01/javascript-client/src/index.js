/**
 * Amazon CloudSearch Domain
 * <p>You use the AmazonCloudSearch2013 API to upload documents to a search domain and search those documents. </p> <p>The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. You submit suggest requests to the search endpoint. </p> <p>For more information, see the <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide\">Amazon CloudSearch Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Bucket from './model/Bucket';
import BucketInfo from './model/BucketInfo';
import ContentType from './model/ContentType';
import DocumentServiceException from './model/DocumentServiceException';
import DocumentServiceWarning from './model/DocumentServiceWarning';
import FieldStats from './model/FieldStats';
import Hit from './model/Hit';
import Hits from './model/Hits';
import QueryParser from './model/QueryParser';
import SearchException from './model/SearchException';
import SearchResponse from './model/SearchResponse';
import SearchResponseHits from './model/SearchResponseHits';
import SearchResponseStatus from './model/SearchResponseStatus';
import SearchStatus from './model/SearchStatus';
import SuggestModel from './model/SuggestModel';
import SuggestResponse from './model/SuggestResponse';
import SuggestResponseStatus from './model/SuggestResponseStatus';
import SuggestResponseSuggest from './model/SuggestResponseSuggest';
import SuggestStatus from './model/SuggestStatus';
import SuggestionMatch from './model/SuggestionMatch';
import UploadDocumentsRequest from './model/UploadDocumentsRequest';
import UploadDocumentsResponse from './model/UploadDocumentsResponse';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;You use the AmazonCloudSearch2013 API to upload documents to a search domain and search those documents. &lt;/p&gt; &lt;p&gt;The endpoints for submitting &lt;code&gt;UploadDocuments&lt;/code&gt;, &lt;code&gt;Search&lt;/code&gt;, and &lt;code&gt;Suggest&lt;/code&gt; requests are domain-specific. To get the endpoints for your domain, use the Amazon CloudSearch configuration service &lt;code&gt;DescribeDomains&lt;/code&gt; action. The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. You submit suggest requests to the search endpoint. &lt;/p&gt; &lt;p&gt;For more information, see the &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/cloudsearch/latest/developerguide\&quot;&gt;Amazon CloudSearch Developer Guide&lt;/a&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonCloudSearchDomain = require('index'); // See note below*.
* var xxxSvc = new AmazonCloudSearchDomain.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonCloudSearchDomain.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonCloudSearchDomain.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonCloudSearchDomain.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2013-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Bucket model constructor.
     * @property {module:model/Bucket}
     */
    Bucket,

    /**
     * The BucketInfo model constructor.
     * @property {module:model/BucketInfo}
     */
    BucketInfo,

    /**
     * The ContentType model constructor.
     * @property {module:model/ContentType}
     */
    ContentType,

    /**
     * The DocumentServiceException model constructor.
     * @property {module:model/DocumentServiceException}
     */
    DocumentServiceException,

    /**
     * The DocumentServiceWarning model constructor.
     * @property {module:model/DocumentServiceWarning}
     */
    DocumentServiceWarning,

    /**
     * The FieldStats model constructor.
     * @property {module:model/FieldStats}
     */
    FieldStats,

    /**
     * The Hit model constructor.
     * @property {module:model/Hit}
     */
    Hit,

    /**
     * The Hits model constructor.
     * @property {module:model/Hits}
     */
    Hits,

    /**
     * The QueryParser model constructor.
     * @property {module:model/QueryParser}
     */
    QueryParser,

    /**
     * The SearchException model constructor.
     * @property {module:model/SearchException}
     */
    SearchException,

    /**
     * The SearchResponse model constructor.
     * @property {module:model/SearchResponse}
     */
    SearchResponse,

    /**
     * The SearchResponseHits model constructor.
     * @property {module:model/SearchResponseHits}
     */
    SearchResponseHits,

    /**
     * The SearchResponseStatus model constructor.
     * @property {module:model/SearchResponseStatus}
     */
    SearchResponseStatus,

    /**
     * The SearchStatus model constructor.
     * @property {module:model/SearchStatus}
     */
    SearchStatus,

    /**
     * The SuggestModel model constructor.
     * @property {module:model/SuggestModel}
     */
    SuggestModel,

    /**
     * The SuggestResponse model constructor.
     * @property {module:model/SuggestResponse}
     */
    SuggestResponse,

    /**
     * The SuggestResponseStatus model constructor.
     * @property {module:model/SuggestResponseStatus}
     */
    SuggestResponseStatus,

    /**
     * The SuggestResponseSuggest model constructor.
     * @property {module:model/SuggestResponseSuggest}
     */
    SuggestResponseSuggest,

    /**
     * The SuggestStatus model constructor.
     * @property {module:model/SuggestStatus}
     */
    SuggestStatus,

    /**
     * The SuggestionMatch model constructor.
     * @property {module:model/SuggestionMatch}
     */
    SuggestionMatch,

    /**
     * The UploadDocumentsRequest model constructor.
     * @property {module:model/UploadDocumentsRequest}
     */
    UploadDocumentsRequest,

    /**
     * The UploadDocumentsResponse model constructor.
     * @property {module:model/UploadDocumentsResponse}
     */
    UploadDocumentsResponse,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
