/**
 * Amazon CloudSearch Domain
 * <p>You use the AmazonCloudSearch2013 API to upload documents to a search domain and search those documents. </p> <p>The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. You submit suggest requests to the search endpoint. </p> <p>For more information, see the <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide\">Amazon CloudSearch Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2013-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldStats.h
 *
 * The statistics for a field calculated in the request.
 */

#ifndef OAIFieldStats_H
#define OAIFieldStats_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFieldStats : public OAIObject {
public:
    OAIFieldStats();
    OAIFieldStats(QString json);
    ~OAIFieldStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMin() const;
    void setMin(const QString &min);
    bool is_min_Set() const;
    bool is_min_Valid() const;

    QString getMax() const;
    void setMax(const QString &max);
    bool is_max_Set() const;
    bool is_max_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getMissing() const;
    void setMissing(const qint32 &missing);
    bool is_missing_Set() const;
    bool is_missing_Valid() const;

    double getSum() const;
    void setSum(const double &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    double getSumOfSquares() const;
    void setSumOfSquares(const double &sum_of_squares);
    bool is_sum_of_squares_Set() const;
    bool is_sum_of_squares_Valid() const;

    QString getMean() const;
    void setMean(const QString &mean);
    bool is_mean_Set() const;
    bool is_mean_Valid() const;

    double getStddev() const;
    void setStddev(const double &stddev);
    bool is_stddev_Set() const;
    bool is_stddev_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_min;
    bool m_min_isSet;
    bool m_min_isValid;

    QString m_max;
    bool m_max_isSet;
    bool m_max_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_missing;
    bool m_missing_isSet;
    bool m_missing_isValid;

    double m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;

    double m_sum_of_squares;
    bool m_sum_of_squares_isSet;
    bool m_sum_of_squares_isValid;

    QString m_mean;
    bool m_mean_isSet;
    bool m_mean_isValid;

    double m_stddev;
    bool m_stddev_isSet;
    bool m_stddev_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldStats)

#endif // OAIFieldStats_H
