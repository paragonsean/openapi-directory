/**
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricStreamStatisticsConfiguration.h
 *
 * By default, a metric stream always sends the &lt;code&gt;MAX&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;SUM&lt;/code&gt;, and &lt;code&gt;SAMPLECOUNT&lt;/code&gt; statistics for each metric that is streamed. This structure contains information for one metric that includes additional statistics in the stream. For more information about statistics, see CloudWatch, listed in &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html\&quot;&gt; CloudWatch statistics definitions&lt;/a&gt;.
 */

#ifndef OAIMetricStreamStatisticsConfiguration_H
#define OAIMetricStreamStatisticsConfiguration_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetricStreamStatisticsConfiguration : public OAIObject {
public:
    OAIMetricStreamStatisticsConfiguration();
    OAIMetricStreamStatisticsConfiguration(QString json);
    ~OAIMetricStreamStatisticsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getIncludeMetrics() const;
    void setIncludeMetrics(const QList &include_metrics);
    bool is_include_metrics_Set() const;
    bool is_include_metrics_Valid() const;

    QList getAdditionalStatistics() const;
    void setAdditionalStatistics(const QList &additional_statistics);
    bool is_additional_statistics_Set() const;
    bool is_additional_statistics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_include_metrics;
    bool m_include_metrics_isSet;
    bool m_include_metrics_isValid;

    QList m_additional_statistics;
    bool m_additional_statistics_isSet;
    bool m_additional_statistics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricStreamStatisticsConfiguration)

#endif // OAIMetricStreamStatisticsConfiguration_H
