/**
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutMetricStreamInput.h
 *
 * 
 */

#ifndef OAIPutMetricStreamInput_H
#define OAIPutMetricStreamInput_H

#include <QJsonObject>

#include "OAIMetricStreamOutputFormat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutMetricStreamInput : public OAIObject {
public:
    OAIPutMetricStreamInput();
    OAIPutMetricStreamInput(QString json);
    ~OAIPutMetricStreamInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getIncludeFilters() const;
    void setIncludeFilters(const QList &include_filters);
    bool is_include_filters_Set() const;
    bool is_include_filters_Valid() const;

    QList getExcludeFilters() const;
    void setExcludeFilters(const QList &exclude_filters);
    bool is_exclude_filters_Set() const;
    bool is_exclude_filters_Valid() const;

    QString getFirehoseArn() const;
    void setFirehoseArn(const QString &firehose_arn);
    bool is_firehose_arn_Set() const;
    bool is_firehose_arn_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIMetricStreamOutputFormat getOutputFormat() const;
    void setOutputFormat(const OAIMetricStreamOutputFormat &output_format);
    bool is_output_format_Set() const;
    bool is_output_format_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList getStatisticsConfigurations() const;
    void setStatisticsConfigurations(const QList &statistics_configurations);
    bool is_statistics_configurations_Set() const;
    bool is_statistics_configurations_Valid() const;

    bool getIncludeLinkedAccountsMetrics() const;
    void setIncludeLinkedAccountsMetrics(const bool &include_linked_accounts_metrics);
    bool is_include_linked_accounts_metrics_Set() const;
    bool is_include_linked_accounts_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_include_filters;
    bool m_include_filters_isSet;
    bool m_include_filters_isValid;

    QList m_exclude_filters;
    bool m_exclude_filters_isSet;
    bool m_exclude_filters_isValid;

    QString m_firehose_arn;
    bool m_firehose_arn_isSet;
    bool m_firehose_arn_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIMetricStreamOutputFormat m_output_format;
    bool m_output_format_isSet;
    bool m_output_format_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList m_statistics_configurations;
    bool m_statistics_configurations_isSet;
    bool m_statistics_configurations_isValid;

    bool m_include_linked_accounts_metrics;
    bool m_include_linked_accounts_metrics_isSet;
    bool m_include_linked_accounts_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutMetricStreamInput)

#endif // OAIPutMetricStreamInput_H
