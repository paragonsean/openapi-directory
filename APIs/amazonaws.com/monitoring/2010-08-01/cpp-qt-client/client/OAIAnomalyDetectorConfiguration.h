/**
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnomalyDetectorConfiguration.h
 *
 * The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
 */

#ifndef OAIAnomalyDetectorConfiguration_H
#define OAIAnomalyDetectorConfiguration_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnomalyDetectorConfiguration : public OAIObject {
public:
    OAIAnomalyDetectorConfiguration();
    OAIAnomalyDetectorConfiguration(QString json);
    ~OAIAnomalyDetectorConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getExcludedTimeRanges() const;
    void setExcludedTimeRanges(const QList &excluded_time_ranges);
    bool is_excluded_time_ranges_Set() const;
    bool is_excluded_time_ranges_Valid() const;

    QString getMetricTimezone() const;
    void setMetricTimezone(const QString &metric_timezone);
    bool is_metric_timezone_Set() const;
    bool is_metric_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_excluded_time_ranges;
    bool m_excluded_time_ranges_isSet;
    bool m_excluded_time_ranges_isValid;

    QString m_metric_timezone;
    bool m_metric_timezone_isSet;
    bool m_metric_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnomalyDetectorConfiguration)

#endif // OAIAnomalyDetectorConfiguration_H
