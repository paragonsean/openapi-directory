/**
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsightRule.h
 *
 * This structure contains the definition for a Contributor Insights rule. For more information about this rule, see&lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html\&quot;&gt; Using Constributor Insights to analyze high-cardinality data&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.
 */

#ifndef OAIInsightRule_H
#define OAIInsightRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsightRule : public OAIObject {
public:
    OAIInsightRule();
    OAIInsightRule(QString json);
    ~OAIInsightRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSchema() const;
    void setSchema(const QString &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    bool getManagedRule() const;
    void setManagedRule(const bool &managed_rule);
    bool is_managed_rule_Set() const;
    bool is_managed_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    bool m_managed_rule;
    bool m_managed_rule_isSet;
    bool m_managed_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsightRule)

#endif // OAIInsightRule_H
