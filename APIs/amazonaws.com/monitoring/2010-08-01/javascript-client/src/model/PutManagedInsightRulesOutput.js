/**
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutManagedInsightRulesOutput model module.
 * @module model/PutManagedInsightRulesOutput
 * @version 2010-08-01
 */
class PutManagedInsightRulesOutput {
    /**
     * Constructs a new <code>PutManagedInsightRulesOutput</code>.
     * @alias module:model/PutManagedInsightRulesOutput
     */
    constructor() { 
        
        PutManagedInsightRulesOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutManagedInsightRulesOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutManagedInsightRulesOutput} obj Optional instance to populate.
     * @return {module:model/PutManagedInsightRulesOutput} The populated <code>PutManagedInsightRulesOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutManagedInsightRulesOutput();

            if (data.hasOwnProperty('Failures')) {
                obj['Failures'] = ApiClient.convertToType(data['Failures'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutManagedInsightRulesOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutManagedInsightRulesOutput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Failures`
        if (data['Failures']) { // data not null
          Array.validateJSON(data['Failures']);
        }

        return true;
    }


}



/**
 * @member {Array} Failures
 */
PutManagedInsightRulesOutput.prototype['Failures'] = undefined;






export default PutManagedInsightRulesOutput;

