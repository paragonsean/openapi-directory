# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.state_value import StateValue
from openapi_server import util


class DescribeAlarmsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alarm_names: List=None, alarm_name_prefix: str=None, alarm_types: List=None, children_of_alarm_name: str=None, parents_of_alarm_name: str=None, state_value: StateValue=None, action_prefix: str=None, max_records: int=None, next_token: str=None):
        """DescribeAlarmsInput - a model defined in OpenAPI

        :param alarm_names: The alarm_names of this DescribeAlarmsInput.
        :param alarm_name_prefix: The alarm_name_prefix of this DescribeAlarmsInput.
        :param alarm_types: The alarm_types of this DescribeAlarmsInput.
        :param children_of_alarm_name: The children_of_alarm_name of this DescribeAlarmsInput.
        :param parents_of_alarm_name: The parents_of_alarm_name of this DescribeAlarmsInput.
        :param state_value: The state_value of this DescribeAlarmsInput.
        :param action_prefix: The action_prefix of this DescribeAlarmsInput.
        :param max_records: The max_records of this DescribeAlarmsInput.
        :param next_token: The next_token of this DescribeAlarmsInput.
        """
        self.openapi_types = {
            'alarm_names': List,
            'alarm_name_prefix': str,
            'alarm_types': List,
            'children_of_alarm_name': str,
            'parents_of_alarm_name': str,
            'state_value': StateValue,
            'action_prefix': str,
            'max_records': int,
            'next_token': str
        }

        self.attribute_map = {
            'alarm_names': 'AlarmNames',
            'alarm_name_prefix': 'AlarmNamePrefix',
            'alarm_types': 'AlarmTypes',
            'children_of_alarm_name': 'ChildrenOfAlarmName',
            'parents_of_alarm_name': 'ParentsOfAlarmName',
            'state_value': 'StateValue',
            'action_prefix': 'ActionPrefix',
            'max_records': 'MaxRecords',
            'next_token': 'NextToken'
        }

        self._alarm_names = alarm_names
        self._alarm_name_prefix = alarm_name_prefix
        self._alarm_types = alarm_types
        self._children_of_alarm_name = children_of_alarm_name
        self._parents_of_alarm_name = parents_of_alarm_name
        self._state_value = state_value
        self._action_prefix = action_prefix
        self._max_records = max_records
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAlarmsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAlarmsInput of this DescribeAlarmsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alarm_names(self):
        """Gets the alarm_names of this DescribeAlarmsInput.


        :return: The alarm_names of this DescribeAlarmsInput.
        :rtype: List
        """
        return self._alarm_names

    @alarm_names.setter
    def alarm_names(self, alarm_names):
        """Sets the alarm_names of this DescribeAlarmsInput.


        :param alarm_names: The alarm_names of this DescribeAlarmsInput.
        :type alarm_names: List
        """

        self._alarm_names = alarm_names

    @property
    def alarm_name_prefix(self):
        """Gets the alarm_name_prefix of this DescribeAlarmsInput.


        :return: The alarm_name_prefix of this DescribeAlarmsInput.
        :rtype: str
        """
        return self._alarm_name_prefix

    @alarm_name_prefix.setter
    def alarm_name_prefix(self, alarm_name_prefix):
        """Sets the alarm_name_prefix of this DescribeAlarmsInput.


        :param alarm_name_prefix: The alarm_name_prefix of this DescribeAlarmsInput.
        :type alarm_name_prefix: str
        """

        self._alarm_name_prefix = alarm_name_prefix

    @property
    def alarm_types(self):
        """Gets the alarm_types of this DescribeAlarmsInput.


        :return: The alarm_types of this DescribeAlarmsInput.
        :rtype: List
        """
        return self._alarm_types

    @alarm_types.setter
    def alarm_types(self, alarm_types):
        """Sets the alarm_types of this DescribeAlarmsInput.


        :param alarm_types: The alarm_types of this DescribeAlarmsInput.
        :type alarm_types: List
        """

        self._alarm_types = alarm_types

    @property
    def children_of_alarm_name(self):
        """Gets the children_of_alarm_name of this DescribeAlarmsInput.


        :return: The children_of_alarm_name of this DescribeAlarmsInput.
        :rtype: str
        """
        return self._children_of_alarm_name

    @children_of_alarm_name.setter
    def children_of_alarm_name(self, children_of_alarm_name):
        """Sets the children_of_alarm_name of this DescribeAlarmsInput.


        :param children_of_alarm_name: The children_of_alarm_name of this DescribeAlarmsInput.
        :type children_of_alarm_name: str
        """

        self._children_of_alarm_name = children_of_alarm_name

    @property
    def parents_of_alarm_name(self):
        """Gets the parents_of_alarm_name of this DescribeAlarmsInput.


        :return: The parents_of_alarm_name of this DescribeAlarmsInput.
        :rtype: str
        """
        return self._parents_of_alarm_name

    @parents_of_alarm_name.setter
    def parents_of_alarm_name(self, parents_of_alarm_name):
        """Sets the parents_of_alarm_name of this DescribeAlarmsInput.


        :param parents_of_alarm_name: The parents_of_alarm_name of this DescribeAlarmsInput.
        :type parents_of_alarm_name: str
        """

        self._parents_of_alarm_name = parents_of_alarm_name

    @property
    def state_value(self):
        """Gets the state_value of this DescribeAlarmsInput.


        :return: The state_value of this DescribeAlarmsInput.
        :rtype: StateValue
        """
        return self._state_value

    @state_value.setter
    def state_value(self, state_value):
        """Sets the state_value of this DescribeAlarmsInput.


        :param state_value: The state_value of this DescribeAlarmsInput.
        :type state_value: StateValue
        """

        self._state_value = state_value

    @property
    def action_prefix(self):
        """Gets the action_prefix of this DescribeAlarmsInput.


        :return: The action_prefix of this DescribeAlarmsInput.
        :rtype: str
        """
        return self._action_prefix

    @action_prefix.setter
    def action_prefix(self, action_prefix):
        """Sets the action_prefix of this DescribeAlarmsInput.


        :param action_prefix: The action_prefix of this DescribeAlarmsInput.
        :type action_prefix: str
        """

        self._action_prefix = action_prefix

    @property
    def max_records(self):
        """Gets the max_records of this DescribeAlarmsInput.


        :return: The max_records of this DescribeAlarmsInput.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeAlarmsInput.


        :param max_records: The max_records of this DescribeAlarmsInput.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def next_token(self):
        """Gets the next_token of this DescribeAlarmsInput.


        :return: The next_token of this DescribeAlarmsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeAlarmsInput.


        :param next_token: The next_token of this DescribeAlarmsInput.
        :type next_token: str
        """

        self._next_token = next_token
