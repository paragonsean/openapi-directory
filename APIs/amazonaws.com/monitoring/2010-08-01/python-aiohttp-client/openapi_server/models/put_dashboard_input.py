# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutDashboardInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dashboard_name: str=None, dashboard_body: str=None):
        """PutDashboardInput - a model defined in OpenAPI

        :param dashboard_name: The dashboard_name of this PutDashboardInput.
        :param dashboard_body: The dashboard_body of this PutDashboardInput.
        """
        self.openapi_types = {
            'dashboard_name': str,
            'dashboard_body': str
        }

        self.attribute_map = {
            'dashboard_name': 'DashboardName',
            'dashboard_body': 'DashboardBody'
        }

        self._dashboard_name = dashboard_name
        self._dashboard_body = dashboard_body

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutDashboardInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutDashboardInput of this PutDashboardInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dashboard_name(self):
        """Gets the dashboard_name of this PutDashboardInput.


        :return: The dashboard_name of this PutDashboardInput.
        :rtype: str
        """
        return self._dashboard_name

    @dashboard_name.setter
    def dashboard_name(self, dashboard_name):
        """Sets the dashboard_name of this PutDashboardInput.


        :param dashboard_name: The dashboard_name of this PutDashboardInput.
        :type dashboard_name: str
        """
        if dashboard_name is None:
            raise ValueError("Invalid value for `dashboard_name`, must not be `None`")

        self._dashboard_name = dashboard_name

    @property
    def dashboard_body(self):
        """Gets the dashboard_body of this PutDashboardInput.


        :return: The dashboard_body of this PutDashboardInput.
        :rtype: str
        """
        return self._dashboard_body

    @dashboard_body.setter
    def dashboard_body(self, dashboard_body):
        """Sets the dashboard_body of this PutDashboardInput.


        :param dashboard_body: The dashboard_body of this PutDashboardInput.
        :type dashboard_body: str
        """
        if dashboard_body is None:
            raise ValueError("Invalid value for `dashboard_body`, must not be `None`")

        self._dashboard_body = dashboard_body
