# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status_code import StatusCode
from openapi_server import util


class MetricDataResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, label: str=None, timestamps: List=None, values: List=None, status_code: StatusCode=None, messages: List=None):
        """MetricDataResult - a model defined in OpenAPI

        :param id: The id of this MetricDataResult.
        :param label: The label of this MetricDataResult.
        :param timestamps: The timestamps of this MetricDataResult.
        :param values: The values of this MetricDataResult.
        :param status_code: The status_code of this MetricDataResult.
        :param messages: The messages of this MetricDataResult.
        """
        self.openapi_types = {
            'id': str,
            'label': str,
            'timestamps': List,
            'values': List,
            'status_code': StatusCode,
            'messages': List
        }

        self.attribute_map = {
            'id': 'Id',
            'label': 'Label',
            'timestamps': 'Timestamps',
            'values': 'Values',
            'status_code': 'StatusCode',
            'messages': 'Messages'
        }

        self._id = id
        self._label = label
        self._timestamps = timestamps
        self._values = values
        self._status_code = status_code
        self._messages = messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricDataResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricDataResult of this MetricDataResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MetricDataResult.


        :return: The id of this MetricDataResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MetricDataResult.


        :param id: The id of this MetricDataResult.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this MetricDataResult.


        :return: The label of this MetricDataResult.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this MetricDataResult.


        :param label: The label of this MetricDataResult.
        :type label: str
        """

        self._label = label

    @property
    def timestamps(self):
        """Gets the timestamps of this MetricDataResult.


        :return: The timestamps of this MetricDataResult.
        :rtype: List
        """
        return self._timestamps

    @timestamps.setter
    def timestamps(self, timestamps):
        """Sets the timestamps of this MetricDataResult.


        :param timestamps: The timestamps of this MetricDataResult.
        :type timestamps: List
        """

        self._timestamps = timestamps

    @property
    def values(self):
        """Gets the values of this MetricDataResult.


        :return: The values of this MetricDataResult.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this MetricDataResult.


        :param values: The values of this MetricDataResult.
        :type values: List
        """

        self._values = values

    @property
    def status_code(self):
        """Gets the status_code of this MetricDataResult.


        :return: The status_code of this MetricDataResult.
        :rtype: StatusCode
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this MetricDataResult.


        :param status_code: The status_code of this MetricDataResult.
        :type status_code: StatusCode
        """

        self._status_code = status_code

    @property
    def messages(self):
        """Gets the messages of this MetricDataResult.


        :return: The messages of this MetricDataResult.
        :rtype: List
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this MetricDataResult.


        :param messages: The messages of this MetricDataResult.
        :type messages: List
        """

        self._messages = messages
