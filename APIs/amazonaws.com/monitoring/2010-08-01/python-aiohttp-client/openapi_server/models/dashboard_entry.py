# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DashboardEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dashboard_name: str=None, dashboard_arn: str=None, last_modified: datetime=None, size: int=None):
        """DashboardEntry - a model defined in OpenAPI

        :param dashboard_name: The dashboard_name of this DashboardEntry.
        :param dashboard_arn: The dashboard_arn of this DashboardEntry.
        :param last_modified: The last_modified of this DashboardEntry.
        :param size: The size of this DashboardEntry.
        """
        self.openapi_types = {
            'dashboard_name': str,
            'dashboard_arn': str,
            'last_modified': datetime,
            'size': int
        }

        self.attribute_map = {
            'dashboard_name': 'DashboardName',
            'dashboard_arn': 'DashboardArn',
            'last_modified': 'LastModified',
            'size': 'Size'
        }

        self._dashboard_name = dashboard_name
        self._dashboard_arn = dashboard_arn
        self._last_modified = last_modified
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashboardEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DashboardEntry of this DashboardEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dashboard_name(self):
        """Gets the dashboard_name of this DashboardEntry.


        :return: The dashboard_name of this DashboardEntry.
        :rtype: str
        """
        return self._dashboard_name

    @dashboard_name.setter
    def dashboard_name(self, dashboard_name):
        """Sets the dashboard_name of this DashboardEntry.


        :param dashboard_name: The dashboard_name of this DashboardEntry.
        :type dashboard_name: str
        """

        self._dashboard_name = dashboard_name

    @property
    def dashboard_arn(self):
        """Gets the dashboard_arn of this DashboardEntry.


        :return: The dashboard_arn of this DashboardEntry.
        :rtype: str
        """
        return self._dashboard_arn

    @dashboard_arn.setter
    def dashboard_arn(self, dashboard_arn):
        """Sets the dashboard_arn of this DashboardEntry.


        :param dashboard_arn: The dashboard_arn of this DashboardEntry.
        :type dashboard_arn: str
        """

        self._dashboard_arn = dashboard_arn

    @property
    def last_modified(self):
        """Gets the last_modified of this DashboardEntry.


        :return: The last_modified of this DashboardEntry.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this DashboardEntry.


        :param last_modified: The last_modified of this DashboardEntry.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def size(self):
        """Gets the size of this DashboardEntry.


        :return: The size of this DashboardEntry.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this DashboardEntry.


        :param size: The size of this DashboardEntry.
        :type size: int
        """

        self._size = size
