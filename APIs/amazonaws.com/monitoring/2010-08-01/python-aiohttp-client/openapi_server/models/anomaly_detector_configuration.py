# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnomalyDetectorConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excluded_time_ranges: List=None, metric_timezone: str=None):
        """AnomalyDetectorConfiguration - a model defined in OpenAPI

        :param excluded_time_ranges: The excluded_time_ranges of this AnomalyDetectorConfiguration.
        :param metric_timezone: The metric_timezone of this AnomalyDetectorConfiguration.
        """
        self.openapi_types = {
            'excluded_time_ranges': List,
            'metric_timezone': str
        }

        self.attribute_map = {
            'excluded_time_ranges': 'ExcludedTimeRanges',
            'metric_timezone': 'MetricTimezone'
        }

        self._excluded_time_ranges = excluded_time_ranges
        self._metric_timezone = metric_timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnomalyDetectorConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnomalyDetector_Configuration of this AnomalyDetectorConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excluded_time_ranges(self):
        """Gets the excluded_time_ranges of this AnomalyDetectorConfiguration.


        :return: The excluded_time_ranges of this AnomalyDetectorConfiguration.
        :rtype: List
        """
        return self._excluded_time_ranges

    @excluded_time_ranges.setter
    def excluded_time_ranges(self, excluded_time_ranges):
        """Sets the excluded_time_ranges of this AnomalyDetectorConfiguration.


        :param excluded_time_ranges: The excluded_time_ranges of this AnomalyDetectorConfiguration.
        :type excluded_time_ranges: List
        """

        self._excluded_time_ranges = excluded_time_ranges

    @property
    def metric_timezone(self):
        """Gets the metric_timezone of this AnomalyDetectorConfiguration.


        :return: The metric_timezone of this AnomalyDetectorConfiguration.
        :rtype: str
        """
        return self._metric_timezone

    @metric_timezone.setter
    def metric_timezone(self, metric_timezone):
        """Sets the metric_timezone of this AnomalyDetectorConfiguration.


        :param metric_timezone: The metric_timezone of this AnomalyDetectorConfiguration.
        :type metric_timezone: str
        """

        self._metric_timezone = metric_timezone
