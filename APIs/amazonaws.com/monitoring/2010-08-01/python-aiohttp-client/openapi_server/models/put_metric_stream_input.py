# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_stream_output_format import MetricStreamOutputFormat
from openapi_server import util


class PutMetricStreamInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, include_filters: List=None, exclude_filters: List=None, firehose_arn: str=None, role_arn: str=None, output_format: MetricStreamOutputFormat=None, tags: List=None, statistics_configurations: List=None, include_linked_accounts_metrics: bool=None):
        """PutMetricStreamInput - a model defined in OpenAPI

        :param name: The name of this PutMetricStreamInput.
        :param include_filters: The include_filters of this PutMetricStreamInput.
        :param exclude_filters: The exclude_filters of this PutMetricStreamInput.
        :param firehose_arn: The firehose_arn of this PutMetricStreamInput.
        :param role_arn: The role_arn of this PutMetricStreamInput.
        :param output_format: The output_format of this PutMetricStreamInput.
        :param tags: The tags of this PutMetricStreamInput.
        :param statistics_configurations: The statistics_configurations of this PutMetricStreamInput.
        :param include_linked_accounts_metrics: The include_linked_accounts_metrics of this PutMetricStreamInput.
        """
        self.openapi_types = {
            'name': str,
            'include_filters': List,
            'exclude_filters': List,
            'firehose_arn': str,
            'role_arn': str,
            'output_format': MetricStreamOutputFormat,
            'tags': List,
            'statistics_configurations': List,
            'include_linked_accounts_metrics': bool
        }

        self.attribute_map = {
            'name': 'Name',
            'include_filters': 'IncludeFilters',
            'exclude_filters': 'ExcludeFilters',
            'firehose_arn': 'FirehoseArn',
            'role_arn': 'RoleArn',
            'output_format': 'OutputFormat',
            'tags': 'Tags',
            'statistics_configurations': 'StatisticsConfigurations',
            'include_linked_accounts_metrics': 'IncludeLinkedAccountsMetrics'
        }

        self._name = name
        self._include_filters = include_filters
        self._exclude_filters = exclude_filters
        self._firehose_arn = firehose_arn
        self._role_arn = role_arn
        self._output_format = output_format
        self._tags = tags
        self._statistics_configurations = statistics_configurations
        self._include_linked_accounts_metrics = include_linked_accounts_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutMetricStreamInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutMetricStreamInput of this PutMetricStreamInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PutMetricStreamInput.


        :return: The name of this PutMetricStreamInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PutMetricStreamInput.


        :param name: The name of this PutMetricStreamInput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def include_filters(self):
        """Gets the include_filters of this PutMetricStreamInput.


        :return: The include_filters of this PutMetricStreamInput.
        :rtype: List
        """
        return self._include_filters

    @include_filters.setter
    def include_filters(self, include_filters):
        """Sets the include_filters of this PutMetricStreamInput.


        :param include_filters: The include_filters of this PutMetricStreamInput.
        :type include_filters: List
        """

        self._include_filters = include_filters

    @property
    def exclude_filters(self):
        """Gets the exclude_filters of this PutMetricStreamInput.


        :return: The exclude_filters of this PutMetricStreamInput.
        :rtype: List
        """
        return self._exclude_filters

    @exclude_filters.setter
    def exclude_filters(self, exclude_filters):
        """Sets the exclude_filters of this PutMetricStreamInput.


        :param exclude_filters: The exclude_filters of this PutMetricStreamInput.
        :type exclude_filters: List
        """

        self._exclude_filters = exclude_filters

    @property
    def firehose_arn(self):
        """Gets the firehose_arn of this PutMetricStreamInput.


        :return: The firehose_arn of this PutMetricStreamInput.
        :rtype: str
        """
        return self._firehose_arn

    @firehose_arn.setter
    def firehose_arn(self, firehose_arn):
        """Sets the firehose_arn of this PutMetricStreamInput.


        :param firehose_arn: The firehose_arn of this PutMetricStreamInput.
        :type firehose_arn: str
        """
        if firehose_arn is None:
            raise ValueError("Invalid value for `firehose_arn`, must not be `None`")

        self._firehose_arn = firehose_arn

    @property
    def role_arn(self):
        """Gets the role_arn of this PutMetricStreamInput.


        :return: The role_arn of this PutMetricStreamInput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this PutMetricStreamInput.


        :param role_arn: The role_arn of this PutMetricStreamInput.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def output_format(self):
        """Gets the output_format of this PutMetricStreamInput.


        :return: The output_format of this PutMetricStreamInput.
        :rtype: MetricStreamOutputFormat
        """
        return self._output_format

    @output_format.setter
    def output_format(self, output_format):
        """Sets the output_format of this PutMetricStreamInput.


        :param output_format: The output_format of this PutMetricStreamInput.
        :type output_format: MetricStreamOutputFormat
        """
        if output_format is None:
            raise ValueError("Invalid value for `output_format`, must not be `None`")

        self._output_format = output_format

    @property
    def tags(self):
        """Gets the tags of this PutMetricStreamInput.


        :return: The tags of this PutMetricStreamInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PutMetricStreamInput.


        :param tags: The tags of this PutMetricStreamInput.
        :type tags: List
        """

        self._tags = tags

    @property
    def statistics_configurations(self):
        """Gets the statistics_configurations of this PutMetricStreamInput.


        :return: The statistics_configurations of this PutMetricStreamInput.
        :rtype: List
        """
        return self._statistics_configurations

    @statistics_configurations.setter
    def statistics_configurations(self, statistics_configurations):
        """Sets the statistics_configurations of this PutMetricStreamInput.


        :param statistics_configurations: The statistics_configurations of this PutMetricStreamInput.
        :type statistics_configurations: List
        """

        self._statistics_configurations = statistics_configurations

    @property
    def include_linked_accounts_metrics(self):
        """Gets the include_linked_accounts_metrics of this PutMetricStreamInput.


        :return: The include_linked_accounts_metrics of this PutMetricStreamInput.
        :rtype: bool
        """
        return self._include_linked_accounts_metrics

    @include_linked_accounts_metrics.setter
    def include_linked_accounts_metrics(self, include_linked_accounts_metrics):
        """Sets the include_linked_accounts_metrics of this PutMetricStreamInput.


        :param include_linked_accounts_metrics: The include_linked_accounts_metrics of this PutMetricStreamInput.
        :type include_linked_accounts_metrics: bool
        """

        self._include_linked_accounts_metrics = include_linked_accounts_metrics
