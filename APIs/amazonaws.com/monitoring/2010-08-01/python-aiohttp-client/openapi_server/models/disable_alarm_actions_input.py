# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisableAlarmActionsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alarm_names: List=None):
        """DisableAlarmActionsInput - a model defined in OpenAPI

        :param alarm_names: The alarm_names of this DisableAlarmActionsInput.
        """
        self.openapi_types = {
            'alarm_names': List
        }

        self.attribute_map = {
            'alarm_names': 'AlarmNames'
        }

        self._alarm_names = alarm_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisableAlarmActionsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisableAlarmActionsInput of this DisableAlarmActionsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alarm_names(self):
        """Gets the alarm_names of this DisableAlarmActionsInput.


        :return: The alarm_names of this DisableAlarmActionsInput.
        :rtype: List
        """
        return self._alarm_names

    @alarm_names.setter
    def alarm_names(self, alarm_names):
        """Sets the alarm_names of this DisableAlarmActionsInput.


        :param alarm_names: The alarm_names of this DisableAlarmActionsInput.
        :type alarm_names: List
        """
        if alarm_names is None:
            raise ValueError("Invalid value for `alarm_names`, must not be `None`")

        self._alarm_names = alarm_names
