# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetMetricWidgetImageInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_widget: str=None, output_format: str=None):
        """GetMetricWidgetImageInput - a model defined in OpenAPI

        :param metric_widget: The metric_widget of this GetMetricWidgetImageInput.
        :param output_format: The output_format of this GetMetricWidgetImageInput.
        """
        self.openapi_types = {
            'metric_widget': str,
            'output_format': str
        }

        self.attribute_map = {
            'metric_widget': 'MetricWidget',
            'output_format': 'OutputFormat'
        }

        self._metric_widget = metric_widget
        self._output_format = output_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMetricWidgetImageInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMetricWidgetImageInput of this GetMetricWidgetImageInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_widget(self):
        """Gets the metric_widget of this GetMetricWidgetImageInput.


        :return: The metric_widget of this GetMetricWidgetImageInput.
        :rtype: str
        """
        return self._metric_widget

    @metric_widget.setter
    def metric_widget(self, metric_widget):
        """Sets the metric_widget of this GetMetricWidgetImageInput.


        :param metric_widget: The metric_widget of this GetMetricWidgetImageInput.
        :type metric_widget: str
        """
        if metric_widget is None:
            raise ValueError("Invalid value for `metric_widget`, must not be `None`")

        self._metric_widget = metric_widget

    @property
    def output_format(self):
        """Gets the output_format of this GetMetricWidgetImageInput.


        :return: The output_format of this GetMetricWidgetImageInput.
        :rtype: str
        """
        return self._output_format

    @output_format.setter
    def output_format(self, output_format):
        """Sets the output_format of this GetMetricWidgetImageInput.


        :param output_format: The output_format of this GetMetricWidgetImageInput.
        :type output_format: str
        """

        self._output_format = output_format
