# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteDashboardsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dashboard_names: List=None):
        """DeleteDashboardsInput - a model defined in OpenAPI

        :param dashboard_names: The dashboard_names of this DeleteDashboardsInput.
        """
        self.openapi_types = {
            'dashboard_names': List
        }

        self.attribute_map = {
            'dashboard_names': 'DashboardNames'
        }

        self._dashboard_names = dashboard_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteDashboardsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteDashboardsInput of this DeleteDashboardsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dashboard_names(self):
        """Gets the dashboard_names of this DeleteDashboardsInput.


        :return: The dashboard_names of this DeleteDashboardsInput.
        :rtype: List
        """
        return self._dashboard_names

    @dashboard_names.setter
    def dashboard_names(self, dashboard_names):
        """Sets the dashboard_names of this DeleteDashboardsInput.


        :param dashboard_names: The dashboard_names of this DeleteDashboardsInput.
        :type dashboard_names: List
        """
        if dashboard_names is None:
            raise ValueError("Invalid value for `dashboard_names`, must not be `None`")

        self._dashboard_names = dashboard_names
