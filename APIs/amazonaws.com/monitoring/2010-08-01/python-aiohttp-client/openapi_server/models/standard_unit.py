# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StandardUnit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SECONDS = 'Seconds'
    MICROSECONDS = 'Microseconds'
    MILLISECONDS = 'Milliseconds'
    BYTES = 'Bytes'
    KILOBYTES = 'Kilobytes'
    MEGABYTES = 'Megabytes'
    GIGABYTES = 'Gigabytes'
    TERABYTES = 'Terabytes'
    BITS = 'Bits'
    KILOBITS = 'Kilobits'
    MEGABITS = 'Megabits'
    GIGABITS = 'Gigabits'
    TERABITS = 'Terabits'
    PERCENT = 'Percent'
    COUNT = 'Count'
    BYTES_SLASH_SECOND = 'Bytes/Second'
    KILOBYTES_SLASH_SECOND = 'Kilobytes/Second'
    MEGABYTES_SLASH_SECOND = 'Megabytes/Second'
    GIGABYTES_SLASH_SECOND = 'Gigabytes/Second'
    TERABYTES_SLASH_SECOND = 'Terabytes/Second'
    BITS_SLASH_SECOND = 'Bits/Second'
    KILOBITS_SLASH_SECOND = 'Kilobits/Second'
    MEGABITS_SLASH_SECOND = 'Megabits/Second'
    GIGABITS_SLASH_SECOND = 'Gigabits/Second'
    TERABITS_SLASH_SECOND = 'Terabits/Second'
    COUNT_SLASH_SECOND = 'Count/Second'
    NONE = 'None'

    def __init__(self):
        """StandardUnit - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StandardUnit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StandardUnit of this StandardUnit.
        """
        return util.deserialize_model(dikt, cls)
