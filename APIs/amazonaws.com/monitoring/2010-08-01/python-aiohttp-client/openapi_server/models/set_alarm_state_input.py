# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.state_value import StateValue
from openapi_server import util


class SetAlarmStateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alarm_name: str=None, state_value: StateValue=None, state_reason: str=None, state_reason_data: str=None):
        """SetAlarmStateInput - a model defined in OpenAPI

        :param alarm_name: The alarm_name of this SetAlarmStateInput.
        :param state_value: The state_value of this SetAlarmStateInput.
        :param state_reason: The state_reason of this SetAlarmStateInput.
        :param state_reason_data: The state_reason_data of this SetAlarmStateInput.
        """
        self.openapi_types = {
            'alarm_name': str,
            'state_value': StateValue,
            'state_reason': str,
            'state_reason_data': str
        }

        self.attribute_map = {
            'alarm_name': 'AlarmName',
            'state_value': 'StateValue',
            'state_reason': 'StateReason',
            'state_reason_data': 'StateReasonData'
        }

        self._alarm_name = alarm_name
        self._state_value = state_value
        self._state_reason = state_reason
        self._state_reason_data = state_reason_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetAlarmStateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetAlarmStateInput of this SetAlarmStateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alarm_name(self):
        """Gets the alarm_name of this SetAlarmStateInput.


        :return: The alarm_name of this SetAlarmStateInput.
        :rtype: str
        """
        return self._alarm_name

    @alarm_name.setter
    def alarm_name(self, alarm_name):
        """Sets the alarm_name of this SetAlarmStateInput.


        :param alarm_name: The alarm_name of this SetAlarmStateInput.
        :type alarm_name: str
        """
        if alarm_name is None:
            raise ValueError("Invalid value for `alarm_name`, must not be `None`")

        self._alarm_name = alarm_name

    @property
    def state_value(self):
        """Gets the state_value of this SetAlarmStateInput.


        :return: The state_value of this SetAlarmStateInput.
        :rtype: StateValue
        """
        return self._state_value

    @state_value.setter
    def state_value(self, state_value):
        """Sets the state_value of this SetAlarmStateInput.


        :param state_value: The state_value of this SetAlarmStateInput.
        :type state_value: StateValue
        """
        if state_value is None:
            raise ValueError("Invalid value for `state_value`, must not be `None`")

        self._state_value = state_value

    @property
    def state_reason(self):
        """Gets the state_reason of this SetAlarmStateInput.


        :return: The state_reason of this SetAlarmStateInput.
        :rtype: str
        """
        return self._state_reason

    @state_reason.setter
    def state_reason(self, state_reason):
        """Sets the state_reason of this SetAlarmStateInput.


        :param state_reason: The state_reason of this SetAlarmStateInput.
        :type state_reason: str
        """
        if state_reason is None:
            raise ValueError("Invalid value for `state_reason`, must not be `None`")

        self._state_reason = state_reason

    @property
    def state_reason_data(self):
        """Gets the state_reason_data of this SetAlarmStateInput.


        :return: The state_reason_data of this SetAlarmStateInput.
        :rtype: str
        """
        return self._state_reason_data

    @state_reason_data.setter
    def state_reason_data(self, state_reason_data):
        """Sets the state_reason_data of this SetAlarmStateInput.


        :param state_reason_data: The state_reason_data of this SetAlarmStateInput.
        :type state_reason_data: str
        """

        self._state_reason_data = state_reason_data
