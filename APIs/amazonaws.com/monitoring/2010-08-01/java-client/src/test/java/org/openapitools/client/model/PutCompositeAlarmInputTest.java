/*
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PutCompositeAlarmInput
 */
public class PutCompositeAlarmInputTest {
    private final PutCompositeAlarmInput model = new PutCompositeAlarmInput();

    /**
     * Model tests for PutCompositeAlarmInput
     */
    @Test
    public void testPutCompositeAlarmInput() {
        // TODO: test PutCompositeAlarmInput
    }

    /**
     * Test the property 'actionsEnabled'
     */
    @Test
    public void actionsEnabledTest() {
        // TODO: test actionsEnabled
    }

    /**
     * Test the property 'alarmActions'
     */
    @Test
    public void alarmActionsTest() {
        // TODO: test alarmActions
    }

    /**
     * Test the property 'alarmDescription'
     */
    @Test
    public void alarmDescriptionTest() {
        // TODO: test alarmDescription
    }

    /**
     * Test the property 'alarmName'
     */
    @Test
    public void alarmNameTest() {
        // TODO: test alarmName
    }

    /**
     * Test the property 'alarmRule'
     */
    @Test
    public void alarmRuleTest() {
        // TODO: test alarmRule
    }

    /**
     * Test the property 'insufficientDataActions'
     */
    @Test
    public void insufficientDataActionsTest() {
        // TODO: test insufficientDataActions
    }

    /**
     * Test the property 'okActions'
     */
    @Test
    public void okActionsTest() {
        // TODO: test okActions
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'actionsSuppressor'
     */
    @Test
    public void actionsSuppressorTest() {
        // TODO: test actionsSuppressor
    }

    /**
     * Test the property 'actionsSuppressorWaitPeriod'
     */
    @Test
    public void actionsSuppressorWaitPeriodTest() {
        // TODO: test actionsSuppressorWaitPeriod
    }

    /**
     * Test the property 'actionsSuppressorExtensionPeriod'
     */
    @Test
    public void actionsSuppressorExtensionPeriodTest() {
        // TODO: test actionsSuppressorExtensionPeriod
    }

}
