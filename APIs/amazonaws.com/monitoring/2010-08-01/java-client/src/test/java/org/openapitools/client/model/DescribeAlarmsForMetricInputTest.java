/*
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StandardUnit;
import org.openapitools.client.model.Statistic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeAlarmsForMetricInput
 */
public class DescribeAlarmsForMetricInputTest {
    private final DescribeAlarmsForMetricInput model = new DescribeAlarmsForMetricInput();

    /**
     * Model tests for DescribeAlarmsForMetricInput
     */
    @Test
    public void testDescribeAlarmsForMetricInput() {
        // TODO: test DescribeAlarmsForMetricInput
    }

    /**
     * Test the property 'metricName'
     */
    @Test
    public void metricNameTest() {
        // TODO: test metricName
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'statistic'
     */
    @Test
    public void statisticTest() {
        // TODO: test statistic
    }

    /**
     * Test the property 'extendedStatistic'
     */
    @Test
    public void extendedStatisticTest() {
        // TODO: test extendedStatistic
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'period'
     */
    @Test
    public void periodTest() {
        // TODO: test period
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

}
