/*
 * Amazon CloudWatch
 * <p>Amazon CloudWatch monitors your Amazon Web Services (Amazon Web Services) resources and the applications you run on Amazon Web Services in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with Amazon Web Services, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>
 *
 * The version of the OpenAPI document: 2010-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MetricStreamOutputFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetMetricStreamOutput
 */
public class GetMetricStreamOutputTest {
    private final GetMetricStreamOutput model = new GetMetricStreamOutput();

    /**
     * Model tests for GetMetricStreamOutput
     */
    @Test
    public void testGetMetricStreamOutput() {
        // TODO: test GetMetricStreamOutput
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'includeFilters'
     */
    @Test
    public void includeFiltersTest() {
        // TODO: test includeFilters
    }

    /**
     * Test the property 'excludeFilters'
     */
    @Test
    public void excludeFiltersTest() {
        // TODO: test excludeFilters
    }

    /**
     * Test the property 'firehoseArn'
     */
    @Test
    public void firehoseArnTest() {
        // TODO: test firehoseArn
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'lastUpdateDate'
     */
    @Test
    public void lastUpdateDateTest() {
        // TODO: test lastUpdateDate
    }

    /**
     * Test the property 'outputFormat'
     */
    @Test
    public void outputFormatTest() {
        // TODO: test outputFormat
    }

    /**
     * Test the property 'statisticsConfigurations'
     */
    @Test
    public void statisticsConfigurationsTest() {
        // TODO: test statisticsConfigurations
    }

    /**
     * Test the property 'includeLinkedAccountsMetrics'
     */
    @Test
    public void includeLinkedAccountsMetricsTest() {
        // TODO: test includeLinkedAccountsMetrics
    }

}
