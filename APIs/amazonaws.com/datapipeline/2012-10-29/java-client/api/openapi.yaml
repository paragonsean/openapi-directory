openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS Data Pipeline configures and manages a data-driven workflow\
    \ called a pipeline. AWS Data Pipeline handles the details of scheduling and ensuring\
    \ that data dependencies are met so that your application can focus on processing\
    \ the data.</p> <p>AWS Data Pipeline provides a JAR implementation of a task runner\
    \ called AWS Data Pipeline Task Runner. AWS Data Pipeline Task Runner provides\
    \ logic for common data management scenarios, such as performing database queries\
    \ and running data analysis using Amazon Elastic MapReduce (Amazon EMR). You can\
    \ use AWS Data Pipeline Task Runner as your task runner, or you can write your\
    \ own task runner to provide custom data management.</p> <p>AWS Data Pipeline\
    \ implements two main sets of functionality. Use the first set to create a pipeline\
    \ and define data sources, schedules, dependencies, and the transforms to be performed\
    \ on the data. Use the second set in your task runner application to receive the\
    \ next task ready for processing. The logic for performing the task, such as querying\
    \ the data, running data analysis, or converting the data from one format to another,\
    \ is contained within the task runner. The task runner performs the task assigned\
    \ to it by the web service, reporting progress to the web service as it does so.\
    \ When the task is done, the task runner reports the final success or failure\
    \ of the task to the web service.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Data Pipeline
  version: 2012-10-29
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: datapipeline
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/datapipeline-2012-10-29.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/datapipeline/
servers:
- description: The AWS Data Pipeline multi-region endpoint
  url: "http://datapipeline.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Data Pipeline multi-region endpoint
  url: "https://datapipeline.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Data Pipeline endpoint for China (Beijing) and China (Ningxia)
  url: "http://datapipeline.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Data Pipeline endpoint for China (Beijing) and China (Ningxia)
  url: "https://datapipeline.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=DataPipeline.ActivatePipeline:
    post:
      description: "<p>Validates the specified pipeline and starts processing pipeline\
        \ tasks. If the pipeline does not pass validation, activation fails.</p> <p>If\
        \ you need to pause the pipeline to investigate an issue with a component,\
        \ such as a data source or script, call <a>DeactivatePipeline</a>.</p> <p>To\
        \ activate a finished pipeline, modify the end date for the pipeline and then\
        \ activate it.</p>"
      operationId: ActivatePipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.ActivatePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivatePipelineInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.AddTags:
    post:
      description: Adds or modifies tags for the specified pipeline.
      operationId: AddTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.AddTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.CreatePipeline:
    post:
      description: "Creates a new, empty pipeline. Use <a>PutPipelineDefinition</a>\
        \ to populate the pipeline."
      operationId: CreatePipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.CreatePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.DeactivatePipeline:
    post:
      description: "<p>Deactivates the specified running pipeline. The pipeline is\
        \ set to the <code>DEACTIVATING</code> state until the deactivation process\
        \ completes.</p> <p>To resume a deactivated pipeline, use <a>ActivatePipeline</a>.\
        \ By default, the pipeline resumes from the last completed execution. Optionally,\
        \ you can specify the date and time to resume the pipeline.</p>"
      operationId: DeactivatePipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.DeactivatePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivatePipelineInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivatePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.DeletePipeline:
    post:
      description: "<p>Deletes a pipeline, its pipeline definition, and its run history.\
        \ AWS Data Pipeline attempts to cancel instances associated with the pipeline\
        \ that are currently being processed by task runners.</p> <p>Deleting a pipeline\
        \ cannot be undone. You cannot query or restore a deleted pipeline. To temporarily\
        \ pause a pipeline instead of deleting it, call <a>SetStatus</a> with the\
        \ status set to <code>PAUSE</code> on individual components. Components that\
        \ are paused by <a>SetStatus</a> can be resumed.</p>"
      operationId: DeletePipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.DeletePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePipelineInput'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.DescribeObjects:
    post:
      description: Gets the object definitions for a set of objects associated with
        the pipeline. Object definitions are composed of a set of fields that define
        the properties of the object.
      operationId: DescribeObjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.DescribeObjects
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeObjectsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeObjectsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.DescribePipelines:
    post:
      description: "<p>Retrieves metadata about one or more pipelines. The information\
        \ retrieved includes the name of the pipeline, the pipeline identifier, its\
        \ current state, and the user account that owns the pipeline. Using account\
        \ credentials, you can retrieve metadata about pipelines that you or your\
        \ IAM users have created. If you are using an IAM user account, you can retrieve\
        \ metadata about only those pipelines for which you have read permissions.</p>\
        \ <p>To retrieve the full pipeline definition instead of metadata about the\
        \ pipeline, call <a>GetPipelineDefinition</a>.</p>"
      operationId: DescribePipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.DescribePipelines
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePipelinesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelinesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.EvaluateExpression:
    post:
      description: "Task runners call <code>EvaluateExpression</code> to evaluate\
        \ a string in the context of the specified object. For example, a task runner\
        \ can evaluate SQL queries stored in Amazon S3."
      operationId: EvaluateExpression
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.EvaluateExpression
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateExpressionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateExpressionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundException'
          description: TaskNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.GetPipelineDefinition:
    post:
      description: Gets the definition of the specified pipeline. You can call <code>GetPipelineDefinition</code>
        to retrieve the pipeline definition that you provided using <a>PutPipelineDefinition</a>.
      operationId: GetPipelineDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.GetPipelineDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineDefinitionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineDefinitionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.ListPipelines:
    post:
      description: Lists the pipeline identifiers for all active pipelines that you
        have permission to access.
      operationId: ListPipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.ListPipelines
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelinesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.PollForTask:
    post:
      description: "<p>Task runners call <code>PollForTask</code> to receive a task\
        \ to perform from AWS Data Pipeline. The task runner specifies which tasks\
        \ it can perform by setting a value for the <code>workerGroup</code> parameter.\
        \ The task returned can come from any of the pipelines that match the <code>workerGroup</code>\
        \ value passed in by the task runner and that was launched using the IAM user\
        \ credentials specified by the task runner.</p> <p>If tasks are ready in the\
        \ work queue, <code>PollForTask</code> returns a response immediately. If\
        \ no tasks are available in the queue, <code>PollForTask</code> uses long-polling\
        \ and holds on to a poll connection for up to a 90 seconds, during which time\
        \ the first newly scheduled task is handed to the task runner. To accomodate\
        \ this, set the socket timeout in your task runner to 90 seconds. The task\
        \ runner should not call <code>PollForTask</code> again on the same <code>workerGroup</code>\
        \ until it receives a response, and this can take up to 90 seconds. </p>"
      operationId: PollForTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.PollForTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForTaskInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollForTaskOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundException'
          description: TaskNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.PutPipelineDefinition:
    post:
      description: "<p>Adds tasks, schedules, and preconditions to the specified pipeline.\
        \ You can use <code>PutPipelineDefinition</code> to populate a new pipeline.</p>\
        \ <p> <code>PutPipelineDefinition</code> also validates the configuration\
        \ as it adds it to the pipeline. Changes to the pipeline are saved unless\
        \ one of the following three validation errors exists in the pipeline. </p>\
        \ <ol> <li>An object is missing a name or identifier field.</li> <li>A string\
        \ or reference field is empty.</li> <li>The number of objects in the pipeline\
        \ exceeds the maximum allowed objects.</li> <li>The pipeline is in a FINISHED\
        \ state.</li> </ol> <p> Pipeline object definitions are passed to the <code>PutPipelineDefinition</code>\
        \ action and returned by the <a>GetPipelineDefinition</a> action. </p>"
      operationId: PutPipelineDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.PutPipelineDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPipelineDefinitionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPipelineDefinitionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.QueryObjects:
    post:
      description: Queries the specified pipeline for the names of objects that match
        the specified set of conditions.
      operationId: QueryObjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.QueryObjects
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryObjectsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryObjectsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.RemoveTags:
    post:
      description: Removes existing tags from the specified pipeline.
      operationId: RemoveTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.RemoveTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.ReportTaskProgress:
    post:
      description: "<p>Task runners call <code>ReportTaskProgress</code> when assigned\
        \ a task to acknowledge that it has the task. If the web service does not\
        \ receive this acknowledgement within 2 minutes, it assigns the task in a\
        \ subsequent <a>PollForTask</a> call. After this initial acknowledgement,\
        \ the task runner only needs to report progress every 15 minutes to maintain\
        \ its ownership of the task. You can change this reporting time from 15 minutes\
        \ by specifying a <code>reportProgressTimeout</code> field in your pipeline.</p>\
        \ <p>If a task runner does not report its status after 5 minutes, AWS Data\
        \ Pipeline assumes that the task runner is unable to process the task and\
        \ reassigns the task in a subsequent response to <a>PollForTask</a>. Task\
        \ runners should call <code>ReportTaskProgress</code> every 60 seconds.</p>"
      operationId: ReportTaskProgress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.ReportTaskProgress
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTaskProgressInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTaskProgressOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundException'
          description: TaskNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.ReportTaskRunnerHeartbeat:
    post:
      description: "Task runners call <code>ReportTaskRunnerHeartbeat</code> every\
        \ 15 minutes to indicate that they are operational. If the AWS Data Pipeline\
        \ Task Runner is launched on a resource managed by AWS Data Pipeline, the\
        \ web service can use this call to detect when the task runner application\
        \ has failed and restart a new instance."
      operationId: ReportTaskRunnerHeartbeat
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.ReportTaskRunnerHeartbeat
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTaskRunnerHeartbeatInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTaskRunnerHeartbeatOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.SetStatus:
    post:
      description: "Requests that the status of the specified physical or logical\
        \ pipeline objects be updated in the specified pipeline. This update might\
        \ not occur immediately, but is eventually consistent. The status that can\
        \ be set depends on the type of object (for example, DataNode or Activity).\
        \ You cannot perform this operation on <code>FINISHED</code> pipelines and\
        \ attempting to do so returns <code>InvalidRequestException</code>."
      operationId: SetStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.SetStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetStatusInput'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.SetTaskStatus:
    post:
      description: Task runners call <code>SetTaskStatus</code> to notify AWS Data
        Pipeline that a task is completed and provide information about the final
        status. A task runner makes this call regardless of whether the task was sucessful.
        A task runner does not need to call <code>SetTaskStatus</code> for tasks that
        are canceled by the web service during a call to <a>ReportTaskProgress</a>.
      operationId: SetTaskStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.SetTaskStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTaskStatusInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTaskStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundException'
          description: TaskNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DataPipeline.ValidatePipelineDefinition:
    post:
      description: Validates the specified pipeline definition to ensure that it is
        well formed and can be run without error.
      operationId: ValidatePipelineDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DataPipeline.ValidatePipelineDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePipelineDefinitionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePipelineDefinitionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDeletedException'
          description: PipelineDeletedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ActivatePipelineOutput:
      description: Contains the output of ActivatePipeline.
      properties: {}
      type: object
    ActivatePipelineInput:
      description: Contains the parameters for ActivatePipeline.
      example:
        startTimestamp: ""
        pipelineId: ""
        parameterValues: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        parameterValues:
          allOf:
          - $ref: '#/components/schemas/ParameterValueList'
          - description: A list of parameter values to pass to the pipeline at activation.
        startTimestamp:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time to resume the pipeline. By default, the\
              \ pipeline resumes from the last completed execution."
      required:
      - pipelineId
      title: ActivatePipelineInput
      type: object
    PipelineNotFoundException: {}
    PipelineDeletedException: {}
    InternalServiceError: {}
    InvalidRequestException: {}
    AddTagsOutput:
      description: Contains the output of AddTags.
      properties: {}
      type: object
    AddTagsInput:
      description: Contains the parameters for AddTags.
      example:
        pipelineId: ""
        tags: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        tags:
          allOf:
          - $ref: '#/components/schemas/tagList'
          - description: "The tags to add, as key/value pairs."
      required:
      - pipelineId
      - tags
      title: AddTagsInput
      type: object
    CreatePipelineOutput:
      description: Contains the output of CreatePipeline.
      example:
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: "The ID that AWS Data Pipeline assigns the newly created\
              \ pipeline. For example, <code>df-06372391ZG65EXAMPLE</code>."
      required:
      - pipelineId
      type: object
    CreatePipelineInput:
      description: Contains the parameters for CreatePipeline.
      example:
        name: ""
        description: ""
        uniqueId: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: "The name for the pipeline. You can use the same name for\
              \ multiple pipelines associated with your AWS account, because AWS Data\
              \ Pipeline assigns each pipeline a unique pipeline identifier."
        uniqueId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: "A unique identifier. This identifier is not the same as\
              \ the pipeline identifier assigned by AWS Data Pipeline. You are responsible\
              \ for defining the format and ensuring the uniqueness of this identifier.\
              \ You use this parameter to ensure idempotency during repeated calls\
              \ to <code>CreatePipeline</code>. For example, if the first call to\
              \ <code>CreatePipeline</code> does not succeed, you can pass in the\
              \ same unique identifier and pipeline name combination on a subsequent\
              \ call to <code>CreatePipeline</code>. <code>CreatePipeline</code> ensures\
              \ that if a pipeline already exists with the same name and unique identifier,\
              \ a new pipeline is not created. Instead, you'll receive the pipeline\
              \ identifier from the previous attempt. The uniqueness of the name and\
              \ unique identifier combination is scoped to the AWS account or IAM\
              \ user credentials."
        description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The description for the pipeline.
        tags:
          allOf:
          - $ref: '#/components/schemas/tagList'
          - description: "A list of tags to associate with the pipeline at creation.\
              \ Tags let you control access to pipelines. For more information, see\
              \ <a href=\"http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html\"\
              >Controlling User Access to Pipelines</a> in the <i>AWS Data Pipeline\
              \ Developer Guide</i>."
      required:
      - name
      - uniqueId
      title: CreatePipelineInput
      type: object
    DeactivatePipelineOutput:
      description: Contains the output of DeactivatePipeline.
      properties: {}
      type: object
    DeactivatePipelineInput:
      description: Contains the parameters for DeactivatePipeline.
      example:
        cancelActive: ""
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        cancelActive:
          allOf:
          - $ref: '#/components/schemas/cancelActive'
          - description: "Indicates whether to cancel any running objects. The default\
              \ is true, which sets the state of any running objects to <code>CANCELED</code>.\
              \ If this value is false, the pipeline is deactivated after all running\
              \ objects finish."
      required:
      - pipelineId
      title: DeactivatePipelineInput
      type: object
    DeletePipelineInput:
      description: Contains the parameters for DeletePipeline.
      example:
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
      required:
      - pipelineId
      title: DeletePipelineInput
      type: object
    DescribeObjectsOutput:
      description: Contains the output of DescribeObjects.
      example:
        hasMoreResults: ""
        pipelineObjects: ""
        marker: ""
      properties:
        pipelineObjects:
          allOf:
          - $ref: '#/components/schemas/PipelineObjectList'
          - description: An array of object definitions.
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the next page of results. To view\
              \ the next page of results, call <code>DescribeObjects</code> again\
              \ with this marker value. If the value is null, there are no more results."
        hasMoreResults:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether there are more results to return.
      required:
      - pipelineObjects
      type: object
    DescribeObjectsInput:
      description: Contains the parameters for DescribeObjects.
      example:
        evaluateExpressions: ""
        marker: ""
        pipelineId: ""
        objectIds: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline that contains the object definitions.
        objectIds:
          allOf:
          - $ref: '#/components/schemas/idList'
          - description: The IDs of the pipeline objects that contain the definitions
              to be described. You can pass as many as 25 identifiers in a single
              call to <code>DescribeObjects</code>.
        evaluateExpressions:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether any expressions in the object should be
              evaluated when the object descriptions are returned.
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the results to be returned. For the\
              \ first call, this value should be empty. As long as there are more\
              \ results, continue to call <code>DescribeObjects</code> with the marker\
              \ value from the previous call to retrieve the next set of results."
      required:
      - objectIds
      - pipelineId
      title: DescribeObjectsInput
      type: object
    DescribePipelinesOutput:
      description: Contains the output of DescribePipelines.
      example:
        pipelineDescriptionList: ""
      properties:
        pipelineDescriptionList:
          allOf:
          - $ref: '#/components/schemas/PipelineDescriptionList'
          - description: An array of descriptions for the specified pipelines.
      required:
      - pipelineDescriptionList
      type: object
    DescribePipelinesInput:
      description: Contains the parameters for DescribePipelines.
      example:
        pipelineIds: ""
      properties:
        pipelineIds:
          allOf:
          - $ref: '#/components/schemas/idList'
          - description: "The IDs of the pipelines to describe. You can pass as many\
              \ as 25 identifiers in a single call. To obtain pipeline IDs, call <a>ListPipelines</a>."
      required:
      - pipelineIds
      title: DescribePipelinesInput
      type: object
    EvaluateExpressionOutput:
      description: Contains the output of EvaluateExpression.
      example:
        evaluatedExpression: ""
      properties:
        evaluatedExpression:
          allOf:
          - $ref: '#/components/schemas/longString'
          - description: The evaluated expression.
      required:
      - evaluatedExpression
      type: object
    EvaluateExpressionInput:
      description: Contains the parameters for EvaluateExpression.
      example:
        expression: ""
        objectId: ""
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        objectId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the object.
        expression:
          allOf:
          - $ref: '#/components/schemas/longString'
          - description: The expression to evaluate.
      required:
      - expression
      - objectId
      - pipelineId
      title: EvaluateExpressionInput
      type: object
    TaskNotFoundException: {}
    GetPipelineDefinitionOutput:
      description: Contains the output of GetPipelineDefinition.
      example:
        pipelineObjects: ""
        parameterObjects: ""
        parameterValues: ""
      properties:
        pipelineObjects:
          allOf:
          - $ref: '#/components/schemas/PipelineObjectList'
          - description: The objects defined in the pipeline.
        parameterObjects:
          allOf:
          - $ref: '#/components/schemas/ParameterObjectList'
          - description: The parameter objects used in the pipeline definition.
        parameterValues:
          allOf:
          - $ref: '#/components/schemas/ParameterValueList'
          - description: The parameter values used in the pipeline definition.
      type: object
    GetPipelineDefinitionInput:
      description: Contains the parameters for GetPipelineDefinition.
      example:
        version: ""
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        version:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The version of the pipeline definition to retrieve. Set this
              parameter to <code>latest</code> (default) to use the last definition
              saved to the pipeline or <code>active</code> to use the last definition
              that was activated.
      required:
      - pipelineId
      title: GetPipelineDefinitionInput
      type: object
    ListPipelinesOutput:
      description: Contains the output of ListPipelines.
      example:
        hasMoreResults: ""
        marker: ""
        pipelineIdList: ""
      properties:
        pipelineIdList:
          allOf:
          - $ref: '#/components/schemas/pipelineList'
          - description: "The pipeline identifiers. If you require additional information\
              \ about the pipelines, you can use these identifiers to call <a>DescribePipelines</a>\
              \ and <a>GetPipelineDefinition</a>."
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the next page of results. To view\
              \ the next page of results, call <code>ListPipelinesOutput</code> again\
              \ with this marker value. If the value is null, there are no more results."
        hasMoreResults:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether there are more results that can be obtained
              by a subsequent call.
      required:
      - pipelineIdList
      type: object
    ListPipelinesInput:
      description: Contains the parameters for ListPipelines.
      example:
        marker: ""
      properties:
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the results to be returned. For the\
              \ first call, this value should be empty. As long as there are more\
              \ results, continue to call <code>ListPipelines</code> with the marker\
              \ value from the previous call to retrieve the next set of results."
      title: ListPipelinesInput
      type: object
    PollForTaskOutput:
      description: Contains the output of PollForTask.
      example:
        taskObject:
          objects: ""
          taskId: ""
          pipelineId: ""
          attemptId: ""
      properties:
        taskObject:
          $ref: '#/components/schemas/PollForTaskOutput_taskObject'
      type: object
    PollForTaskInput:
      description: Contains the parameters for PollForTask.
      example:
        hostname: ""
        instanceIdentity:
          signature: ""
          document: ""
        workerGroup: ""
      properties:
        workerGroup:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The type of task the task runner is configured to accept\
              \ and process. The worker group is set as a field on objects in the\
              \ pipeline when they are created. You can only specify a single value\
              \ for <code>workerGroup</code> in the call to <code>PollForTask</code>.\
              \ There are no wildcard values permitted in <code>workerGroup</code>;\
              \ the string must be an exact, case-sensitive, match."
        hostname:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The public DNS name of the calling task runner.
        instanceIdentity:
          $ref: '#/components/schemas/PollForTaskInput_instanceIdentity'
      required:
      - workerGroup
      title: PollForTaskInput
      type: object
    PutPipelineDefinitionOutput:
      description: Contains the output of PutPipelineDefinition.
      example:
        validationWarnings: ""
        validationErrors: ""
        errored: ""
      properties:
        validationErrors:
          allOf:
          - $ref: '#/components/schemas/ValidationErrors'
          - description: The validation errors that are associated with the objects
              defined in <code>pipelineObjects</code>.
        validationWarnings:
          allOf:
          - $ref: '#/components/schemas/ValidationWarnings'
          - description: The validation warnings that are associated with the objects
              defined in <code>pipelineObjects</code>.
        errored:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "Indicates whether there were validation errors, and the\
              \ pipeline definition is stored but cannot be activated until you correct\
              \ the pipeline and call <code>PutPipelineDefinition</code> to commit\
              \ the corrected pipeline."
      required:
      - errored
      type: object
    PutPipelineDefinitionInput:
      description: Contains the parameters for PutPipelineDefinition.
      example:
        pipelineObjects: ""
        pipelineId: ""
        parameterObjects: ""
        parameterValues: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        pipelineObjects:
          allOf:
          - $ref: '#/components/schemas/PipelineObjectList'
          - description: The objects that define the pipeline. These objects overwrite
              the existing pipeline definition.
        parameterObjects:
          allOf:
          - $ref: '#/components/schemas/ParameterObjectList'
          - description: The parameter objects used with the pipeline.
        parameterValues:
          allOf:
          - $ref: '#/components/schemas/ParameterValueList'
          - description: The parameter values used with the pipeline.
      required:
      - pipelineId
      - pipelineObjects
      title: PutPipelineDefinitionInput
      type: object
    QueryObjectsOutput:
      description: Contains the output of QueryObjects.
      example:
        hasMoreResults: ""
        marker: ""
        ids: ""
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/idList'
          - description: The identifiers that match the query selectors.
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the next page of results. To view\
              \ the next page of results, call <code>QueryObjects</code> again with\
              \ this marker value. If the value is null, there are no more results."
        hasMoreResults:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether there are more results that can be obtained
              by a subsequent call.
      type: object
    QueryObjectsInput:
      description: Contains the parameters for QueryObjects.
      example:
        sphere: ""
        marker: ""
        query:
          selectors: ""
        limit: ""
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        query:
          $ref: '#/components/schemas/QueryObjectsInput_query'
        sphere:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Indicates whether the query applies to components or instances.\
              \ The possible values are: <code>COMPONENT</code>, <code>INSTANCE</code>,\
              \ and <code>ATTEMPT</code>."
        marker:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The starting point for the results to be returned. For the\
              \ first call, this value should be empty. As long as there are more\
              \ results, continue to call <code>QueryObjects</code> with the marker\
              \ value from the previous call to retrieve the next set of results."
        limit:
          allOf:
          - $ref: '#/components/schemas/int'
          - description: 'The maximum number of object names that <code>QueryObjects</code>
              will return in a single call. The default value is 100. '
      required:
      - pipelineId
      - sphere
      title: QueryObjectsInput
      type: object
    RemoveTagsOutput:
      description: Contains the output of RemoveTags.
      properties: {}
      type: object
    RemoveTagsInput:
      description: Contains the parameters for RemoveTags.
      example:
        tagKeys: ""
        pipelineId: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: The keys of the tags to remove.
      required:
      - pipelineId
      - tagKeys
      title: RemoveTagsInput
      type: object
    ReportTaskProgressOutput:
      description: Contains the output of ReportTaskProgress.
      example:
        canceled: ""
      properties:
        canceled:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "If true, the calling task runner should cancel processing\
              \ of the task. The task runner does not need to call <a>SetTaskStatus</a>\
              \ for canceled tasks."
      required:
      - canceled
      type: object
    ReportTaskProgressInput:
      description: Contains the parameters for ReportTaskProgress.
      example:
        fields: ""
        taskId: ""
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/taskId'
          - description: The ID of the task assigned to the task runner. This value
              is provided in the response for <a>PollForTask</a>.
        fields:
          allOf:
          - $ref: '#/components/schemas/fieldList'
          - description: Key-value pairs that define the properties of the ReportTaskProgressInput
              object.
      required:
      - taskId
      title: ReportTaskProgressInput
      type: object
    ReportTaskRunnerHeartbeatOutput:
      description: Contains the output of ReportTaskRunnerHeartbeat.
      example:
        terminate: ""
      properties:
        terminate:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether the calling task runner should terminate.
      required:
      - terminate
      type: object
    ReportTaskRunnerHeartbeatInput:
      description: Contains the parameters for ReportTaskRunnerHeartbeat.
      example:
        taskrunnerId: ""
        hostname: ""
        workerGroup: ""
      properties:
        taskrunnerId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: "The ID of the task runner. This value should be unique across\
              \ your AWS account. In the case of AWS Data Pipeline Task Runner launched\
              \ on a resource managed by AWS Data Pipeline, the web service provides\
              \ a unique identifier when it launches the application. If you have\
              \ written a custom task runner, you should assign a unique identifier\
              \ for the task runner."
        workerGroup:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The type of task the task runner is configured to accept\
              \ and process. The worker group is set as a field on objects in the\
              \ pipeline when they are created. You can only specify a single value\
              \ for <code>workerGroup</code>. There are no wildcard values permitted\
              \ in <code>workerGroup</code>; the string must be an exact, case-sensitive,\
              \ match."
        hostname:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The public DNS name of the task runner.
      required:
      - taskrunnerId
      title: ReportTaskRunnerHeartbeatInput
      type: object
    SetStatusInput:
      description: Contains the parameters for SetStatus.
      example:
        pipelineId: ""
        objectIds: ""
        status: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline that contains the objects.
        objectIds:
          allOf:
          - $ref: '#/components/schemas/idList'
          - description: "The IDs of the objects. The corresponding objects can be\
              \ either physical or components, but not a mix of both types."
        status:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The status to be set on all the objects specified in <code>objectIds</code>.\
              \ For components, use <code>PAUSE</code> or <code>RESUME</code>. For\
              \ instances, use <code>TRY_CANCEL</code>, <code>RERUN</code>, or <code>MARK_FINISHED</code>."
      required:
      - objectIds
      - pipelineId
      - status
      title: SetStatusInput
      type: object
    SetTaskStatusOutput:
      description: Contains the output of SetTaskStatus.
      properties: {}
      type: object
    SetTaskStatusInput:
      description: Contains the parameters for SetTaskStatus.
      example:
        errorStackTrace: ""
        errorMessage: ""
        errorId: ""
        taskId: ""
        taskStatus: ""
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/taskId'
          - description: The ID of the task assigned to the task runner. This value
              is provided in the response for <a>PollForTask</a>.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/TaskStatus'
          - description: "If <code>FINISHED</code>, the task successfully completed.\
              \ If <code>FAILED</code>, the task ended unsuccessfully. Preconditions\
              \ use false."
        errorId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "If an error occurred during the task, this value specifies\
              \ the error code. This value is set on the physical attempt object.\
              \ It is used to display error information to the user. It should not\
              \ start with string \"Service_\" which is reserved by the system."
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          - description: "If an error occurred during the task, this value specifies\
              \ a text description of the error. This value is set on the physical\
              \ attempt object. It is used to display error information to the user.\
              \ The web service does not parse this value."
        errorStackTrace:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "If an error occurred during the task, this value specifies\
              \ the stack trace associated with the error. This value is set on the\
              \ physical attempt object. It is used to display error information to\
              \ the user. The web service does not parse this value."
      required:
      - taskId
      - taskStatus
      title: SetTaskStatusInput
      type: object
    ValidatePipelineDefinitionOutput:
      description: Contains the output of ValidatePipelineDefinition.
      example:
        validationWarnings: ""
        validationErrors: ""
        errored: ""
      properties:
        validationErrors:
          allOf:
          - $ref: '#/components/schemas/ValidationErrors'
          - description: Any validation errors that were found.
        validationWarnings:
          allOf:
          - $ref: '#/components/schemas/ValidationWarnings'
          - description: Any validation warnings that were found.
        errored:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether there were validation errors.
      required:
      - errored
      type: object
    ValidatePipelineDefinitionInput:
      description: Contains the parameters for ValidatePipelineDefinition.
      example:
        pipelineObjects: ""
        pipelineId: ""
        parameterObjects: ""
        parameterValues: ""
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline.
        pipelineObjects:
          allOf:
          - $ref: '#/components/schemas/PipelineObjectList'
          - description: The objects that define the pipeline changes to validate
              against the pipeline.
        parameterObjects:
          allOf:
          - $ref: '#/components/schemas/ParameterObjectList'
          - description: The parameter objects used with the pipeline.
        parameterValues:
          allOf:
          - $ref: '#/components/schemas/ParameterValueList'
          - description: The parameter values used with the pipeline.
      required:
      - pipelineId
      - pipelineObjects
      title: ValidatePipelineDefinitionInput
      type: object
    id:
      maxLength: 1024
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ParameterValueList:
      items:
        $ref: '#/components/schemas/ParameterValue'
      type: array
    timestamp:
      format: date-time
      type: string
    tagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 10
      minItems: 0
      type: array
    string:
      maxLength: 1024
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    cancelActive:
      type: boolean
    idList:
      items:
        $ref: '#/components/schemas/id'
      type: array
    boolean:
      type: boolean
    PipelineObjectList:
      items:
        $ref: '#/components/schemas/PipelineObject'
      type: array
    PipelineDescriptionList:
      items:
        $ref: '#/components/schemas/PipelineDescription'
      type: array
    longString:
      maxLength: 20971520
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    fieldNameString:
      maxLength: 256
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    fieldStringValue:
      maxLength: 10240
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    Field:
      description: A key-value pair that describes a property of a pipeline object.
        The value is specified as either a string value (<code>StringValue</code>)
        or a reference to another object (<code>RefValue</code>) but not as both.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/fieldNameString'
          - description: The field identifier.
        stringValue:
          allOf:
          - $ref: '#/components/schemas/fieldStringValue'
          - description: "The field value, expressed as a String."
        refValue:
          allOf:
          - $ref: '#/components/schemas/fieldNameString'
          - description: "The field value, expressed as the identifier of another\
              \ object."
      required:
      - key
      type: object
    ParameterObjectList:
      items:
        $ref: '#/components/schemas/ParameterObject'
      type: array
    InstanceIdentity:
      description: "<p><p>Identity information for the EC2 instance that is hosting\
        \ the task runner. You can get this value by calling a metadata URI from the\
        \ EC2 instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\
        >Instance Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide.</i>\
        \ Passing in this value proves that your task runner is running on an EC2\
        \ instance, and ensures the proper AWS Data Pipeline service charges are applied\
        \ to your pipeline.</p></p>"
      properties:
        document:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A description of an EC2 instance that is generated when the
              instance is launched and exposed to the instance via the instance metadata
              service in the form of a JSON representation of an object.
        signature:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A signature which can be used to verify the accuracy and
              authenticity of the information provided in the instance identity document.
      type: object
    pipelineList:
      items:
        $ref: '#/components/schemas/PipelineIdName'
      type: array
    OperatorType:
      enum:
      - EQ
      - REF_EQ
      - LE
      - GE
      - BETWEEN
      type: string
    stringList:
      items:
        $ref: '#/components/schemas/string'
      type: array
    Operator:
      description: Contains a logical operation for comparing the value of a field
        with a specified value.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OperatorType'
          - description: "<p> The logical operation to be performed: equal (<code>EQ</code>),\
              \ equal reference (<code>REF_EQ</code>), less than or equal (<code>LE</code>),\
              \ greater than or equal (<code>GE</code>), or between (<code>BETWEEN</code>).\
              \ Equal reference (<code>REF_EQ</code>) can be used only with reference\
              \ fields. The other comparison types can be used only with String fields.\
              \ The comparison types you can use apply only to certain object fields,\
              \ as detailed below. </p> <p> The comparison operators EQ and REF_EQ\
              \ act on the following fields: </p> <ul> <li>name</li> <li>@sphere</li>\
              \ <li>parent</li> <li>@componentParent</li> <li>@instanceParent</li>\
              \ <li>@status</li> <li>@scheduledStartTime</li> <li>@scheduledEndTime</li>\
              \ <li>@actualStartTime</li> <li>@actualEndTime</li> </ul> <p> The comparison\
              \ operators <code>GE</code>, <code>LE</code>, and <code>BETWEEN</code>\
              \ act on the following fields: </p> <ul> <li>@scheduledStartTime</li>\
              \ <li>@scheduledEndTime</li> <li>@actualStartTime</li> <li>@actualEndTime</li>\
              \ </ul> <p>Note that fields beginning with the at sign (@) are read-only\
              \ and set by the web service. When you name fields, you should choose\
              \ names containing only alpha-numeric values, as symbols may be reserved\
              \ by AWS Data Pipeline. User-defined fields that you add to a pipeline\
              \ should prefix their name with the string \"my\".</p>"
        values:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: The value that the actual field value will be compared with.
      type: object
    attributeNameString:
      maxLength: 256
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    attributeValueString:
      maxLength: 10240
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ParameterAttribute:
      description: The attributes allowed or specified with a parameter object.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/attributeNameString'
          - description: The field identifier.
        stringValue:
          allOf:
          - $ref: '#/components/schemas/attributeValueString'
          - description: "The field value, expressed as a String."
      required:
      - key
      - stringValue
      type: object
    ParameterAttributeList:
      items:
        $ref: '#/components/schemas/ParameterAttribute'
      type: array
    ParameterObject:
      description: Contains information about a parameter object.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/fieldNameString'
          - description: 'The ID of the parameter object. '
        attributes:
          allOf:
          - $ref: '#/components/schemas/ParameterAttributeList'
          - description: The attributes of the parameter object.
      required:
      - attributes
      - id
      type: object
    ParameterValue:
      description: 'A value or list of parameter values. '
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/fieldNameString'
          - description: The ID of the parameter value.
        stringValue:
          allOf:
          - $ref: '#/components/schemas/fieldStringValue'
          - description: "The field value, expressed as a String."
      required:
      - id
      - stringValue
      type: object
    fieldList:
      items:
        $ref: '#/components/schemas/Field'
      type: array
    PipelineDescription:
      description: Contains pipeline metadata.
      properties:
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The pipeline identifier that was assigned by AWS Data Pipeline.
              This is a string of the form <code>df-297EG78HU43EEXAMPLE</code>.
        name:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The name of the pipeline.
        fields:
          allOf:
          - $ref: '#/components/schemas/fieldList'
          - description: "A list of read-only fields that contain metadata about the\
              \ pipeline: @userId, @accountId, and @pipelineState."
        description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Description of the pipeline.
        tags:
          allOf:
          - $ref: '#/components/schemas/tagList'
          - description: "A list of tags to associated with a pipeline. Tags let you\
              \ control access to pipelines. For more information, see <a href=\"\
              http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html\"\
              >Controlling User Access to Pipelines</a> in the <i>AWS Data Pipeline\
              \ Developer Guide</i>."
      required:
      - fields
      - name
      - pipelineId
      type: object
    PipelineIdName:
      description: Contains the name and identifier of a pipeline.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline that was assigned by AWS Data Pipeline.
              This is a string of the form <code>df-297EG78HU43EEXAMPLE</code>.
        name:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The name of the pipeline.
      type: object
    PipelineObject:
      description: "Contains information about a pipeline object. This can be a logical,\
        \ physical, or physical attempt pipeline object. The complete set of components\
        \ of a pipeline defines the pipeline."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the object.
        name:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The name of the object.
        fields:
          allOf:
          - $ref: '#/components/schemas/fieldList'
          - description: Key-value pairs that define the properties of the object.
      required:
      - fields
      - id
      - name
      type: object
    PipelineObjectMap:
      additionalProperties:
        $ref: '#/components/schemas/PipelineObject'
      type: object
    TaskObject:
      description: Contains information about a pipeline task that is assigned to
        a task runner.
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/taskId'
          - description: An internal identifier for the task. This ID is passed to
              the <a>SetTaskStatus</a> and <a>ReportTaskProgress</a> actions.
        pipelineId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline that provided the task.
        attemptId:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The ID of the pipeline task attempt object. AWS Data Pipeline
              uses this value to track how many times a task is attempted.
        objects:
          allOf:
          - $ref: '#/components/schemas/PipelineObjectMap'
          - description: Connection information for the location where the task runner
              will publish the output of the task.
      type: object
    ValidationErrors:
      items:
        $ref: '#/components/schemas/ValidationError'
      type: array
    ValidationWarnings:
      items:
        $ref: '#/components/schemas/ValidationWarning'
      type: array
    SelectorList:
      description: The list of Selectors that define queries on individual fields.
      items:
        $ref: '#/components/schemas/Selector'
      type: array
    Query:
      description: Defines the query to run against an object.
      properties:
        selectors:
          allOf:
          - $ref: '#/components/schemas/SelectorList'
          - description: List of selectors that define the query. An object must satisfy
              all of the selectors to match the query.
      type: object
    int:
      type: integer
    taskId:
      maxLength: 2048
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    Selector:
      description: A comparision that is used to determine whether a query should
        return this object.
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The name of the field that the operator will be applied\
              \ to. The field name is the \"key\" portion of the field definition\
              \ in the pipeline definition syntax that is used by the AWS Data Pipeline\
              \ API. If the field is not set on the object, the condition fails."
        operator:
          $ref: '#/components/schemas/Operator'
      type: object
    TaskStatus:
      enum:
      - FINISHED
      - FAILED
      - "FALSE"
      type: string
    errorMessage:
      type: string
    tagKey:
      maxLength: 128
      minLength: 1
      type: string
    tagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: "Tags are key/value pairs defined by a user and associated with\
        \ a pipeline to control access. AWS Data Pipeline allows you to associate\
        \ ten tags per pipeline. For more information, see <a href=\"http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html\"\
        >Controlling User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer\
        \ Guide</i>."
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/tagKey'
          - description: "The key name of a tag defined by a user. For more information,\
              \ see <a href=\"http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html\"\
              >Controlling User Access to Pipelines</a> in the <i>AWS Data Pipeline\
              \ Developer Guide</i>."
        value:
          allOf:
          - $ref: '#/components/schemas/tagValue'
          - description: "The optional value portion of a tag defined by a user. For\
              \ more information, see <a href=\"http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html\"\
              >Controlling User Access to Pipelines</a> in the <i>AWS Data Pipeline\
              \ Developer Guide</i>."
      required:
      - key
      - value
      type: object
    validationMessages:
      items:
        $ref: '#/components/schemas/validationMessage'
      type: array
    ValidationError:
      description: Defines a validation error. Validation errors prevent pipeline
        activation. The set of validation errors that can be returned are defined
        by AWS Data Pipeline.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The identifier of the object that contains the validation
              error.
        errors:
          allOf:
          - $ref: '#/components/schemas/validationMessages'
          - description: A description of the validation error.
      type: object
    ValidationWarning:
      description: Defines a validation warning. Validation warnings do not prevent
        pipeline activation. The set of validation warnings that can be returned are
        defined by AWS Data Pipeline.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          - description: The identifier of the object that contains the validation
              warning.
        warnings:
          allOf:
          - $ref: '#/components/schemas/validationMessages'
          - description: A description of the validation warning.
      type: object
    validationMessage:
      maxLength: 10000
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    PollForTaskOutput_taskObject:
      allOf:
      - $ref: '#/components/schemas/TaskObject'
      - description: "The information needed to complete the task that is being assigned\
          \ to the task runner. One of the fields returned in this object is <code>taskId</code>,\
          \ which contains an identifier for the task being assigned. The calling\
          \ task runner uses <code>taskId</code> in subsequent calls to <a>ReportTaskProgress</a>\
          \ and <a>SetTaskStatus</a>."
      example:
        objects: ""
        taskId: ""
        pipelineId: ""
        attemptId: ""
    PollForTaskInput_instanceIdentity:
      allOf:
      - $ref: '#/components/schemas/InstanceIdentity'
      - description: "Identity information for the EC2 instance that is hosting the\
          \ task runner. You can get this value from the instance using <code>http://169.254.169.254/latest/meta-data/instance-id</code>.\
          \ For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\
          >Instance Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide.</i>\
          \ Passing in this value proves that your task runner is running on an EC2\
          \ instance, and ensures the proper AWS Data Pipeline service charges are\
          \ applied to your pipeline."
      example:
        signature: ""
        document: ""
    QueryObjectsInput_query:
      allOf:
      - $ref: '#/components/schemas/Query'
      - description: "The query that defines the objects to be returned. The <code>Query</code>\
          \ object can contain a maximum of ten selectors. The conditions in the query\
          \ are limited to top-level String fields in the object. These filters can\
          \ be applied to components, instances, and attempts."
      example:
        selectors: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

