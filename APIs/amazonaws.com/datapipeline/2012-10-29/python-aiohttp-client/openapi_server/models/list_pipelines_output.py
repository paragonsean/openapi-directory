# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListPipelinesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_id_list: List=None, marker: str=None, has_more_results: bool=None):
        """ListPipelinesOutput - a model defined in OpenAPI

        :param pipeline_id_list: The pipeline_id_list of this ListPipelinesOutput.
        :param marker: The marker of this ListPipelinesOutput.
        :param has_more_results: The has_more_results of this ListPipelinesOutput.
        """
        self.openapi_types = {
            'pipeline_id_list': List,
            'marker': str,
            'has_more_results': bool
        }

        self.attribute_map = {
            'pipeline_id_list': 'pipelineIdList',
            'marker': 'marker',
            'has_more_results': 'hasMoreResults'
        }

        self._pipeline_id_list = pipeline_id_list
        self._marker = marker
        self._has_more_results = has_more_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPipelinesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPipelinesOutput of this ListPipelinesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_id_list(self):
        """Gets the pipeline_id_list of this ListPipelinesOutput.


        :return: The pipeline_id_list of this ListPipelinesOutput.
        :rtype: List
        """
        return self._pipeline_id_list

    @pipeline_id_list.setter
    def pipeline_id_list(self, pipeline_id_list):
        """Sets the pipeline_id_list of this ListPipelinesOutput.


        :param pipeline_id_list: The pipeline_id_list of this ListPipelinesOutput.
        :type pipeline_id_list: List
        """
        if pipeline_id_list is None:
            raise ValueError("Invalid value for `pipeline_id_list`, must not be `None`")

        self._pipeline_id_list = pipeline_id_list

    @property
    def marker(self):
        """Gets the marker of this ListPipelinesOutput.


        :return: The marker of this ListPipelinesOutput.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this ListPipelinesOutput.


        :param marker: The marker of this ListPipelinesOutput.
        :type marker: str
        """

        self._marker = marker

    @property
    def has_more_results(self):
        """Gets the has_more_results of this ListPipelinesOutput.


        :return: The has_more_results of this ListPipelinesOutput.
        :rtype: bool
        """
        return self._has_more_results

    @has_more_results.setter
    def has_more_results(self, has_more_results):
        """Sets the has_more_results of this ListPipelinesOutput.


        :param has_more_results: The has_more_results of this ListPipelinesOutput.
        :type has_more_results: bool
        """

        self._has_more_results = has_more_results
