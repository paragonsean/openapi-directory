# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, string_value: str=None, ref_value: str=None):
        """ModelField - a model defined in OpenAPI

        :param key: The key of this ModelField.
        :param string_value: The string_value of this ModelField.
        :param ref_value: The ref_value of this ModelField.
        """
        self.openapi_types = {
            'key': str,
            'string_value': str,
            'ref_value': str
        }

        self.attribute_map = {
            'key': 'key',
            'string_value': 'stringValue',
            'ref_value': 'refValue'
        }

        self._key = key
        self._string_value = string_value
        self._ref_value = ref_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Field of this ModelField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this ModelField.


        :return: The key of this ModelField.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ModelField.


        :param key: The key of this ModelField.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def string_value(self):
        """Gets the string_value of this ModelField.


        :return: The string_value of this ModelField.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this ModelField.


        :param string_value: The string_value of this ModelField.
        :type string_value: str
        """

        self._string_value = string_value

    @property
    def ref_value(self):
        """Gets the ref_value of this ModelField.


        :return: The ref_value of this ModelField.
        :rtype: str
        """
        return self._ref_value

    @ref_value.setter
    def ref_value(self, ref_value):
        """Sets the ref_value of this ModelField.


        :param ref_value: The ref_value of this ModelField.
        :type ref_value: str
        """

        self._ref_value = ref_value
