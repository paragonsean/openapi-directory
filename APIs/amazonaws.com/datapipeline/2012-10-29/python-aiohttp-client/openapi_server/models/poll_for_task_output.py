# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.poll_for_task_output_task_object import PollForTaskOutputTaskObject
from openapi_server import util


class PollForTaskOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_object: PollForTaskOutputTaskObject=None):
        """PollForTaskOutput - a model defined in OpenAPI

        :param task_object: The task_object of this PollForTaskOutput.
        """
        self.openapi_types = {
            'task_object': PollForTaskOutputTaskObject
        }

        self.attribute_map = {
            'task_object': 'taskObject'
        }

        self._task_object = task_object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PollForTaskOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PollForTaskOutput of this PollForTaskOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_object(self):
        """Gets the task_object of this PollForTaskOutput.


        :return: The task_object of this PollForTaskOutput.
        :rtype: PollForTaskOutputTaskObject
        """
        return self._task_object

    @task_object.setter
    def task_object(self, task_object):
        """Sets the task_object of this PollForTaskOutput.


        :param task_object: The task_object of this PollForTaskOutput.
        :type task_object: PollForTaskOutputTaskObject
        """

        self._task_object = task_object
