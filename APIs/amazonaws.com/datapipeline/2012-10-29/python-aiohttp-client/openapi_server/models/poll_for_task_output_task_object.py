# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PollForTaskOutputTaskObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_id: str=None, pipeline_id: str=None, attempt_id: str=None, objects: Dict=None):
        """PollForTaskOutputTaskObject - a model defined in OpenAPI

        :param task_id: The task_id of this PollForTaskOutputTaskObject.
        :param pipeline_id: The pipeline_id of this PollForTaskOutputTaskObject.
        :param attempt_id: The attempt_id of this PollForTaskOutputTaskObject.
        :param objects: The objects of this PollForTaskOutputTaskObject.
        """
        self.openapi_types = {
            'task_id': str,
            'pipeline_id': str,
            'attempt_id': str,
            'objects': Dict
        }

        self.attribute_map = {
            'task_id': 'taskId',
            'pipeline_id': 'pipelineId',
            'attempt_id': 'attemptId',
            'objects': 'objects'
        }

        self._task_id = task_id
        self._pipeline_id = pipeline_id
        self._attempt_id = attempt_id
        self._objects = objects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PollForTaskOutputTaskObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PollForTaskOutput_taskObject of this PollForTaskOutputTaskObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_id(self):
        """Gets the task_id of this PollForTaskOutputTaskObject.


        :return: The task_id of this PollForTaskOutputTaskObject.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this PollForTaskOutputTaskObject.


        :param task_id: The task_id of this PollForTaskOutputTaskObject.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this PollForTaskOutputTaskObject.


        :return: The pipeline_id of this PollForTaskOutputTaskObject.
        :rtype: str
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this PollForTaskOutputTaskObject.


        :param pipeline_id: The pipeline_id of this PollForTaskOutputTaskObject.
        :type pipeline_id: str
        """

        self._pipeline_id = pipeline_id

    @property
    def attempt_id(self):
        """Gets the attempt_id of this PollForTaskOutputTaskObject.


        :return: The attempt_id of this PollForTaskOutputTaskObject.
        :rtype: str
        """
        return self._attempt_id

    @attempt_id.setter
    def attempt_id(self, attempt_id):
        """Sets the attempt_id of this PollForTaskOutputTaskObject.


        :param attempt_id: The attempt_id of this PollForTaskOutputTaskObject.
        :type attempt_id: str
        """

        self._attempt_id = attempt_id

    @property
    def objects(self):
        """Gets the objects of this PollForTaskOutputTaskObject.


        :return: The objects of this PollForTaskOutputTaskObject.
        :rtype: Dict
        """
        return self._objects

    @objects.setter
    def objects(self, objects):
        """Sets the objects of this PollForTaskOutputTaskObject.


        :param objects: The objects of this PollForTaskOutputTaskObject.
        :type objects: Dict
        """

        self._objects = objects
