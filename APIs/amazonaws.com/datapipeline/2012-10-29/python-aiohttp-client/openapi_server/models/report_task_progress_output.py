# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportTaskProgressOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canceled: bool=None):
        """ReportTaskProgressOutput - a model defined in OpenAPI

        :param canceled: The canceled of this ReportTaskProgressOutput.
        """
        self.openapi_types = {
            'canceled': bool
        }

        self.attribute_map = {
            'canceled': 'canceled'
        }

        self._canceled = canceled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportTaskProgressOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportTaskProgressOutput of this ReportTaskProgressOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canceled(self):
        """Gets the canceled of this ReportTaskProgressOutput.


        :return: The canceled of this ReportTaskProgressOutput.
        :rtype: bool
        """
        return self._canceled

    @canceled.setter
    def canceled(self, canceled):
        """Sets the canceled of this ReportTaskProgressOutput.


        :param canceled: The canceled of this ReportTaskProgressOutput.
        :type canceled: bool
        """
        if canceled is None:
            raise ValueError("Invalid value for `canceled`, must not be `None`")

        self._canceled = canceled
