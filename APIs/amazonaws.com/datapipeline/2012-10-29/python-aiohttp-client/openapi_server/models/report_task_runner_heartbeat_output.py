# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportTaskRunnerHeartbeatOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, terminate: bool=None):
        """ReportTaskRunnerHeartbeatOutput - a model defined in OpenAPI

        :param terminate: The terminate of this ReportTaskRunnerHeartbeatOutput.
        """
        self.openapi_types = {
            'terminate': bool
        }

        self.attribute_map = {
            'terminate': 'terminate'
        }

        self._terminate = terminate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportTaskRunnerHeartbeatOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportTaskRunnerHeartbeatOutput of this ReportTaskRunnerHeartbeatOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def terminate(self):
        """Gets the terminate of this ReportTaskRunnerHeartbeatOutput.


        :return: The terminate of this ReportTaskRunnerHeartbeatOutput.
        :rtype: bool
        """
        return self._terminate

    @terminate.setter
    def terminate(self, terminate):
        """Sets the terminate of this ReportTaskRunnerHeartbeatOutput.


        :param terminate: The terminate of this ReportTaskRunnerHeartbeatOutput.
        :type terminate: bool
        """
        if terminate is None:
            raise ValueError("Invalid value for `terminate`, must not be `None`")

        self._terminate = terminate
