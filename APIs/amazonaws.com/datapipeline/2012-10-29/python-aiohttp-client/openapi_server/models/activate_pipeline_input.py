# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivatePipelineInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_id: str=None, parameter_values: List=None, start_timestamp: datetime=None):
        """ActivatePipelineInput - a model defined in OpenAPI

        :param pipeline_id: The pipeline_id of this ActivatePipelineInput.
        :param parameter_values: The parameter_values of this ActivatePipelineInput.
        :param start_timestamp: The start_timestamp of this ActivatePipelineInput.
        """
        self.openapi_types = {
            'pipeline_id': str,
            'parameter_values': List,
            'start_timestamp': datetime
        }

        self.attribute_map = {
            'pipeline_id': 'pipelineId',
            'parameter_values': 'parameterValues',
            'start_timestamp': 'startTimestamp'
        }

        self._pipeline_id = pipeline_id
        self._parameter_values = parameter_values
        self._start_timestamp = start_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivatePipelineInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivatePipelineInput of this ActivatePipelineInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this ActivatePipelineInput.


        :return: The pipeline_id of this ActivatePipelineInput.
        :rtype: str
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this ActivatePipelineInput.


        :param pipeline_id: The pipeline_id of this ActivatePipelineInput.
        :type pipeline_id: str
        """
        if pipeline_id is None:
            raise ValueError("Invalid value for `pipeline_id`, must not be `None`")

        self._pipeline_id = pipeline_id

    @property
    def parameter_values(self):
        """Gets the parameter_values of this ActivatePipelineInput.


        :return: The parameter_values of this ActivatePipelineInput.
        :rtype: List
        """
        return self._parameter_values

    @parameter_values.setter
    def parameter_values(self, parameter_values):
        """Sets the parameter_values of this ActivatePipelineInput.


        :param parameter_values: The parameter_values of this ActivatePipelineInput.
        :type parameter_values: List
        """

        self._parameter_values = parameter_values

    @property
    def start_timestamp(self):
        """Gets the start_timestamp of this ActivatePipelineInput.


        :return: The start_timestamp of this ActivatePipelineInput.
        :rtype: datetime
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp):
        """Sets the start_timestamp of this ActivatePipelineInput.


        :param start_timestamp: The start_timestamp of this ActivatePipelineInput.
        :type start_timestamp: datetime
        """

        self._start_timestamp = start_timestamp
