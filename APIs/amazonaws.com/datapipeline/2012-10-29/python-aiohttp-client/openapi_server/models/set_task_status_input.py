# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_status import TaskStatus
from openapi_server import util


class SetTaskStatusInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_id: str=None, task_status: TaskStatus=None, error_id: str=None, error_message: str=None, error_stack_trace: str=None):
        """SetTaskStatusInput - a model defined in OpenAPI

        :param task_id: The task_id of this SetTaskStatusInput.
        :param task_status: The task_status of this SetTaskStatusInput.
        :param error_id: The error_id of this SetTaskStatusInput.
        :param error_message: The error_message of this SetTaskStatusInput.
        :param error_stack_trace: The error_stack_trace of this SetTaskStatusInput.
        """
        self.openapi_types = {
            'task_id': str,
            'task_status': TaskStatus,
            'error_id': str,
            'error_message': str,
            'error_stack_trace': str
        }

        self.attribute_map = {
            'task_id': 'taskId',
            'task_status': 'taskStatus',
            'error_id': 'errorId',
            'error_message': 'errorMessage',
            'error_stack_trace': 'errorStackTrace'
        }

        self._task_id = task_id
        self._task_status = task_status
        self._error_id = error_id
        self._error_message = error_message
        self._error_stack_trace = error_stack_trace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetTaskStatusInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetTaskStatusInput of this SetTaskStatusInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_id(self):
        """Gets the task_id of this SetTaskStatusInput.


        :return: The task_id of this SetTaskStatusInput.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this SetTaskStatusInput.


        :param task_id: The task_id of this SetTaskStatusInput.
        :type task_id: str
        """
        if task_id is None:
            raise ValueError("Invalid value for `task_id`, must not be `None`")

        self._task_id = task_id

    @property
    def task_status(self):
        """Gets the task_status of this SetTaskStatusInput.


        :return: The task_status of this SetTaskStatusInput.
        :rtype: TaskStatus
        """
        return self._task_status

    @task_status.setter
    def task_status(self, task_status):
        """Sets the task_status of this SetTaskStatusInput.


        :param task_status: The task_status of this SetTaskStatusInput.
        :type task_status: TaskStatus
        """
        if task_status is None:
            raise ValueError("Invalid value for `task_status`, must not be `None`")

        self._task_status = task_status

    @property
    def error_id(self):
        """Gets the error_id of this SetTaskStatusInput.


        :return: The error_id of this SetTaskStatusInput.
        :rtype: str
        """
        return self._error_id

    @error_id.setter
    def error_id(self, error_id):
        """Sets the error_id of this SetTaskStatusInput.


        :param error_id: The error_id of this SetTaskStatusInput.
        :type error_id: str
        """

        self._error_id = error_id

    @property
    def error_message(self):
        """Gets the error_message of this SetTaskStatusInput.


        :return: The error_message of this SetTaskStatusInput.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this SetTaskStatusInput.


        :param error_message: The error_message of this SetTaskStatusInput.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_stack_trace(self):
        """Gets the error_stack_trace of this SetTaskStatusInput.


        :return: The error_stack_trace of this SetTaskStatusInput.
        :rtype: str
        """
        return self._error_stack_trace

    @error_stack_trace.setter
    def error_stack_trace(self, error_stack_trace):
        """Sets the error_stack_trace of this SetTaskStatusInput.


        :param error_stack_trace: The error_stack_trace of this SetTaskStatusInput.
        :type error_stack_trace: str
        """

        self._error_stack_trace = error_stack_trace
