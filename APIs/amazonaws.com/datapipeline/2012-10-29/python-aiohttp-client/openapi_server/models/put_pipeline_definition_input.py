# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutPipelineDefinitionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_id: str=None, pipeline_objects: List=None, parameter_objects: List=None, parameter_values: List=None):
        """PutPipelineDefinitionInput - a model defined in OpenAPI

        :param pipeline_id: The pipeline_id of this PutPipelineDefinitionInput.
        :param pipeline_objects: The pipeline_objects of this PutPipelineDefinitionInput.
        :param parameter_objects: The parameter_objects of this PutPipelineDefinitionInput.
        :param parameter_values: The parameter_values of this PutPipelineDefinitionInput.
        """
        self.openapi_types = {
            'pipeline_id': str,
            'pipeline_objects': List,
            'parameter_objects': List,
            'parameter_values': List
        }

        self.attribute_map = {
            'pipeline_id': 'pipelineId',
            'pipeline_objects': 'pipelineObjects',
            'parameter_objects': 'parameterObjects',
            'parameter_values': 'parameterValues'
        }

        self._pipeline_id = pipeline_id
        self._pipeline_objects = pipeline_objects
        self._parameter_objects = parameter_objects
        self._parameter_values = parameter_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutPipelineDefinitionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutPipelineDefinitionInput of this PutPipelineDefinitionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this PutPipelineDefinitionInput.


        :return: The pipeline_id of this PutPipelineDefinitionInput.
        :rtype: str
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this PutPipelineDefinitionInput.


        :param pipeline_id: The pipeline_id of this PutPipelineDefinitionInput.
        :type pipeline_id: str
        """
        if pipeline_id is None:
            raise ValueError("Invalid value for `pipeline_id`, must not be `None`")

        self._pipeline_id = pipeline_id

    @property
    def pipeline_objects(self):
        """Gets the pipeline_objects of this PutPipelineDefinitionInput.


        :return: The pipeline_objects of this PutPipelineDefinitionInput.
        :rtype: List
        """
        return self._pipeline_objects

    @pipeline_objects.setter
    def pipeline_objects(self, pipeline_objects):
        """Sets the pipeline_objects of this PutPipelineDefinitionInput.


        :param pipeline_objects: The pipeline_objects of this PutPipelineDefinitionInput.
        :type pipeline_objects: List
        """
        if pipeline_objects is None:
            raise ValueError("Invalid value for `pipeline_objects`, must not be `None`")

        self._pipeline_objects = pipeline_objects

    @property
    def parameter_objects(self):
        """Gets the parameter_objects of this PutPipelineDefinitionInput.


        :return: The parameter_objects of this PutPipelineDefinitionInput.
        :rtype: List
        """
        return self._parameter_objects

    @parameter_objects.setter
    def parameter_objects(self, parameter_objects):
        """Sets the parameter_objects of this PutPipelineDefinitionInput.


        :param parameter_objects: The parameter_objects of this PutPipelineDefinitionInput.
        :type parameter_objects: List
        """

        self._parameter_objects = parameter_objects

    @property
    def parameter_values(self):
        """Gets the parameter_values of this PutPipelineDefinitionInput.


        :return: The parameter_values of this PutPipelineDefinitionInput.
        :rtype: List
        """
        return self._parameter_values

    @parameter_values.setter
    def parameter_values(self, parameter_values):
        """Sets the parameter_values of this PutPipelineDefinitionInput.


        :param parameter_values: The parameter_values of this PutPipelineDefinitionInput.
        :type parameter_values: List
        """

        self._parameter_values = parameter_values
