# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutPipelineDefinitionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validation_errors: List=None, validation_warnings: List=None, errored: bool=None):
        """PutPipelineDefinitionOutput - a model defined in OpenAPI

        :param validation_errors: The validation_errors of this PutPipelineDefinitionOutput.
        :param validation_warnings: The validation_warnings of this PutPipelineDefinitionOutput.
        :param errored: The errored of this PutPipelineDefinitionOutput.
        """
        self.openapi_types = {
            'validation_errors': List,
            'validation_warnings': List,
            'errored': bool
        }

        self.attribute_map = {
            'validation_errors': 'validationErrors',
            'validation_warnings': 'validationWarnings',
            'errored': 'errored'
        }

        self._validation_errors = validation_errors
        self._validation_warnings = validation_warnings
        self._errored = errored

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutPipelineDefinitionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutPipelineDefinitionOutput of this PutPipelineDefinitionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validation_errors(self):
        """Gets the validation_errors of this PutPipelineDefinitionOutput.


        :return: The validation_errors of this PutPipelineDefinitionOutput.
        :rtype: List
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this PutPipelineDefinitionOutput.


        :param validation_errors: The validation_errors of this PutPipelineDefinitionOutput.
        :type validation_errors: List
        """

        self._validation_errors = validation_errors

    @property
    def validation_warnings(self):
        """Gets the validation_warnings of this PutPipelineDefinitionOutput.


        :return: The validation_warnings of this PutPipelineDefinitionOutput.
        :rtype: List
        """
        return self._validation_warnings

    @validation_warnings.setter
    def validation_warnings(self, validation_warnings):
        """Sets the validation_warnings of this PutPipelineDefinitionOutput.


        :param validation_warnings: The validation_warnings of this PutPipelineDefinitionOutput.
        :type validation_warnings: List
        """

        self._validation_warnings = validation_warnings

    @property
    def errored(self):
        """Gets the errored of this PutPipelineDefinitionOutput.


        :return: The errored of this PutPipelineDefinitionOutput.
        :rtype: bool
        """
        return self._errored

    @errored.setter
    def errored(self, errored):
        """Sets the errored of this PutPipelineDefinitionOutput.


        :param errored: The errored of this PutPipelineDefinitionOutput.
        :type errored: bool
        """
        if errored is None:
            raise ValueError("Invalid value for `errored`, must not be `None`")

        self._errored = errored
