openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "With License Manager, you can create user-based subscriptions to utilize\
    \ licensed software with a per user subscription fee on Amazon EC2 instances."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS License Manager User Subscriptions
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: license-manager-user-subscriptions
  x-aws-signingName: license-manager-user-subscriptions
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-user-subscriptions-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/license-manager-user-subscriptions/
servers:
- description: The AWS License Manager User Subscriptions multi-region endpoint
  url: "http://license-manager-user-subscriptions.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS License Manager User Subscriptions multi-region endpoint
  url: "https://license-manager-user-subscriptions.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS License Manager User Subscriptions endpoint for China (Beijing)
    and China (Ningxia)
  url: "http://license-manager-user-subscriptions.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS License Manager User Subscriptions endpoint for China (Beijing)
    and China (Ningxia)
  url: "https://license-manager-user-subscriptions.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /user/AssociateUser:
    post:
      description: "<p>Associates the user to an EC2 instance to utilize user-based\
        \ subscriptions.</p> <note> <p>Your estimated bill for charges on the number\
        \ of users and related costs will take 48 hours to appear for billing periods\
        \ that haven't closed (marked as <b>Pending</b> billing status) in Amazon\
        \ Web Services Billing. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html\"\
        >Viewing your monthly charges</a> in the <i>Amazon Web Services Billing User\
        \ Guide</i>.</p> </note>"
      operationId: AssociateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identity-provider/DeregisterIdentityProvider:
    post:
      description: Deregisters the identity provider from providing user-based subscriptions.
      operationId: DeregisterIdentityProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterIdentityProvider_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /user/DisassociateUser:
    post:
      description: Disassociates the user from an EC2 instance providing user-based
        subscriptions.
      operationId: DisassociateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identity-provider/ListIdentityProviders:
    post:
      description: Lists the identity providers for user-based subscriptions.
      operationId: ListIdentityProviders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIdentityProviders_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /instance/ListInstances:
    post:
      description: Lists the EC2 instances providing user-based subscriptions.
      operationId: ListInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstances_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /user/ListProductSubscriptions:
    post:
      description: Lists the user-based subscription products available from an identity
        provider.
      operationId: ListProductSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProductSubscriptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductSubscriptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /user/ListUserAssociations:
    post:
      description: Lists user associations for an identity provider.
      operationId: ListUserAssociations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserAssociations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identity-provider/RegisterIdentityProvider:
    post:
      description: Registers an identity provider for user-based subscriptions.
      operationId: RegisterIdentityProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterIdentityProvider_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /user/StartProductSubscription:
    post:
      description: "<p>Starts a product subscription for a user with the specified\
        \ identity provider.</p> <note> <p>Your estimated bill for charges on the\
        \ number of users and related costs will take 48 hours to appear for billing\
        \ periods that haven't closed (marked as <b>Pending</b> billing status) in\
        \ Amazon Web Services Billing. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html\"\
        >Viewing your monthly charges</a> in the <i>Amazon Web Services Billing User\
        \ Guide</i>.</p> </note>"
      operationId: StartProductSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProductSubscription_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartProductSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /user/StopProductSubscription:
    post:
      description: Stops a product subscription for a user with the specified identity
        provider.
      operationId: StopProductSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopProductSubscription_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopProductSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identity-provider/UpdateIdentityProviderSettings:
    post:
      description: Updates additional product configuration settings for the registered
        identity provider.
      operationId: UpdateIdentityProviderSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityProviderSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateUserResponse:
      example:
        InstanceUserSummary:
          Status: ""
          InstanceId: ""
          Username: ""
          DisassociationDate: ""
          AssociationDate: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Domain: ""
          StatusMessage: ""
      properties:
        InstanceUserSummary:
          $ref: '#/components/schemas/AssociateUserResponse_InstanceUserSummary'
      required:
      - InstanceUserSummary
      type: object
    ActiveDirectoryIdentityProvider:
      description: Details about an Active Directory identity provider.
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The directory ID for an Active Directory identity provider.
      type: object
    ServiceQuotaExceededException: {}
    ConflictException: {}
    ValidationException: {}
    ThrottlingException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    DeregisterIdentityProviderResponse:
      example:
        IdentityProviderSummary:
          Status: ""
          Product: ""
          FailureMessage: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Settings:
            Subnets: ""
            SecurityGroupId: ""
      properties:
        IdentityProviderSummary:
          $ref: '#/components/schemas/DeregisterIdentityProviderResponse_IdentityProviderSummary'
      required:
      - IdentityProviderSummary
      type: object
    DisassociateUserResponse:
      example:
        InstanceUserSummary:
          Status: ""
          InstanceId: ""
          Username: ""
          DisassociationDate: ""
          AssociationDate: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Domain: ""
          StatusMessage: ""
      properties:
        InstanceUserSummary:
          $ref: '#/components/schemas/AssociateUserResponse_InstanceUserSummary'
      required:
      - InstanceUserSummary
      type: object
    ListIdentityProvidersResponse:
      example:
        NextToken: ""
        IdentityProviderSummaries: ""
      properties:
        IdentityProviderSummaries:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderSummaryList'
          - description: Metadata that describes the list identity providers operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      required:
      - IdentityProviderSummaries
      type: object
    ListInstancesResponse:
      example:
        NextToken: ""
        InstanceSummaries: ""
      properties:
        InstanceSummaries:
          allOf:
          - $ref: '#/components/schemas/InstanceSummaryList'
          - description: Metadata that describes the list instances operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      type: object
    Filter:
      description: "A filter name and value pair that is used to return more specific\
        \ results from a describe operation. Filters can be used to match a set of\
        \ resources by specific criteria, such as tags, attributes, or IDs."
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of an attribute to use as a filter.
        Operation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of search (For example, eq, geq, leq)"
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Value of the filter.
      type: object
    ListProductSubscriptionsResponse:
      example:
        NextToken: ""
        ProductUserSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
        ProductUserSummaries:
          allOf:
          - $ref: '#/components/schemas/ProductUserSummaryList'
          - description: Metadata that describes the list product subscriptions operation.
      type: object
    ListUserAssociationsResponse:
      example:
        NextToken: ""
        InstanceUserSummaries: ""
      properties:
        InstanceUserSummaries:
          allOf:
          - $ref: '#/components/schemas/InstanceUserSummaryList'
          - description: Metadata that describes the list user association operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      type: object
    RegisterIdentityProviderResponse:
      example:
        IdentityProviderSummary:
          Status: ""
          Product: ""
          FailureMessage: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Settings:
            Subnets: ""
            SecurityGroupId: ""
      properties:
        IdentityProviderSummary:
          $ref: '#/components/schemas/DeregisterIdentityProviderResponse_IdentityProviderSummary'
      required:
      - IdentityProviderSummary
      type: object
    SecurityGroup:
      maxLength: 200
      minLength: 5
      pattern: "^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$"
      type: string
    SettingsSubnetsList:
      items:
        $ref: '#/components/schemas/Subnet'
      minItems: 1
      type: array
    StartProductSubscriptionResponse:
      example:
        ProductUserSummary:
          Status: ""
          SubscriptionEndDate: ""
          SubscriptionStartDate: ""
          Username: ""
          Product: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Domain: ""
          StatusMessage: ""
      properties:
        ProductUserSummary:
          $ref: '#/components/schemas/StartProductSubscriptionResponse_ProductUserSummary'
      required:
      - ProductUserSummary
      type: object
    StopProductSubscriptionResponse:
      example:
        ProductUserSummary:
          Status: ""
          SubscriptionEndDate: ""
          SubscriptionStartDate: ""
          Username: ""
          Product: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Domain: ""
          StatusMessage: ""
      properties:
        ProductUserSummary:
          $ref: '#/components/schemas/StartProductSubscriptionResponse_ProductUserSummary'
      required:
      - ProductUserSummary
      type: object
    UpdateIdentityProviderSettingsResponse:
      example:
        IdentityProviderSummary:
          Status: ""
          Product: ""
          FailureMessage: ""
          IdentityProvider:
            ActiveDirectoryIdentityProvider:
              DirectoryId: ""
          Settings:
            Subnets: ""
            SecurityGroupId: ""
      properties:
        IdentityProviderSummary:
          $ref: '#/components/schemas/IdentityProviderSummary'
      required:
      - IdentityProviderSummary
      type: object
    Subnets:
      items:
        $ref: '#/components/schemas/Subnet'
      type: array
    String:
      type: string
    IdentityProvider:
      description: Details about an identity provider.
      example:
        ActiveDirectoryIdentityProvider:
          DirectoryId: ""
      properties:
        ActiveDirectoryIdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider_ActiveDirectoryIdentityProvider'
      type: object
    AssociateUserRequest:
      example:
        InstanceId: ""
        Username: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUserRequest_IdentityProvider'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the EC2 instance, which provides user-based subscriptions."
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider for the user.
      required:
      - IdentityProvider
      - InstanceId
      - Username
      title: AssociateUserRequest
      type: object
    InstanceUserSummary:
      description: Describes users of an EC2 instance providing user-based subscriptions.
      properties:
        AssociationDate:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The date a user was associated with an EC2 instance.
        DisassociationDate:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The date a user was disassociated from an EC2 instance.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the EC2 instance, which provides user-based subscriptions."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of a user associated with an EC2 instance.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for users of an EC2 instance.
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider for the user.
      required:
      - IdentityProvider
      - InstanceId
      - Status
      - Username
      type: object
    BoxInteger:
      type: integer
    DeregisterIdentityProviderRequest:
      example:
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
      required:
      - IdentityProvider
      - Product
      title: DeregisterIdentityProviderRequest
      type: object
    IdentityProviderSummary:
      description: Describes an identity provider.
      example:
        Status: ""
        Product: ""
        FailureMessage: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Settings:
          Subnets: ""
          SecurityGroupId: ""
      properties:
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure message associated with an identity provider.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        Settings:
          $ref: '#/components/schemas/IdentityProviderSummary_Settings'
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of an identity provider.
      required:
      - IdentityProvider
      - Product
      - Settings
      - Status
      type: object
    DisassociateUserRequest:
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the EC2 instance, which provides user-based subscriptions."
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider for the user.
      required:
      - IdentityProvider
      - InstanceId
      - Username
      title: DisassociateUserRequest
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    Settings:
      description: "The registered identity provider’s product related configuration\
        \ settings such as the subnets to provision VPC endpoints, and the security\
        \ group ID that is associated with the VPC endpoints. The security group should\
        \ permit inbound TCP port 1688 communication from resources in the VPC."
      properties:
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - description: A security group ID that allows inbound TCP port 1688 communication
              between resources in your VPC and the VPC endpoint for activation servers.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SettingsSubnetsList'
          - description: The subnets defined for the registered identity provider.
      required:
      - SecurityGroupId
      - Subnets
      type: object
    IdentityProviderSummaryList:
      items:
        $ref: '#/components/schemas/IdentityProviderSummary'
      type: array
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    InstanceSummary:
      description: Describes an EC2 instance providing user-based subscriptions.
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the EC2 instance, which provides user-based subscriptions."
        LastStatusCheckDate:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The date of the last status check.
        Products:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of provided user-based subscription products.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of an EC2 instance resource.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for an EC2 instance.
      required:
      - InstanceId
      - Products
      - Status
      type: object
    InstanceSummaryList:
      items:
        $ref: '#/components/schemas/InstanceSummary'
      type: array
    InstanceUserSummaryList:
      items:
        $ref: '#/components/schemas/InstanceUserSummary'
      type: array
    ListIdentityProvidersRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      title: ListIdentityProvidersRequest
      type: object
    ListInstancesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: An array of structures that you can use to filter the results
              to those that match one or more sets of key-value pairs that you specify.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      title: ListInstancesRequest
      type: object
    ListProductSubscriptionsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: An array of structures that you can use to filter the results
              to those that match one or more sets of key-value pairs that you specify.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
      required:
      - IdentityProvider
      - Product
      title: ListProductSubscriptionsRequest
      type: object
    ProductUserSummaryList:
      items:
        $ref: '#/components/schemas/ProductUserSummary'
      type: array
    ListUserAssociationsRequest:
      example:
        Filters: ""
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: An array of structures that you can use to filter the results
              to those that match one or more sets of key-value pairs that you specify.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the EC2 instance, which provides user-based subscriptions."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
      required:
      - IdentityProvider
      - InstanceId
      title: ListUserAssociationsRequest
      type: object
    ProductUserSummary:
      description: The summary of the user-based subscription products for a user.
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of a product for a user.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for a product for a user.
        SubscriptionEndDate:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The end date of a subscription.
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The start date of a subscription.
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider of the user.
      required:
      - IdentityProvider
      - Product
      - Status
      - Username
      type: object
    RegisterIdentityProviderRequest:
      example:
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Settings:
          Subnets: ""
          SecurityGroupId: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        Settings:
          $ref: '#/components/schemas/RegisterIdentityProviderRequest_Settings'
      required:
      - IdentityProvider
      - Product
      title: RegisterIdentityProviderRequest
      type: object
    Subnet:
      pattern: "subnet-[a-z0-9]{8,17}"
      type: string
    StartProductSubscriptionRequest:
      example:
        Username: ""
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider of the user.
      required:
      - IdentityProvider
      - Product
      - Username
      title: StartProductSubscriptionRequest
      type: object
    StopProductSubscriptionRequest:
      example:
        Username: ""
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Domain: ""
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the user.
        IdentityProvider:
          $ref: '#/components/schemas/InstanceUserSummary_IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name from the identity provider for the user.
      required:
      - IdentityProvider
      - Product
      - Username
      title: StopProductSubscriptionRequest
      type: object
    UpdateSettings:
      description: Updates the registered identity provider’s product related configuration
        settings such as the subnets to provision VPC endpoints.
      properties:
        AddSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: The ID of one or more subnets in which License Manager will
              create a VPC endpoint for products that require connectivity to activation
              servers.
        RemoveSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: The ID of one or more subnets to remove.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - description: A security group ID that allows inbound TCP port 1688 communication
              between resources in your VPC and the VPC endpoints for activation servers.
      required:
      - AddSubnets
      - RemoveSubnets
      type: object
    UpdateIdentityProviderSettingsRequest:
      example:
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        UpdateSettings:
          SecurityGroupId: ""
          AddSubnets: ""
          RemoveSubnets: ""
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user-based subscription product.
        UpdateSettings:
          $ref: '#/components/schemas/UpdateIdentityProviderSettingsRequest_UpdateSettings'
      required:
      - IdentityProvider
      - Product
      - UpdateSettings
      title: UpdateIdentityProviderSettingsRequest
      type: object
    AssociateUser_request_IdentityProvider_ActiveDirectoryIdentityProvider:
      allOf:
      - $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
      - description: An object that details an Active Directory identity provider.
      example:
        DirectoryId: ""
    AssociateUser_request_IdentityProvider:
      description: Details about an identity provider.
      properties:
        ActiveDirectoryIdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider_ActiveDirectoryIdentityProvider'
      type: object
    AssociateUser_request:
      properties:
        Domain:
          description: The domain name of the user.
          type: string
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        InstanceId:
          description: "The ID of the EC2 instance, which provides user-based subscriptions."
          type: string
        Username:
          description: The user name from the identity provider for the user.
          type: string
      required:
      - IdentityProvider
      - InstanceId
      - Username
      type: object
    DeregisterIdentityProvider_request:
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        Product:
          description: The name of the user-based subscription product.
          type: string
      required:
      - IdentityProvider
      - Product
      type: object
    ListIdentityProviders_request:
      properties:
        MaxResults:
          description: Maximum number of results to return in a single call.
          type: integer
        NextToken:
          description: Token for the next set of results.
          type: string
      type: object
    ListInstances_request:
      properties:
        Filters:
          description: An array of structures that you can use to filter the results
            to those that match one or more sets of key-value pairs that you specify.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        MaxResults:
          description: Maximum number of results to return in a single call.
          type: integer
        NextToken:
          description: Token for the next set of results.
          type: string
      type: object
    ListProductSubscriptions_request:
      properties:
        Filters:
          description: An array of structures that you can use to filter the results
            to those that match one or more sets of key-value pairs that you specify.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        MaxResults:
          description: Maximum number of results to return in a single call.
          type: integer
        NextToken:
          description: Token for the next set of results.
          type: string
        Product:
          description: The name of the user-based subscription product.
          type: string
      required:
      - IdentityProvider
      - Product
      type: object
    ListUserAssociations_request:
      properties:
        Filters:
          description: An array of structures that you can use to filter the results
            to those that match one or more sets of key-value pairs that you specify.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        InstanceId:
          description: "The ID of the EC2 instance, which provides user-based subscriptions."
          type: string
        MaxResults:
          description: Maximum number of results to return in a single call.
          type: integer
        NextToken:
          description: Token for the next set of results.
          type: string
      required:
      - IdentityProvider
      - InstanceId
      type: object
    RegisterIdentityProvider_request_Settings:
      description: "The registered identity provider’s product related configuration\
        \ settings such as the subnets to provision VPC endpoints, and the security\
        \ group ID that is associated with the VPC endpoints. The security group should\
        \ permit inbound TCP port 1688 communication from resources in the VPC."
      properties:
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - description: A security group ID that allows inbound TCP port 1688 communication
              between resources in your VPC and the VPC endpoint for activation servers.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SettingsSubnetsList'
          - description: The subnets defined for the registered identity provider.
      type: object
    RegisterIdentityProvider_request:
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        Product:
          description: The name of the user-based subscription product.
          type: string
        Settings:
          $ref: '#/components/schemas/RegisterIdentityProvider_request_Settings'
      required:
      - IdentityProvider
      - Product
      type: object
    StartProductSubscription_request:
      properties:
        Domain:
          description: The domain name of the user.
          type: string
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        Product:
          description: The name of the user-based subscription product.
          type: string
        Username:
          description: The user name from the identity provider of the user.
          type: string
      required:
      - IdentityProvider
      - Product
      - Username
      type: object
    StopProductSubscription_request:
      properties:
        Domain:
          description: The domain name of the user.
          type: string
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        Product:
          description: The name of the user-based subscription product.
          type: string
        Username:
          description: The user name from the identity provider for the user.
          type: string
      required:
      - IdentityProvider
      - Product
      - Username
      type: object
    UpdateIdentityProviderSettings_request_UpdateSettings:
      description: Updates the registered identity provider’s product related configuration
        settings such as the subnets to provision VPC endpoints.
      properties:
        AddSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: The ID of one or more subnets in which License Manager will
              create a VPC endpoint for products that require connectivity to activation
              servers.
        RemoveSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: The ID of one or more subnets to remove.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - description: A security group ID that allows inbound TCP port 1688 communication
              between resources in your VPC and the VPC endpoints for activation servers.
      type: object
    UpdateIdentityProviderSettings_request:
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/AssociateUser_request_IdentityProvider'
        Product:
          description: The name of the user-based subscription product.
          type: string
        UpdateSettings:
          $ref: '#/components/schemas/UpdateIdentityProviderSettings_request_UpdateSettings'
      required:
      - IdentityProvider
      - Product
      - UpdateSettings
      type: object
    AssociateUserResponse_InstanceUserSummary:
      allOf:
      - $ref: '#/components/schemas/InstanceUserSummary'
      - description: Metadata that describes the associate user operation.
      example:
        Status: ""
        InstanceId: ""
        Username: ""
        DisassociationDate: ""
        AssociationDate: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Domain: ""
        StatusMessage: ""
    DeregisterIdentityProviderResponse_IdentityProviderSummary:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderSummary'
      - description: Metadata that describes the results of an identity provider operation.
      example:
        Status: ""
        Product: ""
        FailureMessage: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Settings:
          Subnets: ""
          SecurityGroupId: ""
    StartProductSubscriptionResponse_ProductUserSummary:
      allOf:
      - $ref: '#/components/schemas/ProductUserSummary'
      - description: Metadata that describes the start product subscription operation.
      example:
        Status: ""
        SubscriptionEndDate: ""
        SubscriptionStartDate: ""
        Username: ""
        Product: ""
        IdentityProvider:
          ActiveDirectoryIdentityProvider:
            DirectoryId: ""
        Domain: ""
        StatusMessage: ""
    AssociateUserRequest_IdentityProvider:
      allOf:
      - $ref: '#/components/schemas/IdentityProvider'
      - description: The identity provider of the user.
      example:
        ActiveDirectoryIdentityProvider:
          DirectoryId: ""
    InstanceUserSummary_IdentityProvider:
      allOf:
      - $ref: '#/components/schemas/IdentityProvider'
      - description: An object that specifies details for the identity provider.
      example:
        ActiveDirectoryIdentityProvider:
          DirectoryId: ""
    IdentityProviderSummary_Settings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - description: An object that details the registered identity provider’s product
          related configuration settings such as the subnets to provision VPC endpoints.
      example:
        Subnets: ""
        SecurityGroupId: ""
    RegisterIdentityProviderRequest_Settings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - description: The registered identity provider’s product related configuration
          settings such as the subnets to provision VPC endpoints.
      example:
        Subnets: ""
        SecurityGroupId: ""
    UpdateIdentityProviderSettingsRequest_UpdateSettings:
      allOf:
      - $ref: '#/components/schemas/UpdateSettings'
      - description: <p>Updates the registered identity provider’s product related
          configuration settings. You can update any combination of settings in a
          single operation such as the:</p> <ul> <li> <p>Subnets which you want to
          add to provision VPC endpoints.</p> </li> <li> <p>Subnets which you want
          to remove the VPC endpoints from.</p> </li> <li> <p>Security group ID which
          permits traffic to the VPC endpoints.</p> </li> </ul>
      example:
        SecurityGroupId: ""
        AddSubnets: ""
        RemoveSubnets: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

