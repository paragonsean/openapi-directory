/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateIdentityProviderSettings_request_UpdateSettings.h
 *
 * Updates the registered identity providerâ€™s product related configuration settings such as the subnets to provision VPC endpoints.
 */

#ifndef OAIUpdateIdentityProviderSettings_request_UpdateSettings_H
#define OAIUpdateIdentityProviderSettings_request_UpdateSettings_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateIdentityProviderSettings_request_UpdateSettings : public OAIObject {
public:
    OAIUpdateIdentityProviderSettings_request_UpdateSettings();
    OAIUpdateIdentityProviderSettings_request_UpdateSettings(QString json);
    ~OAIUpdateIdentityProviderSettings_request_UpdateSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAddSubnets() const;
    void setAddSubnets(const QList &add_subnets);
    bool is_add_subnets_Set() const;
    bool is_add_subnets_Valid() const;

    QList getRemoveSubnets() const;
    void setRemoveSubnets(const QList &remove_subnets);
    bool is_remove_subnets_Set() const;
    bool is_remove_subnets_Valid() const;

    QString getSecurityGroupId() const;
    void setSecurityGroupId(const QString &security_group_id);
    bool is_security_group_id_Set() const;
    bool is_security_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_add_subnets;
    bool m_add_subnets_isSet;
    bool m_add_subnets_isValid;

    QList m_remove_subnets;
    bool m_remove_subnets_isSet;
    bool m_remove_subnets_isValid;

    QString m_security_group_id;
    bool m_security_group_id_isSet;
    bool m_security_group_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateIdentityProviderSettings_request_UpdateSettings)

#endif // OAIUpdateIdentityProviderSettings_request_UpdateSettings_H
