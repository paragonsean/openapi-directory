/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssociateUserRequest.h
 *
 * 
 */

#ifndef OAIAssociateUserRequest_H
#define OAIAssociateUserRequest_H

#include <QJsonObject>

#include "OAIAssociateUserRequest_IdentityProvider.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssociateUserRequest_IdentityProvider;

class OAIAssociateUserRequest : public OAIObject {
public:
    OAIAssociateUserRequest();
    OAIAssociateUserRequest(QString json);
    ~OAIAssociateUserRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIAssociateUserRequest_IdentityProvider getIdentityProvider() const;
    void setIdentityProvider(const OAIAssociateUserRequest_IdentityProvider &identity_provider);
    bool is_identity_provider_Set() const;
    bool is_identity_provider_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIAssociateUserRequest_IdentityProvider m_identity_provider;
    bool m_identity_provider_isSet;
    bool m_identity_provider_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssociateUserRequest)

#endif // OAIAssociateUserRequest_H
