/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceSummary.h
 *
 * Describes an EC2 instance providing user-based subscriptions.
 */

#ifndef OAIInstanceSummary_H
#define OAIInstanceSummary_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInstanceSummary : public OAIObject {
public:
    OAIInstanceSummary();
    OAIInstanceSummary(QString json);
    ~OAIInstanceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getLastStatusCheckDate() const;
    void setLastStatusCheckDate(const QString &last_status_check_date);
    bool is_last_status_check_date_Set() const;
    bool is_last_status_check_date_Valid() const;

    QList getProducts() const;
    void setProducts(const QList &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_last_status_check_date;
    bool m_last_status_check_date_isSet;
    bool m_last_status_check_date_isValid;

    QList m_products;
    bool m_products_isSet;
    bool m_products_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceSummary)

#endif // OAIInstanceSummary_H
