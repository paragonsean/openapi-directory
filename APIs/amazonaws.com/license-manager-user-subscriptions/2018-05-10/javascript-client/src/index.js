/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActiveDirectoryIdentityProvider from './model/ActiveDirectoryIdentityProvider';
import AssociateUserRequest from './model/AssociateUserRequest';
import AssociateUserRequestIdentityProvider from './model/AssociateUserRequestIdentityProvider';
import AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider from './model/AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider';
import AssociateUserResponse from './model/AssociateUserResponse';
import AssociateUserResponseInstanceUserSummary from './model/AssociateUserResponseInstanceUserSummary';
import DeregisterIdentityProviderRequest from './model/DeregisterIdentityProviderRequest';
import DeregisterIdentityProviderResponse from './model/DeregisterIdentityProviderResponse';
import DeregisterIdentityProviderResponseIdentityProviderSummary from './model/DeregisterIdentityProviderResponseIdentityProviderSummary';
import DisassociateUserRequest from './model/DisassociateUserRequest';
import DisassociateUserResponse from './model/DisassociateUserResponse';
import Filter from './model/Filter';
import IdentityProvider from './model/IdentityProvider';
import IdentityProviderSummary from './model/IdentityProviderSummary';
import IdentityProviderSummarySettings from './model/IdentityProviderSummarySettings';
import InstanceSummary from './model/InstanceSummary';
import InstanceUserSummary from './model/InstanceUserSummary';
import InstanceUserSummaryIdentityProvider from './model/InstanceUserSummaryIdentityProvider';
import ListIdentityProvidersRequest from './model/ListIdentityProvidersRequest';
import ListIdentityProvidersResponse from './model/ListIdentityProvidersResponse';
import ListInstancesRequest from './model/ListInstancesRequest';
import ListInstancesResponse from './model/ListInstancesResponse';
import ListProductSubscriptionsRequest from './model/ListProductSubscriptionsRequest';
import ListProductSubscriptionsResponse from './model/ListProductSubscriptionsResponse';
import ListUserAssociationsRequest from './model/ListUserAssociationsRequest';
import ListUserAssociationsResponse from './model/ListUserAssociationsResponse';
import ProductUserSummary from './model/ProductUserSummary';
import RegisterIdentityProviderRequest from './model/RegisterIdentityProviderRequest';
import RegisterIdentityProviderRequestSettings from './model/RegisterIdentityProviderRequestSettings';
import RegisterIdentityProviderResponse from './model/RegisterIdentityProviderResponse';
import Settings from './model/Settings';
import StartProductSubscriptionRequest from './model/StartProductSubscriptionRequest';
import StartProductSubscriptionResponse from './model/StartProductSubscriptionResponse';
import StartProductSubscriptionResponseProductUserSummary from './model/StartProductSubscriptionResponseProductUserSummary';
import StopProductSubscriptionRequest from './model/StopProductSubscriptionRequest';
import StopProductSubscriptionResponse from './model/StopProductSubscriptionResponse';
import UpdateIdentityProviderSettingsRequest from './model/UpdateIdentityProviderSettingsRequest';
import UpdateIdentityProviderSettingsRequestUpdateSettings from './model/UpdateIdentityProviderSettingsRequestUpdateSettings';
import UpdateIdentityProviderSettingsResponse from './model/UpdateIdentityProviderSettingsResponse';
import UpdateSettings from './model/UpdateSettings';
import DefaultApi from './api/DefaultApi';


/**
* With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsLicenseManagerUserSubscriptions = require('index'); // See note below*.
* var xxxSvc = new AwsLicenseManagerUserSubscriptions.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsLicenseManagerUserSubscriptions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsLicenseManagerUserSubscriptions.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsLicenseManagerUserSubscriptions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-05-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActiveDirectoryIdentityProvider model constructor.
     * @property {module:model/ActiveDirectoryIdentityProvider}
     */
    ActiveDirectoryIdentityProvider,

    /**
     * The AssociateUserRequest model constructor.
     * @property {module:model/AssociateUserRequest}
     */
    AssociateUserRequest,

    /**
     * The AssociateUserRequestIdentityProvider model constructor.
     * @property {module:model/AssociateUserRequestIdentityProvider}
     */
    AssociateUserRequestIdentityProvider,

    /**
     * The AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider model constructor.
     * @property {module:model/AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider}
     */
    AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider,

    /**
     * The AssociateUserResponse model constructor.
     * @property {module:model/AssociateUserResponse}
     */
    AssociateUserResponse,

    /**
     * The AssociateUserResponseInstanceUserSummary model constructor.
     * @property {module:model/AssociateUserResponseInstanceUserSummary}
     */
    AssociateUserResponseInstanceUserSummary,

    /**
     * The DeregisterIdentityProviderRequest model constructor.
     * @property {module:model/DeregisterIdentityProviderRequest}
     */
    DeregisterIdentityProviderRequest,

    /**
     * The DeregisterIdentityProviderResponse model constructor.
     * @property {module:model/DeregisterIdentityProviderResponse}
     */
    DeregisterIdentityProviderResponse,

    /**
     * The DeregisterIdentityProviderResponseIdentityProviderSummary model constructor.
     * @property {module:model/DeregisterIdentityProviderResponseIdentityProviderSummary}
     */
    DeregisterIdentityProviderResponseIdentityProviderSummary,

    /**
     * The DisassociateUserRequest model constructor.
     * @property {module:model/DisassociateUserRequest}
     */
    DisassociateUserRequest,

    /**
     * The DisassociateUserResponse model constructor.
     * @property {module:model/DisassociateUserResponse}
     */
    DisassociateUserResponse,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The IdentityProvider model constructor.
     * @property {module:model/IdentityProvider}
     */
    IdentityProvider,

    /**
     * The IdentityProviderSummary model constructor.
     * @property {module:model/IdentityProviderSummary}
     */
    IdentityProviderSummary,

    /**
     * The IdentityProviderSummarySettings model constructor.
     * @property {module:model/IdentityProviderSummarySettings}
     */
    IdentityProviderSummarySettings,

    /**
     * The InstanceSummary model constructor.
     * @property {module:model/InstanceSummary}
     */
    InstanceSummary,

    /**
     * The InstanceUserSummary model constructor.
     * @property {module:model/InstanceUserSummary}
     */
    InstanceUserSummary,

    /**
     * The InstanceUserSummaryIdentityProvider model constructor.
     * @property {module:model/InstanceUserSummaryIdentityProvider}
     */
    InstanceUserSummaryIdentityProvider,

    /**
     * The ListIdentityProvidersRequest model constructor.
     * @property {module:model/ListIdentityProvidersRequest}
     */
    ListIdentityProvidersRequest,

    /**
     * The ListIdentityProvidersResponse model constructor.
     * @property {module:model/ListIdentityProvidersResponse}
     */
    ListIdentityProvidersResponse,

    /**
     * The ListInstancesRequest model constructor.
     * @property {module:model/ListInstancesRequest}
     */
    ListInstancesRequest,

    /**
     * The ListInstancesResponse model constructor.
     * @property {module:model/ListInstancesResponse}
     */
    ListInstancesResponse,

    /**
     * The ListProductSubscriptionsRequest model constructor.
     * @property {module:model/ListProductSubscriptionsRequest}
     */
    ListProductSubscriptionsRequest,

    /**
     * The ListProductSubscriptionsResponse model constructor.
     * @property {module:model/ListProductSubscriptionsResponse}
     */
    ListProductSubscriptionsResponse,

    /**
     * The ListUserAssociationsRequest model constructor.
     * @property {module:model/ListUserAssociationsRequest}
     */
    ListUserAssociationsRequest,

    /**
     * The ListUserAssociationsResponse model constructor.
     * @property {module:model/ListUserAssociationsResponse}
     */
    ListUserAssociationsResponse,

    /**
     * The ProductUserSummary model constructor.
     * @property {module:model/ProductUserSummary}
     */
    ProductUserSummary,

    /**
     * The RegisterIdentityProviderRequest model constructor.
     * @property {module:model/RegisterIdentityProviderRequest}
     */
    RegisterIdentityProviderRequest,

    /**
     * The RegisterIdentityProviderRequestSettings model constructor.
     * @property {module:model/RegisterIdentityProviderRequestSettings}
     */
    RegisterIdentityProviderRequestSettings,

    /**
     * The RegisterIdentityProviderResponse model constructor.
     * @property {module:model/RegisterIdentityProviderResponse}
     */
    RegisterIdentityProviderResponse,

    /**
     * The Settings model constructor.
     * @property {module:model/Settings}
     */
    Settings,

    /**
     * The StartProductSubscriptionRequest model constructor.
     * @property {module:model/StartProductSubscriptionRequest}
     */
    StartProductSubscriptionRequest,

    /**
     * The StartProductSubscriptionResponse model constructor.
     * @property {module:model/StartProductSubscriptionResponse}
     */
    StartProductSubscriptionResponse,

    /**
     * The StartProductSubscriptionResponseProductUserSummary model constructor.
     * @property {module:model/StartProductSubscriptionResponseProductUserSummary}
     */
    StartProductSubscriptionResponseProductUserSummary,

    /**
     * The StopProductSubscriptionRequest model constructor.
     * @property {module:model/StopProductSubscriptionRequest}
     */
    StopProductSubscriptionRequest,

    /**
     * The StopProductSubscriptionResponse model constructor.
     * @property {module:model/StopProductSubscriptionResponse}
     */
    StopProductSubscriptionResponse,

    /**
     * The UpdateIdentityProviderSettingsRequest model constructor.
     * @property {module:model/UpdateIdentityProviderSettingsRequest}
     */
    UpdateIdentityProviderSettingsRequest,

    /**
     * The UpdateIdentityProviderSettingsRequestUpdateSettings model constructor.
     * @property {module:model/UpdateIdentityProviderSettingsRequestUpdateSettings}
     */
    UpdateIdentityProviderSettingsRequestUpdateSettings,

    /**
     * The UpdateIdentityProviderSettingsResponse model constructor.
     * @property {module:model/UpdateIdentityProviderSettingsResponse}
     */
    UpdateIdentityProviderSettingsResponse,

    /**
     * The UpdateSettings model constructor.
     * @property {module:model/UpdateSettings}
     */
    UpdateSettings,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
