/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstanceSummary model module.
 * @module model/InstanceSummary
 * @version 2018-05-10
 */
class InstanceSummary {
    /**
     * Constructs a new <code>InstanceSummary</code>.
     * Describes an EC2 instance providing user-based subscriptions.
     * @alias module:model/InstanceSummary
     * @param instanceId {String} 
     * @param products {Array} 
     * @param status {String} 
     */
    constructor(instanceId, products, status) { 
        
        InstanceSummary.initialize(this, instanceId, products, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceId, products, status) { 
        obj['InstanceId'] = instanceId;
        obj['Products'] = products;
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>InstanceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceSummary} obj Optional instance to populate.
     * @return {module:model/InstanceSummary} The populated <code>InstanceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceSummary();

            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('LastStatusCheckDate')) {
                obj['LastStatusCheckDate'] = ApiClient.convertToType(data['LastStatusCheckDate'], 'String');
            }
            if (data.hasOwnProperty('Products')) {
                obj['Products'] = ApiClient.convertToType(data['Products'], Array);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InstanceSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InstanceId`
        if (data['InstanceId']) { // data not null
          String.validateJSON(data['InstanceId']);
        }
        // validate the optional field `LastStatusCheckDate`
        if (data['LastStatusCheckDate']) { // data not null
          String.validateJSON(data['LastStatusCheckDate']);
        }
        // validate the optional field `Products`
        if (data['Products']) { // data not null
          Array.validateJSON(data['Products']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }

        return true;
    }


}

InstanceSummary.RequiredProperties = ["InstanceId", "Products", "Status"];

/**
 * @member {String} InstanceId
 */
InstanceSummary.prototype['InstanceId'] = undefined;

/**
 * @member {String} LastStatusCheckDate
 */
InstanceSummary.prototype['LastStatusCheckDate'] = undefined;

/**
 * @member {Array} Products
 */
InstanceSummary.prototype['Products'] = undefined;

/**
 * @member {String} Status
 */
InstanceSummary.prototype['Status'] = undefined;

/**
 * @member {String} StatusMessage
 */
InstanceSummary.prototype['StatusMessage'] = undefined;






export default InstanceSummary;

