/**
 * AWS License Manager User Subscriptions
 * With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateSettings from './UpdateSettings';

/**
 * The UpdateIdentityProviderSettingsRequestUpdateSettings model module.
 * @module model/UpdateIdentityProviderSettingsRequestUpdateSettings
 * @version 2018-05-10
 */
class UpdateIdentityProviderSettingsRequestUpdateSettings {
    /**
     * Constructs a new <code>UpdateIdentityProviderSettingsRequestUpdateSettings</code>.
     * @alias module:model/UpdateIdentityProviderSettingsRequestUpdateSettings
     * @implements module:model/UpdateSettings
     * @param addSubnets {Array} 
     * @param removeSubnets {Array} 
     */
    constructor(addSubnets, removeSubnets) { 
        UpdateSettings.initialize(this, addSubnets, removeSubnets);
        UpdateIdentityProviderSettingsRequestUpdateSettings.initialize(this, addSubnets, removeSubnets);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addSubnets, removeSubnets) { 
        obj['AddSubnets'] = addSubnets;
        obj['RemoveSubnets'] = removeSubnets;
    }

    /**
     * Constructs a <code>UpdateIdentityProviderSettingsRequestUpdateSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateIdentityProviderSettingsRequestUpdateSettings} obj Optional instance to populate.
     * @return {module:model/UpdateIdentityProviderSettingsRequestUpdateSettings} The populated <code>UpdateIdentityProviderSettingsRequestUpdateSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateIdentityProviderSettingsRequestUpdateSettings();
            UpdateSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AddSubnets')) {
                obj['AddSubnets'] = ApiClient.convertToType(data['AddSubnets'], Array);
            }
            if (data.hasOwnProperty('RemoveSubnets')) {
                obj['RemoveSubnets'] = ApiClient.convertToType(data['RemoveSubnets'], Array);
            }
            if (data.hasOwnProperty('SecurityGroupId')) {
                obj['SecurityGroupId'] = ApiClient.convertToType(data['SecurityGroupId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateIdentityProviderSettingsRequestUpdateSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateIdentityProviderSettingsRequestUpdateSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateIdentityProviderSettingsRequestUpdateSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AddSubnets`
        if (data['AddSubnets']) { // data not null
          Array.validateJSON(data['AddSubnets']);
        }
        // validate the optional field `RemoveSubnets`
        if (data['RemoveSubnets']) { // data not null
          Array.validateJSON(data['RemoveSubnets']);
        }
        // validate the optional field `SecurityGroupId`
        if (data['SecurityGroupId']) { // data not null
          String.validateJSON(data['SecurityGroupId']);
        }

        return true;
    }


}

UpdateIdentityProviderSettingsRequestUpdateSettings.RequiredProperties = ["AddSubnets", "RemoveSubnets"];

/**
 * @member {Array} AddSubnets
 */
UpdateIdentityProviderSettingsRequestUpdateSettings.prototype['AddSubnets'] = undefined;

/**
 * @member {Array} RemoveSubnets
 */
UpdateIdentityProviderSettingsRequestUpdateSettings.prototype['RemoveSubnets'] = undefined;

/**
 * @member {String} SecurityGroupId
 */
UpdateIdentityProviderSettingsRequestUpdateSettings.prototype['SecurityGroupId'] = undefined;


// Implement UpdateSettings interface:
/**
 * @member {Array} AddSubnets
 */
UpdateSettings.prototype['AddSubnets'] = undefined;
/**
 * @member {Array} RemoveSubnets
 */
UpdateSettings.prototype['RemoveSubnets'] = undefined;
/**
 * @member {String} SecurityGroupId
 */
UpdateSettings.prototype['SecurityGroupId'] = undefined;




export default UpdateIdentityProviderSettingsRequestUpdateSettings;

