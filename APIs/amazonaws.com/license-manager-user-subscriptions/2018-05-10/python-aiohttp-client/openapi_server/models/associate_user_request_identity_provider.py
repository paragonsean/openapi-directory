# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.associate_user_request_identity_provider_active_directory_identity_provider import AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider
from openapi_server import util


class AssociateUserRequestIdentityProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_identity_provider: AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider=None):
        """AssociateUserRequestIdentityProvider - a model defined in OpenAPI

        :param active_directory_identity_provider: The active_directory_identity_provider of this AssociateUserRequestIdentityProvider.
        """
        self.openapi_types = {
            'active_directory_identity_provider': AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider
        }

        self.attribute_map = {
            'active_directory_identity_provider': 'ActiveDirectoryIdentityProvider'
        }

        self._active_directory_identity_provider = active_directory_identity_provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateUserRequestIdentityProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateUserRequest_IdentityProvider of this AssociateUserRequestIdentityProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_identity_provider(self):
        """Gets the active_directory_identity_provider of this AssociateUserRequestIdentityProvider.


        :return: The active_directory_identity_provider of this AssociateUserRequestIdentityProvider.
        :rtype: AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider
        """
        return self._active_directory_identity_provider

    @active_directory_identity_provider.setter
    def active_directory_identity_provider(self, active_directory_identity_provider):
        """Sets the active_directory_identity_provider of this AssociateUserRequestIdentityProvider.


        :param active_directory_identity_provider: The active_directory_identity_provider of this AssociateUserRequestIdentityProvider.
        :type active_directory_identity_provider: AssociateUserRequestIdentityProviderActiveDirectoryIdentityProvider
        """

        self._active_directory_identity_provider = active_directory_identity_provider
