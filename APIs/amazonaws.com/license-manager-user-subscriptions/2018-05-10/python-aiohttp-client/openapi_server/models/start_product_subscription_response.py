# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_product_subscription_response_product_user_summary import StartProductSubscriptionResponseProductUserSummary
from openapi_server import util


class StartProductSubscriptionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_user_summary: StartProductSubscriptionResponseProductUserSummary=None):
        """StartProductSubscriptionResponse - a model defined in OpenAPI

        :param product_user_summary: The product_user_summary of this StartProductSubscriptionResponse.
        """
        self.openapi_types = {
            'product_user_summary': StartProductSubscriptionResponseProductUserSummary
        }

        self.attribute_map = {
            'product_user_summary': 'ProductUserSummary'
        }

        self._product_user_summary = product_user_summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartProductSubscriptionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartProductSubscriptionResponse of this StartProductSubscriptionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_user_summary(self):
        """Gets the product_user_summary of this StartProductSubscriptionResponse.


        :return: The product_user_summary of this StartProductSubscriptionResponse.
        :rtype: StartProductSubscriptionResponseProductUserSummary
        """
        return self._product_user_summary

    @product_user_summary.setter
    def product_user_summary(self, product_user_summary):
        """Sets the product_user_summary of this StartProductSubscriptionResponse.


        :param product_user_summary: The product_user_summary of this StartProductSubscriptionResponse.
        :type product_user_summary: StartProductSubscriptionResponseProductUserSummary
        """
        if product_user_summary is None:
            raise ValueError("Invalid value for `product_user_summary`, must not be `None`")

        self._product_user_summary = product_user_summary
