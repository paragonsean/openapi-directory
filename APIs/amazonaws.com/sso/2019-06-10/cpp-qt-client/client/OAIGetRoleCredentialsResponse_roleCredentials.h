/**
 * AWS Single Sign-On
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) Portal is a web service that makes it easy for you to assign user access to IAM Identity Center resources such as the AWS access portal. Users can get AWS account applications and roles assigned to them and get federated into the application.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide describes the IAM Identity Center Portal operations that you can call programatically and includes detailed information on data types and errors.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2019-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRoleCredentialsResponse_roleCredentials.h
 *
 * 
 */

#ifndef OAIGetRoleCredentialsResponse_roleCredentials_H
#define OAIGetRoleCredentialsResponse_roleCredentials_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetRoleCredentialsResponse_roleCredentials : public OAIObject {
public:
    OAIGetRoleCredentialsResponse_roleCredentials();
    OAIGetRoleCredentialsResponse_roleCredentials(QString json);
    ~OAIGetRoleCredentialsResponse_roleCredentials() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessKeyId() const;
    void setAccessKeyId(const QString &access_key_id);
    bool is_access_key_id_Set() const;
    bool is_access_key_id_Valid() const;

    QString getSecretAccessKey() const;
    void setSecretAccessKey(const QString &secret_access_key);
    bool is_secret_access_key_Set() const;
    bool is_secret_access_key_Valid() const;

    QString getSessionToken() const;
    void setSessionToken(const QString &session_token);
    bool is_session_token_Set() const;
    bool is_session_token_Valid() const;

    qint32 getExpiration() const;
    void setExpiration(const qint32 &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_key_id;
    bool m_access_key_id_isSet;
    bool m_access_key_id_isValid;

    QString m_secret_access_key;
    bool m_secret_access_key_isSet;
    bool m_secret_access_key_isValid;

    QString m_session_token;
    bool m_session_token_isSet;
    bool m_session_token_isValid;

    qint32 m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRoleCredentialsResponse_roleCredentials)

#endif // OAIGetRoleCredentialsResponse_roleCredentials_H
