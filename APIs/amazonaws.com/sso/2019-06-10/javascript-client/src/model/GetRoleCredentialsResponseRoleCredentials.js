/**
 * AWS Single Sign-On
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) Portal is a web service that makes it easy for you to assign user access to IAM Identity Center resources such as the AWS access portal. Users can get AWS account applications and roles assigned to them and get federated into the application.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide describes the IAM Identity Center Portal operations that you can call programatically and includes detailed information on data types and errors.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2019-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoleCredentials from './RoleCredentials';

/**
 * The GetRoleCredentialsResponseRoleCredentials model module.
 * @module model/GetRoleCredentialsResponseRoleCredentials
 * @version 2019-06-10
 */
class GetRoleCredentialsResponseRoleCredentials {
    /**
     * Constructs a new <code>GetRoleCredentialsResponseRoleCredentials</code>.
     * @alias module:model/GetRoleCredentialsResponseRoleCredentials
     * @implements module:model/RoleCredentials
     */
    constructor() { 
        RoleCredentials.initialize(this);
        GetRoleCredentialsResponseRoleCredentials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetRoleCredentialsResponseRoleCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetRoleCredentialsResponseRoleCredentials} obj Optional instance to populate.
     * @return {module:model/GetRoleCredentialsResponseRoleCredentials} The populated <code>GetRoleCredentialsResponseRoleCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetRoleCredentialsResponseRoleCredentials();
            RoleCredentials.constructFromObject(data, obj);

            if (data.hasOwnProperty('accessKeyId')) {
                obj['accessKeyId'] = ApiClient.convertToType(data['accessKeyId'], 'String');
            }
            if (data.hasOwnProperty('secretAccessKey')) {
                obj['secretAccessKey'] = ApiClient.convertToType(data['secretAccessKey'], 'String');
            }
            if (data.hasOwnProperty('sessionToken')) {
                obj['sessionToken'] = ApiClient.convertToType(data['sessionToken'], 'String');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ApiClient.convertToType(data['expiration'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetRoleCredentialsResponseRoleCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetRoleCredentialsResponseRoleCredentials</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessKeyId`
        if (data['accessKeyId']) { // data not null
          String.validateJSON(data['accessKeyId']);
        }
        // validate the optional field `secretAccessKey`
        if (data['secretAccessKey']) { // data not null
          String.validateJSON(data['secretAccessKey']);
        }
        // validate the optional field `sessionToken`
        if (data['sessionToken']) { // data not null
          String.validateJSON(data['sessionToken']);
        }
        // validate the optional field `expiration`
        if (data['expiration']) { // data not null
          Number.validateJSON(data['expiration']);
        }

        return true;
    }


}



/**
 * @member {String} accessKeyId
 */
GetRoleCredentialsResponseRoleCredentials.prototype['accessKeyId'] = undefined;

/**
 * @member {String} secretAccessKey
 */
GetRoleCredentialsResponseRoleCredentials.prototype['secretAccessKey'] = undefined;

/**
 * @member {String} sessionToken
 */
GetRoleCredentialsResponseRoleCredentials.prototype['sessionToken'] = undefined;

/**
 * @member {Number} expiration
 */
GetRoleCredentialsResponseRoleCredentials.prototype['expiration'] = undefined;


// Implement RoleCredentials interface:
/**
 * @member {String} accessKeyId
 */
RoleCredentials.prototype['accessKeyId'] = undefined;
/**
 * @member {String} secretAccessKey
 */
RoleCredentials.prototype['secretAccessKey'] = undefined;
/**
 * @member {String} sessionToken
 */
RoleCredentials.prototype['sessionToken'] = undefined;
/**
 * @member {Number} expiration
 */
RoleCredentials.prototype['expiration'] = undefined;




export default GetRoleCredentialsResponseRoleCredentials;

