openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS IAM Identity Center (successor to AWS Single Sign-On) Portal\
    \ is a web service that makes it easy for you to assign user access to IAM Identity\
    \ Center resources such as the AWS access portal. Users can get AWS account applications\
    \ and roles assigned to them and get federated into the application.</p> <note>\
    \ <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code>\
    \ API namespaces will continue to retain their original name for backward compatibility\
    \ purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\"\
    >IAM Identity Center rename</a>.</p> </note> <p>This reference guide describes\
    \ the IAM Identity Center Portal operations that you can call programatically\
    \ and includes detailed information on data types and errors.</p> <note> <p>AWS\
    \ provides SDKs that consist of libraries and sample code for various programming\
    \ languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs\
    \ provide a convenient way to create programmatic access to IAM Identity Center\
    \ and other AWS services. For more information about the AWS SDKs, including how\
    \ to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools\
    \ for Amazon Web Services</a>.</p> </note>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Single Sign-On
  version: 2019-06-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sso
  x-aws-signingName: awsssoportal
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sso-2019-06-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sso/
servers:
- description: The SSO multi-region endpoint
  url: "http://portal.sso.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SSO multi-region endpoint
  url: "https://portal.sso.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SSO endpoint for China (Beijing) and China (Ningxia)
  url: "http://portal.sso.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The SSO endpoint for China (Beijing) and China (Ningxia)
  url: "https://portal.sso.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /assignment/accounts#x-amz-sso_bearer_token:
    get:
      description: "Lists all AWS accounts assigned to the user. These AWS accounts\
        \ are assigned by the administrator of the account. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers\"\
        >Assign User Access</a> in the <i>IAM Identity Center User Guide</i>. This\
        \ operation returns a paginated response."
      operationId: list_accounts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "(Optional) When requesting subsequent pages, this is the page\
          \ token from the previous response output."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      - description: This is the number of items clients can request per page.
        explode: true
        in: query
        name: max_result
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token issued by the <code>CreateToken</code> API call. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html\"\
          >CreateToken</a> in the <i>IAM Identity Center OIDC API Reference Guide</i>."
        explode: false
        in: header
        name: x-amz-sso_bearer_token
        required: true
        schema:
          format: password
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /assignment/roles#x-amz-sso_bearer_token&account_id:
    get:
      description: Lists all roles that are assigned to the user for a given AWS account.
      operationId: list_account_roles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The page token from the previous response output when you request
          subsequent pages.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      - description: The number of items that clients can request per page.
        explode: true
        in: query
        name: max_result
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token issued by the <code>CreateToken</code> API call. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html\"\
          >CreateToken</a> in the <i>IAM Identity Center OIDC API Reference Guide</i>."
        explode: false
        in: header
        name: x-amz-sso_bearer_token
        required: true
        schema:
          format: password
          type: string
        style: simple
      - description: The identifier for the AWS account that is assigned to the user.
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountRolesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /federation/credentials#role_name&account_id&x-amz-sso_bearer_token:
    get:
      description: Returns the STS short-term credentials for a given role name that
        is assigned to the user.
      operationId: get_role_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The friendly name of the role that is assigned to the user.
        explode: true
        in: query
        name: role_name
        required: true
        schema:
          type: string
        style: form
      - description: The identifier for the AWS account that is assigned to the user.
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: string
        style: form
      - description: "The token issued by the <code>CreateToken</code> API call. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html\"\
          >CreateToken</a> in the <i>IAM Identity Center OIDC API Reference Guide</i>."
        explode: false
        in: header
        name: x-amz-sso_bearer_token
        required: true
        schema:
          format: password
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /logout#x-amz-sso_bearer_token:
    post:
      description: "<p>Removes the locally stored SSO tokens from the client-side\
        \ cache and sends an API call to the IAM Identity Center service to invalidate\
        \ the corresponding server-side IAM Identity Center sign in session.</p> <note>\
        \ <p>If a user uses IAM Identity Center to access the AWS CLI, the user’s\
        \ IAM Identity Center sign in session is used to obtain an IAM session, as\
        \ specified in the corresponding IAM Identity Center permission set. More\
        \ specifically, IAM Identity Center assumes an IAM role in the target account\
        \ on behalf of the user, and the corresponding temporary AWS credentials are\
        \ returned to the client.</p> <p>After user logout, any existing IAM role\
        \ sessions that were created by using IAM Identity Center permission sets\
        \ continue based on the duration configured in the permission set. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/authconcept.html\"\
        >User authentications</a> in the <i>IAM Identity Center User Guide</i>.</p>\
        \ </note>"
      operationId: logout
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The token issued by the <code>CreateToken</code> API call. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html\"\
          >CreateToken</a> in the <i>IAM Identity Center OIDC API Reference Guide</i>."
        explode: false
        in: header
        name: x-amz-sso_bearer_token
        required: true
        schema:
          format: password
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    GetRoleCredentialsResponse:
      example:
        roleCredentials:
          accessKeyId: ""
          secretAccessKey: ""
          sessionToken: ""
          expiration: ""
      properties:
        roleCredentials:
          $ref: '#/components/schemas/GetRoleCredentialsResponse_roleCredentials'
      title: GetRoleCredentialsResponse
      type: object
    InvalidRequestException: {}
    UnauthorizedException: {}
    TooManyRequestsException: {}
    ResourceNotFoundException: {}
    ListAccountRolesResponse:
      example:
        nextToken: ""
        roleList: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          - description: The page token client that is used to retrieve the list of
              accounts.
          title: nextToken
        roleList:
          allOf:
          - $ref: '#/components/schemas/RoleListType'
          - description: A paginated response with the list of roles and the next
              token if more results are available.
          title: roleList
      title: ListAccountRolesResponse
      type: object
    ListAccountsResponse:
      example:
        nextToken: ""
        accountList: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          - description: The page token client that is used to retrieve the list of
              accounts.
          title: nextToken
        accountList:
          allOf:
          - $ref: '#/components/schemas/AccountListType'
          - description: A paginated response with the list of account information
              and the next token if more results are available.
          title: accountList
      title: ListAccountsResponse
      type: object
    AccessKeyType:
      type: string
    AccessTokenType:
      format: password
      type: string
    AccountIdType:
      type: string
    AccountNameType:
      type: string
    EmailAddressType:
      maxLength: 254
      minLength: 1
      type: string
    AccountInfo:
      description: Provides information about your AWS account.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          - description: The identifier of the AWS account that is assigned to the
              user.
          title: accountId
        accountName:
          allOf:
          - $ref: '#/components/schemas/AccountNameType'
          - description: The display name of the AWS account that is assigned to the
              user.
          title: accountName
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          - description: The email address of the AWS account that is assigned to
              the user.
          title: emailAddress
      title: AccountInfo
      type: object
    AccountListType:
      items:
        $ref: '#/components/schemas/AccountInfo'
      type: array
    ExpirationTimestampType:
      type: integer
    RoleNameType:
      type: string
    GetRoleCredentialsRequest:
      properties: {}
      title: GetRoleCredentialsRequest
      type: object
    RoleCredentials:
      description: Provides information about the role credentials that are assigned
        to the user.
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyType'
          - description: "The identifier used for the temporary security credentials.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html\"\
              >Using Temporary Security Credentials to Request Access to AWS Resources</a>\
              \ in the <i>AWS IAM User Guide</i>."
          title: accessKeyId
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKeyType'
          - description: "The key that is used to sign the request. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html\"\
              >Using Temporary Security Credentials to Request Access to AWS Resources</a>\
              \ in the <i>AWS IAM User Guide</i>."
          title: secretAccessKey
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionTokenType'
          - description: "The token used for temporary credentials. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html\"\
              >Using Temporary Security Credentials to Request Access to AWS Resources</a>\
              \ in the <i>AWS IAM User Guide</i>."
          title: sessionToken
        expiration:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimestampType'
          - description: The date on which temporary security credentials expire.
          title: expiration
      title: RoleCredentials
      type: object
    NextTokenType:
      type: string
    MaxResultType:
      maximum: 100
      minimum: 1
      type: integer
    ListAccountRolesRequest:
      properties: {}
      title: ListAccountRolesRequest
      type: object
    RoleListType:
      items:
        $ref: '#/components/schemas/RoleInfo'
      type: array
    ListAccountsRequest:
      properties: {}
      title: ListAccountsRequest
      type: object
    LogoutRequest:
      properties: {}
      title: LogoutRequest
      type: object
    SecretAccessKeyType:
      format: password
      type: string
    SessionTokenType:
      format: password
      type: string
    RoleInfo:
      description: Provides information about the role that is assigned to the user.
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleNameType'
          - description: The friendly name of the role that is assigned to the user.
          title: roleName
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          - description: The identifier of the AWS account assigned to the user.
          title: accountId
      title: RoleInfo
      type: object
    GetRoleCredentialsResponse_roleCredentials:
      allOf:
      - $ref: '#/components/schemas/RoleCredentials'
      - description: The credentials for the role that is assigned to the user.
      example:
        accessKeyId: ""
        secretAccessKey: ""
        sessionToken: ""
        expiration: ""
      title: GetRoleCredentialsResponse_roleCredentials
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
