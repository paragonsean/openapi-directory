# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoleInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_name: str=None, account_id: str=None):
        """RoleInfo - a model defined in OpenAPI

        :param role_name: The role_name of this RoleInfo.
        :param account_id: The account_id of this RoleInfo.
        """
        self.openapi_types = {
            'role_name': str,
            'account_id': str
        }

        self.attribute_map = {
            'role_name': 'roleName',
            'account_id': 'accountId'
        }

        self._role_name = role_name
        self._account_id = account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoleInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoleInfo of this RoleInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_name(self):
        """Gets the role_name of this RoleInfo.


        :return: The role_name of this RoleInfo.
        :rtype: str
        """
        return self._role_name

    @role_name.setter
    def role_name(self, role_name):
        """Sets the role_name of this RoleInfo.


        :param role_name: The role_name of this RoleInfo.
        :type role_name: str
        """

        self._role_name = role_name

    @property
    def account_id(self):
        """Gets the account_id of this RoleInfo.


        :return: The account_id of this RoleInfo.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RoleInfo.


        :param account_id: The account_id of this RoleInfo.
        :type account_id: str
        """

        self._account_id = account_id
