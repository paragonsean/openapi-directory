# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, account_name: str=None, email_address: str=None):
        """AccountInfo - a model defined in OpenAPI

        :param account_id: The account_id of this AccountInfo.
        :param account_name: The account_name of this AccountInfo.
        :param email_address: The email_address of this AccountInfo.
        """
        self.openapi_types = {
            'account_id': str,
            'account_name': str,
            'email_address': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'account_name': 'accountName',
            'email_address': 'emailAddress'
        }

        self._account_id = account_id
        self._account_name = account_name
        self._email_address = email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountInfo of this AccountInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this AccountInfo.


        :return: The account_id of this AccountInfo.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountInfo.


        :param account_id: The account_id of this AccountInfo.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def account_name(self):
        """Gets the account_name of this AccountInfo.


        :return: The account_name of this AccountInfo.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AccountInfo.


        :param account_name: The account_name of this AccountInfo.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def email_address(self):
        """Gets the email_address of this AccountInfo.


        :return: The email_address of this AccountInfo.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this AccountInfo.


        :param email_address: The email_address of this AccountInfo.
        :type email_address: str
        """

        self._email_address = email_address
