/**
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendVoiceMessageRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendVoiceMessageRequest::OAISendVoiceMessageRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendVoiceMessageRequest::OAISendVoiceMessageRequest() {
    this->initializeModel();
}

OAISendVoiceMessageRequest::~OAISendVoiceMessageRequest() {}

void OAISendVoiceMessageRequest::initializeModel() {

    m_caller_id_isSet = false;
    m_caller_id_isValid = false;

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_destination_phone_number_isSet = false;
    m_destination_phone_number_isValid = false;

    m_origination_phone_number_isSet = false;
    m_origination_phone_number_isValid = false;
}

void OAISendVoiceMessageRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendVoiceMessageRequest::fromJsonObject(QJsonObject json) {

    m_caller_id_isValid = ::OpenAPI::fromJsonValue(m_caller_id, json[QString("CallerId")]);
    m_caller_id_isSet = !json[QString("CallerId")].isNull() && m_caller_id_isValid;

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_destination_phone_number_isValid = ::OpenAPI::fromJsonValue(m_destination_phone_number, json[QString("DestinationPhoneNumber")]);
    m_destination_phone_number_isSet = !json[QString("DestinationPhoneNumber")].isNull() && m_destination_phone_number_isValid;

    m_origination_phone_number_isValid = ::OpenAPI::fromJsonValue(m_origination_phone_number, json[QString("OriginationPhoneNumber")]);
    m_origination_phone_number_isSet = !json[QString("OriginationPhoneNumber")].isNull() && m_origination_phone_number_isValid;
}

QString OAISendVoiceMessageRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendVoiceMessageRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_caller_id_isSet) {
        obj.insert(QString("CallerId"), ::OpenAPI::toJsonValue(m_caller_id));
    }
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    if (m_content.isSet()) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_destination_phone_number_isSet) {
        obj.insert(QString("DestinationPhoneNumber"), ::OpenAPI::toJsonValue(m_destination_phone_number));
    }
    if (m_origination_phone_number_isSet) {
        obj.insert(QString("OriginationPhoneNumber"), ::OpenAPI::toJsonValue(m_origination_phone_number));
    }
    return obj;
}

QString OAISendVoiceMessageRequest::getCallerId() const {
    return m_caller_id;
}
void OAISendVoiceMessageRequest::setCallerId(const QString &caller_id) {
    m_caller_id = caller_id;
    m_caller_id_isSet = true;
}

bool OAISendVoiceMessageRequest::is_caller_id_Set() const{
    return m_caller_id_isSet;
}

bool OAISendVoiceMessageRequest::is_caller_id_Valid() const{
    return m_caller_id_isValid;
}

QString OAISendVoiceMessageRequest::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAISendVoiceMessageRequest::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAISendVoiceMessageRequest::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAISendVoiceMessageRequest::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

OAIVoiceMessageContent OAISendVoiceMessageRequest::getContent() const {
    return m_content;
}
void OAISendVoiceMessageRequest::setContent(const OAIVoiceMessageContent &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAISendVoiceMessageRequest::is_content_Set() const{
    return m_content_isSet;
}

bool OAISendVoiceMessageRequest::is_content_Valid() const{
    return m_content_isValid;
}

QString OAISendVoiceMessageRequest::getDestinationPhoneNumber() const {
    return m_destination_phone_number;
}
void OAISendVoiceMessageRequest::setDestinationPhoneNumber(const QString &destination_phone_number) {
    m_destination_phone_number = destination_phone_number;
    m_destination_phone_number_isSet = true;
}

bool OAISendVoiceMessageRequest::is_destination_phone_number_Set() const{
    return m_destination_phone_number_isSet;
}

bool OAISendVoiceMessageRequest::is_destination_phone_number_Valid() const{
    return m_destination_phone_number_isValid;
}

QString OAISendVoiceMessageRequest::getOriginationPhoneNumber() const {
    return m_origination_phone_number;
}
void OAISendVoiceMessageRequest::setOriginationPhoneNumber(const QString &origination_phone_number) {
    m_origination_phone_number = origination_phone_number;
    m_origination_phone_number_isSet = true;
}

bool OAISendVoiceMessageRequest::is_origination_phone_number_Set() const{
    return m_origination_phone_number_isSet;
}

bool OAISendVoiceMessageRequest::is_origination_phone_number_Valid() const{
    return m_origination_phone_number_isValid;
}

bool OAISendVoiceMessageRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendVoiceMessageRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
