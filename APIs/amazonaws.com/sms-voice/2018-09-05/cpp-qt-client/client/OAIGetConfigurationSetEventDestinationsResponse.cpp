/**
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetConfigurationSetEventDestinationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetConfigurationSetEventDestinationsResponse::OAIGetConfigurationSetEventDestinationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetConfigurationSetEventDestinationsResponse::OAIGetConfigurationSetEventDestinationsResponse() {
    this->initializeModel();
}

OAIGetConfigurationSetEventDestinationsResponse::~OAIGetConfigurationSetEventDestinationsResponse() {}

void OAIGetConfigurationSetEventDestinationsResponse::initializeModel() {

    m_event_destinations_isSet = false;
    m_event_destinations_isValid = false;
}

void OAIGetConfigurationSetEventDestinationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetConfigurationSetEventDestinationsResponse::fromJsonObject(QJsonObject json) {

    m_event_destinations_isValid = ::OpenAPI::fromJsonValue(m_event_destinations, json[QString("EventDestinations")]);
    m_event_destinations_isSet = !json[QString("EventDestinations")].isNull() && m_event_destinations_isValid;
}

QString OAIGetConfigurationSetEventDestinationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetConfigurationSetEventDestinationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_event_destinations.size() > 0) {
        obj.insert(QString("EventDestinations"), ::OpenAPI::toJsonValue(m_event_destinations));
    }
    return obj;
}

QList<OAIEventDestination> OAIGetConfigurationSetEventDestinationsResponse::getEventDestinations() const {
    return m_event_destinations;
}
void OAIGetConfigurationSetEventDestinationsResponse::setEventDestinations(const QList<OAIEventDestination> &event_destinations) {
    m_event_destinations = event_destinations;
    m_event_destinations_isSet = true;
}

bool OAIGetConfigurationSetEventDestinationsResponse::is_event_destinations_Set() const{
    return m_event_destinations_isSet;
}

bool OAIGetConfigurationSetEventDestinationsResponse::is_event_destinations_Valid() const{
    return m_event_destinations_isValid;
}

bool OAIGetConfigurationSetEventDestinationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetConfigurationSetEventDestinationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
