/**
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceMessageContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceMessageContent::OAIVoiceMessageContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceMessageContent::OAIVoiceMessageContent() {
    this->initializeModel();
}

OAIVoiceMessageContent::~OAIVoiceMessageContent() {}

void OAIVoiceMessageContent::initializeModel() {

    m_call_instructions_message_isSet = false;
    m_call_instructions_message_isValid = false;

    m_plain_text_message_isSet = false;
    m_plain_text_message_isValid = false;

    m_ssml_message_isSet = false;
    m_ssml_message_isValid = false;
}

void OAIVoiceMessageContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoiceMessageContent::fromJsonObject(QJsonObject json) {

    m_call_instructions_message_isValid = ::OpenAPI::fromJsonValue(m_call_instructions_message, json[QString("CallInstructionsMessage")]);
    m_call_instructions_message_isSet = !json[QString("CallInstructionsMessage")].isNull() && m_call_instructions_message_isValid;

    m_plain_text_message_isValid = ::OpenAPI::fromJsonValue(m_plain_text_message, json[QString("PlainTextMessage")]);
    m_plain_text_message_isSet = !json[QString("PlainTextMessage")].isNull() && m_plain_text_message_isValid;

    m_ssml_message_isValid = ::OpenAPI::fromJsonValue(m_ssml_message, json[QString("SSMLMessage")]);
    m_ssml_message_isSet = !json[QString("SSMLMessage")].isNull() && m_ssml_message_isValid;
}

QString OAIVoiceMessageContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoiceMessageContent::asJsonObject() const {
    QJsonObject obj;
    if (m_call_instructions_message.isSet()) {
        obj.insert(QString("CallInstructionsMessage"), ::OpenAPI::toJsonValue(m_call_instructions_message));
    }
    if (m_plain_text_message.isSet()) {
        obj.insert(QString("PlainTextMessage"), ::OpenAPI::toJsonValue(m_plain_text_message));
    }
    if (m_ssml_message.isSet()) {
        obj.insert(QString("SSMLMessage"), ::OpenAPI::toJsonValue(m_ssml_message));
    }
    return obj;
}

OAICallInstructionsMessageType OAIVoiceMessageContent::getCallInstructionsMessage() const {
    return m_call_instructions_message;
}
void OAIVoiceMessageContent::setCallInstructionsMessage(const OAICallInstructionsMessageType &call_instructions_message) {
    m_call_instructions_message = call_instructions_message;
    m_call_instructions_message_isSet = true;
}

bool OAIVoiceMessageContent::is_call_instructions_message_Set() const{
    return m_call_instructions_message_isSet;
}

bool OAIVoiceMessageContent::is_call_instructions_message_Valid() const{
    return m_call_instructions_message_isValid;
}

OAIPlainTextMessageType OAIVoiceMessageContent::getPlainTextMessage() const {
    return m_plain_text_message;
}
void OAIVoiceMessageContent::setPlainTextMessage(const OAIPlainTextMessageType &plain_text_message) {
    m_plain_text_message = plain_text_message;
    m_plain_text_message_isSet = true;
}

bool OAIVoiceMessageContent::is_plain_text_message_Set() const{
    return m_plain_text_message_isSet;
}

bool OAIVoiceMessageContent::is_plain_text_message_Valid() const{
    return m_plain_text_message_isValid;
}

OAISSMLMessageType OAIVoiceMessageContent::getSsmlMessage() const {
    return m_ssml_message;
}
void OAIVoiceMessageContent::setSsmlMessage(const OAISSMLMessageType &ssml_message) {
    m_ssml_message = ssml_message;
    m_ssml_message_isSet = true;
}

bool OAIVoiceMessageContent::is_ssml_message_Set() const{
    return m_ssml_message_isSet;
}

bool OAIVoiceMessageContent::is_ssml_message_Valid() const{
    return m_ssml_message_isValid;
}

bool OAIVoiceMessageContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_call_instructions_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_plain_text_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssml_message.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoiceMessageContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
