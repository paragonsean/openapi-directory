/**
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListConfigurationSetsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListConfigurationSetsResponse::OAIListConfigurationSetsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListConfigurationSetsResponse::OAIListConfigurationSetsResponse() {
    this->initializeModel();
}

OAIListConfigurationSetsResponse::~OAIListConfigurationSetsResponse() {}

void OAIListConfigurationSetsResponse::initializeModel() {

    m_configuration_sets_isSet = false;
    m_configuration_sets_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListConfigurationSetsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListConfigurationSetsResponse::fromJsonObject(QJsonObject json) {

    m_configuration_sets_isValid = ::OpenAPI::fromJsonValue(m_configuration_sets, json[QString("ConfigurationSets")]);
    m_configuration_sets_isSet = !json[QString("ConfigurationSets")].isNull() && m_configuration_sets_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListConfigurationSetsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListConfigurationSetsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_sets.isSet()) {
        obj.insert(QString("ConfigurationSets"), ::OpenAPI::toJsonValue(m_configuration_sets));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListConfigurationSetsResponse::getConfigurationSets() const {
    return m_configuration_sets;
}
void OAIListConfigurationSetsResponse::setConfigurationSets(const QList &configuration_sets) {
    m_configuration_sets = configuration_sets;
    m_configuration_sets_isSet = true;
}

bool OAIListConfigurationSetsResponse::is_configuration_sets_Set() const{
    return m_configuration_sets_isSet;
}

bool OAIListConfigurationSetsResponse::is_configuration_sets_Valid() const{
    return m_configuration_sets_isValid;
}

QString OAIListConfigurationSetsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListConfigurationSetsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListConfigurationSetsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListConfigurationSetsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListConfigurationSetsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_sets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListConfigurationSetsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
