/**
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfigurationSetEventDestination_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfigurationSetEventDestination_request::OAICreateConfigurationSetEventDestination_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfigurationSetEventDestination_request::OAICreateConfigurationSetEventDestination_request() {
    this->initializeModel();
}

OAICreateConfigurationSetEventDestination_request::~OAICreateConfigurationSetEventDestination_request() {}

void OAICreateConfigurationSetEventDestination_request::initializeModel() {

    m_event_destination_isSet = false;
    m_event_destination_isValid = false;

    m_event_destination_name_isSet = false;
    m_event_destination_name_isValid = false;
}

void OAICreateConfigurationSetEventDestination_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfigurationSetEventDestination_request::fromJsonObject(QJsonObject json) {

    m_event_destination_isValid = ::OpenAPI::fromJsonValue(m_event_destination, json[QString("EventDestination")]);
    m_event_destination_isSet = !json[QString("EventDestination")].isNull() && m_event_destination_isValid;

    m_event_destination_name_isValid = ::OpenAPI::fromJsonValue(m_event_destination_name, json[QString("EventDestinationName")]);
    m_event_destination_name_isSet = !json[QString("EventDestinationName")].isNull() && m_event_destination_name_isValid;
}

QString OAICreateConfigurationSetEventDestination_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfigurationSetEventDestination_request::asJsonObject() const {
    QJsonObject obj;
    if (m_event_destination.isSet()) {
        obj.insert(QString("EventDestination"), ::OpenAPI::toJsonValue(m_event_destination));
    }
    if (m_event_destination_name_isSet) {
        obj.insert(QString("EventDestinationName"), ::OpenAPI::toJsonValue(m_event_destination_name));
    }
    return obj;
}

OAICreateConfigurationSetEventDestination_request_EventDestination OAICreateConfigurationSetEventDestination_request::getEventDestination() const {
    return m_event_destination;
}
void OAICreateConfigurationSetEventDestination_request::setEventDestination(const OAICreateConfigurationSetEventDestination_request_EventDestination &event_destination) {
    m_event_destination = event_destination;
    m_event_destination_isSet = true;
}

bool OAICreateConfigurationSetEventDestination_request::is_event_destination_Set() const{
    return m_event_destination_isSet;
}

bool OAICreateConfigurationSetEventDestination_request::is_event_destination_Valid() const{
    return m_event_destination_isValid;
}

QString OAICreateConfigurationSetEventDestination_request::getEventDestinationName() const {
    return m_event_destination_name;
}
void OAICreateConfigurationSetEventDestination_request::setEventDestinationName(const QString &event_destination_name) {
    m_event_destination_name = event_destination_name;
    m_event_destination_name_isSet = true;
}

bool OAICreateConfigurationSetEventDestination_request::is_event_destination_name_Set() const{
    return m_event_destination_name_isSet;
}

bool OAICreateConfigurationSetEventDestination_request::is_event_destination_name_Valid() const{
    return m_event_destination_name_isValid;
}

bool OAICreateConfigurationSetEventDestination_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_destination_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfigurationSetEventDestination_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
