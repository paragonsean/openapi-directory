# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlainTextMessageType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language_code: str=None, text: str=None, voice_id: str=None):
        """PlainTextMessageType - a model defined in OpenAPI

        :param language_code: The language_code of this PlainTextMessageType.
        :param text: The text of this PlainTextMessageType.
        :param voice_id: The voice_id of this PlainTextMessageType.
        """
        self.openapi_types = {
            'language_code': str,
            'text': str,
            'voice_id': str
        }

        self.attribute_map = {
            'language_code': 'LanguageCode',
            'text': 'Text',
            'voice_id': 'VoiceId'
        }

        self._language_code = language_code
        self._text = text
        self._voice_id = voice_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlainTextMessageType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlainTextMessageType of this PlainTextMessageType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language_code(self):
        """Gets the language_code of this PlainTextMessageType.


        :return: The language_code of this PlainTextMessageType.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this PlainTextMessageType.


        :param language_code: The language_code of this PlainTextMessageType.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def text(self):
        """Gets the text of this PlainTextMessageType.


        :return: The text of this PlainTextMessageType.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this PlainTextMessageType.


        :param text: The text of this PlainTextMessageType.
        :type text: str
        """

        self._text = text

    @property
    def voice_id(self):
        """Gets the voice_id of this PlainTextMessageType.


        :return: The voice_id of this PlainTextMessageType.
        :rtype: str
        """
        return self._voice_id

    @voice_id.setter
    def voice_id(self, voice_id):
        """Sets the voice_id of this PlainTextMessageType.


        :param voice_id: The voice_id of this PlainTextMessageType.
        :type voice_id: str
        """

        self._voice_id = voice_id
