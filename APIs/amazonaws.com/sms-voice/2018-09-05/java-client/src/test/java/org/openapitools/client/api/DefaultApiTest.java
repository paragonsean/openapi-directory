/*
 * Amazon Pinpoint SMS and Voice Service
 * Pinpoint SMS and Voice Messaging public facing APIs
 *
 * The version of the OpenAPI document: 2018-09-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateConfigurationSetEventDestinationRequest;
import org.openapitools.client.model.CreateConfigurationSetRequest;
import org.openapitools.client.model.GetConfigurationSetEventDestinationsResponse;
import org.openapitools.client.model.ListConfigurationSetsResponse;
import org.openapitools.client.model.SendVoiceMessageRequest;
import org.openapitools.client.model.SendVoiceMessageResponse;
import org.openapitools.client.model.UpdateConfigurationSetEventDestinationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create a new configuration set. After you create the configuration set, you can add one or more event destinations to it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConfigurationSetTest() throws ApiException {
        CreateConfigurationSetRequest createConfigurationSetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createConfigurationSet(createConfigurationSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Create a new event destination in a configuration set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConfigurationSetEventDestinationTest() throws ApiException {
        String configurationSetName = null;
        CreateConfigurationSetEventDestinationRequest createConfigurationSetEventDestinationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createConfigurationSetEventDestination(configurationSetName, createConfigurationSetEventDestinationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an existing configuration set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConfigurationSetTest() throws ApiException {
        String configurationSetName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteConfigurationSet(configurationSetName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an event destination in a configuration set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConfigurationSetEventDestinationTest() throws ApiException {
        String configurationSetName = null;
        String eventDestinationName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteConfigurationSetEventDestination(configurationSetName, eventDestinationName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationSetEventDestinationsTest() throws ApiException {
        String configurationSetName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetConfigurationSetEventDestinationsResponse response = api.getConfigurationSetEventDestinations(configurationSetName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * List all of the configuration sets associated with your Amazon Pinpoint account in the current region.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listConfigurationSetsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        String pageSize = null;
        ListConfigurationSetsResponse response = api.listConfigurationSets(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, pageSize);
        // TODO: test validations
    }

    /**
     * Create a new voice message and send it to a recipient&#39;s phone number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendVoiceMessageTest() throws ApiException {
        SendVoiceMessageRequest sendVoiceMessageRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SendVoiceMessageResponse response = api.sendVoiceMessage(sendVoiceMessageRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Update an event destination in a configuration set. An event destination is a location that you publish information about your voice calls to. For example, you can log an event to an Amazon CloudWatch destination when a call fails.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigurationSetEventDestinationTest() throws ApiException {
        String configurationSetName = null;
        String eventDestinationName = null;
        UpdateConfigurationSetEventDestinationRequest updateConfigurationSetEventDestinationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateConfigurationSetEventDestination(configurationSetName, eventDestinationName, updateConfigurationSetEventDestinationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
