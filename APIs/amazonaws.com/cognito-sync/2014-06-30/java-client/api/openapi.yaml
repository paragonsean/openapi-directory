openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides\
    \ an AWS service and client library that enable cross-device syncing of application-related\
    \ user data. High-level client libraries are available for both iOS and Android.\
    \ You can use these libraries to persist data locally so that it's available even\
    \ if the device is offline. Developer credentials don't need to be stored on the\
    \ mobile device to access the service. You can use Amazon Cognito to obtain a\
    \ normalized user ID and credentials. User data is persisted in a dataset that\
    \ can store up to 1 MB of key-value pairs, and you can have up to 20 datasets\
    \ per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each\
    \ identity is accessible only to credentials assigned to that identity. In order\
    \ to use the Cognito Sync service, you need to make API calls using credentials\
    \ retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\"\
    >Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in\
    \ an Android or iOS application, you will probably want to make API calls via\
    \ the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\"\
    >Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\"\
    >Developer Guide for iOS</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Cognito Sync
  version: 2014-06-30
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: cognito-sync
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cognito-sync-2014-06-30.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/cognito-sync/
servers:
- description: The Amazon Cognito Sync multi-region endpoint
  url: "http://cognito-sync.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Cognito Sync multi-region endpoint
  url: "https://cognito-sync.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Cognito Sync endpoint for China (Beijing) and China (Ningxia)
  url: "http://cognito-sync.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Cognito Sync endpoint for China (Beijing) and China (Ningxia)
  url: "https://cognito-sync.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /identitypools/{IdentityPoolId}/bulkpublish:
    post:
      description: "<p>Initiates a bulk publish of all existing datasets for an Identity\
        \ Pool to the configured stream. Customers are limited to one successful bulk\
        \ publish per 24 hours. Bulk publish is an asynchronous request, customers\
        \ can see the status of the request via the GetBulkPublishDetails operation.</p><p>This\
        \ API can only be called with developer credentials. You cannot call this\
        \ API with the temporary user credentials provided by Cognito Identity.</p>"
      operationId: BulkPublish
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPublishResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequestException'
          description: DuplicateRequestException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyStreamedException'
          description: AlreadyStreamedException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}:
    delete:
      description: "<p>Deletes the specific dataset. The dataset will be deleted permanently,\
        \ and the action can't be undone. Datasets that this dataset was merged with\
        \ will no longer report the merge. Any subsequent operation on this dataset\
        \ will result in a ResourceNotFoundException.</p> <p>This API can be called\
        \ with temporary user credentials provided by Cognito Identity or with developer\
        \ credentials.</p>"
      operationId: DeleteDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A string of up to 128 characters. Allowed characters are a-z,\
          \ A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
      x-accepts:
      - application/json
    get:
      description: "<p>Gets meta data about a dataset by identity and dataset name.\
        \ With Amazon Cognito Sync, each identity has access only to its own data.\
        \ Thus, the credentials used to make this API call need to have access to\
        \ the identity data.</p> <p>This API can be called with temporary user credentials\
        \ provided by Cognito Identity or with developer credentials. You should use\
        \ Cognito Identity credentials to make this API call.</p>"
      operationId: DescribeDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A string of up to 128 characters. Allowed characters are a-z,\
          \ A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: "<p>Posts updates to records and adds and deletes records for a\
        \ dataset and user.</p> <p>The sync count in the record patch is your last\
        \ known sync count for that record. The server will reject an UpdateRecords\
        \ request with a ResourceConflictException if you try to patch a record with\
        \ a new value but a stale sync count.</p><p>For example, if the sync count\
        \ on the server is 5 for a key called highScore and you try and submit a new\
        \ highScore with sync count of 4, the request will be rejected. To obtain\
        \ the current sync count for a record, call ListRecords. On a successful update\
        \ of the record, the response returns the new sync count for that record.\
        \ You should present that sync count the next time you try to update that\
        \ same record. When the record does not exist, specify the sync count as 0.</p>\
        \ <p>This API can be called with temporary user credentials provided by Cognito\
        \ Identity or with developer credentials.</p>"
      operationId: UpdateRecords
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A string of up to 128 characters. Allowed characters are a-z,\
          \ A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      - description: Intended to supply a device ID that will populate the lastModifiedBy
          field referenced in other methods. The ClientContext field is not yet implemented.
        explode: false
        in: header
        name: x-amz-Client-Context
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecords_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecordsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLambdaFunctionOutputException'
          description: InvalidLambdaFunctionOutputException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LambdaThrottledException'
          description: LambdaThrottledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}:
    get:
      description: "<p>Gets usage details (for example, data storage) about a particular\
        \ identity pool.</p> <p>This API can only be called with developer credentials.\
        \ You cannot call this API with the temporary user credentials provided by\
        \ Cognito Identity.</p>"
      operationId: DescribeIdentityPoolUsage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIdentityPoolUsageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identities/{IdentityId}:
    get:
      description: "<p>Gets usage information for an identity, including number of\
        \ datasets and data usage.</p> <p>This API can be called with temporary user\
        \ credentials provided by Cognito Identity or with developer credentials.</p>"
      operationId: DescribeIdentityUsage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIdentityUsageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/getBulkPublishDetails:
    post:
      description: <p>Get the status of the last BulkPublish operation for an identity
        pool.</p><p>This API can only be called with developer credentials. You cannot
        call this API with the temporary user credentials provided by Cognito Identity.</p>
      operationId: GetBulkPublishDetails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBulkPublishDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/events:
    get:
      description: <p>Gets the events and the corresponding Lambda functions associated
        with an identity pool.</p><p>This API can only be called with developer credentials.
        You cannot call this API with the temporary user credentials provided by Cognito
        Identity.</p>
      operationId: GetCognitoEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Cognito Identity Pool ID for the request
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCognitoEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: "<p>Sets the AWS Lambda function for a given event type for an\
        \ identity pool. This request only updates the key/value pair specified. Other\
        \ key/values pairs are not updated. To remove a key value pair, pass a empty\
        \ value for the particular key.</p><p>This API can only be called with developer\
        \ credentials. You cannot call this API with the temporary user credentials\
        \ provided by Cognito Identity.</p>"
      operationId: SetCognitoEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Cognito Identity Pool to use when configuring Cognito Events
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCognitoEvents_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/configuration:
    get:
      description: <p>Gets the configuration settings of an identity pool.</p><p>This
        API can only be called with developer credentials. You cannot call this API
        with the temporary user credentials provided by Cognito Identity.</p>
      operationId: GetIdentityPoolConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. This is the ID of the pool for which to return\
          \ a configuration."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: <p>Sets the necessary configuration for push sync.</p><p>This API
        can only be called with developer credentials. You cannot call this API with
        the temporary user credentials provided by Cognito Identity.</p>
      operationId: SetIdentityPoolConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. This is the ID of the pool to modify."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIdentityPoolConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetIdentityPoolConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets:
    get:
      description: "<p>Lists datasets for an identity. With Amazon Cognito Sync, each\
        \ identity has access only to its own data. Thus, the credentials used to\
        \ make this API call need to have access to the identity data.</p> <p>ListDatasets\
        \ can be called with temporary user credentials provided by Cognito Identity\
        \ or with developer credentials. You should use the Cognito Identity credentials\
        \ to make this API call.</p>"
      operationId: ListDatasets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: A pagination token for obtaining the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /identitypools:
    get:
      description: <p>Gets a list of identity pools registered with Cognito.</p> <p>ListIdentityPoolUsage
        can only be called with developer credentials. You cannot make this API call
        with the temporary user credentials provided by Cognito Identity.</p>
      operationId: ListIdentityPoolUsage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A pagination token for obtaining the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityPoolUsageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records:
    get:
      description: "<p>Gets paginated records, optionally changed after a particular\
        \ sync count for a dataset and identity. With Amazon Cognito Sync, each identity\
        \ has access only to its own data. Thus, the credentials used to make this\
        \ API call need to have access to the identity data.</p> <p>ListRecords can\
        \ be called with temporary user credentials provided by Cognito Identity or\
        \ with developer credentials. You should use Cognito Identity credentials\
        \ to make this API call.</p>"
      operationId: ListRecords
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. GUID generation is unique within a region."
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: "A string of up to 128 characters. Allowed characters are a-z,\
          \ A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      - description: The last server sync count for this record.
        explode: true
        in: query
        name: lastSyncCount
        required: false
        schema:
          type: integer
        style: form
      - description: A pagination token for obtaining the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: "A token containing a session ID, identity ID, and expiration."
        explode: true
        in: query
        name: syncSessionToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identity/{IdentityId}/device:
    post:
      description: <p>Registers a device to receive push sync notifications.</p><p>This
        API can only be called with temporary credentials provided by Cognito Identity.
        You cannot call this API with developer credentials.</p>
      operationId: RegisterDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. Here, the ID of the pool that the identity\
          \ belongs to."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: The unique ID for this identity.
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDevice_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationException'
          description: InvalidConfigurationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}:
    delete:
      description: <p>Unsubscribes from receiving notifications when a dataset is
        modified by another device.</p><p>This API can only be called with temporary
        credentials provided by Cognito Identity. You cannot call this API with developer
        credentials.</p>
      operationId: UnsubscribeFromDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. The ID of the pool to which this identity belongs."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: Unique ID for this identity.
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: The name of the dataset from which to unsubcribe.
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      - description: The unique ID generated for this device by Cognito.
        explode: false
        in: path
        name: DeviceId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeFromDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationException'
          description: InvalidConfigurationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: <p>Subscribes to receive notifications when a dataset is modified
        by another device.</p><p>This API can only be called with temporary credentials
        provided by Cognito Identity. You cannot call this API with developer credentials.</p>
      operationId: SubscribeToDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
          \ created by Amazon Cognito. The ID of the pool to which the identity belongs."
        explode: false
        in: path
        name: IdentityPoolId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: Unique ID for this identity.
        explode: false
        in: path
        name: IdentityId
        required: true
        schema:
          maxLength: 55
          minLength: 1
          pattern: "[\\w-]+:[0-9a-f-]+"
          type: string
        style: simple
      - description: The name of the dataset to subcribe to.
        explode: false
        in: path
        name: DatasetName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.:-]+"
          type: string
        style: simple
      - description: The unique ID generated for this device by Cognito.
        explode: false
        in: path
        name: DeviceId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeToDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationException'
          description: InvalidConfigurationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BulkPublishResponse:
      description: The output for the BulkPublish operation.
      example:
        IdentityPoolId: ""
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
      type: object
    NotAuthorizedException: {}
    InvalidParameterException: {}
    ResourceNotFoundException: {}
    InternalErrorException: {}
    DuplicateRequestException: {}
    AlreadyStreamedException: {}
    DeleteDatasetResponse:
      description: Response to a successful DeleteDataset request.
      example:
        Dataset:
          CreationDate: ""
          LastModifiedDate: ""
          LastModifiedBy: ""
          DataStorage: ""
          DatasetName: ""
          IdentityId: ""
          NumRecords: ""
      properties:
        Dataset:
          $ref: '#/components/schemas/DeleteDatasetResponse_Dataset'
      type: object
    TooManyRequestsException: {}
    ResourceConflictException: {}
    DescribeDatasetResponse:
      description: Response to a successful DescribeDataset request.
      example:
        Dataset:
          CreationDate: ""
          LastModifiedDate: ""
          LastModifiedBy: ""
          DataStorage: ""
          DatasetName: ""
          IdentityId: ""
          NumRecords: ""
      properties:
        Dataset:
          $ref: '#/components/schemas/DescribeDatasetResponse_Dataset'
      type: object
    DescribeIdentityPoolUsageResponse:
      description: Response to a successful DescribeIdentityPoolUsage request.
      example:
        IdentityPoolUsage:
          DataStorage: ""
          LastModifiedDate: ""
          SyncSessionsCount: ""
          IdentityPoolId: ""
      properties:
        IdentityPoolUsage:
          $ref: '#/components/schemas/DescribeIdentityPoolUsageResponse_IdentityPoolUsage'
      type: object
    DescribeIdentityUsageResponse:
      description: The response to a successful DescribeIdentityUsage request.
      example:
        IdentityUsage:
          LastModifiedDate: ""
          DataStorage: ""
          DatasetCount: ""
          IdentityId: ""
          IdentityPoolId: ""
      properties:
        IdentityUsage:
          $ref: '#/components/schemas/DescribeIdentityUsageResponse_IdentityUsage'
      type: object
    GetBulkPublishDetailsResponse:
      description: The output for the GetBulkPublishDetails operation.
      example:
        BulkPublishStartTime: ""
        BulkPublishCompleteTime: ""
        BulkPublishStatus: ""
        IdentityPoolId: ""
        FailureMessage: ""
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
        BulkPublishStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date/time at which the last bulk publish was initiated.
        BulkPublishCompleteTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "If BulkPublishStatus is SUCCEEDED, the time the last bulk\
              \ publish operation completed."
        BulkPublishStatus:
          allOf:
          - $ref: '#/components/schemas/BulkPublishStatus'
          - description: "Status of the last bulk publish operation, valid values\
              \ are: <p>NOT_STARTED - No bulk publish has been requested for this\
              \ identity pool</p> <p>IN_PROGRESS - Data is being published to the\
              \ configured stream</p> <p>SUCCEEDED - All data for the identity pool\
              \ has been published to the configured stream</p> <p>FAILED - Some portion\
              \ of the data has failed to publish, check FailureMessage for the cause.</p>"
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: If BulkPublishStatus is FAILED this field will contain the
              error message that caused the bulk publish to fail.
      type: object
    GetCognitoEventsResponse:
      description: The response from the GetCognitoEvents request
      example:
        Events: ""
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/Events'
          - description: The Cognito Events returned from the GetCognitoEvents request
      type: object
    GetIdentityPoolConfigurationResponse:
      description: The output for the GetIdentityPoolConfiguration operation.
      example:
        PushSync:
          ApplicationArns: ""
          RoleArn: ""
        CognitoStreams:
          StreamingStatus: ""
          StreamName: ""
          RoleArn: ""
        IdentityPoolId: ""
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito."
        PushSync:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_PushSync'
        CognitoStreams:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_CognitoStreams'
      type: object
    ListDatasetsResponse:
      description: Returned for a successful ListDatasets request.
      example:
        Datasets: ""
        NextToken: ""
        Count: ""
      properties:
        Datasets:
          allOf:
          - $ref: '#/components/schemas/DatasetList'
          - description: A set of datasets.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Number of datasets returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A pagination token for obtaining the next page of results.
      type: object
    ListIdentityPoolUsageResponse:
      description: Returned for a successful ListIdentityPoolUsage request.
      example:
        IdentityPoolUsages: ""
        NextToken: ""
        MaxResults: ""
        Count: ""
      properties:
        IdentityPoolUsages:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolUsageList'
          - description: Usage information for the identity pools.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of results to be returned.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Total number of identities for the identity pool.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A pagination token for obtaining the next page of results.
      type: object
    ListRecordsResponse:
      description: Returned for a successful ListRecordsRequest.
      example:
        DatasetExists: ""
        LastModifiedBy: ""
        SyncSessionToken: ""
        NextToken: ""
        DatasetSyncCount: ""
        MergedDatasetNames: ""
        Count: ""
        Records: ""
        DatasetDeletedAfterRequestedSyncCount: ""
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/RecordList'
          - description: A list of all records.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A pagination token for obtaining the next page of results.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Total number of records.
        DatasetSyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Server sync count for this dataset.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user/device that made the last change to this record.
        MergedDatasetNames:
          allOf:
          - $ref: '#/components/schemas/MergedDatasetNameList'
          - description: Names of merged datasets.
        DatasetExists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the dataset exists.
        DatasetDeletedAfterRequestedSyncCount:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean value specifying whether to delete the dataset
              locally.
        SyncSessionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token containing a session ID, identity ID, and expiration."
      type: object
    RegisterDeviceResponse:
      description: Response to a RegisterDevice request.
      example:
        DeviceId: ""
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The unique ID generated for this device by Cognito.
      type: object
    InvalidConfigurationException: {}
    LambdaFunctionArn:
      type: string
    SetIdentityPoolConfigurationResponse:
      description: The output for the SetIdentityPoolConfiguration operation
      example:
        PushSync:
          ApplicationArns: ""
          RoleArn: ""
        CognitoStreams:
          StreamingStatus: ""
          StreamName: ""
          RoleArn: ""
        IdentityPoolId: ""
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito."
        PushSync:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_PushSync'
        CognitoStreams:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_CognitoStreams'
      type: object
    ApplicationArnList:
      items:
        $ref: '#/components/schemas/ApplicationArn'
      type: array
    AssumeRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:aws:iam::\d+:role/.*
      type: string
    StreamName:
      maxLength: 128
      minLength: 1
      type: string
    StreamingStatus:
      enum:
      - ENABLED
      - DISABLED
      type: string
    ConcurrentModificationException: {}
    SubscribeToDatasetResponse:
      description: Response to a SubscribeToDataset request.
      properties: {}
      type: object
    UnsubscribeFromDatasetResponse:
      description: Response to an UnsubscribeFromDataset request.
      properties: {}
      type: object
    UpdateRecordsResponse:
      description: Returned for a successful UpdateRecordsRequest.
      example:
        Records: ""
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/RecordList'
          - description: A list of records that have been updated.
      type: object
    RecordPatch:
      description: An update operation for a record.
      properties:
        Op:
          allOf:
          - $ref: '#/components/schemas/Operation'
          - description: "An operation, either replace or remove."
        Key:
          allOf:
          - $ref: '#/components/schemas/RecordKey'
          - description: The key associated with the record patch.
        Value:
          allOf:
          - $ref: '#/components/schemas/RecordValue'
          - description: The value associated with the record patch.
        SyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Last known server sync count for this record. Set to 0 if
              unknown.
        DeviceLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The last modified date of the client device.
      required:
      - Key
      - Op
      - SyncCount
      type: object
    LimitExceededException: {}
    InvalidLambdaFunctionOutputException: {}
    LambdaThrottledException: {}
    ApplicationArn:
      pattern: "arn:aws:sns:[-0-9a-z]+:\\d+:app/[A-Z_]+/[a-zA-Z0-9_.-]+"
      type: string
    Boolean:
      type: boolean
    IdentityPoolId:
      maxLength: 55
      minLength: 1
      pattern: "[\\w-]+:[0-9a-f-]+"
      type: string
    BulkPublishRequest:
      description: The input for the BulkPublish operation.
      properties: {}
      title: BulkPublishRequest
      type: object
    BulkPublishStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      type: string
    ClientContext:
      type: string
    CognitoEventType:
      type: string
    CognitoStreams:
      description: Configuration options for configure Cognito streams.
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the Cognito stream to receive updates. This stream
              must be in the developers account and in the same region as the identity
              pool.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          - description: The ARN of the role Amazon Cognito can assume in order to
              publish to the stream. This role must grant access to Amazon Cognito
              (cognito-sync) to invoke PutRecord on your Cognito stream.
        StreamingStatus:
          allOf:
          - $ref: '#/components/schemas/StreamingStatus'
          - description: "Status of the Cognito streams. Valid values are: <p>ENABLED\
              \ - Streaming of updates to identity pool is enabled.</p> <p>DISABLED\
              \ - Streaming of updates to identity pool is disabled. Bulk publish\
              \ will also fail if StreamingStatus is DISABLED.</p>"
      type: object
    IdentityId:
      maxLength: 55
      minLength: 1
      pattern: "[\\w-]+:[0-9a-f-]+"
      type: string
    DatasetName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9_.:-]+"
      type: string
    Date:
      format: date-time
      type: string
    String:
      type: string
    Long:
      type: integer
    Dataset:
      description: "A collection of data for an identity pool. An identity pool can\
        \ have multiple datasets. A dataset is per identity and can be general or\
        \ associated with a particular entity in an application (like a saved game).\
        \ Datasets are automatically created if they don't exist. Data is synced by\
        \ dataset, and a dataset can hold up to 1MB of key-value pairs."
      properties:
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: "A string of up to 128 characters. Allowed characters are\
              \ a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Date on which the dataset was created.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Date when the dataset was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device that made the last change to this dataset.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Total size in bytes of the records in this dataset.
        NumRecords:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Number of records in this dataset.
      type: object
    DatasetList:
      items:
        $ref: '#/components/schemas/Dataset'
      type: array
    DeleteDatasetRequest:
      description: A request to delete the specific dataset.
      properties: {}
      title: DeleteDatasetRequest
      type: object
    DescribeDatasetRequest:
      description: "A request for meta data about a dataset (creation date, number\
        \ of records, size) by owner and dataset name."
      properties: {}
      title: DescribeDatasetRequest
      type: object
    DescribeIdentityPoolUsageRequest:
      description: A request for usage information about the identity pool.
      properties: {}
      title: DescribeIdentityPoolUsageRequest
      type: object
    IdentityPoolUsage:
      description: Usage information for the identity pool.
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
        SyncSessionsCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Number of sync sessions for the identity pool.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Data storage information for the identity pool.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Date on which the identity pool was last modified.
      type: object
    DescribeIdentityUsageRequest:
      description: A request for information about the usage of an identity pool.
      properties: {}
      title: DescribeIdentityUsageRequest
      type: object
    IdentityUsage:
      description: Usage information for the identity.
      properties:
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)\
              \ created by Amazon Cognito. GUID generation is unique within a region."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Date on which the identity was last modified.
        DatasetCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Number of datasets for the identity.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Total data storage for this identity.
      type: object
    DeviceId:
      maxLength: 256
      minLength: 1
      type: string
    Events:
      additionalProperties:
        $ref: '#/components/schemas/LambdaFunctionArn'
      maxProperties: 1
      type: object
    GetBulkPublishDetailsRequest:
      description: The input for the GetBulkPublishDetails operation.
      properties: {}
      title: GetBulkPublishDetailsRequest
      type: object
    GetCognitoEventsRequest:
      description: A request for a list of the configured Cognito Events
      properties: {}
      title: GetCognitoEventsRequest
      type: object
    GetIdentityPoolConfigurationRequest:
      description: The input for the GetIdentityPoolConfiguration operation.
      properties: {}
      title: GetIdentityPoolConfigurationRequest
      type: object
    PushSync:
      description: Configuration options to be applied to the identity pool.
      properties:
        ApplicationArns:
          allOf:
          - $ref: '#/components/schemas/ApplicationArnList'
          - description: List of SNS platform application ARNs that could be used
              by clients.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          - description: A role configured to allow Cognito to call SNS on behalf
              of the developer.
      type: object
    IdentityPoolUsageList:
      items:
        $ref: '#/components/schemas/IdentityPoolUsage'
      type: array
    Integer:
      type: integer
    IntegerString:
      type: integer
    ListDatasetsRequest:
      description: Request for a list of datasets for an identity.
      properties: {}
      title: ListDatasetsRequest
      type: object
    ListIdentityPoolUsageRequest:
      description: A request for usage information on an identity pool.
      properties: {}
      title: ListIdentityPoolUsageRequest
      type: object
    SyncSessionToken:
      type: string
    ListRecordsRequest:
      description: A request for a list of records.
      properties: {}
      title: ListRecordsRequest
      type: object
    RecordList:
      items:
        $ref: '#/components/schemas/Record'
      type: array
    MergedDatasetNameList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Operation:
      enum:
      - replace
      - remove
      type: string
    Platform:
      enum:
      - APNS
      - APNS_SANDBOX
      - GCM
      - ADM
      type: string
    PushToken:
      type: string
    RecordKey:
      maxLength: 1024
      minLength: 1
      type: string
    RecordValue:
      maxLength: 1048575
      type: string
    Record:
      description: The basic data structure of a dataset.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/RecordKey'
          - description: The key for the record.
        Value:
          allOf:
          - $ref: '#/components/schemas/RecordValue'
          - description: The value for the record.
        SyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The server sync count for this record.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date on which the record was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user/device that made the last change to this record.
        DeviceLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The last modified date of the client device.
      type: object
    RecordPatchList:
      items:
        $ref: '#/components/schemas/RecordPatch'
      type: array
    RegisterDeviceRequest:
      description: A request to RegisterDevice.
      example:
        Platform: ""
        Token: ""
      properties:
        Platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: "The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX)."
        Token:
          allOf:
          - $ref: '#/components/schemas/PushToken'
          - description: The push token.
      required:
      - Platform
      - Token
      title: RegisterDeviceRequest
      type: object
    SetCognitoEventsRequest:
      description: <p>A request to configure Cognito Events"</p>"
      example:
        Events: ""
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/Events'
          - description: The events to configure
      required:
      - Events
      title: SetCognitoEventsRequest
      type: object
    SetIdentityPoolConfigurationRequest:
      description: The input for the SetIdentityPoolConfiguration operation.
      example:
        PushSync:
          ApplicationArns: ""
          RoleArn: ""
        CognitoStreams:
          StreamingStatus: ""
          StreamName: ""
          RoleArn: ""
      properties:
        PushSync:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_PushSync'
        CognitoStreams:
          $ref: '#/components/schemas/GetIdentityPoolConfigurationResponse_CognitoStreams'
      title: SetIdentityPoolConfigurationRequest
      type: object
    SubscribeToDatasetRequest:
      description: A request to SubscribeToDatasetRequest.
      properties: {}
      title: SubscribeToDatasetRequest
      type: object
    UnsubscribeFromDatasetRequest:
      description: A request to UnsubscribeFromDataset.
      properties: {}
      title: UnsubscribeFromDatasetRequest
      type: object
    UpdateRecordsRequest:
      description: A request to post updates to records or add and delete records
        for a dataset and user.
      example:
        SyncSessionToken: ""
        RecordPatches: ""
        DeviceId: ""
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The unique ID generated for this device by Cognito.
        RecordPatches:
          allOf:
          - $ref: '#/components/schemas/RecordPatchList'
          - description: A list of patch operations.
        SyncSessionToken:
          allOf:
          - $ref: '#/components/schemas/SyncSessionToken'
          - description: The SyncSessionToken returned by a previous call to ListRecords
              for this dataset and identity.
      required:
      - SyncSessionToken
      title: UpdateRecordsRequest
      type: object
    UpdateRecords_request:
      properties:
        DeviceId:
          description: The unique ID generated for this device by Cognito.
          maxLength: 256
          minLength: 1
          type: string
        RecordPatches:
          description: A list of patch operations.
          items:
            $ref: '#/components/schemas/RecordPatch'
          type: array
        SyncSessionToken:
          description: The SyncSessionToken returned by a previous call to ListRecords
            for this dataset and identity.
          type: string
      required:
      - SyncSessionToken
      type: object
    SetCognitoEvents_request:
      properties:
        Events:
          additionalProperties:
            $ref: '#/components/schemas/LambdaFunctionArn'
          description: The events to configure
          maxProperties: 1
          type: object
      required:
      - Events
      type: object
    SetIdentityPoolConfiguration_request_PushSync:
      description: Configuration options to be applied to the identity pool.
      properties:
        ApplicationArns:
          allOf:
          - $ref: '#/components/schemas/ApplicationArnList'
          - description: List of SNS platform application ARNs that could be used
              by clients.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          - description: A role configured to allow Cognito to call SNS on behalf
              of the developer.
      type: object
    SetIdentityPoolConfiguration_request_CognitoStreams:
      description: Configuration options for configure Cognito streams.
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the Cognito stream to receive updates. This stream
              must be in the developers account and in the same region as the identity
              pool.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          - description: The ARN of the role Amazon Cognito can assume in order to
              publish to the stream. This role must grant access to Amazon Cognito
              (cognito-sync) to invoke PutRecord on your Cognito stream.
        StreamingStatus:
          allOf:
          - $ref: '#/components/schemas/StreamingStatus'
          - description: "Status of the Cognito streams. Valid values are: <p>ENABLED\
              \ - Streaming of updates to identity pool is enabled.</p> <p>DISABLED\
              \ - Streaming of updates to identity pool is disabled. Bulk publish\
              \ will also fail if StreamingStatus is DISABLED.</p>"
      type: object
    SetIdentityPoolConfiguration_request:
      properties:
        PushSync:
          $ref: '#/components/schemas/SetIdentityPoolConfiguration_request_PushSync'
        CognitoStreams:
          $ref: '#/components/schemas/SetIdentityPoolConfiguration_request_CognitoStreams'
      type: object
    RegisterDevice_request:
      properties:
        Platform:
          description: "The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX)."
          enum:
          - APNS
          - APNS_SANDBOX
          - GCM
          - ADM
          type: string
        Token:
          description: The push token.
          type: string
      required:
      - Platform
      - Token
      type: object
    DeleteDatasetResponse_Dataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - description: "A collection of data for an identity pool. An identity pool\
          \ can have multiple datasets. A dataset is per identity and can be general\
          \ or associated with a particular entity in an application (like a saved\
          \ game). Datasets are automatically created if they don't exist. Data is\
          \ synced by dataset, and a dataset can hold up to 1MB of key-value pairs."
      example:
        CreationDate: ""
        LastModifiedDate: ""
        LastModifiedBy: ""
        DataStorage: ""
        DatasetName: ""
        IdentityId: ""
        NumRecords: ""
    DescribeDatasetResponse_Dataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - description: "Meta data for a collection of data for an identity. An identity\
          \ can have multiple datasets. A dataset can be general or associated with\
          \ a particular entity in an application (like a saved game). Datasets are\
          \ automatically created if they don't exist. Data is synced by dataset,\
          \ and a dataset can hold up to 1MB of key-value pairs."
      example:
        CreationDate: ""
        LastModifiedDate: ""
        LastModifiedBy: ""
        DataStorage: ""
        DatasetName: ""
        IdentityId: ""
        NumRecords: ""
    DescribeIdentityPoolUsageResponse_IdentityPoolUsage:
      allOf:
      - $ref: '#/components/schemas/IdentityPoolUsage'
      - description: Information about the usage of the identity pool.
      example:
        DataStorage: ""
        LastModifiedDate: ""
        SyncSessionsCount: ""
        IdentityPoolId: ""
    DescribeIdentityUsageResponse_IdentityUsage:
      allOf:
      - $ref: '#/components/schemas/IdentityUsage'
      - description: Usage information for the identity.
      example:
        LastModifiedDate: ""
        DataStorage: ""
        DatasetCount: ""
        IdentityId: ""
        IdentityPoolId: ""
    GetIdentityPoolConfigurationResponse_PushSync:
      allOf:
      - $ref: '#/components/schemas/PushSync'
      - description: Options to apply to this identity pool for push synchronization.
      example:
        ApplicationArns: ""
        RoleArn: ""
    GetIdentityPoolConfigurationResponse_CognitoStreams:
      allOf:
      - $ref: '#/components/schemas/CognitoStreams'
      - description: Options to apply to this identity pool for Amazon Cognito streams.
      example:
        StreamingStatus: ""
        StreamName: ""
        RoleArn: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

