# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListRecordsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, records: List=None, next_token: str=None, count: int=None, dataset_sync_count: int=None, last_modified_by: str=None, merged_dataset_names: List=None, dataset_exists: bool=None, dataset_deleted_after_requested_sync_count: bool=None, sync_session_token: str=None):
        """ListRecordsResponse - a model defined in OpenAPI

        :param records: The records of this ListRecordsResponse.
        :param next_token: The next_token of this ListRecordsResponse.
        :param count: The count of this ListRecordsResponse.
        :param dataset_sync_count: The dataset_sync_count of this ListRecordsResponse.
        :param last_modified_by: The last_modified_by of this ListRecordsResponse.
        :param merged_dataset_names: The merged_dataset_names of this ListRecordsResponse.
        :param dataset_exists: The dataset_exists of this ListRecordsResponse.
        :param dataset_deleted_after_requested_sync_count: The dataset_deleted_after_requested_sync_count of this ListRecordsResponse.
        :param sync_session_token: The sync_session_token of this ListRecordsResponse.
        """
        self.openapi_types = {
            'records': List,
            'next_token': str,
            'count': int,
            'dataset_sync_count': int,
            'last_modified_by': str,
            'merged_dataset_names': List,
            'dataset_exists': bool,
            'dataset_deleted_after_requested_sync_count': bool,
            'sync_session_token': str
        }

        self.attribute_map = {
            'records': 'Records',
            'next_token': 'NextToken',
            'count': 'Count',
            'dataset_sync_count': 'DatasetSyncCount',
            'last_modified_by': 'LastModifiedBy',
            'merged_dataset_names': 'MergedDatasetNames',
            'dataset_exists': 'DatasetExists',
            'dataset_deleted_after_requested_sync_count': 'DatasetDeletedAfterRequestedSyncCount',
            'sync_session_token': 'SyncSessionToken'
        }

        self._records = records
        self._next_token = next_token
        self._count = count
        self._dataset_sync_count = dataset_sync_count
        self._last_modified_by = last_modified_by
        self._merged_dataset_names = merged_dataset_names
        self._dataset_exists = dataset_exists
        self._dataset_deleted_after_requested_sync_count = dataset_deleted_after_requested_sync_count
        self._sync_session_token = sync_session_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListRecordsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListRecordsResponse of this ListRecordsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def records(self):
        """Gets the records of this ListRecordsResponse.


        :return: The records of this ListRecordsResponse.
        :rtype: List
        """
        return self._records

    @records.setter
    def records(self, records):
        """Sets the records of this ListRecordsResponse.


        :param records: The records of this ListRecordsResponse.
        :type records: List
        """

        self._records = records

    @property
    def next_token(self):
        """Gets the next_token of this ListRecordsResponse.


        :return: The next_token of this ListRecordsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListRecordsResponse.


        :param next_token: The next_token of this ListRecordsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def count(self):
        """Gets the count of this ListRecordsResponse.


        :return: The count of this ListRecordsResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ListRecordsResponse.


        :param count: The count of this ListRecordsResponse.
        :type count: int
        """

        self._count = count

    @property
    def dataset_sync_count(self):
        """Gets the dataset_sync_count of this ListRecordsResponse.


        :return: The dataset_sync_count of this ListRecordsResponse.
        :rtype: int
        """
        return self._dataset_sync_count

    @dataset_sync_count.setter
    def dataset_sync_count(self, dataset_sync_count):
        """Sets the dataset_sync_count of this ListRecordsResponse.


        :param dataset_sync_count: The dataset_sync_count of this ListRecordsResponse.
        :type dataset_sync_count: int
        """

        self._dataset_sync_count = dataset_sync_count

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this ListRecordsResponse.


        :return: The last_modified_by of this ListRecordsResponse.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this ListRecordsResponse.


        :param last_modified_by: The last_modified_by of this ListRecordsResponse.
        :type last_modified_by: str
        """

        self._last_modified_by = last_modified_by

    @property
    def merged_dataset_names(self):
        """Gets the merged_dataset_names of this ListRecordsResponse.


        :return: The merged_dataset_names of this ListRecordsResponse.
        :rtype: List
        """
        return self._merged_dataset_names

    @merged_dataset_names.setter
    def merged_dataset_names(self, merged_dataset_names):
        """Sets the merged_dataset_names of this ListRecordsResponse.


        :param merged_dataset_names: The merged_dataset_names of this ListRecordsResponse.
        :type merged_dataset_names: List
        """

        self._merged_dataset_names = merged_dataset_names

    @property
    def dataset_exists(self):
        """Gets the dataset_exists of this ListRecordsResponse.


        :return: The dataset_exists of this ListRecordsResponse.
        :rtype: bool
        """
        return self._dataset_exists

    @dataset_exists.setter
    def dataset_exists(self, dataset_exists):
        """Sets the dataset_exists of this ListRecordsResponse.


        :param dataset_exists: The dataset_exists of this ListRecordsResponse.
        :type dataset_exists: bool
        """

        self._dataset_exists = dataset_exists

    @property
    def dataset_deleted_after_requested_sync_count(self):
        """Gets the dataset_deleted_after_requested_sync_count of this ListRecordsResponse.


        :return: The dataset_deleted_after_requested_sync_count of this ListRecordsResponse.
        :rtype: bool
        """
        return self._dataset_deleted_after_requested_sync_count

    @dataset_deleted_after_requested_sync_count.setter
    def dataset_deleted_after_requested_sync_count(self, dataset_deleted_after_requested_sync_count):
        """Sets the dataset_deleted_after_requested_sync_count of this ListRecordsResponse.


        :param dataset_deleted_after_requested_sync_count: The dataset_deleted_after_requested_sync_count of this ListRecordsResponse.
        :type dataset_deleted_after_requested_sync_count: bool
        """

        self._dataset_deleted_after_requested_sync_count = dataset_deleted_after_requested_sync_count

    @property
    def sync_session_token(self):
        """Gets the sync_session_token of this ListRecordsResponse.


        :return: The sync_session_token of this ListRecordsResponse.
        :rtype: str
        """
        return self._sync_session_token

    @sync_session_token.setter
    def sync_session_token(self, sync_session_token):
        """Sets the sync_session_token of this ListRecordsResponse.


        :param sync_session_token: The sync_session_token of this ListRecordsResponse.
        :type sync_session_token: str
        """

        self._sync_session_token = sync_session_token
