# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListIdentityPoolUsageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_pool_usages: List=None, max_results: int=None, count: int=None, next_token: str=None):
        """ListIdentityPoolUsageResponse - a model defined in OpenAPI

        :param identity_pool_usages: The identity_pool_usages of this ListIdentityPoolUsageResponse.
        :param max_results: The max_results of this ListIdentityPoolUsageResponse.
        :param count: The count of this ListIdentityPoolUsageResponse.
        :param next_token: The next_token of this ListIdentityPoolUsageResponse.
        """
        self.openapi_types = {
            'identity_pool_usages': List,
            'max_results': int,
            'count': int,
            'next_token': str
        }

        self.attribute_map = {
            'identity_pool_usages': 'IdentityPoolUsages',
            'max_results': 'MaxResults',
            'count': 'Count',
            'next_token': 'NextToken'
        }

        self._identity_pool_usages = identity_pool_usages
        self._max_results = max_results
        self._count = count
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIdentityPoolUsageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIdentityPoolUsageResponse of this ListIdentityPoolUsageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_pool_usages(self):
        """Gets the identity_pool_usages of this ListIdentityPoolUsageResponse.


        :return: The identity_pool_usages of this ListIdentityPoolUsageResponse.
        :rtype: List
        """
        return self._identity_pool_usages

    @identity_pool_usages.setter
    def identity_pool_usages(self, identity_pool_usages):
        """Sets the identity_pool_usages of this ListIdentityPoolUsageResponse.


        :param identity_pool_usages: The identity_pool_usages of this ListIdentityPoolUsageResponse.
        :type identity_pool_usages: List
        """

        self._identity_pool_usages = identity_pool_usages

    @property
    def max_results(self):
        """Gets the max_results of this ListIdentityPoolUsageResponse.


        :return: The max_results of this ListIdentityPoolUsageResponse.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListIdentityPoolUsageResponse.


        :param max_results: The max_results of this ListIdentityPoolUsageResponse.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def count(self):
        """Gets the count of this ListIdentityPoolUsageResponse.


        :return: The count of this ListIdentityPoolUsageResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ListIdentityPoolUsageResponse.


        :param count: The count of this ListIdentityPoolUsageResponse.
        :type count: int
        """

        self._count = count

    @property
    def next_token(self):
        """Gets the next_token of this ListIdentityPoolUsageResponse.


        :return: The next_token of this ListIdentityPoolUsageResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListIdentityPoolUsageResponse.


        :param next_token: The next_token of this ListIdentityPoolUsageResponse.
        :type next_token: str
        """

        self._next_token = next_token
