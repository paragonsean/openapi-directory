# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation import Operation
from openapi_server import util


class RecordPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, op: Operation=None, key: str=None, value: str=None, sync_count: int=None, device_last_modified_date: datetime=None):
        """RecordPatch - a model defined in OpenAPI

        :param op: The op of this RecordPatch.
        :param key: The key of this RecordPatch.
        :param value: The value of this RecordPatch.
        :param sync_count: The sync_count of this RecordPatch.
        :param device_last_modified_date: The device_last_modified_date of this RecordPatch.
        """
        self.openapi_types = {
            'op': Operation,
            'key': str,
            'value': str,
            'sync_count': int,
            'device_last_modified_date': datetime
        }

        self.attribute_map = {
            'op': 'Op',
            'key': 'Key',
            'value': 'Value',
            'sync_count': 'SyncCount',
            'device_last_modified_date': 'DeviceLastModifiedDate'
        }

        self._op = op
        self._key = key
        self._value = value
        self._sync_count = sync_count
        self._device_last_modified_date = device_last_modified_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecordPatch of this RecordPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def op(self):
        """Gets the op of this RecordPatch.


        :return: The op of this RecordPatch.
        :rtype: Operation
        """
        return self._op

    @op.setter
    def op(self, op):
        """Sets the op of this RecordPatch.


        :param op: The op of this RecordPatch.
        :type op: Operation
        """
        if op is None:
            raise ValueError("Invalid value for `op`, must not be `None`")

        self._op = op

    @property
    def key(self):
        """Gets the key of this RecordPatch.


        :return: The key of this RecordPatch.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this RecordPatch.


        :param key: The key of this RecordPatch.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def value(self):
        """Gets the value of this RecordPatch.


        :return: The value of this RecordPatch.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this RecordPatch.


        :param value: The value of this RecordPatch.
        :type value: str
        """

        self._value = value

    @property
    def sync_count(self):
        """Gets the sync_count of this RecordPatch.


        :return: The sync_count of this RecordPatch.
        :rtype: int
        """
        return self._sync_count

    @sync_count.setter
    def sync_count(self, sync_count):
        """Sets the sync_count of this RecordPatch.


        :param sync_count: The sync_count of this RecordPatch.
        :type sync_count: int
        """
        if sync_count is None:
            raise ValueError("Invalid value for `sync_count`, must not be `None`")

        self._sync_count = sync_count

    @property
    def device_last_modified_date(self):
        """Gets the device_last_modified_date of this RecordPatch.


        :return: The device_last_modified_date of this RecordPatch.
        :rtype: datetime
        """
        return self._device_last_modified_date

    @device_last_modified_date.setter
    def device_last_modified_date(self, device_last_modified_date):
        """Sets the device_last_modified_date of this RecordPatch.


        :param device_last_modified_date: The device_last_modified_date of this RecordPatch.
        :type device_last_modified_date: datetime
        """

        self._device_last_modified_date = device_last_modified_date
