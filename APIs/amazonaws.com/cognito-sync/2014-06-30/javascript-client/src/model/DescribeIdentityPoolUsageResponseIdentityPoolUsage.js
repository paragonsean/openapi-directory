/**
 * Amazon Cognito Sync
 * <fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\">Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\">Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\">Developer Guide for iOS</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityPoolUsage from './IdentityPoolUsage';

/**
 * The DescribeIdentityPoolUsageResponseIdentityPoolUsage model module.
 * @module model/DescribeIdentityPoolUsageResponseIdentityPoolUsage
 * @version 2014-06-30
 */
class DescribeIdentityPoolUsageResponseIdentityPoolUsage {
    /**
     * Constructs a new <code>DescribeIdentityPoolUsageResponseIdentityPoolUsage</code>.
     * @alias module:model/DescribeIdentityPoolUsageResponseIdentityPoolUsage
     * @implements module:model/IdentityPoolUsage
     */
    constructor() { 
        IdentityPoolUsage.initialize(this);
        DescribeIdentityPoolUsageResponseIdentityPoolUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeIdentityPoolUsageResponseIdentityPoolUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeIdentityPoolUsageResponseIdentityPoolUsage} obj Optional instance to populate.
     * @return {module:model/DescribeIdentityPoolUsageResponseIdentityPoolUsage} The populated <code>DescribeIdentityPoolUsageResponseIdentityPoolUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeIdentityPoolUsageResponseIdentityPoolUsage();
            IdentityPoolUsage.constructFromObject(data, obj);

            if (data.hasOwnProperty('IdentityPoolId')) {
                obj['IdentityPoolId'] = ApiClient.convertToType(data['IdentityPoolId'], 'String');
            }
            if (data.hasOwnProperty('SyncSessionsCount')) {
                obj['SyncSessionsCount'] = ApiClient.convertToType(data['SyncSessionsCount'], 'Number');
            }
            if (data.hasOwnProperty('DataStorage')) {
                obj['DataStorage'] = ApiClient.convertToType(data['DataStorage'], 'Number');
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeIdentityPoolUsageResponseIdentityPoolUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeIdentityPoolUsageResponseIdentityPoolUsage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `IdentityPoolId`
        if (data['IdentityPoolId']) { // data not null
          String.validateJSON(data['IdentityPoolId']);
        }
        // validate the optional field `SyncSessionsCount`
        if (data['SyncSessionsCount']) { // data not null
          Number.validateJSON(data['SyncSessionsCount']);
        }
        // validate the optional field `DataStorage`
        if (data['DataStorage']) { // data not null
          Number.validateJSON(data['DataStorage']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          Date.validateJSON(data['LastModifiedDate']);
        }

        return true;
    }


}



/**
 * @member {String} IdentityPoolId
 */
DescribeIdentityPoolUsageResponseIdentityPoolUsage.prototype['IdentityPoolId'] = undefined;

/**
 * @member {Number} SyncSessionsCount
 */
DescribeIdentityPoolUsageResponseIdentityPoolUsage.prototype['SyncSessionsCount'] = undefined;

/**
 * @member {Number} DataStorage
 */
DescribeIdentityPoolUsageResponseIdentityPoolUsage.prototype['DataStorage'] = undefined;

/**
 * @member {Date} LastModifiedDate
 */
DescribeIdentityPoolUsageResponseIdentityPoolUsage.prototype['LastModifiedDate'] = undefined;


// Implement IdentityPoolUsage interface:
/**
 * @member {String} IdentityPoolId
 */
IdentityPoolUsage.prototype['IdentityPoolId'] = undefined;
/**
 * @member {Number} SyncSessionsCount
 */
IdentityPoolUsage.prototype['SyncSessionsCount'] = undefined;
/**
 * @member {Number} DataStorage
 */
IdentityPoolUsage.prototype['DataStorage'] = undefined;
/**
 * @member {Date} LastModifiedDate
 */
IdentityPoolUsage.prototype['LastModifiedDate'] = undefined;




export default DescribeIdentityPoolUsageResponseIdentityPoolUsage;

