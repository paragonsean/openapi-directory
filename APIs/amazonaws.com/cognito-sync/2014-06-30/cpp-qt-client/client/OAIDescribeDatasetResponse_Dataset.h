/**
 * Amazon Cognito Sync
 * <fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\">Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\">Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\">Developer Guide for iOS</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDatasetResponse_Dataset.h
 *
 * 
 */

#ifndef OAIDescribeDatasetResponse_Dataset_H
#define OAIDescribeDatasetResponse_Dataset_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDatasetResponse_Dataset : public OAIObject {
public:
    OAIDescribeDatasetResponse_Dataset();
    OAIDescribeDatasetResponse_Dataset(QString json);
    ~OAIDescribeDatasetResponse_Dataset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentityId() const;
    void setIdentityId(const QString &identity_id);
    bool is_identity_id_Set() const;
    bool is_identity_id_Valid() const;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getLastModifiedDate() const;
    void setLastModifiedDate(const QDateTime &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    QString getLastModifiedBy() const;
    void setLastModifiedBy(const QString &last_modified_by);
    bool is_last_modified_by_Set() const;
    bool is_last_modified_by_Valid() const;

    qint32 getDataStorage() const;
    void setDataStorage(const qint32 &data_storage);
    bool is_data_storage_Set() const;
    bool is_data_storage_Valid() const;

    qint32 getNumRecords() const;
    void setNumRecords(const qint32 &num_records);
    bool is_num_records_Set() const;
    bool is_num_records_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identity_id;
    bool m_identity_id_isSet;
    bool m_identity_id_isValid;

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    QString m_last_modified_by;
    bool m_last_modified_by_isSet;
    bool m_last_modified_by_isValid;

    qint32 m_data_storage;
    bool m_data_storage_isSet;
    bool m_data_storage_isValid;

    qint32 m_num_records;
    bool m_num_records_isSet;
    bool m_num_records_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDatasetResponse_Dataset)

#endif // OAIDescribeDatasetResponse_Dataset_H
