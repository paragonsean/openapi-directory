/**
 * Amazon Cognito Sync
 * <fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\">Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\">Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\">Developer Guide for iOS</a>.</p>
 *
 * The version of the OpenAPI document: 2014-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetBulkPublishDetailsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetBulkPublishDetailsResponse::OAIGetBulkPublishDetailsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetBulkPublishDetailsResponse::OAIGetBulkPublishDetailsResponse() {
    this->initializeModel();
}

OAIGetBulkPublishDetailsResponse::~OAIGetBulkPublishDetailsResponse() {}

void OAIGetBulkPublishDetailsResponse::initializeModel() {

    m_identity_pool_id_isSet = false;
    m_identity_pool_id_isValid = false;

    m_bulk_publish_start_time_isSet = false;
    m_bulk_publish_start_time_isValid = false;

    m_bulk_publish_complete_time_isSet = false;
    m_bulk_publish_complete_time_isValid = false;

    m_bulk_publish_status_isSet = false;
    m_bulk_publish_status_isValid = false;

    m_failure_message_isSet = false;
    m_failure_message_isValid = false;
}

void OAIGetBulkPublishDetailsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetBulkPublishDetailsResponse::fromJsonObject(QJsonObject json) {

    m_identity_pool_id_isValid = ::OpenAPI::fromJsonValue(m_identity_pool_id, json[QString("IdentityPoolId")]);
    m_identity_pool_id_isSet = !json[QString("IdentityPoolId")].isNull() && m_identity_pool_id_isValid;

    m_bulk_publish_start_time_isValid = ::OpenAPI::fromJsonValue(m_bulk_publish_start_time, json[QString("BulkPublishStartTime")]);
    m_bulk_publish_start_time_isSet = !json[QString("BulkPublishStartTime")].isNull() && m_bulk_publish_start_time_isValid;

    m_bulk_publish_complete_time_isValid = ::OpenAPI::fromJsonValue(m_bulk_publish_complete_time, json[QString("BulkPublishCompleteTime")]);
    m_bulk_publish_complete_time_isSet = !json[QString("BulkPublishCompleteTime")].isNull() && m_bulk_publish_complete_time_isValid;

    m_bulk_publish_status_isValid = ::OpenAPI::fromJsonValue(m_bulk_publish_status, json[QString("BulkPublishStatus")]);
    m_bulk_publish_status_isSet = !json[QString("BulkPublishStatus")].isNull() && m_bulk_publish_status_isValid;

    m_failure_message_isValid = ::OpenAPI::fromJsonValue(m_failure_message, json[QString("FailureMessage")]);
    m_failure_message_isSet = !json[QString("FailureMessage")].isNull() && m_failure_message_isValid;
}

QString OAIGetBulkPublishDetailsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetBulkPublishDetailsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_identity_pool_id_isSet) {
        obj.insert(QString("IdentityPoolId"), ::OpenAPI::toJsonValue(m_identity_pool_id));
    }
    if (m_bulk_publish_start_time_isSet) {
        obj.insert(QString("BulkPublishStartTime"), ::OpenAPI::toJsonValue(m_bulk_publish_start_time));
    }
    if (m_bulk_publish_complete_time_isSet) {
        obj.insert(QString("BulkPublishCompleteTime"), ::OpenAPI::toJsonValue(m_bulk_publish_complete_time));
    }
    if (m_bulk_publish_status.isSet()) {
        obj.insert(QString("BulkPublishStatus"), ::OpenAPI::toJsonValue(m_bulk_publish_status));
    }
    if (m_failure_message_isSet) {
        obj.insert(QString("FailureMessage"), ::OpenAPI::toJsonValue(m_failure_message));
    }
    return obj;
}

QString OAIGetBulkPublishDetailsResponse::getIdentityPoolId() const {
    return m_identity_pool_id;
}
void OAIGetBulkPublishDetailsResponse::setIdentityPoolId(const QString &identity_pool_id) {
    m_identity_pool_id = identity_pool_id;
    m_identity_pool_id_isSet = true;
}

bool OAIGetBulkPublishDetailsResponse::is_identity_pool_id_Set() const{
    return m_identity_pool_id_isSet;
}

bool OAIGetBulkPublishDetailsResponse::is_identity_pool_id_Valid() const{
    return m_identity_pool_id_isValid;
}

QDateTime OAIGetBulkPublishDetailsResponse::getBulkPublishStartTime() const {
    return m_bulk_publish_start_time;
}
void OAIGetBulkPublishDetailsResponse::setBulkPublishStartTime(const QDateTime &bulk_publish_start_time) {
    m_bulk_publish_start_time = bulk_publish_start_time;
    m_bulk_publish_start_time_isSet = true;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_start_time_Set() const{
    return m_bulk_publish_start_time_isSet;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_start_time_Valid() const{
    return m_bulk_publish_start_time_isValid;
}

QDateTime OAIGetBulkPublishDetailsResponse::getBulkPublishCompleteTime() const {
    return m_bulk_publish_complete_time;
}
void OAIGetBulkPublishDetailsResponse::setBulkPublishCompleteTime(const QDateTime &bulk_publish_complete_time) {
    m_bulk_publish_complete_time = bulk_publish_complete_time;
    m_bulk_publish_complete_time_isSet = true;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_complete_time_Set() const{
    return m_bulk_publish_complete_time_isSet;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_complete_time_Valid() const{
    return m_bulk_publish_complete_time_isValid;
}

OAIBulkPublishStatus OAIGetBulkPublishDetailsResponse::getBulkPublishStatus() const {
    return m_bulk_publish_status;
}
void OAIGetBulkPublishDetailsResponse::setBulkPublishStatus(const OAIBulkPublishStatus &bulk_publish_status) {
    m_bulk_publish_status = bulk_publish_status;
    m_bulk_publish_status_isSet = true;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_status_Set() const{
    return m_bulk_publish_status_isSet;
}

bool OAIGetBulkPublishDetailsResponse::is_bulk_publish_status_Valid() const{
    return m_bulk_publish_status_isValid;
}

QString OAIGetBulkPublishDetailsResponse::getFailureMessage() const {
    return m_failure_message;
}
void OAIGetBulkPublishDetailsResponse::setFailureMessage(const QString &failure_message) {
    m_failure_message = failure_message;
    m_failure_message_isSet = true;
}

bool OAIGetBulkPublishDetailsResponse::is_failure_message_Set() const{
    return m_failure_message_isSet;
}

bool OAIGetBulkPublishDetailsResponse::is_failure_message_Valid() const{
    return m_failure_message_isValid;
}

bool OAIGetBulkPublishDetailsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bulk_publish_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bulk_publish_complete_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bulk_publish_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetBulkPublishDetailsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
