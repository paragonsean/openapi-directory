/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBouncedRecipientInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBouncedRecipientInfo::OAIBouncedRecipientInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBouncedRecipientInfo::OAIBouncedRecipientInfo() {
    this->initializeModel();
}

OAIBouncedRecipientInfo::~OAIBouncedRecipientInfo() {}

void OAIBouncedRecipientInfo::initializeModel() {

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_recipient_arn_isSet = false;
    m_recipient_arn_isValid = false;

    m_bounce_type_isSet = false;
    m_bounce_type_isValid = false;

    m_recipient_dsn_fields_isSet = false;
    m_recipient_dsn_fields_isValid = false;
}

void OAIBouncedRecipientInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBouncedRecipientInfo::fromJsonObject(QJsonObject json) {

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("Recipient")]);
    m_recipient_isSet = !json[QString("Recipient")].isNull() && m_recipient_isValid;

    m_recipient_arn_isValid = ::OpenAPI::fromJsonValue(m_recipient_arn, json[QString("RecipientArn")]);
    m_recipient_arn_isSet = !json[QString("RecipientArn")].isNull() && m_recipient_arn_isValid;

    m_bounce_type_isValid = ::OpenAPI::fromJsonValue(m_bounce_type, json[QString("BounceType")]);
    m_bounce_type_isSet = !json[QString("BounceType")].isNull() && m_bounce_type_isValid;

    m_recipient_dsn_fields_isValid = ::OpenAPI::fromJsonValue(m_recipient_dsn_fields, json[QString("RecipientDsnFields")]);
    m_recipient_dsn_fields_isSet = !json[QString("RecipientDsnFields")].isNull() && m_recipient_dsn_fields_isValid;
}

QString OAIBouncedRecipientInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBouncedRecipientInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_recipient_isSet) {
        obj.insert(QString("Recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_recipient_arn_isSet) {
        obj.insert(QString("RecipientArn"), ::OpenAPI::toJsonValue(m_recipient_arn));
    }
    if (m_bounce_type.isSet()) {
        obj.insert(QString("BounceType"), ::OpenAPI::toJsonValue(m_bounce_type));
    }
    if (m_recipient_dsn_fields.isSet()) {
        obj.insert(QString("RecipientDsnFields"), ::OpenAPI::toJsonValue(m_recipient_dsn_fields));
    }
    return obj;
}

QString OAIBouncedRecipientInfo::getRecipient() const {
    return m_recipient;
}
void OAIBouncedRecipientInfo::setRecipient(const QString &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIBouncedRecipientInfo::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIBouncedRecipientInfo::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QString OAIBouncedRecipientInfo::getRecipientArn() const {
    return m_recipient_arn;
}
void OAIBouncedRecipientInfo::setRecipientArn(const QString &recipient_arn) {
    m_recipient_arn = recipient_arn;
    m_recipient_arn_isSet = true;
}

bool OAIBouncedRecipientInfo::is_recipient_arn_Set() const{
    return m_recipient_arn_isSet;
}

bool OAIBouncedRecipientInfo::is_recipient_arn_Valid() const{
    return m_recipient_arn_isValid;
}

OAIBounceType OAIBouncedRecipientInfo::getBounceType() const {
    return m_bounce_type;
}
void OAIBouncedRecipientInfo::setBounceType(const OAIBounceType &bounce_type) {
    m_bounce_type = bounce_type;
    m_bounce_type_isSet = true;
}

bool OAIBouncedRecipientInfo::is_bounce_type_Set() const{
    return m_bounce_type_isSet;
}

bool OAIBouncedRecipientInfo::is_bounce_type_Valid() const{
    return m_bounce_type_isValid;
}

OAIBouncedRecipientInfo_RecipientDsnFields OAIBouncedRecipientInfo::getRecipientDsnFields() const {
    return m_recipient_dsn_fields;
}
void OAIBouncedRecipientInfo::setRecipientDsnFields(const OAIBouncedRecipientInfo_RecipientDsnFields &recipient_dsn_fields) {
    m_recipient_dsn_fields = recipient_dsn_fields;
    m_recipient_dsn_fields_isSet = true;
}

bool OAIBouncedRecipientInfo::is_recipient_dsn_fields_Set() const{
    return m_recipient_dsn_fields_isSet;
}

bool OAIBouncedRecipientInfo::is_recipient_dsn_fields_Valid() const{
    return m_recipient_dsn_fields_isValid;
}

bool OAIBouncedRecipientInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bounce_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_dsn_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBouncedRecipientInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recipient_isValid && true;
}

} // namespace OpenAPI
