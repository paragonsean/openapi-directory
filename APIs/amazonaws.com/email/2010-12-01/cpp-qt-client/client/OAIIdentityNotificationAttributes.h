/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentityNotificationAttributes.h
 *
 * Represents the notification attributes of an identity, including whether an identity has Amazon Simple Notification Service (Amazon SNS) topics set for bounce, complaint, and/or delivery notifications, and whether feedback forwarding is enabled for bounce and complaint notifications.
 */

#ifndef OAIIdentityNotificationAttributes_H
#define OAIIdentityNotificationAttributes_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentityNotificationAttributes : public OAIObject {
public:
    OAIIdentityNotificationAttributes();
    OAIIdentityNotificationAttributes(QString json);
    ~OAIIdentityNotificationAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBounceTopic() const;
    void setBounceTopic(const QString &bounce_topic);
    bool is_bounce_topic_Set() const;
    bool is_bounce_topic_Valid() const;

    QString getComplaintTopic() const;
    void setComplaintTopic(const QString &complaint_topic);
    bool is_complaint_topic_Set() const;
    bool is_complaint_topic_Valid() const;

    QString getDeliveryTopic() const;
    void setDeliveryTopic(const QString &delivery_topic);
    bool is_delivery_topic_Set() const;
    bool is_delivery_topic_Valid() const;

    bool getForwardingEnabled() const;
    void setForwardingEnabled(const bool &forwarding_enabled);
    bool is_forwarding_enabled_Set() const;
    bool is_forwarding_enabled_Valid() const;

    bool getHeadersInBounceNotificationsEnabled() const;
    void setHeadersInBounceNotificationsEnabled(const bool &headers_in_bounce_notifications_enabled);
    bool is_headers_in_bounce_notifications_enabled_Set() const;
    bool is_headers_in_bounce_notifications_enabled_Valid() const;

    bool getHeadersInComplaintNotificationsEnabled() const;
    void setHeadersInComplaintNotificationsEnabled(const bool &headers_in_complaint_notifications_enabled);
    bool is_headers_in_complaint_notifications_enabled_Set() const;
    bool is_headers_in_complaint_notifications_enabled_Valid() const;

    bool getHeadersInDeliveryNotificationsEnabled() const;
    void setHeadersInDeliveryNotificationsEnabled(const bool &headers_in_delivery_notifications_enabled);
    bool is_headers_in_delivery_notifications_enabled_Set() const;
    bool is_headers_in_delivery_notifications_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bounce_topic;
    bool m_bounce_topic_isSet;
    bool m_bounce_topic_isValid;

    QString m_complaint_topic;
    bool m_complaint_topic_isSet;
    bool m_complaint_topic_isValid;

    QString m_delivery_topic;
    bool m_delivery_topic_isSet;
    bool m_delivery_topic_isValid;

    bool m_forwarding_enabled;
    bool m_forwarding_enabled_isSet;
    bool m_forwarding_enabled_isValid;

    bool m_headers_in_bounce_notifications_enabled;
    bool m_headers_in_bounce_notifications_enabled_isSet;
    bool m_headers_in_bounce_notifications_enabled_isValid;

    bool m_headers_in_complaint_notifications_enabled;
    bool m_headers_in_complaint_notifications_enabled_isSet;
    bool m_headers_in_complaint_notifications_enabled_isValid;

    bool m_headers_in_delivery_notifications_enabled;
    bool m_headers_in_delivery_notifications_enabled_isSet;
    bool m_headers_in_delivery_notifications_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentityNotificationAttributes)

#endif // OAIIdentityNotificationAttributes_H
