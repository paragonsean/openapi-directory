/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBouncedRecipientInfo_RecipientDsnFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBouncedRecipientInfo_RecipientDsnFields::OAIBouncedRecipientInfo_RecipientDsnFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBouncedRecipientInfo_RecipientDsnFields::OAIBouncedRecipientInfo_RecipientDsnFields() {
    this->initializeModel();
}

OAIBouncedRecipientInfo_RecipientDsnFields::~OAIBouncedRecipientInfo_RecipientDsnFields() {}

void OAIBouncedRecipientInfo_RecipientDsnFields::initializeModel() {

    m_final_recipient_isSet = false;
    m_final_recipient_isValid = false;

    m_action_isSet = false;
    m_action_isValid = false;

    m_remote_mta_isSet = false;
    m_remote_mta_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_diagnostic_code_isSet = false;
    m_diagnostic_code_isValid = false;

    m_last_attempt_date_isSet = false;
    m_last_attempt_date_isValid = false;

    m_extension_fields_isSet = false;
    m_extension_fields_isValid = false;
}

void OAIBouncedRecipientInfo_RecipientDsnFields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBouncedRecipientInfo_RecipientDsnFields::fromJsonObject(QJsonObject json) {

    m_final_recipient_isValid = ::OpenAPI::fromJsonValue(m_final_recipient, json[QString("FinalRecipient")]);
    m_final_recipient_isSet = !json[QString("FinalRecipient")].isNull() && m_final_recipient_isValid;

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("Action")]);
    m_action_isSet = !json[QString("Action")].isNull() && m_action_isValid;

    m_remote_mta_isValid = ::OpenAPI::fromJsonValue(m_remote_mta, json[QString("RemoteMta")]);
    m_remote_mta_isSet = !json[QString("RemoteMta")].isNull() && m_remote_mta_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_diagnostic_code_isValid = ::OpenAPI::fromJsonValue(m_diagnostic_code, json[QString("DiagnosticCode")]);
    m_diagnostic_code_isSet = !json[QString("DiagnosticCode")].isNull() && m_diagnostic_code_isValid;

    m_last_attempt_date_isValid = ::OpenAPI::fromJsonValue(m_last_attempt_date, json[QString("LastAttemptDate")]);
    m_last_attempt_date_isSet = !json[QString("LastAttemptDate")].isNull() && m_last_attempt_date_isValid;

    m_extension_fields_isValid = ::OpenAPI::fromJsonValue(m_extension_fields, json[QString("ExtensionFields")]);
    m_extension_fields_isSet = !json[QString("ExtensionFields")].isNull() && m_extension_fields_isValid;
}

QString OAIBouncedRecipientInfo_RecipientDsnFields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBouncedRecipientInfo_RecipientDsnFields::asJsonObject() const {
    QJsonObject obj;
    if (m_final_recipient_isSet) {
        obj.insert(QString("FinalRecipient"), ::OpenAPI::toJsonValue(m_final_recipient));
    }
    if (m_action.isSet()) {
        obj.insert(QString("Action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_remote_mta_isSet) {
        obj.insert(QString("RemoteMta"), ::OpenAPI::toJsonValue(m_remote_mta));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_diagnostic_code_isSet) {
        obj.insert(QString("DiagnosticCode"), ::OpenAPI::toJsonValue(m_diagnostic_code));
    }
    if (m_last_attempt_date_isSet) {
        obj.insert(QString("LastAttemptDate"), ::OpenAPI::toJsonValue(m_last_attempt_date));
    }
    if (m_extension_fields.isSet()) {
        obj.insert(QString("ExtensionFields"), ::OpenAPI::toJsonValue(m_extension_fields));
    }
    return obj;
}

QString OAIBouncedRecipientInfo_RecipientDsnFields::getFinalRecipient() const {
    return m_final_recipient;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setFinalRecipient(const QString &final_recipient) {
    m_final_recipient = final_recipient;
    m_final_recipient_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_final_recipient_Set() const{
    return m_final_recipient_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_final_recipient_Valid() const{
    return m_final_recipient_isValid;
}

OAIDsnAction OAIBouncedRecipientInfo_RecipientDsnFields::getAction() const {
    return m_action;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setAction(const OAIDsnAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_action_Set() const{
    return m_action_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIBouncedRecipientInfo_RecipientDsnFields::getRemoteMta() const {
    return m_remote_mta;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setRemoteMta(const QString &remote_mta) {
    m_remote_mta = remote_mta;
    m_remote_mta_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_remote_mta_Set() const{
    return m_remote_mta_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_remote_mta_Valid() const{
    return m_remote_mta_isValid;
}

QString OAIBouncedRecipientInfo_RecipientDsnFields::getStatus() const {
    return m_status;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_status_Set() const{
    return m_status_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIBouncedRecipientInfo_RecipientDsnFields::getDiagnosticCode() const {
    return m_diagnostic_code;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setDiagnosticCode(const QString &diagnostic_code) {
    m_diagnostic_code = diagnostic_code;
    m_diagnostic_code_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_diagnostic_code_Set() const{
    return m_diagnostic_code_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_diagnostic_code_Valid() const{
    return m_diagnostic_code_isValid;
}

QDateTime OAIBouncedRecipientInfo_RecipientDsnFields::getLastAttemptDate() const {
    return m_last_attempt_date;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setLastAttemptDate(const QDateTime &last_attempt_date) {
    m_last_attempt_date = last_attempt_date;
    m_last_attempt_date_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_last_attempt_date_Set() const{
    return m_last_attempt_date_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_last_attempt_date_Valid() const{
    return m_last_attempt_date_isValid;
}

QList OAIBouncedRecipientInfo_RecipientDsnFields::getExtensionFields() const {
    return m_extension_fields;
}
void OAIBouncedRecipientInfo_RecipientDsnFields::setExtensionFields(const QList &extension_fields) {
    m_extension_fields = extension_fields;
    m_extension_fields_isSet = true;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_extension_fields_Set() const{
    return m_extension_fields_isSet;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::is_extension_fields_Valid() const{
    return m_extension_fields_isValid;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_final_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remote_mta_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_diagnostic_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_attempt_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBouncedRecipientInfo_RecipientDsnFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
