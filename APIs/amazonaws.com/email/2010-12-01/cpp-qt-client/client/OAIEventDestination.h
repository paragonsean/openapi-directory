/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventDestination.h
 *
 * &lt;p&gt;Contains information about the event destination that the specified email sending events will be published to.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When you create or update an event destination, you must provide one, and only one, destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose or Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Event destinations are associated with configuration sets, which enable you to publish email sending events to Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS). For information about using configuration sets, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIEventDestination_H
#define OAIEventDestination_H

#include <QJsonObject>

#include "OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_CloudWatchDestination.h"
#include "OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_KinesisFirehoseDestination.h"
#include "OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_SNSDestination.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_KinesisFirehoseDestination;
class OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_CloudWatchDestination;
class OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_SNSDestination;

class OAIEventDestination : public OAIObject {
public:
    OAIEventDestination();
    OAIEventDestination(QString json);
    ~OAIEventDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList getMatchingEventTypes() const;
    void setMatchingEventTypes(const QList &matching_event_types);
    bool is_matching_event_types_Set() const;
    bool is_matching_event_types_Valid() const;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_KinesisFirehoseDestination getKinesisFirehoseDestination() const;
    void setKinesisFirehoseDestination(const OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_KinesisFirehoseDestination &kinesis_firehose_destination);
    bool is_kinesis_firehose_destination_Set() const;
    bool is_kinesis_firehose_destination_Valid() const;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_CloudWatchDestination getCloudWatchDestination() const;
    void setCloudWatchDestination(const OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_CloudWatchDestination &cloud_watch_destination);
    bool is_cloud_watch_destination_Set() const;
    bool is_cloud_watch_destination_Valid() const;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_SNSDestination getSnsDestination() const;
    void setSnsDestination(const OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_SNSDestination &sns_destination);
    bool is_sns_destination_Set() const;
    bool is_sns_destination_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList m_matching_event_types;
    bool m_matching_event_types_isSet;
    bool m_matching_event_types_isValid;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_KinesisFirehoseDestination m_kinesis_firehose_destination;
    bool m_kinesis_firehose_destination_isSet;
    bool m_kinesis_firehose_destination_isValid;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_CloudWatchDestination m_cloud_watch_destination;
    bool m_cloud_watch_destination_isSet;
    bool m_cloud_watch_destination_isValid;

    OAIGET_CreateConfigurationSetEventDestination_EventDestination_parameter_SNSDestination m_sns_destination;
    bool m_sns_destination_isSet;
    bool m_sns_destination_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventDestination)

#endif // OAIEventDestination_H
