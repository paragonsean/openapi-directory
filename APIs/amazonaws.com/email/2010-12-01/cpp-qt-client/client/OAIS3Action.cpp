/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3Action.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3Action::OAIS3Action(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3Action::OAIS3Action() {
    this->initializeModel();
}

OAIS3Action::~OAIS3Action() {}

void OAIS3Action::initializeModel() {

    m_topic_arn_isSet = false;
    m_topic_arn_isValid = false;

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_object_key_prefix_isSet = false;
    m_object_key_prefix_isValid = false;

    m_kms_key_arn_isSet = false;
    m_kms_key_arn_isValid = false;
}

void OAIS3Action::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3Action::fromJsonObject(QJsonObject json) {

    m_topic_arn_isValid = ::OpenAPI::fromJsonValue(m_topic_arn, json[QString("TopicArn")]);
    m_topic_arn_isSet = !json[QString("TopicArn")].isNull() && m_topic_arn_isValid;

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("BucketName")]);
    m_bucket_name_isSet = !json[QString("BucketName")].isNull() && m_bucket_name_isValid;

    m_object_key_prefix_isValid = ::OpenAPI::fromJsonValue(m_object_key_prefix, json[QString("ObjectKeyPrefix")]);
    m_object_key_prefix_isSet = !json[QString("ObjectKeyPrefix")].isNull() && m_object_key_prefix_isValid;

    m_kms_key_arn_isValid = ::OpenAPI::fromJsonValue(m_kms_key_arn, json[QString("KmsKeyArn")]);
    m_kms_key_arn_isSet = !json[QString("KmsKeyArn")].isNull() && m_kms_key_arn_isValid;
}

QString OAIS3Action::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3Action::asJsonObject() const {
    QJsonObject obj;
    if (m_topic_arn_isSet) {
        obj.insert(QString("TopicArn"), ::OpenAPI::toJsonValue(m_topic_arn));
    }
    if (m_bucket_name_isSet) {
        obj.insert(QString("BucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_object_key_prefix_isSet) {
        obj.insert(QString("ObjectKeyPrefix"), ::OpenAPI::toJsonValue(m_object_key_prefix));
    }
    if (m_kms_key_arn_isSet) {
        obj.insert(QString("KmsKeyArn"), ::OpenAPI::toJsonValue(m_kms_key_arn));
    }
    return obj;
}

QString OAIS3Action::getTopicArn() const {
    return m_topic_arn;
}
void OAIS3Action::setTopicArn(const QString &topic_arn) {
    m_topic_arn = topic_arn;
    m_topic_arn_isSet = true;
}

bool OAIS3Action::is_topic_arn_Set() const{
    return m_topic_arn_isSet;
}

bool OAIS3Action::is_topic_arn_Valid() const{
    return m_topic_arn_isValid;
}

QString OAIS3Action::getBucketName() const {
    return m_bucket_name;
}
void OAIS3Action::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIS3Action::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIS3Action::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QString OAIS3Action::getObjectKeyPrefix() const {
    return m_object_key_prefix;
}
void OAIS3Action::setObjectKeyPrefix(const QString &object_key_prefix) {
    m_object_key_prefix = object_key_prefix;
    m_object_key_prefix_isSet = true;
}

bool OAIS3Action::is_object_key_prefix_Set() const{
    return m_object_key_prefix_isSet;
}

bool OAIS3Action::is_object_key_prefix_Valid() const{
    return m_object_key_prefix_isValid;
}

QString OAIS3Action::getKmsKeyArn() const {
    return m_kms_key_arn;
}
void OAIS3Action::setKmsKeyArn(const QString &kms_key_arn) {
    m_kms_key_arn = kms_key_arn;
    m_kms_key_arn_isSet = true;
}

bool OAIS3Action::is_kms_key_arn_Set() const{
    return m_kms_key_arn_isSet;
}

bool OAIS3Action::is_kms_key_arn_Valid() const{
    return m_kms_key_arn_isValid;
}

bool OAIS3Action::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_topic_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_key_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3Action::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_name_isValid && true;
}

} // namespace OpenAPI
