/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDimensionValueSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDimensionValueSource::OAIDimensionValueSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDimensionValueSource::OAIDimensionValueSource() {
    this->initializeModel();
}

OAIDimensionValueSource::~OAIDimensionValueSource() {}

void OAIDimensionValueSource::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDimensionValueSource::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDimensionValueSource::fromJson(QString jsonString) {
    
    if ( jsonString.compare("messageTag", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDimensionValueSource::MESSAGETAG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("emailHeader", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDimensionValueSource::EMAILHEADER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("linkTag", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDimensionValueSource::LINKTAG;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDimensionValueSource::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDimensionValueSource::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDimensionValueSource::MESSAGETAG:
            val = "messageTag";
            break;
        case eOAIDimensionValueSource::EMAILHEADER:
            val = "emailHeader";
            break;
        case eOAIDimensionValueSource::LINKTAG:
            val = "linkTag";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDimensionValueSource::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDimensionValueSource::eOAIDimensionValueSource OAIDimensionValueSource::getValue() const {
    return m_value;
}

void OAIDimensionValueSource::setValue(const OAIDimensionValueSource::eOAIDimensionValueSource& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDimensionValueSource::isSet() const {
    
    return m_value_isSet;
}

bool OAIDimensionValueSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
