/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILambdaAction.h
 *
 * &lt;p&gt;When included in a receipt rule, this action calls an AWS Lambda function and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt; &lt;p&gt;To enable Amazon SES to call your AWS Lambda function or to publish to an Amazon SNS topic of another account, Amazon SES must have permission to access those resources. For information about giving permissions, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For information about using AWS Lambda actions in receipt rules, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-lambda.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAILambdaAction_H
#define OAILambdaAction_H

#include <QJsonObject>

#include "OAIInvocationType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILambdaAction : public OAIObject {
public:
    OAILambdaAction();
    OAILambdaAction(QString json);
    ~OAILambdaAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTopicArn() const;
    void setTopicArn(const QString &topic_arn);
    bool is_topic_arn_Set() const;
    bool is_topic_arn_Valid() const;

    QString getFunctionArn() const;
    void setFunctionArn(const QString &function_arn);
    bool is_function_arn_Set() const;
    bool is_function_arn_Valid() const;

    OAIInvocationType getInvocationType() const;
    void setInvocationType(const OAIInvocationType &invocation_type);
    bool is_invocation_type_Set() const;
    bool is_invocation_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_topic_arn;
    bool m_topic_arn_isSet;
    bool m_topic_arn_isValid;

    QString m_function_arn;
    bool m_function_arn_isSet;
    bool m_function_arn_isValid;

    OAIInvocationType m_invocation_type;
    bool m_invocation_type_isSet;
    bool m_invocation_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILambdaAction)

#endif // OAILambdaAction_H
