/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendEmailRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendEmailRequest::OAISendEmailRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendEmailRequest::OAISendEmailRequest() {
    this->initializeModel();
}

OAISendEmailRequest::~OAISendEmailRequest() {}

void OAISendEmailRequest::initializeModel() {

    m_source_isSet = false;
    m_source_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_reply_to_addresses_isSet = false;
    m_reply_to_addresses_isValid = false;

    m_return_path_isSet = false;
    m_return_path_isValid = false;

    m_source_arn_isSet = false;
    m_source_arn_isValid = false;

    m_return_path_arn_isSet = false;
    m_return_path_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;
}

void OAISendEmailRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendEmailRequest::fromJsonObject(QJsonObject json) {

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;

    m_reply_to_addresses_isValid = ::OpenAPI::fromJsonValue(m_reply_to_addresses, json[QString("ReplyToAddresses")]);
    m_reply_to_addresses_isSet = !json[QString("ReplyToAddresses")].isNull() && m_reply_to_addresses_isValid;

    m_return_path_isValid = ::OpenAPI::fromJsonValue(m_return_path, json[QString("ReturnPath")]);
    m_return_path_isSet = !json[QString("ReturnPath")].isNull() && m_return_path_isValid;

    m_source_arn_isValid = ::OpenAPI::fromJsonValue(m_source_arn, json[QString("SourceArn")]);
    m_source_arn_isSet = !json[QString("SourceArn")].isNull() && m_source_arn_isValid;

    m_return_path_arn_isValid = ::OpenAPI::fromJsonValue(m_return_path_arn, json[QString("ReturnPathArn")]);
    m_return_path_arn_isSet = !json[QString("ReturnPathArn")].isNull() && m_return_path_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;
}

QString OAISendEmailRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendEmailRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_source_isSet) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_destination.isSet()) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_message.isSet()) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_reply_to_addresses.isSet()) {
        obj.insert(QString("ReplyToAddresses"), ::OpenAPI::toJsonValue(m_reply_to_addresses));
    }
    if (m_return_path_isSet) {
        obj.insert(QString("ReturnPath"), ::OpenAPI::toJsonValue(m_return_path));
    }
    if (m_source_arn_isSet) {
        obj.insert(QString("SourceArn"), ::OpenAPI::toJsonValue(m_source_arn));
    }
    if (m_return_path_arn_isSet) {
        obj.insert(QString("ReturnPathArn"), ::OpenAPI::toJsonValue(m_return_path_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    return obj;
}

QString OAISendEmailRequest::getSource() const {
    return m_source;
}
void OAISendEmailRequest::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAISendEmailRequest::is_source_Set() const{
    return m_source_isSet;
}

bool OAISendEmailRequest::is_source_Valid() const{
    return m_source_isValid;
}

OAISendEmailRequest_Destination OAISendEmailRequest::getDestination() const {
    return m_destination;
}
void OAISendEmailRequest::setDestination(const OAISendEmailRequest_Destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAISendEmailRequest::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAISendEmailRequest::is_destination_Valid() const{
    return m_destination_isValid;
}

OAISendEmailRequest_Message OAISendEmailRequest::getMessage() const {
    return m_message;
}
void OAISendEmailRequest::setMessage(const OAISendEmailRequest_Message &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAISendEmailRequest::is_message_Set() const{
    return m_message_isSet;
}

bool OAISendEmailRequest::is_message_Valid() const{
    return m_message_isValid;
}

QList OAISendEmailRequest::getReplyToAddresses() const {
    return m_reply_to_addresses;
}
void OAISendEmailRequest::setReplyToAddresses(const QList &reply_to_addresses) {
    m_reply_to_addresses = reply_to_addresses;
    m_reply_to_addresses_isSet = true;
}

bool OAISendEmailRequest::is_reply_to_addresses_Set() const{
    return m_reply_to_addresses_isSet;
}

bool OAISendEmailRequest::is_reply_to_addresses_Valid() const{
    return m_reply_to_addresses_isValid;
}

QString OAISendEmailRequest::getReturnPath() const {
    return m_return_path;
}
void OAISendEmailRequest::setReturnPath(const QString &return_path) {
    m_return_path = return_path;
    m_return_path_isSet = true;
}

bool OAISendEmailRequest::is_return_path_Set() const{
    return m_return_path_isSet;
}

bool OAISendEmailRequest::is_return_path_Valid() const{
    return m_return_path_isValid;
}

QString OAISendEmailRequest::getSourceArn() const {
    return m_source_arn;
}
void OAISendEmailRequest::setSourceArn(const QString &source_arn) {
    m_source_arn = source_arn;
    m_source_arn_isSet = true;
}

bool OAISendEmailRequest::is_source_arn_Set() const{
    return m_source_arn_isSet;
}

bool OAISendEmailRequest::is_source_arn_Valid() const{
    return m_source_arn_isValid;
}

QString OAISendEmailRequest::getReturnPathArn() const {
    return m_return_path_arn;
}
void OAISendEmailRequest::setReturnPathArn(const QString &return_path_arn) {
    m_return_path_arn = return_path_arn;
    m_return_path_arn_isSet = true;
}

bool OAISendEmailRequest::is_return_path_arn_Set() const{
    return m_return_path_arn_isSet;
}

bool OAISendEmailRequest::is_return_path_arn_Valid() const{
    return m_return_path_arn_isValid;
}

QList OAISendEmailRequest::getTags() const {
    return m_tags;
}
void OAISendEmailRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAISendEmailRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAISendEmailRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAISendEmailRequest::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAISendEmailRequest::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAISendEmailRequest::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAISendEmailRequest::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

bool OAISendEmailRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_path_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendEmailRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_source_isValid && m_destination_isValid && m_message_isValid && true;
}

} // namespace OpenAPI
