/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudWatchDimensionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudWatchDimensionConfiguration::OAICloudWatchDimensionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudWatchDimensionConfiguration::OAICloudWatchDimensionConfiguration() {
    this->initializeModel();
}

OAICloudWatchDimensionConfiguration::~OAICloudWatchDimensionConfiguration() {}

void OAICloudWatchDimensionConfiguration::initializeModel() {

    m_dimension_name_isSet = false;
    m_dimension_name_isValid = false;

    m_dimension_value_source_isSet = false;
    m_dimension_value_source_isValid = false;

    m_default_dimension_value_isSet = false;
    m_default_dimension_value_isValid = false;
}

void OAICloudWatchDimensionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudWatchDimensionConfiguration::fromJsonObject(QJsonObject json) {

    m_dimension_name_isValid = ::OpenAPI::fromJsonValue(m_dimension_name, json[QString("DimensionName")]);
    m_dimension_name_isSet = !json[QString("DimensionName")].isNull() && m_dimension_name_isValid;

    m_dimension_value_source_isValid = ::OpenAPI::fromJsonValue(m_dimension_value_source, json[QString("DimensionValueSource")]);
    m_dimension_value_source_isSet = !json[QString("DimensionValueSource")].isNull() && m_dimension_value_source_isValid;

    m_default_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_default_dimension_value, json[QString("DefaultDimensionValue")]);
    m_default_dimension_value_isSet = !json[QString("DefaultDimensionValue")].isNull() && m_default_dimension_value_isValid;
}

QString OAICloudWatchDimensionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudWatchDimensionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_name_isSet) {
        obj.insert(QString("DimensionName"), ::OpenAPI::toJsonValue(m_dimension_name));
    }
    if (m_dimension_value_source.isSet()) {
        obj.insert(QString("DimensionValueSource"), ::OpenAPI::toJsonValue(m_dimension_value_source));
    }
    if (m_default_dimension_value_isSet) {
        obj.insert(QString("DefaultDimensionValue"), ::OpenAPI::toJsonValue(m_default_dimension_value));
    }
    return obj;
}

QString OAICloudWatchDimensionConfiguration::getDimensionName() const {
    return m_dimension_name;
}
void OAICloudWatchDimensionConfiguration::setDimensionName(const QString &dimension_name) {
    m_dimension_name = dimension_name;
    m_dimension_name_isSet = true;
}

bool OAICloudWatchDimensionConfiguration::is_dimension_name_Set() const{
    return m_dimension_name_isSet;
}

bool OAICloudWatchDimensionConfiguration::is_dimension_name_Valid() const{
    return m_dimension_name_isValid;
}

OAIDimensionValueSource OAICloudWatchDimensionConfiguration::getDimensionValueSource() const {
    return m_dimension_value_source;
}
void OAICloudWatchDimensionConfiguration::setDimensionValueSource(const OAIDimensionValueSource &dimension_value_source) {
    m_dimension_value_source = dimension_value_source;
    m_dimension_value_source_isSet = true;
}

bool OAICloudWatchDimensionConfiguration::is_dimension_value_source_Set() const{
    return m_dimension_value_source_isSet;
}

bool OAICloudWatchDimensionConfiguration::is_dimension_value_source_Valid() const{
    return m_dimension_value_source_isValid;
}

QString OAICloudWatchDimensionConfiguration::getDefaultDimensionValue() const {
    return m_default_dimension_value;
}
void OAICloudWatchDimensionConfiguration::setDefaultDimensionValue(const QString &default_dimension_value) {
    m_default_dimension_value = default_dimension_value;
    m_default_dimension_value_isSet = true;
}

bool OAICloudWatchDimensionConfiguration::is_default_dimension_value_Set() const{
    return m_default_dimension_value_isSet;
}

bool OAICloudWatchDimensionConfiguration::is_default_dimension_value_Valid() const{
    return m_default_dimension_value_isValid;
}

bool OAICloudWatchDimensionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_value_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_dimension_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudWatchDimensionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dimension_name_isValid && m_dimension_value_source_isValid && m_default_dimension_value_isValid && true;
}

} // namespace OpenAPI
