/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetIdentityHeadersInNotificationsEnabledRequest.h
 *
 * Represents a request to set whether Amazon SES includes the original email headers in the Amazon SNS notifications of a specified type. For information about notifications, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications-via-sns.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.
 */

#ifndef OAISetIdentityHeadersInNotificationsEnabledRequest_H
#define OAISetIdentityHeadersInNotificationsEnabledRequest_H

#include <QJsonObject>

#include "OAINotificationType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISetIdentityHeadersInNotificationsEnabledRequest : public OAIObject {
public:
    OAISetIdentityHeadersInNotificationsEnabledRequest();
    OAISetIdentityHeadersInNotificationsEnabledRequest(QString json);
    ~OAISetIdentityHeadersInNotificationsEnabledRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentity() const;
    void setIdentity(const QString &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    OAINotificationType getNotificationType() const;
    void setNotificationType(const OAINotificationType &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    OAINotificationType m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetIdentityHeadersInNotificationsEnabledRequest)

#endif // OAISetIdentityHeadersInNotificationsEnabledRequest_H
