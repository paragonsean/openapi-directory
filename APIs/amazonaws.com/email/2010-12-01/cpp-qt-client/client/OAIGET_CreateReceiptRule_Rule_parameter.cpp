/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_CreateReceiptRule_Rule_parameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_CreateReceiptRule_Rule_parameter::OAIGET_CreateReceiptRule_Rule_parameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_CreateReceiptRule_Rule_parameter::OAIGET_CreateReceiptRule_Rule_parameter() {
    this->initializeModel();
}

OAIGET_CreateReceiptRule_Rule_parameter::~OAIGET_CreateReceiptRule_Rule_parameter() {}

void OAIGET_CreateReceiptRule_Rule_parameter::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_tls_policy_isSet = false;
    m_tls_policy_isValid = false;

    m_recipients_isSet = false;
    m_recipients_isValid = false;

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_scan_enabled_isSet = false;
    m_scan_enabled_isValid = false;
}

void OAIGET_CreateReceiptRule_Rule_parameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_CreateReceiptRule_Rule_parameter::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_tls_policy_isValid = ::OpenAPI::fromJsonValue(m_tls_policy, json[QString("TlsPolicy")]);
    m_tls_policy_isSet = !json[QString("TlsPolicy")].isNull() && m_tls_policy_isValid;

    m_recipients_isValid = ::OpenAPI::fromJsonValue(m_recipients, json[QString("Recipients")]);
    m_recipients_isSet = !json[QString("Recipients")].isNull() && m_recipients_isValid;

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("Actions")]);
    m_actions_isSet = !json[QString("Actions")].isNull() && m_actions_isValid;

    m_scan_enabled_isValid = ::OpenAPI::fromJsonValue(m_scan_enabled, json[QString("ScanEnabled")]);
    m_scan_enabled_isSet = !json[QString("ScanEnabled")].isNull() && m_scan_enabled_isValid;
}

QString OAIGET_CreateReceiptRule_Rule_parameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_CreateReceiptRule_Rule_parameter::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_tls_policy.isSet()) {
        obj.insert(QString("TlsPolicy"), ::OpenAPI::toJsonValue(m_tls_policy));
    }
    if (m_recipients.isSet()) {
        obj.insert(QString("Recipients"), ::OpenAPI::toJsonValue(m_recipients));
    }
    if (m_actions.isSet()) {
        obj.insert(QString("Actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_scan_enabled_isSet) {
        obj.insert(QString("ScanEnabled"), ::OpenAPI::toJsonValue(m_scan_enabled));
    }
    return obj;
}

QString OAIGET_CreateReceiptRule_Rule_parameter::getName() const {
    return m_name;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::getEnabled() const {
    return m_enabled;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAITlsPolicy OAIGET_CreateReceiptRule_Rule_parameter::getTlsPolicy() const {
    return m_tls_policy;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setTlsPolicy(const OAITlsPolicy &tls_policy) {
    m_tls_policy = tls_policy;
    m_tls_policy_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_tls_policy_Set() const{
    return m_tls_policy_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_tls_policy_Valid() const{
    return m_tls_policy_isValid;
}

QList OAIGET_CreateReceiptRule_Rule_parameter::getRecipients() const {
    return m_recipients;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setRecipients(const QList &recipients) {
    m_recipients = recipients;
    m_recipients_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_recipients_Set() const{
    return m_recipients_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_recipients_Valid() const{
    return m_recipients_isValid;
}

QList OAIGET_CreateReceiptRule_Rule_parameter::getActions() const {
    return m_actions;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setActions(const QList &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_actions_Valid() const{
    return m_actions_isValid;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::getScanEnabled() const {
    return m_scan_enabled;
}
void OAIGET_CreateReceiptRule_Rule_parameter::setScanEnabled(const bool &scan_enabled) {
    m_scan_enabled = scan_enabled;
    m_scan_enabled_isSet = true;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_scan_enabled_Set() const{
    return m_scan_enabled_isSet;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::is_scan_enabled_Valid() const{
    return m_scan_enabled_isValid;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipients.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scan_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_CreateReceiptRule_Rule_parameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
