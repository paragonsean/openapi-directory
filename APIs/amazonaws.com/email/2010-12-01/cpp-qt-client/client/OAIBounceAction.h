/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBounceAction.h
 *
 * &lt;p&gt;When included in a receipt rule, this action rejects the received email by returning a bounce response to the sender and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt; &lt;p&gt;For information about sending a bounce message in response to a received email, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-bounce.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIBounceAction_H
#define OAIBounceAction_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBounceAction : public OAIObject {
public:
    OAIBounceAction();
    OAIBounceAction(QString json);
    ~OAIBounceAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTopicArn() const;
    void setTopicArn(const QString &topic_arn);
    bool is_topic_arn_Set() const;
    bool is_topic_arn_Valid() const;

    QString getSmtpReplyCode() const;
    void setSmtpReplyCode(const QString &smtp_reply_code);
    bool is_smtp_reply_code_Set() const;
    bool is_smtp_reply_code_Valid() const;

    QString getStatusCode() const;
    void setStatusCode(const QString &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getSender() const;
    void setSender(const QString &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_topic_arn;
    bool m_topic_arn_isSet;
    bool m_topic_arn_isValid;

    QString m_smtp_reply_code;
    bool m_smtp_reply_code_isSet;
    bool m_smtp_reply_code_isValid;

    QString m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBounceAction)

#endif // OAIBounceAction_H
