/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendRawEmailRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendRawEmailRequest::OAISendRawEmailRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendRawEmailRequest::OAISendRawEmailRequest() {
    this->initializeModel();
}

OAISendRawEmailRequest::~OAISendRawEmailRequest() {}

void OAISendRawEmailRequest::initializeModel() {

    m_source_isSet = false;
    m_source_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;

    m_raw_message_isSet = false;
    m_raw_message_isValid = false;

    m_from_arn_isSet = false;
    m_from_arn_isValid = false;

    m_source_arn_isSet = false;
    m_source_arn_isValid = false;

    m_return_path_arn_isSet = false;
    m_return_path_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;
}

void OAISendRawEmailRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendRawEmailRequest::fromJsonObject(QJsonObject json) {

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("Destinations")]);
    m_destinations_isSet = !json[QString("Destinations")].isNull() && m_destinations_isValid;

    m_raw_message_isValid = ::OpenAPI::fromJsonValue(m_raw_message, json[QString("RawMessage")]);
    m_raw_message_isSet = !json[QString("RawMessage")].isNull() && m_raw_message_isValid;

    m_from_arn_isValid = ::OpenAPI::fromJsonValue(m_from_arn, json[QString("FromArn")]);
    m_from_arn_isSet = !json[QString("FromArn")].isNull() && m_from_arn_isValid;

    m_source_arn_isValid = ::OpenAPI::fromJsonValue(m_source_arn, json[QString("SourceArn")]);
    m_source_arn_isSet = !json[QString("SourceArn")].isNull() && m_source_arn_isValid;

    m_return_path_arn_isValid = ::OpenAPI::fromJsonValue(m_return_path_arn, json[QString("ReturnPathArn")]);
    m_return_path_arn_isSet = !json[QString("ReturnPathArn")].isNull() && m_return_path_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;
}

QString OAISendRawEmailRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendRawEmailRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_source_isSet) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_destinations.isSet()) {
        obj.insert(QString("Destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    if (m_raw_message.isSet()) {
        obj.insert(QString("RawMessage"), ::OpenAPI::toJsonValue(m_raw_message));
    }
    if (m_from_arn_isSet) {
        obj.insert(QString("FromArn"), ::OpenAPI::toJsonValue(m_from_arn));
    }
    if (m_source_arn_isSet) {
        obj.insert(QString("SourceArn"), ::OpenAPI::toJsonValue(m_source_arn));
    }
    if (m_return_path_arn_isSet) {
        obj.insert(QString("ReturnPathArn"), ::OpenAPI::toJsonValue(m_return_path_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    return obj;
}

QString OAISendRawEmailRequest::getSource() const {
    return m_source;
}
void OAISendRawEmailRequest::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAISendRawEmailRequest::is_source_Set() const{
    return m_source_isSet;
}

bool OAISendRawEmailRequest::is_source_Valid() const{
    return m_source_isValid;
}

QList OAISendRawEmailRequest::getDestinations() const {
    return m_destinations;
}
void OAISendRawEmailRequest::setDestinations(const QList &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAISendRawEmailRequest::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAISendRawEmailRequest::is_destinations_Valid() const{
    return m_destinations_isValid;
}

OAISendRawEmailRequest_RawMessage OAISendRawEmailRequest::getRawMessage() const {
    return m_raw_message;
}
void OAISendRawEmailRequest::setRawMessage(const OAISendRawEmailRequest_RawMessage &raw_message) {
    m_raw_message = raw_message;
    m_raw_message_isSet = true;
}

bool OAISendRawEmailRequest::is_raw_message_Set() const{
    return m_raw_message_isSet;
}

bool OAISendRawEmailRequest::is_raw_message_Valid() const{
    return m_raw_message_isValid;
}

QString OAISendRawEmailRequest::getFromArn() const {
    return m_from_arn;
}
void OAISendRawEmailRequest::setFromArn(const QString &from_arn) {
    m_from_arn = from_arn;
    m_from_arn_isSet = true;
}

bool OAISendRawEmailRequest::is_from_arn_Set() const{
    return m_from_arn_isSet;
}

bool OAISendRawEmailRequest::is_from_arn_Valid() const{
    return m_from_arn_isValid;
}

QString OAISendRawEmailRequest::getSourceArn() const {
    return m_source_arn;
}
void OAISendRawEmailRequest::setSourceArn(const QString &source_arn) {
    m_source_arn = source_arn;
    m_source_arn_isSet = true;
}

bool OAISendRawEmailRequest::is_source_arn_Set() const{
    return m_source_arn_isSet;
}

bool OAISendRawEmailRequest::is_source_arn_Valid() const{
    return m_source_arn_isValid;
}

QString OAISendRawEmailRequest::getReturnPathArn() const {
    return m_return_path_arn;
}
void OAISendRawEmailRequest::setReturnPathArn(const QString &return_path_arn) {
    m_return_path_arn = return_path_arn;
    m_return_path_arn_isSet = true;
}

bool OAISendRawEmailRequest::is_return_path_arn_Set() const{
    return m_return_path_arn_isSet;
}

bool OAISendRawEmailRequest::is_return_path_arn_Valid() const{
    return m_return_path_arn_isValid;
}

QList OAISendRawEmailRequest::getTags() const {
    return m_tags;
}
void OAISendRawEmailRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAISendRawEmailRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAISendRawEmailRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAISendRawEmailRequest::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAISendRawEmailRequest::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAISendRawEmailRequest::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAISendRawEmailRequest::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

bool OAISendRawEmailRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_path_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendRawEmailRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_raw_message_isValid && true;
}

} // namespace OpenAPI
