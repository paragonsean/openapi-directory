/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateConfigurationSetEventDestinationRequestEventDestination from './UpdateConfigurationSetEventDestinationRequestEventDestination';

/**
 * The UpdateConfigurationSetEventDestinationRequest model module.
 * @module model/UpdateConfigurationSetEventDestinationRequest
 * @version 2010-12-01
 */
class UpdateConfigurationSetEventDestinationRequest {
    /**
     * Constructs a new <code>UpdateConfigurationSetEventDestinationRequest</code>.
     * Represents a request to update the event destination of a configuration set. Configuration sets enable you to publish email sending events. For information about using configuration sets, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.
     * @alias module:model/UpdateConfigurationSetEventDestinationRequest
     * @param configurationSetName {String} 
     * @param eventDestination {module:model/UpdateConfigurationSetEventDestinationRequestEventDestination} 
     */
    constructor(configurationSetName, eventDestination) { 
        
        UpdateConfigurationSetEventDestinationRequest.initialize(this, configurationSetName, eventDestination);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configurationSetName, eventDestination) { 
        obj['ConfigurationSetName'] = configurationSetName;
        obj['EventDestination'] = eventDestination;
    }

    /**
     * Constructs a <code>UpdateConfigurationSetEventDestinationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConfigurationSetEventDestinationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateConfigurationSetEventDestinationRequest} The populated <code>UpdateConfigurationSetEventDestinationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConfigurationSetEventDestinationRequest();

            if (data.hasOwnProperty('ConfigurationSetName')) {
                obj['ConfigurationSetName'] = ApiClient.convertToType(data['ConfigurationSetName'], 'String');
            }
            if (data.hasOwnProperty('EventDestination')) {
                obj['EventDestination'] = UpdateConfigurationSetEventDestinationRequestEventDestination.constructFromObject(data['EventDestination']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConfigurationSetEventDestinationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConfigurationSetEventDestinationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateConfigurationSetEventDestinationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ConfigurationSetName`
        if (data['ConfigurationSetName']) { // data not null
          String.validateJSON(data['ConfigurationSetName']);
        }
        // validate the optional field `EventDestination`
        if (data['EventDestination']) { // data not null
          UpdateConfigurationSetEventDestinationRequestEventDestination.validateJSON(data['EventDestination']);
        }

        return true;
    }


}

UpdateConfigurationSetEventDestinationRequest.RequiredProperties = ["ConfigurationSetName", "EventDestination"];

/**
 * @member {String} ConfigurationSetName
 */
UpdateConfigurationSetEventDestinationRequest.prototype['ConfigurationSetName'] = undefined;

/**
 * @member {module:model/UpdateConfigurationSetEventDestinationRequestEventDestination} EventDestination
 */
UpdateConfigurationSetEventDestinationRequest.prototype['EventDestination'] = undefined;






export default UpdateConfigurationSetEventDestinationRequest;

