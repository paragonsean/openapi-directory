/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendDataPoint model module.
 * @module model/SendDataPoint
 * @version 2010-12-01
 */
class SendDataPoint {
    /**
     * Constructs a new <code>SendDataPoint</code>.
     * Represents sending statistics data. Each &lt;code&gt;SendDataPoint&lt;/code&gt; contains statistics for a 15-minute period of sending activity. 
     * @alias module:model/SendDataPoint
     */
    constructor() { 
        
        SendDataPoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendDataPoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendDataPoint} obj Optional instance to populate.
     * @return {module:model/SendDataPoint} The populated <code>SendDataPoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendDataPoint();

            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'Date');
            }
            if (data.hasOwnProperty('DeliveryAttempts')) {
                obj['DeliveryAttempts'] = ApiClient.convertToType(data['DeliveryAttempts'], 'Number');
            }
            if (data.hasOwnProperty('Bounces')) {
                obj['Bounces'] = ApiClient.convertToType(data['Bounces'], 'Number');
            }
            if (data.hasOwnProperty('Complaints')) {
                obj['Complaints'] = ApiClient.convertToType(data['Complaints'], 'Number');
            }
            if (data.hasOwnProperty('Rejects')) {
                obj['Rejects'] = ApiClient.convertToType(data['Rejects'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendDataPoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendDataPoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Timestamp`
        if (data['Timestamp']) { // data not null
          Date.validateJSON(data['Timestamp']);
        }
        // validate the optional field `DeliveryAttempts`
        if (data['DeliveryAttempts']) { // data not null
          Number.validateJSON(data['DeliveryAttempts']);
        }
        // validate the optional field `Bounces`
        if (data['Bounces']) { // data not null
          Number.validateJSON(data['Bounces']);
        }
        // validate the optional field `Complaints`
        if (data['Complaints']) { // data not null
          Number.validateJSON(data['Complaints']);
        }
        // validate the optional field `Rejects`
        if (data['Rejects']) { // data not null
          Number.validateJSON(data['Rejects']);
        }

        return true;
    }


}



/**
 * @member {Date} Timestamp
 */
SendDataPoint.prototype['Timestamp'] = undefined;

/**
 * @member {Number} DeliveryAttempts
 */
SendDataPoint.prototype['DeliveryAttempts'] = undefined;

/**
 * @member {Number} Bounces
 */
SendDataPoint.prototype['Bounces'] = undefined;

/**
 * @member {Number} Complaints
 */
SendDataPoint.prototype['Complaints'] = undefined;

/**
 * @member {Number} Rejects
 */
SendDataPoint.prototype['Rejects'] = undefined;






export default SendDataPoint;

