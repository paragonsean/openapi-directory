/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BounceAction from './BounceAction';

/**
 * The ReceiptActionBounceAction model module.
 * @module model/ReceiptActionBounceAction
 * @version 2010-12-01
 */
class ReceiptActionBounceAction {
    /**
     * Constructs a new <code>ReceiptActionBounceAction</code>.
     * @alias module:model/ReceiptActionBounceAction
     * @implements module:model/BounceAction
     * @param smtpReplyCode {String} 
     * @param message {String} 
     * @param sender {String} 
     */
    constructor(smtpReplyCode, message, sender) { 
        BounceAction.initialize(this, smtpReplyCode, message, sender);
        ReceiptActionBounceAction.initialize(this, smtpReplyCode, message, sender);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, smtpReplyCode, message, sender) { 
        obj['SmtpReplyCode'] = smtpReplyCode;
        obj['Message'] = message;
        obj['Sender'] = sender;
    }

    /**
     * Constructs a <code>ReceiptActionBounceAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReceiptActionBounceAction} obj Optional instance to populate.
     * @return {module:model/ReceiptActionBounceAction} The populated <code>ReceiptActionBounceAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReceiptActionBounceAction();
            BounceAction.constructFromObject(data, obj);

            if (data.hasOwnProperty('TopicArn')) {
                obj['TopicArn'] = ApiClient.convertToType(data['TopicArn'], 'String');
            }
            if (data.hasOwnProperty('SmtpReplyCode')) {
                obj['SmtpReplyCode'] = ApiClient.convertToType(data['SmtpReplyCode'], 'String');
            }
            if (data.hasOwnProperty('StatusCode')) {
                obj['StatusCode'] = ApiClient.convertToType(data['StatusCode'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('Sender')) {
                obj['Sender'] = ApiClient.convertToType(data['Sender'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReceiptActionBounceAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReceiptActionBounceAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReceiptActionBounceAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TopicArn`
        if (data['TopicArn']) { // data not null
          String.validateJSON(data['TopicArn']);
        }
        // validate the optional field `SmtpReplyCode`
        if (data['SmtpReplyCode']) { // data not null
          String.validateJSON(data['SmtpReplyCode']);
        }
        // validate the optional field `StatusCode`
        if (data['StatusCode']) { // data not null
          String.validateJSON(data['StatusCode']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `Sender`
        if (data['Sender']) { // data not null
          String.validateJSON(data['Sender']);
        }

        return true;
    }


}

ReceiptActionBounceAction.RequiredProperties = ["SmtpReplyCode", "Message", "Sender"];

/**
 * @member {String} TopicArn
 */
ReceiptActionBounceAction.prototype['TopicArn'] = undefined;

/**
 * @member {String} SmtpReplyCode
 */
ReceiptActionBounceAction.prototype['SmtpReplyCode'] = undefined;

/**
 * @member {String} StatusCode
 */
ReceiptActionBounceAction.prototype['StatusCode'] = undefined;

/**
 * @member {String} Message
 */
ReceiptActionBounceAction.prototype['Message'] = undefined;

/**
 * @member {String} Sender
 */
ReceiptActionBounceAction.prototype['Sender'] = undefined;


// Implement BounceAction interface:
/**
 * @member {String} TopicArn
 */
BounceAction.prototype['TopicArn'] = undefined;
/**
 * @member {String} SmtpReplyCode
 */
BounceAction.prototype['SmtpReplyCode'] = undefined;
/**
 * @member {String} StatusCode
 */
BounceAction.prototype['StatusCode'] = undefined;
/**
 * @member {String} Message
 */
BounceAction.prototype['Message'] = undefined;
/**
 * @member {String} Sender
 */
BounceAction.prototype['Sender'] = undefined;




export default ReceiptActionBounceAction;

