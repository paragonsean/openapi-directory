/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerifyDomainIdentityRequest model module.
 * @module model/VerifyDomainIdentityRequest
 * @version 2010-12-01
 */
class VerifyDomainIdentityRequest {
    /**
     * Constructs a new <code>VerifyDomainIdentityRequest</code>.
     * Represents a request to begin Amazon SES domain verification and to generate the TXT records that you must publish to the DNS server of your domain to complete the verification. For information about domain verification, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.
     * @alias module:model/VerifyDomainIdentityRequest
     * @param domain {String} 
     */
    constructor(domain) { 
        
        VerifyDomainIdentityRequest.initialize(this, domain);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain) { 
        obj['Domain'] = domain;
    }

    /**
     * Constructs a <code>VerifyDomainIdentityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyDomainIdentityRequest} obj Optional instance to populate.
     * @return {module:model/VerifyDomainIdentityRequest} The populated <code>VerifyDomainIdentityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyDomainIdentityRequest();

            if (data.hasOwnProperty('Domain')) {
                obj['Domain'] = ApiClient.convertToType(data['Domain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyDomainIdentityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyDomainIdentityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VerifyDomainIdentityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Domain`
        if (data['Domain']) { // data not null
          String.validateJSON(data['Domain']);
        }

        return true;
    }


}

VerifyDomainIdentityRequest.RequiredProperties = ["Domain"];

/**
 * @member {String} Domain
 */
VerifyDomainIdentityRequest.prototype['Domain'] = undefined;






export default VerifyDomainIdentityRequest;

