/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SendRawEmailRequestRawMessage from './SendRawEmailRequestRawMessage';

/**
 * The SendRawEmailRequest model module.
 * @module model/SendRawEmailRequest
 * @version 2010-12-01
 */
class SendRawEmailRequest {
    /**
     * Constructs a new <code>SendRawEmailRequest</code>.
     * Represents a request to send a single raw email using Amazon SES. For more information, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.
     * @alias module:model/SendRawEmailRequest
     * @param rawMessage {module:model/SendRawEmailRequestRawMessage} 
     */
    constructor(rawMessage) { 
        
        SendRawEmailRequest.initialize(this, rawMessage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rawMessage) { 
        obj['RawMessage'] = rawMessage;
    }

    /**
     * Constructs a <code>SendRawEmailRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendRawEmailRequest} obj Optional instance to populate.
     * @return {module:model/SendRawEmailRequest} The populated <code>SendRawEmailRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendRawEmailRequest();

            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('Destinations')) {
                obj['Destinations'] = ApiClient.convertToType(data['Destinations'], Array);
            }
            if (data.hasOwnProperty('RawMessage')) {
                obj['RawMessage'] = SendRawEmailRequestRawMessage.constructFromObject(data['RawMessage']);
            }
            if (data.hasOwnProperty('FromArn')) {
                obj['FromArn'] = ApiClient.convertToType(data['FromArn'], 'String');
            }
            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
            if (data.hasOwnProperty('ReturnPathArn')) {
                obj['ReturnPathArn'] = ApiClient.convertToType(data['ReturnPathArn'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('ConfigurationSetName')) {
                obj['ConfigurationSetName'] = ApiClient.convertToType(data['ConfigurationSetName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendRawEmailRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendRawEmailRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendRawEmailRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Source`
        if (data['Source']) { // data not null
          String.validateJSON(data['Source']);
        }
        // validate the optional field `Destinations`
        if (data['Destinations']) { // data not null
          Array.validateJSON(data['Destinations']);
        }
        // validate the optional field `RawMessage`
        if (data['RawMessage']) { // data not null
          SendRawEmailRequestRawMessage.validateJSON(data['RawMessage']);
        }
        // validate the optional field `FromArn`
        if (data['FromArn']) { // data not null
          String.validateJSON(data['FromArn']);
        }
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }
        // validate the optional field `ReturnPathArn`
        if (data['ReturnPathArn']) { // data not null
          String.validateJSON(data['ReturnPathArn']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `ConfigurationSetName`
        if (data['ConfigurationSetName']) { // data not null
          String.validateJSON(data['ConfigurationSetName']);
        }

        return true;
    }


}

SendRawEmailRequest.RequiredProperties = ["RawMessage"];

/**
 * @member {String} Source
 */
SendRawEmailRequest.prototype['Source'] = undefined;

/**
 * @member {Array} Destinations
 */
SendRawEmailRequest.prototype['Destinations'] = undefined;

/**
 * @member {module:model/SendRawEmailRequestRawMessage} RawMessage
 */
SendRawEmailRequest.prototype['RawMessage'] = undefined;

/**
 * @member {String} FromArn
 */
SendRawEmailRequest.prototype['FromArn'] = undefined;

/**
 * @member {String} SourceArn
 */
SendRawEmailRequest.prototype['SourceArn'] = undefined;

/**
 * @member {String} ReturnPathArn
 */
SendRawEmailRequest.prototype['ReturnPathArn'] = undefined;

/**
 * @member {Array} Tags
 */
SendRawEmailRequest.prototype['Tags'] = undefined;

/**
 * @member {String} ConfigurationSetName
 */
SendRawEmailRequest.prototype['ConfigurationSetName'] = undefined;






export default SendRawEmailRequest;

