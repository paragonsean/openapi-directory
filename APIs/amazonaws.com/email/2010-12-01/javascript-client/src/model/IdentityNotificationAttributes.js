/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityNotificationAttributes model module.
 * @module model/IdentityNotificationAttributes
 * @version 2010-12-01
 */
class IdentityNotificationAttributes {
    /**
     * Constructs a new <code>IdentityNotificationAttributes</code>.
     * Represents the notification attributes of an identity, including whether an identity has Amazon Simple Notification Service (Amazon SNS) topics set for bounce, complaint, and/or delivery notifications, and whether feedback forwarding is enabled for bounce and complaint notifications.
     * @alias module:model/IdentityNotificationAttributes
     * @param bounceTopic {String} 
     * @param complaintTopic {String} 
     * @param deliveryTopic {String} 
     * @param forwardingEnabled {Boolean} 
     */
    constructor(bounceTopic, complaintTopic, deliveryTopic, forwardingEnabled) { 
        
        IdentityNotificationAttributes.initialize(this, bounceTopic, complaintTopic, deliveryTopic, forwardingEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bounceTopic, complaintTopic, deliveryTopic, forwardingEnabled) { 
        obj['BounceTopic'] = bounceTopic;
        obj['ComplaintTopic'] = complaintTopic;
        obj['DeliveryTopic'] = deliveryTopic;
        obj['ForwardingEnabled'] = forwardingEnabled;
    }

    /**
     * Constructs a <code>IdentityNotificationAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityNotificationAttributes} obj Optional instance to populate.
     * @return {module:model/IdentityNotificationAttributes} The populated <code>IdentityNotificationAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityNotificationAttributes();

            if (data.hasOwnProperty('BounceTopic')) {
                obj['BounceTopic'] = ApiClient.convertToType(data['BounceTopic'], 'String');
            }
            if (data.hasOwnProperty('ComplaintTopic')) {
                obj['ComplaintTopic'] = ApiClient.convertToType(data['ComplaintTopic'], 'String');
            }
            if (data.hasOwnProperty('DeliveryTopic')) {
                obj['DeliveryTopic'] = ApiClient.convertToType(data['DeliveryTopic'], 'String');
            }
            if (data.hasOwnProperty('ForwardingEnabled')) {
                obj['ForwardingEnabled'] = ApiClient.convertToType(data['ForwardingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HeadersInBounceNotificationsEnabled')) {
                obj['HeadersInBounceNotificationsEnabled'] = ApiClient.convertToType(data['HeadersInBounceNotificationsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HeadersInComplaintNotificationsEnabled')) {
                obj['HeadersInComplaintNotificationsEnabled'] = ApiClient.convertToType(data['HeadersInComplaintNotificationsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HeadersInDeliveryNotificationsEnabled')) {
                obj['HeadersInDeliveryNotificationsEnabled'] = ApiClient.convertToType(data['HeadersInDeliveryNotificationsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityNotificationAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityNotificationAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityNotificationAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BounceTopic`
        if (data['BounceTopic']) { // data not null
          String.validateJSON(data['BounceTopic']);
        }
        // validate the optional field `ComplaintTopic`
        if (data['ComplaintTopic']) { // data not null
          String.validateJSON(data['ComplaintTopic']);
        }
        // validate the optional field `DeliveryTopic`
        if (data['DeliveryTopic']) { // data not null
          String.validateJSON(data['DeliveryTopic']);
        }
        // validate the optional field `ForwardingEnabled`
        if (data['ForwardingEnabled']) { // data not null
          Boolean.validateJSON(data['ForwardingEnabled']);
        }
        // validate the optional field `HeadersInBounceNotificationsEnabled`
        if (data['HeadersInBounceNotificationsEnabled']) { // data not null
          Boolean.validateJSON(data['HeadersInBounceNotificationsEnabled']);
        }
        // validate the optional field `HeadersInComplaintNotificationsEnabled`
        if (data['HeadersInComplaintNotificationsEnabled']) { // data not null
          Boolean.validateJSON(data['HeadersInComplaintNotificationsEnabled']);
        }
        // validate the optional field `HeadersInDeliveryNotificationsEnabled`
        if (data['HeadersInDeliveryNotificationsEnabled']) { // data not null
          Boolean.validateJSON(data['HeadersInDeliveryNotificationsEnabled']);
        }

        return true;
    }


}

IdentityNotificationAttributes.RequiredProperties = ["BounceTopic", "ComplaintTopic", "DeliveryTopic", "ForwardingEnabled"];

/**
 * @member {String} BounceTopic
 */
IdentityNotificationAttributes.prototype['BounceTopic'] = undefined;

/**
 * @member {String} ComplaintTopic
 */
IdentityNotificationAttributes.prototype['ComplaintTopic'] = undefined;

/**
 * @member {String} DeliveryTopic
 */
IdentityNotificationAttributes.prototype['DeliveryTopic'] = undefined;

/**
 * @member {Boolean} ForwardingEnabled
 */
IdentityNotificationAttributes.prototype['ForwardingEnabled'] = undefined;

/**
 * @member {Boolean} HeadersInBounceNotificationsEnabled
 */
IdentityNotificationAttributes.prototype['HeadersInBounceNotificationsEnabled'] = undefined;

/**
 * @member {Boolean} HeadersInComplaintNotificationsEnabled
 */
IdentityNotificationAttributes.prototype['HeadersInComplaintNotificationsEnabled'] = undefined;

/**
 * @member {Boolean} HeadersInDeliveryNotificationsEnabled
 */
IdentityNotificationAttributes.prototype['HeadersInDeliveryNotificationsEnabled'] = undefined;






export default IdentityNotificationAttributes;

