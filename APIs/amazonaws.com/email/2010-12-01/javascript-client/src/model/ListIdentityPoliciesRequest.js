/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListIdentityPoliciesRequest model module.
 * @module model/ListIdentityPoliciesRequest
 * @version 2010-12-01
 */
class ListIdentityPoliciesRequest {
    /**
     * Constructs a new <code>ListIdentityPoliciesRequest</code>.
     * Represents a request to return a list of sending authorization policies that are attached to an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.
     * @alias module:model/ListIdentityPoliciesRequest
     * @param identity {String} 
     */
    constructor(identity) { 
        
        ListIdentityPoliciesRequest.initialize(this, identity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identity) { 
        obj['Identity'] = identity;
    }

    /**
     * Constructs a <code>ListIdentityPoliciesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListIdentityPoliciesRequest} obj Optional instance to populate.
     * @return {module:model/ListIdentityPoliciesRequest} The populated <code>ListIdentityPoliciesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListIdentityPoliciesRequest();

            if (data.hasOwnProperty('Identity')) {
                obj['Identity'] = ApiClient.convertToType(data['Identity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListIdentityPoliciesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListIdentityPoliciesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListIdentityPoliciesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Identity`
        if (data['Identity']) { // data not null
          String.validateJSON(data['Identity']);
        }

        return true;
    }


}

ListIdentityPoliciesRequest.RequiredProperties = ["Identity"];

/**
 * @member {String} Identity
 */
ListIdentityPoliciesRequest.prototype['Identity'] = undefined;






export default ListIdentityPoliciesRequest;

