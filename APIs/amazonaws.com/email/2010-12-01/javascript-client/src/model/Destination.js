/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Destination model module.
 * @module model/Destination
 * @version 2010-12-01
 */
class Destination {
    /**
     * Constructs a new <code>Destination</code>.
     * &lt;p&gt;Represents the destination of the message, consisting of To:, CC:, and BCC: fields.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Amazon SES does not support the SMTPUTF8 extension, as described in &lt;a href&#x3D;\&quot;https://tools.ietf.org/html/rfc6531\&quot;&gt;RFC6531&lt;/a&gt;. For this reason, the &lt;i&gt;local part&lt;/i&gt; of a destination email address (the part of the email address that precedes the @ sign) may only contain &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/Email_address#Local-part\&quot;&gt;7-bit ASCII characters&lt;/a&gt;. If the &lt;i&gt;domain part&lt;/i&gt; of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in &lt;a href&#x3D;\&quot;https://tools.ietf.org/html/rfc3492.html\&quot;&gt;RFC3492&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
     * @alias module:model/Destination
     */
    constructor() { 
        
        Destination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Destination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Destination} obj Optional instance to populate.
     * @return {module:model/Destination} The populated <code>Destination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Destination();

            if (data.hasOwnProperty('ToAddresses')) {
                obj['ToAddresses'] = ApiClient.convertToType(data['ToAddresses'], Array);
            }
            if (data.hasOwnProperty('CcAddresses')) {
                obj['CcAddresses'] = ApiClient.convertToType(data['CcAddresses'], Array);
            }
            if (data.hasOwnProperty('BccAddresses')) {
                obj['BccAddresses'] = ApiClient.convertToType(data['BccAddresses'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Destination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Destination</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ToAddresses`
        if (data['ToAddresses']) { // data not null
          Array.validateJSON(data['ToAddresses']);
        }
        // validate the optional field `CcAddresses`
        if (data['CcAddresses']) { // data not null
          Array.validateJSON(data['CcAddresses']);
        }
        // validate the optional field `BccAddresses`
        if (data['BccAddresses']) { // data not null
          Array.validateJSON(data['BccAddresses']);
        }

        return true;
    }


}



/**
 * @member {Array} ToAddresses
 */
Destination.prototype['ToAddresses'] = undefined;

/**
 * @member {Array} CcAddresses
 */
Destination.prototype['CcAddresses'] = undefined;

/**
 * @member {Array} BccAddresses
 */
Destination.prototype['BccAddresses'] = undefined;






export default Destination;

