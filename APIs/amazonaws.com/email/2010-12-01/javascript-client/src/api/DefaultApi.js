/**
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BouncedRecipientInfo from '../model/BouncedRecipientInfo';
import BulkEmailDestination from '../model/BulkEmailDestination';
import CloneReceiptRuleSetRequest from '../model/CloneReceiptRuleSetRequest';
import ConfigurationSetAttribute from '../model/ConfigurationSetAttribute';
import CreateConfigurationSetEventDestinationRequest from '../model/CreateConfigurationSetEventDestinationRequest';
import CreateConfigurationSetRequest from '../model/CreateConfigurationSetRequest';
import CreateConfigurationSetTrackingOptionsRequest from '../model/CreateConfigurationSetTrackingOptionsRequest';
import CreateCustomVerificationEmailTemplateRequest from '../model/CreateCustomVerificationEmailTemplateRequest';
import CreateReceiptFilterRequest from '../model/CreateReceiptFilterRequest';
import CreateReceiptRuleRequest from '../model/CreateReceiptRuleRequest';
import CreateReceiptRuleSetRequest from '../model/CreateReceiptRuleSetRequest';
import CreateTemplateRequest from '../model/CreateTemplateRequest';
import DeleteConfigurationSetEventDestinationRequest from '../model/DeleteConfigurationSetEventDestinationRequest';
import DeleteConfigurationSetRequest from '../model/DeleteConfigurationSetRequest';
import DeleteConfigurationSetTrackingOptionsRequest from '../model/DeleteConfigurationSetTrackingOptionsRequest';
import DeleteCustomVerificationEmailTemplateRequest from '../model/DeleteCustomVerificationEmailTemplateRequest';
import DeleteIdentityPolicyRequest from '../model/DeleteIdentityPolicyRequest';
import DeleteIdentityRequest from '../model/DeleteIdentityRequest';
import DeleteReceiptFilterRequest from '../model/DeleteReceiptFilterRequest';
import DeleteReceiptRuleRequest from '../model/DeleteReceiptRuleRequest';
import DeleteReceiptRuleSetRequest from '../model/DeleteReceiptRuleSetRequest';
import DeleteTemplateRequest from '../model/DeleteTemplateRequest';
import DeleteVerifiedEmailAddressRequest from '../model/DeleteVerifiedEmailAddressRequest';
import DescribeActiveReceiptRuleSetResponse from '../model/DescribeActiveReceiptRuleSetResponse';
import DescribeConfigurationSetRequest from '../model/DescribeConfigurationSetRequest';
import DescribeConfigurationSetResponse from '../model/DescribeConfigurationSetResponse';
import DescribeReceiptRuleRequest from '../model/DescribeReceiptRuleRequest';
import DescribeReceiptRuleResponse from '../model/DescribeReceiptRuleResponse';
import DescribeReceiptRuleSetRequest from '../model/DescribeReceiptRuleSetRequest';
import DescribeReceiptRuleSetResponse from '../model/DescribeReceiptRuleSetResponse';
import GETCreateConfigurationSetConfigurationSetParameter from '../model/GETCreateConfigurationSetConfigurationSetParameter';
import GETCreateConfigurationSetEventDestinationEventDestinationParameter from '../model/GETCreateConfigurationSetEventDestinationEventDestinationParameter';
import GETCreateConfigurationSetTrackingOptionsTrackingOptionsParameter from '../model/GETCreateConfigurationSetTrackingOptionsTrackingOptionsParameter';
import GETCreateReceiptFilterFilterParameter from '../model/GETCreateReceiptFilterFilterParameter';
import GETCreateReceiptRuleRuleParameter from '../model/GETCreateReceiptRuleRuleParameter';
import GETCreateTemplateTemplateParameter from '../model/GETCreateTemplateTemplateParameter';
import GETPutConfigurationSetDeliveryOptionsDeliveryOptionsParameter from '../model/GETPutConfigurationSetDeliveryOptionsDeliveryOptionsParameter';
import GETSendBounceMessageDsnParameter from '../model/GETSendBounceMessageDsnParameter';
import GETSendEmailDestinationParameter from '../model/GETSendEmailDestinationParameter';
import GETSendEmailMessageParameter from '../model/GETSendEmailMessageParameter';
import GETSendRawEmailRawMessageParameter from '../model/GETSendRawEmailRawMessageParameter';
import GetAccountSendingEnabledResponse from '../model/GetAccountSendingEnabledResponse';
import GetCustomVerificationEmailTemplateRequest from '../model/GetCustomVerificationEmailTemplateRequest';
import GetCustomVerificationEmailTemplateResponse from '../model/GetCustomVerificationEmailTemplateResponse';
import GetIdentityDkimAttributesRequest from '../model/GetIdentityDkimAttributesRequest';
import GetIdentityDkimAttributesResponse from '../model/GetIdentityDkimAttributesResponse';
import GetIdentityMailFromDomainAttributesRequest from '../model/GetIdentityMailFromDomainAttributesRequest';
import GetIdentityMailFromDomainAttributesResponse from '../model/GetIdentityMailFromDomainAttributesResponse';
import GetIdentityNotificationAttributesRequest from '../model/GetIdentityNotificationAttributesRequest';
import GetIdentityNotificationAttributesResponse from '../model/GetIdentityNotificationAttributesResponse';
import GetIdentityPoliciesRequest from '../model/GetIdentityPoliciesRequest';
import GetIdentityPoliciesResponse from '../model/GetIdentityPoliciesResponse';
import GetIdentityVerificationAttributesRequest from '../model/GetIdentityVerificationAttributesRequest';
import GetIdentityVerificationAttributesResponse from '../model/GetIdentityVerificationAttributesResponse';
import GetSendQuotaResponse from '../model/GetSendQuotaResponse';
import GetSendStatisticsResponse from '../model/GetSendStatisticsResponse';
import GetTemplateRequest from '../model/GetTemplateRequest';
import GetTemplateResponse from '../model/GetTemplateResponse';
import ListConfigurationSetsRequest from '../model/ListConfigurationSetsRequest';
import ListConfigurationSetsResponse from '../model/ListConfigurationSetsResponse';
import ListCustomVerificationEmailTemplatesRequest from '../model/ListCustomVerificationEmailTemplatesRequest';
import ListCustomVerificationEmailTemplatesResponse from '../model/ListCustomVerificationEmailTemplatesResponse';
import ListIdentitiesRequest from '../model/ListIdentitiesRequest';
import ListIdentitiesResponse from '../model/ListIdentitiesResponse';
import ListIdentityPoliciesRequest from '../model/ListIdentityPoliciesRequest';
import ListIdentityPoliciesResponse from '../model/ListIdentityPoliciesResponse';
import ListReceiptFiltersResponse from '../model/ListReceiptFiltersResponse';
import ListReceiptRuleSetsRequest from '../model/ListReceiptRuleSetsRequest';
import ListReceiptRuleSetsResponse from '../model/ListReceiptRuleSetsResponse';
import ListTemplatesRequest from '../model/ListTemplatesRequest';
import ListTemplatesResponse from '../model/ListTemplatesResponse';
import ListVerifiedEmailAddressesResponse from '../model/ListVerifiedEmailAddressesResponse';
import MessageTag from '../model/MessageTag';
import PutConfigurationSetDeliveryOptionsRequest from '../model/PutConfigurationSetDeliveryOptionsRequest';
import PutIdentityPolicyRequest from '../model/PutIdentityPolicyRequest';
import ReorderReceiptRuleSetRequest from '../model/ReorderReceiptRuleSetRequest';
import SendBounceRequest from '../model/SendBounceRequest';
import SendBounceResponse from '../model/SendBounceResponse';
import SendBulkTemplatedEmailRequest from '../model/SendBulkTemplatedEmailRequest';
import SendBulkTemplatedEmailResponse from '../model/SendBulkTemplatedEmailResponse';
import SendCustomVerificationEmailRequest from '../model/SendCustomVerificationEmailRequest';
import SendCustomVerificationEmailResponse from '../model/SendCustomVerificationEmailResponse';
import SendEmailRequest from '../model/SendEmailRequest';
import SendEmailResponse from '../model/SendEmailResponse';
import SendRawEmailRequest from '../model/SendRawEmailRequest';
import SendRawEmailResponse from '../model/SendRawEmailResponse';
import SendTemplatedEmailRequest from '../model/SendTemplatedEmailRequest';
import SendTemplatedEmailResponse from '../model/SendTemplatedEmailResponse';
import SetActiveReceiptRuleSetRequest from '../model/SetActiveReceiptRuleSetRequest';
import SetIdentityDkimEnabledRequest from '../model/SetIdentityDkimEnabledRequest';
import SetIdentityFeedbackForwardingEnabledRequest from '../model/SetIdentityFeedbackForwardingEnabledRequest';
import SetIdentityHeadersInNotificationsEnabledRequest from '../model/SetIdentityHeadersInNotificationsEnabledRequest';
import SetIdentityMailFromDomainRequest from '../model/SetIdentityMailFromDomainRequest';
import SetIdentityNotificationTopicRequest from '../model/SetIdentityNotificationTopicRequest';
import SetReceiptRulePositionRequest from '../model/SetReceiptRulePositionRequest';
import TestRenderTemplateRequest from '../model/TestRenderTemplateRequest';
import TestRenderTemplateResponse from '../model/TestRenderTemplateResponse';
import UpdateAccountSendingEnabledRequest from '../model/UpdateAccountSendingEnabledRequest';
import UpdateConfigurationSetEventDestinationRequest from '../model/UpdateConfigurationSetEventDestinationRequest';
import UpdateConfigurationSetReputationMetricsEnabledRequest from '../model/UpdateConfigurationSetReputationMetricsEnabledRequest';
import UpdateConfigurationSetSendingEnabledRequest from '../model/UpdateConfigurationSetSendingEnabledRequest';
import UpdateConfigurationSetTrackingOptionsRequest from '../model/UpdateConfigurationSetTrackingOptionsRequest';
import UpdateCustomVerificationEmailTemplateRequest from '../model/UpdateCustomVerificationEmailTemplateRequest';
import UpdateReceiptRuleRequest from '../model/UpdateReceiptRuleRequest';
import UpdateTemplateRequest from '../model/UpdateTemplateRequest';
import VerifyDomainDkimRequest from '../model/VerifyDomainDkimRequest';
import VerifyDomainDkimResponse from '../model/VerifyDomainDkimResponse';
import VerifyDomainIdentityRequest from '../model/VerifyDomainIdentityRequest';
import VerifyDomainIdentityResponse from '../model/VerifyDomainIdentityResponse';
import VerifyEmailAddressRequest from '../model/VerifyEmailAddressRequest';
import VerifyEmailIdentityRequest from '../model/VerifyEmailIdentityRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2010-12-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gETCloneReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETCloneReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a receipt rule set by cloning an existing one. All receipt rules and configurations are copied to the new receipt rule set and are completely independent of the source rule set.</p> <p>For information about setting up rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName <p>The name of the rule set to create. The name must:</p> <ul> <li> <p>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>Start and end with a letter or number.</p> </li> <li> <p>Contain less than 64 characters.</p> </li> </ul>
     * @param {String} originalRuleSetName The name of the rule set to clone.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCloneReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCloneReceiptRuleSet(ruleSetName, originalRuleSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETCloneReceiptRuleSet");
      }
      // verify the required parameter 'originalRuleSetName' is set
      if (originalRuleSetName === undefined || originalRuleSetName === null) {
        throw new Error("Missing the required parameter 'originalRuleSetName' when calling gETCloneReceiptRuleSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCloneReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCloneReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'OriginalRuleSetName': originalRuleSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CloneReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateConfigurationSet operation.
     * @callback module:api/DefaultApi~gETCreateConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a configuration set.</p> <p>Configuration sets enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/GETCreateConfigurationSetConfigurationSetParameter} configurationSet A data structure that contains the name of the configuration set.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateConfigurationSet(configurationSet, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSet' is set
      if (configurationSet === undefined || configurationSet === null) {
        throw new Error("Missing the required parameter 'configurationSet' when calling gETCreateConfigurationSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSet': configurationSet,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~gETCreateConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a configuration set event destination.</p> <note> <p>When you create or update an event destination, you must provide one, and only one, destination. The destination can be CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).</p> </note> <p>An event destination is the AWS service to which Amazon SES publishes the email sending events associated with a configuration set. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set that the event destination should be associated with.
     * @param {module:model/GETCreateConfigurationSetEventDestinationEventDestinationParameter} eventDestination An object that describes the AWS service that email sending event information will be published to.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateConfigurationSetEventDestination(configurationSetName, eventDestination, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETCreateConfigurationSetEventDestination");
      }
      // verify the required parameter 'eventDestination' is set
      if (eventDestination === undefined || eventDestination === null) {
        throw new Error("Missing the required parameter 'eventDestination' when calling gETCreateConfigurationSetEventDestination");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'EventDestination': eventDestination,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSetEventDestination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~gETCreateConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an association between a configuration set and a custom domain for open and click event tracking. </p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} configurationSetName The name of the configuration set that the tracking options should be associated with.
     * @param {module:model/GETCreateConfigurationSetTrackingOptionsTrackingOptionsParameter} trackingOptions 
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateConfigurationSetTrackingOptions(configurationSetName, trackingOptions, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETCreateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'trackingOptions' is set
      if (trackingOptions === undefined || trackingOptions === null) {
        throw new Error("Missing the required parameter 'trackingOptions' when calling gETCreateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'TrackingOptions': trackingOptions,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSetTrackingOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~gETCreateCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new custom verification email template.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the custom verification email template.
     * @param {String} fromEmailAddress The email address that the custom verification email is sent from.
     * @param {String} templateSubject The subject line of the custom verification email.
     * @param {String} templateContent The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html#custom-verification-emails-faq\">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.
     * @param {String} successRedirectionURL The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
     * @param {String} failureRedirectionURL The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETCreateCustomVerificationEmailTemplate(templateName, fromEmailAddress, templateSubject, templateContent, successRedirectionURL, failureRedirectionURL, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'fromEmailAddress' is set
      if (fromEmailAddress === undefined || fromEmailAddress === null) {
        throw new Error("Missing the required parameter 'fromEmailAddress' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'templateSubject' is set
      if (templateSubject === undefined || templateSubject === null) {
        throw new Error("Missing the required parameter 'templateSubject' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'templateContent' is set
      if (templateContent === undefined || templateContent === null) {
        throw new Error("Missing the required parameter 'templateContent' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'successRedirectionURL' is set
      if (successRedirectionURL === undefined || successRedirectionURL === null) {
        throw new Error("Missing the required parameter 'successRedirectionURL' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'failureRedirectionURL' is set
      if (failureRedirectionURL === undefined || failureRedirectionURL === null) {
        throw new Error("Missing the required parameter 'failureRedirectionURL' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'FromEmailAddress': fromEmailAddress,
        'TemplateSubject': templateSubject,
        'TemplateContent': templateContent,
        'SuccessRedirectionURL': successRedirectionURL,
        'FailureRedirectionURL': failureRedirectionURL,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=CreateCustomVerificationEmailTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateReceiptFilter operation.
     * @callback module:api/DefaultApi~gETCreateReceiptFilterCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new IP address filter.</p> <p>For information about setting up IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/GETCreateReceiptFilterFilterParameter} filter A data structure that describes the IP address filter to create, which consists of a name, an IP address range, and whether to allow or block mail from it.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateReceiptFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateReceiptFilter(filter, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'filter' is set
      if (filter === undefined || filter === null) {
        throw new Error("Missing the required parameter 'filter' when calling gETCreateReceiptFilter");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateReceiptFilter");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateReceiptFilter");
      }

      let pathParams = {
      };
      let queryParams = {
        'Filter': filter,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptFilter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateReceiptRule operation.
     * @callback module:api/DefaultApi~gETCreateReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a receipt rule.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the rule set that the receipt rule will be added to.
     * @param {module:model/GETCreateReceiptRuleRuleParameter} rule A data structure that contains the specified rule's name, actions, recipients, domains, enabled status, scan status, and TLS policy.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [after] The name of an existing rule after which the new rule will be placed. If this parameter is null, the new rule will be inserted at the beginning of the rule list.
     * @param {module:api/DefaultApi~gETCreateReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateReceiptRule(ruleSetName, rule, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETCreateReceiptRule");
      }
      // verify the required parameter 'rule' is set
      if (rule === undefined || rule === null) {
        throw new Error("Missing the required parameter 'rule' when calling gETCreateReceiptRule");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'After': opts['after'],
        'Rule': rule,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptRule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETCreateReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an empty receipt rule set.</p> <p>For information about setting up receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName <p>The name of the rule set to create. The name must:</p> <ul> <li> <p>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>Start and end with a letter or number.</p> </li> <li> <p>Contain less than 64 characters.</p> </li> </ul>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateReceiptRuleSet(ruleSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETCreateReceiptRuleSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETCreateTemplate operation.
     * @callback module:api/DefaultApi~gETCreateTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/GETCreateTemplateTemplateParameter} template The content of the email, composed of a subject line, an HTML part, and a text-only part.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETCreateTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETCreateTemplate(template, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'template' is set
      if (template === undefined || template === null) {
        throw new Error("Missing the required parameter 'template' when calling gETCreateTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETCreateTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETCreateTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Template': template,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteConfigurationSet operation.
     * @callback module:api/DefaultApi~gETDeleteConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a configuration set. Configuration sets enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteConfigurationSet(configurationSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETDeleteConfigurationSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~gETDeleteConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a configuration set event destination. Configuration set event destinations are associated with configuration sets, which enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set from which to delete the event destination.
     * @param {String} eventDestinationName The name of the event destination to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteConfigurationSetEventDestination(configurationSetName, eventDestinationName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETDeleteConfigurationSetEventDestination");
      }
      // verify the required parameter 'eventDestinationName' is set
      if (eventDestinationName === undefined || eventDestinationName === null) {
        throw new Error("Missing the required parameter 'eventDestinationName' when calling gETDeleteConfigurationSetEventDestination");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'EventDestinationName': eventDestinationName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSetEventDestination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~gETDeleteConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an association between a configuration set and a custom domain for open and click event tracking.</p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p> <note> <p>Deleting this kind of association will result in emails sent using the specified configuration set to capture open and click events using the standard, Amazon SES-operated domains.</p> </note>
     * @param {String} configurationSetName The name of the configuration set from which you want to delete the tracking options.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteConfigurationSetTrackingOptions(configurationSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETDeleteConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSetTrackingOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~gETDeleteCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an existing custom verification email template. </p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the custom verification email template that you want to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETDeleteCustomVerificationEmailTemplate(templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETDeleteCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=DeleteCustomVerificationEmailTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteIdentity operation.
     * @callback module:api/DefaultApi~gETDeleteIdentityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified identity (an email address or a domain) from the list of verified identities.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity The identity to be removed from the list of identities for the AWS Account.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteIdentity(identity, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETDeleteIdentity");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteIdentity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteIdentityPolicy operation.
     * @callback module:api/DefaultApi~gETDeleteIdentityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity <p>The identity that is associated with the policy that you want to delete. You can specify the identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>
     * @param {String} policyName The name of the policy to be deleted.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteIdentityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteIdentityPolicy(identity, policyName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETDeleteIdentityPolicy");
      }
      // verify the required parameter 'policyName' is set
      if (policyName === undefined || policyName === null) {
        throw new Error("Missing the required parameter 'policyName' when calling gETDeleteIdentityPolicy");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteIdentityPolicy");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteIdentityPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'PolicyName': policyName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteIdentityPolicy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteReceiptFilter operation.
     * @callback module:api/DefaultApi~gETDeleteReceiptFilterCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified IP address filter.</p> <p>For information about managing IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} filterName The name of the IP address filter to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteReceiptFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteReceiptFilter(filterName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'filterName' is set
      if (filterName === undefined || filterName === null) {
        throw new Error("Missing the required parameter 'filterName' when calling gETDeleteReceiptFilter");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteReceiptFilter");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteReceiptFilter");
      }

      let pathParams = {
      };
      let queryParams = {
        'FilterName': filterName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptFilter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteReceiptRule operation.
     * @callback module:api/DefaultApi~gETDeleteReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified receipt rule.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set that contains the receipt rule to delete.
     * @param {String} ruleName The name of the receipt rule to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteReceiptRule(ruleSetName, ruleName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETDeleteReceiptRule");
      }
      // verify the required parameter 'ruleName' is set
      if (ruleName === undefined || ruleName === null) {
        throw new Error("Missing the required parameter 'ruleName' when calling gETDeleteReceiptRule");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'RuleName': ruleName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptRule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETDeleteReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified receipt rule set and all of the receipt rules it contains.</p> <note> <p>The currently active rule set cannot be deleted.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set to delete.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteReceiptRuleSet(ruleSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETDeleteReceiptRuleSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteTemplate operation.
     * @callback module:api/DefaultApi~gETDeleteTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an email template.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the template to be deleted.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETDeleteTemplate(templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETDeleteTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDeleteVerifiedEmailAddress operation.
     * @callback module:api/DefaultApi~gETDeleteVerifiedEmailAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>DeleteIdentity</code> operation to delete email addresses and domains.
     * @param {String} emailAddress An email address to be removed from the list of verified addresses.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDeleteVerifiedEmailAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETDeleteVerifiedEmailAddress(emailAddress, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'emailAddress' is set
      if (emailAddress === undefined || emailAddress === null) {
        throw new Error("Missing the required parameter 'emailAddress' when calling gETDeleteVerifiedEmailAddress");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDeleteVerifiedEmailAddress");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDeleteVerifiedEmailAddress");
      }

      let pathParams = {
      };
      let queryParams = {
        'EmailAddress': emailAddress,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=DeleteVerifiedEmailAddress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDescribeActiveReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETDescribeActiveReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeActiveReceiptRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the metadata and receipt rules for the receipt rule set that is currently active.</p> <p>For information about setting up receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDescribeActiveReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeActiveReceiptRuleSetResponse}
     */
    gETDescribeActiveReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDescribeActiveReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDescribeActiveReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = DescribeActiveReceiptRuleSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeActiveReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDescribeConfigurationSet operation.
     * @callback module:api/DefaultApi~gETDescribeConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeConfigurationSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified configuration set. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set to describe.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Array.<module:model/ConfigurationSetAttribute>} [configurationSetAttributeNames] A list of configuration set attributes to return.
     * @param {module:api/DefaultApi~gETDescribeConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeConfigurationSetResponse}
     */
    gETDescribeConfigurationSet(configurationSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETDescribeConfigurationSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDescribeConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDescribeConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'ConfigurationSetAttributeNames': this.apiClient.buildCollectionParam(opts['configurationSetAttributeNames'], 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = DescribeConfigurationSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeConfigurationSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDescribeReceiptRule operation.
     * @callback module:api/DefaultApi~gETDescribeReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeReceiptRuleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified receipt rule.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set that the receipt rule belongs to.
     * @param {String} ruleName The name of the receipt rule.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDescribeReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeReceiptRuleResponse}
     */
    gETDescribeReceiptRule(ruleSetName, ruleName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETDescribeReceiptRule");
      }
      // verify the required parameter 'ruleName' is set
      if (ruleName === undefined || ruleName === null) {
        throw new Error("Missing the required parameter 'ruleName' when calling gETDescribeReceiptRule");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDescribeReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDescribeReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'RuleName': ruleName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = DescribeReceiptRuleResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeReceiptRule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETDescribeReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETDescribeReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeReceiptRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified receipt rule set.</p> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set to describe.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETDescribeReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeReceiptRuleSetResponse}
     */
    gETDescribeReceiptRuleSet(ruleSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETDescribeReceiptRuleSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETDescribeReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETDescribeReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = DescribeReceiptRuleSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetAccountSendingEnabled operation.
     * @callback module:api/DefaultApi~gETGetAccountSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAccountSendingEnabledResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the email sending status of the Amazon SES account for the current region.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetAccountSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAccountSendingEnabledResponse}
     */
    gETGetAccountSendingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetAccountSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetAccountSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetAccountSendingEnabledResponse;
      return this.apiClient.callApi(
        '/#Action=GetAccountSendingEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~gETGetCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCustomVerificationEmailTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the custom email verification template for the template name you specify.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the custom verification email template that you want to retrieve.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCustomVerificationEmailTemplateResponse}
     */
    gETGetCustomVerificationEmailTemplate(templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETGetCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetCustomVerificationEmailTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=GetCustomVerificationEmailTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetIdentityDkimAttributes operation.
     * @callback module:api/DefaultApi~gETGetIdentityDkimAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityDkimAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the current status of Easy DKIM signing for an entity. For domain name identities, this operation also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.</p> <p>This operation takes a list of identities as input and returns the following information for each:</p> <ul> <li> <p>Whether Easy DKIM signing is enabled or disabled.</p> </li> <li> <p>A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.</p> </li> <li> <p>Whether Amazon SES has successfully verified the DKIM tokens published in the domain's DNS. This information is only returned for domain name identities, not for email addresses.</p> </li> </ul> <p>This operation is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>
     * @param {Array.<String>} identities A list of one or more verified identities - email addresses, domains, or both.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetIdentityDkimAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityDkimAttributesResponse}
     */
    gETGetIdentityDkimAttributes(identities, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identities' is set
      if (identities === undefined || identities === null) {
        throw new Error("Missing the required parameter 'identities' when calling gETGetIdentityDkimAttributes");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetIdentityDkimAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetIdentityDkimAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identities': this.apiClient.buildCollectionParam(identities, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetIdentityDkimAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityDkimAttributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetIdentityMailFromDomainAttributes operation.
     * @callback module:api/DefaultApi~gETGetIdentityMailFromDomainAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityMailFromDomainAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the custom MAIL FROM attributes for a list of identities (email addresses : domains).</p> <p>This operation is throttled at one request per second and can only get custom MAIL FROM attributes for up to 100 identities at a time.</p>
     * @param {Array.<String>} identities A list of one or more identities.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetIdentityMailFromDomainAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityMailFromDomainAttributesResponse}
     */
    gETGetIdentityMailFromDomainAttributes(identities, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identities' is set
      if (identities === undefined || identities === null) {
        throw new Error("Missing the required parameter 'identities' when calling gETGetIdentityMailFromDomainAttributes");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetIdentityMailFromDomainAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetIdentityMailFromDomainAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identities': this.apiClient.buildCollectionParam(identities, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetIdentityMailFromDomainAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityMailFromDomainAttributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetIdentityNotificationAttributes operation.
     * @callback module:api/DefaultApi~gETGetIdentityNotificationAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityNotificationAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes.</p> <p>This operation is throttled at one request per second and can only get notification attributes for up to 100 identities at a time.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {Array.<String>} identities A list of one or more identities. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetIdentityNotificationAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityNotificationAttributesResponse}
     */
    gETGetIdentityNotificationAttributes(identities, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identities' is set
      if (identities === undefined || identities === null) {
        throw new Error("Missing the required parameter 'identities' when calling gETGetIdentityNotificationAttributes");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetIdentityNotificationAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetIdentityNotificationAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identities': this.apiClient.buildCollectionParam(identities, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetIdentityNotificationAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityNotificationAttributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetIdentityPolicies operation.
     * @callback module:api/DefaultApi~gETGetIdentityPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity <p>The identity for which the policies will be retrieved. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>
     * @param {Array.<String>} policyNames A list of the names of policies to be retrieved. You can retrieve a maximum of 20 policies at a time. If you do not know the names of the policies that are attached to the identity, you can use <code>ListIdentityPolicies</code>.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetIdentityPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityPoliciesResponse}
     */
    gETGetIdentityPolicies(identity, policyNames, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETGetIdentityPolicies");
      }
      // verify the required parameter 'policyNames' is set
      if (policyNames === undefined || policyNames === null) {
        throw new Error("Missing the required parameter 'policyNames' when calling gETGetIdentityPolicies");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetIdentityPolicies");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetIdentityPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'PolicyNames': this.apiClient.buildCollectionParam(policyNames, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetIdentityPoliciesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetIdentityVerificationAttributes operation.
     * @callback module:api/DefaultApi~gETGetIdentityVerificationAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityVerificationAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity.</p> <p>The verification status of an email address is \"Pending\" until the email address owner clicks the link within the verification email that Amazon SES sent to that address. If the email address owner clicks the link within 24 hours, the verification status of the email address changes to \"Success\". If the link is not clicked within 24 hours, the verification status changes to \"Failed.\" In that case, if you still want to verify the email address, you must restart the verification process from the beginning.</p> <p>For domain identities, the domain's verification status is \"Pending\" as Amazon SES searches for the required TXT record in the DNS settings of the domain. When Amazon SES detects the record, the domain's verification status changes to \"Success\". If Amazon SES is unable to detect the record within 72 hours, the domain's verification status changes to \"Failed.\" In that case, if you still want to verify the domain, you must restart the verification process from the beginning.</p> <p>This operation is throttled at one request per second and can only get verification attributes for up to 100 identities at a time.</p>
     * @param {Array.<String>} identities A list of identities.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetIdentityVerificationAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityVerificationAttributesResponse}
     */
    gETGetIdentityVerificationAttributes(identities, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identities' is set
      if (identities === undefined || identities === null) {
        throw new Error("Missing the required parameter 'identities' when calling gETGetIdentityVerificationAttributes");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetIdentityVerificationAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetIdentityVerificationAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identities': this.apiClient.buildCollectionParam(identities, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetIdentityVerificationAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityVerificationAttributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetSendQuota operation.
     * @callback module:api/DefaultApi~gETGetSendQuotaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSendQuotaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides the sending limits for the Amazon SES account. </p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetSendQuotaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSendQuotaResponse}
     */
    gETGetSendQuota(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetSendQuota");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetSendQuota");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetSendQuotaResponse;
      return this.apiClient.callApi(
        '/#Action=GetSendQuota', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetSendStatistics operation.
     * @callback module:api/DefaultApi~gETGetSendStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSendStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides sending statistics for the current AWS Region. The result is a list of data points, representing the last two weeks of sending activity. Each data point in the list contains statistics for a 15-minute period of time.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetSendStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSendStatisticsResponse}
     */
    gETGetSendStatistics(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetSendStatistics");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetSendStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetSendStatisticsResponse;
      return this.apiClient.callApi(
        '/#Action=GetSendStatistics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETGetTemplate operation.
     * @callback module:api/DefaultApi~gETGetTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Displays the template object (which includes the Subject line, HTML part and text part) for the template you specify.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the template you want to retrieve.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETGetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTemplateResponse}
     */
    gETGetTemplate(templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETGetTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETGetTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETGetTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=GetTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListConfigurationSets operation.
     * @callback module:api/DefaultApi~gETListConfigurationSetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListConfigurationSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides a list of the configuration sets associated with your Amazon SES account in the current AWS Region. For information about using configuration sets, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Monitoring Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i> </p> <p>You can execute this operation no more than once per second. This operation will return up to 1,000 configuration sets each time it is run. If your Amazon SES account has more than 1,000 configuration sets, this operation will also return a NextToken element. You can then execute the <code>ListConfigurationSets</code> operation again, passing the <code>NextToken</code> parameter and the value of the NextToken element to retrieve additional results.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] A token returned from a previous call to <code>ListConfigurationSets</code> to indicate the position of the configuration set in the configuration set list.
     * @param {Number} [maxItems] The number of configuration sets to return.
     * @param {module:api/DefaultApi~gETListConfigurationSetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListConfigurationSetsResponse}
     */
    gETListConfigurationSets(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListConfigurationSets");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListConfigurationSets");
      }

      let pathParams = {
      };
      let queryParams = {
        'NextToken': opts['nextToken'],
        'MaxItems': opts['maxItems'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListConfigurationSetsResponse;
      return this.apiClient.callApi(
        '/#Action=ListConfigurationSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListCustomVerificationEmailTemplates operation.
     * @callback module:api/DefaultApi~gETListCustomVerificationEmailTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCustomVerificationEmailTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the existing custom verification email templates for your account in the current AWS Region.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] An array the contains the name and creation time stamp for each template in your Amazon SES account.
     * @param {Number} [maxResults] The maximum number of custom verification email templates to return. This value must be at least 1 and less than or equal to 50. If you do not specify a value, or if you specify a value less than 1 or greater than 50, the operation will return up to 50 results.
     * @param {module:api/DefaultApi~gETListCustomVerificationEmailTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCustomVerificationEmailTemplatesResponse}
     */
    gETListCustomVerificationEmailTemplates(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListCustomVerificationEmailTemplates");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListCustomVerificationEmailTemplates");
      }

      let pathParams = {
      };
      let queryParams = {
        'NextToken': opts['nextToken'],
        'MaxResults': opts['maxResults'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListCustomVerificationEmailTemplatesResponse;
      return this.apiClient.callApi(
        '/#Action=ListCustomVerificationEmailTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListIdentities operation.
     * @callback module:api/DefaultApi~gETListIdentitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIdentitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list containing all of the identities (email addresses and domains) for your AWS account in the current AWS Region, regardless of verification status.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [identityType] The type of the identities to list. Possible values are \"EmailAddress\" and \"Domain\". If this parameter is omitted, then all identities will be listed.
     * @param {String} [nextToken] The token to use for pagination.
     * @param {Number} [maxItems] The maximum number of identities per page. Possible values are 1-1000 inclusive.
     * @param {module:api/DefaultApi~gETListIdentitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIdentitiesResponse}
     */
    gETListIdentities(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListIdentities");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListIdentities");
      }

      let pathParams = {
      };
      let queryParams = {
        'IdentityType': opts['identityType'],
        'NextToken': opts['nextToken'],
        'MaxItems': opts['maxItems'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListIdentitiesResponse;
      return this.apiClient.callApi(
        '/#Action=ListIdentities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListIdentityPolicies operation.
     * @callback module:api/DefaultApi~gETListIdentityPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIdentityPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain). This API returns only a list. If you want the actual policy content, you can use <code>GetIdentityPolicies</code>.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity <p>The identity that is associated with the policy for which the policies will be listed. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETListIdentityPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIdentityPoliciesResponse}
     */
    gETListIdentityPolicies(identity, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETListIdentityPolicies");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListIdentityPolicies");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListIdentityPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListIdentityPoliciesResponse;
      return this.apiClient.callApi(
        '/#Action=ListIdentityPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListReceiptFilters operation.
     * @callback module:api/DefaultApi~gETListReceiptFiltersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListReceiptFiltersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the IP address filters associated with your AWS account in the current AWS Region.</p> <p>For information about managing IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETListReceiptFiltersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListReceiptFiltersResponse}
     */
    gETListReceiptFilters(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListReceiptFilters");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListReceiptFilters");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListReceiptFiltersResponse;
      return this.apiClient.callApi(
        '/#Action=ListReceiptFilters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListReceiptRuleSets operation.
     * @callback module:api/DefaultApi~gETListReceiptRuleSetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListReceiptRuleSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the receipt rule sets that exist under your AWS account in the current AWS Region. If there are additional receipt rule sets to be retrieved, you will receive a <code>NextToken</code> that you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve the additional entries.</p> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] A token returned from a previous call to <code>ListReceiptRuleSets</code> to indicate the position in the receipt rule set list.
     * @param {module:api/DefaultApi~gETListReceiptRuleSetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListReceiptRuleSetsResponse}
     */
    gETListReceiptRuleSets(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListReceiptRuleSets");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListReceiptRuleSets");
      }

      let pathParams = {
      };
      let queryParams = {
        'NextToken': opts['nextToken'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListReceiptRuleSetsResponse;
      return this.apiClient.callApi(
        '/#Action=ListReceiptRuleSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListTemplates operation.
     * @callback module:api/DefaultApi~gETListTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the email templates present in your Amazon SES account in the current AWS Region.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] A token returned from a previous call to <code>ListTemplates</code> to indicate the position in the list of email templates.
     * @param {Number} [maxItems] The maximum number of templates to return. This value must be at least 1 and less than or equal to 10. If you do not specify a value, or if you specify a value less than 1 or greater than 10, the operation will return up to 10 results.
     * @param {module:api/DefaultApi~gETListTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTemplatesResponse}
     */
    gETListTemplates(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListTemplates");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListTemplates");
      }

      let pathParams = {
      };
      let queryParams = {
        'NextToken': opts['nextToken'],
        'MaxItems': opts['maxItems'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListTemplatesResponse;
      return this.apiClient.callApi(
        '/#Action=ListTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETListVerifiedEmailAddresses operation.
     * @callback module:api/DefaultApi~gETListVerifiedEmailAddressesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVerifiedEmailAddressesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>ListIdentities</code> operation to list the email addresses and domains associated with your account.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETListVerifiedEmailAddressesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVerifiedEmailAddressesResponse}
     */
    gETListVerifiedEmailAddresses(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETListVerifiedEmailAddresses");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETListVerifiedEmailAddresses");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListVerifiedEmailAddressesResponse;
      return this.apiClient.callApi(
        '/#Action=ListVerifiedEmailAddresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETPutConfigurationSetDeliveryOptions operation.
     * @callback module:api/DefaultApi~gETPutConfigurationSetDeliveryOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or updates the delivery options for a configuration set.
     * @param {String} configurationSetName The name of the configuration set that you want to specify the delivery options for.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GETPutConfigurationSetDeliveryOptionsDeliveryOptionsParameter} [deliveryOptions] Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
     * @param {module:api/DefaultApi~gETPutConfigurationSetDeliveryOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETPutConfigurationSetDeliveryOptions(configurationSetName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETPutConfigurationSetDeliveryOptions");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETPutConfigurationSetDeliveryOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETPutConfigurationSetDeliveryOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'DeliveryOptions': opts['deliveryOptions'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=PutConfigurationSetDeliveryOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETPutIdentityPolicy operation.
     * @callback module:api/DefaultApi~gETPutIdentityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds or updates a sending authorization policy for the specified identity (an email address or a domain).</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity <p>The identity that the policy will apply to. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>
     * @param {String} policyName <p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
     * @param {String} policy <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html\">Amazon SES Developer Guide</a>. </p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETPutIdentityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETPutIdentityPolicy(identity, policyName, policy, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETPutIdentityPolicy");
      }
      // verify the required parameter 'policyName' is set
      if (policyName === undefined || policyName === null) {
        throw new Error("Missing the required parameter 'policyName' when calling gETPutIdentityPolicy");
      }
      // verify the required parameter 'policy' is set
      if (policy === undefined || policy === null) {
        throw new Error("Missing the required parameter 'policy' when calling gETPutIdentityPolicy");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETPutIdentityPolicy");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETPutIdentityPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'PolicyName': policyName,
        'Policy': policy,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=PutIdentityPolicy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETReorderReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETReorderReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Reorders the receipt rules within a receipt rule set.</p> <note> <p>All of the rules in the rule set must be represented in this request. That is, this API will return an error if the reorder request doesn't explicitly position all of the rules.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set to reorder.
     * @param {Array.<String>} ruleNames A list of the specified receipt rule set's receipt rules in the order that you want to put them.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETReorderReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETReorderReceiptRuleSet(ruleSetName, ruleNames, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETReorderReceiptRuleSet");
      }
      // verify the required parameter 'ruleNames' is set
      if (ruleNames === undefined || ruleNames === null) {
        throw new Error("Missing the required parameter 'ruleNames' when calling gETReorderReceiptRuleSet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETReorderReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETReorderReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'RuleNames': this.apiClient.buildCollectionParam(ruleNames, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=ReorderReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendBounce operation.
     * @callback module:api/DefaultApi~gETSendBounceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendBounceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Generates and sends a bounce message to the sender of an email you received through Amazon SES. You can only use this API on an email up to 24 hours after you receive it.</p> <note> <p>You cannot use this API to send generic bounces for mail that was not received by Amazon SES.</p> </note> <p>For information about receiving email through Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} originalMessageId The message ID of the message to be bounced.
     * @param {String} bounceSender The address to use in the \"From\" header of the bounce message. This must be an identity that you have verified with Amazon SES.
     * @param {Array.<module:model/BouncedRecipientInfo>} bouncedRecipientInfoList A list of recipients of the bounced message, including the information required to create the Delivery Status Notifications (DSNs) for the recipients. You must specify at least one <code>BouncedRecipientInfo</code> in the list.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [explanation] Human-readable text for the bounce message to explain the failure. If not specified, the text will be auto-generated based on the bounced recipient information.
     * @param {module:model/GETSendBounceMessageDsnParameter} [messageDsn] Message-related DSN fields. If not specified, Amazon SES will choose the values.
     * @param {String} [bounceSenderArn] This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the address in the \"From\" header of the bounce. For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.
     * @param {module:api/DefaultApi~gETSendBounceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendBounceResponse}
     */
    gETSendBounce(originalMessageId, bounceSender, bouncedRecipientInfoList, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'originalMessageId' is set
      if (originalMessageId === undefined || originalMessageId === null) {
        throw new Error("Missing the required parameter 'originalMessageId' when calling gETSendBounce");
      }
      // verify the required parameter 'bounceSender' is set
      if (bounceSender === undefined || bounceSender === null) {
        throw new Error("Missing the required parameter 'bounceSender' when calling gETSendBounce");
      }
      // verify the required parameter 'bouncedRecipientInfoList' is set
      if (bouncedRecipientInfoList === undefined || bouncedRecipientInfoList === null) {
        throw new Error("Missing the required parameter 'bouncedRecipientInfoList' when calling gETSendBounce");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendBounce");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendBounce");
      }

      let pathParams = {
      };
      let queryParams = {
        'OriginalMessageId': originalMessageId,
        'BounceSender': bounceSender,
        'Explanation': opts['explanation'],
        'MessageDsn': opts['messageDsn'],
        'BouncedRecipientInfoList': this.apiClient.buildCollectionParam(bouncedRecipientInfoList, 'multi'),
        'BounceSenderArn': opts['bounceSenderArn'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendBounceResponse;
      return this.apiClient.callApi(
        '/#Action=SendBounce', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendBulkTemplatedEmail operation.
     * @callback module:api/DefaultApi~gETSendBulkTemplatedEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendBulkTemplatedEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message to multiple destinations. The message body is created using an email template.</p> <p>In order to send email using the <code>SendBulkTemplatedEmail</code> operation, your call to the API must meet the following requirements:</p> <ul> <li> <p>The call must refer to an existing email template. You can create email templates using the <a>CreateTemplate</a> operation.</p> </li> <li> <p>The message must be sent from a verified email address or domain.</p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>Each <code>Destination</code> parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> <li> <p>The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the <code>SendBulkTemplatedEmail</code> operation several times to send the message to each group.</p> </li> <li> <p>The number of destinations you can contact in a single call to the API may be limited by your account's maximum sending rate.</p> </li> </ul>
     * @param {String} source <p>The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</p> <p>If you are sending on behalf of another user and have been permitted to do so by a sending authorization policy, then you must also specify the <code>SourceArn</code> parameter. For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the <i>local part</i> of a source email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>. The sender name (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters must be encoded using MIME encoded-word syntax, as described in <a href=\"https://tools.ietf.org/html/rfc2047\">RFC 2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</p> </note>
     * @param {String} template The template to use when sending this email.
     * @param {Array.<module:model/BulkEmailDestination>} destinations One or more <code>Destination</code> objects. All of the recipients in a <code>Destination</code> will receive the same version of the email. You can specify up to 50 <code>Destination</code> objects within a <code>Destinations</code> array.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [sourceArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {Array.<String>} [replyToAddresses] The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.
     * @param {String} [returnPath] The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code> parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. 
     * @param {String} [returnPathArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} [configurationSetName] The name of the configuration set to use when you send an email using <code>SendBulkTemplatedEmail</code>.
     * @param {Array.<module:model/MessageTag>} [defaultTags] A list of tags, in the form of name/value pairs, to apply to an email that you send to a destination using <code>SendBulkTemplatedEmail</code>.
     * @param {String} [templateArn] The ARN of the template to use when sending this email.
     * @param {String} [defaultTemplateData] <p>A list of replacement values to apply to the template when replacement data is not specified in a Destination object. These values act as a default or fallback option when no other data is available.</p> <p>The template data is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.</p>
     * @param {module:api/DefaultApi~gETSendBulkTemplatedEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendBulkTemplatedEmailResponse}
     */
    gETSendBulkTemplatedEmail(source, template, destinations, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling gETSendBulkTemplatedEmail");
      }
      // verify the required parameter 'template' is set
      if (template === undefined || template === null) {
        throw new Error("Missing the required parameter 'template' when calling gETSendBulkTemplatedEmail");
      }
      // verify the required parameter 'destinations' is set
      if (destinations === undefined || destinations === null) {
        throw new Error("Missing the required parameter 'destinations' when calling gETSendBulkTemplatedEmail");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendBulkTemplatedEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendBulkTemplatedEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Source': source,
        'SourceArn': opts['sourceArn'],
        'ReplyToAddresses': this.apiClient.buildCollectionParam(opts['replyToAddresses'], 'multi'),
        'ReturnPath': opts['returnPath'],
        'ReturnPathArn': opts['returnPathArn'],
        'ConfigurationSetName': opts['configurationSetName'],
        'DefaultTags': this.apiClient.buildCollectionParam(opts['defaultTags'], 'multi'),
        'Template': template,
        'TemplateArn': opts['templateArn'],
        'DefaultTemplateData': opts['defaultTemplateData'],
        'Destinations': this.apiClient.buildCollectionParam(destinations, 'multi'),
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendBulkTemplatedEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendBulkTemplatedEmail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendCustomVerificationEmail operation.
     * @callback module:api/DefaultApi~gETSendCustomVerificationEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendCustomVerificationEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.</p> <p>To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} emailAddress The email address to verify.
     * @param {String} templateName The name of the custom verification email template to use when sending the verification email.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [configurationSetName] Name of a configuration set to use when sending the verification email.
     * @param {module:api/DefaultApi~gETSendCustomVerificationEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendCustomVerificationEmailResponse}
     */
    gETSendCustomVerificationEmail(emailAddress, templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'emailAddress' is set
      if (emailAddress === undefined || emailAddress === null) {
        throw new Error("Missing the required parameter 'emailAddress' when calling gETSendCustomVerificationEmail");
      }
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETSendCustomVerificationEmail");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendCustomVerificationEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendCustomVerificationEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'EmailAddress': emailAddress,
        'TemplateName': templateName,
        'ConfigurationSetName': opts['configurationSetName'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendCustomVerificationEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendCustomVerificationEmail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendEmail operation.
     * @callback module:api/DefaultApi~gETSendEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message and immediately queues it for sending. In order to send email using the <code>SendEmail</code> operation, your message must meet the following requirements:</p> <ul> <li> <p>The message must be sent from a verified email address or domain. If you attempt to send email using a non-verified address or domain, the operation will result in an \"Email address not verified\" error. </p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>The message must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> <li> <p>The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the <code>SendEmail</code> operation several times to send the message to each group.</p> </li> </ul> <important> <p>For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your <i>sending quota</i>). For more information about sending quotas in Amazon SES, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Managing Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i> </p> </important>
     * @param {String} source <p>The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</p> <p>If you are sending on behalf of another user and have been permitted to do so by a sending authorization policy, then you must also specify the <code>SourceArn</code> parameter. For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the <i>local part</i> of a source email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>. The sender name (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters must be encoded using MIME encoded-word syntax, as described in <a href=\"https://tools.ietf.org/html/rfc2047\">RFC 2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</p> </note>
     * @param {module:model/GETSendEmailDestinationParameter} destination The destination for this email, composed of To:, CC:, and BCC: fields.
     * @param {module:model/GETSendEmailMessageParameter} message The message to be sent.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Array.<String>} [replyToAddresses] The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.
     * @param {String} [returnPath] The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code> parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. 
     * @param {String} [sourceArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} [returnPathArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {Array.<module:model/MessageTag>} [tags] A list of tags, in the form of name/value pairs, to apply to an email that you send using <code>SendEmail</code>. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
     * @param {String} [configurationSetName] The name of the configuration set to use when you send an email using <code>SendEmail</code>.
     * @param {module:api/DefaultApi~gETSendEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendEmailResponse}
     */
    gETSendEmail(source, destination, message, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling gETSendEmail");
      }
      // verify the required parameter 'destination' is set
      if (destination === undefined || destination === null) {
        throw new Error("Missing the required parameter 'destination' when calling gETSendEmail");
      }
      // verify the required parameter 'message' is set
      if (message === undefined || message === null) {
        throw new Error("Missing the required parameter 'message' when calling gETSendEmail");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Source': source,
        'Destination': destination,
        'Message': message,
        'ReplyToAddresses': this.apiClient.buildCollectionParam(opts['replyToAddresses'], 'multi'),
        'ReturnPath': opts['returnPath'],
        'SourceArn': opts['sourceArn'],
        'ReturnPathArn': opts['returnPathArn'],
        'Tags': this.apiClient.buildCollectionParam(opts['tags'], 'multi'),
        'ConfigurationSetName': opts['configurationSetName'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendEmail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendRawEmail operation.
     * @callback module:api/DefaultApi~gETSendRawEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendRawEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message and immediately queues it for sending.</p> <p>This operation is more flexible than the <code>SendEmail</code> API operation. When you use the <code>SendRawEmail</code> operation, you can specify the headers of the message as well as its content. This flexibility is useful, for example, when you want to send a multipart MIME email (such a message that contains both a text and an HTML version). You can also use this operation to send messages that include attachments.</p> <p>The <code>SendRawEmail</code> operation has the following requirements:</p> <ul> <li> <p>You can only send email from <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">verified email addresses or domains</a>. If you try to send email from an address that isn't verified, the operation results in an \"Email address not verified\" error.</p> </li> <li> <p>If your account is still in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/request-production-access.html\">Amazon SES sandbox</a>, you can only send email to other verified addresses in your account, or to addresses that are associated with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mailbox-simulator.html\">Amazon SES mailbox simulator</a>.</p> </li> <li> <p>The maximum message size, including attachments, is 10 MB.</p> </li> <li> <p>Each message has to include at least one recipient address. A recipient address includes any address on the To:, CC:, or BCC: lines.</p> </li> <li> <p>If you send a single message to more than one recipient address, and one of the recipient addresses isn't in a valid format (that is, it's not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), Amazon SES rejects the entire message, even if the other addresses are valid.</p> </li> <li> <p>Each message can include up to 50 recipient addresses across the To:, CC:, or BCC: lines. If you need to send a single message to more than 50 recipients, you have to split the list of recipient addresses into groups of less than 50 recipients, and send separate messages to each group.</p> </li> <li> <p>Amazon SES allows you to specify 8-bit Content-Transfer-Encoding for MIME message parts. However, if Amazon SES has to modify the contents of your message (for example, if you use open and click tracking), 8-bit content isn't preserved. For this reason, we highly recommend that you encode all content that isn't 7-bit ASCII. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html#send-email-mime-encoding\">MIME Encoding</a> in the <i>Amazon SES Developer Guide</i>.</p> </li> </ul> <p>Additionally, keep the following considerations in mind when using the <code>SendRawEmail</code> operation:</p> <ul> <li> <p>Although you can customize the message headers when using the <code>SendRawEmail</code> operation, Amazon SES will automatically apply its own <code>Message-ID</code> and <code>Date</code> headers; if you passed these headers when creating the message, they will be overwritten by the values that Amazon SES provides.</p> </li> <li> <p>If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code> enables you to specify the cross-account identity for the email's Source, From, and Return-Path parameters in one of two ways: you can pass optional parameters <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to the API, or you can include the following X-headers in the header of your raw email:</p> <ul> <li> <p> <code>X-SES-SOURCE-ARN</code> </p> </li> <li> <p> <code>X-SES-FROM-ARN</code> </p> </li> <li> <p> <code>X-SES-RETURN-PATH-ARN</code> </p> </li> </ul> <important> <p>Don't include these X-headers in the DKIM signature. Amazon SES removes these before it sends the email.</p> </important> <p>If you only specify the <code>SourceIdentityArn</code> parameter, Amazon SES sets the From and Return-Path addresses to the same identity that you specified.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Using Sending Authorization with Amazon SES</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your <i>sending quota</i>). For more information about sending quotas in Amazon SES, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Managing Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> </ul>
     * @param {module:model/GETSendRawEmailRawMessageParameter} rawMessage <p>The raw email message itself. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by a blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments must be of a content type that Amazon SES supports. For a list on unsupported content types, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html\">Unsupported Attachment Types</a> in the <i>Amazon SES Developer Guide</i>.</p> </li> <li> <p>The entire message must be base64-encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, we highly recommend that you encode that content. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html\">Sending Raw Email</a> in the <i>Amazon SES Developer Guide</i>.</p> </li> <li> <p>Per <a href=\"https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6\">RFC 5321</a>, the maximum length of each line of text, including the &lt;CRLF&gt;, must not exceed 1,000 characters.</p> </li> </ul>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [source] <p>The identity's email address. If you do not provide a value for this parameter, you must specify a \"From\" address in the raw text of the message. (You can also specify both.)</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in<a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the <i>local part</i> of a source email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>. The sender name (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters must be encoded using MIME encoded-word syntax, as described in <a href=\"https://tools.ietf.org/html/rfc2047\">RFC 2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</p> </note> <p>If you specify the <code>Source</code> parameter and have feedback forwarding enabled, then bounces and complaints will be sent to this email address. This takes precedence over any Return-Path header that you might include in the raw text of the message.</p>
     * @param {Array.<String>} [destinations] A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.
     * @param {String} [fromArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular \"From\" address in the header of the raw email.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-FROM-ARN</code> in the raw message of the email. If you use both the <code>FromArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>FromArn</code> parameter.</p> <note> <p>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>.</p> </note>
     * @param {String} [sourceArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-SOURCE-ARN</code> in the raw message of the email. If you use both the <code>SourceArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>SourceArn</code> parameter.</p> <note> <p>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>.</p> </note>
     * @param {String} [returnPathArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-RETURN-PATH-ARN</code> in the raw message of the email. If you use both the <code>ReturnPathArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>ReturnPathArn</code> parameter.</p> <note> <p>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>.</p> </note>
     * @param {Array.<module:model/MessageTag>} [tags] A list of tags, in the form of name/value pairs, to apply to an email that you send using <code>SendRawEmail</code>. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
     * @param {String} [configurationSetName] The name of the configuration set to use when you send an email using <code>SendRawEmail</code>.
     * @param {module:api/DefaultApi~gETSendRawEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendRawEmailResponse}
     */
    gETSendRawEmail(rawMessage, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'rawMessage' is set
      if (rawMessage === undefined || rawMessage === null) {
        throw new Error("Missing the required parameter 'rawMessage' when calling gETSendRawEmail");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendRawEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendRawEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Source': opts['source'],
        'Destinations': this.apiClient.buildCollectionParam(opts['destinations'], 'multi'),
        'RawMessage': rawMessage,
        'FromArn': opts['fromArn'],
        'SourceArn': opts['sourceArn'],
        'ReturnPathArn': opts['returnPathArn'],
        'Tags': this.apiClient.buildCollectionParam(opts['tags'], 'multi'),
        'ConfigurationSetName': opts['configurationSetName'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendRawEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendRawEmail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSendTemplatedEmail operation.
     * @callback module:api/DefaultApi~gETSendTemplatedEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendTemplatedEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message using an email template and immediately queues it for sending.</p> <p>In order to send email using the <code>SendTemplatedEmail</code> operation, your call to the API must meet the following requirements:</p> <ul> <li> <p>The call must refer to an existing email template. You can create email templates using the <a>CreateTemplate</a> operation.</p> </li> <li> <p>The message must be sent from a verified email address or domain.</p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>Calls to the <code>SendTemplatedEmail</code> operation may only include one <code>Destination</code> parameter. A destination is a set of recipients who will receive the same version of the email. The <code>Destination</code> parameter can include up to 50 recipients, across the To:, CC: and BCC: fields.</p> </li> <li> <p>The <code>Destination</code> parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> </ul> <important> <p>If your call to the <code>SendTemplatedEmail</code> operation includes all of the required parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon SES can't render the email because the template contains errors, it doesn't send the email. Additionally, because it already accepted the message, Amazon SES doesn't return a message stating that it was unable to send the email.</p> <p>For these reasons, we highly recommend that you set up Amazon SES to send you notifications when Rendering Failure events occur. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Sending Personalized Email Using the Amazon SES API</a> in the <i>Amazon Simple Email Service Developer Guide</i>.</p> </important>
     * @param {String} source <p>The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</p> <p>If you are sending on behalf of another user and have been permitted to do so by a sending authorization policy, then you must also specify the <code>SourceArn</code> parameter. For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the <i>local part</i> of a source email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>. The sender name (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters must be encoded using MIME encoded-word syntax, as described in<a href=\"https://tools.ietf.org/html/rfc2047\">RFC 2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</p> </note>
     * @param {module:model/GETSendEmailDestinationParameter} destination The destination for this email, composed of To:, CC:, and BCC: fields. A Destination can include up to 50 recipients across these three fields.
     * @param {String} template The template to use when sending this email.
     * @param {String} templateData A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Array.<String>} [replyToAddresses] The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.
     * @param {String} [returnPath] The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code> parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. 
     * @param {String} [sourceArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} [returnPathArn] <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
     * @param {Array.<module:model/MessageTag>} [tags] A list of tags, in the form of name/value pairs, to apply to an email that you send using <code>SendTemplatedEmail</code>. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
     * @param {String} [configurationSetName] The name of the configuration set to use when you send an email using <code>SendTemplatedEmail</code>.
     * @param {String} [templateArn] The ARN of the template to use when sending this email.
     * @param {module:api/DefaultApi~gETSendTemplatedEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendTemplatedEmailResponse}
     */
    gETSendTemplatedEmail(source, destination, template, templateData, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling gETSendTemplatedEmail");
      }
      // verify the required parameter 'destination' is set
      if (destination === undefined || destination === null) {
        throw new Error("Missing the required parameter 'destination' when calling gETSendTemplatedEmail");
      }
      // verify the required parameter 'template' is set
      if (template === undefined || template === null) {
        throw new Error("Missing the required parameter 'template' when calling gETSendTemplatedEmail");
      }
      // verify the required parameter 'templateData' is set
      if (templateData === undefined || templateData === null) {
        throw new Error("Missing the required parameter 'templateData' when calling gETSendTemplatedEmail");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSendTemplatedEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSendTemplatedEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Source': source,
        'Destination': destination,
        'ReplyToAddresses': this.apiClient.buildCollectionParam(opts['replyToAddresses'], 'multi'),
        'ReturnPath': opts['returnPath'],
        'SourceArn': opts['sourceArn'],
        'ReturnPathArn': opts['returnPathArn'],
        'Tags': this.apiClient.buildCollectionParam(opts['tags'], 'multi'),
        'ConfigurationSetName': opts['configurationSetName'],
        'Template': template,
        'TemplateArn': opts['templateArn'],
        'TemplateData': templateData,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = SendTemplatedEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendTemplatedEmail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetActiveReceiptRuleSet operation.
     * @callback module:api/DefaultApi~gETSetActiveReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets the specified receipt rule set as the active receipt rule set.</p> <note> <p>To disable your email-receiving through Amazon SES completely, you can call this API with RuleSetName set to null.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [ruleSetName] The name of the receipt rule set to make active. Setting this value to null disables all email receiving.
     * @param {module:api/DefaultApi~gETSetActiveReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetActiveReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetActiveReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetActiveReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': opts['ruleSetName'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetActiveReceiptRuleSet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetIdentityDkimEnabled operation.
     * @callback module:api/DefaultApi~gETSetIdentityDkimEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables Easy DKIM signing of email sent from an identity. If Easy DKIM signing is enabled for a domain, then Amazon SES uses DKIM to sign all email that it sends from addresses on that domain. If Easy DKIM signing is enabled for an email address, then Amazon SES uses DKIM to sign all email it sends from that address.</p> <note> <p>For email addresses (for example, <code>user@example.com</code>), you can only enable DKIM signing if the corresponding domain (in this case, <code>example.com</code>) has been set up to use Easy DKIM.</p> </note> <p>You can enable DKIM signing for an identity at any time after you start the verification process for the identity, even if the verification process isn't complete. </p> <p>You can execute this operation no more than once per second.</p> <p>For more information about Easy DKIM signing, go to the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} identity The identity for which DKIM signing should be enabled or disabled.
     * @param {Boolean} dkimEnabled Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. 
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETSetIdentityDkimEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetIdentityDkimEnabled(identity, dkimEnabled, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETSetIdentityDkimEnabled");
      }
      // verify the required parameter 'dkimEnabled' is set
      if (dkimEnabled === undefined || dkimEnabled === null) {
        throw new Error("Missing the required parameter 'dkimEnabled' when calling gETSetIdentityDkimEnabled");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetIdentityDkimEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetIdentityDkimEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'DkimEnabled': dkimEnabled,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityDkimEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetIdentityFeedbackForwardingEnabled operation.
     * @callback module:api/DefaultApi~gETSetIdentityFeedbackForwardingEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email. Feedback forwarding can only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified for both bounces and complaints.</p> <note> <p>Feedback forwarding does not apply to delivery notifications. Delivery notifications are only available through Amazon SNS.</p> </note> <p>You can execute this operation no more than once per second.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} identity The identity for which to set bounce and complaint notification forwarding. Examples: <code>user@example.com</code>, <code>example.com</code>.
     * @param {Boolean} forwardingEnabled Sets whether Amazon SES will forward bounce and complaint notifications as email. <code>true</code> specifies that Amazon SES will forward bounce and complaint notifications as email, in addition to any Amazon SNS topic publishing otherwise specified. <code>false</code> specifies that Amazon SES will publish bounce and complaint notifications only through Amazon SNS. This value can only be set to <code>false</code> when Amazon SNS topics are set for both <code>Bounce</code> and <code>Complaint</code> notification types.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETSetIdentityFeedbackForwardingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetIdentityFeedbackForwardingEnabled(identity, forwardingEnabled, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETSetIdentityFeedbackForwardingEnabled");
      }
      // verify the required parameter 'forwardingEnabled' is set
      if (forwardingEnabled === undefined || forwardingEnabled === null) {
        throw new Error("Missing the required parameter 'forwardingEnabled' when calling gETSetIdentityFeedbackForwardingEnabled");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetIdentityFeedbackForwardingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetIdentityFeedbackForwardingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'ForwardingEnabled': forwardingEnabled,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityFeedbackForwardingEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetIdentityHeadersInNotificationsEnabled operation.
     * @callback module:api/DefaultApi~gETSetIdentityHeadersInNotificationsEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type.</p> <p>You can execute this operation no more than once per second.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} identity The identity for which to enable or disable headers in notifications. Examples: <code>user@example.com</code>, <code>example.com</code>.
     * @param {module:model/String} notificationType The notification type for which to enable or disable headers in notifications. 
     * @param {Boolean} enabled <p>Sets whether Amazon SES includes the original email headers in Amazon SNS notifications of the specified notification type. A value of <code>true</code> specifies that Amazon SES will include headers in notifications, and a value of <code>false</code> specifies that Amazon SES will not include headers in notifications.</p> <p>This value can only be set when <code>NotificationType</code> is already set to use a particular Amazon SNS topic.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETSetIdentityHeadersInNotificationsEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetIdentityHeadersInNotificationsEnabled(identity, notificationType, enabled, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETSetIdentityHeadersInNotificationsEnabled");
      }
      // verify the required parameter 'notificationType' is set
      if (notificationType === undefined || notificationType === null) {
        throw new Error("Missing the required parameter 'notificationType' when calling gETSetIdentityHeadersInNotificationsEnabled");
      }
      // verify the required parameter 'enabled' is set
      if (enabled === undefined || enabled === null) {
        throw new Error("Missing the required parameter 'enabled' when calling gETSetIdentityHeadersInNotificationsEnabled");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetIdentityHeadersInNotificationsEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetIdentityHeadersInNotificationsEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'NotificationType': notificationType,
        'Enabled': enabled,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityHeadersInNotificationsEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetIdentityMailFromDomain operation.
     * @callback module:api/DefaultApi~gETSetIdentityMailFromDomainCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain).</p> <important> <p>To send emails using the specified MAIL FROM domain, you must add an MX record to your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy Framework (SPF) checks, you must also add or update an SPF record. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html\">Amazon SES Developer Guide</a>.</p> </important> <p>You can execute this operation no more than once per second.</p>
     * @param {String} identity The verified identity for which you want to enable or disable the specified custom MAIL FROM domain.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [mailFromDomain] The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM domain must 1) be a subdomain of the verified identity, 2) not be used in a \"From\" address if the MAIL FROM domain is the destination of email feedback forwarding (for more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from.html\">Amazon SES Developer Guide</a>), and 3) not be used to receive emails. A value of <code>null</code> disables the custom MAIL FROM setting for the identity.
     * @param {module:model/String} [behaviorOnMXFailure] <p>The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. If you choose <code>UseDefaultValue</code>, Amazon SES will use amazonses.com (or a subdomain of that) as the MAIL FROM domain. If you choose <code>RejectMessage</code>, Amazon SES will return a <code>MailFromDomainNotVerified</code> error and not send the email.</p> <p>The action specified in <code>BehaviorOnMXFailure</code> is taken when the custom MAIL FROM domain setup is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
     * @param {module:api/DefaultApi~gETSetIdentityMailFromDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetIdentityMailFromDomain(identity, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETSetIdentityMailFromDomain");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetIdentityMailFromDomain");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetIdentityMailFromDomain");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'MailFromDomain': opts['mailFromDomain'],
        'BehaviorOnMXFailure': opts['behaviorOnMXFailure'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityMailFromDomain', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetIdentityNotificationTopic operation.
     * @callback module:api/DefaultApi~gETSetIdentityNotificationTopicCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering notifications. When you use this operation, you specify a verified identity, such as an email address or domain. When you send an email that uses the chosen identity in the Source field, Amazon SES sends notifications to the topic you specified. You can send bounce, complaint, or delivery notifications (or any combination of the three) to the Amazon SNS topic that you specify.</p> <p>You can execute this operation no more than once per second.</p> <p>For more information about feedback notification, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} identity <p>The identity (email address or domain) that you want to set the Amazon SNS topic for.</p> <important> <p>You can only specify a verified identity for this parameter.</p> </important> <p>You can specify an identity by using its name or by using its Amazon Resource Name (ARN). The following examples are all valid identities: <code>sender@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>
     * @param {module:model/String} notificationType The type of notifications that will be published to the specified Amazon SNS topic.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [snsTopic] The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing is disabled.
     * @param {module:api/DefaultApi~gETSetIdentityNotificationTopicCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetIdentityNotificationTopic(identity, notificationType, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identity' is set
      if (identity === undefined || identity === null) {
        throw new Error("Missing the required parameter 'identity' when calling gETSetIdentityNotificationTopic");
      }
      // verify the required parameter 'notificationType' is set
      if (notificationType === undefined || notificationType === null) {
        throw new Error("Missing the required parameter 'notificationType' when calling gETSetIdentityNotificationTopic");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetIdentityNotificationTopic");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetIdentityNotificationTopic");
      }

      let pathParams = {
      };
      let queryParams = {
        'Identity': identity,
        'NotificationType': notificationType,
        'SnsTopic': opts['snsTopic'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityNotificationTopic', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETSetReceiptRulePosition operation.
     * @callback module:api/DefaultApi~gETSetReceiptRulePositionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets the position of the specified receipt rule in the receipt rule set.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set that contains the receipt rule to reposition.
     * @param {String} ruleName The name of the receipt rule to reposition.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [after] The name of the receipt rule after which to place the specified receipt rule.
     * @param {module:api/DefaultApi~gETSetReceiptRulePositionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETSetReceiptRulePosition(ruleSetName, ruleName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETSetReceiptRulePosition");
      }
      // verify the required parameter 'ruleName' is set
      if (ruleName === undefined || ruleName === null) {
        throw new Error("Missing the required parameter 'ruleName' when calling gETSetReceiptRulePosition");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETSetReceiptRulePosition");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETSetReceiptRulePosition");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'RuleName': ruleName,
        'After': opts['after'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetReceiptRulePosition', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETTestRenderTemplate operation.
     * @callback module:api/DefaultApi~gETTestRenderTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestRenderTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the template that you want to render.
     * @param {String} templateData A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETTestRenderTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestRenderTemplateResponse}
     */
    gETTestRenderTemplate(templateName, templateData, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETTestRenderTemplate");
      }
      // verify the required parameter 'templateData' is set
      if (templateData === undefined || templateData === null) {
        throw new Error("Missing the required parameter 'templateData' when calling gETTestRenderTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETTestRenderTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETTestRenderTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'TemplateData': templateData,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = TestRenderTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=TestRenderTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateAccountSendingEnabled operation.
     * @callback module:api/DefaultApi~gETUpdateAccountSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables email sending across your entire Amazon SES account in the current AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending across your Amazon SES account in a given AWS Region when reputation metrics (such as your bounce or complaint rates) reach certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Boolean} [enabled] Describes whether email sending is enabled or disabled for your Amazon SES account in the current AWS Region.
     * @param {module:api/DefaultApi~gETUpdateAccountSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETUpdateAccountSendingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateAccountSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateAccountSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Enabled': opts['enabled'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateAccountSendingEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~gETUpdateConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the event destination of a configuration set. Event destinations are associated with configuration sets, which enable you to publish email sending events to Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS). For information about using configuration sets, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Monitoring Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i> </p> <note> <p>When you create or update an event destination, you must provide one, and only one, destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).</p> </note> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set that contains the event destination that you want to update.
     * @param {module:model/GETCreateConfigurationSetEventDestinationEventDestinationParameter} eventDestination The event destination object that you want to apply to the specified configuration set.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETUpdateConfigurationSetEventDestination(configurationSetName, eventDestination, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETUpdateConfigurationSetEventDestination");
      }
      // verify the required parameter 'eventDestination' is set
      if (eventDestination === undefined || eventDestination === null) {
        throw new Error("Missing the required parameter 'eventDestination' when calling gETUpdateConfigurationSetEventDestination");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'EventDestination': eventDestination,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetEventDestination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateConfigurationSetReputationMetricsEnabled operation.
     * @callback module:api/DefaultApi~gETUpdateConfigurationSetReputationMetricsEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region. Reputation metrics include bounce and complaint rates. These metrics are published to Amazon CloudWatch. By using CloudWatch, you can create alarms when bounce or complaint rates exceed certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set that you want to update.
     * @param {Boolean} enabled Describes whether or not Amazon SES will publish reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateConfigurationSetReputationMetricsEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETUpdateConfigurationSetReputationMetricsEnabled(configurationSetName, enabled, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETUpdateConfigurationSetReputationMetricsEnabled");
      }
      // verify the required parameter 'enabled' is set
      if (enabled === undefined || enabled === null) {
        throw new Error("Missing the required parameter 'enabled' when calling gETUpdateConfigurationSetReputationMetricsEnabled");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateConfigurationSetReputationMetricsEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateConfigurationSetReputationMetricsEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'Enabled': enabled,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetReputationMetricsEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateConfigurationSetSendingEnabled operation.
     * @callback module:api/DefaultApi~gETUpdateConfigurationSetSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending for a configuration set when the reputation metrics for that configuration set (such as your bounce on complaint rate) exceed certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} configurationSetName The name of the configuration set that you want to update.
     * @param {Boolean} enabled Describes whether email sending is enabled or disabled for the configuration set. 
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateConfigurationSetSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETUpdateConfigurationSetSendingEnabled(configurationSetName, enabled, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETUpdateConfigurationSetSendingEnabled");
      }
      // verify the required parameter 'enabled' is set
      if (enabled === undefined || enabled === null) {
        throw new Error("Missing the required parameter 'enabled' when calling gETUpdateConfigurationSetSendingEnabled");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateConfigurationSetSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateConfigurationSetSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'Enabled': enabled,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetSendingEnabled', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~gETUpdateConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Modifies an association between a configuration set and a custom domain for open and click event tracking. </p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p>
     * @param {String} configurationSetName The name of the configuration set for which you want to update the custom tracking domain.
     * @param {module:model/GETCreateConfigurationSetTrackingOptionsTrackingOptionsParameter} trackingOptions 
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETUpdateConfigurationSetTrackingOptions(configurationSetName, trackingOptions, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'configurationSetName' is set
      if (configurationSetName === undefined || configurationSetName === null) {
        throw new Error("Missing the required parameter 'configurationSetName' when calling gETUpdateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'trackingOptions' is set
      if (trackingOptions === undefined || trackingOptions === null) {
        throw new Error("Missing the required parameter 'trackingOptions' when calling gETUpdateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ConfigurationSetName': configurationSetName,
        'TrackingOptions': trackingOptions,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetTrackingOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~gETUpdateCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} templateName The name of the custom verification email template that you want to update.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [fromEmailAddress] The email address that the custom verification email is sent from.
     * @param {String} [templateSubject] The subject line of the custom verification email.
     * @param {String} [templateContent] The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html#custom-verification-emails-faq\">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.
     * @param {String} [successRedirectionURL] The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
     * @param {String} [failureRedirectionURL] The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
     * @param {module:api/DefaultApi~gETUpdateCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETUpdateCustomVerificationEmailTemplate(templateName, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling gETUpdateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'TemplateName': templateName,
        'FromEmailAddress': opts['fromEmailAddress'],
        'TemplateSubject': opts['templateSubject'],
        'TemplateContent': opts['templateContent'],
        'SuccessRedirectionURL': opts['successRedirectionURL'],
        'FailureRedirectionURL': opts['failureRedirectionURL'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateCustomVerificationEmailTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateReceiptRule operation.
     * @callback module:api/DefaultApi~gETUpdateReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates a receipt rule.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} ruleSetName The name of the receipt rule set that the receipt rule belongs to.
     * @param {module:model/GETCreateReceiptRuleRuleParameter} rule A data structure that contains the updated receipt rule information.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETUpdateReceiptRule(ruleSetName, rule, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ruleSetName' is set
      if (ruleSetName === undefined || ruleSetName === null) {
        throw new Error("Missing the required parameter 'ruleSetName' when calling gETUpdateReceiptRule");
      }
      // verify the required parameter 'rule' is set
      if (rule === undefined || rule === null) {
        throw new Error("Missing the required parameter 'rule' when calling gETUpdateReceiptRule");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'RuleSetName': ruleSetName,
        'Rule': rule,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateReceiptRule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUpdateTemplate operation.
     * @callback module:api/DefaultApi~gETUpdateTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/GETCreateTemplateTemplateParameter} template 
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETUpdateTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETUpdateTemplate(template, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'template' is set
      if (template === undefined || template === null) {
        throw new Error("Missing the required parameter 'template' when calling gETUpdateTemplate");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETUpdateTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETUpdateTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Template': template,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETVerifyDomainDkim operation.
     * @callback module:api/DefaultApi~gETVerifyDomainDkimCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyDomainDkimResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a set of DKIM tokens for a domain identity.</p> <important> <p>When you execute the <code>VerifyDomainDkim</code> operation, the domain that you specify is added to the list of identities that are associated with your account. This is true even if you haven't already associated the domain with your account by using the <code>VerifyDomainIdentity</code> operation. However, you can't send email from the domain until you either successfully <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html\">verify it</a> or you successfully <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">set up DKIM for it</a>.</p> </important> <p>You use the tokens that are generated by this operation to create CNAME records. When Amazon SES detects that you've added these records to the DNS configuration for a domain, you can start sending email from that domain. You can start sending email even if you haven't added the TXT record provided by the VerifyDomainIdentity operation to the DNS configuration for your domain. All email that you send from the domain is authenticated using DKIM.</p> <p>To create the CNAME records for DKIM authentication, use the following values:</p> <ul> <li> <p> <b>Name</b>: <i>token</i>._domainkey.<i>example.com</i> </p> </li> <li> <p> <b>Type</b>: CNAME</p> </li> <li> <p> <b>Value</b>: <i>token</i>.dkim.amazonses.com</p> </li> </ul> <p>In the preceding example, replace <i>token</i> with one of the tokens that are generated when you execute this operation. Replace <i>example.com</i> with your domain. Repeat this process for each token that's generated by this operation.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} domain The name of the domain to be verified for Easy DKIM signing.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETVerifyDomainDkimCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyDomainDkimResponse}
     */
    gETVerifyDomainDkim(domain, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling gETVerifyDomainDkim");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETVerifyDomainDkim");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETVerifyDomainDkim");
      }

      let pathParams = {
      };
      let queryParams = {
        'Domain': domain,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = VerifyDomainDkimResponse;
      return this.apiClient.callApi(
        '/#Action=VerifyDomainDkim', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETVerifyDomainIdentity operation.
     * @callback module:api/DefaultApi~gETVerifyDomainIdentityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyDomainIdentityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a domain to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. For more information about verifying domains, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} domain The domain to be verified.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETVerifyDomainIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyDomainIdentityResponse}
     */
    gETVerifyDomainIdentity(domain, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling gETVerifyDomainIdentity");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETVerifyDomainIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETVerifyDomainIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'Domain': domain,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = VerifyDomainIdentityResponse;
      return this.apiClient.callApi(
        '/#Action=VerifyDomainIdentity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETVerifyEmailAddress operation.
     * @callback module:api/DefaultApi~gETVerifyEmailAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>VerifyEmailIdentity</code> operation to verify a new email address.
     * @param {String} emailAddress The email address to be verified.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETVerifyEmailAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETVerifyEmailAddress(emailAddress, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'emailAddress' is set
      if (emailAddress === undefined || emailAddress === null) {
        throw new Error("Missing the required parameter 'emailAddress' when calling gETVerifyEmailAddress");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETVerifyEmailAddress");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETVerifyEmailAddress");
      }

      let pathParams = {
      };
      let queryParams = {
        'EmailAddress': emailAddress,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=VerifyEmailAddress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETVerifyEmailIdentity operation.
     * @callback module:api/DefaultApi~gETVerifyEmailIdentityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds an email address to the list of identities for your Amazon SES account in the current AWS region and attempts to verify it. As a result of executing this operation, a verification email is sent to the specified address.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {String} emailAddress The email address to be verified.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~gETVerifyEmailIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    gETVerifyEmailIdentity(emailAddress, action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'emailAddress' is set
      if (emailAddress === undefined || emailAddress === null) {
        throw new Error("Missing the required parameter 'emailAddress' when calling gETVerifyEmailIdentity");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling gETVerifyEmailIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling gETVerifyEmailIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'EmailAddress': emailAddress,
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=VerifyEmailIdentity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCloneReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTCloneReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a receipt rule set by cloning an existing one. All receipt rules and configurations are copied to the new receipt rule set and are completely independent of the source rule set.</p> <p>For information about setting up rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CloneReceiptRuleSetRequest} [cloneReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTCloneReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCloneReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['cloneReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCloneReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCloneReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CloneReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateConfigurationSet operation.
     * @callback module:api/DefaultApi~pOSTCreateConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a configuration set.</p> <p>Configuration sets enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateConfigurationSetRequest} [createConfigurationSetRequest] 
     * @param {module:api/DefaultApi~pOSTCreateConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateConfigurationSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createConfigurationSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~pOSTCreateConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a configuration set event destination.</p> <note> <p>When you create or update an event destination, you must provide one, and only one, destination. The destination can be CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).</p> </note> <p>An event destination is the AWS service to which Amazon SES publishes the email sending events associated with a configuration set. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateConfigurationSetEventDestinationRequest} [createConfigurationSetEventDestinationRequest] 
     * @param {module:api/DefaultApi~pOSTCreateConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateConfigurationSetEventDestination(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createConfigurationSetEventDestinationRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSetEventDestination', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~pOSTCreateConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an association between a configuration set and a custom domain for open and click event tracking. </p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateConfigurationSetTrackingOptionsRequest} [createConfigurationSetTrackingOptionsRequest] 
     * @param {module:api/DefaultApi~pOSTCreateConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateConfigurationSetTrackingOptions(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createConfigurationSetTrackingOptionsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateConfigurationSetTrackingOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~pOSTCreateCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new custom verification email template.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateCustomVerificationEmailTemplateRequest} [createCustomVerificationEmailTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTCreateCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTCreateCustomVerificationEmailTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createCustomVerificationEmailTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=CreateCustomVerificationEmailTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateReceiptFilter operation.
     * @callback module:api/DefaultApi~pOSTCreateReceiptFilterCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new IP address filter.</p> <p>For information about setting up IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateReceiptFilterRequest} [createReceiptFilterRequest] 
     * @param {module:api/DefaultApi~pOSTCreateReceiptFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateReceiptFilter(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createReceiptFilterRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateReceiptFilter");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateReceiptFilter");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptFilter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateReceiptRule operation.
     * @callback module:api/DefaultApi~pOSTCreateReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a receipt rule.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateReceiptRuleRequest} [createReceiptRuleRequest] 
     * @param {module:api/DefaultApi~pOSTCreateReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateReceiptRule(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createReceiptRuleRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptRule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTCreateReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an empty receipt rule set.</p> <p>For information about setting up receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateReceiptRuleSetRequest} [createReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTCreateReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTCreateTemplate operation.
     * @callback module:api/DefaultApi~pOSTCreateTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/CreateTemplateRequest} [createTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTCreateTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTCreateTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['createTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTCreateTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTCreateTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=CreateTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteConfigurationSet operation.
     * @callback module:api/DefaultApi~pOSTDeleteConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a configuration set. Configuration sets enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteConfigurationSetRequest} [deleteConfigurationSetRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteConfigurationSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteConfigurationSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~pOSTDeleteConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a configuration set event destination. Configuration set event destinations are associated with configuration sets, which enable you to publish email sending events. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteConfigurationSetEventDestinationRequest} [deleteConfigurationSetEventDestinationRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteConfigurationSetEventDestination(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteConfigurationSetEventDestinationRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSetEventDestination', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~pOSTDeleteConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an association between a configuration set and a custom domain for open and click event tracking.</p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p> <note> <p>Deleting this kind of association will result in emails sent using the specified configuration set to capture open and click events using the standard, Amazon SES-operated domains.</p> </note>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteConfigurationSetTrackingOptionsRequest} [deleteConfigurationSetTrackingOptionsRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteConfigurationSetTrackingOptions(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteConfigurationSetTrackingOptionsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteConfigurationSetTrackingOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~pOSTDeleteCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an existing custom verification email template. </p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteCustomVerificationEmailTemplateRequest} [deleteCustomVerificationEmailTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTDeleteCustomVerificationEmailTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteCustomVerificationEmailTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=DeleteCustomVerificationEmailTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteIdentity operation.
     * @callback module:api/DefaultApi~pOSTDeleteIdentityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified identity (an email address or a domain) from the list of verified identities.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteIdentityRequest} [deleteIdentityRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteIdentity(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteIdentityRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteIdentity', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteIdentityPolicy operation.
     * @callback module:api/DefaultApi~pOSTDeleteIdentityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteIdentityPolicyRequest} [deleteIdentityPolicyRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteIdentityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteIdentityPolicy(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteIdentityPolicyRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteIdentityPolicy");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteIdentityPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteIdentityPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteReceiptFilter operation.
     * @callback module:api/DefaultApi~pOSTDeleteReceiptFilterCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified IP address filter.</p> <p>For information about managing IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteReceiptFilterRequest} [deleteReceiptFilterRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteReceiptFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteReceiptFilter(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteReceiptFilterRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteReceiptFilter");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteReceiptFilter");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptFilter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteReceiptRule operation.
     * @callback module:api/DefaultApi~pOSTDeleteReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified receipt rule.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteReceiptRuleRequest} [deleteReceiptRuleRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteReceiptRule(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteReceiptRuleRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptRule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTDeleteReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified receipt rule set and all of the receipt rules it contains.</p> <note> <p>The currently active rule set cannot be deleted.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteReceiptRuleSetRequest} [deleteReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteTemplate operation.
     * @callback module:api/DefaultApi~pOSTDeleteTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an email template.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteTemplateRequest} [deleteTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTDeleteTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=DeleteTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDeleteVerifiedEmailAddress operation.
     * @callback module:api/DefaultApi~pOSTDeleteVerifiedEmailAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>DeleteIdentity</code> operation to delete email addresses and domains.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DeleteVerifiedEmailAddressRequest} [deleteVerifiedEmailAddressRequest] 
     * @param {module:api/DefaultApi~pOSTDeleteVerifiedEmailAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTDeleteVerifiedEmailAddress(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteVerifiedEmailAddressRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDeleteVerifiedEmailAddress");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDeleteVerifiedEmailAddress");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=DeleteVerifiedEmailAddress', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDescribeActiveReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTDescribeActiveReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeActiveReceiptRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the metadata and receipt rules for the receipt rule set that is currently active.</p> <p>For information about setting up receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/DefaultApi~pOSTDescribeActiveReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeActiveReceiptRuleSetResponse}
     */
    pOSTDescribeActiveReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDescribeActiveReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDescribeActiveReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = DescribeActiveReceiptRuleSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeActiveReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDescribeConfigurationSet operation.
     * @callback module:api/DefaultApi~pOSTDescribeConfigurationSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeConfigurationSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified configuration set. For information about using configuration sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DescribeConfigurationSetRequest} [describeConfigurationSetRequest] 
     * @param {module:api/DefaultApi~pOSTDescribeConfigurationSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeConfigurationSetResponse}
     */
    pOSTDescribeConfigurationSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['describeConfigurationSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDescribeConfigurationSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDescribeConfigurationSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = DescribeConfigurationSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeConfigurationSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDescribeReceiptRule operation.
     * @callback module:api/DefaultApi~pOSTDescribeReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeReceiptRuleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified receipt rule.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DescribeReceiptRuleRequest} [describeReceiptRuleRequest] 
     * @param {module:api/DefaultApi~pOSTDescribeReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeReceiptRuleResponse}
     */
    pOSTDescribeReceiptRule(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['describeReceiptRuleRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDescribeReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDescribeReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = DescribeReceiptRuleResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeReceiptRule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTDescribeReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTDescribeReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeReceiptRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the details of the specified receipt rule set.</p> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/DescribeReceiptRuleSetRequest} [describeReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTDescribeReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeReceiptRuleSetResponse}
     */
    pOSTDescribeReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['describeReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTDescribeReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTDescribeReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = DescribeReceiptRuleSetResponse;
      return this.apiClient.callApi(
        '/#Action=DescribeReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetAccountSendingEnabled operation.
     * @callback module:api/DefaultApi~pOSTGetAccountSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAccountSendingEnabledResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the email sending status of the Amazon SES account for the current region.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~pOSTGetAccountSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAccountSendingEnabledResponse}
     */
    pOSTGetAccountSendingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetAccountSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetAccountSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetAccountSendingEnabledResponse;
      return this.apiClient.callApi(
        '/#Action=GetAccountSendingEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~pOSTGetCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCustomVerificationEmailTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the custom email verification template for the template name you specify.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetCustomVerificationEmailTemplateRequest} [getCustomVerificationEmailTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTGetCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCustomVerificationEmailTemplateResponse}
     */
    pOSTGetCustomVerificationEmailTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getCustomVerificationEmailTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetCustomVerificationEmailTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=GetCustomVerificationEmailTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetIdentityDkimAttributes operation.
     * @callback module:api/DefaultApi~pOSTGetIdentityDkimAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityDkimAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the current status of Easy DKIM signing for an entity. For domain name identities, this operation also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.</p> <p>This operation takes a list of identities as input and returns the following information for each:</p> <ul> <li> <p>Whether Easy DKIM signing is enabled or disabled.</p> </li> <li> <p>A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.</p> </li> <li> <p>Whether Amazon SES has successfully verified the DKIM tokens published in the domain's DNS. This information is only returned for domain name identities, not for email addresses.</p> </li> </ul> <p>This operation is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetIdentityDkimAttributesRequest} [getIdentityDkimAttributesRequest] 
     * @param {module:api/DefaultApi~pOSTGetIdentityDkimAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityDkimAttributesResponse}
     */
    pOSTGetIdentityDkimAttributes(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIdentityDkimAttributesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetIdentityDkimAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetIdentityDkimAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetIdentityDkimAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityDkimAttributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetIdentityMailFromDomainAttributes operation.
     * @callback module:api/DefaultApi~pOSTGetIdentityMailFromDomainAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityMailFromDomainAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the custom MAIL FROM attributes for a list of identities (email addresses : domains).</p> <p>This operation is throttled at one request per second and can only get custom MAIL FROM attributes for up to 100 identities at a time.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetIdentityMailFromDomainAttributesRequest} [getIdentityMailFromDomainAttributesRequest] 
     * @param {module:api/DefaultApi~pOSTGetIdentityMailFromDomainAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityMailFromDomainAttributesResponse}
     */
    pOSTGetIdentityMailFromDomainAttributes(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIdentityMailFromDomainAttributesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetIdentityMailFromDomainAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetIdentityMailFromDomainAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetIdentityMailFromDomainAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityMailFromDomainAttributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetIdentityNotificationAttributes operation.
     * @callback module:api/DefaultApi~pOSTGetIdentityNotificationAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityNotificationAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes.</p> <p>This operation is throttled at one request per second and can only get notification attributes for up to 100 identities at a time.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetIdentityNotificationAttributesRequest} [getIdentityNotificationAttributesRequest] 
     * @param {module:api/DefaultApi~pOSTGetIdentityNotificationAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityNotificationAttributesResponse}
     */
    pOSTGetIdentityNotificationAttributes(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIdentityNotificationAttributesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetIdentityNotificationAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetIdentityNotificationAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetIdentityNotificationAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityNotificationAttributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetIdentityPolicies operation.
     * @callback module:api/DefaultApi~pOSTGetIdentityPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetIdentityPoliciesRequest} [getIdentityPoliciesRequest] 
     * @param {module:api/DefaultApi~pOSTGetIdentityPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityPoliciesResponse}
     */
    pOSTGetIdentityPolicies(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIdentityPoliciesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetIdentityPolicies");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetIdentityPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetIdentityPoliciesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityPolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetIdentityVerificationAttributes operation.
     * @callback module:api/DefaultApi~pOSTGetIdentityVerificationAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetIdentityVerificationAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity.</p> <p>The verification status of an email address is \"Pending\" until the email address owner clicks the link within the verification email that Amazon SES sent to that address. If the email address owner clicks the link within 24 hours, the verification status of the email address changes to \"Success\". If the link is not clicked within 24 hours, the verification status changes to \"Failed.\" In that case, if you still want to verify the email address, you must restart the verification process from the beginning.</p> <p>For domain identities, the domain's verification status is \"Pending\" as Amazon SES searches for the required TXT record in the DNS settings of the domain. When Amazon SES detects the record, the domain's verification status changes to \"Success\". If Amazon SES is unable to detect the record within 72 hours, the domain's verification status changes to \"Failed.\" In that case, if you still want to verify the domain, you must restart the verification process from the beginning.</p> <p>This operation is throttled at one request per second and can only get verification attributes for up to 100 identities at a time.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetIdentityVerificationAttributesRequest} [getIdentityVerificationAttributesRequest] 
     * @param {module:api/DefaultApi~pOSTGetIdentityVerificationAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetIdentityVerificationAttributesResponse}
     */
    pOSTGetIdentityVerificationAttributes(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIdentityVerificationAttributesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetIdentityVerificationAttributes");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetIdentityVerificationAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetIdentityVerificationAttributesResponse;
      return this.apiClient.callApi(
        '/#Action=GetIdentityVerificationAttributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetSendQuota operation.
     * @callback module:api/DefaultApi~pOSTGetSendQuotaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSendQuotaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides the sending limits for the Amazon SES account. </p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~pOSTGetSendQuotaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSendQuotaResponse}
     */
    pOSTGetSendQuota(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetSendQuota");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetSendQuota");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetSendQuotaResponse;
      return this.apiClient.callApi(
        '/#Action=GetSendQuota', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetSendStatistics operation.
     * @callback module:api/DefaultApi~pOSTGetSendStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSendStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides sending statistics for the current AWS Region. The result is a list of data points, representing the last two weeks of sending activity. Each data point in the list contains statistics for a 15-minute period of time.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~pOSTGetSendStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSendStatisticsResponse}
     */
    pOSTGetSendStatistics(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetSendStatistics");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetSendStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = GetSendStatisticsResponse;
      return this.apiClient.callApi(
        '/#Action=GetSendStatistics', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTGetTemplate operation.
     * @callback module:api/DefaultApi~pOSTGetTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Displays the template object (which includes the Subject line, HTML part and text part) for the template you specify.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/GetTemplateRequest} [getTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTGetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTemplateResponse}
     */
    pOSTGetTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['getTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTGetTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTGetTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = GetTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=GetTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListConfigurationSets operation.
     * @callback module:api/DefaultApi~pOSTListConfigurationSetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListConfigurationSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Provides a list of the configuration sets associated with your Amazon SES account in the current AWS Region. For information about using configuration sets, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Monitoring Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i> </p> <p>You can execute this operation no more than once per second. This operation will return up to 1,000 configuration sets each time it is run. If your Amazon SES account has more than 1,000 configuration sets, this operation will also return a NextToken element. You can then execute the <code>ListConfigurationSets</code> operation again, passing the <code>NextToken</code> parameter and the value of the NextToken element to retrieve additional results.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/ListConfigurationSetsRequest} [listConfigurationSetsRequest] 
     * @param {module:api/DefaultApi~pOSTListConfigurationSetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListConfigurationSetsResponse}
     */
    pOSTListConfigurationSets(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listConfigurationSetsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListConfigurationSets");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListConfigurationSets");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListConfigurationSetsResponse;
      return this.apiClient.callApi(
        '/#Action=ListConfigurationSets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListCustomVerificationEmailTemplates operation.
     * @callback module:api/DefaultApi~pOSTListCustomVerificationEmailTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCustomVerificationEmailTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the existing custom verification email templates for your account in the current AWS Region.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:model/ListCustomVerificationEmailTemplatesRequest} [listCustomVerificationEmailTemplatesRequest] 
     * @param {module:api/DefaultApi~pOSTListCustomVerificationEmailTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCustomVerificationEmailTemplatesResponse}
     */
    pOSTListCustomVerificationEmailTemplates(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listCustomVerificationEmailTemplatesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListCustomVerificationEmailTemplates");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListCustomVerificationEmailTemplates");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListCustomVerificationEmailTemplatesResponse;
      return this.apiClient.callApi(
        '/#Action=ListCustomVerificationEmailTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListIdentities operation.
     * @callback module:api/DefaultApi~pOSTListIdentitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIdentitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list containing all of the identities (email addresses and domains) for your AWS account in the current AWS Region, regardless of verification status.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxItems] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:model/ListIdentitiesRequest} [listIdentitiesRequest] 
     * @param {module:api/DefaultApi~pOSTListIdentitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIdentitiesResponse}
     */
    pOSTListIdentities(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listIdentitiesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListIdentities");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListIdentities");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxItems': opts['maxItems'],
        'NextToken': opts['nextToken'],
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListIdentitiesResponse;
      return this.apiClient.callApi(
        '/#Action=ListIdentities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListIdentityPolicies operation.
     * @callback module:api/DefaultApi~pOSTListIdentityPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIdentityPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain). This API returns only a list. If you want the actual policy content, you can use <code>GetIdentityPolicies</code>.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/ListIdentityPoliciesRequest} [listIdentityPoliciesRequest] 
     * @param {module:api/DefaultApi~pOSTListIdentityPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIdentityPoliciesResponse}
     */
    pOSTListIdentityPolicies(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listIdentityPoliciesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListIdentityPolicies");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListIdentityPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListIdentityPoliciesResponse;
      return this.apiClient.callApi(
        '/#Action=ListIdentityPolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListReceiptFilters operation.
     * @callback module:api/DefaultApi~pOSTListReceiptFiltersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListReceiptFiltersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the IP address filters associated with your AWS account in the current AWS Region.</p> <p>For information about managing IP address filters, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/DefaultApi~pOSTListReceiptFiltersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListReceiptFiltersResponse}
     */
    pOSTListReceiptFilters(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListReceiptFilters");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListReceiptFilters");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListReceiptFiltersResponse;
      return this.apiClient.callApi(
        '/#Action=ListReceiptFilters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListReceiptRuleSets operation.
     * @callback module:api/DefaultApi~pOSTListReceiptRuleSetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListReceiptRuleSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the receipt rule sets that exist under your AWS account in the current AWS Region. If there are additional receipt rule sets to be retrieved, you will receive a <code>NextToken</code> that you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve the additional entries.</p> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/ListReceiptRuleSetsRequest} [listReceiptRuleSetsRequest] 
     * @param {module:api/DefaultApi~pOSTListReceiptRuleSetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListReceiptRuleSetsResponse}
     */
    pOSTListReceiptRuleSets(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listReceiptRuleSetsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListReceiptRuleSets");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListReceiptRuleSets");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListReceiptRuleSetsResponse;
      return this.apiClient.callApi(
        '/#Action=ListReceiptRuleSets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListTemplates operation.
     * @callback module:api/DefaultApi~pOSTListTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the email templates present in your Amazon SES account in the current AWS Region.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/ListTemplatesRequest} [listTemplatesRequest] 
     * @param {module:api/DefaultApi~pOSTListTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTemplatesResponse}
     */
    pOSTListTemplates(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['listTemplatesRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListTemplates");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListTemplates");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = ListTemplatesResponse;
      return this.apiClient.callApi(
        '/#Action=ListTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTListVerifiedEmailAddresses operation.
     * @callback module:api/DefaultApi~pOSTListVerifiedEmailAddressesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVerifiedEmailAddressesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>ListIdentities</code> operation to list the email addresses and domains associated with your account.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~pOSTListVerifiedEmailAddressesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVerifiedEmailAddressesResponse}
     */
    pOSTListVerifiedEmailAddresses(action, version, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTListVerifiedEmailAddresses");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTListVerifiedEmailAddresses");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['text/xml'];
      let returnType = ListVerifiedEmailAddressesResponse;
      return this.apiClient.callApi(
        '/#Action=ListVerifiedEmailAddresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTPutConfigurationSetDeliveryOptions operation.
     * @callback module:api/DefaultApi~pOSTPutConfigurationSetDeliveryOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or updates the delivery options for a configuration set.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/PutConfigurationSetDeliveryOptionsRequest} [putConfigurationSetDeliveryOptionsRequest] 
     * @param {module:api/DefaultApi~pOSTPutConfigurationSetDeliveryOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTPutConfigurationSetDeliveryOptions(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['putConfigurationSetDeliveryOptionsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTPutConfigurationSetDeliveryOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTPutConfigurationSetDeliveryOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=PutConfigurationSetDeliveryOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTPutIdentityPolicy operation.
     * @callback module:api/DefaultApi~pOSTPutIdentityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds or updates a sending authorization policy for the specified identity (an email address or a domain).</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/PutIdentityPolicyRequest} [putIdentityPolicyRequest] 
     * @param {module:api/DefaultApi~pOSTPutIdentityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTPutIdentityPolicy(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['putIdentityPolicyRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTPutIdentityPolicy");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTPutIdentityPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=PutIdentityPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTReorderReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTReorderReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Reorders the receipt rules within a receipt rule set.</p> <note> <p>All of the rules in the rule set must be represented in this request. That is, this API will return an error if the reorder request doesn't explicitly position all of the rules.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/ReorderReceiptRuleSetRequest} [reorderReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTReorderReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTReorderReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['reorderReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTReorderReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTReorderReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=ReorderReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendBounce operation.
     * @callback module:api/DefaultApi~pOSTSendBounceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendBounceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Generates and sends a bounce message to the sender of an email you received through Amazon SES. You can only use this API on an email up to 24 hours after you receive it.</p> <note> <p>You cannot use this API to send generic bounces for mail that was not received by Amazon SES.</p> </note> <p>For information about receiving email through Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendBounceRequest} [sendBounceRequest] 
     * @param {module:api/DefaultApi~pOSTSendBounceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendBounceResponse}
     */
    pOSTSendBounce(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendBounceRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendBounce");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendBounce");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendBounceResponse;
      return this.apiClient.callApi(
        '/#Action=SendBounce', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendBulkTemplatedEmail operation.
     * @callback module:api/DefaultApi~pOSTSendBulkTemplatedEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendBulkTemplatedEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message to multiple destinations. The message body is created using an email template.</p> <p>In order to send email using the <code>SendBulkTemplatedEmail</code> operation, your call to the API must meet the following requirements:</p> <ul> <li> <p>The call must refer to an existing email template. You can create email templates using the <a>CreateTemplate</a> operation.</p> </li> <li> <p>The message must be sent from a verified email address or domain.</p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>Each <code>Destination</code> parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> <li> <p>The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the <code>SendBulkTemplatedEmail</code> operation several times to send the message to each group.</p> </li> <li> <p>The number of destinations you can contact in a single call to the API may be limited by your account's maximum sending rate.</p> </li> </ul>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendBulkTemplatedEmailRequest} [sendBulkTemplatedEmailRequest] 
     * @param {module:api/DefaultApi~pOSTSendBulkTemplatedEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendBulkTemplatedEmailResponse}
     */
    pOSTSendBulkTemplatedEmail(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendBulkTemplatedEmailRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendBulkTemplatedEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendBulkTemplatedEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendBulkTemplatedEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendBulkTemplatedEmail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendCustomVerificationEmail operation.
     * @callback module:api/DefaultApi~pOSTSendCustomVerificationEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendCustomVerificationEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.</p> <p>To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendCustomVerificationEmailRequest} [sendCustomVerificationEmailRequest] 
     * @param {module:api/DefaultApi~pOSTSendCustomVerificationEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendCustomVerificationEmailResponse}
     */
    pOSTSendCustomVerificationEmail(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendCustomVerificationEmailRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendCustomVerificationEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendCustomVerificationEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendCustomVerificationEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendCustomVerificationEmail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendEmail operation.
     * @callback module:api/DefaultApi~pOSTSendEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message and immediately queues it for sending. In order to send email using the <code>SendEmail</code> operation, your message must meet the following requirements:</p> <ul> <li> <p>The message must be sent from a verified email address or domain. If you attempt to send email using a non-verified address or domain, the operation will result in an \"Email address not verified\" error. </p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>The message must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> <li> <p>The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the <code>SendEmail</code> operation several times to send the message to each group.</p> </li> </ul> <important> <p>For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your <i>sending quota</i>). For more information about sending quotas in Amazon SES, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Managing Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i> </p> </important>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendEmailRequest} [sendEmailRequest] 
     * @param {module:api/DefaultApi~pOSTSendEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendEmailResponse}
     */
    pOSTSendEmail(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendEmailRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendEmail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendRawEmail operation.
     * @callback module:api/DefaultApi~pOSTSendRawEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendRawEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message and immediately queues it for sending.</p> <p>This operation is more flexible than the <code>SendEmail</code> API operation. When you use the <code>SendRawEmail</code> operation, you can specify the headers of the message as well as its content. This flexibility is useful, for example, when you want to send a multipart MIME email (such a message that contains both a text and an HTML version). You can also use this operation to send messages that include attachments.</p> <p>The <code>SendRawEmail</code> operation has the following requirements:</p> <ul> <li> <p>You can only send email from <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">verified email addresses or domains</a>. If you try to send email from an address that isn't verified, the operation results in an \"Email address not verified\" error.</p> </li> <li> <p>If your account is still in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/request-production-access.html\">Amazon SES sandbox</a>, you can only send email to other verified addresses in your account, or to addresses that are associated with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mailbox-simulator.html\">Amazon SES mailbox simulator</a>.</p> </li> <li> <p>The maximum message size, including attachments, is 10 MB.</p> </li> <li> <p>Each message has to include at least one recipient address. A recipient address includes any address on the To:, CC:, or BCC: lines.</p> </li> <li> <p>If you send a single message to more than one recipient address, and one of the recipient addresses isn't in a valid format (that is, it's not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), Amazon SES rejects the entire message, even if the other addresses are valid.</p> </li> <li> <p>Each message can include up to 50 recipient addresses across the To:, CC:, or BCC: lines. If you need to send a single message to more than 50 recipients, you have to split the list of recipient addresses into groups of less than 50 recipients, and send separate messages to each group.</p> </li> <li> <p>Amazon SES allows you to specify 8-bit Content-Transfer-Encoding for MIME message parts. However, if Amazon SES has to modify the contents of your message (for example, if you use open and click tracking), 8-bit content isn't preserved. For this reason, we highly recommend that you encode all content that isn't 7-bit ASCII. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html#send-email-mime-encoding\">MIME Encoding</a> in the <i>Amazon SES Developer Guide</i>.</p> </li> </ul> <p>Additionally, keep the following considerations in mind when using the <code>SendRawEmail</code> operation:</p> <ul> <li> <p>Although you can customize the message headers when using the <code>SendRawEmail</code> operation, Amazon SES will automatically apply its own <code>Message-ID</code> and <code>Date</code> headers; if you passed these headers when creating the message, they will be overwritten by the values that Amazon SES provides.</p> </li> <li> <p>If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code> enables you to specify the cross-account identity for the email's Source, From, and Return-Path parameters in one of two ways: you can pass optional parameters <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to the API, or you can include the following X-headers in the header of your raw email:</p> <ul> <li> <p> <code>X-SES-SOURCE-ARN</code> </p> </li> <li> <p> <code>X-SES-FROM-ARN</code> </p> </li> <li> <p> <code>X-SES-RETURN-PATH-ARN</code> </p> </li> </ul> <important> <p>Don't include these X-headers in the DKIM signature. Amazon SES removes these before it sends the email.</p> </important> <p>If you only specify the <code>SourceIdentityArn</code> parameter, Amazon SES sets the From and Return-Path addresses to the same identity that you specified.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Using Sending Authorization with Amazon SES</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your <i>sending quota</i>). For more information about sending quotas in Amazon SES, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Managing Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> </ul>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendRawEmailRequest} [sendRawEmailRequest] 
     * @param {module:api/DefaultApi~pOSTSendRawEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendRawEmailResponse}
     */
    pOSTSendRawEmail(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendRawEmailRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendRawEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendRawEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendRawEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendRawEmail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSendTemplatedEmail operation.
     * @callback module:api/DefaultApi~pOSTSendTemplatedEmailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendTemplatedEmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Composes an email message using an email template and immediately queues it for sending.</p> <p>In order to send email using the <code>SendTemplatedEmail</code> operation, your call to the API must meet the following requirements:</p> <ul> <li> <p>The call must refer to an existing email template. You can create email templates using the <a>CreateTemplate</a> operation.</p> </li> <li> <p>The message must be sent from a verified email address or domain.</p> </li> <li> <p>If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> </li> <li> <p>The maximum message size is 10 MB.</p> </li> <li> <p>Calls to the <code>SendTemplatedEmail</code> operation may only include one <code>Destination</code> parameter. A destination is a set of recipients who will receive the same version of the email. The <code>Destination</code> parameter can include up to 50 recipients, across the To:, CC: and BCC: fields.</p> </li> <li> <p>The <code>Destination</code> parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>), the entire message will be rejected, even if the message contains other recipients that are valid.</p> </li> </ul> <important> <p>If your call to the <code>SendTemplatedEmail</code> operation includes all of the required parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon SES can't render the email because the template contains errors, it doesn't send the email. Additionally, because it already accepted the message, Amazon SES doesn't return a message stating that it was unable to send the email.</p> <p>For these reasons, we highly recommend that you set up Amazon SES to send you notifications when Rendering Failure events occur. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Sending Personalized Email Using the Amazon SES API</a> in the <i>Amazon Simple Email Service Developer Guide</i>.</p> </important>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SendTemplatedEmailRequest} [sendTemplatedEmailRequest] 
     * @param {module:api/DefaultApi~pOSTSendTemplatedEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendTemplatedEmailResponse}
     */
    pOSTSendTemplatedEmail(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['sendTemplatedEmailRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSendTemplatedEmail");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSendTemplatedEmail");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = SendTemplatedEmailResponse;
      return this.apiClient.callApi(
        '/#Action=SendTemplatedEmail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetActiveReceiptRuleSet operation.
     * @callback module:api/DefaultApi~pOSTSetActiveReceiptRuleSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets the specified receipt rule set as the active receipt rule set.</p> <note> <p>To disable your email-receiving through Amazon SES completely, you can call this API with RuleSetName set to null.</p> </note> <p>For information about managing receipt rule sets, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetActiveReceiptRuleSetRequest} [setActiveReceiptRuleSetRequest] 
     * @param {module:api/DefaultApi~pOSTSetActiveReceiptRuleSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetActiveReceiptRuleSet(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setActiveReceiptRuleSetRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetActiveReceiptRuleSet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetActiveReceiptRuleSet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetActiveReceiptRuleSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetIdentityDkimEnabled operation.
     * @callback module:api/DefaultApi~pOSTSetIdentityDkimEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables Easy DKIM signing of email sent from an identity. If Easy DKIM signing is enabled for a domain, then Amazon SES uses DKIM to sign all email that it sends from addresses on that domain. If Easy DKIM signing is enabled for an email address, then Amazon SES uses DKIM to sign all email it sends from that address.</p> <note> <p>For email addresses (for example, <code>user@example.com</code>), you can only enable DKIM signing if the corresponding domain (in this case, <code>example.com</code>) has been set up to use Easy DKIM.</p> </note> <p>You can enable DKIM signing for an identity at any time after you start the verification process for the identity, even if the verification process isn't complete. </p> <p>You can execute this operation no more than once per second.</p> <p>For more information about Easy DKIM signing, go to the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetIdentityDkimEnabledRequest} [setIdentityDkimEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTSetIdentityDkimEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetIdentityDkimEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIdentityDkimEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetIdentityDkimEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetIdentityDkimEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityDkimEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetIdentityFeedbackForwardingEnabled operation.
     * @callback module:api/DefaultApi~pOSTSetIdentityFeedbackForwardingEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email. Feedback forwarding can only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified for both bounces and complaints.</p> <note> <p>Feedback forwarding does not apply to delivery notifications. Delivery notifications are only available through Amazon SNS.</p> </note> <p>You can execute this operation no more than once per second.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetIdentityFeedbackForwardingEnabledRequest} [setIdentityFeedbackForwardingEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTSetIdentityFeedbackForwardingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetIdentityFeedbackForwardingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIdentityFeedbackForwardingEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetIdentityFeedbackForwardingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetIdentityFeedbackForwardingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityFeedbackForwardingEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetIdentityHeadersInNotificationsEnabled operation.
     * @callback module:api/DefaultApi~pOSTSetIdentityHeadersInNotificationsEnabledCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type.</p> <p>You can execute this operation no more than once per second.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetIdentityHeadersInNotificationsEnabledRequest} [setIdentityHeadersInNotificationsEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTSetIdentityHeadersInNotificationsEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetIdentityHeadersInNotificationsEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIdentityHeadersInNotificationsEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetIdentityHeadersInNotificationsEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetIdentityHeadersInNotificationsEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityHeadersInNotificationsEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetIdentityMailFromDomain operation.
     * @callback module:api/DefaultApi~pOSTSetIdentityMailFromDomainCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain).</p> <important> <p>To send emails using the specified MAIL FROM domain, you must add an MX record to your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy Framework (SPF) checks, you must also add or update an SPF record. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html\">Amazon SES Developer Guide</a>.</p> </important> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetIdentityMailFromDomainRequest} [setIdentityMailFromDomainRequest] 
     * @param {module:api/DefaultApi~pOSTSetIdentityMailFromDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetIdentityMailFromDomain(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIdentityMailFromDomainRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetIdentityMailFromDomain");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetIdentityMailFromDomain");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityMailFromDomain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetIdentityNotificationTopic operation.
     * @callback module:api/DefaultApi~pOSTSetIdentityNotificationTopicCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering notifications. When you use this operation, you specify a verified identity, such as an email address or domain. When you send an email that uses the chosen identity in the Source field, Amazon SES sends notifications to the topic you specified. You can send bounce, complaint, or delivery notifications (or any combination of the three) to the Amazon SNS topic that you specify.</p> <p>You can execute this operation no more than once per second.</p> <p>For more information about feedback notification, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetIdentityNotificationTopicRequest} [setIdentityNotificationTopicRequest] 
     * @param {module:api/DefaultApi~pOSTSetIdentityNotificationTopicCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetIdentityNotificationTopic(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIdentityNotificationTopicRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetIdentityNotificationTopic");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetIdentityNotificationTopic");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetIdentityNotificationTopic', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTSetReceiptRulePosition operation.
     * @callback module:api/DefaultApi~pOSTSetReceiptRulePositionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets the position of the specified receipt rule in the receipt rule set.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/SetReceiptRulePositionRequest} [setReceiptRulePositionRequest] 
     * @param {module:api/DefaultApi~pOSTSetReceiptRulePositionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTSetReceiptRulePosition(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['setReceiptRulePositionRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTSetReceiptRulePosition");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTSetReceiptRulePosition");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=SetReceiptRulePosition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTTestRenderTemplate operation.
     * @callback module:api/DefaultApi~pOSTTestRenderTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestRenderTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/TestRenderTemplateRequest} [testRenderTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTTestRenderTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestRenderTemplateResponse}
     */
    pOSTTestRenderTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['testRenderTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTTestRenderTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTTestRenderTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = TestRenderTemplateResponse;
      return this.apiClient.callApi(
        '/#Action=TestRenderTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateAccountSendingEnabled operation.
     * @callback module:api/DefaultApi~pOSTUpdateAccountSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables email sending across your entire Amazon SES account in the current AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending across your Amazon SES account in a given AWS Region when reputation metrics (such as your bounce or complaint rates) reach certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateAccountSendingEnabledRequest} [updateAccountSendingEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateAccountSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTUpdateAccountSendingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateAccountSendingEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateAccountSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateAccountSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateAccountSendingEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateConfigurationSetEventDestination operation.
     * @callback module:api/DefaultApi~pOSTUpdateConfigurationSetEventDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the event destination of a configuration set. Event destinations are associated with configuration sets, which enable you to publish email sending events to Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS). For information about using configuration sets, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html\">Monitoring Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i> </p> <note> <p>When you create or update an event destination, you must provide one, and only one, destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).</p> </note> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateConfigurationSetEventDestinationRequest} [updateConfigurationSetEventDestinationRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateConfigurationSetEventDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTUpdateConfigurationSetEventDestination(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateConfigurationSetEventDestinationRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateConfigurationSetEventDestination");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateConfigurationSetEventDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetEventDestination', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateConfigurationSetReputationMetricsEnabled operation.
     * @callback module:api/DefaultApi~pOSTUpdateConfigurationSetReputationMetricsEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region. Reputation metrics include bounce and complaint rates. These metrics are published to Amazon CloudWatch. By using CloudWatch, you can create alarms when bounce or complaint rates exceed certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateConfigurationSetReputationMetricsEnabledRequest} [updateConfigurationSetReputationMetricsEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateConfigurationSetReputationMetricsEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTUpdateConfigurationSetReputationMetricsEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateConfigurationSetReputationMetricsEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateConfigurationSetReputationMetricsEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateConfigurationSetReputationMetricsEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetReputationMetricsEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateConfigurationSetSendingEnabled operation.
     * @callback module:api/DefaultApi~pOSTUpdateConfigurationSetSendingEnabledCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending for a configuration set when the reputation metrics for that configuration set (such as your bounce on complaint rate) exceed certain thresholds.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateConfigurationSetSendingEnabledRequest} [updateConfigurationSetSendingEnabledRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateConfigurationSetSendingEnabledCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTUpdateConfigurationSetSendingEnabled(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateConfigurationSetSendingEnabledRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateConfigurationSetSendingEnabled");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateConfigurationSetSendingEnabled");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetSendingEnabled', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateConfigurationSetTrackingOptions operation.
     * @callback module:api/DefaultApi~pOSTUpdateConfigurationSetTrackingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Modifies an association between a configuration set and a custom domain for open and click event tracking. </p> <p>By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html\">Amazon SES Developer Guide</a>.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateConfigurationSetTrackingOptionsRequest} [updateConfigurationSetTrackingOptionsRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateConfigurationSetTrackingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTUpdateConfigurationSetTrackingOptions(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateConfigurationSetTrackingOptionsRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateConfigurationSetTrackingOptions");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateConfigurationSetTrackingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateConfigurationSetTrackingOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateCustomVerificationEmailTemplate operation.
     * @callback module:api/DefaultApi~pOSTUpdateCustomVerificationEmailTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html\">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateCustomVerificationEmailTemplateRequest} [updateCustomVerificationEmailTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateCustomVerificationEmailTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTUpdateCustomVerificationEmailTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateCustomVerificationEmailTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateCustomVerificationEmailTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateCustomVerificationEmailTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=UpdateCustomVerificationEmailTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateReceiptRule operation.
     * @callback module:api/DefaultApi~pOSTUpdateReceiptRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates a receipt rule.</p> <p>For information about managing receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateReceiptRuleRequest} [updateReceiptRuleRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateReceiptRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTUpdateReceiptRule(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateReceiptRuleRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateReceiptRule");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateReceiptRule");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateReceiptRule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTUpdateTemplate operation.
     * @callback module:api/DefaultApi~pOSTUpdateTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/UpdateTemplateRequest} [updateTemplateRequest] 
     * @param {module:api/DefaultApi~pOSTUpdateTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTUpdateTemplate(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateTemplateRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTUpdateTemplate");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTUpdateTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=UpdateTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTVerifyDomainDkim operation.
     * @callback module:api/DefaultApi~pOSTVerifyDomainDkimCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyDomainDkimResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a set of DKIM tokens for a domain identity.</p> <important> <p>When you execute the <code>VerifyDomainDkim</code> operation, the domain that you specify is added to the list of identities that are associated with your account. This is true even if you haven't already associated the domain with your account by using the <code>VerifyDomainIdentity</code> operation. However, you can't send email from the domain until you either successfully <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html\">verify it</a> or you successfully <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">set up DKIM for it</a>.</p> </important> <p>You use the tokens that are generated by this operation to create CNAME records. When Amazon SES detects that you've added these records to the DNS configuration for a domain, you can start sending email from that domain. You can start sending email even if you haven't added the TXT record provided by the VerifyDomainIdentity operation to the DNS configuration for your domain. All email that you send from the domain is authenticated using DKIM.</p> <p>To create the CNAME records for DKIM authentication, use the following values:</p> <ul> <li> <p> <b>Name</b>: <i>token</i>._domainkey.<i>example.com</i> </p> </li> <li> <p> <b>Type</b>: CNAME</p> </li> <li> <p> <b>Value</b>: <i>token</i>.dkim.amazonses.com</p> </li> </ul> <p>In the preceding example, replace <i>token</i> with one of the tokens that are generated when you execute this operation. Replace <i>example.com</i> with your domain. Repeat this process for each token that's generated by this operation.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/VerifyDomainDkimRequest} [verifyDomainDkimRequest] 
     * @param {module:api/DefaultApi~pOSTVerifyDomainDkimCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyDomainDkimResponse}
     */
    pOSTVerifyDomainDkim(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['verifyDomainDkimRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTVerifyDomainDkim");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTVerifyDomainDkim");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = VerifyDomainDkimResponse;
      return this.apiClient.callApi(
        '/#Action=VerifyDomainDkim', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTVerifyDomainIdentity operation.
     * @callback module:api/DefaultApi~pOSTVerifyDomainIdentityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyDomainIdentityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a domain to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. For more information about verifying domains, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Verifying Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i> </p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/VerifyDomainIdentityRequest} [verifyDomainIdentityRequest] 
     * @param {module:api/DefaultApi~pOSTVerifyDomainIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyDomainIdentityResponse}
     */
    pOSTVerifyDomainIdentity(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['verifyDomainIdentityRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTVerifyDomainIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTVerifyDomainIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = VerifyDomainIdentityResponse;
      return this.apiClient.callApi(
        '/#Action=VerifyDomainIdentity', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTVerifyEmailAddress operation.
     * @callback module:api/DefaultApi~pOSTVerifyEmailAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprecated. Use the <code>VerifyEmailIdentity</code> operation to verify a new email address.
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/VerifyEmailAddressRequest} [verifyEmailAddressRequest] 
     * @param {module:api/DefaultApi~pOSTVerifyEmailAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pOSTVerifyEmailAddress(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['verifyEmailAddressRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTVerifyEmailAddress");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTVerifyEmailAddress");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/#Action=VerifyEmailAddress', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pOSTVerifyEmailIdentity operation.
     * @callback module:api/DefaultApi~pOSTVerifyEmailIdentityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds an email address to the list of identities for your Amazon SES account in the current AWS region and attempts to verify it. As a result of executing this operation, a verification email is sent to the specified address.</p> <p>You can execute this operation no more than once per second.</p>
     * @param {module:model/String} action 
     * @param {module:model/String} version 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/VerifyEmailIdentityRequest} [verifyEmailIdentityRequest] 
     * @param {module:api/DefaultApi~pOSTVerifyEmailIdentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pOSTVerifyEmailIdentity(action, version, opts, callback) {
      opts = opts || {};
      let postBody = opts['verifyEmailIdentityRequest'];
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling pOSTVerifyEmailIdentity");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling pOSTVerifyEmailIdentity");
      }

      let pathParams = {
      };
      let queryParams = {
        'Action': action,
        'Version': version
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['text/xml'];
      let accepts = ['text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#Action=VerifyEmailIdentity', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
