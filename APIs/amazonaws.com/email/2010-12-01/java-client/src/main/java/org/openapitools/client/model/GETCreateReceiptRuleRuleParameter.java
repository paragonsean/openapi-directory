/*
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TlsPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Receipt rules enable you to specify which actions Amazon SES should take when it receives mail on behalf of one or more email addresses or domains that you own.&lt;/p&gt; &lt;p&gt;Each receipt rule defines a set of email addresses or domains that it applies to. If the email addresses or domains match at least one recipient address of the message, Amazon SES executes all of the receipt rule&#39;s actions on the message.&lt;/p&gt; &lt;p&gt;For information about setting up receipt rules, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:43.263586-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETCreateReceiptRuleRuleParameter {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_TLS_POLICY = "TlsPolicy";
  @SerializedName(SERIALIZED_NAME_TLS_POLICY)
  private TlsPolicy tlsPolicy;

  public static final String SERIALIZED_NAME_RECIPIENTS = "Recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private List recipients;

  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private List actions;

  public static final String SERIALIZED_NAME_SCAN_ENABLED = "ScanEnabled";
  @SerializedName(SERIALIZED_NAME_SCAN_ENABLED)
  private Boolean scanEnabled;

  public GETCreateReceiptRuleRuleParameter() {
  }

  public GETCreateReceiptRuleRuleParameter name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GETCreateReceiptRuleRuleParameter enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GETCreateReceiptRuleRuleParameter tlsPolicy(TlsPolicy tlsPolicy) {
    this.tlsPolicy = tlsPolicy;
    return this;
  }

  /**
   * Get tlsPolicy
   * @return tlsPolicy
   */
  @javax.annotation.Nullable
  public TlsPolicy getTlsPolicy() {
    return tlsPolicy;
  }

  public void setTlsPolicy(TlsPolicy tlsPolicy) {
    this.tlsPolicy = tlsPolicy;
  }


  public GETCreateReceiptRuleRuleParameter recipients(List recipients) {
    this.recipients = recipients;
    return this;
  }

  /**
   * Get recipients
   * @return recipients
   */
  @javax.annotation.Nullable
  public List getRecipients() {
    return recipients;
  }

  public void setRecipients(List recipients) {
    this.recipients = recipients;
  }


  public GETCreateReceiptRuleRuleParameter actions(List actions) {
    this.actions = actions;
    return this;
  }

  /**
   * Get actions
   * @return actions
   */
  @javax.annotation.Nullable
  public List getActions() {
    return actions;
  }

  public void setActions(List actions) {
    this.actions = actions;
  }


  public GETCreateReceiptRuleRuleParameter scanEnabled(Boolean scanEnabled) {
    this.scanEnabled = scanEnabled;
    return this;
  }

  /**
   * Get scanEnabled
   * @return scanEnabled
   */
  @javax.annotation.Nullable
  public Boolean getScanEnabled() {
    return scanEnabled;
  }

  public void setScanEnabled(Boolean scanEnabled) {
    this.scanEnabled = scanEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETCreateReceiptRuleRuleParameter geTCreateReceiptRuleRuleParameter = (GETCreateReceiptRuleRuleParameter) o;
    return Objects.equals(this.name, geTCreateReceiptRuleRuleParameter.name) &&
        Objects.equals(this.enabled, geTCreateReceiptRuleRuleParameter.enabled) &&
        Objects.equals(this.tlsPolicy, geTCreateReceiptRuleRuleParameter.tlsPolicy) &&
        Objects.equals(this.recipients, geTCreateReceiptRuleRuleParameter.recipients) &&
        Objects.equals(this.actions, geTCreateReceiptRuleRuleParameter.actions) &&
        Objects.equals(this.scanEnabled, geTCreateReceiptRuleRuleParameter.scanEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, enabled, tlsPolicy, recipients, actions, scanEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETCreateReceiptRuleRuleParameter {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    tlsPolicy: ").append(toIndentedString(tlsPolicy)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    scanEnabled: ").append(toIndentedString(scanEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Enabled");
    openapiFields.add("TlsPolicy");
    openapiFields.add("Recipients");
    openapiFields.add("Actions");
    openapiFields.add("ScanEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETCreateReceiptRuleRuleParameter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETCreateReceiptRuleRuleParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETCreateReceiptRuleRuleParameter is not found in the empty JSON string", GETCreateReceiptRuleRuleParameter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETCreateReceiptRuleRuleParameter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETCreateReceiptRuleRuleParameter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GETCreateReceiptRuleRuleParameter.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `TlsPolicy`
      if (jsonObj.get("TlsPolicy") != null && !jsonObj.get("TlsPolicy").isJsonNull()) {
        TlsPolicy.validateJsonElement(jsonObj.get("TlsPolicy"));
      }
      // validate the optional field `Recipients`
      if (jsonObj.get("Recipients") != null && !jsonObj.get("Recipients").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Recipients"));
      }
      // validate the optional field `Actions`
      if (jsonObj.get("Actions") != null && !jsonObj.get("Actions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Actions"));
      }
      // validate the optional field `ScanEnabled`
      if (jsonObj.get("ScanEnabled") != null && !jsonObj.get("ScanEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ScanEnabled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETCreateReceiptRuleRuleParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETCreateReceiptRuleRuleParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETCreateReceiptRuleRuleParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETCreateReceiptRuleRuleParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<GETCreateReceiptRuleRuleParameter>() {
           @Override
           public void write(JsonWriter out, GETCreateReceiptRuleRuleParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETCreateReceiptRuleRuleParameter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETCreateReceiptRuleRuleParameter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETCreateReceiptRuleRuleParameter
   * @throws IOException if the JSON string is invalid with respect to GETCreateReceiptRuleRuleParameter
   */
  public static GETCreateReceiptRuleRuleParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETCreateReceiptRuleRuleParameter.class);
  }

  /**
   * Convert an instance of GETCreateReceiptRuleRuleParameter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

