/*
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BehaviorOnMXFailure;
import org.openapitools.client.model.CustomMailFromStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the custom MAIL FROM domain attributes of a verified identity (email address or domain).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:43.263586-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IdentityMailFromDomainAttributes {
  public static final String SERIALIZED_NAME_MAIL_FROM_DOMAIN = "MailFromDomain";
  @SerializedName(SERIALIZED_NAME_MAIL_FROM_DOMAIN)
  private String mailFromDomain;

  public static final String SERIALIZED_NAME_MAIL_FROM_DOMAIN_STATUS = "MailFromDomainStatus";
  @SerializedName(SERIALIZED_NAME_MAIL_FROM_DOMAIN_STATUS)
  private CustomMailFromStatus mailFromDomainStatus;

  public static final String SERIALIZED_NAME_BEHAVIOR_ON_M_X_FAILURE = "BehaviorOnMXFailure";
  @SerializedName(SERIALIZED_NAME_BEHAVIOR_ON_M_X_FAILURE)
  private BehaviorOnMXFailure behaviorOnMXFailure;

  public IdentityMailFromDomainAttributes() {
  }

  public IdentityMailFromDomainAttributes mailFromDomain(String mailFromDomain) {
    this.mailFromDomain = mailFromDomain;
    return this;
  }

  /**
   * Get mailFromDomain
   * @return mailFromDomain
   */
  @javax.annotation.Nonnull
  public String getMailFromDomain() {
    return mailFromDomain;
  }

  public void setMailFromDomain(String mailFromDomain) {
    this.mailFromDomain = mailFromDomain;
  }


  public IdentityMailFromDomainAttributes mailFromDomainStatus(CustomMailFromStatus mailFromDomainStatus) {
    this.mailFromDomainStatus = mailFromDomainStatus;
    return this;
  }

  /**
   * Get mailFromDomainStatus
   * @return mailFromDomainStatus
   */
  @javax.annotation.Nonnull
  public CustomMailFromStatus getMailFromDomainStatus() {
    return mailFromDomainStatus;
  }

  public void setMailFromDomainStatus(CustomMailFromStatus mailFromDomainStatus) {
    this.mailFromDomainStatus = mailFromDomainStatus;
  }


  public IdentityMailFromDomainAttributes behaviorOnMXFailure(BehaviorOnMXFailure behaviorOnMXFailure) {
    this.behaviorOnMXFailure = behaviorOnMXFailure;
    return this;
  }

  /**
   * Get behaviorOnMXFailure
   * @return behaviorOnMXFailure
   */
  @javax.annotation.Nonnull
  public BehaviorOnMXFailure getBehaviorOnMXFailure() {
    return behaviorOnMXFailure;
  }

  public void setBehaviorOnMXFailure(BehaviorOnMXFailure behaviorOnMXFailure) {
    this.behaviorOnMXFailure = behaviorOnMXFailure;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityMailFromDomainAttributes identityMailFromDomainAttributes = (IdentityMailFromDomainAttributes) o;
    return Objects.equals(this.mailFromDomain, identityMailFromDomainAttributes.mailFromDomain) &&
        Objects.equals(this.mailFromDomainStatus, identityMailFromDomainAttributes.mailFromDomainStatus) &&
        Objects.equals(this.behaviorOnMXFailure, identityMailFromDomainAttributes.behaviorOnMXFailure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mailFromDomain, mailFromDomainStatus, behaviorOnMXFailure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityMailFromDomainAttributes {\n");
    sb.append("    mailFromDomain: ").append(toIndentedString(mailFromDomain)).append("\n");
    sb.append("    mailFromDomainStatus: ").append(toIndentedString(mailFromDomainStatus)).append("\n");
    sb.append("    behaviorOnMXFailure: ").append(toIndentedString(behaviorOnMXFailure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MailFromDomain");
    openapiFields.add("MailFromDomainStatus");
    openapiFields.add("BehaviorOnMXFailure");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MailFromDomain");
    openapiRequiredFields.add("MailFromDomainStatus");
    openapiRequiredFields.add("BehaviorOnMXFailure");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IdentityMailFromDomainAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IdentityMailFromDomainAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdentityMailFromDomainAttributes is not found in the empty JSON string", IdentityMailFromDomainAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IdentityMailFromDomainAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdentityMailFromDomainAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IdentityMailFromDomainAttributes.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `MailFromDomain`
      String.validateJsonElement(jsonObj.get("MailFromDomain"));
      // validate the required field `MailFromDomainStatus`
      CustomMailFromStatus.validateJsonElement(jsonObj.get("MailFromDomainStatus"));
      // validate the required field `BehaviorOnMXFailure`
      BehaviorOnMXFailure.validateJsonElement(jsonObj.get("BehaviorOnMXFailure"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdentityMailFromDomainAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdentityMailFromDomainAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdentityMailFromDomainAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdentityMailFromDomainAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<IdentityMailFromDomainAttributes>() {
           @Override
           public void write(JsonWriter out, IdentityMailFromDomainAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdentityMailFromDomainAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IdentityMailFromDomainAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IdentityMailFromDomainAttributes
   * @throws IOException if the JSON string is invalid with respect to IdentityMailFromDomainAttributes
   */
  public static IdentityMailFromDomainAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdentityMailFromDomainAttributes.class);
  }

  /**
   * Convert an instance of IdentityMailFromDomainAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

