/*
 * Amazon Simple Email Service
 * <fullname>Amazon Simple Email Service</fullname> <p> This document contains reference information for the <a href=\"https://aws.amazon.com/ses/\">Amazon Simple Email Service</a> (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>. </p> <note> <p> For a list of Amazon SES endpoints to use in service requests, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html\">Regions and Amazon SES</a> in the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html\">Amazon SES Developer Guide</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DsnAction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Recipient-related information to include in the Delivery Status Notification (DSN) when an email that Amazon SES receives on your behalf bounces.&lt;/p&gt; &lt;p&gt;For information about receiving email through Amazon SES, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html\&quot;&gt;Amazon SES Developer Guide&lt;/a&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:43.263586-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RecipientDsnFields {
  public static final String SERIALIZED_NAME_FINAL_RECIPIENT = "FinalRecipient";
  @SerializedName(SERIALIZED_NAME_FINAL_RECIPIENT)
  private String finalRecipient;

  public static final String SERIALIZED_NAME_ACTION = "Action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private DsnAction action;

  public static final String SERIALIZED_NAME_REMOTE_MTA = "RemoteMta";
  @SerializedName(SERIALIZED_NAME_REMOTE_MTA)
  private String remoteMta;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DIAGNOSTIC_CODE = "DiagnosticCode";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC_CODE)
  private String diagnosticCode;

  public static final String SERIALIZED_NAME_LAST_ATTEMPT_DATE = "LastAttemptDate";
  @SerializedName(SERIALIZED_NAME_LAST_ATTEMPT_DATE)
  private OffsetDateTime lastAttemptDate;

  public static final String SERIALIZED_NAME_EXTENSION_FIELDS = "ExtensionFields";
  @SerializedName(SERIALIZED_NAME_EXTENSION_FIELDS)
  private List extensionFields;

  public RecipientDsnFields() {
  }

  public RecipientDsnFields finalRecipient(String finalRecipient) {
    this.finalRecipient = finalRecipient;
    return this;
  }

  /**
   * Get finalRecipient
   * @return finalRecipient
   */
  @javax.annotation.Nullable
  public String getFinalRecipient() {
    return finalRecipient;
  }

  public void setFinalRecipient(String finalRecipient) {
    this.finalRecipient = finalRecipient;
  }


  public RecipientDsnFields action(DsnAction action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nonnull
  public DsnAction getAction() {
    return action;
  }

  public void setAction(DsnAction action) {
    this.action = action;
  }


  public RecipientDsnFields remoteMta(String remoteMta) {
    this.remoteMta = remoteMta;
    return this;
  }

  /**
   * Get remoteMta
   * @return remoteMta
   */
  @javax.annotation.Nullable
  public String getRemoteMta() {
    return remoteMta;
  }

  public void setRemoteMta(String remoteMta) {
    this.remoteMta = remoteMta;
  }


  public RecipientDsnFields status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public RecipientDsnFields diagnosticCode(String diagnosticCode) {
    this.diagnosticCode = diagnosticCode;
    return this;
  }

  /**
   * Get diagnosticCode
   * @return diagnosticCode
   */
  @javax.annotation.Nullable
  public String getDiagnosticCode() {
    return diagnosticCode;
  }

  public void setDiagnosticCode(String diagnosticCode) {
    this.diagnosticCode = diagnosticCode;
  }


  public RecipientDsnFields lastAttemptDate(OffsetDateTime lastAttemptDate) {
    this.lastAttemptDate = lastAttemptDate;
    return this;
  }

  /**
   * Get lastAttemptDate
   * @return lastAttemptDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAttemptDate() {
    return lastAttemptDate;
  }

  public void setLastAttemptDate(OffsetDateTime lastAttemptDate) {
    this.lastAttemptDate = lastAttemptDate;
  }


  public RecipientDsnFields extensionFields(List extensionFields) {
    this.extensionFields = extensionFields;
    return this;
  }

  /**
   * Get extensionFields
   * @return extensionFields
   */
  @javax.annotation.Nullable
  public List getExtensionFields() {
    return extensionFields;
  }

  public void setExtensionFields(List extensionFields) {
    this.extensionFields = extensionFields;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipientDsnFields recipientDsnFields = (RecipientDsnFields) o;
    return Objects.equals(this.finalRecipient, recipientDsnFields.finalRecipient) &&
        Objects.equals(this.action, recipientDsnFields.action) &&
        Objects.equals(this.remoteMta, recipientDsnFields.remoteMta) &&
        Objects.equals(this.status, recipientDsnFields.status) &&
        Objects.equals(this.diagnosticCode, recipientDsnFields.diagnosticCode) &&
        Objects.equals(this.lastAttemptDate, recipientDsnFields.lastAttemptDate) &&
        Objects.equals(this.extensionFields, recipientDsnFields.extensionFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(finalRecipient, action, remoteMta, status, diagnosticCode, lastAttemptDate, extensionFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipientDsnFields {\n");
    sb.append("    finalRecipient: ").append(toIndentedString(finalRecipient)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    remoteMta: ").append(toIndentedString(remoteMta)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    diagnosticCode: ").append(toIndentedString(diagnosticCode)).append("\n");
    sb.append("    lastAttemptDate: ").append(toIndentedString(lastAttemptDate)).append("\n");
    sb.append("    extensionFields: ").append(toIndentedString(extensionFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FinalRecipient");
    openapiFields.add("Action");
    openapiFields.add("RemoteMta");
    openapiFields.add("Status");
    openapiFields.add("DiagnosticCode");
    openapiFields.add("LastAttemptDate");
    openapiFields.add("ExtensionFields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Action");
    openapiRequiredFields.add("Status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RecipientDsnFields
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RecipientDsnFields.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecipientDsnFields is not found in the empty JSON string", RecipientDsnFields.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RecipientDsnFields.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecipientDsnFields` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RecipientDsnFields.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FinalRecipient`
      if (jsonObj.get("FinalRecipient") != null && !jsonObj.get("FinalRecipient").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FinalRecipient"));
      }
      // validate the required field `Action`
      DsnAction.validateJsonElement(jsonObj.get("Action"));
      // validate the optional field `RemoteMta`
      if (jsonObj.get("RemoteMta") != null && !jsonObj.get("RemoteMta").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RemoteMta"));
      }
      // validate the required field `Status`
      String.validateJsonElement(jsonObj.get("Status"));
      // validate the optional field `DiagnosticCode`
      if (jsonObj.get("DiagnosticCode") != null && !jsonObj.get("DiagnosticCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DiagnosticCode"));
      }
      // validate the optional field `LastAttemptDate`
      if (jsonObj.get("LastAttemptDate") != null && !jsonObj.get("LastAttemptDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastAttemptDate"));
      }
      // validate the optional field `ExtensionFields`
      if (jsonObj.get("ExtensionFields") != null && !jsonObj.get("ExtensionFields").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExtensionFields"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecipientDsnFields.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecipientDsnFields' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecipientDsnFields> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecipientDsnFields.class));

       return (TypeAdapter<T>) new TypeAdapter<RecipientDsnFields>() {
           @Override
           public void write(JsonWriter out, RecipientDsnFields value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecipientDsnFields read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RecipientDsnFields given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RecipientDsnFields
   * @throws IOException if the JSON string is invalid with respect to RecipientDsnFields
   */
  public static RecipientDsnFields fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecipientDsnFields.class);
  }

  /**
   * Convert an instance of RecipientDsnFields to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

