# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendBounceRequestMessageDsn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reporting_mta: str=None, arrival_date: datetime=None, extension_fields: List=None):
        """SendBounceRequestMessageDsn - a model defined in OpenAPI

        :param reporting_mta: The reporting_mta of this SendBounceRequestMessageDsn.
        :param arrival_date: The arrival_date of this SendBounceRequestMessageDsn.
        :param extension_fields: The extension_fields of this SendBounceRequestMessageDsn.
        """
        self.openapi_types = {
            'reporting_mta': str,
            'arrival_date': datetime,
            'extension_fields': List
        }

        self.attribute_map = {
            'reporting_mta': 'ReportingMta',
            'arrival_date': 'ArrivalDate',
            'extension_fields': 'ExtensionFields'
        }

        self._reporting_mta = reporting_mta
        self._arrival_date = arrival_date
        self._extension_fields = extension_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendBounceRequestMessageDsn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendBounceRequest_MessageDsn of this SendBounceRequestMessageDsn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reporting_mta(self):
        """Gets the reporting_mta of this SendBounceRequestMessageDsn.


        :return: The reporting_mta of this SendBounceRequestMessageDsn.
        :rtype: str
        """
        return self._reporting_mta

    @reporting_mta.setter
    def reporting_mta(self, reporting_mta):
        """Sets the reporting_mta of this SendBounceRequestMessageDsn.


        :param reporting_mta: The reporting_mta of this SendBounceRequestMessageDsn.
        :type reporting_mta: str
        """
        if reporting_mta is None:
            raise ValueError("Invalid value for `reporting_mta`, must not be `None`")

        self._reporting_mta = reporting_mta

    @property
    def arrival_date(self):
        """Gets the arrival_date of this SendBounceRequestMessageDsn.


        :return: The arrival_date of this SendBounceRequestMessageDsn.
        :rtype: datetime
        """
        return self._arrival_date

    @arrival_date.setter
    def arrival_date(self, arrival_date):
        """Sets the arrival_date of this SendBounceRequestMessageDsn.


        :param arrival_date: The arrival_date of this SendBounceRequestMessageDsn.
        :type arrival_date: datetime
        """

        self._arrival_date = arrival_date

    @property
    def extension_fields(self):
        """Gets the extension_fields of this SendBounceRequestMessageDsn.


        :return: The extension_fields of this SendBounceRequestMessageDsn.
        :rtype: List
        """
        return self._extension_fields

    @extension_fields.setter
    def extension_fields(self, extension_fields):
        """Sets the extension_fields of this SendBounceRequestMessageDsn.


        :param extension_fields: The extension_fields of this SendBounceRequestMessageDsn.
        :type extension_fields: List
        """

        self._extension_fields = extension_fields
