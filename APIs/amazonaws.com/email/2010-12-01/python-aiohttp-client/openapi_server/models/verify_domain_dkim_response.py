# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifyDomainDkimResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dkim_tokens: List=None):
        """VerifyDomainDkimResponse - a model defined in OpenAPI

        :param dkim_tokens: The dkim_tokens of this VerifyDomainDkimResponse.
        """
        self.openapi_types = {
            'dkim_tokens': List
        }

        self.attribute_map = {
            'dkim_tokens': 'DkimTokens'
        }

        self._dkim_tokens = dkim_tokens

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyDomainDkimResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifyDomainDkimResponse of this VerifyDomainDkimResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dkim_tokens(self):
        """Gets the dkim_tokens of this VerifyDomainDkimResponse.


        :return: The dkim_tokens of this VerifyDomainDkimResponse.
        :rtype: List
        """
        return self._dkim_tokens

    @dkim_tokens.setter
    def dkim_tokens(self, dkim_tokens):
        """Sets the dkim_tokens of this VerifyDomainDkimResponse.


        :param dkim_tokens: The dkim_tokens of this VerifyDomainDkimResponse.
        :type dkim_tokens: List
        """
        if dkim_tokens is None:
            raise ValueError("Invalid value for `dkim_tokens`, must not be `None`")

        self._dkim_tokens = dkim_tokens
