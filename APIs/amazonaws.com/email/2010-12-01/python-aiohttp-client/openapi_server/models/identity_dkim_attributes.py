# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.verification_status import VerificationStatus
from openapi_server import util


class IdentityDkimAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dkim_enabled: bool=None, dkim_verification_status: VerificationStatus=None, dkim_tokens: List=None):
        """IdentityDkimAttributes - a model defined in OpenAPI

        :param dkim_enabled: The dkim_enabled of this IdentityDkimAttributes.
        :param dkim_verification_status: The dkim_verification_status of this IdentityDkimAttributes.
        :param dkim_tokens: The dkim_tokens of this IdentityDkimAttributes.
        """
        self.openapi_types = {
            'dkim_enabled': bool,
            'dkim_verification_status': VerificationStatus,
            'dkim_tokens': List
        }

        self.attribute_map = {
            'dkim_enabled': 'DkimEnabled',
            'dkim_verification_status': 'DkimVerificationStatus',
            'dkim_tokens': 'DkimTokens'
        }

        self._dkim_enabled = dkim_enabled
        self._dkim_verification_status = dkim_verification_status
        self._dkim_tokens = dkim_tokens

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityDkimAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityDkimAttributes of this IdentityDkimAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dkim_enabled(self):
        """Gets the dkim_enabled of this IdentityDkimAttributes.


        :return: The dkim_enabled of this IdentityDkimAttributes.
        :rtype: bool
        """
        return self._dkim_enabled

    @dkim_enabled.setter
    def dkim_enabled(self, dkim_enabled):
        """Sets the dkim_enabled of this IdentityDkimAttributes.


        :param dkim_enabled: The dkim_enabled of this IdentityDkimAttributes.
        :type dkim_enabled: bool
        """
        if dkim_enabled is None:
            raise ValueError("Invalid value for `dkim_enabled`, must not be `None`")

        self._dkim_enabled = dkim_enabled

    @property
    def dkim_verification_status(self):
        """Gets the dkim_verification_status of this IdentityDkimAttributes.


        :return: The dkim_verification_status of this IdentityDkimAttributes.
        :rtype: VerificationStatus
        """
        return self._dkim_verification_status

    @dkim_verification_status.setter
    def dkim_verification_status(self, dkim_verification_status):
        """Sets the dkim_verification_status of this IdentityDkimAttributes.


        :param dkim_verification_status: The dkim_verification_status of this IdentityDkimAttributes.
        :type dkim_verification_status: VerificationStatus
        """
        if dkim_verification_status is None:
            raise ValueError("Invalid value for `dkim_verification_status`, must not be `None`")

        self._dkim_verification_status = dkim_verification_status

    @property
    def dkim_tokens(self):
        """Gets the dkim_tokens of this IdentityDkimAttributes.


        :return: The dkim_tokens of this IdentityDkimAttributes.
        :rtype: List
        """
        return self._dkim_tokens

    @dkim_tokens.setter
    def dkim_tokens(self, dkim_tokens):
        """Sets the dkim_tokens of this IdentityDkimAttributes.


        :param dkim_tokens: The dkim_tokens of this IdentityDkimAttributes.
        :type dkim_tokens: List
        """

        self._dkim_tokens = dkim_tokens
