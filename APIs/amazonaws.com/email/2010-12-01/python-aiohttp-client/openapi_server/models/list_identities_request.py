# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identity_type import IdentityType
from openapi_server import util


class ListIdentitiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_type: IdentityType=None, next_token: str=None, max_items: int=None):
        """ListIdentitiesRequest - a model defined in OpenAPI

        :param identity_type: The identity_type of this ListIdentitiesRequest.
        :param next_token: The next_token of this ListIdentitiesRequest.
        :param max_items: The max_items of this ListIdentitiesRequest.
        """
        self.openapi_types = {
            'identity_type': IdentityType,
            'next_token': str,
            'max_items': int
        }

        self.attribute_map = {
            'identity_type': 'IdentityType',
            'next_token': 'NextToken',
            'max_items': 'MaxItems'
        }

        self._identity_type = identity_type
        self._next_token = next_token
        self._max_items = max_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIdentitiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIdentitiesRequest of this ListIdentitiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_type(self):
        """Gets the identity_type of this ListIdentitiesRequest.


        :return: The identity_type of this ListIdentitiesRequest.
        :rtype: IdentityType
        """
        return self._identity_type

    @identity_type.setter
    def identity_type(self, identity_type):
        """Sets the identity_type of this ListIdentitiesRequest.


        :param identity_type: The identity_type of this ListIdentitiesRequest.
        :type identity_type: IdentityType
        """

        self._identity_type = identity_type

    @property
    def next_token(self):
        """Gets the next_token of this ListIdentitiesRequest.


        :return: The next_token of this ListIdentitiesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListIdentitiesRequest.


        :param next_token: The next_token of this ListIdentitiesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_items(self):
        """Gets the max_items of this ListIdentitiesRequest.


        :return: The max_items of this ListIdentitiesRequest.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this ListIdentitiesRequest.


        :param max_items: The max_items of this ListIdentitiesRequest.
        :type max_items: int
        """

        self._max_items = max_items
