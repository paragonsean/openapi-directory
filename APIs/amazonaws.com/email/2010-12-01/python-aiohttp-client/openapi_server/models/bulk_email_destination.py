# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination import Destination
from openapi_server import util


class BulkEmailDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: Destination=None, replacement_tags: List=None, replacement_template_data: str=None):
        """BulkEmailDestination - a model defined in OpenAPI

        :param destination: The destination of this BulkEmailDestination.
        :param replacement_tags: The replacement_tags of this BulkEmailDestination.
        :param replacement_template_data: The replacement_template_data of this BulkEmailDestination.
        """
        self.openapi_types = {
            'destination': Destination,
            'replacement_tags': List,
            'replacement_template_data': str
        }

        self.attribute_map = {
            'destination': 'Destination',
            'replacement_tags': 'ReplacementTags',
            'replacement_template_data': 'ReplacementTemplateData'
        }

        self._destination = destination
        self._replacement_tags = replacement_tags
        self._replacement_template_data = replacement_template_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkEmailDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkEmailDestination of this BulkEmailDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this BulkEmailDestination.


        :return: The destination of this BulkEmailDestination.
        :rtype: Destination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this BulkEmailDestination.


        :param destination: The destination of this BulkEmailDestination.
        :type destination: Destination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def replacement_tags(self):
        """Gets the replacement_tags of this BulkEmailDestination.


        :return: The replacement_tags of this BulkEmailDestination.
        :rtype: List
        """
        return self._replacement_tags

    @replacement_tags.setter
    def replacement_tags(self, replacement_tags):
        """Sets the replacement_tags of this BulkEmailDestination.


        :param replacement_tags: The replacement_tags of this BulkEmailDestination.
        :type replacement_tags: List
        """

        self._replacement_tags = replacement_tags

    @property
    def replacement_template_data(self):
        """Gets the replacement_template_data of this BulkEmailDestination.


        :return: The replacement_template_data of this BulkEmailDestination.
        :rtype: str
        """
        return self._replacement_template_data

    @replacement_template_data.setter
    def replacement_template_data(self, replacement_template_data):
        """Sets the replacement_template_data of this BulkEmailDestination.


        :param replacement_template_data: The replacement_template_data of this BulkEmailDestination.
        :type replacement_template_data: str
        """

        self._replacement_template_data = replacement_template_data
