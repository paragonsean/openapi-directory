# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityNotificationAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounce_topic: str=None, complaint_topic: str=None, delivery_topic: str=None, forwarding_enabled: bool=None, headers_in_bounce_notifications_enabled: bool=None, headers_in_complaint_notifications_enabled: bool=None, headers_in_delivery_notifications_enabled: bool=None):
        """IdentityNotificationAttributes - a model defined in OpenAPI

        :param bounce_topic: The bounce_topic of this IdentityNotificationAttributes.
        :param complaint_topic: The complaint_topic of this IdentityNotificationAttributes.
        :param delivery_topic: The delivery_topic of this IdentityNotificationAttributes.
        :param forwarding_enabled: The forwarding_enabled of this IdentityNotificationAttributes.
        :param headers_in_bounce_notifications_enabled: The headers_in_bounce_notifications_enabled of this IdentityNotificationAttributes.
        :param headers_in_complaint_notifications_enabled: The headers_in_complaint_notifications_enabled of this IdentityNotificationAttributes.
        :param headers_in_delivery_notifications_enabled: The headers_in_delivery_notifications_enabled of this IdentityNotificationAttributes.
        """
        self.openapi_types = {
            'bounce_topic': str,
            'complaint_topic': str,
            'delivery_topic': str,
            'forwarding_enabled': bool,
            'headers_in_bounce_notifications_enabled': bool,
            'headers_in_complaint_notifications_enabled': bool,
            'headers_in_delivery_notifications_enabled': bool
        }

        self.attribute_map = {
            'bounce_topic': 'BounceTopic',
            'complaint_topic': 'ComplaintTopic',
            'delivery_topic': 'DeliveryTopic',
            'forwarding_enabled': 'ForwardingEnabled',
            'headers_in_bounce_notifications_enabled': 'HeadersInBounceNotificationsEnabled',
            'headers_in_complaint_notifications_enabled': 'HeadersInComplaintNotificationsEnabled',
            'headers_in_delivery_notifications_enabled': 'HeadersInDeliveryNotificationsEnabled'
        }

        self._bounce_topic = bounce_topic
        self._complaint_topic = complaint_topic
        self._delivery_topic = delivery_topic
        self._forwarding_enabled = forwarding_enabled
        self._headers_in_bounce_notifications_enabled = headers_in_bounce_notifications_enabled
        self._headers_in_complaint_notifications_enabled = headers_in_complaint_notifications_enabled
        self._headers_in_delivery_notifications_enabled = headers_in_delivery_notifications_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityNotificationAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityNotificationAttributes of this IdentityNotificationAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounce_topic(self):
        """Gets the bounce_topic of this IdentityNotificationAttributes.


        :return: The bounce_topic of this IdentityNotificationAttributes.
        :rtype: str
        """
        return self._bounce_topic

    @bounce_topic.setter
    def bounce_topic(self, bounce_topic):
        """Sets the bounce_topic of this IdentityNotificationAttributes.


        :param bounce_topic: The bounce_topic of this IdentityNotificationAttributes.
        :type bounce_topic: str
        """
        if bounce_topic is None:
            raise ValueError("Invalid value for `bounce_topic`, must not be `None`")

        self._bounce_topic = bounce_topic

    @property
    def complaint_topic(self):
        """Gets the complaint_topic of this IdentityNotificationAttributes.


        :return: The complaint_topic of this IdentityNotificationAttributes.
        :rtype: str
        """
        return self._complaint_topic

    @complaint_topic.setter
    def complaint_topic(self, complaint_topic):
        """Sets the complaint_topic of this IdentityNotificationAttributes.


        :param complaint_topic: The complaint_topic of this IdentityNotificationAttributes.
        :type complaint_topic: str
        """
        if complaint_topic is None:
            raise ValueError("Invalid value for `complaint_topic`, must not be `None`")

        self._complaint_topic = complaint_topic

    @property
    def delivery_topic(self):
        """Gets the delivery_topic of this IdentityNotificationAttributes.


        :return: The delivery_topic of this IdentityNotificationAttributes.
        :rtype: str
        """
        return self._delivery_topic

    @delivery_topic.setter
    def delivery_topic(self, delivery_topic):
        """Sets the delivery_topic of this IdentityNotificationAttributes.


        :param delivery_topic: The delivery_topic of this IdentityNotificationAttributes.
        :type delivery_topic: str
        """
        if delivery_topic is None:
            raise ValueError("Invalid value for `delivery_topic`, must not be `None`")

        self._delivery_topic = delivery_topic

    @property
    def forwarding_enabled(self):
        """Gets the forwarding_enabled of this IdentityNotificationAttributes.


        :return: The forwarding_enabled of this IdentityNotificationAttributes.
        :rtype: bool
        """
        return self._forwarding_enabled

    @forwarding_enabled.setter
    def forwarding_enabled(self, forwarding_enabled):
        """Sets the forwarding_enabled of this IdentityNotificationAttributes.


        :param forwarding_enabled: The forwarding_enabled of this IdentityNotificationAttributes.
        :type forwarding_enabled: bool
        """
        if forwarding_enabled is None:
            raise ValueError("Invalid value for `forwarding_enabled`, must not be `None`")

        self._forwarding_enabled = forwarding_enabled

    @property
    def headers_in_bounce_notifications_enabled(self):
        """Gets the headers_in_bounce_notifications_enabled of this IdentityNotificationAttributes.


        :return: The headers_in_bounce_notifications_enabled of this IdentityNotificationAttributes.
        :rtype: bool
        """
        return self._headers_in_bounce_notifications_enabled

    @headers_in_bounce_notifications_enabled.setter
    def headers_in_bounce_notifications_enabled(self, headers_in_bounce_notifications_enabled):
        """Sets the headers_in_bounce_notifications_enabled of this IdentityNotificationAttributes.


        :param headers_in_bounce_notifications_enabled: The headers_in_bounce_notifications_enabled of this IdentityNotificationAttributes.
        :type headers_in_bounce_notifications_enabled: bool
        """

        self._headers_in_bounce_notifications_enabled = headers_in_bounce_notifications_enabled

    @property
    def headers_in_complaint_notifications_enabled(self):
        """Gets the headers_in_complaint_notifications_enabled of this IdentityNotificationAttributes.


        :return: The headers_in_complaint_notifications_enabled of this IdentityNotificationAttributes.
        :rtype: bool
        """
        return self._headers_in_complaint_notifications_enabled

    @headers_in_complaint_notifications_enabled.setter
    def headers_in_complaint_notifications_enabled(self, headers_in_complaint_notifications_enabled):
        """Sets the headers_in_complaint_notifications_enabled of this IdentityNotificationAttributes.


        :param headers_in_complaint_notifications_enabled: The headers_in_complaint_notifications_enabled of this IdentityNotificationAttributes.
        :type headers_in_complaint_notifications_enabled: bool
        """

        self._headers_in_complaint_notifications_enabled = headers_in_complaint_notifications_enabled

    @property
    def headers_in_delivery_notifications_enabled(self):
        """Gets the headers_in_delivery_notifications_enabled of this IdentityNotificationAttributes.


        :return: The headers_in_delivery_notifications_enabled of this IdentityNotificationAttributes.
        :rtype: bool
        """
        return self._headers_in_delivery_notifications_enabled

    @headers_in_delivery_notifications_enabled.setter
    def headers_in_delivery_notifications_enabled(self, headers_in_delivery_notifications_enabled):
        """Sets the headers_in_delivery_notifications_enabled of this IdentityNotificationAttributes.


        :param headers_in_delivery_notifications_enabled: The headers_in_delivery_notifications_enabled of this IdentityNotificationAttributes.
        :type headers_in_delivery_notifications_enabled: bool
        """

        self._headers_in_delivery_notifications_enabled = headers_in_delivery_notifications_enabled
