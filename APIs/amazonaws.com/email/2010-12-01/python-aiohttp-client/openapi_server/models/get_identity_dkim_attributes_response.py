# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIdentityDkimAttributesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dkim_attributes: Dict=None):
        """GetIdentityDkimAttributesResponse - a model defined in OpenAPI

        :param dkim_attributes: The dkim_attributes of this GetIdentityDkimAttributesResponse.
        """
        self.openapi_types = {
            'dkim_attributes': Dict
        }

        self.attribute_map = {
            'dkim_attributes': 'DkimAttributes'
        }

        self._dkim_attributes = dkim_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIdentityDkimAttributesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIdentityDkimAttributesResponse of this GetIdentityDkimAttributesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dkim_attributes(self):
        """Gets the dkim_attributes of this GetIdentityDkimAttributesResponse.


        :return: The dkim_attributes of this GetIdentityDkimAttributesResponse.
        :rtype: Dict
        """
        return self._dkim_attributes

    @dkim_attributes.setter
    def dkim_attributes(self, dkim_attributes):
        """Sets the dkim_attributes of this GetIdentityDkimAttributesResponse.


        :param dkim_attributes: The dkim_attributes of this GetIdentityDkimAttributesResponse.
        :type dkim_attributes: Dict
        """
        if dkim_attributes is None:
            raise ValueError("Invalid value for `dkim_attributes`, must not be `None`")

        self._dkim_attributes = dkim_attributes
