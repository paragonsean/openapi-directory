# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dsn_action import DsnAction
from openapi_server import util


class BouncedRecipientInfoRecipientDsnFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, final_recipient: str=None, action: DsnAction=None, remote_mta: str=None, status: str=None, diagnostic_code: str=None, last_attempt_date: datetime=None, extension_fields: List=None):
        """BouncedRecipientInfoRecipientDsnFields - a model defined in OpenAPI

        :param final_recipient: The final_recipient of this BouncedRecipientInfoRecipientDsnFields.
        :param action: The action of this BouncedRecipientInfoRecipientDsnFields.
        :param remote_mta: The remote_mta of this BouncedRecipientInfoRecipientDsnFields.
        :param status: The status of this BouncedRecipientInfoRecipientDsnFields.
        :param diagnostic_code: The diagnostic_code of this BouncedRecipientInfoRecipientDsnFields.
        :param last_attempt_date: The last_attempt_date of this BouncedRecipientInfoRecipientDsnFields.
        :param extension_fields: The extension_fields of this BouncedRecipientInfoRecipientDsnFields.
        """
        self.openapi_types = {
            'final_recipient': str,
            'action': DsnAction,
            'remote_mta': str,
            'status': str,
            'diagnostic_code': str,
            'last_attempt_date': datetime,
            'extension_fields': List
        }

        self.attribute_map = {
            'final_recipient': 'FinalRecipient',
            'action': 'Action',
            'remote_mta': 'RemoteMta',
            'status': 'Status',
            'diagnostic_code': 'DiagnosticCode',
            'last_attempt_date': 'LastAttemptDate',
            'extension_fields': 'ExtensionFields'
        }

        self._final_recipient = final_recipient
        self._action = action
        self._remote_mta = remote_mta
        self._status = status
        self._diagnostic_code = diagnostic_code
        self._last_attempt_date = last_attempt_date
        self._extension_fields = extension_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BouncedRecipientInfoRecipientDsnFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BouncedRecipientInfo_RecipientDsnFields of this BouncedRecipientInfoRecipientDsnFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def final_recipient(self):
        """Gets the final_recipient of this BouncedRecipientInfoRecipientDsnFields.


        :return: The final_recipient of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: str
        """
        return self._final_recipient

    @final_recipient.setter
    def final_recipient(self, final_recipient):
        """Sets the final_recipient of this BouncedRecipientInfoRecipientDsnFields.


        :param final_recipient: The final_recipient of this BouncedRecipientInfoRecipientDsnFields.
        :type final_recipient: str
        """

        self._final_recipient = final_recipient

    @property
    def action(self):
        """Gets the action of this BouncedRecipientInfoRecipientDsnFields.


        :return: The action of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: DsnAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this BouncedRecipientInfoRecipientDsnFields.


        :param action: The action of this BouncedRecipientInfoRecipientDsnFields.
        :type action: DsnAction
        """
        if action is None:
            raise ValueError("Invalid value for `action`, must not be `None`")

        self._action = action

    @property
    def remote_mta(self):
        """Gets the remote_mta of this BouncedRecipientInfoRecipientDsnFields.


        :return: The remote_mta of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: str
        """
        return self._remote_mta

    @remote_mta.setter
    def remote_mta(self, remote_mta):
        """Sets the remote_mta of this BouncedRecipientInfoRecipientDsnFields.


        :param remote_mta: The remote_mta of this BouncedRecipientInfoRecipientDsnFields.
        :type remote_mta: str
        """

        self._remote_mta = remote_mta

    @property
    def status(self):
        """Gets the status of this BouncedRecipientInfoRecipientDsnFields.


        :return: The status of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BouncedRecipientInfoRecipientDsnFields.


        :param status: The status of this BouncedRecipientInfoRecipientDsnFields.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def diagnostic_code(self):
        """Gets the diagnostic_code of this BouncedRecipientInfoRecipientDsnFields.


        :return: The diagnostic_code of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: str
        """
        return self._diagnostic_code

    @diagnostic_code.setter
    def diagnostic_code(self, diagnostic_code):
        """Sets the diagnostic_code of this BouncedRecipientInfoRecipientDsnFields.


        :param diagnostic_code: The diagnostic_code of this BouncedRecipientInfoRecipientDsnFields.
        :type diagnostic_code: str
        """

        self._diagnostic_code = diagnostic_code

    @property
    def last_attempt_date(self):
        """Gets the last_attempt_date of this BouncedRecipientInfoRecipientDsnFields.


        :return: The last_attempt_date of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: datetime
        """
        return self._last_attempt_date

    @last_attempt_date.setter
    def last_attempt_date(self, last_attempt_date):
        """Sets the last_attempt_date of this BouncedRecipientInfoRecipientDsnFields.


        :param last_attempt_date: The last_attempt_date of this BouncedRecipientInfoRecipientDsnFields.
        :type last_attempt_date: datetime
        """

        self._last_attempt_date = last_attempt_date

    @property
    def extension_fields(self):
        """Gets the extension_fields of this BouncedRecipientInfoRecipientDsnFields.


        :return: The extension_fields of this BouncedRecipientInfoRecipientDsnFields.
        :rtype: List
        """
        return self._extension_fields

    @extension_fields.setter
    def extension_fields(self, extension_fields):
        """Sets the extension_fields of this BouncedRecipientInfoRecipientDsnFields.


        :param extension_fields: The extension_fields of this BouncedRecipientInfoRecipientDsnFields.
        :type extension_fields: List
        """

        self._extension_fields = extension_fields
