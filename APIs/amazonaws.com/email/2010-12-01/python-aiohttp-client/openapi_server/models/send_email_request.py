# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.send_email_request_destination import SendEmailRequestDestination
from openapi_server.models.send_email_request_message import SendEmailRequestMessage
from openapi_server import util


class SendEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source: str=None, destination: SendEmailRequestDestination=None, message: SendEmailRequestMessage=None, reply_to_addresses: List=None, return_path: str=None, source_arn: str=None, return_path_arn: str=None, tags: List=None, configuration_set_name: str=None):
        """SendEmailRequest - a model defined in OpenAPI

        :param source: The source of this SendEmailRequest.
        :param destination: The destination of this SendEmailRequest.
        :param message: The message of this SendEmailRequest.
        :param reply_to_addresses: The reply_to_addresses of this SendEmailRequest.
        :param return_path: The return_path of this SendEmailRequest.
        :param source_arn: The source_arn of this SendEmailRequest.
        :param return_path_arn: The return_path_arn of this SendEmailRequest.
        :param tags: The tags of this SendEmailRequest.
        :param configuration_set_name: The configuration_set_name of this SendEmailRequest.
        """
        self.openapi_types = {
            'source': str,
            'destination': SendEmailRequestDestination,
            'message': SendEmailRequestMessage,
            'reply_to_addresses': List,
            'return_path': str,
            'source_arn': str,
            'return_path_arn': str,
            'tags': List,
            'configuration_set_name': str
        }

        self.attribute_map = {
            'source': 'Source',
            'destination': 'Destination',
            'message': 'Message',
            'reply_to_addresses': 'ReplyToAddresses',
            'return_path': 'ReturnPath',
            'source_arn': 'SourceArn',
            'return_path_arn': 'ReturnPathArn',
            'tags': 'Tags',
            'configuration_set_name': 'ConfigurationSetName'
        }

        self._source = source
        self._destination = destination
        self._message = message
        self._reply_to_addresses = reply_to_addresses
        self._return_path = return_path
        self._source_arn = source_arn
        self._return_path_arn = return_path_arn
        self._tags = tags
        self._configuration_set_name = configuration_set_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendEmailRequest of this SendEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this SendEmailRequest.


        :return: The source of this SendEmailRequest.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this SendEmailRequest.


        :param source: The source of this SendEmailRequest.
        :type source: str
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source

    @property
    def destination(self):
        """Gets the destination of this SendEmailRequest.


        :return: The destination of this SendEmailRequest.
        :rtype: SendEmailRequestDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this SendEmailRequest.


        :param destination: The destination of this SendEmailRequest.
        :type destination: SendEmailRequestDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def message(self):
        """Gets the message of this SendEmailRequest.


        :return: The message of this SendEmailRequest.
        :rtype: SendEmailRequestMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SendEmailRequest.


        :param message: The message of this SendEmailRequest.
        :type message: SendEmailRequestMessage
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def reply_to_addresses(self):
        """Gets the reply_to_addresses of this SendEmailRequest.


        :return: The reply_to_addresses of this SendEmailRequest.
        :rtype: List
        """
        return self._reply_to_addresses

    @reply_to_addresses.setter
    def reply_to_addresses(self, reply_to_addresses):
        """Sets the reply_to_addresses of this SendEmailRequest.


        :param reply_to_addresses: The reply_to_addresses of this SendEmailRequest.
        :type reply_to_addresses: List
        """

        self._reply_to_addresses = reply_to_addresses

    @property
    def return_path(self):
        """Gets the return_path of this SendEmailRequest.


        :return: The return_path of this SendEmailRequest.
        :rtype: str
        """
        return self._return_path

    @return_path.setter
    def return_path(self, return_path):
        """Sets the return_path of this SendEmailRequest.


        :param return_path: The return_path of this SendEmailRequest.
        :type return_path: str
        """

        self._return_path = return_path

    @property
    def source_arn(self):
        """Gets the source_arn of this SendEmailRequest.


        :return: The source_arn of this SendEmailRequest.
        :rtype: str
        """
        return self._source_arn

    @source_arn.setter
    def source_arn(self, source_arn):
        """Sets the source_arn of this SendEmailRequest.


        :param source_arn: The source_arn of this SendEmailRequest.
        :type source_arn: str
        """

        self._source_arn = source_arn

    @property
    def return_path_arn(self):
        """Gets the return_path_arn of this SendEmailRequest.


        :return: The return_path_arn of this SendEmailRequest.
        :rtype: str
        """
        return self._return_path_arn

    @return_path_arn.setter
    def return_path_arn(self, return_path_arn):
        """Sets the return_path_arn of this SendEmailRequest.


        :param return_path_arn: The return_path_arn of this SendEmailRequest.
        :type return_path_arn: str
        """

        self._return_path_arn = return_path_arn

    @property
    def tags(self):
        """Gets the tags of this SendEmailRequest.


        :return: The tags of this SendEmailRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SendEmailRequest.


        :param tags: The tags of this SendEmailRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def configuration_set_name(self):
        """Gets the configuration_set_name of this SendEmailRequest.


        :return: The configuration_set_name of this SendEmailRequest.
        :rtype: str
        """
        return self._configuration_set_name

    @configuration_set_name.setter
    def configuration_set_name(self, configuration_set_name):
        """Sets the configuration_set_name of this SendEmailRequest.


        :param configuration_set_name: The configuration_set_name of this SendEmailRequest.
        :type configuration_set_name: str
        """

        self._configuration_set_name = configuration_set_name
