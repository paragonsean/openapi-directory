# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIdentityNotificationAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identities: List=None):
        """GetIdentityNotificationAttributesRequest - a model defined in OpenAPI

        :param identities: The identities of this GetIdentityNotificationAttributesRequest.
        """
        self.openapi_types = {
            'identities': List
        }

        self.attribute_map = {
            'identities': 'Identities'
        }

        self._identities = identities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIdentityNotificationAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIdentityNotificationAttributesRequest of this GetIdentityNotificationAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identities(self):
        """Gets the identities of this GetIdentityNotificationAttributesRequest.


        :return: The identities of this GetIdentityNotificationAttributesRequest.
        :rtype: List
        """
        return self._identities

    @identities.setter
    def identities(self, identities):
        """Sets the identities of this GetIdentityNotificationAttributesRequest.


        :param identities: The identities of this GetIdentityNotificationAttributesRequest.
        :type identities: List
        """
        if identities is None:
            raise ValueError("Invalid value for `identities`, must not be `None`")

        self._identities = identities
