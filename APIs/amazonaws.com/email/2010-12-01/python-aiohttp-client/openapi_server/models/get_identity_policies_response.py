# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIdentityPoliciesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policies: Dict=None):
        """GetIdentityPoliciesResponse - a model defined in OpenAPI

        :param policies: The policies of this GetIdentityPoliciesResponse.
        """
        self.openapi_types = {
            'policies': Dict
        }

        self.attribute_map = {
            'policies': 'Policies'
        }

        self._policies = policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIdentityPoliciesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIdentityPoliciesResponse of this GetIdentityPoliciesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policies(self):
        """Gets the policies of this GetIdentityPoliciesResponse.


        :return: The policies of this GetIdentityPoliciesResponse.
        :rtype: Dict
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this GetIdentityPoliciesResponse.


        :param policies: The policies of this GetIdentityPoliciesResponse.
        :type policies: Dict
        """
        if policies is None:
            raise ValueError("Invalid value for `policies`, must not be `None`")

        self._policies = policies
