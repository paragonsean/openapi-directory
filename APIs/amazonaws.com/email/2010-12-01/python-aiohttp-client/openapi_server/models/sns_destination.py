# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SNSDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, topic_arn: str=None):
        """SNSDestination - a model defined in OpenAPI

        :param topic_arn: The topic_arn of this SNSDestination.
        """
        self.openapi_types = {
            'topic_arn': str
        }

        self.attribute_map = {
            'topic_arn': 'TopicARN'
        }

        self._topic_arn = topic_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SNSDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SNSDestination of this SNSDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def topic_arn(self):
        """Gets the topic_arn of this SNSDestination.


        :return: The topic_arn of this SNSDestination.
        :rtype: str
        """
        return self._topic_arn

    @topic_arn.setter
    def topic_arn(self, topic_arn):
        """Sets the topic_arn of this SNSDestination.


        :param topic_arn: The topic_arn of this SNSDestination.
        :type topic_arn: str
        """
        if topic_arn is None:
            raise ValueError("Invalid value for `topic_arn`, must not be `None`")

        self._topic_arn = topic_arn
