/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateWorkflowRequest.h
 *
 * 
 */

#ifndef OAICreateWorkflowRequest_H
#define OAICreateWorkflowRequest_H

#include <QJsonObject>

#include "OAIAccelerators.h"
#include "OAIWorkflowEngine.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateWorkflowRequest : public OAIObject {
public:
    OAICreateWorkflowRequest();
    OAICreateWorkflowRequest(QString json);
    ~OAICreateWorkflowRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIWorkflowEngine getEngine() const;
    void setEngine(const OAIWorkflowEngine &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getDefinitionZip() const;
    void setDefinitionZip(const QString &definition_zip);
    bool is_definition_zip_Set() const;
    bool is_definition_zip_Valid() const;

    QString getDefinitionUri() const;
    void setDefinitionUri(const QString &definition_uri);
    bool is_definition_uri_Set() const;
    bool is_definition_uri_Valid() const;

    QString getMain() const;
    void setMain(const QString &main);
    bool is_main_Set() const;
    bool is_main_Valid() const;

    QMap getParameterTemplate() const;
    void setParameterTemplate(const QMap &parameter_template);
    bool is_parameter_template_Set() const;
    bool is_parameter_template_Valid() const;

    qint32 getStorageCapacity() const;
    void setStorageCapacity(const qint32 &storage_capacity);
    bool is_storage_capacity_Set() const;
    bool is_storage_capacity_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    OAIAccelerators getAccelerators() const;
    void setAccelerators(const OAIAccelerators &accelerators);
    bool is_accelerators_Set() const;
    bool is_accelerators_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIWorkflowEngine m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_definition_zip;
    bool m_definition_zip_isSet;
    bool m_definition_zip_isValid;

    QString m_definition_uri;
    bool m_definition_uri_isSet;
    bool m_definition_uri_isValid;

    QString m_main;
    bool m_main_isSet;
    bool m_main_isValid;

    QMap m_parameter_template;
    bool m_parameter_template_isSet;
    bool m_parameter_template_isValid;

    qint32 m_storage_capacity;
    bool m_storage_capacity_isSet;
    bool m_storage_capacity_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    OAIAccelerators m_accelerators;
    bool m_accelerators_isSet;
    bool m_accelerators_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateWorkflowRequest)

#endif // OAICreateWorkflowRequest_H
