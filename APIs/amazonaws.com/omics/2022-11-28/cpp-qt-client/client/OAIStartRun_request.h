/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartRun_request.h
 *
 * 
 */

#ifndef OAIStartRun_request_H
#define OAIStartRun_request_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartRun_request : public OAIObject {
public:
    OAIStartRun_request();
    OAIStartRun_request(QString json);
    ~OAIStartRun_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkflowId() const;
    void setWorkflowId(const QString &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    QString getWorkflowType() const;
    void setWorkflowType(const QString &workflow_type);
    bool is_workflow_type_Set() const;
    bool is_workflow_type_Valid() const;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRunGroupId() const;
    void setRunGroupId(const QString &run_group_id);
    bool is_run_group_id_Set() const;
    bool is_run_group_id_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIObject getParameters() const;
    void setParameters(const OAIObject &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    qint32 getStorageCapacity() const;
    void setStorageCapacity(const qint32 &storage_capacity);
    bool is_storage_capacity_Set() const;
    bool is_storage_capacity_Valid() const;

    QString getOutputUri() const;
    void setOutputUri(const QString &output_uri);
    bool is_output_uri_Set() const;
    bool is_output_uri_Valid() const;

    QString getLogLevel() const;
    void setLogLevel(const QString &log_level);
    bool is_log_level_Set() const;
    bool is_log_level_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;

    QString m_workflow_type;
    bool m_workflow_type_isSet;
    bool m_workflow_type_isValid;

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_run_group_id;
    bool m_run_group_id_isSet;
    bool m_run_group_id_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIObject m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    qint32 m_storage_capacity;
    bool m_storage_capacity_isSet;
    bool m_storage_capacity_isValid;

    QString m_output_uri;
    bool m_output_uri_isSet;
    bool m_output_uri_isValid;

    QString m_log_level;
    bool m_log_level_isSet;
    bool m_log_level_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartRun_request)

#endif // OAIStartRun_request_H
