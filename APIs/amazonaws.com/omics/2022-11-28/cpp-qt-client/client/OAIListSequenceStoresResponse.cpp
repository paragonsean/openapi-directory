/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSequenceStoresResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSequenceStoresResponse::OAIListSequenceStoresResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSequenceStoresResponse::OAIListSequenceStoresResponse() {
    this->initializeModel();
}

OAIListSequenceStoresResponse::~OAIListSequenceStoresResponse() {}

void OAIListSequenceStoresResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_sequence_stores_isSet = false;
    m_sequence_stores_isValid = false;
}

void OAIListSequenceStoresResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSequenceStoresResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_sequence_stores_isValid = ::OpenAPI::fromJsonValue(m_sequence_stores, json[QString("sequenceStores")]);
    m_sequence_stores_isSet = !json[QString("sequenceStores")].isNull() && m_sequence_stores_isValid;
}

QString OAIListSequenceStoresResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSequenceStoresResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_sequence_stores.isSet()) {
        obj.insert(QString("sequenceStores"), ::OpenAPI::toJsonValue(m_sequence_stores));
    }
    return obj;
}

QString OAIListSequenceStoresResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSequenceStoresResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSequenceStoresResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSequenceStoresResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListSequenceStoresResponse::getSequenceStores() const {
    return m_sequence_stores;
}
void OAIListSequenceStoresResponse::setSequenceStores(const QList &sequence_stores) {
    m_sequence_stores = sequence_stores;
    m_sequence_stores_isSet = true;
}

bool OAIListSequenceStoresResponse::is_sequence_stores_Set() const{
    return m_sequence_stores_isSet;
}

bool OAIListSequenceStoresResponse::is_sequence_stores_Valid() const{
    return m_sequence_stores_isValid;
}

bool OAIListSequenceStoresResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sequence_stores.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSequenceStoresResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_sequence_stores_isValid && true;
}

} // namespace OpenAPI
