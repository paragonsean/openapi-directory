/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateVariantStoreResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateVariantStoreResponse::OAICreateVariantStoreResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateVariantStoreResponse::OAICreateVariantStoreResponse() {
    this->initializeModel();
}

OAICreateVariantStoreResponse::~OAICreateVariantStoreResponse() {}

void OAICreateVariantStoreResponse::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;
}

void OAICreateVariantStoreResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateVariantStoreResponse::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;
}

QString OAICreateVariantStoreResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateVariantStoreResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_reference.isSet()) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    return obj;
}

QString OAICreateVariantStoreResponse::getId() const {
    return m_id;
}
void OAICreateVariantStoreResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateVariantStoreResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateVariantStoreResponse::is_id_Valid() const{
    return m_id_isValid;
}

OAICreateVariantStoreResponse_reference OAICreateVariantStoreResponse::getReference() const {
    return m_reference;
}
void OAICreateVariantStoreResponse::setReference(const OAICreateVariantStoreResponse_reference &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAICreateVariantStoreResponse::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAICreateVariantStoreResponse::is_reference_Valid() const{
    return m_reference_isValid;
}

OAIStoreStatus OAICreateVariantStoreResponse::getStatus() const {
    return m_status;
}
void OAICreateVariantStoreResponse::setStatus(const OAIStoreStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateVariantStoreResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateVariantStoreResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICreateVariantStoreResponse::getName() const {
    return m_name;
}
void OAICreateVariantStoreResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateVariantStoreResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateVariantStoreResponse::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAICreateVariantStoreResponse::getCreationTime() const {
    return m_creation_time;
}
void OAICreateVariantStoreResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateVariantStoreResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateVariantStoreResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

bool OAICreateVariantStoreResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateVariantStoreResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_status_isValid && m_name_isValid && m_creation_time_isValid && true;
}

} // namespace OpenAPI
