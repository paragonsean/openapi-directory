/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateReferenceStoreResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateReferenceStoreResponse::OAICreateReferenceStoreResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateReferenceStoreResponse::OAICreateReferenceStoreResponse() {
    this->initializeModel();
}

OAICreateReferenceStoreResponse::~OAICreateReferenceStoreResponse() {}

void OAICreateReferenceStoreResponse::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_sse_config_isSet = false;
    m_sse_config_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;
}

void OAICreateReferenceStoreResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateReferenceStoreResponse::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_sse_config_isValid = ::OpenAPI::fromJsonValue(m_sse_config, json[QString("sseConfig")]);
    m_sse_config_isSet = !json[QString("sseConfig")].isNull() && m_sse_config_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;
}

QString OAICreateReferenceStoreResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateReferenceStoreResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_sse_config.isSet()) {
        obj.insert(QString("sseConfig"), ::OpenAPI::toJsonValue(m_sse_config));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    return obj;
}

QString OAICreateReferenceStoreResponse::getId() const {
    return m_id;
}
void OAICreateReferenceStoreResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateReferenceStoreResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateReferenceStoreResponse::getArn() const {
    return m_arn;
}
void OAICreateReferenceStoreResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateReferenceStoreResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateReferenceStoreResponse::getName() const {
    return m_name;
}
void OAICreateReferenceStoreResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateReferenceStoreResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateReferenceStoreResponse::getDescription() const {
    return m_description;
}
void OAICreateReferenceStoreResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateReferenceStoreResponse::is_description_Valid() const{
    return m_description_isValid;
}

OAICreateReferenceStoreResponse_sseConfig OAICreateReferenceStoreResponse::getSseConfig() const {
    return m_sse_config;
}
void OAICreateReferenceStoreResponse::setSseConfig(const OAICreateReferenceStoreResponse_sseConfig &sse_config) {
    m_sse_config = sse_config;
    m_sse_config_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_sse_config_Set() const{
    return m_sse_config_isSet;
}

bool OAICreateReferenceStoreResponse::is_sse_config_Valid() const{
    return m_sse_config_isValid;
}

QDateTime OAICreateReferenceStoreResponse::getCreationTime() const {
    return m_creation_time;
}
void OAICreateReferenceStoreResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateReferenceStoreResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateReferenceStoreResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

bool OAICreateReferenceStoreResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sse_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateReferenceStoreResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_creation_time_isValid && true;
}

} // namespace OpenAPI
