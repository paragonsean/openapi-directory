/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEncryptionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEncryptionType::OAIEncryptionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEncryptionType::OAIEncryptionType() {
    this->initializeModel();
}

OAIEncryptionType::~OAIEncryptionType() {}

void OAIEncryptionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEncryptionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEncryptionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("KMS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEncryptionType::KMS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEncryptionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEncryptionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEncryptionType::KMS:
            val = "KMS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEncryptionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEncryptionType::eOAIEncryptionType OAIEncryptionType::getValue() const {
    return m_value;
}

void OAIEncryptionType::setValue(const OAIEncryptionType::eOAIEncryptionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEncryptionType::isSet() const {
    
    return m_value_isSet;
}

bool OAIEncryptionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
