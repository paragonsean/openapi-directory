/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartAnnotationImportJob_request.h
 *
 * 
 */

#ifndef OAIStartAnnotationImportJob_request_H
#define OAIStartAnnotationImportJob_request_H

#include <QJsonObject>

#include "OAIAnnotationImportItemSource.h"
#include "OAIStartAnnotationImportJob_request_formatOptions.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnnotationImportItemSource;
class OAIStartAnnotationImportJob_request_formatOptions;

class OAIStartAnnotationImportJob_request : public OAIObject {
public:
    OAIStartAnnotationImportJob_request();
    OAIStartAnnotationImportJob_request(QString json);
    ~OAIStartAnnotationImportJob_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationName() const;
    void setDestinationName(const QString &destination_name);
    bool is_destination_name_Set() const;
    bool is_destination_name_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList<OAIAnnotationImportItemSource> getItems() const;
    void setItems(const QList<OAIAnnotationImportItemSource> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIStartAnnotationImportJob_request_formatOptions getFormatOptions() const;
    void setFormatOptions(const OAIStartAnnotationImportJob_request_formatOptions &format_options);
    bool is_format_options_Set() const;
    bool is_format_options_Valid() const;

    bool isRunLeftNormalization() const;
    void setRunLeftNormalization(const bool &run_left_normalization);
    bool is_run_left_normalization_Set() const;
    bool is_run_left_normalization_Valid() const;

    QMap<QString, QString> getAnnotationFields() const;
    void setAnnotationFields(const QMap<QString, QString> &annotation_fields);
    bool is_annotation_fields_Set() const;
    bool is_annotation_fields_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_name;
    bool m_destination_name_isSet;
    bool m_destination_name_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList<OAIAnnotationImportItemSource> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIStartAnnotationImportJob_request_formatOptions m_format_options;
    bool m_format_options_isSet;
    bool m_format_options_isValid;

    bool m_run_left_normalization;
    bool m_run_left_normalization_isSet;
    bool m_run_left_normalization_isValid;

    QMap<QString, QString> m_annotation_fields;
    bool m_annotation_fields_isSet;
    bool m_annotation_fields_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartAnnotationImportJob_request)

#endif // OAIStartAnnotationImportJob_request_H
