/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReadSetImportJobItemStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReadSetImportJobItemStatus::OAIReadSetImportJobItemStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReadSetImportJobItemStatus::OAIReadSetImportJobItemStatus() {
    this->initializeModel();
}

OAIReadSetImportJobItemStatus::~OAIReadSetImportJobItemStatus() {}

void OAIReadSetImportJobItemStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReadSetImportJobItemStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReadSetImportJobItemStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NOT_STARTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadSetImportJobItemStatus::NOT_STARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadSetImportJobItemStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FINISHED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadSetImportJobItemStatus::FINISHED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadSetImportJobItemStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReadSetImportJobItemStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReadSetImportJobItemStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReadSetImportJobItemStatus::NOT_STARTED:
            val = "NOT_STARTED";
            break;
        case eOAIReadSetImportJobItemStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIReadSetImportJobItemStatus::FINISHED:
            val = "FINISHED";
            break;
        case eOAIReadSetImportJobItemStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReadSetImportJobItemStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReadSetImportJobItemStatus::eOAIReadSetImportJobItemStatus OAIReadSetImportJobItemStatus::getValue() const {
    return m_value;
}

void OAIReadSetImportJobItemStatus::setValue(const OAIReadSetImportJobItemStatus::eOAIReadSetImportJobItemStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReadSetImportJobItemStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIReadSetImportJobItemStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
