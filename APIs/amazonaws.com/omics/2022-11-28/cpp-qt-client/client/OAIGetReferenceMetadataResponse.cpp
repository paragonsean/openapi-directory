/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetReferenceMetadataResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetReferenceMetadataResponse::OAIGetReferenceMetadataResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetReferenceMetadataResponse::OAIGetReferenceMetadataResponse() {
    this->initializeModel();
}

OAIGetReferenceMetadataResponse::~OAIGetReferenceMetadataResponse() {}

void OAIGetReferenceMetadataResponse::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_reference_store_id_isSet = false;
    m_reference_store_id_isValid = false;

    m_md5_isSet = false;
    m_md5_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_files_isSet = false;
    m_files_isValid = false;
}

void OAIGetReferenceMetadataResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetReferenceMetadataResponse::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_reference_store_id_isValid = ::OpenAPI::fromJsonValue(m_reference_store_id, json[QString("referenceStoreId")]);
    m_reference_store_id_isSet = !json[QString("referenceStoreId")].isNull() && m_reference_store_id_isValid;

    m_md5_isValid = ::OpenAPI::fromJsonValue(m_md5, json[QString("md5")]);
    m_md5_isSet = !json[QString("md5")].isNull() && m_md5_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;
}

QString OAIGetReferenceMetadataResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetReferenceMetadataResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_reference_store_id_isSet) {
        obj.insert(QString("referenceStoreId"), ::OpenAPI::toJsonValue(m_reference_store_id));
    }
    if (m_md5_isSet) {
        obj.insert(QString("md5"), ::OpenAPI::toJsonValue(m_md5));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_files.isSet()) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    return obj;
}

QString OAIGetReferenceMetadataResponse::getId() const {
    return m_id;
}
void OAIGetReferenceMetadataResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetReferenceMetadataResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGetReferenceMetadataResponse::getArn() const {
    return m_arn;
}
void OAIGetReferenceMetadataResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIGetReferenceMetadataResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIGetReferenceMetadataResponse::getReferenceStoreId() const {
    return m_reference_store_id;
}
void OAIGetReferenceMetadataResponse::setReferenceStoreId(const QString &reference_store_id) {
    m_reference_store_id = reference_store_id;
    m_reference_store_id_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_reference_store_id_Set() const{
    return m_reference_store_id_isSet;
}

bool OAIGetReferenceMetadataResponse::is_reference_store_id_Valid() const{
    return m_reference_store_id_isValid;
}

QString OAIGetReferenceMetadataResponse::getMd5() const {
    return m_md5;
}
void OAIGetReferenceMetadataResponse::setMd5(const QString &md5) {
    m_md5 = md5;
    m_md5_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_md5_Set() const{
    return m_md5_isSet;
}

bool OAIGetReferenceMetadataResponse::is_md5_Valid() const{
    return m_md5_isValid;
}

OAIReferenceStatus OAIGetReferenceMetadataResponse::getStatus() const {
    return m_status;
}
void OAIGetReferenceMetadataResponse::setStatus(const OAIReferenceStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetReferenceMetadataResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetReferenceMetadataResponse::getName() const {
    return m_name;
}
void OAIGetReferenceMetadataResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetReferenceMetadataResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetReferenceMetadataResponse::getDescription() const {
    return m_description;
}
void OAIGetReferenceMetadataResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetReferenceMetadataResponse::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIGetReferenceMetadataResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIGetReferenceMetadataResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIGetReferenceMetadataResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIGetReferenceMetadataResponse::getUpdateTime() const {
    return m_update_time;
}
void OAIGetReferenceMetadataResponse::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGetReferenceMetadataResponse::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIGetReferenceMetadataResponse_files OAIGetReferenceMetadataResponse::getFiles() const {
    return m_files;
}
void OAIGetReferenceMetadataResponse::setFiles(const OAIGetReferenceMetadataResponse_files &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIGetReferenceMetadataResponse::is_files_Set() const{
    return m_files_isSet;
}

bool OAIGetReferenceMetadataResponse::is_files_Valid() const{
    return m_files_isValid;
}

bool OAIGetReferenceMetadataResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_files.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetReferenceMetadataResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_reference_store_id_isValid && m_md5_isValid && m_creation_time_isValid && m_update_time_isValid && true;
}

} // namespace OpenAPI
