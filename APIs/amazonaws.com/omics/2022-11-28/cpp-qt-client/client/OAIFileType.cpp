/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileType::OAIFileType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileType::OAIFileType() {
    this->initializeModel();
}

OAIFileType::~OAIFileType() {}

void OAIFileType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFileType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFileType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FASTQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::FASTQ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::BAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::CRAM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFileType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFileType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFileType::FASTQ:
            val = "FASTQ";
            break;
        case eOAIFileType::BAM:
            val = "BAM";
            break;
        case eOAIFileType::CRAM:
            val = "CRAM";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFileType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFileType::eOAIFileType OAIFileType::getValue() const {
    return m_value;
}

void OAIFileType::setValue(const OAIFileType::eOAIFileType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFileType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFileType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
