/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReadOptions.h
 *
 * Read options for an annotation import job.
 */

#ifndef OAIReadOptions_H
#define OAIReadOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReadOptions : public OAIObject {
public:
    OAIReadOptions();
    OAIReadOptions(QString json);
    ~OAIReadOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSep() const;
    void setSep(const QString &sep);
    bool is_sep_Set() const;
    bool is_sep_Valid() const;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    QString getQuote() const;
    void setQuote(const QString &quote);
    bool is_quote_Set() const;
    bool is_quote_Valid() const;

    bool getQuoteAll() const;
    void setQuoteAll(const bool &quote_all);
    bool is_quote_all_Set() const;
    bool is_quote_all_Valid() const;

    QString getEscape() const;
    void setEscape(const QString &escape);
    bool is_escape_Set() const;
    bool is_escape_Valid() const;

    bool getEscapeQuotes() const;
    void setEscapeQuotes(const bool &escape_quotes);
    bool is_escape_quotes_Set() const;
    bool is_escape_quotes_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    bool getHeader() const;
    void setHeader(const bool &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getLineSep() const;
    void setLineSep(const QString &line_sep);
    bool is_line_sep_Set() const;
    bool is_line_sep_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_sep;
    bool m_sep_isSet;
    bool m_sep_isValid;

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    QString m_quote;
    bool m_quote_isSet;
    bool m_quote_isValid;

    bool m_quote_all;
    bool m_quote_all_isSet;
    bool m_quote_all_isValid;

    QString m_escape;
    bool m_escape_isSet;
    bool m_escape_isValid;

    bool m_escape_quotes;
    bool m_escape_quotes_isSet;
    bool m_escape_quotes_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    bool m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_line_sep;
    bool m_line_sep_isSet;
    bool m_line_sep_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReadOptions)

#endif // OAIReadOptions_H
