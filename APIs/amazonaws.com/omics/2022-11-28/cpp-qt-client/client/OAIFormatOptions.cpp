/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormatOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormatOptions::OAIFormatOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormatOptions::OAIFormatOptions() {
    this->initializeModel();
}

OAIFormatOptions::~OAIFormatOptions() {}

void OAIFormatOptions::initializeModel() {

    m_tsv_options_isSet = false;
    m_tsv_options_isValid = false;

    m_vcf_options_isSet = false;
    m_vcf_options_isValid = false;
}

void OAIFormatOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFormatOptions::fromJsonObject(QJsonObject json) {

    m_tsv_options_isValid = ::OpenAPI::fromJsonValue(m_tsv_options, json[QString("tsvOptions")]);
    m_tsv_options_isSet = !json[QString("tsvOptions")].isNull() && m_tsv_options_isValid;

    m_vcf_options_isValid = ::OpenAPI::fromJsonValue(m_vcf_options, json[QString("vcfOptions")]);
    m_vcf_options_isSet = !json[QString("vcfOptions")].isNull() && m_vcf_options_isValid;
}

QString OAIFormatOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFormatOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_tsv_options.isSet()) {
        obj.insert(QString("tsvOptions"), ::OpenAPI::toJsonValue(m_tsv_options));
    }
    if (m_vcf_options.isSet()) {
        obj.insert(QString("vcfOptions"), ::OpenAPI::toJsonValue(m_vcf_options));
    }
    return obj;
}

OAIStartAnnotationImportJob_request_formatOptions_tsvOptions OAIFormatOptions::getTsvOptions() const {
    return m_tsv_options;
}
void OAIFormatOptions::setTsvOptions(const OAIStartAnnotationImportJob_request_formatOptions_tsvOptions &tsv_options) {
    m_tsv_options = tsv_options;
    m_tsv_options_isSet = true;
}

bool OAIFormatOptions::is_tsv_options_Set() const{
    return m_tsv_options_isSet;
}

bool OAIFormatOptions::is_tsv_options_Valid() const{
    return m_tsv_options_isValid;
}

OAIStartAnnotationImportJob_request_formatOptions_vcfOptions OAIFormatOptions::getVcfOptions() const {
    return m_vcf_options;
}
void OAIFormatOptions::setVcfOptions(const OAIStartAnnotationImportJob_request_formatOptions_vcfOptions &vcf_options) {
    m_vcf_options = vcf_options;
    m_vcf_options_isSet = true;
}

bool OAIFormatOptions::is_vcf_options_Set() const{
    return m_vcf_options_isSet;
}

bool OAIFormatOptions::is_vcf_options_Valid() const{
    return m_vcf_options_isValid;
}

bool OAIFormatOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tsv_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vcf_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFormatOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
