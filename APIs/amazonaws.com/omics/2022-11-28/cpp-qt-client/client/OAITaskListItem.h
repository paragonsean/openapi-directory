/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskListItem.h
 *
 * A workflow run task.
 */

#ifndef OAITaskListItem_H
#define OAITaskListItem_H

#include <QJsonObject>

#include "OAITaskStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskListItem : public OAIObject {
public:
    OAITaskListItem();
    OAITaskListItem(QString json);
    ~OAITaskListItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    OAITaskStatus getStatus() const;
    void setStatus(const OAITaskStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getCpus() const;
    void setCpus(const qint32 &cpus);
    bool is_cpus_Set() const;
    bool is_cpus_Valid() const;

    qint32 getMemory() const;
    void setMemory(const qint32 &memory);
    bool is_memory_Set() const;
    bool is_memory_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getStopTime() const;
    void setStopTime(const QDateTime &stop_time);
    bool is_stop_time_Set() const;
    bool is_stop_time_Valid() const;

    qint32 getGpus() const;
    void setGpus(const qint32 &gpus);
    bool is_gpus_Set() const;
    bool is_gpus_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    OAITaskStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_cpus;
    bool m_cpus_isSet;
    bool m_cpus_isValid;

    qint32 m_memory;
    bool m_memory_isSet;
    bool m_memory_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_stop_time;
    bool m_stop_time_isSet;
    bool m_stop_time_isValid;

    qint32 m_gpus;
    bool m_gpus_isSet;
    bool m_gpus_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskListItem)

#endif // OAITaskListItem_H
