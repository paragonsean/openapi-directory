/*
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.Accelerators;
import org.openapitools.client.model.RunLogLevel;
import org.openapitools.client.model.RunStatus;
import org.openapitools.client.model.WorkflowType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetRunResponse
 */
public class GetRunResponseTest {
    private final GetRunResponse model = new GetRunResponse();

    /**
     * Model tests for GetRunResponse
     */
    @Test
    public void testGetRunResponse() {
        // TODO: test GetRunResponse
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'workflowId'
     */
    @Test
    public void workflowIdTest() {
        // TODO: test workflowId
    }

    /**
     * Test the property 'workflowType'
     */
    @Test
    public void workflowTypeTest() {
        // TODO: test workflowType
    }

    /**
     * Test the property 'runId'
     */
    @Test
    public void runIdTest() {
        // TODO: test runId
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'runGroupId'
     */
    @Test
    public void runGroupIdTest() {
        // TODO: test runGroupId
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'definition'
     */
    @Test
    public void definitionTest() {
        // TODO: test definition
    }

    /**
     * Test the property 'digest'
     */
    @Test
    public void digestTest() {
        // TODO: test digest
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'storageCapacity'
     */
    @Test
    public void storageCapacityTest() {
        // TODO: test storageCapacity
    }

    /**
     * Test the property 'outputUri'
     */
    @Test
    public void outputUriTest() {
        // TODO: test outputUri
    }

    /**
     * Test the property 'logLevel'
     */
    @Test
    public void logLevelTest() {
        // TODO: test logLevel
    }

    /**
     * Test the property 'resourceDigests'
     */
    @Test
    public void resourceDigestsTest() {
        // TODO: test resourceDigests
    }

    /**
     * Test the property 'startedBy'
     */
    @Test
    public void startedByTest() {
        // TODO: test startedBy
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'stopTime'
     */
    @Test
    public void stopTimeTest() {
        // TODO: test stopTime
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'accelerators'
     */
    @Test
    public void acceleratorsTest() {
        // TODO: test accelerators
    }

}
