/*
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.Accelerators;
import org.openapitools.client.model.RunLogLevel;
import org.openapitools.client.model.RunStatus;
import org.openapitools.client.model.WorkflowType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetRunResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:59.133938-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetRunResponse {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RunStatus status;

  public static final String SERIALIZED_NAME_WORKFLOW_ID = "workflowId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_ID)
  private String workflowId;

  public static final String SERIALIZED_NAME_WORKFLOW_TYPE = "workflowType";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TYPE)
  private WorkflowType workflowType;

  public static final String SERIALIZED_NAME_RUN_ID = "runId";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private String runId;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RUN_GROUP_ID = "runGroupId";
  @SerializedName(SERIALIZED_NAME_RUN_GROUP_ID)
  private String runGroupId;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private String definition;

  public static final String SERIALIZED_NAME_DIGEST = "digest";
  @SerializedName(SERIALIZED_NAME_DIGEST)
  private String digest;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Object parameters;

  public static final String SERIALIZED_NAME_STORAGE_CAPACITY = "storageCapacity";
  @SerializedName(SERIALIZED_NAME_STORAGE_CAPACITY)
  private Integer storageCapacity;

  public static final String SERIALIZED_NAME_OUTPUT_URI = "outputUri";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URI)
  private String outputUri;

  public static final String SERIALIZED_NAME_LOG_LEVEL = "logLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private RunLogLevel logLevel;

  public static final String SERIALIZED_NAME_RESOURCE_DIGESTS = "resourceDigests";
  @SerializedName(SERIALIZED_NAME_RESOURCE_DIGESTS)
  private Map resourceDigests;

  public static final String SERIALIZED_NAME_STARTED_BY = "startedBy";
  @SerializedName(SERIALIZED_NAME_STARTED_BY)
  private String startedBy;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_STOP_TIME = "stopTime";
  @SerializedName(SERIALIZED_NAME_STOP_TIME)
  private OffsetDateTime stopTime;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_ACCELERATORS = "accelerators";
  @SerializedName(SERIALIZED_NAME_ACCELERATORS)
  private Accelerators accelerators;

  public GetRunResponse() {
  }

  public GetRunResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public GetRunResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetRunResponse status(RunStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RunStatus getStatus() {
    return status;
  }

  public void setStatus(RunStatus status) {
    this.status = status;
  }


  public GetRunResponse workflowId(String workflowId) {
    this.workflowId = workflowId;
    return this;
  }

  /**
   * Get workflowId
   * @return workflowId
   */
  @javax.annotation.Nullable
  public String getWorkflowId() {
    return workflowId;
  }

  public void setWorkflowId(String workflowId) {
    this.workflowId = workflowId;
  }


  public GetRunResponse workflowType(WorkflowType workflowType) {
    this.workflowType = workflowType;
    return this;
  }

  /**
   * Get workflowType
   * @return workflowType
   */
  @javax.annotation.Nullable
  public WorkflowType getWorkflowType() {
    return workflowType;
  }

  public void setWorkflowType(WorkflowType workflowType) {
    this.workflowType = workflowType;
  }


  public GetRunResponse runId(String runId) {
    this.runId = runId;
    return this;
  }

  /**
   * Get runId
   * @return runId
   */
  @javax.annotation.Nullable
  public String getRunId() {
    return runId;
  }

  public void setRunId(String runId) {
    this.runId = runId;
  }


  public GetRunResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public GetRunResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetRunResponse runGroupId(String runGroupId) {
    this.runGroupId = runGroupId;
    return this;
  }

  /**
   * Get runGroupId
   * @return runGroupId
   */
  @javax.annotation.Nullable
  public String getRunGroupId() {
    return runGroupId;
  }

  public void setRunGroupId(String runGroupId) {
    this.runGroupId = runGroupId;
  }


  public GetRunResponse priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public GetRunResponse definition(String definition) {
    this.definition = definition;
    return this;
  }

  /**
   * Get definition
   * @return definition
   */
  @javax.annotation.Nullable
  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public GetRunResponse digest(String digest) {
    this.digest = digest;
    return this;
  }

  /**
   * Get digest
   * @return digest
   */
  @javax.annotation.Nullable
  public String getDigest() {
    return digest;
  }

  public void setDigest(String digest) {
    this.digest = digest;
  }


  public GetRunResponse parameters(Object parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Object getParameters() {
    return parameters;
  }

  public void setParameters(Object parameters) {
    this.parameters = parameters;
  }


  public GetRunResponse storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

  /**
   * Get storageCapacity
   * @return storageCapacity
   */
  @javax.annotation.Nullable
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }


  public GetRunResponse outputUri(String outputUri) {
    this.outputUri = outputUri;
    return this;
  }

  /**
   * Get outputUri
   * @return outputUri
   */
  @javax.annotation.Nullable
  public String getOutputUri() {
    return outputUri;
  }

  public void setOutputUri(String outputUri) {
    this.outputUri = outputUri;
  }


  public GetRunResponse logLevel(RunLogLevel logLevel) {
    this.logLevel = logLevel;
    return this;
  }

  /**
   * Get logLevel
   * @return logLevel
   */
  @javax.annotation.Nullable
  public RunLogLevel getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(RunLogLevel logLevel) {
    this.logLevel = logLevel;
  }


  public GetRunResponse resourceDigests(Map resourceDigests) {
    this.resourceDigests = resourceDigests;
    return this;
  }

  /**
   * Get resourceDigests
   * @return resourceDigests
   */
  @javax.annotation.Nullable
  public Map getResourceDigests() {
    return resourceDigests;
  }

  public void setResourceDigests(Map resourceDigests) {
    this.resourceDigests = resourceDigests;
  }


  public GetRunResponse startedBy(String startedBy) {
    this.startedBy = startedBy;
    return this;
  }

  /**
   * Get startedBy
   * @return startedBy
   */
  @javax.annotation.Nullable
  public String getStartedBy() {
    return startedBy;
  }

  public void setStartedBy(String startedBy) {
    this.startedBy = startedBy;
  }


  public GetRunResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetRunResponse startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetRunResponse stopTime(OffsetDateTime stopTime) {
    this.stopTime = stopTime;
    return this;
  }

  /**
   * Get stopTime
   * @return stopTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStopTime() {
    return stopTime;
  }

  public void setStopTime(OffsetDateTime stopTime) {
    this.stopTime = stopTime;
  }


  public GetRunResponse statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public GetRunResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public GetRunResponse accelerators(Accelerators accelerators) {
    this.accelerators = accelerators;
    return this;
  }

  /**
   * Get accelerators
   * @return accelerators
   */
  @javax.annotation.Nullable
  public Accelerators getAccelerators() {
    return accelerators;
  }

  public void setAccelerators(Accelerators accelerators) {
    this.accelerators = accelerators;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRunResponse getRunResponse = (GetRunResponse) o;
    return Objects.equals(this.arn, getRunResponse.arn) &&
        Objects.equals(this.id, getRunResponse.id) &&
        Objects.equals(this.status, getRunResponse.status) &&
        Objects.equals(this.workflowId, getRunResponse.workflowId) &&
        Objects.equals(this.workflowType, getRunResponse.workflowType) &&
        Objects.equals(this.runId, getRunResponse.runId) &&
        Objects.equals(this.roleArn, getRunResponse.roleArn) &&
        Objects.equals(this.name, getRunResponse.name) &&
        Objects.equals(this.runGroupId, getRunResponse.runGroupId) &&
        Objects.equals(this.priority, getRunResponse.priority) &&
        Objects.equals(this.definition, getRunResponse.definition) &&
        Objects.equals(this.digest, getRunResponse.digest) &&
        Objects.equals(this.parameters, getRunResponse.parameters) &&
        Objects.equals(this.storageCapacity, getRunResponse.storageCapacity) &&
        Objects.equals(this.outputUri, getRunResponse.outputUri) &&
        Objects.equals(this.logLevel, getRunResponse.logLevel) &&
        Objects.equals(this.resourceDigests, getRunResponse.resourceDigests) &&
        Objects.equals(this.startedBy, getRunResponse.startedBy) &&
        Objects.equals(this.creationTime, getRunResponse.creationTime) &&
        Objects.equals(this.startTime, getRunResponse.startTime) &&
        Objects.equals(this.stopTime, getRunResponse.stopTime) &&
        Objects.equals(this.statusMessage, getRunResponse.statusMessage) &&
        Objects.equals(this.tags, getRunResponse.tags) &&
        Objects.equals(this.accelerators, getRunResponse.accelerators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, id, status, workflowId, workflowType, runId, roleArn, name, runGroupId, priority, definition, digest, parameters, storageCapacity, outputUri, logLevel, resourceDigests, startedBy, creationTime, startTime, stopTime, statusMessage, tags, accelerators);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRunResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    workflowType: ").append(toIndentedString(workflowType)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    runGroupId: ").append(toIndentedString(runGroupId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    digest: ").append(toIndentedString(digest)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    outputUri: ").append(toIndentedString(outputUri)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    resourceDigests: ").append(toIndentedString(resourceDigests)).append("\n");
    sb.append("    startedBy: ").append(toIndentedString(startedBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    stopTime: ").append(toIndentedString(stopTime)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    accelerators: ").append(toIndentedString(accelerators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("id");
    openapiFields.add("status");
    openapiFields.add("workflowId");
    openapiFields.add("workflowType");
    openapiFields.add("runId");
    openapiFields.add("roleArn");
    openapiFields.add("name");
    openapiFields.add("runGroupId");
    openapiFields.add("priority");
    openapiFields.add("definition");
    openapiFields.add("digest");
    openapiFields.add("parameters");
    openapiFields.add("storageCapacity");
    openapiFields.add("outputUri");
    openapiFields.add("logLevel");
    openapiFields.add("resourceDigests");
    openapiFields.add("startedBy");
    openapiFields.add("creationTime");
    openapiFields.add("startTime");
    openapiFields.add("stopTime");
    openapiFields.add("statusMessage");
    openapiFields.add("tags");
    openapiFields.add("accelerators");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetRunResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetRunResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetRunResponse is not found in the empty JSON string", GetRunResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetRunResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetRunResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        RunStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `workflowId`
      if (jsonObj.get("workflowId") != null && !jsonObj.get("workflowId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("workflowId"));
      }
      // validate the optional field `workflowType`
      if (jsonObj.get("workflowType") != null && !jsonObj.get("workflowType").isJsonNull()) {
        WorkflowType.validateJsonElement(jsonObj.get("workflowType"));
      }
      // validate the optional field `runId`
      if (jsonObj.get("runId") != null && !jsonObj.get("runId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("runId"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `runGroupId`
      if (jsonObj.get("runGroupId") != null && !jsonObj.get("runGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("runGroupId"));
      }
      // validate the optional field `priority`
      if (jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("priority"));
      }
      // validate the optional field `definition`
      if (jsonObj.get("definition") != null && !jsonObj.get("definition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("definition"));
      }
      // validate the optional field `digest`
      if (jsonObj.get("digest") != null && !jsonObj.get("digest").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("digest"));
      }
      // validate the optional field `parameters`
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("parameters"));
      }
      // validate the optional field `storageCapacity`
      if (jsonObj.get("storageCapacity") != null && !jsonObj.get("storageCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("storageCapacity"));
      }
      // validate the optional field `outputUri`
      if (jsonObj.get("outputUri") != null && !jsonObj.get("outputUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("outputUri"));
      }
      // validate the optional field `logLevel`
      if (jsonObj.get("logLevel") != null && !jsonObj.get("logLevel").isJsonNull()) {
        RunLogLevel.validateJsonElement(jsonObj.get("logLevel"));
      }
      // validate the optional field `resourceDigests`
      if (jsonObj.get("resourceDigests") != null && !jsonObj.get("resourceDigests").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("resourceDigests"));
      }
      // validate the optional field `startedBy`
      if (jsonObj.get("startedBy") != null && !jsonObj.get("startedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("startedBy"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
      // validate the optional field `stopTime`
      if (jsonObj.get("stopTime") != null && !jsonObj.get("stopTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("stopTime"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `accelerators`
      if (jsonObj.get("accelerators") != null && !jsonObj.get("accelerators").isJsonNull()) {
        Accelerators.validateJsonElement(jsonObj.get("accelerators"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetRunResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetRunResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetRunResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetRunResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetRunResponse>() {
           @Override
           public void write(JsonWriter out, GetRunResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetRunResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetRunResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetRunResponse
   * @throws IOException if the JSON string is invalid with respect to GetRunResponse
   */
  public static GetRunResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetRunResponse.class);
  }

  /**
   * Convert an instance of GetRunResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

