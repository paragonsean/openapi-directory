/*
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreationType;
import org.openapitools.client.model.FileType;
import org.openapitools.client.model.GetReadSetMetadataResponseFiles;
import org.openapitools.client.model.GetReadSetMetadataResponseSequenceInformation;
import org.openapitools.client.model.ReadSetStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetReadSetMetadataResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:59.133938-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetReadSetMetadataResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_SEQUENCE_STORE_ID = "sequenceStoreId";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_STORE_ID)
  private String sequenceStoreId;

  public static final String SERIALIZED_NAME_SUBJECT_ID = "subjectId";
  @SerializedName(SERIALIZED_NAME_SUBJECT_ID)
  private String subjectId;

  public static final String SERIALIZED_NAME_SAMPLE_ID = "sampleId";
  @SerializedName(SERIALIZED_NAME_SAMPLE_ID)
  private String sampleId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ReadSetStatus status;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FILE_TYPE = "fileType";
  @SerializedName(SERIALIZED_NAME_FILE_TYPE)
  private FileType fileType;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_SEQUENCE_INFORMATION = "sequenceInformation";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_INFORMATION)
  private GetReadSetMetadataResponseSequenceInformation sequenceInformation;

  public static final String SERIALIZED_NAME_REFERENCE_ARN = "referenceArn";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ARN)
  private String referenceArn;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private GetReadSetMetadataResponseFiles files;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_CREATION_TYPE = "creationType";
  @SerializedName(SERIALIZED_NAME_CREATION_TYPE)
  private CreationType creationType;

  public GetReadSetMetadataResponse() {
  }

  public GetReadSetMetadataResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetReadSetMetadataResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public GetReadSetMetadataResponse sequenceStoreId(String sequenceStoreId) {
    this.sequenceStoreId = sequenceStoreId;
    return this;
  }

  /**
   * Get sequenceStoreId
   * @return sequenceStoreId
   */
  @javax.annotation.Nonnull
  public String getSequenceStoreId() {
    return sequenceStoreId;
  }

  public void setSequenceStoreId(String sequenceStoreId) {
    this.sequenceStoreId = sequenceStoreId;
  }


  public GetReadSetMetadataResponse subjectId(String subjectId) {
    this.subjectId = subjectId;
    return this;
  }

  /**
   * Get subjectId
   * @return subjectId
   */
  @javax.annotation.Nullable
  public String getSubjectId() {
    return subjectId;
  }

  public void setSubjectId(String subjectId) {
    this.subjectId = subjectId;
  }


  public GetReadSetMetadataResponse sampleId(String sampleId) {
    this.sampleId = sampleId;
    return this;
  }

  /**
   * Get sampleId
   * @return sampleId
   */
  @javax.annotation.Nullable
  public String getSampleId() {
    return sampleId;
  }

  public void setSampleId(String sampleId) {
    this.sampleId = sampleId;
  }


  public GetReadSetMetadataResponse status(ReadSetStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public ReadSetStatus getStatus() {
    return status;
  }

  public void setStatus(ReadSetStatus status) {
    this.status = status;
  }


  public GetReadSetMetadataResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetReadSetMetadataResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetReadSetMetadataResponse fileType(FileType fileType) {
    this.fileType = fileType;
    return this;
  }

  /**
   * Get fileType
   * @return fileType
   */
  @javax.annotation.Nonnull
  public FileType getFileType() {
    return fileType;
  }

  public void setFileType(FileType fileType) {
    this.fileType = fileType;
  }


  public GetReadSetMetadataResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetReadSetMetadataResponse sequenceInformation(GetReadSetMetadataResponseSequenceInformation sequenceInformation) {
    this.sequenceInformation = sequenceInformation;
    return this;
  }

  /**
   * Get sequenceInformation
   * @return sequenceInformation
   */
  @javax.annotation.Nullable
  public GetReadSetMetadataResponseSequenceInformation getSequenceInformation() {
    return sequenceInformation;
  }

  public void setSequenceInformation(GetReadSetMetadataResponseSequenceInformation sequenceInformation) {
    this.sequenceInformation = sequenceInformation;
  }


  public GetReadSetMetadataResponse referenceArn(String referenceArn) {
    this.referenceArn = referenceArn;
    return this;
  }

  /**
   * Get referenceArn
   * @return referenceArn
   */
  @javax.annotation.Nullable
  public String getReferenceArn() {
    return referenceArn;
  }

  public void setReferenceArn(String referenceArn) {
    this.referenceArn = referenceArn;
  }


  public GetReadSetMetadataResponse files(GetReadSetMetadataResponseFiles files) {
    this.files = files;
    return this;
  }

  /**
   * Get files
   * @return files
   */
  @javax.annotation.Nullable
  public GetReadSetMetadataResponseFiles getFiles() {
    return files;
  }

  public void setFiles(GetReadSetMetadataResponseFiles files) {
    this.files = files;
  }


  public GetReadSetMetadataResponse statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public GetReadSetMetadataResponse creationType(CreationType creationType) {
    this.creationType = creationType;
    return this;
  }

  /**
   * Get creationType
   * @return creationType
   */
  @javax.annotation.Nullable
  public CreationType getCreationType() {
    return creationType;
  }

  public void setCreationType(CreationType creationType) {
    this.creationType = creationType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetReadSetMetadataResponse getReadSetMetadataResponse = (GetReadSetMetadataResponse) o;
    return Objects.equals(this.id, getReadSetMetadataResponse.id) &&
        Objects.equals(this.arn, getReadSetMetadataResponse.arn) &&
        Objects.equals(this.sequenceStoreId, getReadSetMetadataResponse.sequenceStoreId) &&
        Objects.equals(this.subjectId, getReadSetMetadataResponse.subjectId) &&
        Objects.equals(this.sampleId, getReadSetMetadataResponse.sampleId) &&
        Objects.equals(this.status, getReadSetMetadataResponse.status) &&
        Objects.equals(this.name, getReadSetMetadataResponse.name) &&
        Objects.equals(this.description, getReadSetMetadataResponse.description) &&
        Objects.equals(this.fileType, getReadSetMetadataResponse.fileType) &&
        Objects.equals(this.creationTime, getReadSetMetadataResponse.creationTime) &&
        Objects.equals(this.sequenceInformation, getReadSetMetadataResponse.sequenceInformation) &&
        Objects.equals(this.referenceArn, getReadSetMetadataResponse.referenceArn) &&
        Objects.equals(this.files, getReadSetMetadataResponse.files) &&
        Objects.equals(this.statusMessage, getReadSetMetadataResponse.statusMessage) &&
        Objects.equals(this.creationType, getReadSetMetadataResponse.creationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, arn, sequenceStoreId, subjectId, sampleId, status, name, description, fileType, creationTime, sequenceInformation, referenceArn, files, statusMessage, creationType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetReadSetMetadataResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    sequenceStoreId: ").append(toIndentedString(sequenceStoreId)).append("\n");
    sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
    sb.append("    sampleId: ").append(toIndentedString(sampleId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fileType: ").append(toIndentedString(fileType)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    sequenceInformation: ").append(toIndentedString(sequenceInformation)).append("\n");
    sb.append("    referenceArn: ").append(toIndentedString(referenceArn)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    creationType: ").append(toIndentedString(creationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("arn");
    openapiFields.add("sequenceStoreId");
    openapiFields.add("subjectId");
    openapiFields.add("sampleId");
    openapiFields.add("status");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("fileType");
    openapiFields.add("creationTime");
    openapiFields.add("sequenceInformation");
    openapiFields.add("referenceArn");
    openapiFields.add("files");
    openapiFields.add("statusMessage");
    openapiFields.add("creationType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("sequenceStoreId");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("fileType");
    openapiRequiredFields.add("creationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetReadSetMetadataResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetReadSetMetadataResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetReadSetMetadataResponse is not found in the empty JSON string", GetReadSetMetadataResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetReadSetMetadataResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetReadSetMetadataResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetReadSetMetadataResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `id`
      String.validateJsonElement(jsonObj.get("id"));
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the required field `sequenceStoreId`
      String.validateJsonElement(jsonObj.get("sequenceStoreId"));
      // validate the optional field `subjectId`
      if (jsonObj.get("subjectId") != null && !jsonObj.get("subjectId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("subjectId"));
      }
      // validate the optional field `sampleId`
      if (jsonObj.get("sampleId") != null && !jsonObj.get("sampleId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sampleId"));
      }
      // validate the required field `status`
      ReadSetStatus.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the required field `fileType`
      FileType.validateJsonElement(jsonObj.get("fileType"));
      // validate the required field `creationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      // validate the optional field `sequenceInformation`
      if (jsonObj.get("sequenceInformation") != null && !jsonObj.get("sequenceInformation").isJsonNull()) {
        GetReadSetMetadataResponseSequenceInformation.validateJsonElement(jsonObj.get("sequenceInformation"));
      }
      // validate the optional field `referenceArn`
      if (jsonObj.get("referenceArn") != null && !jsonObj.get("referenceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("referenceArn"));
      }
      // validate the optional field `files`
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull()) {
        GetReadSetMetadataResponseFiles.validateJsonElement(jsonObj.get("files"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `creationType`
      if (jsonObj.get("creationType") != null && !jsonObj.get("creationType").isJsonNull()) {
        CreationType.validateJsonElement(jsonObj.get("creationType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetReadSetMetadataResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetReadSetMetadataResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetReadSetMetadataResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetReadSetMetadataResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetReadSetMetadataResponse>() {
           @Override
           public void write(JsonWriter out, GetReadSetMetadataResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetReadSetMetadataResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetReadSetMetadataResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetReadSetMetadataResponse
   * @throws IOException if the JSON string is invalid with respect to GetReadSetMetadataResponse
   */
  public static GetReadSetMetadataResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetReadSetMetadataResponse.class);
  }

  /**
   * Convert an instance of GetReadSetMetadataResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

