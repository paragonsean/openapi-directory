/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonOmics);
  }
}(this, function(expect, AmazonOmics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonOmics.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('abortMultipartReadSetUpload', function() {
      it('should call abortMultipartReadSetUpload successfully', function(done) {
        //uncomment below and update the code to test abortMultipartReadSetUpload
        //instance.abortMultipartReadSetUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDeleteReadSet', function() {
      it('should call batchDeleteReadSet successfully', function(done) {
        //uncomment below and update the code to test batchDeleteReadSet
        //instance.batchDeleteReadSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelAnnotationImportJob', function() {
      it('should call cancelAnnotationImportJob successfully', function(done) {
        //uncomment below and update the code to test cancelAnnotationImportJob
        //instance.cancelAnnotationImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelRun', function() {
      it('should call cancelRun successfully', function(done) {
        //uncomment below and update the code to test cancelRun
        //instance.cancelRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelVariantImportJob', function() {
      it('should call cancelVariantImportJob successfully', function(done) {
        //uncomment below and update the code to test cancelVariantImportJob
        //instance.cancelVariantImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('completeMultipartReadSetUpload', function() {
      it('should call completeMultipartReadSetUpload successfully', function(done) {
        //uncomment below and update the code to test completeMultipartReadSetUpload
        //instance.completeMultipartReadSetUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAnnotationStore', function() {
      it('should call createAnnotationStore successfully', function(done) {
        //uncomment below and update the code to test createAnnotationStore
        //instance.createAnnotationStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMultipartReadSetUpload', function() {
      it('should call createMultipartReadSetUpload successfully', function(done) {
        //uncomment below and update the code to test createMultipartReadSetUpload
        //instance.createMultipartReadSetUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReferenceStore', function() {
      it('should call createReferenceStore successfully', function(done) {
        //uncomment below and update the code to test createReferenceStore
        //instance.createReferenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRunGroup', function() {
      it('should call createRunGroup successfully', function(done) {
        //uncomment below and update the code to test createRunGroup
        //instance.createRunGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSequenceStore', function() {
      it('should call createSequenceStore successfully', function(done) {
        //uncomment below and update the code to test createSequenceStore
        //instance.createSequenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVariantStore', function() {
      it('should call createVariantStore successfully', function(done) {
        //uncomment below and update the code to test createVariantStore
        //instance.createVariantStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWorkflow', function() {
      it('should call createWorkflow successfully', function(done) {
        //uncomment below and update the code to test createWorkflow
        //instance.createWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnnotationStore', function() {
      it('should call deleteAnnotationStore successfully', function(done) {
        //uncomment below and update the code to test deleteAnnotationStore
        //instance.deleteAnnotationStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReference', function() {
      it('should call deleteReference successfully', function(done) {
        //uncomment below and update the code to test deleteReference
        //instance.deleteReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReferenceStore', function() {
      it('should call deleteReferenceStore successfully', function(done) {
        //uncomment below and update the code to test deleteReferenceStore
        //instance.deleteReferenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRun', function() {
      it('should call deleteRun successfully', function(done) {
        //uncomment below and update the code to test deleteRun
        //instance.deleteRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRunGroup', function() {
      it('should call deleteRunGroup successfully', function(done) {
        //uncomment below and update the code to test deleteRunGroup
        //instance.deleteRunGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSequenceStore', function() {
      it('should call deleteSequenceStore successfully', function(done) {
        //uncomment below and update the code to test deleteSequenceStore
        //instance.deleteSequenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVariantStore', function() {
      it('should call deleteVariantStore successfully', function(done) {
        //uncomment below and update the code to test deleteVariantStore
        //instance.deleteVariantStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWorkflow', function() {
      it('should call deleteWorkflow successfully', function(done) {
        //uncomment below and update the code to test deleteWorkflow
        //instance.deleteWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnotationImportJob', function() {
      it('should call getAnnotationImportJob successfully', function(done) {
        //uncomment below and update the code to test getAnnotationImportJob
        //instance.getAnnotationImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnotationStore', function() {
      it('should call getAnnotationStore successfully', function(done) {
        //uncomment below and update the code to test getAnnotationStore
        //instance.getAnnotationStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadSet', function() {
      it('should call getReadSet successfully', function(done) {
        //uncomment below and update the code to test getReadSet
        //instance.getReadSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadSetActivationJob', function() {
      it('should call getReadSetActivationJob successfully', function(done) {
        //uncomment below and update the code to test getReadSetActivationJob
        //instance.getReadSetActivationJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadSetExportJob', function() {
      it('should call getReadSetExportJob successfully', function(done) {
        //uncomment below and update the code to test getReadSetExportJob
        //instance.getReadSetExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadSetImportJob', function() {
      it('should call getReadSetImportJob successfully', function(done) {
        //uncomment below and update the code to test getReadSetImportJob
        //instance.getReadSetImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadSetMetadata', function() {
      it('should call getReadSetMetadata successfully', function(done) {
        //uncomment below and update the code to test getReadSetMetadata
        //instance.getReadSetMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReference', function() {
      it('should call getReference successfully', function(done) {
        //uncomment below and update the code to test getReference
        //instance.getReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReferenceImportJob', function() {
      it('should call getReferenceImportJob successfully', function(done) {
        //uncomment below and update the code to test getReferenceImportJob
        //instance.getReferenceImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReferenceMetadata', function() {
      it('should call getReferenceMetadata successfully', function(done) {
        //uncomment below and update the code to test getReferenceMetadata
        //instance.getReferenceMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReferenceStore', function() {
      it('should call getReferenceStore successfully', function(done) {
        //uncomment below and update the code to test getReferenceStore
        //instance.getReferenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRun', function() {
      it('should call getRun successfully', function(done) {
        //uncomment below and update the code to test getRun
        //instance.getRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRunGroup', function() {
      it('should call getRunGroup successfully', function(done) {
        //uncomment below and update the code to test getRunGroup
        //instance.getRunGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRunTask', function() {
      it('should call getRunTask successfully', function(done) {
        //uncomment below and update the code to test getRunTask
        //instance.getRunTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSequenceStore', function() {
      it('should call getSequenceStore successfully', function(done) {
        //uncomment below and update the code to test getSequenceStore
        //instance.getSequenceStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVariantImportJob', function() {
      it('should call getVariantImportJob successfully', function(done) {
        //uncomment below and update the code to test getVariantImportJob
        //instance.getVariantImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVariantStore', function() {
      it('should call getVariantStore successfully', function(done) {
        //uncomment below and update the code to test getVariantStore
        //instance.getVariantStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkflow', function() {
      it('should call getWorkflow successfully', function(done) {
        //uncomment below and update the code to test getWorkflow
        //instance.getWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAnnotationImportJobs', function() {
      it('should call listAnnotationImportJobs successfully', function(done) {
        //uncomment below and update the code to test listAnnotationImportJobs
        //instance.listAnnotationImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAnnotationStores', function() {
      it('should call listAnnotationStores successfully', function(done) {
        //uncomment below and update the code to test listAnnotationStores
        //instance.listAnnotationStores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMultipartReadSetUploads', function() {
      it('should call listMultipartReadSetUploads successfully', function(done) {
        //uncomment below and update the code to test listMultipartReadSetUploads
        //instance.listMultipartReadSetUploads(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadSetActivationJobs', function() {
      it('should call listReadSetActivationJobs successfully', function(done) {
        //uncomment below and update the code to test listReadSetActivationJobs
        //instance.listReadSetActivationJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadSetExportJobs', function() {
      it('should call listReadSetExportJobs successfully', function(done) {
        //uncomment below and update the code to test listReadSetExportJobs
        //instance.listReadSetExportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadSetImportJobs', function() {
      it('should call listReadSetImportJobs successfully', function(done) {
        //uncomment below and update the code to test listReadSetImportJobs
        //instance.listReadSetImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadSetUploadParts', function() {
      it('should call listReadSetUploadParts successfully', function(done) {
        //uncomment below and update the code to test listReadSetUploadParts
        //instance.listReadSetUploadParts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadSets', function() {
      it('should call listReadSets successfully', function(done) {
        //uncomment below and update the code to test listReadSets
        //instance.listReadSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReferenceImportJobs', function() {
      it('should call listReferenceImportJobs successfully', function(done) {
        //uncomment below and update the code to test listReferenceImportJobs
        //instance.listReferenceImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReferenceStores', function() {
      it('should call listReferenceStores successfully', function(done) {
        //uncomment below and update the code to test listReferenceStores
        //instance.listReferenceStores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReferences', function() {
      it('should call listReferences successfully', function(done) {
        //uncomment below and update the code to test listReferences
        //instance.listReferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRunGroups', function() {
      it('should call listRunGroups successfully', function(done) {
        //uncomment below and update the code to test listRunGroups
        //instance.listRunGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRunTasks', function() {
      it('should call listRunTasks successfully', function(done) {
        //uncomment below and update the code to test listRunTasks
        //instance.listRunTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRuns', function() {
      it('should call listRuns successfully', function(done) {
        //uncomment below and update the code to test listRuns
        //instance.listRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSequenceStores', function() {
      it('should call listSequenceStores successfully', function(done) {
        //uncomment below and update the code to test listSequenceStores
        //instance.listSequenceStores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVariantImportJobs', function() {
      it('should call listVariantImportJobs successfully', function(done) {
        //uncomment below and update the code to test listVariantImportJobs
        //instance.listVariantImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVariantStores', function() {
      it('should call listVariantStores successfully', function(done) {
        //uncomment below and update the code to test listVariantStores
        //instance.listVariantStores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWorkflows', function() {
      it('should call listWorkflows successfully', function(done) {
        //uncomment below and update the code to test listWorkflows
        //instance.listWorkflows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startAnnotationImportJob', function() {
      it('should call startAnnotationImportJob successfully', function(done) {
        //uncomment below and update the code to test startAnnotationImportJob
        //instance.startAnnotationImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startReadSetActivationJob', function() {
      it('should call startReadSetActivationJob successfully', function(done) {
        //uncomment below and update the code to test startReadSetActivationJob
        //instance.startReadSetActivationJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startReadSetExportJob', function() {
      it('should call startReadSetExportJob successfully', function(done) {
        //uncomment below and update the code to test startReadSetExportJob
        //instance.startReadSetExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startReadSetImportJob', function() {
      it('should call startReadSetImportJob successfully', function(done) {
        //uncomment below and update the code to test startReadSetImportJob
        //instance.startReadSetImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startReferenceImportJob', function() {
      it('should call startReferenceImportJob successfully', function(done) {
        //uncomment below and update the code to test startReferenceImportJob
        //instance.startReferenceImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startRun', function() {
      it('should call startRun successfully', function(done) {
        //uncomment below and update the code to test startRun
        //instance.startRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startVariantImportJob', function() {
      it('should call startVariantImportJob successfully', function(done) {
        //uncomment below and update the code to test startVariantImportJob
        //instance.startVariantImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnnotationStore', function() {
      it('should call updateAnnotationStore successfully', function(done) {
        //uncomment below and update the code to test updateAnnotationStore
        //instance.updateAnnotationStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRunGroup', function() {
      it('should call updateRunGroup successfully', function(done) {
        //uncomment below and update the code to test updateRunGroup
        //instance.updateRunGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVariantStore', function() {
      it('should call updateVariantStore successfully', function(done) {
        //uncomment below and update the code to test updateVariantStore
        //instance.updateVariantStore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWorkflow', function() {
      it('should call updateWorkflow successfully', function(done) {
        //uncomment below and update the code to test updateWorkflow
        //instance.updateWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadReadSetPart', function() {
      it('should call uploadReadSetPart successfully', function(done) {
        //uncomment below and update the code to test uploadReadSetPart
        //instance.uploadReadSetPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
