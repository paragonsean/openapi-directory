/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonOmics);
  }
}(this, function(expect, AmazonOmics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonOmics.GetWorkflowResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetWorkflowResponse', function() {
    it('should create an instance of GetWorkflowResponse', function() {
      // uncomment below and update the code to test GetWorkflowResponse
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be.a(AmazonOmics.GetWorkflowResponse);
    });

    it('should have the property arn (base name: "arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property engine (base name: "engine")', function() {
      // uncomment below and update the code to test the property engine
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property definition (base name: "definition")', function() {
      // uncomment below and update the code to test the property definition
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property main (base name: "main")', function() {
      // uncomment below and update the code to test the property main
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property digest (base name: "digest")', function() {
      // uncomment below and update the code to test the property digest
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property parameterTemplate (base name: "parameterTemplate")', function() {
      // uncomment below and update the code to test the property parameterTemplate
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property storageCapacity (base name: "storageCapacity")', function() {
      // uncomment below and update the code to test the property storageCapacity
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property statusMessage (base name: "statusMessage")', function() {
      // uncomment below and update the code to test the property statusMessage
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

    it('should have the property accelerators (base name: "accelerators")', function() {
      // uncomment below and update the code to test the property accelerators
      //var instance = new AmazonOmics.GetWorkflowResponse();
      //expect(instance).to.be();
    });

  });

}));
