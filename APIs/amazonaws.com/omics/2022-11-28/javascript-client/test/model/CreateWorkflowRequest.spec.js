/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonOmics);
  }
}(this, function(expect, AmazonOmics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonOmics.CreateWorkflowRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateWorkflowRequest', function() {
    it('should create an instance of CreateWorkflowRequest', function() {
      // uncomment below and update the code to test CreateWorkflowRequest
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be.a(AmazonOmics.CreateWorkflowRequest);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property engine (base name: "engine")', function() {
      // uncomment below and update the code to test the property engine
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property definitionZip (base name: "definitionZip")', function() {
      // uncomment below and update the code to test the property definitionZip
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property definitionUri (base name: "definitionUri")', function() {
      // uncomment below and update the code to test the property definitionUri
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property main (base name: "main")', function() {
      // uncomment below and update the code to test the property main
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property parameterTemplate (base name: "parameterTemplate")', function() {
      // uncomment below and update the code to test the property parameterTemplate
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property storageCapacity (base name: "storageCapacity")', function() {
      // uncomment below and update the code to test the property storageCapacity
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "requestId")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

    it('should have the property accelerators (base name: "accelerators")', function() {
      // uncomment below and update the code to test the property accelerators
      //var instance = new AmazonOmics.CreateWorkflowRequest();
      //expect(instance).to.be();
    });

  });

}));
