/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnnotationType from './AnnotationType';

/**
 * The TsvStoreOptions model module.
 * @module model/TsvStoreOptions
 * @version 2022-11-28
 */
class TsvStoreOptions {
    /**
     * Constructs a new <code>TsvStoreOptions</code>.
     * File settings for a TSV store.
     * @alias module:model/TsvStoreOptions
     */
    constructor() { 
        
        TsvStoreOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TsvStoreOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TsvStoreOptions} obj Optional instance to populate.
     * @return {module:model/TsvStoreOptions} The populated <code>TsvStoreOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TsvStoreOptions();

            if (data.hasOwnProperty('annotationType')) {
                obj['annotationType'] = ApiClient.convertToType(data['annotationType'], AnnotationType);
            }
            if (data.hasOwnProperty('formatToHeader')) {
                obj['formatToHeader'] = ApiClient.convertToType(data['formatToHeader'], Object);
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TsvStoreOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TsvStoreOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `annotationType`
        if (data['annotationType']) { // data not null
          AnnotationType.validateJSON(data['annotationType']);
        }
        // validate the optional field `formatToHeader`
        if (data['formatToHeader']) { // data not null
          Object.validateJSON(data['formatToHeader']);
        }
        // validate the optional field `schema`
        if (data['schema']) { // data not null
          Array.validateJSON(data['schema']);
        }

        return true;
    }


}



/**
 * @member {module:model/AnnotationType} annotationType
 */
TsvStoreOptions.prototype['annotationType'] = undefined;

/**
 * @member {Object} formatToHeader
 */
TsvStoreOptions.prototype['formatToHeader'] = undefined;

/**
 * @member {Array} schema
 */
TsvStoreOptions.prototype['schema'] = undefined;






export default TsvStoreOptions;

