/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferenceImportJobItemStatus from './ReferenceImportJobItemStatus';

/**
 * The ImportReferenceSourceItem model module.
 * @module model/ImportReferenceSourceItem
 * @version 2022-11-28
 */
class ImportReferenceSourceItem {
    /**
     * Constructs a new <code>ImportReferenceSourceItem</code>.
     * An genome reference source.
     * @alias module:model/ImportReferenceSourceItem
     * @param status {module:model/ReferenceImportJobItemStatus} 
     */
    constructor(status) { 
        
        ImportReferenceSourceItem.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ImportReferenceSourceItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportReferenceSourceItem} obj Optional instance to populate.
     * @return {module:model/ImportReferenceSourceItem} The populated <code>ImportReferenceSourceItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportReferenceSourceItem();

            if (data.hasOwnProperty('sourceFile')) {
                obj['sourceFile'] = ApiClient.convertToType(data['sourceFile'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ReferenceImportJobItemStatus);
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportReferenceSourceItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportReferenceSourceItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportReferenceSourceItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `sourceFile`
        if (data['sourceFile']) { // data not null
          String.validateJSON(data['sourceFile']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ReferenceImportJobItemStatus.validateJSON(data['status']);
        }
        // validate the optional field `statusMessage`
        if (data['statusMessage']) { // data not null
          String.validateJSON(data['statusMessage']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}

ImportReferenceSourceItem.RequiredProperties = ["status"];

/**
 * @member {String} sourceFile
 */
ImportReferenceSourceItem.prototype['sourceFile'] = undefined;

/**
 * @member {module:model/ReferenceImportJobItemStatus} status
 */
ImportReferenceSourceItem.prototype['status'] = undefined;

/**
 * @member {String} statusMessage
 */
ImportReferenceSourceItem.prototype['statusMessage'] = undefined;

/**
 * @member {String} name
 */
ImportReferenceSourceItem.prototype['name'] = undefined;

/**
 * @member {String} description
 */
ImportReferenceSourceItem.prototype['description'] = undefined;

/**
 * @member {Object} tags
 */
ImportReferenceSourceItem.prototype['tags'] = undefined;






export default ImportReferenceSourceItem;

