/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReadSetBatchError model module.
 * @module model/ReadSetBatchError
 * @version 2022-11-28
 */
class ReadSetBatchError {
    /**
     * Constructs a new <code>ReadSetBatchError</code>.
     * An error from a batch read set operation.
     * @alias module:model/ReadSetBatchError
     * @param id {String} 
     * @param code {String} 
     * @param message {String} 
     */
    constructor(id, code, message) { 
        
        ReadSetBatchError.initialize(this, id, code, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, code, message) { 
        obj['id'] = id;
        obj['code'] = code;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>ReadSetBatchError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReadSetBatchError} obj Optional instance to populate.
     * @return {module:model/ReadSetBatchError} The populated <code>ReadSetBatchError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReadSetBatchError();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReadSetBatchError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReadSetBatchError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReadSetBatchError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `code`
        if (data['code']) { // data not null
          String.validateJSON(data['code']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          String.validateJSON(data['message']);
        }

        return true;
    }


}

ReadSetBatchError.RequiredProperties = ["id", "code", "message"];

/**
 * @member {String} id
 */
ReadSetBatchError.prototype['id'] = undefined;

/**
 * @member {String} code
 */
ReadSetBatchError.prototype['code'] = undefined;

/**
 * @member {String} message
 */
ReadSetBatchError.prototype['message'] = undefined;






export default ReadSetBatchError;

