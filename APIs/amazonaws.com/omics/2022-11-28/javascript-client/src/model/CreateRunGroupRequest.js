/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRunGroupRequest model module.
 * @module model/CreateRunGroupRequest
 * @version 2022-11-28
 */
class CreateRunGroupRequest {
    /**
     * Constructs a new <code>CreateRunGroupRequest</code>.
     * @alias module:model/CreateRunGroupRequest
     * @param requestId {String} To ensure that requests don't run multiple times, specify a unique ID for each request.
     */
    constructor(requestId) { 
        
        CreateRunGroupRequest.initialize(this, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestId) { 
        obj['requestId'] = requestId;
    }

    /**
     * Constructs a <code>CreateRunGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRunGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateRunGroupRequest} The populated <code>CreateRunGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRunGroupRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('maxCpus')) {
                obj['maxCpus'] = ApiClient.convertToType(data['maxCpus'], 'Number');
            }
            if (data.hasOwnProperty('maxRuns')) {
                obj['maxRuns'] = ApiClient.convertToType(data['maxRuns'], 'Number');
            }
            if (data.hasOwnProperty('maxDuration')) {
                obj['maxDuration'] = ApiClient.convertToType(data['maxDuration'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('maxGpus')) {
                obj['maxGpus'] = ApiClient.convertToType(data['maxGpus'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRunGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRunGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRunGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}

CreateRunGroupRequest.RequiredProperties = ["requestId"];

/**
 * A name for the group.
 * @member {String} name
 */
CreateRunGroupRequest.prototype['name'] = undefined;

/**
 * The maximum number of CPUs to use in the group.
 * @member {Number} maxCpus
 */
CreateRunGroupRequest.prototype['maxCpus'] = undefined;

/**
 * The maximum number of concurrent runs for the group.
 * @member {Number} maxRuns
 */
CreateRunGroupRequest.prototype['maxRuns'] = undefined;

/**
 * A maximum run time for the group in minutes.
 * @member {Number} maxDuration
 */
CreateRunGroupRequest.prototype['maxDuration'] = undefined;

/**
 * Tags for the group.
 * @member {Object.<String, String>} tags
 */
CreateRunGroupRequest.prototype['tags'] = undefined;

/**
 * To ensure that requests don't run multiple times, specify a unique ID for each request.
 * @member {String} requestId
 */
CreateRunGroupRequest.prototype['requestId'] = undefined;

/**
 *  The maximum GPUs that can be used by a run group. 
 * @member {Number} maxGpus
 */
CreateRunGroupRequest.prototype['maxGpus'] = undefined;






export default CreateRunGroupRequest;

