/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowParameter from './WorkflowParameter';

/**
 * The CreateWorkflowRequest model module.
 * @module model/CreateWorkflowRequest
 * @version 2022-11-28
 */
class CreateWorkflowRequest {
    /**
     * Constructs a new <code>CreateWorkflowRequest</code>.
     * @alias module:model/CreateWorkflowRequest
     * @param requestId {String} To ensure that requests don't run multiple times, specify a unique ID for each request.
     */
    constructor(requestId) { 
        
        CreateWorkflowRequest.initialize(this, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestId) { 
        obj['requestId'] = requestId;
    }

    /**
     * Constructs a <code>CreateWorkflowRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorkflowRequest} obj Optional instance to populate.
     * @return {module:model/CreateWorkflowRequest} The populated <code>CreateWorkflowRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorkflowRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('engine')) {
                obj['engine'] = ApiClient.convertToType(data['engine'], 'String');
            }
            if (data.hasOwnProperty('definitionZip')) {
                obj['definitionZip'] = ApiClient.convertToType(data['definitionZip'], 'String');
            }
            if (data.hasOwnProperty('definitionUri')) {
                obj['definitionUri'] = ApiClient.convertToType(data['definitionUri'], 'String');
            }
            if (data.hasOwnProperty('main')) {
                obj['main'] = ApiClient.convertToType(data['main'], 'String');
            }
            if (data.hasOwnProperty('parameterTemplate')) {
                obj['parameterTemplate'] = ApiClient.convertToType(data['parameterTemplate'], {'String': WorkflowParameter});
            }
            if (data.hasOwnProperty('storageCapacity')) {
                obj['storageCapacity'] = ApiClient.convertToType(data['storageCapacity'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('accelerators')) {
                obj['accelerators'] = ApiClient.convertToType(data['accelerators'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorkflowRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorkflowRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateWorkflowRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['engine'] && !(typeof data['engine'] === 'string' || data['engine'] instanceof String)) {
            throw new Error("Expected the field `engine` to be a primitive type in the JSON string but got " + data['engine']);
        }
        // ensure the json data is a string
        if (data['definitionZip'] && !(typeof data['definitionZip'] === 'string' || data['definitionZip'] instanceof String)) {
            throw new Error("Expected the field `definitionZip` to be a primitive type in the JSON string but got " + data['definitionZip']);
        }
        // ensure the json data is a string
        if (data['definitionUri'] && !(typeof data['definitionUri'] === 'string' || data['definitionUri'] instanceof String)) {
            throw new Error("Expected the field `definitionUri` to be a primitive type in the JSON string but got " + data['definitionUri']);
        }
        // ensure the json data is a string
        if (data['main'] && !(typeof data['main'] === 'string' || data['main'] instanceof String)) {
            throw new Error("Expected the field `main` to be a primitive type in the JSON string but got " + data['main']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['accelerators'] && !(typeof data['accelerators'] === 'string' || data['accelerators'] instanceof String)) {
            throw new Error("Expected the field `accelerators` to be a primitive type in the JSON string but got " + data['accelerators']);
        }

        return true;
    }


}

CreateWorkflowRequest.RequiredProperties = ["requestId"];

/**
 * A name for the workflow.
 * @member {String} name
 */
CreateWorkflowRequest.prototype['name'] = undefined;

/**
 * A description for the workflow.
 * @member {String} description
 */
CreateWorkflowRequest.prototype['description'] = undefined;

/**
 * An engine for the workflow.
 * @member {module:model/CreateWorkflowRequest.EngineEnum} engine
 */
CreateWorkflowRequest.prototype['engine'] = undefined;

/**
 * A ZIP archive for the workflow.
 * @member {String} definitionZip
 */
CreateWorkflowRequest.prototype['definitionZip'] = undefined;

/**
 * The URI of a definition for the workflow.
 * @member {String} definitionUri
 */
CreateWorkflowRequest.prototype['definitionUri'] = undefined;

/**
 * The path of the main definition file for the workflow.
 * @member {String} main
 */
CreateWorkflowRequest.prototype['main'] = undefined;

/**
 * A parameter template for the workflow.
 * @member {Object.<String, module:model/WorkflowParameter>} parameterTemplate
 */
CreateWorkflowRequest.prototype['parameterTemplate'] = undefined;

/**
 * A storage capacity for the workflow in gigabytes.
 * @member {Number} storageCapacity
 */
CreateWorkflowRequest.prototype['storageCapacity'] = undefined;

/**
 * Tags for the workflow.
 * @member {Object.<String, String>} tags
 */
CreateWorkflowRequest.prototype['tags'] = undefined;

/**
 * To ensure that requests don't run multiple times, specify a unique ID for each request.
 * @member {String} requestId
 */
CreateWorkflowRequest.prototype['requestId'] = undefined;

/**
 *  The computational accelerator specified to run the workflow. 
 * @member {module:model/CreateWorkflowRequest.AcceleratorsEnum} accelerators
 */
CreateWorkflowRequest.prototype['accelerators'] = undefined;





/**
 * Allowed values for the <code>engine</code> property.
 * @enum {String}
 * @readonly
 */
CreateWorkflowRequest['EngineEnum'] = {

    /**
     * value: "WDL"
     * @const
     */
    "WDL": "WDL",

    /**
     * value: "NEXTFLOW"
     * @const
     */
    "NEXTFLOW": "NEXTFLOW",

    /**
     * value: "CWL"
     * @const
     */
    "CWL": "CWL"
};


/**
 * Allowed values for the <code>accelerators</code> property.
 * @enum {String}
 * @readonly
 */
CreateWorkflowRequest['AcceleratorsEnum'] = {

    /**
     * value: "GPU"
     * @const
     */
    "GPU": "GPU"
};



export default CreateWorkflowRequest;

