/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileType from './FileType';

/**
 * The CreateMultipartReadSetUploadResponse model module.
 * @module model/CreateMultipartReadSetUploadResponse
 * @version 2022-11-28
 */
class CreateMultipartReadSetUploadResponse {
    /**
     * Constructs a new <code>CreateMultipartReadSetUploadResponse</code>.
     * @alias module:model/CreateMultipartReadSetUploadResponse
     * @param sequenceStoreId {String} 
     * @param uploadId {String} 
     * @param sourceFileType {module:model/FileType} 
     * @param subjectId {String} 
     * @param sampleId {String} 
     * @param referenceArn {String} 
     * @param creationTime {Date} 
     */
    constructor(sequenceStoreId, uploadId, sourceFileType, subjectId, sampleId, referenceArn, creationTime) { 
        
        CreateMultipartReadSetUploadResponse.initialize(this, sequenceStoreId, uploadId, sourceFileType, subjectId, sampleId, referenceArn, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sequenceStoreId, uploadId, sourceFileType, subjectId, sampleId, referenceArn, creationTime) { 
        obj['sequenceStoreId'] = sequenceStoreId;
        obj['uploadId'] = uploadId;
        obj['sourceFileType'] = sourceFileType;
        obj['subjectId'] = subjectId;
        obj['sampleId'] = sampleId;
        obj['referenceArn'] = referenceArn;
        obj['creationTime'] = creationTime;
    }

    /**
     * Constructs a <code>CreateMultipartReadSetUploadResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMultipartReadSetUploadResponse} obj Optional instance to populate.
     * @return {module:model/CreateMultipartReadSetUploadResponse} The populated <code>CreateMultipartReadSetUploadResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMultipartReadSetUploadResponse();

            if (data.hasOwnProperty('sequenceStoreId')) {
                obj['sequenceStoreId'] = ApiClient.convertToType(data['sequenceStoreId'], 'String');
            }
            if (data.hasOwnProperty('uploadId')) {
                obj['uploadId'] = ApiClient.convertToType(data['uploadId'], 'String');
            }
            if (data.hasOwnProperty('sourceFileType')) {
                obj['sourceFileType'] = ApiClient.convertToType(data['sourceFileType'], FileType);
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'String');
            }
            if (data.hasOwnProperty('sampleId')) {
                obj['sampleId'] = ApiClient.convertToType(data['sampleId'], 'String');
            }
            if (data.hasOwnProperty('generatedFrom')) {
                obj['generatedFrom'] = ApiClient.convertToType(data['generatedFrom'], 'String');
            }
            if (data.hasOwnProperty('referenceArn')) {
                obj['referenceArn'] = ApiClient.convertToType(data['referenceArn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMultipartReadSetUploadResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMultipartReadSetUploadResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMultipartReadSetUploadResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `sequenceStoreId`
        if (data['sequenceStoreId']) { // data not null
          String.validateJSON(data['sequenceStoreId']);
        }
        // validate the optional field `uploadId`
        if (data['uploadId']) { // data not null
          String.validateJSON(data['uploadId']);
        }
        // validate the optional field `sourceFileType`
        if (data['sourceFileType']) { // data not null
          FileType.validateJSON(data['sourceFileType']);
        }
        // validate the optional field `subjectId`
        if (data['subjectId']) { // data not null
          String.validateJSON(data['subjectId']);
        }
        // validate the optional field `sampleId`
        if (data['sampleId']) { // data not null
          String.validateJSON(data['sampleId']);
        }
        // validate the optional field `generatedFrom`
        if (data['generatedFrom']) { // data not null
          String.validateJSON(data['generatedFrom']);
        }
        // validate the optional field `referenceArn`
        if (data['referenceArn']) { // data not null
          String.validateJSON(data['referenceArn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `creationTime`
        if (data['creationTime']) { // data not null
          Date.validateJSON(data['creationTime']);
        }

        return true;
    }


}

CreateMultipartReadSetUploadResponse.RequiredProperties = ["sequenceStoreId", "uploadId", "sourceFileType", "subjectId", "sampleId", "referenceArn", "creationTime"];

/**
 * @member {String} sequenceStoreId
 */
CreateMultipartReadSetUploadResponse.prototype['sequenceStoreId'] = undefined;

/**
 * @member {String} uploadId
 */
CreateMultipartReadSetUploadResponse.prototype['uploadId'] = undefined;

/**
 * @member {module:model/FileType} sourceFileType
 */
CreateMultipartReadSetUploadResponse.prototype['sourceFileType'] = undefined;

/**
 * @member {String} subjectId
 */
CreateMultipartReadSetUploadResponse.prototype['subjectId'] = undefined;

/**
 * @member {String} sampleId
 */
CreateMultipartReadSetUploadResponse.prototype['sampleId'] = undefined;

/**
 * @member {String} generatedFrom
 */
CreateMultipartReadSetUploadResponse.prototype['generatedFrom'] = undefined;

/**
 * @member {String} referenceArn
 */
CreateMultipartReadSetUploadResponse.prototype['referenceArn'] = undefined;

/**
 * @member {String} name
 */
CreateMultipartReadSetUploadResponse.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateMultipartReadSetUploadResponse.prototype['description'] = undefined;

/**
 * @member {Object} tags
 */
CreateMultipartReadSetUploadResponse.prototype['tags'] = undefined;

/**
 * @member {Date} creationTime
 */
CreateMultipartReadSetUploadResponse.prototype['creationTime'] = undefined;






export default CreateMultipartReadSetUploadResponse;

