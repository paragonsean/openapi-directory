/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExportReadSet from './ExportReadSet';

/**
 * The StartReadSetExportJobRequest model module.
 * @module model/StartReadSetExportJobRequest
 * @version 2022-11-28
 */
class StartReadSetExportJobRequest {
    /**
     * Constructs a new <code>StartReadSetExportJobRequest</code>.
     * @alias module:model/StartReadSetExportJobRequest
     * @param destination {String} A location for exported files in Amazon S3.
     * @param roleArn {String} A service role for the job.
     * @param sources {Array.<module:model/ExportReadSet>} The job's source files.
     */
    constructor(destination, roleArn, sources) { 
        
        StartReadSetExportJobRequest.initialize(this, destination, roleArn, sources);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination, roleArn, sources) { 
        obj['destination'] = destination;
        obj['roleArn'] = roleArn;
        obj['sources'] = sources;
    }

    /**
     * Constructs a <code>StartReadSetExportJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartReadSetExportJobRequest} obj Optional instance to populate.
     * @return {module:model/StartReadSetExportJobRequest} The populated <code>StartReadSetExportJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartReadSetExportJobRequest();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('sources')) {
                obj['sources'] = ApiClient.convertToType(data['sources'], [ExportReadSet]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartReadSetExportJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartReadSetExportJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartReadSetExportJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['roleArn'] && !(typeof data['roleArn'] === 'string' || data['roleArn'] instanceof String)) {
            throw new Error("Expected the field `roleArn` to be a primitive type in the JSON string but got " + data['roleArn']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        if (data['sources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sources'])) {
                throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
            }
            // validate the optional field `sources` (array)
            for (const item of data['sources']) {
                ExportReadSet.validateJSON(item);
            };
        }

        return true;
    }


}

StartReadSetExportJobRequest.RequiredProperties = ["destination", "roleArn", "sources"];

/**
 * A location for exported files in Amazon S3.
 * @member {String} destination
 */
StartReadSetExportJobRequest.prototype['destination'] = undefined;

/**
 * A service role for the job.
 * @member {String} roleArn
 */
StartReadSetExportJobRequest.prototype['roleArn'] = undefined;

/**
 * To ensure that jobs don't run multiple times, specify a unique token for each job.
 * @member {String} clientToken
 */
StartReadSetExportJobRequest.prototype['clientToken'] = undefined;

/**
 * The job's source files.
 * @member {Array.<module:model/ExportReadSet>} sources
 */
StartReadSetExportJobRequest.prototype['sources'] = undefined;






export default StartReadSetExportJobRequest;

