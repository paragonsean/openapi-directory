/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReadSetPartSource from './ReadSetPartSource';

/**
 * The ReadSetUploadPartListItem model module.
 * @module model/ReadSetUploadPartListItem
 * @version 2022-11-28
 */
class ReadSetUploadPartListItem {
    /**
     * Constructs a new <code>ReadSetUploadPartListItem</code>.
     *  The metadata of a single part of a file that was added to a multipart upload. A list of these parts is returned in the response to the ListReadSetUploadParts API. 
     * @alias module:model/ReadSetUploadPartListItem
     * @param partNumber {Number} 
     * @param partSize {Number} 
     * @param partSource {module:model/ReadSetPartSource} 
     * @param checksum {String} 
     */
    constructor(partNumber, partSize, partSource, checksum) { 
        
        ReadSetUploadPartListItem.initialize(this, partNumber, partSize, partSource, checksum);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, partNumber, partSize, partSource, checksum) { 
        obj['partNumber'] = partNumber;
        obj['partSize'] = partSize;
        obj['partSource'] = partSource;
        obj['checksum'] = checksum;
    }

    /**
     * Constructs a <code>ReadSetUploadPartListItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReadSetUploadPartListItem} obj Optional instance to populate.
     * @return {module:model/ReadSetUploadPartListItem} The populated <code>ReadSetUploadPartListItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReadSetUploadPartListItem();

            if (data.hasOwnProperty('partNumber')) {
                obj['partNumber'] = ApiClient.convertToType(data['partNumber'], 'Number');
            }
            if (data.hasOwnProperty('partSize')) {
                obj['partSize'] = ApiClient.convertToType(data['partSize'], 'Number');
            }
            if (data.hasOwnProperty('partSource')) {
                obj['partSource'] = ApiClient.convertToType(data['partSource'], ReadSetPartSource);
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedTime')) {
                obj['lastUpdatedTime'] = ApiClient.convertToType(data['lastUpdatedTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReadSetUploadPartListItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReadSetUploadPartListItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReadSetUploadPartListItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `partNumber`
        if (data['partNumber']) { // data not null
          Number.validateJSON(data['partNumber']);
        }
        // validate the optional field `partSize`
        if (data['partSize']) { // data not null
          Number.validateJSON(data['partSize']);
        }
        // validate the optional field `partSource`
        if (data['partSource']) { // data not null
          ReadSetPartSource.validateJSON(data['partSource']);
        }
        // validate the optional field `checksum`
        if (data['checksum']) { // data not null
          String.validateJSON(data['checksum']);
        }
        // validate the optional field `creationTime`
        if (data['creationTime']) { // data not null
          Date.validateJSON(data['creationTime']);
        }
        // validate the optional field `lastUpdatedTime`
        if (data['lastUpdatedTime']) { // data not null
          Date.validateJSON(data['lastUpdatedTime']);
        }

        return true;
    }


}

ReadSetUploadPartListItem.RequiredProperties = ["partNumber", "partSize", "partSource", "checksum"];

/**
 * @member {Number} partNumber
 */
ReadSetUploadPartListItem.prototype['partNumber'] = undefined;

/**
 * @member {Number} partSize
 */
ReadSetUploadPartListItem.prototype['partSize'] = undefined;

/**
 * @member {module:model/ReadSetPartSource} partSource
 */
ReadSetUploadPartListItem.prototype['partSource'] = undefined;

/**
 * @member {String} checksum
 */
ReadSetUploadPartListItem.prototype['checksum'] = undefined;

/**
 * @member {Date} creationTime
 */
ReadSetUploadPartListItem.prototype['creationTime'] = undefined;

/**
 * @member {Date} lastUpdatedTime
 */
ReadSetUploadPartListItem.prototype['lastUpdatedTime'] = undefined;






export default ReadSetUploadPartListItem;

