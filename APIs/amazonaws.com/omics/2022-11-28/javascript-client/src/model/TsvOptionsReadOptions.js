/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReadOptions from './ReadOptions';

/**
 * The TsvOptionsReadOptions model module.
 * @module model/TsvOptionsReadOptions
 * @version 2022-11-28
 */
class TsvOptionsReadOptions {
    /**
     * Constructs a new <code>TsvOptionsReadOptions</code>.
     * @alias module:model/TsvOptionsReadOptions
     * @implements module:model/ReadOptions
     */
    constructor() { 
        ReadOptions.initialize(this);
        TsvOptionsReadOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TsvOptionsReadOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TsvOptionsReadOptions} obj Optional instance to populate.
     * @return {module:model/TsvOptionsReadOptions} The populated <code>TsvOptionsReadOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TsvOptionsReadOptions();
            ReadOptions.constructFromObject(data, obj);

            if (data.hasOwnProperty('sep')) {
                obj['sep'] = ApiClient.convertToType(data['sep'], 'String');
            }
            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = ApiClient.convertToType(data['encoding'], 'String');
            }
            if (data.hasOwnProperty('quote')) {
                obj['quote'] = ApiClient.convertToType(data['quote'], 'String');
            }
            if (data.hasOwnProperty('quoteAll')) {
                obj['quoteAll'] = ApiClient.convertToType(data['quoteAll'], 'Boolean');
            }
            if (data.hasOwnProperty('escape')) {
                obj['escape'] = ApiClient.convertToType(data['escape'], 'String');
            }
            if (data.hasOwnProperty('escapeQuotes')) {
                obj['escapeQuotes'] = ApiClient.convertToType(data['escapeQuotes'], 'Boolean');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('header')) {
                obj['header'] = ApiClient.convertToType(data['header'], 'Boolean');
            }
            if (data.hasOwnProperty('lineSep')) {
                obj['lineSep'] = ApiClient.convertToType(data['lineSep'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TsvOptionsReadOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TsvOptionsReadOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sep`
        if (data['sep']) { // data not null
          String.validateJSON(data['sep']);
        }
        // validate the optional field `encoding`
        if (data['encoding']) { // data not null
          String.validateJSON(data['encoding']);
        }
        // validate the optional field `quote`
        if (data['quote']) { // data not null
          String.validateJSON(data['quote']);
        }
        // validate the optional field `quoteAll`
        if (data['quoteAll']) { // data not null
          Boolean.validateJSON(data['quoteAll']);
        }
        // validate the optional field `escape`
        if (data['escape']) { // data not null
          String.validateJSON(data['escape']);
        }
        // validate the optional field `escapeQuotes`
        if (data['escapeQuotes']) { // data not null
          Boolean.validateJSON(data['escapeQuotes']);
        }
        // validate the optional field `comment`
        if (data['comment']) { // data not null
          String.validateJSON(data['comment']);
        }
        // validate the optional field `header`
        if (data['header']) { // data not null
          Boolean.validateJSON(data['header']);
        }
        // validate the optional field `lineSep`
        if (data['lineSep']) { // data not null
          String.validateJSON(data['lineSep']);
        }

        return true;
    }


}



/**
 * @member {String} sep
 */
TsvOptionsReadOptions.prototype['sep'] = undefined;

/**
 * @member {String} encoding
 */
TsvOptionsReadOptions.prototype['encoding'] = undefined;

/**
 * @member {String} quote
 */
TsvOptionsReadOptions.prototype['quote'] = undefined;

/**
 * @member {Boolean} quoteAll
 */
TsvOptionsReadOptions.prototype['quoteAll'] = undefined;

/**
 * @member {String} escape
 */
TsvOptionsReadOptions.prototype['escape'] = undefined;

/**
 * @member {Boolean} escapeQuotes
 */
TsvOptionsReadOptions.prototype['escapeQuotes'] = undefined;

/**
 * @member {String} comment
 */
TsvOptionsReadOptions.prototype['comment'] = undefined;

/**
 * @member {Boolean} header
 */
TsvOptionsReadOptions.prototype['header'] = undefined;

/**
 * @member {String} lineSep
 */
TsvOptionsReadOptions.prototype['lineSep'] = undefined;


// Implement ReadOptions interface:
/**
 * @member {String} sep
 */
ReadOptions.prototype['sep'] = undefined;
/**
 * @member {String} encoding
 */
ReadOptions.prototype['encoding'] = undefined;
/**
 * @member {String} quote
 */
ReadOptions.prototype['quote'] = undefined;
/**
 * @member {Boolean} quoteAll
 */
ReadOptions.prototype['quoteAll'] = undefined;
/**
 * @member {String} escape
 */
ReadOptions.prototype['escape'] = undefined;
/**
 * @member {Boolean} escapeQuotes
 */
ReadOptions.prototype['escapeQuotes'] = undefined;
/**
 * @member {String} comment
 */
ReadOptions.prototype['comment'] = undefined;
/**
 * @member {Boolean} header
 */
ReadOptions.prototype['header'] = undefined;
/**
 * @member {String} lineSep
 */
ReadOptions.prototype['lineSep'] = undefined;




export default TsvOptionsReadOptions;

