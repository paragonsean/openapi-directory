/**
 * Amazon Omics
 * This is the <i>AWS HealthOmics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is AWS HealthOmics?</a> in the <i>AWS HealthOmics User Guide</i>.
 *
 * The version of the OpenAPI document: 2022-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreationType from './CreationType';
import FileType from './FileType';
import ReadSetStatus from './ReadSetStatus';
import SequenceInformation from './SequenceInformation';

/**
 * The ReadSetListItem model module.
 * @module model/ReadSetListItem
 * @version 2022-11-28
 */
class ReadSetListItem {
    /**
     * Constructs a new <code>ReadSetListItem</code>.
     * A read set.
     * @alias module:model/ReadSetListItem
     * @param id {String} 
     * @param arn {String} 
     * @param sequenceStoreId {String} 
     * @param status {module:model/ReadSetStatus} 
     * @param fileType {module:model/FileType} 
     * @param creationTime {Date} 
     */
    constructor(id, arn, sequenceStoreId, status, fileType, creationTime) { 
        
        ReadSetListItem.initialize(this, id, arn, sequenceStoreId, status, fileType, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, arn, sequenceStoreId, status, fileType, creationTime) { 
        obj['id'] = id;
        obj['arn'] = arn;
        obj['sequenceStoreId'] = sequenceStoreId;
        obj['status'] = status;
        obj['fileType'] = fileType;
        obj['creationTime'] = creationTime;
    }

    /**
     * Constructs a <code>ReadSetListItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReadSetListItem} obj Optional instance to populate.
     * @return {module:model/ReadSetListItem} The populated <code>ReadSetListItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReadSetListItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('sequenceStoreId')) {
                obj['sequenceStoreId'] = ApiClient.convertToType(data['sequenceStoreId'], 'String');
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'String');
            }
            if (data.hasOwnProperty('sampleId')) {
                obj['sampleId'] = ApiClient.convertToType(data['sampleId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ReadSetStatus);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('referenceArn')) {
                obj['referenceArn'] = ApiClient.convertToType(data['referenceArn'], 'String');
            }
            if (data.hasOwnProperty('fileType')) {
                obj['fileType'] = ApiClient.convertToType(data['fileType'], FileType);
            }
            if (data.hasOwnProperty('sequenceInformation')) {
                obj['sequenceInformation'] = SequenceInformation.constructFromObject(data['sequenceInformation']);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('creationType')) {
                obj['creationType'] = ApiClient.convertToType(data['creationType'], CreationType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReadSetListItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReadSetListItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReadSetListItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `sequenceStoreId`
        if (data['sequenceStoreId']) { // data not null
          String.validateJSON(data['sequenceStoreId']);
        }
        // validate the optional field `subjectId`
        if (data['subjectId']) { // data not null
          String.validateJSON(data['subjectId']);
        }
        // validate the optional field `sampleId`
        if (data['sampleId']) { // data not null
          String.validateJSON(data['sampleId']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ReadSetStatus.validateJSON(data['status']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `referenceArn`
        if (data['referenceArn']) { // data not null
          String.validateJSON(data['referenceArn']);
        }
        // validate the optional field `fileType`
        if (data['fileType']) { // data not null
          FileType.validateJSON(data['fileType']);
        }
        // validate the optional field `sequenceInformation`
        if (data['sequenceInformation']) { // data not null
          SequenceInformation.validateJSON(data['sequenceInformation']);
        }
        // validate the optional field `creationTime`
        if (data['creationTime']) { // data not null
          Date.validateJSON(data['creationTime']);
        }
        // validate the optional field `statusMessage`
        if (data['statusMessage']) { // data not null
          String.validateJSON(data['statusMessage']);
        }
        // validate the optional field `creationType`
        if (data['creationType']) { // data not null
          CreationType.validateJSON(data['creationType']);
        }

        return true;
    }


}

ReadSetListItem.RequiredProperties = ["id", "arn", "sequenceStoreId", "status", "fileType", "creationTime"];

/**
 * @member {String} id
 */
ReadSetListItem.prototype['id'] = undefined;

/**
 * @member {String} arn
 */
ReadSetListItem.prototype['arn'] = undefined;

/**
 * @member {String} sequenceStoreId
 */
ReadSetListItem.prototype['sequenceStoreId'] = undefined;

/**
 * @member {String} subjectId
 */
ReadSetListItem.prototype['subjectId'] = undefined;

/**
 * @member {String} sampleId
 */
ReadSetListItem.prototype['sampleId'] = undefined;

/**
 * @member {module:model/ReadSetStatus} status
 */
ReadSetListItem.prototype['status'] = undefined;

/**
 * @member {String} name
 */
ReadSetListItem.prototype['name'] = undefined;

/**
 * @member {String} description
 */
ReadSetListItem.prototype['description'] = undefined;

/**
 * @member {String} referenceArn
 */
ReadSetListItem.prototype['referenceArn'] = undefined;

/**
 * @member {module:model/FileType} fileType
 */
ReadSetListItem.prototype['fileType'] = undefined;

/**
 * @member {module:model/SequenceInformation} sequenceInformation
 */
ReadSetListItem.prototype['sequenceInformation'] = undefined;

/**
 * @member {Date} creationTime
 */
ReadSetListItem.prototype['creationTime'] = undefined;

/**
 * @member {String} statusMessage
 */
ReadSetListItem.prototype['statusMessage'] = undefined;

/**
 * @member {module:model/CreationType} creationType
 */
ReadSetListItem.prototype['creationType'] = undefined;






export default ReadSetListItem;

