# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_annotation_import_job_request_format_options_tsv_options import StartAnnotationImportJobRequestFormatOptionsTsvOptions
from openapi_server.models.start_annotation_import_job_request_format_options_vcf_options import StartAnnotationImportJobRequestFormatOptionsVcfOptions
from openapi_server import util


class FormatOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tsv_options: StartAnnotationImportJobRequestFormatOptionsTsvOptions=None, vcf_options: StartAnnotationImportJobRequestFormatOptionsVcfOptions=None):
        """FormatOptions - a model defined in OpenAPI

        :param tsv_options: The tsv_options of this FormatOptions.
        :param vcf_options: The vcf_options of this FormatOptions.
        """
        self.openapi_types = {
            'tsv_options': StartAnnotationImportJobRequestFormatOptionsTsvOptions,
            'vcf_options': StartAnnotationImportJobRequestFormatOptionsVcfOptions
        }

        self.attribute_map = {
            'tsv_options': 'tsvOptions',
            'vcf_options': 'vcfOptions'
        }

        self._tsv_options = tsv_options
        self._vcf_options = vcf_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormatOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormatOptions of this FormatOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tsv_options(self):
        """Gets the tsv_options of this FormatOptions.


        :return: The tsv_options of this FormatOptions.
        :rtype: StartAnnotationImportJobRequestFormatOptionsTsvOptions
        """
        return self._tsv_options

    @tsv_options.setter
    def tsv_options(self, tsv_options):
        """Sets the tsv_options of this FormatOptions.


        :param tsv_options: The tsv_options of this FormatOptions.
        :type tsv_options: StartAnnotationImportJobRequestFormatOptionsTsvOptions
        """

        self._tsv_options = tsv_options

    @property
    def vcf_options(self):
        """Gets the vcf_options of this FormatOptions.


        :return: The vcf_options of this FormatOptions.
        :rtype: StartAnnotationImportJobRequestFormatOptionsVcfOptions
        """
        return self._vcf_options

    @vcf_options.setter
    def vcf_options(self, vcf_options):
        """Sets the vcf_options of this FormatOptions.


        :param vcf_options: The vcf_options of this FormatOptions.
        :type vcf_options: StartAnnotationImportJobRequestFormatOptionsVcfOptions
        """

        self._vcf_options = vcf_options
