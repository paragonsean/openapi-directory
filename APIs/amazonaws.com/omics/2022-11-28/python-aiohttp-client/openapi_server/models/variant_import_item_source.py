# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VariantImportItemSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source: str=None):
        """VariantImportItemSource - a model defined in OpenAPI

        :param source: The source of this VariantImportItemSource.
        """
        self.openapi_types = {
            'source': str
        }

        self.attribute_map = {
            'source': 'source'
        }

        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariantImportItemSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariantImportItemSource of this VariantImportItemSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this VariantImportItemSource.


        :return: The source of this VariantImportItemSource.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this VariantImportItemSource.


        :param source: The source of this VariantImportItemSource.
        :type source: str
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source
