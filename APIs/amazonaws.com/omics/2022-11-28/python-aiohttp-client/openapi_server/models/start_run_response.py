# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.run_status import RunStatus
from openapi_server import util


class StartRunResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, status: RunStatus=None, tags: Dict=None):
        """StartRunResponse - a model defined in OpenAPI

        :param arn: The arn of this StartRunResponse.
        :param id: The id of this StartRunResponse.
        :param status: The status of this StartRunResponse.
        :param tags: The tags of this StartRunResponse.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'status': RunStatus,
            'tags': Dict
        }

        self.attribute_map = {
            'arn': 'arn',
            'id': 'id',
            'status': 'status',
            'tags': 'tags'
        }

        self._arn = arn
        self._id = id
        self._status = status
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartRunResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartRunResponse of this StartRunResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this StartRunResponse.


        :return: The arn of this StartRunResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this StartRunResponse.


        :param arn: The arn of this StartRunResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this StartRunResponse.


        :return: The id of this StartRunResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StartRunResponse.


        :param id: The id of this StartRunResponse.
        :type id: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this StartRunResponse.


        :return: The status of this StartRunResponse.
        :rtype: RunStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StartRunResponse.


        :param status: The status of this StartRunResponse.
        :type status: RunStatus
        """

        self._status = status

    @property
    def tags(self):
        """Gets the tags of this StartRunResponse.


        :return: The tags of this StartRunResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartRunResponse.


        :param tags: The tags of this StartRunResponse.
        :type tags: Dict
        """

        self._tags = tags
