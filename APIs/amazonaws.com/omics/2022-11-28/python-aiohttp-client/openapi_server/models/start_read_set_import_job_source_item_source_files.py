# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartReadSetImportJobSourceItemSourceFiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source1: str=None, source2: str=None):
        """StartReadSetImportJobSourceItemSourceFiles - a model defined in OpenAPI

        :param source1: The source1 of this StartReadSetImportJobSourceItemSourceFiles.
        :param source2: The source2 of this StartReadSetImportJobSourceItemSourceFiles.
        """
        self.openapi_types = {
            'source1': str,
            'source2': str
        }

        self.attribute_map = {
            'source1': 'source1',
            'source2': 'source2'
        }

        self._source1 = source1
        self._source2 = source2

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartReadSetImportJobSourceItemSourceFiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartReadSetImportJobSourceItem_sourceFiles of this StartReadSetImportJobSourceItemSourceFiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source1(self):
        """Gets the source1 of this StartReadSetImportJobSourceItemSourceFiles.


        :return: The source1 of this StartReadSetImportJobSourceItemSourceFiles.
        :rtype: str
        """
        return self._source1

    @source1.setter
    def source1(self, source1):
        """Sets the source1 of this StartReadSetImportJobSourceItemSourceFiles.


        :param source1: The source1 of this StartReadSetImportJobSourceItemSourceFiles.
        :type source1: str
        """
        if source1 is None:
            raise ValueError("Invalid value for `source1`, must not be `None`")

        self._source1 = source1

    @property
    def source2(self):
        """Gets the source2 of this StartReadSetImportJobSourceItemSourceFiles.


        :return: The source2 of this StartReadSetImportJobSourceItemSourceFiles.
        :rtype: str
        """
        return self._source2

    @source2.setter
    def source2(self, source2):
        """Sets the source2 of this StartReadSetImportJobSourceItemSourceFiles.


        :param source2: The source2 of this StartReadSetImportJobSourceItemSourceFiles.
        :type source2: str
        """

        self._source2 = source2
