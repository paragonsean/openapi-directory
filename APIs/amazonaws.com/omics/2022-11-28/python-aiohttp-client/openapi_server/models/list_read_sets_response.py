# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListReadSetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, read_sets: List=None):
        """ListReadSetsResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListReadSetsResponse.
        :param read_sets: The read_sets of this ListReadSetsResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'read_sets': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'read_sets': 'readSets'
        }

        self._next_token = next_token
        self._read_sets = read_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListReadSetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListReadSetsResponse of this ListReadSetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListReadSetsResponse.


        :return: The next_token of this ListReadSetsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListReadSetsResponse.


        :param next_token: The next_token of this ListReadSetsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def read_sets(self):
        """Gets the read_sets of this ListReadSetsResponse.


        :return: The read_sets of this ListReadSetsResponse.
        :rtype: List
        """
        return self._read_sets

    @read_sets.setter
    def read_sets(self, read_sets):
        """Sets the read_sets of this ListReadSetsResponse.


        :param read_sets: The read_sets of this ListReadSetsResponse.
        :type read_sets: List
        """
        if read_sets is None:
            raise ValueError("Invalid value for `read_sets`, must not be `None`")

        self._read_sets = read_sets
