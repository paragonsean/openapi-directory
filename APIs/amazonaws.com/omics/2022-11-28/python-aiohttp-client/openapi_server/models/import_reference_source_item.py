# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_import_job_item_status import ReferenceImportJobItemStatus
from openapi_server import util


class ImportReferenceSourceItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_file: str=None, status: ReferenceImportJobItemStatus=None, status_message: str=None, name: str=None, description: str=None, tags: Dict=None):
        """ImportReferenceSourceItem - a model defined in OpenAPI

        :param source_file: The source_file of this ImportReferenceSourceItem.
        :param status: The status of this ImportReferenceSourceItem.
        :param status_message: The status_message of this ImportReferenceSourceItem.
        :param name: The name of this ImportReferenceSourceItem.
        :param description: The description of this ImportReferenceSourceItem.
        :param tags: The tags of this ImportReferenceSourceItem.
        """
        self.openapi_types = {
            'source_file': str,
            'status': ReferenceImportJobItemStatus,
            'status_message': str,
            'name': str,
            'description': str,
            'tags': Dict
        }

        self.attribute_map = {
            'source_file': 'sourceFile',
            'status': 'status',
            'status_message': 'statusMessage',
            'name': 'name',
            'description': 'description',
            'tags': 'tags'
        }

        self._source_file = source_file
        self._status = status
        self._status_message = status_message
        self._name = name
        self._description = description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportReferenceSourceItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportReferenceSourceItem of this ImportReferenceSourceItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_file(self):
        """Gets the source_file of this ImportReferenceSourceItem.


        :return: The source_file of this ImportReferenceSourceItem.
        :rtype: str
        """
        return self._source_file

    @source_file.setter
    def source_file(self, source_file):
        """Sets the source_file of this ImportReferenceSourceItem.


        :param source_file: The source_file of this ImportReferenceSourceItem.
        :type source_file: str
        """

        self._source_file = source_file

    @property
    def status(self):
        """Gets the status of this ImportReferenceSourceItem.


        :return: The status of this ImportReferenceSourceItem.
        :rtype: ReferenceImportJobItemStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ImportReferenceSourceItem.


        :param status: The status of this ImportReferenceSourceItem.
        :type status: ReferenceImportJobItemStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this ImportReferenceSourceItem.


        :return: The status_message of this ImportReferenceSourceItem.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ImportReferenceSourceItem.


        :param status_message: The status_message of this ImportReferenceSourceItem.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def name(self):
        """Gets the name of this ImportReferenceSourceItem.


        :return: The name of this ImportReferenceSourceItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImportReferenceSourceItem.


        :param name: The name of this ImportReferenceSourceItem.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this ImportReferenceSourceItem.


        :return: The description of this ImportReferenceSourceItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ImportReferenceSourceItem.


        :param description: The description of this ImportReferenceSourceItem.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this ImportReferenceSourceItem.


        :return: The tags of this ImportReferenceSourceItem.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ImportReferenceSourceItem.


        :param tags: The tags of this ImportReferenceSourceItem.
        :type tags: Dict
        """

        self._tags = tags
