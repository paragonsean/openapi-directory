# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_annotation_store_response_sse_config import GetAnnotationStoreResponseSseConfig
from openapi_server import util


class GetSequenceStoreResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, name: str=None, description: str=None, sse_config: GetAnnotationStoreResponseSseConfig=None, creation_time: datetime=None, fallback_location: str=None):
        """GetSequenceStoreResponse - a model defined in OpenAPI

        :param id: The id of this GetSequenceStoreResponse.
        :param arn: The arn of this GetSequenceStoreResponse.
        :param name: The name of this GetSequenceStoreResponse.
        :param description: The description of this GetSequenceStoreResponse.
        :param sse_config: The sse_config of this GetSequenceStoreResponse.
        :param creation_time: The creation_time of this GetSequenceStoreResponse.
        :param fallback_location: The fallback_location of this GetSequenceStoreResponse.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'name': str,
            'description': str,
            'sse_config': GetAnnotationStoreResponseSseConfig,
            'creation_time': datetime,
            'fallback_location': str
        }

        self.attribute_map = {
            'id': 'id',
            'arn': 'arn',
            'name': 'name',
            'description': 'description',
            'sse_config': 'sseConfig',
            'creation_time': 'creationTime',
            'fallback_location': 'fallbackLocation'
        }

        self._id = id
        self._arn = arn
        self._name = name
        self._description = description
        self._sse_config = sse_config
        self._creation_time = creation_time
        self._fallback_location = fallback_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSequenceStoreResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSequenceStoreResponse of this GetSequenceStoreResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this GetSequenceStoreResponse.


        :return: The id of this GetSequenceStoreResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetSequenceStoreResponse.


        :param id: The id of this GetSequenceStoreResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this GetSequenceStoreResponse.


        :return: The arn of this GetSequenceStoreResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetSequenceStoreResponse.


        :param arn: The arn of this GetSequenceStoreResponse.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this GetSequenceStoreResponse.


        :return: The name of this GetSequenceStoreResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetSequenceStoreResponse.


        :param name: The name of this GetSequenceStoreResponse.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this GetSequenceStoreResponse.


        :return: The description of this GetSequenceStoreResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetSequenceStoreResponse.


        :param description: The description of this GetSequenceStoreResponse.
        :type description: str
        """

        self._description = description

    @property
    def sse_config(self):
        """Gets the sse_config of this GetSequenceStoreResponse.


        :return: The sse_config of this GetSequenceStoreResponse.
        :rtype: GetAnnotationStoreResponseSseConfig
        """
        return self._sse_config

    @sse_config.setter
    def sse_config(self, sse_config):
        """Sets the sse_config of this GetSequenceStoreResponse.


        :param sse_config: The sse_config of this GetSequenceStoreResponse.
        :type sse_config: GetAnnotationStoreResponseSseConfig
        """

        self._sse_config = sse_config

    @property
    def creation_time(self):
        """Gets the creation_time of this GetSequenceStoreResponse.


        :return: The creation_time of this GetSequenceStoreResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GetSequenceStoreResponse.


        :param creation_time: The creation_time of this GetSequenceStoreResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def fallback_location(self):
        """Gets the fallback_location of this GetSequenceStoreResponse.


        :return: The fallback_location of this GetSequenceStoreResponse.
        :rtype: str
        """
        return self._fallback_location

    @fallback_location.setter
    def fallback_location(self, fallback_location):
        """Sets the fallback_location of this GetSequenceStoreResponse.


        :param fallback_location: The fallback_location of this GetSequenceStoreResponse.
        :type fallback_location: str
        """

        self._fallback_location = fallback_location
