# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_status import WorkflowStatus
from openapi_server.models.workflow_type import WorkflowType
from openapi_server import util


class WorkflowListItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, name: str=None, status: WorkflowStatus=None, type: WorkflowType=None, digest: str=None, creation_time: datetime=None, metadata: Dict=None):
        """WorkflowListItem - a model defined in OpenAPI

        :param arn: The arn of this WorkflowListItem.
        :param id: The id of this WorkflowListItem.
        :param name: The name of this WorkflowListItem.
        :param status: The status of this WorkflowListItem.
        :param type: The type of this WorkflowListItem.
        :param digest: The digest of this WorkflowListItem.
        :param creation_time: The creation_time of this WorkflowListItem.
        :param metadata: The metadata of this WorkflowListItem.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'name': str,
            'status': WorkflowStatus,
            'type': WorkflowType,
            'digest': str,
            'creation_time': datetime,
            'metadata': Dict
        }

        self.attribute_map = {
            'arn': 'arn',
            'id': 'id',
            'name': 'name',
            'status': 'status',
            'type': 'type',
            'digest': 'digest',
            'creation_time': 'creationTime',
            'metadata': 'metadata'
        }

        self._arn = arn
        self._id = id
        self._name = name
        self._status = status
        self._type = type
        self._digest = digest
        self._creation_time = creation_time
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowListItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowListItem of this WorkflowListItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this WorkflowListItem.


        :return: The arn of this WorkflowListItem.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this WorkflowListItem.


        :param arn: The arn of this WorkflowListItem.
        :type arn: str
        """

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this WorkflowListItem.


        :return: The id of this WorkflowListItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkflowListItem.


        :param id: The id of this WorkflowListItem.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this WorkflowListItem.


        :return: The name of this WorkflowListItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkflowListItem.


        :param name: The name of this WorkflowListItem.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this WorkflowListItem.


        :return: The status of this WorkflowListItem.
        :rtype: WorkflowStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkflowListItem.


        :param status: The status of this WorkflowListItem.
        :type status: WorkflowStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this WorkflowListItem.


        :return: The type of this WorkflowListItem.
        :rtype: WorkflowType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WorkflowListItem.


        :param type: The type of this WorkflowListItem.
        :type type: WorkflowType
        """

        self._type = type

    @property
    def digest(self):
        """Gets the digest of this WorkflowListItem.


        :return: The digest of this WorkflowListItem.
        :rtype: str
        """
        return self._digest

    @digest.setter
    def digest(self, digest):
        """Sets the digest of this WorkflowListItem.


        :param digest: The digest of this WorkflowListItem.
        :type digest: str
        """

        self._digest = digest

    @property
    def creation_time(self):
        """Gets the creation_time of this WorkflowListItem.


        :return: The creation_time of this WorkflowListItem.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this WorkflowListItem.


        :param creation_time: The creation_time of this WorkflowListItem.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def metadata(self):
        """Gets the metadata of this WorkflowListItem.


        :return: The metadata of this WorkflowListItem.
        :rtype: Dict
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this WorkflowListItem.


        :param metadata: The metadata of this WorkflowListItem.
        :type metadata: Dict
        """

        self._metadata = metadata
