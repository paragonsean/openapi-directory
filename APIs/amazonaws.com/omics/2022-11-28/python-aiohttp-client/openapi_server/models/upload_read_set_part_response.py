# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadReadSetPartResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checksum: str=None):
        """UploadReadSetPartResponse - a model defined in OpenAPI

        :param checksum: The checksum of this UploadReadSetPartResponse.
        """
        self.openapi_types = {
            'checksum': str
        }

        self.attribute_map = {
            'checksum': 'checksum'
        }

        self._checksum = checksum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadReadSetPartResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadReadSetPartResponse of this UploadReadSetPartResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checksum(self):
        """Gets the checksum of this UploadReadSetPartResponse.


        :return: The checksum of this UploadReadSetPartResponse.
        :rtype: str
        """
        return self._checksum

    @checksum.setter
    def checksum(self, checksum):
        """Sets the checksum of this UploadReadSetPartResponse.


        :param checksum: The checksum of this UploadReadSetPartResponse.
        :type checksum: str
        """
        if checksum is None:
            raise ValueError("Invalid value for `checksum`, must not be `None`")

        self._checksum = checksum
