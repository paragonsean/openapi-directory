# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accelerators import Accelerators
from openapi_server.models.workflow_engine import WorkflowEngine
from openapi_server.models.workflow_status import WorkflowStatus
from openapi_server.models.workflow_type import WorkflowType
from openapi_server import util


class GetWorkflowResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, status: WorkflowStatus=None, type: WorkflowType=None, name: str=None, description: str=None, engine: WorkflowEngine=None, definition: str=None, main: str=None, digest: str=None, parameter_template: Dict=None, storage_capacity: int=None, creation_time: datetime=None, status_message: str=None, tags: Dict=None, metadata: Dict=None, accelerators: Accelerators=None):
        """GetWorkflowResponse - a model defined in OpenAPI

        :param arn: The arn of this GetWorkflowResponse.
        :param id: The id of this GetWorkflowResponse.
        :param status: The status of this GetWorkflowResponse.
        :param type: The type of this GetWorkflowResponse.
        :param name: The name of this GetWorkflowResponse.
        :param description: The description of this GetWorkflowResponse.
        :param engine: The engine of this GetWorkflowResponse.
        :param definition: The definition of this GetWorkflowResponse.
        :param main: The main of this GetWorkflowResponse.
        :param digest: The digest of this GetWorkflowResponse.
        :param parameter_template: The parameter_template of this GetWorkflowResponse.
        :param storage_capacity: The storage_capacity of this GetWorkflowResponse.
        :param creation_time: The creation_time of this GetWorkflowResponse.
        :param status_message: The status_message of this GetWorkflowResponse.
        :param tags: The tags of this GetWorkflowResponse.
        :param metadata: The metadata of this GetWorkflowResponse.
        :param accelerators: The accelerators of this GetWorkflowResponse.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'status': WorkflowStatus,
            'type': WorkflowType,
            'name': str,
            'description': str,
            'engine': WorkflowEngine,
            'definition': str,
            'main': str,
            'digest': str,
            'parameter_template': Dict,
            'storage_capacity': int,
            'creation_time': datetime,
            'status_message': str,
            'tags': Dict,
            'metadata': Dict,
            'accelerators': Accelerators
        }

        self.attribute_map = {
            'arn': 'arn',
            'id': 'id',
            'status': 'status',
            'type': 'type',
            'name': 'name',
            'description': 'description',
            'engine': 'engine',
            'definition': 'definition',
            'main': 'main',
            'digest': 'digest',
            'parameter_template': 'parameterTemplate',
            'storage_capacity': 'storageCapacity',
            'creation_time': 'creationTime',
            'status_message': 'statusMessage',
            'tags': 'tags',
            'metadata': 'metadata',
            'accelerators': 'accelerators'
        }

        self._arn = arn
        self._id = id
        self._status = status
        self._type = type
        self._name = name
        self._description = description
        self._engine = engine
        self._definition = definition
        self._main = main
        self._digest = digest
        self._parameter_template = parameter_template
        self._storage_capacity = storage_capacity
        self._creation_time = creation_time
        self._status_message = status_message
        self._tags = tags
        self._metadata = metadata
        self._accelerators = accelerators

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWorkflowResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWorkflowResponse of this GetWorkflowResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this GetWorkflowResponse.


        :return: The arn of this GetWorkflowResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetWorkflowResponse.


        :param arn: The arn of this GetWorkflowResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this GetWorkflowResponse.


        :return: The id of this GetWorkflowResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetWorkflowResponse.


        :param id: The id of this GetWorkflowResponse.
        :type id: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this GetWorkflowResponse.


        :return: The status of this GetWorkflowResponse.
        :rtype: WorkflowStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetWorkflowResponse.


        :param status: The status of this GetWorkflowResponse.
        :type status: WorkflowStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this GetWorkflowResponse.


        :return: The type of this GetWorkflowResponse.
        :rtype: WorkflowType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetWorkflowResponse.


        :param type: The type of this GetWorkflowResponse.
        :type type: WorkflowType
        """

        self._type = type

    @property
    def name(self):
        """Gets the name of this GetWorkflowResponse.


        :return: The name of this GetWorkflowResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetWorkflowResponse.


        :param name: The name of this GetWorkflowResponse.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this GetWorkflowResponse.


        :return: The description of this GetWorkflowResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetWorkflowResponse.


        :param description: The description of this GetWorkflowResponse.
        :type description: str
        """

        self._description = description

    @property
    def engine(self):
        """Gets the engine of this GetWorkflowResponse.


        :return: The engine of this GetWorkflowResponse.
        :rtype: WorkflowEngine
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this GetWorkflowResponse.


        :param engine: The engine of this GetWorkflowResponse.
        :type engine: WorkflowEngine
        """

        self._engine = engine

    @property
    def definition(self):
        """Gets the definition of this GetWorkflowResponse.


        :return: The definition of this GetWorkflowResponse.
        :rtype: str
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this GetWorkflowResponse.


        :param definition: The definition of this GetWorkflowResponse.
        :type definition: str
        """

        self._definition = definition

    @property
    def main(self):
        """Gets the main of this GetWorkflowResponse.


        :return: The main of this GetWorkflowResponse.
        :rtype: str
        """
        return self._main

    @main.setter
    def main(self, main):
        """Sets the main of this GetWorkflowResponse.


        :param main: The main of this GetWorkflowResponse.
        :type main: str
        """

        self._main = main

    @property
    def digest(self):
        """Gets the digest of this GetWorkflowResponse.


        :return: The digest of this GetWorkflowResponse.
        :rtype: str
        """
        return self._digest

    @digest.setter
    def digest(self, digest):
        """Sets the digest of this GetWorkflowResponse.


        :param digest: The digest of this GetWorkflowResponse.
        :type digest: str
        """

        self._digest = digest

    @property
    def parameter_template(self):
        """Gets the parameter_template of this GetWorkflowResponse.


        :return: The parameter_template of this GetWorkflowResponse.
        :rtype: Dict
        """
        return self._parameter_template

    @parameter_template.setter
    def parameter_template(self, parameter_template):
        """Sets the parameter_template of this GetWorkflowResponse.


        :param parameter_template: The parameter_template of this GetWorkflowResponse.
        :type parameter_template: Dict
        """

        self._parameter_template = parameter_template

    @property
    def storage_capacity(self):
        """Gets the storage_capacity of this GetWorkflowResponse.


        :return: The storage_capacity of this GetWorkflowResponse.
        :rtype: int
        """
        return self._storage_capacity

    @storage_capacity.setter
    def storage_capacity(self, storage_capacity):
        """Sets the storage_capacity of this GetWorkflowResponse.


        :param storage_capacity: The storage_capacity of this GetWorkflowResponse.
        :type storage_capacity: int
        """

        self._storage_capacity = storage_capacity

    @property
    def creation_time(self):
        """Gets the creation_time of this GetWorkflowResponse.


        :return: The creation_time of this GetWorkflowResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GetWorkflowResponse.


        :param creation_time: The creation_time of this GetWorkflowResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def status_message(self):
        """Gets the status_message of this GetWorkflowResponse.


        :return: The status_message of this GetWorkflowResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetWorkflowResponse.


        :param status_message: The status_message of this GetWorkflowResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def tags(self):
        """Gets the tags of this GetWorkflowResponse.


        :return: The tags of this GetWorkflowResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetWorkflowResponse.


        :param tags: The tags of this GetWorkflowResponse.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def metadata(self):
        """Gets the metadata of this GetWorkflowResponse.


        :return: The metadata of this GetWorkflowResponse.
        :rtype: Dict
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GetWorkflowResponse.


        :param metadata: The metadata of this GetWorkflowResponse.
        :type metadata: Dict
        """

        self._metadata = metadata

    @property
    def accelerators(self):
        """Gets the accelerators of this GetWorkflowResponse.


        :return: The accelerators of this GetWorkflowResponse.
        :rtype: Accelerators
        """
        return self._accelerators

    @accelerators.setter
    def accelerators(self, accelerators):
        """Sets the accelerators of this GetWorkflowResponse.


        :param accelerators: The accelerators of this GetWorkflowResponse.
        :type accelerators: Accelerators
        """

        self._accelerators = accelerators
