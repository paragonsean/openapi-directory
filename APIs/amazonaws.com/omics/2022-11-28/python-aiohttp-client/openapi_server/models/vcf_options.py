# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VcfOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_qual_field: bool=None, ignore_filter_field: bool=None):
        """VcfOptions - a model defined in OpenAPI

        :param ignore_qual_field: The ignore_qual_field of this VcfOptions.
        :param ignore_filter_field: The ignore_filter_field of this VcfOptions.
        """
        self.openapi_types = {
            'ignore_qual_field': bool,
            'ignore_filter_field': bool
        }

        self.attribute_map = {
            'ignore_qual_field': 'ignoreQualField',
            'ignore_filter_field': 'ignoreFilterField'
        }

        self._ignore_qual_field = ignore_qual_field
        self._ignore_filter_field = ignore_filter_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VcfOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VcfOptions of this VcfOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_qual_field(self):
        """Gets the ignore_qual_field of this VcfOptions.


        :return: The ignore_qual_field of this VcfOptions.
        :rtype: bool
        """
        return self._ignore_qual_field

    @ignore_qual_field.setter
    def ignore_qual_field(self, ignore_qual_field):
        """Sets the ignore_qual_field of this VcfOptions.


        :param ignore_qual_field: The ignore_qual_field of this VcfOptions.
        :type ignore_qual_field: bool
        """

        self._ignore_qual_field = ignore_qual_field

    @property
    def ignore_filter_field(self):
        """Gets the ignore_filter_field of this VcfOptions.


        :return: The ignore_filter_field of this VcfOptions.
        :rtype: bool
        """
        return self._ignore_filter_field

    @ignore_filter_field.setter
    def ignore_filter_field(self, ignore_filter_field):
        """Sets the ignore_filter_field of this VcfOptions.


        :param ignore_filter_field: The ignore_filter_field of this VcfOptions.
        :type ignore_filter_field: bool
        """

        self._ignore_filter_field = ignore_filter_field
