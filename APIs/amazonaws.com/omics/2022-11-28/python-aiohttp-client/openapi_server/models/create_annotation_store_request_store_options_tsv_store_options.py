# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.annotation_type import AnnotationType
from openapi_server import util


class CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_type: AnnotationType=None, format_to_header: Dict=None, _schema: List=None):
        """CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions - a model defined in OpenAPI

        :param annotation_type: The annotation_type of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :param format_to_header: The format_to_header of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :param _schema: The _schema of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        """
        self.openapi_types = {
            'annotation_type': AnnotationType,
            'format_to_header': Dict,
            '_schema': List
        }

        self.attribute_map = {
            'annotation_type': 'annotationType',
            'format_to_header': 'formatToHeader',
            '_schema': 'schema'
        }

        self._annotation_type = annotation_type
        self._format_to_header = format_to_header
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAnnotationStore_request_storeOptions_tsvStoreOptions of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_type(self):
        """Gets the annotation_type of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :return: The annotation_type of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :rtype: AnnotationType
        """
        return self._annotation_type

    @annotation_type.setter
    def annotation_type(self, annotation_type):
        """Sets the annotation_type of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :param annotation_type: The annotation_type of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :type annotation_type: AnnotationType
        """

        self._annotation_type = annotation_type

    @property
    def format_to_header(self):
        """Gets the format_to_header of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :return: The format_to_header of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :rtype: Dict
        """
        return self._format_to_header

    @format_to_header.setter
    def format_to_header(self, format_to_header):
        """Sets the format_to_header of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :param format_to_header: The format_to_header of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :type format_to_header: Dict
        """

        self._format_to_header = format_to_header

    @property
    def _schema(self):
        """Gets the _schema of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :return: The _schema of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :rtype: List
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.


        :param _schema: The _schema of this CreateAnnotationStoreRequestStoreOptionsTsvStoreOptions.
        :type _schema: List
        """

        self.__schema = _schema
