# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSequenceStoresResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, sequence_stores: List=None):
        """ListSequenceStoresResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListSequenceStoresResponse.
        :param sequence_stores: The sequence_stores of this ListSequenceStoresResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'sequence_stores': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'sequence_stores': 'sequenceStores'
        }

        self._next_token = next_token
        self._sequence_stores = sequence_stores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSequenceStoresResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSequenceStoresResponse of this ListSequenceStoresResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListSequenceStoresResponse.


        :return: The next_token of this ListSequenceStoresResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListSequenceStoresResponse.


        :param next_token: The next_token of this ListSequenceStoresResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def sequence_stores(self):
        """Gets the sequence_stores of this ListSequenceStoresResponse.


        :return: The sequence_stores of this ListSequenceStoresResponse.
        :rtype: List
        """
        return self._sequence_stores

    @sequence_stores.setter
    def sequence_stores(self, sequence_stores):
        """Sets the sequence_stores of this ListSequenceStoresResponse.


        :param sequence_stores: The sequence_stores of this ListSequenceStoresResponse.
        :type sequence_stores: List
        """
        if sequence_stores is None:
            raise ValueError("Invalid value for `sequence_stores`, must not be `None`")

        self._sequence_stores = sequence_stores
