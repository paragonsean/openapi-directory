# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.read_set_files_index import ReadSetFilesIndex
from openapi_server.models.read_set_files_source1 import ReadSetFilesSource1
from openapi_server.models.read_set_files_source2 import ReadSetFilesSource2
from openapi_server import util


class ReadSetFiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source1: ReadSetFilesSource1=None, source2: ReadSetFilesSource2=None, index: ReadSetFilesIndex=None):
        """ReadSetFiles - a model defined in OpenAPI

        :param source1: The source1 of this ReadSetFiles.
        :param source2: The source2 of this ReadSetFiles.
        :param index: The index of this ReadSetFiles.
        """
        self.openapi_types = {
            'source1': ReadSetFilesSource1,
            'source2': ReadSetFilesSource2,
            'index': ReadSetFilesIndex
        }

        self.attribute_map = {
            'source1': 'source1',
            'source2': 'source2',
            'index': 'index'
        }

        self._source1 = source1
        self._source2 = source2
        self._index = index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReadSetFiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReadSetFiles of this ReadSetFiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source1(self):
        """Gets the source1 of this ReadSetFiles.


        :return: The source1 of this ReadSetFiles.
        :rtype: ReadSetFilesSource1
        """
        return self._source1

    @source1.setter
    def source1(self, source1):
        """Sets the source1 of this ReadSetFiles.


        :param source1: The source1 of this ReadSetFiles.
        :type source1: ReadSetFilesSource1
        """

        self._source1 = source1

    @property
    def source2(self):
        """Gets the source2 of this ReadSetFiles.


        :return: The source2 of this ReadSetFiles.
        :rtype: ReadSetFilesSource2
        """
        return self._source2

    @source2.setter
    def source2(self, source2):
        """Sets the source2 of this ReadSetFiles.


        :param source2: The source2 of this ReadSetFiles.
        :type source2: ReadSetFilesSource2
        """

        self._source2 = source2

    @property
    def index(self):
        """Gets the index of this ReadSetFiles.


        :return: The index of this ReadSetFiles.
        :rtype: ReadSetFilesIndex
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this ReadSetFiles.


        :param index: The index of this ReadSetFiles.
        :type index: ReadSetFilesIndex
        """

        self._index = index
