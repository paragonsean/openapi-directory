# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creation_type import CreationType
from openapi_server.models.file_type import FileType
from openapi_server.models.get_read_set_metadata_response_files import GetReadSetMetadataResponseFiles
from openapi_server.models.get_read_set_metadata_response_sequence_information import GetReadSetMetadataResponseSequenceInformation
from openapi_server.models.read_set_status import ReadSetStatus
from openapi_server import util


class GetReadSetMetadataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, sequence_store_id: str=None, subject_id: str=None, sample_id: str=None, status: ReadSetStatus=None, name: str=None, description: str=None, file_type: FileType=None, creation_time: datetime=None, sequence_information: GetReadSetMetadataResponseSequenceInformation=None, reference_arn: str=None, files: GetReadSetMetadataResponseFiles=None, status_message: str=None, creation_type: CreationType=None):
        """GetReadSetMetadataResponse - a model defined in OpenAPI

        :param id: The id of this GetReadSetMetadataResponse.
        :param arn: The arn of this GetReadSetMetadataResponse.
        :param sequence_store_id: The sequence_store_id of this GetReadSetMetadataResponse.
        :param subject_id: The subject_id of this GetReadSetMetadataResponse.
        :param sample_id: The sample_id of this GetReadSetMetadataResponse.
        :param status: The status of this GetReadSetMetadataResponse.
        :param name: The name of this GetReadSetMetadataResponse.
        :param description: The description of this GetReadSetMetadataResponse.
        :param file_type: The file_type of this GetReadSetMetadataResponse.
        :param creation_time: The creation_time of this GetReadSetMetadataResponse.
        :param sequence_information: The sequence_information of this GetReadSetMetadataResponse.
        :param reference_arn: The reference_arn of this GetReadSetMetadataResponse.
        :param files: The files of this GetReadSetMetadataResponse.
        :param status_message: The status_message of this GetReadSetMetadataResponse.
        :param creation_type: The creation_type of this GetReadSetMetadataResponse.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'sequence_store_id': str,
            'subject_id': str,
            'sample_id': str,
            'status': ReadSetStatus,
            'name': str,
            'description': str,
            'file_type': FileType,
            'creation_time': datetime,
            'sequence_information': GetReadSetMetadataResponseSequenceInformation,
            'reference_arn': str,
            'files': GetReadSetMetadataResponseFiles,
            'status_message': str,
            'creation_type': CreationType
        }

        self.attribute_map = {
            'id': 'id',
            'arn': 'arn',
            'sequence_store_id': 'sequenceStoreId',
            'subject_id': 'subjectId',
            'sample_id': 'sampleId',
            'status': 'status',
            'name': 'name',
            'description': 'description',
            'file_type': 'fileType',
            'creation_time': 'creationTime',
            'sequence_information': 'sequenceInformation',
            'reference_arn': 'referenceArn',
            'files': 'files',
            'status_message': 'statusMessage',
            'creation_type': 'creationType'
        }

        self._id = id
        self._arn = arn
        self._sequence_store_id = sequence_store_id
        self._subject_id = subject_id
        self._sample_id = sample_id
        self._status = status
        self._name = name
        self._description = description
        self._file_type = file_type
        self._creation_time = creation_time
        self._sequence_information = sequence_information
        self._reference_arn = reference_arn
        self._files = files
        self._status_message = status_message
        self._creation_type = creation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReadSetMetadataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetReadSetMetadataResponse of this GetReadSetMetadataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this GetReadSetMetadataResponse.


        :return: The id of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetReadSetMetadataResponse.


        :param id: The id of this GetReadSetMetadataResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this GetReadSetMetadataResponse.


        :return: The arn of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetReadSetMetadataResponse.


        :param arn: The arn of this GetReadSetMetadataResponse.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def sequence_store_id(self):
        """Gets the sequence_store_id of this GetReadSetMetadataResponse.


        :return: The sequence_store_id of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._sequence_store_id

    @sequence_store_id.setter
    def sequence_store_id(self, sequence_store_id):
        """Sets the sequence_store_id of this GetReadSetMetadataResponse.


        :param sequence_store_id: The sequence_store_id of this GetReadSetMetadataResponse.
        :type sequence_store_id: str
        """
        if sequence_store_id is None:
            raise ValueError("Invalid value for `sequence_store_id`, must not be `None`")

        self._sequence_store_id = sequence_store_id

    @property
    def subject_id(self):
        """Gets the subject_id of this GetReadSetMetadataResponse.


        :return: The subject_id of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this GetReadSetMetadataResponse.


        :param subject_id: The subject_id of this GetReadSetMetadataResponse.
        :type subject_id: str
        """

        self._subject_id = subject_id

    @property
    def sample_id(self):
        """Gets the sample_id of this GetReadSetMetadataResponse.


        :return: The sample_id of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._sample_id

    @sample_id.setter
    def sample_id(self, sample_id):
        """Sets the sample_id of this GetReadSetMetadataResponse.


        :param sample_id: The sample_id of this GetReadSetMetadataResponse.
        :type sample_id: str
        """

        self._sample_id = sample_id

    @property
    def status(self):
        """Gets the status of this GetReadSetMetadataResponse.


        :return: The status of this GetReadSetMetadataResponse.
        :rtype: ReadSetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetReadSetMetadataResponse.


        :param status: The status of this GetReadSetMetadataResponse.
        :type status: ReadSetStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def name(self):
        """Gets the name of this GetReadSetMetadataResponse.


        :return: The name of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetReadSetMetadataResponse.


        :param name: The name of this GetReadSetMetadataResponse.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this GetReadSetMetadataResponse.


        :return: The description of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetReadSetMetadataResponse.


        :param description: The description of this GetReadSetMetadataResponse.
        :type description: str
        """

        self._description = description

    @property
    def file_type(self):
        """Gets the file_type of this GetReadSetMetadataResponse.


        :return: The file_type of this GetReadSetMetadataResponse.
        :rtype: FileType
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this GetReadSetMetadataResponse.


        :param file_type: The file_type of this GetReadSetMetadataResponse.
        :type file_type: FileType
        """
        if file_type is None:
            raise ValueError("Invalid value for `file_type`, must not be `None`")

        self._file_type = file_type

    @property
    def creation_time(self):
        """Gets the creation_time of this GetReadSetMetadataResponse.


        :return: The creation_time of this GetReadSetMetadataResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GetReadSetMetadataResponse.


        :param creation_time: The creation_time of this GetReadSetMetadataResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def sequence_information(self):
        """Gets the sequence_information of this GetReadSetMetadataResponse.


        :return: The sequence_information of this GetReadSetMetadataResponse.
        :rtype: GetReadSetMetadataResponseSequenceInformation
        """
        return self._sequence_information

    @sequence_information.setter
    def sequence_information(self, sequence_information):
        """Sets the sequence_information of this GetReadSetMetadataResponse.


        :param sequence_information: The sequence_information of this GetReadSetMetadataResponse.
        :type sequence_information: GetReadSetMetadataResponseSequenceInformation
        """

        self._sequence_information = sequence_information

    @property
    def reference_arn(self):
        """Gets the reference_arn of this GetReadSetMetadataResponse.


        :return: The reference_arn of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._reference_arn

    @reference_arn.setter
    def reference_arn(self, reference_arn):
        """Sets the reference_arn of this GetReadSetMetadataResponse.


        :param reference_arn: The reference_arn of this GetReadSetMetadataResponse.
        :type reference_arn: str
        """

        self._reference_arn = reference_arn

    @property
    def files(self):
        """Gets the files of this GetReadSetMetadataResponse.


        :return: The files of this GetReadSetMetadataResponse.
        :rtype: GetReadSetMetadataResponseFiles
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this GetReadSetMetadataResponse.


        :param files: The files of this GetReadSetMetadataResponse.
        :type files: GetReadSetMetadataResponseFiles
        """

        self._files = files

    @property
    def status_message(self):
        """Gets the status_message of this GetReadSetMetadataResponse.


        :return: The status_message of this GetReadSetMetadataResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetReadSetMetadataResponse.


        :param status_message: The status_message of this GetReadSetMetadataResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def creation_type(self):
        """Gets the creation_type of this GetReadSetMetadataResponse.


        :return: The creation_type of this GetReadSetMetadataResponse.
        :rtype: CreationType
        """
        return self._creation_type

    @creation_type.setter
    def creation_type(self, creation_type):
        """Sets the creation_type of this GetReadSetMetadataResponse.


        :param creation_type: The creation_type of this GetReadSetMetadataResponse.
        :type creation_type: CreationType
        """

        self._creation_type = creation_type
