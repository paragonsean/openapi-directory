openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Resource Groups lets you organize Amazon Web Services resources\
    \ such as Amazon Elastic Compute Cloud instances, Amazon Relational Database Service\
    \ databases, and Amazon Simple Storage Service buckets into groups using criteria\
    \ that you define as tags. A resource group is a collection of resources that\
    \ match the resource types specified in a query, and share one or more tags or\
    \ portions of tags. You can create a group of resources based on their roles in\
    \ your cloud infrastructure, lifecycle stages, regions, application layers, or\
    \ virtually any criteria. Resource Groups enable you to automate management tasks,\
    \ such as those in Amazon Web Services Systems Manager Automation documents, on\
    \ tag-related resources in Amazon Web Services Systems Manager. Groups of tagged\
    \ resources also let you quickly view a custom console in Amazon Web Services\
    \ Systems Manager that shows Config compliance and other monitoring data about\
    \ member resources.</p> <p>To create a resource group, build a resource query,\
    \ and specify tags that identify the criteria that members of the group have in\
    \ common. Tags are key-value pairs.</p> <p>For more information about Resource\
    \ Groups, see the <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html\"\
    >Resource Groups User Guide</a>.</p> <p>Resource Groups uses a REST-compliant\
    \ API that you can use to perform the following types of operations.</p> <ul>\
    \ <li> <p>Create, Read, Update, and Delete (CRUD) operations on resource groups\
    \ and resource query entities</p> </li> <li> <p>Applying, editing, and removing\
    \ tags from resource groups</p> </li> <li> <p>Resolving resource group member\
    \ ARNs so they can be returned as search results</p> </li> <li> <p>Getting data\
    \ about resources that are members of a group</p> </li> <li> <p>Searching Amazon\
    \ Web Services resources based on a resource query</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Resource Groups
  version: 2017-11-27
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: resource-groups
  x-aws-signingName: resource-groups
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resource-groups-2017-11-27.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/resource-groups/
servers:
- description: The Resource Groups multi-region endpoint
  url: "http://resource-groups.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Resource Groups multi-region endpoint
  url: "https://resource-groups.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Resource Groups endpoint for China (Beijing) and China (Ningxia)
  url: "http://resource-groups.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Resource Groups endpoint for China (Beijing) and China (Ningxia)
  url: "https://resource-groups.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /groups:
    post:
      description: "<p>Creates a resource group with the specified name and description.\
        \ You can optionally include either a resource query or a service configuration.\
        \ For more information about constructing a resource query, see <a href=\"\
        https://docs.aws.amazon.com/ARG/latest/userguide/getting_started-query.html\"\
        >Build queries and groups in Resource Groups</a> in the <i>Resource Groups\
        \ User Guide</i>. For more information about service-linked groups and service\
        \ configurations, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
        >Service configurations for Resource Groups</a>.</p> <p> <b>Minimum permissions</b>\
        \ </p> <p>To run this command, you must have the following permissions:</p>\
        \ <ul> <li> <p> <code>resource-groups:CreateGroup</code> </p> </li> </ul>"
      operationId: CreateGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /delete-group:
    post:
      description: "<p>Deletes the specified resource group. Deleting a resource group\
        \ does not delete any resources that are members of the group; it only deletes\
        \ the group structure.</p> <p> <b>Minimum permissions</b> </p> <p>To run this\
        \ command, you must have the following permissions:</p> <ul> <li> <p> <code>resource-groups:DeleteGroup</code>\
        \ </p> </li> </ul>"
      operationId: DeleteGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-account-settings:
    post:
      description: Retrieves the current status of optional features in Resource Groups.
      operationId: GetAccountSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-accepts:
      - application/json
  /get-group:
    post:
      description: "<p>Returns information about a specified resource group.</p> <p>\
        \ <b>Minimum permissions</b> </p> <p>To run this command, you must have the\
        \ following permissions:</p> <ul> <li> <p> <code>resource-groups:GetGroup</code>\
        \ </p> </li> </ul>"
      operationId: GetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-group-configuration:
    post:
      description: "<p>Retrieves the service configuration associated with the specified\
        \ resource group. For details about the service configuration syntax, see\
        \ <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
        >Service configurations for Resource Groups</a>.</p> <p> <b>Minimum permissions</b>\
        \ </p> <p>To run this command, you must have the following permissions:</p>\
        \ <ul> <li> <p> <code>resource-groups:GetGroupConfiguration</code> </p> </li>\
        \ </ul>"
      operationId: GetGroupConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /get-group-query:
    post:
      description: "<p>Retrieves the resource query associated with the specified\
        \ resource group. For more information about resource queries, see <a href=\"\
        https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag\"\
        >Create a tag-based group in Resource Groups</a>.</p> <p> <b>Minimum permissions</b>\
        \ </p> <p>To run this command, you must have the following permissions:</p>\
        \ <ul> <li> <p> <code>resource-groups:GetGroupQuery</code> </p> </li> </ul>"
      operationId: GetGroupQuery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupQuery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupQueryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /resources/{Arn}/tags:
    get:
      description: "<p>Returns a list of tags that are associated with a resource\
        \ group, specified by an ARN.</p> <p> <b>Minimum permissions</b> </p> <p>To\
        \ run this command, you must have the following permissions:</p> <ul> <li>\
        \ <p> <code>resource-groups:GetTags</code> </p> </li> </ul>"
      operationId: GetTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource group whose tags you want to retrieve.
        explode: false
        in: path
        name: Arn
        required: true
        schema:
          maxLength: 1600
          minLength: 12
          pattern: "arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-accepts:
      - application/json
    patch:
      description: "<p>Deletes tags from a specified resource group.</p> <p> <b>Minimum\
        \ permissions</b> </p> <p>To run this command, you must have the following\
        \ permissions:</p> <ul> <li> <p> <code>resource-groups:Untag</code> </p> </li>\
        \ </ul>"
      operationId: Untag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource group from which to remove tags. The
          command removed both the specified keys and any values associated with those
          keys.
        explode: false
        in: path
        name: Arn
        required: true
        schema:
          maxLength: 1600
          minLength: 12
          pattern: "arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Untag_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "<p>Adds tags to a resource group with the specified ARN. Existing\
        \ tags on a resource group are not changed if they are not specified in the\
        \ request parameters.</p> <important> <p>Do not store personally identifiable\
        \ information (PII) or other confidential or sensitive information in tags.\
        \ We use tags to provide you with billing and administration services. Tags\
        \ are not intended to be used for private or sensitive data.</p> </important>\
        \ <p> <b>Minimum permissions</b> </p> <p>To run this command, you must have\
        \ the following permissions:</p> <ul> <li> <p> <code>resource-groups:Tag</code>\
        \ </p> </li> </ul>"
      operationId: Tag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource group to which to add tags.
        explode: false
        in: path
        name: Arn
        required: true
        schema:
          maxLength: 1600
          minLength: 12
          pattern: "arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /group-resources:
    post:
      description: "<p>Adds the specified resources to the specified group.</p> <important>\
        \ <p>You can use this operation with only resource groups that are configured\
        \ with the following types:</p> <ul> <li> <p> <code>AWS::EC2::HostManagement</code>\
        \ </p> </li> <li> <p> <code>AWS::EC2::CapacityReservationPool</code> </p>\
        \ </li> </ul> <p>Other resource group type and resource types aren't currently\
        \ supported by this operation.</p> </important> <p> <b>Minimum permissions</b>\
        \ </p> <p>To run this command, you must have the following permissions:</p>\
        \ <ul> <li> <p> <code>resource-groups:GroupResources</code> </p> </li> </ul>"
      operationId: GroupResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupResources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-group-resources:
    post:
      description: "<p>Returns a list of ARNs of the resources that are members of\
        \ a specified resource group.</p> <p> <b>Minimum permissions</b> </p> <p>To\
        \ run this command, you must have the following permissions:</p> <ul> <li>\
        \ <p> <code>resource-groups:ListGroupResources</code> </p> </li> <li> <p>\
        \ <code>cloudformation:DescribeStacks</code> </p> </li> <li> <p> <code>cloudformation:ListStackResources</code>\
        \ </p> </li> <li> <p> <code>tag:GetResources</code> </p> </li> </ul>"
      operationId: ListGroupResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupResources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /groups-list:
    post:
      description: "<p>Returns a list of existing Resource Groups in your account.</p>\
        \ <p> <b>Minimum permissions</b> </p> <p>To run this command, you must have\
        \ the following permissions:</p> <ul> <li> <p> <code>resource-groups:ListGroups</code>\
        \ </p> </li> </ul>"
      operationId: ListGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The total number of results that you want included on each page\
          \ of the response. If you do not include this parameter, it defaults to\
          \ a value that is specific to the operation. If additional items exist beyond\
          \ the maximum you specify, the <code>NextToken</code> response element is\
          \ present and has a value (is not null). Include that value as the <code>NextToken</code>\
          \ request parameter in the next call to the operation to get the next part\
          \ of the results. Note that the service might return fewer results than\
          \ the maximum even when there are more results available. You should check\
          \ <code>NextToken</code> after every operation to ensure that you receive\
          \ all of the results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The parameter for receiving additional results if you receive
          a <code>NextToken</code> response in a previous request. A <code>NextToken</code>
          response indicates that more output is available. Set this parameter to
          the value provided by a previous call's <code>NextToken</code> response
          to indicate where the output should continue from.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 0
          pattern: "^[a-zA-Z0-9+/]*={0,2}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroups_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /put-group-configuration:
    post:
      description: "<p>Attaches a service configuration to the specified group. This\
        \ occurs asynchronously, and can take time to complete. You can use <a>GetGroupConfiguration</a>\
        \ to check the status of the update.</p> <p> <b>Minimum permissions</b> </p>\
        \ <p>To run this command, you must have the following permissions:</p> <ul>\
        \ <li> <p> <code>resource-groups:PutGroupConfiguration</code> </p> </li> </ul>"
      operationId: PutGroupConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGroupConfiguration_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGroupConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /resources/search:
    post:
      description: "<p>Returns a list of Amazon Web Services resource identifiers\
        \ that matches the specified query. The query uses the same format as a resource\
        \ query in a <a>CreateGroup</a> or <a>UpdateGroupQuery</a> operation.</p>\
        \ <p> <b>Minimum permissions</b> </p> <p>To run this command, you must have\
        \ the following permissions:</p> <ul> <li> <p> <code>resource-groups:SearchResources</code>\
        \ </p> </li> <li> <p> <code>cloudformation:DescribeStacks</code> </p> </li>\
        \ <li> <p> <code>cloudformation:ListStackResources</code> </p> </li> <li>\
        \ <p> <code>tag:GetResources</code> </p> </li> </ul>"
      operationId: SearchResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchResources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ungroup-resources:
    post:
      description: "<p>Removes the specified resources from the specified group. This\
        \ operation works only with static groups that you populated using the <a>GroupResources</a>\
        \ operation. It doesn't work with any resource groups that are automatically\
        \ populated by tag-based or CloudFormation stack-based queries.</p> <p> <b>Minimum\
        \ permissions</b> </p> <p>To run this command, you must have the following\
        \ permissions:</p> <ul> <li> <p> <code>resource-groups:UngroupResources</code>\
        \ </p> </li> </ul>"
      operationId: UngroupResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UngroupResources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UngroupResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /update-account-settings:
    post:
      description: <p>Turns on or turns off optional features in Resource Groups.</p>
        <p>The preceding example shows that the request to turn on group lifecycle
        events is <code>IN_PROGRESS</code>. You can call the <a>GetAccountSettings</a>
        operation to check for completion by looking for <code>GroupLifecycleEventsStatus</code>
        to change to <code>ACTIVE</code>.</p>
      operationId: UpdateAccountSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /update-group:
    post:
      description: "<p>Updates the description for an existing group. You cannot update\
        \ the name of a resource group.</p> <p> <b>Minimum permissions</b> </p> <p>To\
        \ run this command, you must have the following permissions:</p> <ul> <li>\
        \ <p> <code>resource-groups:UpdateGroup</code> </p> </li> </ul>"
      operationId: UpdateGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
  /update-group-query:
    post:
      description: "<p>Updates the resource query of a group. For more information\
        \ about resource queries, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag\"\
        >Create a tag-based group in Resource Groups</a>.</p> <p> <b>Minimum permissions</b>\
        \ </p> <p>To run this command, you must have the following permissions:</p>\
        \ <ul> <li> <p> <code>resource-groups:UpdateGroupQuery</code> </p> </li> </ul>"
      operationId: UpdateGroupQuery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupQuery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupQueryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateGroupOutput:
      example:
        Group:
          Description: ""
          GroupArn: ""
          Name: ""
        ResourceQuery:
          Type: ""
          Query: ""
        GroupConfiguration:
          Status: ""
          Configuration: ""
          ProposedConfiguration: ""
          FailureReason: ""
        Tags: ""
      properties:
        Group:
          $ref: '#/components/schemas/CreateGroupOutput_Group'
        ResourceQuery:
          $ref: '#/components/schemas/CreateGroupOutput_ResourceQuery'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the group.
        GroupConfiguration:
          $ref: '#/components/schemas/CreateGroupOutput_GroupConfiguration'
      type: object
    QueryType:
      enum:
      - TAG_FILTERS_1_0
      - CLOUDFORMATION_STACK_1_0
      maxLength: 128
      minLength: 1
      pattern: ^\w+$
      type: string
    Query:
      maxLength: 4096
      pattern: "[\\s\\S]*"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    GroupConfigurationItem:
      description: "An item in a group configuration. A group service configuration\
        \ can have one or more items. For details about group service configuration\
        \ syntax, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
        >Service configurations for resource groups</a>."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationType'
          - description: "Specifies the type of group configuration item. Each item\
              \ must have a unique value for <code>type</code>. For the list of types\
              \ that you can specify for a configuration item, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types\"\
              >Supported resource types and parameters</a>."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/GroupParameterList'
          - description: "A collection of parameters for this group configuration\
              \ item. For the list of parameters that you can use with each configuration\
              \ item type, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types\"\
              >Supported resource types and parameters</a>."
      required:
      - Type
      type: object
    BadRequestException: {}
    ForbiddenException: {}
    MethodNotAllowedException: {}
    TooManyRequestsException: {}
    InternalServerErrorException: {}
    DeleteGroupOutput:
      example:
        Group:
          Description: ""
          GroupArn: ""
          Name: ""
      properties:
        Group:
          $ref: '#/components/schemas/DeleteGroupOutput_Group'
      type: object
    NotFoundException: {}
    GetAccountSettingsOutput:
      example:
        AccountSettings:
          GroupLifecycleEventsStatus: ""
          GroupLifecycleEventsDesiredStatus: ""
          GroupLifecycleEventsStatusMessage: ""
      properties:
        AccountSettings:
          $ref: '#/components/schemas/GetAccountSettingsOutput_AccountSettings'
      type: object
    GetGroupOutput:
      example:
        Group:
          Description: ""
          GroupArn: ""
          Name: ""
      properties:
        Group:
          $ref: '#/components/schemas/GetGroupOutput_Group'
      type: object
    GetGroupConfigurationOutput:
      example:
        GroupConfiguration:
          Status: ""
          Configuration: ""
          ProposedConfiguration: ""
          FailureReason: ""
      properties:
        GroupConfiguration:
          $ref: '#/components/schemas/GetGroupConfigurationOutput_GroupConfiguration'
      type: object
    GetGroupQueryOutput:
      example:
        GroupQuery:
          GroupName: ""
          ResourceQuery:
            Type: ""
            Query: ""
      properties:
        GroupQuery:
          $ref: '#/components/schemas/GetGroupQueryOutput_GroupQuery'
      type: object
    GetTagsOutput:
      example:
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          - description: The ARN of the tagged resource group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the specified resource group.
      type: object
    GroupResourcesOutput:
      example:
        Succeeded: ""
        Failed: ""
        Pending: ""
      properties:
        Succeeded:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: A list of ARNs of the resources that this operation successfully
              added to the group.
        Failed:
          allOf:
          - $ref: '#/components/schemas/FailedResourceList'
          - description: A list of ARNs of any resources that this operation failed
              to add to the group.
        Pending:
          allOf:
          - $ref: '#/components/schemas/PendingResourceList'
          - description: "A list of ARNs of any resources that this operation is still\
              \ in the process adding to the group. These pending additions continue\
              \ asynchronously. You can check the status of pending additions by using\
              \ the <code> <a>ListGroupResources</a> </code> operation, and checking\
              \ the <code>Resources</code> array in the response and the <code>Status</code>\
              \ field of each object in that array. "
      type: object
    ResourceArn:
      pattern: "arn:aws(-[a-z]+)*:[a-z0-9\\-]*:([a-z]{2}(-[a-z]+)+-\\d{1})?:([0-9]{12})?:.+"
      type: string
    ListGroupResourcesOutput:
      example:
        NextToken: ""
        Resources: ""
        QueryErrors: ""
        ResourceIdentifiers: ""
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/ListGroupResourcesItemList'
          - description: "An array of resources from which you can determine each\
              \ resource's identity, type, and group membership status."
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifierList'
          - deprecated: true
            description: "<important> <p> <b> <i>Deprecated - don't use this parameter.\
              \ Use the <code>Resources</code> response field instead.</i> </b> </p>\
              \ </important>This field is deprecated, use Resources instead."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If present, indicates that more output is available than\
              \ is included in the current response. Use this value in the <code>NextToken</code>\
              \ request parameter in a subsequent call to the operation to get the\
              \ next part of the output. You should repeat this until the <code>NextToken</code>\
              \ response element comes back as <code>null</code>."
        QueryErrors:
          allOf:
          - $ref: '#/components/schemas/QueryErrorList'
          - description: A list of <code>QueryError</code> objects. Each error is
              an object that contains <code>ErrorCode</code> and <code>Message</code>
              structures. Possible values for <code>ErrorCode</code> are <code>CLOUDFORMATION_STACK_INACTIVE</code>
              and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.
      type: object
    ResourceFilter:
      description: A filter name and value pair that is used to obtain more specific
        results from a list of resources.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterName'
          - description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterValues'
          - description: "One or more filter values. Allowed filter values vary by\
              \ resource filter name, and are case-sensitive."
      required:
      - Name
      - Values
      type: object
    UnauthorizedException: {}
    ListGroupsOutput:
      example:
        NextToken: ""
        Groups: ""
        GroupIdentifiers: ""
      properties:
        GroupIdentifiers:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifierList'
          - description: A list of <a>GroupIdentifier</a> objects. Each identifier
              is an object that contains both the <code>Name</code> and the <code>GroupArn</code>.
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupList'
          - deprecated: true
            description: "<important> <p> <i> <b>Deprecated - don't use this field.\
              \ Use the <code>GroupIdentifiers</code> response field instead.</b>\
              \ </i> </p> </important>This field is deprecated, use GroupIdentifiers\
              \ instead."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If present, indicates that more output is available than\
              \ is included in the current response. Use this value in the <code>NextToken</code>\
              \ request parameter in a subsequent call to the operation to get the\
              \ next part of the output. You should repeat this until the <code>NextToken</code>\
              \ response element comes back as <code>null</code>."
      type: object
    GroupFilter:
      description: A filter collection that you can use to restrict the results from
        a <code>List</code> operation to only those you want to include.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupFilterName'
          - description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/GroupFilterValues'
          - description: "One or more filter values. Allowed filter values vary by\
              \ group filter name, and are case-sensitive."
      required:
      - Name
      - Values
      type: object
    PutGroupConfigurationOutput:
      properties: {}
      type: object
    SearchResourcesOutput:
      example:
        NextToken: ""
        QueryErrors: ""
        ResourceIdentifiers: ""
      properties:
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifierList'
          - description: The ARNs and resource types of resources that are members
              of the group that you specified.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If present, indicates that more output is available than\
              \ is included in the current response. Use this value in the <code>NextToken</code>\
              \ request parameter in a subsequent call to the operation to get the\
              \ next part of the output. You should repeat this until the <code>NextToken</code>\
              \ response element comes back as <code>null</code>."
        QueryErrors:
          allOf:
          - $ref: '#/components/schemas/QueryErrorList'
          - description: <p>A list of <code>QueryError</code> objects. Each error
              is an object that contains <code>ErrorCode</code> and <code>Message</code>
              structures.</p> <p>Possible values for <code>ErrorCode</code>:</p> <ul>
              <li> <p> <code>CLOUDFORMATION_STACK_INACTIVE</code> </p> </li> <li>
              <p> <code>CLOUDFORMATION_STACK_NOT_EXISTING</code> </p> </li> </ul>
      type: object
    TagOutput:
      example:
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          - description: The ARN of the tagged resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags that have been added to the specified resource group.
      type: object
    UngroupResourcesOutput:
      example:
        Succeeded: ""
        Failed: ""
        Pending: ""
      properties:
        Succeeded:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: A list of resources that were successfully removed from the
              group by this operation.
        Failed:
          allOf:
          - $ref: '#/components/schemas/FailedResourceList'
          - description: A list of any resources that failed to be removed from the
              group by this operation.
        Pending:
          allOf:
          - $ref: '#/components/schemas/PendingResourceList'
          - description: "A list of any resources that are still in the process of\
              \ being removed from the group by this operation. These pending removals\
              \ continue asynchronously. You can check the status of pending removals\
              \ by using the <code> <a>ListGroupResources</a> </code> operation. After\
              \ the resource is successfully removed, it no longer appears in the\
              \ response."
      type: object
    UntagOutput:
      example:
        Keys: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          - description: The ARN of the resource group from which tags have been removed.
        Keys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The keys of the tags that were removed.
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    UpdateAccountSettingsOutput:
      example:
        AccountSettings:
          GroupLifecycleEventsStatus: ""
          GroupLifecycleEventsDesiredStatus: ""
          GroupLifecycleEventsStatusMessage: ""
      properties:
        AccountSettings:
          $ref: '#/components/schemas/UpdateAccountSettingsOutput_AccountSettings'
      type: object
    UpdateGroupOutput:
      example:
        Group:
          Description: ""
          GroupArn: ""
          Name: ""
      properties:
        Group:
          $ref: '#/components/schemas/UpdateGroupOutput_Group'
      type: object
    UpdateGroupQueryOutput:
      example:
        GroupQuery:
          GroupName: ""
          ResourceQuery:
            Type: ""
            Query: ""
      properties:
        GroupQuery:
          $ref: '#/components/schemas/UpdateGroupQueryOutput_GroupQuery'
      type: object
    GroupLifecycleEventsDesiredStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    GroupLifecycleEventsStatus:
      enum:
      - ACTIVE
      - INACTIVE
      - IN_PROGRESS
      - ERROR
      type: string
    GroupLifecycleEventsStatusMessage:
      maxLength: 1024
      minLength: 1
      type: string
    AccountSettings:
      description: The Resource Groups settings for this Amazon Web Services account.
      properties:
        GroupLifecycleEventsDesiredStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsDesiredStatus'
          - description: The desired target status of the group lifecycle events feature.
              If
        GroupLifecycleEventsStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsStatus'
          - description: The current status of the group lifecycle events feature.
        GroupLifecycleEventsStatusMessage:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsStatusMessage'
          - description: The text of any error message occurs during an attempt to
              turn group lifecycle events on or off.
      type: object
    GroupName:
      maxLength: 300
      minLength: 1
      pattern: "[a-zA-Z0-9_\\.-]+"
      type: string
    Description:
      maxLength: 1024
      pattern: "[\\sa-zA-Z0-9_\\.-]*"
      type: string
    ResourceQuery:
      description: "<p>The query you can use to define a resource group or a search\
        \ for resources. A <code>ResourceQuery</code> specifies both a query <code>Type</code>\
        \ and a <code>Query</code> string as JSON string objects. See the examples\
        \ section for example JSON strings. For more information about creating a\
        \ resource group with a resource query, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html\"\
        >Build queries and groups in Resource Groups</a> in the <i>Resource Groups\
        \ User Guide</i> </p> <p>When you combine all of the elements together into\
        \ a single string, any double quotes that are embedded inside another double\
        \ quote pair must be escaped by preceding the embedded double quote with a\
        \ backslash character (\\). For example, a complete <code>ResourceQuery</code>\
        \ parameter must be formatted like the following CLI parameter example:</p>\
        \ <p> <code>--resource-query '{\"Type\":\"TAG_FILTERS_1_0\",\"Query\":\"{\\\
        \"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"TagFilters\\\":[{\\\
        \"Key\\\":\\\"Stage\\\",\\\"Values\\\":[\\\"Test\\\"]}]}\"}'</code> </p> <p>In\
        \ the preceding example, all of the double quote characters in the value part\
        \ of the <code>Query</code> element must be escaped because the value itself\
        \ is surrounded by double quotes. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html\"\
        >Quoting strings</a> in the <i>Command Line Interface User Guide</i>.</p>\
        \ <p>For the complete list of resource types that you can use in the array\
        \ value for <code>ResourceTypeFilters</code>, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html\"\
        >Resources you can use with Resource Groups and Tag Editor</a> in the <i>Resource\
        \ Groups User Guide</i>. For example:</p> <p> <code>\"ResourceTypeFilters\"\
        :[\"AWS::S3::Bucket\", \"AWS::EC2::Instance\"]</code> </p>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/QueryType'
          - description: <p>The type of the query to perform. This can have one of
              two values:</p> <ul> <li> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code>
              </i> Specifies that you want the group to contain the members of an
              CloudFormation stack. The <code>Query</code> contains a <code>StackIdentifier</code>
              element with an ARN for a CloudFormation stack.</p> </li> <li> <p> <i>
              <code>TAG_FILTERS_1_0:</code> </i> Specifies that you want the group
              to include resource that have tags that match the query. </p> </li>
              </ul>
        Query:
          allOf:
          - $ref: '#/components/schemas/Query'
          - description: "<p>The query that defines a group or a search. The contents\
              \ depends on the value of the <code>Type</code> element.</p> <ul> <li>\
              \ <p> <code>ResourceTypeFilters</code> – Applies to all <code>ResourceQuery</code>\
              \ objects of either <code>Type</code>. This element contains one of\
              \ the following two items:</p> <ul> <li> <p>The value <code>AWS::AllSupported</code>.\
              \ This causes the ResourceQuery to match resources of any resource type\
              \ that also match the query.</p> </li> <li> <p>A list (a JSON array)\
              \ of resource type identifiers that limit the query to only resources\
              \ of the specified types. For the complete list of resource types that\
              \ you can use in the array value for <code>ResourceTypeFilters</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html\"\
              >Resources you can use with Resource Groups and Tag Editor</a> in the\
              \ <i>Resource Groups User Guide</i>.</p> </li> </ul> <p>Example: <code>\"\
              ResourceTypeFilters\": [\"AWS::AllSupported\"]</code> or <code>\"ResourceTypeFilters\"\
              : [\"AWS::EC2::Instance\", \"AWS::S3::Bucket\"]</code> </p> </li> <li>\
              \ <p> <code>TagFilters</code> – applicable only if <code>Type</code>\
              \ = <code>TAG_FILTERS_1_0</code>. The <code>Query</code> contains a\
              \ JSON string that represents a collection of simple tag filters. The\
              \ JSON string uses a syntax similar to the <code> <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\"\
              >GetResources</a> </code> operation, but uses only the <code> <a href=\"\
              https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters\"\
              > ResourceTypeFilters</a> </code> and <code> <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters\"\
              >TagFilters</a> </code> fields. If you specify more than one tag key,\
              \ only resources that match all tag keys, and at least one value of\
              \ each specified tag key, are returned in your query. If you specify\
              \ more than one value for a tag key, a resource matches the filter if\
              \ it has a tag key value that matches <i>any</i> of the specified values.</p>\
              \ <p>For example, consider the following sample query for resources\
              \ that have two tags, <code>Stage</code> and <code>Version</code>, with\
              \ two values each:</p> <p> <code>[{\"Stage\":[\"Test\",\"Deploy\"]},{\"\
              Version\":[\"1\",\"2\"]}]</code> </p> <p>The results of this resource\
              \ query could include the following.</p> <ul> <li> <p>An Amazon EC2\
              \ instance that has the following two tags: <code>{\"Stage\":\"Deploy\"\
              }</code>, and <code>{\"Version\":\"2\"}</code> </p> </li> <li> <p>An\
              \ S3 bucket that has the following two tags: <code>{\"Stage\":\"Test\"\
              }</code>, and <code>{\"Version\":\"1\"}</code> </p> </li> </ul> <p>The\
              \ resource query results would <i>not</i> include the following items\
              \ in the results, however. </p> <ul> <li> <p>An Amazon EC2 instance\
              \ that has only the following tag: <code>{\"Stage\":\"Deploy\"}</code>.</p>\
              \ <p>The instance does not have <b>all</b> of the tag keys specified\
              \ in the filter, so it is excluded from the results.</p> </li> <li>\
              \ <p>An RDS database that has the following two tags: <code>{\"Stage\"\
              :\"Archived\"}</code> and <code>{\"Version\":\"4\"}</code> </p> <p>The\
              \ database has all of the tag keys, but none of those keys has an associated\
              \ value that matches at least one of the specified values in the filter.</p>\
              \ </li> </ul> <p>Example: <code>\"TagFilters\": [ { \"Key\": \"Stage\"\
              , \"Values\": [ \"Gamma\", \"Beta\" ] }</code> </p> </li> <li> <p> <code>StackIdentifier</code>\
              \ – applicable only if <code>Type</code> = <code>CLOUDFORMATION_STACK_1_0</code>.\
              \ The value of this parameter is the Amazon Resource Name (ARN) of the\
              \ CloudFormation stack whose resources you want included in the group.</p>\
              \ </li> </ul>"
      required:
      - Query
      - Type
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    GroupConfigurationList:
      items:
        $ref: '#/components/schemas/GroupConfigurationItem'
      maxItems: 2
      type: array
    CreateGroupInput:
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: "The name of the group, which is the identifier of the group\
              \ in other operations. You can't change the name of a resource group\
              \ after you create it. A resource group name can consist of letters,\
              \ numbers, hyphens, periods, and underscores. The name cannot start\
              \ with <code>AWS</code> or <code>aws</code>; these are reserved. A resource\
              \ group name must be unique within each Amazon Web Services Region in\
              \ your Amazon Web Services account."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "The description of the resource group. Descriptions can\
              \ consist of letters, numbers, hyphens, underscores, periods, and spaces."
        ResourceQuery:
          $ref: '#/components/schemas/CreateGroupInput_ResourceQuery'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags to add to the group. A tag is key-value pair string.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          - description: "<p>A configuration associates the resource group with an\
              \ Amazon Web Services service and specifies how the service can interact\
              \ with the resources in the group. A configuration is an array of <a>GroupConfigurationItem</a>\
              \ elements. For details about the syntax of service configurations,\
              \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
              >Service configurations for Resource Groups</a>.</p> <note> <p>A resource\
              \ group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>,\
              \ but not both.</p> </note>"
      required:
      - Name
      title: CreateGroupInput
      type: object
    Group:
      description: "<p>A resource group that contains Amazon Web Services resources.\
        \ You can assign resources to the group by associating either of the following\
        \ elements with the group:</p> <ul> <li> <p> <a>ResourceQuery</a> - Use a\
        \ resource query to specify a set of tag keys and values. All resources in\
        \ the same Amazon Web Services Region and Amazon Web Services account that\
        \ have those keys with the same values are included in the group. You can\
        \ add a resource query when you create the group, or later by using the <a>PutGroupConfiguration</a>\
        \ operation.</p> </li> <li> <p> <a>GroupConfiguration</a> - Use a service\
        \ configuration to associate the group with an Amazon Web Services service.\
        \ The configuration specifies which resource types can be included in the\
        \ group.</p> </li> </ul>"
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          - description: The ARN of the resource group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the resource group.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource group.
      required:
      - GroupArn
      - Name
      type: object
    GroupConfiguration:
      description: "A service configuration associated with a resource group. The\
        \ configuration options are determined by the Amazon Web Services service\
        \ that defines the <code>Type</code>, and specifies which resources can be\
        \ included in the group. You can add a service configuration when you create\
        \ the group by using <a>CreateGroup</a>, or later by using the <a>PutGroupConfiguration</a>\
        \ operation. For details about group service configuration syntax, see <a\
        \ href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
        >Service configurations for resource groups</a>."
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          - description: The configuration currently associated with the group and
              in effect.
        ProposedConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          - description: "If present, the new configuration that is in the process\
              \ of being applied to the group."
        Status:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationStatus'
          - description: The current status of an attempt to update the group configuration.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationFailureReason'
          - description: "If present, the reason why a request to update the group\
              \ configuration failed."
      type: object
    GroupString:
      maxLength: 1600
      minLength: 1
      pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
        .-]{1,300}"
      type: string
    DeleteGroupInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "Deprecated - don't use this parameter. Use <code>Group</code>\
              \ instead.This field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to delete.
      title: DeleteGroupInput
      type: object
    ErrorCode:
      maxLength: 128
      minLength: 1
      type: string
    ErrorMessage:
      maxLength: 1024
      minLength: 1
      type: string
    FailedResource:
      description: A resource that failed to be added to or removed from a group.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The ARN of the resource that failed to be added or removed.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message text associated with the failure.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code associated with the failure.
      type: object
    FailedResourceList:
      items:
        $ref: '#/components/schemas/FailedResource'
      type: array
    GetGroupConfigurationInput:
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group for which you want
              to retrive the service configuration.
      title: GetGroupConfigurationInput
      type: object
    GetGroupInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "Deprecated - don't use this parameter. Use <code>Group</code>\
              \ instead.This field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to retrieve.
      title: GetGroupInput
      type: object
    GetGroupQueryInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "Don't use this parameter. Use <code>Group</code> instead.This\
              \ field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to query.
      title: GetGroupQueryInput
      type: object
    GroupQuery:
      description: A mapping of a query attached to a resource group that determines
        the Amazon Web Services resources that are members of the group.
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the resource group that is associated with the
              specified resource query.
        ResourceQuery:
          $ref: '#/components/schemas/GroupQuery_ResourceQuery'
      required:
      - GroupName
      - ResourceQuery
      type: object
    GroupArn:
      maxLength: 1600
      minLength: 12
      pattern: "arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\\
        .-]{1,300}"
      type: string
    GetTagsInput:
      properties: {}
      title: GetTagsInput
      type: object
    GroupConfigurationStatus:
      enum:
      - UPDATING
      - UPDATE_COMPLETE
      - UPDATE_FAILED
      type: string
    GroupConfigurationFailureReason:
      type: string
    GroupConfigurationType:
      maxLength: 40
      pattern: "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+"
      type: string
    GroupParameterList:
      items:
        $ref: '#/components/schemas/GroupConfigurationParameter'
      type: array
    GroupConfigurationParameterName:
      maxLength: 80
      minLength: 1
      pattern: "[a-z-]+"
      type: string
    GroupConfigurationParameterValueList:
      items:
        $ref: '#/components/schemas/GroupConfigurationParameterValue'
      type: array
    GroupConfigurationParameter:
      description: "A parameter for a group configuration item. For details about\
        \ group service configuration syntax, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
        >Service configurations for resource groups</a>."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationParameterName'
          - description: "The name of the group configuration parameter. For the list\
              \ of parameters that you can use with each configuration item type,\
              \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types\"\
              >Supported resource types and parameters</a>."
        Values:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationParameterValueList'
          - description: "The value or values to be used for the specified parameter.\
              \ For the list of values you can use with each parameter, see <a href=\"\
              https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types\"\
              >Supported resource types and parameters</a>."
      required:
      - Name
      type: object
    GroupConfigurationParameterValue:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9:\\/\\._-]+"
      type: string
    GroupFilterName:
      enum:
      - resource-type
      - configuration-type
      type: string
    GroupFilterValues:
      items:
        $ref: '#/components/schemas/GroupFilterValue'
      maxItems: 5
      minItems: 1
      type: array
    GroupFilterList:
      items:
        $ref: '#/components/schemas/GroupFilter'
      type: array
    GroupFilterValue:
      maxLength: 128
      minLength: 1
      pattern: "AWS::(AllSupported|[a-zA-Z0-9]+::[a-zA-Z0-9]+)"
      type: string
    GroupIdentifier:
      description: The unique identifiers for a resource group.
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the resource group.
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          - description: The ARN of the resource group.
      type: object
    GroupIdentifierList:
      items:
        $ref: '#/components/schemas/GroupIdentifier'
      type: array
    GroupList:
      items:
        $ref: '#/components/schemas/Group'
      type: array
    ResourceArnList:
      items:
        $ref: '#/components/schemas/ResourceArn'
      maxItems: 10
      minItems: 1
      type: array
    GroupResourcesInput:
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to add resources
              to.
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: 'The list of ARNs of the resources to be added to the group. '
      required:
      - Group
      - ResourceArns
      title: GroupResourcesInput
      type: object
    PendingResourceList:
      items:
        $ref: '#/components/schemas/PendingResource'
      type: array
    ResourceFilterList:
      items:
        $ref: '#/components/schemas/ResourceFilter'
      type: array
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      maxLength: 8192
      minLength: 0
      pattern: "^[a-zA-Z0-9+/]*={0,2}$"
      type: string
    ListGroupResourcesInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "<important> <p> <i> <b>Deprecated - don't use this parameter.\
              \ Use the <code>Group</code> request field instead.</b> </i> </p> </important>This\
              \ field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group
        Filters:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterList'
          - description: "<p>Filters, formatted as <a>ResourceFilter</a> objects,\
              \ that you want to apply to a <code>ListGroupResources</code> operation.\
              \ Filters the results to include only those of the specified resource\
              \ types.</p> <ul> <li> <p> <code>resource-type</code> - Filter resources\
              \ by their type. Specify up to five resource types in the format <code>AWS::ServiceCode::ResourceType</code>.\
              \ For example, <code>AWS::EC2::Instance</code>, or <code>AWS::S3::Bucket</code>.\
              \ </p> </li> </ul> <p>When you specify a <code>resource-type</code>\
              \ filter for <code>ListGroupResources</code>, Resource Groups validates\
              \ your filter resource types against the types that are defined in the\
              \ query associated with the group. For example, if a group contains\
              \ only S3 buckets because its query specifies only that resource type,\
              \ but your <code>resource-type</code> filter includes EC2 instances,\
              \ AWS Resource Groups does not filter for EC2 instances. In this case,\
              \ a <code>ListGroupResources</code> request returns a <code>BadRequestException</code>\
              \ error with a message similar to the following:</p> <p> <code>The resource\
              \ types specified as filters in the request are not valid.</code> </p>\
              \ <p>The error includes a list of resource types that failed the validation\
              \ because they are not part of the query associated with the group.\
              \ This validation doesn't occur when the group query specifies <code>AWS::AllSupported</code>,\
              \ because a group based on such a query can contain any of the allowed\
              \ resource types for the query type (tag-based or Amazon CloudFront\
              \ stack-based queries).</p>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The total number of results that you want included on each\
              \ page of the response. If you do not include this parameter, it defaults\
              \ to a value that is specific to the operation. If additional items\
              \ exist beyond the maximum you specify, the <code>NextToken</code> response\
              \ element is present and has a value (is not null). Include that value\
              \ as the <code>NextToken</code> request parameter in the next call to\
              \ the operation to get the next part of the results. Note that the service\
              \ might return fewer results than the maximum even when there are more\
              \ results available. You should check <code>NextToken</code> after every\
              \ operation to ensure that you receive all of the results."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The parameter for receiving additional results if you receive
              a <code>NextToken</code> response in a previous request. A <code>NextToken</code>
              response indicates that more output is available. Set this parameter
              to the value provided by a previous call's <code>NextToken</code> response
              to indicate where the output should continue from.
      title: ListGroupResourcesInput
      type: object
    ResourceIdentifier:
      description: A structure that contains the ARN of a resource and its resource
        type.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The ARN of a resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The resource type of a resource, such as <code>AWS::EC2::Instance</code>."
      type: object
    ResourceStatus:
      description: "A structure that identifies the current group membership status\
        \ for a resource. Adding a resource to a resource group is performed asynchronously\
        \ as a background task. A <code>PENDING</code> status indicates, for this\
        \ resource, that the process isn't completed yet."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceStatusValue'
          - description: The current status.
      type: object
    ListGroupResourcesItem:
      description: A structure returned by the <a>ListGroupResources</a> operation
        that contains identity and group membership status information for one of
        the resources in the group.
      properties:
        Identifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        Status:
          $ref: '#/components/schemas/ListGroupResourcesItem_Status'
      type: object
    ListGroupResourcesItemList:
      items:
        $ref: '#/components/schemas/ListGroupResourcesItem'
      type: array
    ResourceIdentifierList:
      items:
        $ref: '#/components/schemas/ResourceIdentifier'
      type: array
    QueryErrorList:
      items:
        $ref: '#/components/schemas/QueryError'
      type: array
    ListGroupsInput:
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/GroupFilterList'
          - description: "<p>Filters, formatted as <a>GroupFilter</a> objects, that\
              \ you want to apply to a <code>ListGroups</code> operation.</p> <ul>\
              \ <li> <p> <code>resource-type</code> - Filter the results to include\
              \ only those of the specified resource types. Specify up to five resource\
              \ types in the format <code>AWS::<i>ServiceCode</i>::<i>ResourceType</i>\
              \ </code>. For example, <code>AWS::EC2::Instance</code>, or <code>AWS::S3::Bucket</code>.</p>\
              \ </li> <li> <p> <code>configuration-type</code> - Filter the results\
              \ to include only those groups that have the specified configuration\
              \ types attached. The current supported values are:</p> <ul> <li> <p>\
              \ <code>AWS::EC2::CapacityReservationPool</code> </p> </li> <li> <p>\
              \ <code>AWS::EC2::HostManagement</code> </p> </li> </ul> </li> </ul>"
      title: ListGroupsInput
      type: object
    PendingResource:
      description: A structure that identifies a resource that is currently pending
        addition to the group as a member. Adding a resource to a resource group happens
        asynchronously as a background task and this one isn't completed yet.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon resource name (ARN) of the resource that's in
              a pending state.
      type: object
    PutGroupConfigurationInput:
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or ARN of the resource group with the configuration
              that you want to update.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          - description: "<p>The new configuration to associate with the specified\
              \ group. A configuration associates the resource group with an Amazon\
              \ Web Services service and specifies how the service can interact with\
              \ the resources in the group. A configuration is an array of <a>GroupConfigurationItem</a>\
              \ elements.</p> <p>For information about the syntax of a service configuration,\
              \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
              >Service configurations for Resource Groups</a>.</p> <note> <p>A resource\
              \ group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>,\
              \ but not both.</p> </note>"
      title: PutGroupConfigurationInput
      type: object
    QueryErrorCode:
      enum:
      - CLOUDFORMATION_STACK_INACTIVE
      - CLOUDFORMATION_STACK_NOT_EXISTING
      - CLOUDFORMATION_STACK_UNASSUMABLE_ROLE
      type: string
    QueryErrorMessage:
      type: string
    QueryError:
      description: "A two-part error structure that can occur in <code>ListGroupResources</code>\
        \ or <code>SearchResources</code> operations on CloudFront stack-based queries.\
        \ The error occurs if the CloudFront stack on which the query is based either\
        \ does not exist, or has a status that renders the stack inactive. A <code>QueryError</code>\
        \ occurrence does not necessarily mean that Resource Groups could not complete\
        \ the operation, but the resulting group might have no member resources."
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/QueryErrorCode'
          - description: Specifies the error code that was raised.
        Message:
          allOf:
          - $ref: '#/components/schemas/QueryErrorMessage'
          - description: "A message that explains the <code>ErrorCode</code> value.\
              \ Messages might state that the specified CloudFront stack does not\
              \ exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>,\
              \ the message typically states that the CloudFront stack has a status\
              \ that is not (or no longer) active, such as <code>CREATE_FAILED</code>."
      type: object
    ResourceFilterName:
      enum:
      - resource-type
      type: string
    ResourceFilterValues:
      items:
        $ref: '#/components/schemas/ResourceFilterValue'
      maxItems: 5
      minItems: 1
      type: array
    ResourceFilterValue:
      maxLength: 128
      minLength: 1
      pattern: "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+"
      type: string
    ResourceType:
      pattern: "AWS::[a-zA-Z0-9]+::\\w+"
      type: string
    ResourceStatusValue:
      enum:
      - PENDING
      type: string
    SearchResourcesInput:
      properties:
        ResourceQuery:
          $ref: '#/components/schemas/SearchResourcesInput_ResourceQuery'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The total number of results that you want included on each\
              \ page of the response. If you do not include this parameter, it defaults\
              \ to a value that is specific to the operation. If additional items\
              \ exist beyond the maximum you specify, the <code>NextToken</code> response\
              \ element is present and has a value (is not null). Include that value\
              \ as the <code>NextToken</code> request parameter in the next call to\
              \ the operation to get the next part of the results. Note that the service\
              \ might return fewer results than the maximum even when there are more\
              \ results available. You should check <code>NextToken</code> after every\
              \ operation to ensure that you receive all of the results."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The parameter for receiving additional results if you receive
              a <code>NextToken</code> response in a previous request. A <code>NextToken</code>
              response indicates that more output is available. Set this parameter
              to the value provided by a previous call's <code>NextToken</code> response
              to indicate where the output should continue from.
      required:
      - ResourceQuery
      title: SearchResourcesInput
      type: object
    TagInput:
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags to add to the specified resource group. A tag is
              a string-to-string map of key-value pairs.
      required:
      - Tags
      title: TagInput
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    UngroupResourcesInput:
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group from which to remove
              the resources.
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: The ARNs of the resources to be removed from the group.
      required:
      - Group
      - ResourceArns
      title: UngroupResourcesInput
      type: object
    UntagInput:
      properties:
        Keys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The keys of the tags to be removed.
      required:
      - Keys
      title: UntagInput
      type: object
    UpdateAccountSettingsInput:
      properties:
        GroupLifecycleEventsDesiredStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsDesiredStatus'
          - description: Specifies whether you want to turn <a href="https://docs.aws.amazon.com/ARG/latest/userguide/monitor-groups.html">group
              lifecycle events</a> on or off.
      title: UpdateAccountSettingsInput
      type: object
    UpdateGroupInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "Don't use this parameter. Use <code>Group</code> instead.This\
              \ field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to modify.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "The new description that you want to update the resource\
              \ group with. Descriptions can contain letters, numbers, hyphens, underscores,\
              \ periods, and spaces."
      title: UpdateGroupInput
      type: object
    UpdateGroupQueryInput:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - deprecated: true
            description: "Don't use this parameter. Use <code>Group</code> instead.This\
              \ field is deprecated, use Group instead."
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          - description: The name or the ARN of the resource group to query.
        ResourceQuery:
          $ref: '#/components/schemas/UpdateGroupQueryInput_ResourceQuery'
      required:
      - ResourceQuery
      title: UpdateGroupQueryInput
      type: object
    CreateGroup_request_ResourceQuery:
      description: "<p>The query you can use to define a resource group or a search\
        \ for resources. A <code>ResourceQuery</code> specifies both a query <code>Type</code>\
        \ and a <code>Query</code> string as JSON string objects. See the examples\
        \ section for example JSON strings. For more information about creating a\
        \ resource group with a resource query, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html\"\
        >Build queries and groups in Resource Groups</a> in the <i>Resource Groups\
        \ User Guide</i> </p> <p>When you combine all of the elements together into\
        \ a single string, any double quotes that are embedded inside another double\
        \ quote pair must be escaped by preceding the embedded double quote with a\
        \ backslash character (\\). For example, a complete <code>ResourceQuery</code>\
        \ parameter must be formatted like the following CLI parameter example:</p>\
        \ <p> <code>--resource-query '{\"Type\":\"TAG_FILTERS_1_0\",\"Query\":\"{\\\
        \"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"TagFilters\\\":[{\\\
        \"Key\\\":\\\"Stage\\\",\\\"Values\\\":[\\\"Test\\\"]}]}\"}'</code> </p> <p>In\
        \ the preceding example, all of the double quote characters in the value part\
        \ of the <code>Query</code> element must be escaped because the value itself\
        \ is surrounded by double quotes. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html\"\
        >Quoting strings</a> in the <i>Command Line Interface User Guide</i>.</p>\
        \ <p>For the complete list of resource types that you can use in the array\
        \ value for <code>ResourceTypeFilters</code>, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html\"\
        >Resources you can use with Resource Groups and Tag Editor</a> in the <i>Resource\
        \ Groups User Guide</i>. For example:</p> <p> <code>\"ResourceTypeFilters\"\
        :[\"AWS::S3::Bucket\", \"AWS::EC2::Instance\"]</code> </p>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/QueryType'
          - description: <p>The type of the query to perform. This can have one of
              two values:</p> <ul> <li> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code>
              </i> Specifies that you want the group to contain the members of an
              CloudFormation stack. The <code>Query</code> contains a <code>StackIdentifier</code>
              element with an ARN for a CloudFormation stack.</p> </li> <li> <p> <i>
              <code>TAG_FILTERS_1_0:</code> </i> Specifies that you want the group
              to include resource that have tags that match the query. </p> </li>
              </ul>
        Query:
          allOf:
          - $ref: '#/components/schemas/Query'
          - description: "<p>The query that defines a group or a search. The contents\
              \ depends on the value of the <code>Type</code> element.</p> <ul> <li>\
              \ <p> <code>ResourceTypeFilters</code> – Applies to all <code>ResourceQuery</code>\
              \ objects of either <code>Type</code>. This element contains one of\
              \ the following two items:</p> <ul> <li> <p>The value <code>AWS::AllSupported</code>.\
              \ This causes the ResourceQuery to match resources of any resource type\
              \ that also match the query.</p> </li> <li> <p>A list (a JSON array)\
              \ of resource type identifiers that limit the query to only resources\
              \ of the specified types. For the complete list of resource types that\
              \ you can use in the array value for <code>ResourceTypeFilters</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html\"\
              >Resources you can use with Resource Groups and Tag Editor</a> in the\
              \ <i>Resource Groups User Guide</i>.</p> </li> </ul> <p>Example: <code>\"\
              ResourceTypeFilters\": [\"AWS::AllSupported\"]</code> or <code>\"ResourceTypeFilters\"\
              : [\"AWS::EC2::Instance\", \"AWS::S3::Bucket\"]</code> </p> </li> <li>\
              \ <p> <code>TagFilters</code> – applicable only if <code>Type</code>\
              \ = <code>TAG_FILTERS_1_0</code>. The <code>Query</code> contains a\
              \ JSON string that represents a collection of simple tag filters. The\
              \ JSON string uses a syntax similar to the <code> <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\"\
              >GetResources</a> </code> operation, but uses only the <code> <a href=\"\
              https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters\"\
              > ResourceTypeFilters</a> </code> and <code> <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters\"\
              >TagFilters</a> </code> fields. If you specify more than one tag key,\
              \ only resources that match all tag keys, and at least one value of\
              \ each specified tag key, are returned in your query. If you specify\
              \ more than one value for a tag key, a resource matches the filter if\
              \ it has a tag key value that matches <i>any</i> of the specified values.</p>\
              \ <p>For example, consider the following sample query for resources\
              \ that have two tags, <code>Stage</code> and <code>Version</code>, with\
              \ two values each:</p> <p> <code>[{\"Stage\":[\"Test\",\"Deploy\"]},{\"\
              Version\":[\"1\",\"2\"]}]</code> </p> <p>The results of this resource\
              \ query could include the following.</p> <ul> <li> <p>An Amazon EC2\
              \ instance that has the following two tags: <code>{\"Stage\":\"Deploy\"\
              }</code>, and <code>{\"Version\":\"2\"}</code> </p> </li> <li> <p>An\
              \ S3 bucket that has the following two tags: <code>{\"Stage\":\"Test\"\
              }</code>, and <code>{\"Version\":\"1\"}</code> </p> </li> </ul> <p>The\
              \ resource query results would <i>not</i> include the following items\
              \ in the results, however. </p> <ul> <li> <p>An Amazon EC2 instance\
              \ that has only the following tag: <code>{\"Stage\":\"Deploy\"}</code>.</p>\
              \ <p>The instance does not have <b>all</b> of the tag keys specified\
              \ in the filter, so it is excluded from the results.</p> </li> <li>\
              \ <p>An RDS database that has the following two tags: <code>{\"Stage\"\
              :\"Archived\"}</code> and <code>{\"Version\":\"4\"}</code> </p> <p>The\
              \ database has all of the tag keys, but none of those keys has an associated\
              \ value that matches at least one of the specified values in the filter.</p>\
              \ </li> </ul> <p>Example: <code>\"TagFilters\": [ { \"Key\": \"Stage\"\
              , \"Values\": [ \"Gamma\", \"Beta\" ] }</code> </p> </li> <li> <p> <code>StackIdentifier</code>\
              \ – applicable only if <code>Type</code> = <code>CLOUDFORMATION_STACK_1_0</code>.\
              \ The value of this parameter is the Amazon Resource Name (ARN) of the\
              \ CloudFormation stack whose resources you want included in the group.</p>\
              \ </li> </ul>"
      type: object
    CreateGroup_request:
      properties:
        Name:
          description: "The name of the group, which is the identifier of the group\
            \ in other operations. You can't change the name of a resource group after\
            \ you create it. A resource group name can consist of letters, numbers,\
            \ hyphens, periods, and underscores. The name cannot start with <code>AWS</code>\
            \ or <code>aws</code>; these are reserved. A resource group name must\
            \ be unique within each Amazon Web Services Region in your Amazon Web\
            \ Services account."
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Description:
          description: "The description of the resource group. Descriptions can consist\
            \ of letters, numbers, hyphens, underscores, periods, and spaces."
          maxLength: 1024
          pattern: "[\\sa-zA-Z0-9_\\.-]*"
          type: string
        ResourceQuery:
          $ref: '#/components/schemas/CreateGroup_request_ResourceQuery'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the group. A tag is key-value pair string.
          type: object
        Configuration:
          description: "<p>A configuration associates the resource group with an Amazon\
            \ Web Services service and specifies how the service can interact with\
            \ the resources in the group. A configuration is an array of <a>GroupConfigurationItem</a>\
            \ elements. For details about the syntax of service configurations, see\
            \ <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
            >Service configurations for Resource Groups</a>.</p> <note> <p>A resource\
            \ group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>,\
            \ but not both.</p> </note>"
          items:
            $ref: '#/components/schemas/GroupConfigurationItem'
          maxItems: 2
          type: array
      required:
      - Name
      type: object
    DeleteGroup_request:
      properties:
        GroupName:
          description: Deprecated - don't use this parameter. Use <code>Group</code>
            instead.
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group to delete.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
      type: object
    GetGroup_request:
      properties:
        GroupName:
          description: Deprecated - don't use this parameter. Use <code>Group</code>
            instead.
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group to retrieve.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
      type: object
    GetGroupConfiguration_request:
      properties:
        Group:
          description: The name or the ARN of the resource group for which you want
            to retrive the service configuration.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
      type: object
    GetGroupQuery_request:
      properties:
        GroupName:
          description: Don't use this parameter. Use <code>Group</code> instead.
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group to query.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
      type: object
    Tag_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the specified resource group. A tag is a
            string-to-string map of key-value pairs.
          type: object
      required:
      - Tags
      type: object
    Untag_request:
      properties:
        Keys:
          description: The keys of the tags to be removed.
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
      required:
      - Keys
      type: object
    GroupResources_request:
      properties:
        Group:
          description: The name or the ARN of the resource group to add resources
            to.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        ResourceArns:
          description: 'The list of ARNs of the resources to be added to the group. '
          items:
            $ref: '#/components/schemas/ResourceArn'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - Group
      - ResourceArns
      type: object
    ListGroupResources_request:
      properties:
        GroupName:
          description: <important> <p> <i> <b>Deprecated - don't use this parameter.
            Use the <code>Group</code> request field instead.</b> </i> </p> </important>
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        Filters:
          description: "<p>Filters, formatted as <a>ResourceFilter</a> objects, that\
            \ you want to apply to a <code>ListGroupResources</code> operation. Filters\
            \ the results to include only those of the specified resource types.</p>\
            \ <ul> <li> <p> <code>resource-type</code> - Filter resources by their\
            \ type. Specify up to five resource types in the format <code>AWS::ServiceCode::ResourceType</code>.\
            \ For example, <code>AWS::EC2::Instance</code>, or <code>AWS::S3::Bucket</code>.\
            \ </p> </li> </ul> <p>When you specify a <code>resource-type</code> filter\
            \ for <code>ListGroupResources</code>, Resource Groups validates your\
            \ filter resource types against the types that are defined in the query\
            \ associated with the group. For example, if a group contains only S3\
            \ buckets because its query specifies only that resource type, but your\
            \ <code>resource-type</code> filter includes EC2 instances, AWS Resource\
            \ Groups does not filter for EC2 instances. In this case, a <code>ListGroupResources</code>\
            \ request returns a <code>BadRequestException</code> error with a message\
            \ similar to the following:</p> <p> <code>The resource types specified\
            \ as filters in the request are not valid.</code> </p> <p>The error includes\
            \ a list of resource types that failed the validation because they are\
            \ not part of the query associated with the group. This validation doesn't\
            \ occur when the group query specifies <code>AWS::AllSupported</code>,\
            \ because a group based on such a query can contain any of the allowed\
            \ resource types for the query type (tag-based or Amazon CloudFront stack-based\
            \ queries).</p>"
          items:
            $ref: '#/components/schemas/ResourceFilter'
          type: array
        MaxResults:
          description: "The total number of results that you want included on each\
            \ page of the response. If you do not include this parameter, it defaults\
            \ to a value that is specific to the operation. If additional items exist\
            \ beyond the maximum you specify, the <code>NextToken</code> response\
            \ element is present and has a value (is not null). Include that value\
            \ as the <code>NextToken</code> request parameter in the next call to\
            \ the operation to get the next part of the results. Note that the service\
            \ might return fewer results than the maximum even when there are more\
            \ results available. You should check <code>NextToken</code> after every\
            \ operation to ensure that you receive all of the results."
          maximum: 50
          minimum: 1
          type: integer
        NextToken:
          description: The parameter for receiving additional results if you receive
            a <code>NextToken</code> response in a previous request. A <code>NextToken</code>
            response indicates that more output is available. Set this parameter to
            the value provided by a previous call's <code>NextToken</code> response
            to indicate where the output should continue from.
          maxLength: 8192
          minLength: 0
          pattern: "^[a-zA-Z0-9+/]*={0,2}$"
          type: string
      type: object
    ListGroups_request:
      properties:
        Filters:
          description: "<p>Filters, formatted as <a>GroupFilter</a> objects, that\
            \ you want to apply to a <code>ListGroups</code> operation.</p> <ul> <li>\
            \ <p> <code>resource-type</code> - Filter the results to include only\
            \ those of the specified resource types. Specify up to five resource types\
            \ in the format <code>AWS::<i>ServiceCode</i>::<i>ResourceType</i> </code>.\
            \ For example, <code>AWS::EC2::Instance</code>, or <code>AWS::S3::Bucket</code>.</p>\
            \ </li> <li> <p> <code>configuration-type</code> - Filter the results\
            \ to include only those groups that have the specified configuration types\
            \ attached. The current supported values are:</p> <ul> <li> <p> <code>AWS::EC2::CapacityReservationPool</code>\
            \ </p> </li> <li> <p> <code>AWS::EC2::HostManagement</code> </p> </li>\
            \ </ul> </li> </ul>"
          items:
            $ref: '#/components/schemas/GroupFilter'
          type: array
      type: object
    PutGroupConfiguration_request:
      properties:
        Group:
          description: The name or ARN of the resource group with the configuration
            that you want to update.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        Configuration:
          description: "<p>The new configuration to associate with the specified group.\
            \ A configuration associates the resource group with an Amazon Web Services\
            \ service and specifies how the service can interact with the resources\
            \ in the group. A configuration is an array of <a>GroupConfigurationItem</a>\
            \ elements.</p> <p>For information about the syntax of a service configuration,\
            \ see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
            >Service configurations for Resource Groups</a>.</p> <note> <p>A resource\
            \ group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>,\
            \ but not both.</p> </note>"
          items:
            $ref: '#/components/schemas/GroupConfigurationItem'
          maxItems: 2
          type: array
      type: object
    SearchResources_request:
      properties:
        ResourceQuery:
          $ref: '#/components/schemas/CreateGroup_request_ResourceQuery'
        MaxResults:
          description: "The total number of results that you want included on each\
            \ page of the response. If you do not include this parameter, it defaults\
            \ to a value that is specific to the operation. If additional items exist\
            \ beyond the maximum you specify, the <code>NextToken</code> response\
            \ element is present and has a value (is not null). Include that value\
            \ as the <code>NextToken</code> request parameter in the next call to\
            \ the operation to get the next part of the results. Note that the service\
            \ might return fewer results than the maximum even when there are more\
            \ results available. You should check <code>NextToken</code> after every\
            \ operation to ensure that you receive all of the results."
          maximum: 50
          minimum: 1
          type: integer
        NextToken:
          description: The parameter for receiving additional results if you receive
            a <code>NextToken</code> response in a previous request. A <code>NextToken</code>
            response indicates that more output is available. Set this parameter to
            the value provided by a previous call's <code>NextToken</code> response
            to indicate where the output should continue from.
          maxLength: 8192
          minLength: 0
          pattern: "^[a-zA-Z0-9+/]*={0,2}$"
          type: string
      required:
      - ResourceQuery
      type: object
    UngroupResources_request:
      properties:
        Group:
          description: The name or the ARN of the resource group from which to remove
            the resources.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        ResourceArns:
          description: The ARNs of the resources to be removed from the group.
          items:
            $ref: '#/components/schemas/ResourceArn'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - Group
      - ResourceArns
      type: object
    UpdateAccountSettings_request:
      properties:
        GroupLifecycleEventsDesiredStatus:
          description: Specifies whether you want to turn <a href="https://docs.aws.amazon.com/ARG/latest/userguide/monitor-groups.html">group
            lifecycle events</a> on or off.
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      type: object
    UpdateGroup_request:
      properties:
        GroupName:
          description: Don't use this parameter. Use <code>Group</code> instead.
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group to modify.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        Description:
          description: "The new description that you want to update the resource group\
            \ with. Descriptions can contain letters, numbers, hyphens, underscores,\
            \ periods, and spaces."
          maxLength: 1024
          pattern: "[\\sa-zA-Z0-9_\\.-]*"
          type: string
      type: object
    UpdateGroupQuery_request:
      properties:
        GroupName:
          description: Don't use this parameter. Use <code>Group</code> instead.
          maxLength: 300
          minLength: 1
          pattern: "[a-zA-Z0-9_\\.-]+"
          type: string
        Group:
          description: The name or the ARN of the resource group to query.
          maxLength: 1600
          minLength: 1
          pattern: "(arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\\\
            .-]{1,300}"
          type: string
        ResourceQuery:
          $ref: '#/components/schemas/CreateGroup_request_ResourceQuery'
      required:
      - ResourceQuery
      type: object
    CreateGroupOutput_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: The description of the resource group.
      example:
        Description: ""
        GroupArn: ""
        Name: ""
    CreateGroupOutput_ResourceQuery:
      allOf:
      - $ref: '#/components/schemas/ResourceQuery'
      - description: "The resource query associated with the group. For more information\
          \ about resource queries, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag\"\
          >Create a tag-based group in Resource Groups</a>. "
      example:
        Type: ""
        Query: ""
    CreateGroupOutput_GroupConfiguration:
      allOf:
      - $ref: '#/components/schemas/GroupConfiguration'
      - description: "The service configuration associated with the resource group.\
          \ For details about the syntax of a service configuration, see <a href=\"\
          https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\">Service\
          \ configurations for Resource Groups</a>."
      example:
        Status: ""
        Configuration: ""
        ProposedConfiguration: ""
        FailureReason: ""
    DeleteGroupOutput_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: A full description of the deleted resource group.
      example:
        Description: ""
        GroupArn: ""
        Name: ""
    GetAccountSettingsOutput_AccountSettings:
      allOf:
      - $ref: '#/components/schemas/AccountSettings'
      - description: The current settings for the optional features in Resource Groups.
      example:
        GroupLifecycleEventsStatus: ""
        GroupLifecycleEventsDesiredStatus: ""
        GroupLifecycleEventsStatusMessage: ""
    GetGroupOutput_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: A structure that contains the metadata details for the specified
          resource group. Use <a>GetGroupQuery</a> and <a>GetGroupConfiguration</a>
          to get those additional details of the resource group.
      example:
        Description: ""
        GroupArn: ""
        Name: ""
    GetGroupConfigurationOutput_GroupConfiguration:
      allOf:
      - $ref: '#/components/schemas/GroupConfiguration'
      - description: "A structure that describes the service configuration attached\
          \ with the specified group. For details about the service configuration\
          \ syntax, see <a href=\"https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html\"\
          >Service configurations for Resource Groups</a>."
      example:
        Status: ""
        Configuration: ""
        ProposedConfiguration: ""
        FailureReason: ""
    GetGroupQueryOutput_GroupQuery:
      allOf:
      - $ref: '#/components/schemas/GroupQuery'
      - description: "The resource query associated with the specified group. For\
          \ more information about resource queries, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag\"\
          >Create a tag-based group in Resource Groups</a>."
      example:
        GroupName: ""
        ResourceQuery:
          Type: ""
          Query: ""
    UpdateAccountSettingsOutput_AccountSettings:
      allOf:
      - $ref: '#/components/schemas/AccountSettings'
      - description: A structure that displays the status of the optional features
          in the account.
      example:
        GroupLifecycleEventsStatus: ""
        GroupLifecycleEventsDesiredStatus: ""
        GroupLifecycleEventsStatusMessage: ""
    UpdateGroupOutput_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: The update description of the resource group.
      example:
        Description: ""
        GroupArn: ""
        Name: ""
    UpdateGroupQueryOutput_GroupQuery:
      allOf:
      - $ref: '#/components/schemas/GroupQuery'
      - description: The updated resource query associated with the resource group
          after the update.
      example:
        GroupName: ""
        ResourceQuery:
          Type: ""
          Query: ""
    CreateGroupInput_ResourceQuery:
      allOf:
      - $ref: '#/components/schemas/ResourceQuery'
      - description: "<p>The resource query that determines which Amazon Web Services\
          \ resources are members of this group. For more information about resource\
          \ queries, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag\"\
          >Create a tag-based group in Resource Groups</a>. </p> <note> <p>A resource\
          \ group can contain either a <code>ResourceQuery</code> or a <code>Configuration</code>,\
          \ but not both.</p> </note>"
    GroupQuery_ResourceQuery:
      allOf:
      - $ref: '#/components/schemas/ResourceQuery'
      - description: The resource query that determines which Amazon Web Services
          resources are members of the associated resource group.
      example:
        Type: ""
        Query: ""
    ListGroupResourcesItem_Status:
      allOf:
      - $ref: '#/components/schemas/ResourceStatus'
      - description: <p>A structure that contains the status of this resource's membership
          in the group.</p> <note> <p>This field is present in the response only if
          the group is of type <code>AWS::EC2::HostManagement</code>.</p> </note>
    SearchResourcesInput_ResourceQuery:
      allOf:
      - $ref: '#/components/schemas/ResourceQuery'
      - description: "The search query, using the same formats that are supported\
          \ for resource group definition. For more information, see <a>CreateGroup</a>."
    UpdateGroupQueryInput_ResourceQuery:
      allOf:
      - $ref: '#/components/schemas/ResourceQuery'
      - description: "<p>The resource query to determine which Amazon Web Services\
          \ resources are members of this resource group.</p> <note> <p>A resource\
          \ group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>,\
          \ but not both.</p> </note>"
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

