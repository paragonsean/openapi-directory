# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchResourcesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_identifiers: List=None, next_token: str=None, query_errors: List=None):
        """SearchResourcesOutput - a model defined in OpenAPI

        :param resource_identifiers: The resource_identifiers of this SearchResourcesOutput.
        :param next_token: The next_token of this SearchResourcesOutput.
        :param query_errors: The query_errors of this SearchResourcesOutput.
        """
        self.openapi_types = {
            'resource_identifiers': List,
            'next_token': str,
            'query_errors': List
        }

        self.attribute_map = {
            'resource_identifiers': 'ResourceIdentifiers',
            'next_token': 'NextToken',
            'query_errors': 'QueryErrors'
        }

        self._resource_identifiers = resource_identifiers
        self._next_token = next_token
        self._query_errors = query_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResourcesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchResourcesOutput of this SearchResourcesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_identifiers(self):
        """Gets the resource_identifiers of this SearchResourcesOutput.


        :return: The resource_identifiers of this SearchResourcesOutput.
        :rtype: List
        """
        return self._resource_identifiers

    @resource_identifiers.setter
    def resource_identifiers(self, resource_identifiers):
        """Sets the resource_identifiers of this SearchResourcesOutput.


        :param resource_identifiers: The resource_identifiers of this SearchResourcesOutput.
        :type resource_identifiers: List
        """

        self._resource_identifiers = resource_identifiers

    @property
    def next_token(self):
        """Gets the next_token of this SearchResourcesOutput.


        :return: The next_token of this SearchResourcesOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this SearchResourcesOutput.


        :param next_token: The next_token of this SearchResourcesOutput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def query_errors(self):
        """Gets the query_errors of this SearchResourcesOutput.


        :return: The query_errors of this SearchResourcesOutput.
        :rtype: List
        """
        return self._query_errors

    @query_errors.setter
    def query_errors(self, query_errors):
        """Sets the query_errors of this SearchResourcesOutput.


        :param query_errors: The query_errors of this SearchResourcesOutput.
        :type query_errors: List
        """

        self._query_errors = query_errors
