# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_group_query_output_group_query import UpdateGroupQueryOutputGroupQuery
from openapi_server import util


class UpdateGroupQueryOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_query: UpdateGroupQueryOutputGroupQuery=None):
        """UpdateGroupQueryOutput - a model defined in OpenAPI

        :param group_query: The group_query of this UpdateGroupQueryOutput.
        """
        self.openapi_types = {
            'group_query': UpdateGroupQueryOutputGroupQuery
        }

        self.attribute_map = {
            'group_query': 'GroupQuery'
        }

        self._group_query = group_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGroupQueryOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGroupQueryOutput of this UpdateGroupQueryOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_query(self):
        """Gets the group_query of this UpdateGroupQueryOutput.


        :return: The group_query of this UpdateGroupQueryOutput.
        :rtype: UpdateGroupQueryOutputGroupQuery
        """
        return self._group_query

    @group_query.setter
    def group_query(self, group_query):
        """Sets the group_query of this UpdateGroupQueryOutput.


        :param group_query: The group_query of this UpdateGroupQueryOutput.
        :type group_query: UpdateGroupQueryOutputGroupQuery
        """

        self._group_query = group_query
