# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_group_output_group import CreateGroupOutputGroup
from openapi_server.models.create_group_output_group_configuration import CreateGroupOutputGroupConfiguration
from openapi_server.models.create_group_output_resource_query import CreateGroupOutputResourceQuery
from openapi_server import util


class CreateGroupOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group: CreateGroupOutputGroup=None, resource_query: CreateGroupOutputResourceQuery=None, tags: Dict=None, group_configuration: CreateGroupOutputGroupConfiguration=None):
        """CreateGroupOutput - a model defined in OpenAPI

        :param group: The group of this CreateGroupOutput.
        :param resource_query: The resource_query of this CreateGroupOutput.
        :param tags: The tags of this CreateGroupOutput.
        :param group_configuration: The group_configuration of this CreateGroupOutput.
        """
        self.openapi_types = {
            'group': CreateGroupOutputGroup,
            'resource_query': CreateGroupOutputResourceQuery,
            'tags': Dict,
            'group_configuration': CreateGroupOutputGroupConfiguration
        }

        self.attribute_map = {
            'group': 'Group',
            'resource_query': 'ResourceQuery',
            'tags': 'Tags',
            'group_configuration': 'GroupConfiguration'
        }

        self._group = group
        self._resource_query = resource_query
        self._tags = tags
        self._group_configuration = group_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGroupOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGroupOutput of this CreateGroupOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group(self):
        """Gets the group of this CreateGroupOutput.


        :return: The group of this CreateGroupOutput.
        :rtype: CreateGroupOutputGroup
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this CreateGroupOutput.


        :param group: The group of this CreateGroupOutput.
        :type group: CreateGroupOutputGroup
        """

        self._group = group

    @property
    def resource_query(self):
        """Gets the resource_query of this CreateGroupOutput.


        :return: The resource_query of this CreateGroupOutput.
        :rtype: CreateGroupOutputResourceQuery
        """
        return self._resource_query

    @resource_query.setter
    def resource_query(self, resource_query):
        """Sets the resource_query of this CreateGroupOutput.


        :param resource_query: The resource_query of this CreateGroupOutput.
        :type resource_query: CreateGroupOutputResourceQuery
        """

        self._resource_query = resource_query

    @property
    def tags(self):
        """Gets the tags of this CreateGroupOutput.


        :return: The tags of this CreateGroupOutput.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateGroupOutput.


        :param tags: The tags of this CreateGroupOutput.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def group_configuration(self):
        """Gets the group_configuration of this CreateGroupOutput.


        :return: The group_configuration of this CreateGroupOutput.
        :rtype: CreateGroupOutputGroupConfiguration
        """
        return self._group_configuration

    @group_configuration.setter
    def group_configuration(self, group_configuration):
        """Sets the group_configuration of this CreateGroupOutput.


        :param group_configuration: The group_configuration of this CreateGroupOutput.
        :type group_configuration: CreateGroupOutputGroupConfiguration
        """

        self._group_configuration = group_configuration
