/**
 * AWS Resource Groups
 * <p>Resource Groups lets you organize Amazon Web Services resources such as Amazon Elastic Compute Cloud instances, Amazon Relational Database Service databases, and Amazon Simple Storage Service buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource Groups enable you to automate management tasks, such as those in Amazon Web Services Systems Manager Automation documents, on tag-related resources in Amazon Web Services Systems Manager. Groups of tagged resources also let you quickly view a custom console in Amazon Web Services Systems Manager that shows Config compliance and other monitoring data about member resources.</p> <p>To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.</p> <p>For more information about Resource Groups, see the <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html\">Resource Groups User Guide</a>.</p> <p>Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.</p> <ul> <li> <p>Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities</p> </li> <li> <p>Applying, editing, and removing tags from resource groups</p> </li> <li> <p>Resolving resource group member ARNs so they can be returned as search results</p> </li> <li> <p>Getting data about resources that are members of a group</p> </li> <li> <p>Searching Amazon Web Services resources based on a resource query</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceQuery.h
 *
 * &lt;p&gt;The query you can use to define a resource group or a search for resources. A &lt;code&gt;ResourceQuery&lt;/code&gt; specifies both a query &lt;code&gt;Type&lt;/code&gt; and a &lt;code&gt;Query&lt;/code&gt; string as JSON string objects. See the examples section for example JSON strings. For more information about creating a resource group with a resource query, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html\&quot;&gt;Build queries and groups in Resource Groups&lt;/a&gt; in the &lt;i&gt;Resource Groups User Guide&lt;/i&gt; &lt;/p&gt; &lt;p&gt;When you combine all of the elements together into a single string, any double quotes that are embedded inside another double quote pair must be escaped by preceding the embedded double quote with a backslash character (\\). For example, a complete &lt;code&gt;ResourceQuery&lt;/code&gt; parameter must be formatted like the following CLI parameter example:&lt;/p&gt; &lt;p&gt; &lt;code&gt;--resource-query &#39;{\&quot;Type\&quot;:\&quot;TAG_FILTERS_1_0\&quot;,\&quot;Query\&quot;:\&quot;{\\\&quot;ResourceTypeFilters\\\&quot;:[\\\&quot;AWS::AllSupported\\\&quot;],\\\&quot;TagFilters\\\&quot;:[{\\\&quot;Key\\\&quot;:\\\&quot;Stage\\\&quot;,\\\&quot;Values\\\&quot;:[\\\&quot;Test\\\&quot;]}]}\&quot;}&#39;&lt;/code&gt; &lt;/p&gt; &lt;p&gt;In the preceding example, all of the double quote characters in the value part of the &lt;code&gt;Query&lt;/code&gt; element must be escaped because the value itself is surrounded by double quotes. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html\&quot;&gt;Quoting strings&lt;/a&gt; in the &lt;i&gt;Command Line Interface User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For the complete list of resource types that you can use in the array value for &lt;code&gt;ResourceTypeFilters&lt;/code&gt;, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html\&quot;&gt;Resources you can use with Resource Groups and Tag Editor&lt;/a&gt; in the &lt;i&gt;Resource Groups User Guide&lt;/i&gt;. For example:&lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;ResourceTypeFilters\&quot;:[\&quot;AWS::S3::Bucket\&quot;, \&quot;AWS::EC2::Instance\&quot;]&lt;/code&gt; &lt;/p&gt;
 */

#ifndef OAIResourceQuery_H
#define OAIResourceQuery_H

#include <QJsonObject>

#include "OAIQueryType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceQuery : public OAIObject {
public:
    OAIResourceQuery();
    OAIResourceQuery(QString json);
    ~OAIResourceQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQueryType getType() const;
    void setType(const OAIQueryType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQueryType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceQuery)

#endif // OAIResourceQuery_H
