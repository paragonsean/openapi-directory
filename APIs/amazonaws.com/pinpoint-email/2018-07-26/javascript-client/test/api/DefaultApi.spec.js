/**
 * Amazon Pinpoint Email Service
 * <fullname>Amazon Pinpoint Email Service</fullname> <p>Welcome to the <i>Amazon Pinpoint Email API Reference</i>. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.</p> <p> <a href=\"https://aws.amazon.com/pinpoint\">Amazon Pinpoint</a> is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\">Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.</p> <p>The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region\">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To learn more about AWS Regions, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\">Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see <a href=\"http://aws.amazon.com/about-aws/global-infrastructure/\">AWS Global Infrastructure</a>.</p>
 *
 * The version of the OpenAPI document: 2018-07-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonPinpointEmailService);
  }
}(this, function(expect, AmazonPinpointEmailService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonPinpointEmailService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createConfigurationSet', function() {
      it('should call createConfigurationSet successfully', function(done) {
        //uncomment below and update the code to test createConfigurationSet
        //instance.createConfigurationSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConfigurationSetEventDestination', function() {
      it('should call createConfigurationSetEventDestination successfully', function(done) {
        //uncomment below and update the code to test createConfigurationSetEventDestination
        //instance.createConfigurationSetEventDestination(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDedicatedIpPool', function() {
      it('should call createDedicatedIpPool successfully', function(done) {
        //uncomment below and update the code to test createDedicatedIpPool
        //instance.createDedicatedIpPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDeliverabilityTestReport', function() {
      it('should call createDeliverabilityTestReport successfully', function(done) {
        //uncomment below and update the code to test createDeliverabilityTestReport
        //instance.createDeliverabilityTestReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEmailIdentity', function() {
      it('should call createEmailIdentity successfully', function(done) {
        //uncomment below and update the code to test createEmailIdentity
        //instance.createEmailIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfigurationSet', function() {
      it('should call deleteConfigurationSet successfully', function(done) {
        //uncomment below and update the code to test deleteConfigurationSet
        //instance.deleteConfigurationSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfigurationSetEventDestination', function() {
      it('should call deleteConfigurationSetEventDestination successfully', function(done) {
        //uncomment below and update the code to test deleteConfigurationSetEventDestination
        //instance.deleteConfigurationSetEventDestination(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDedicatedIpPool', function() {
      it('should call deleteDedicatedIpPool successfully', function(done) {
        //uncomment below and update the code to test deleteDedicatedIpPool
        //instance.deleteDedicatedIpPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEmailIdentity', function() {
      it('should call deleteEmailIdentity successfully', function(done) {
        //uncomment below and update the code to test deleteEmailIdentity
        //instance.deleteEmailIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccount', function() {
      it('should call getAccount successfully', function(done) {
        //uncomment below and update the code to test getAccount
        //instance.getAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlacklistReports', function() {
      it('should call getBlacklistReports successfully', function(done) {
        //uncomment below and update the code to test getBlacklistReports
        //instance.getBlacklistReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfigurationSet', function() {
      it('should call getConfigurationSet successfully', function(done) {
        //uncomment below and update the code to test getConfigurationSet
        //instance.getConfigurationSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfigurationSetEventDestinations', function() {
      it('should call getConfigurationSetEventDestinations successfully', function(done) {
        //uncomment below and update the code to test getConfigurationSetEventDestinations
        //instance.getConfigurationSetEventDestinations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDedicatedIp', function() {
      it('should call getDedicatedIp successfully', function(done) {
        //uncomment below and update the code to test getDedicatedIp
        //instance.getDedicatedIp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDedicatedIps', function() {
      it('should call getDedicatedIps successfully', function(done) {
        //uncomment below and update the code to test getDedicatedIps
        //instance.getDedicatedIps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeliverabilityDashboardOptions', function() {
      it('should call getDeliverabilityDashboardOptions successfully', function(done) {
        //uncomment below and update the code to test getDeliverabilityDashboardOptions
        //instance.getDeliverabilityDashboardOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeliverabilityTestReport', function() {
      it('should call getDeliverabilityTestReport successfully', function(done) {
        //uncomment below and update the code to test getDeliverabilityTestReport
        //instance.getDeliverabilityTestReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDomainDeliverabilityCampaign', function() {
      it('should call getDomainDeliverabilityCampaign successfully', function(done) {
        //uncomment below and update the code to test getDomainDeliverabilityCampaign
        //instance.getDomainDeliverabilityCampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDomainStatisticsReport', function() {
      it('should call getDomainStatisticsReport successfully', function(done) {
        //uncomment below and update the code to test getDomainStatisticsReport
        //instance.getDomainStatisticsReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmailIdentity', function() {
      it('should call getEmailIdentity successfully', function(done) {
        //uncomment below and update the code to test getEmailIdentity
        //instance.getEmailIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfigurationSets', function() {
      it('should call listConfigurationSets successfully', function(done) {
        //uncomment below and update the code to test listConfigurationSets
        //instance.listConfigurationSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDedicatedIpPools', function() {
      it('should call listDedicatedIpPools successfully', function(done) {
        //uncomment below and update the code to test listDedicatedIpPools
        //instance.listDedicatedIpPools(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeliverabilityTestReports', function() {
      it('should call listDeliverabilityTestReports successfully', function(done) {
        //uncomment below and update the code to test listDeliverabilityTestReports
        //instance.listDeliverabilityTestReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDomainDeliverabilityCampaigns', function() {
      it('should call listDomainDeliverabilityCampaigns successfully', function(done) {
        //uncomment below and update the code to test listDomainDeliverabilityCampaigns
        //instance.listDomainDeliverabilityCampaigns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEmailIdentities', function() {
      it('should call listEmailIdentities successfully', function(done) {
        //uncomment below and update the code to test listEmailIdentities
        //instance.listEmailIdentities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccountDedicatedIpWarmupAttributes', function() {
      it('should call putAccountDedicatedIpWarmupAttributes successfully', function(done) {
        //uncomment below and update the code to test putAccountDedicatedIpWarmupAttributes
        //instance.putAccountDedicatedIpWarmupAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccountSendingAttributes', function() {
      it('should call putAccountSendingAttributes successfully', function(done) {
        //uncomment below and update the code to test putAccountSendingAttributes
        //instance.putAccountSendingAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putConfigurationSetDeliveryOptions', function() {
      it('should call putConfigurationSetDeliveryOptions successfully', function(done) {
        //uncomment below and update the code to test putConfigurationSetDeliveryOptions
        //instance.putConfigurationSetDeliveryOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putConfigurationSetReputationOptions', function() {
      it('should call putConfigurationSetReputationOptions successfully', function(done) {
        //uncomment below and update the code to test putConfigurationSetReputationOptions
        //instance.putConfigurationSetReputationOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putConfigurationSetSendingOptions', function() {
      it('should call putConfigurationSetSendingOptions successfully', function(done) {
        //uncomment below and update the code to test putConfigurationSetSendingOptions
        //instance.putConfigurationSetSendingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putConfigurationSetTrackingOptions', function() {
      it('should call putConfigurationSetTrackingOptions successfully', function(done) {
        //uncomment below and update the code to test putConfigurationSetTrackingOptions
        //instance.putConfigurationSetTrackingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putDedicatedIpInPool', function() {
      it('should call putDedicatedIpInPool successfully', function(done) {
        //uncomment below and update the code to test putDedicatedIpInPool
        //instance.putDedicatedIpInPool(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putDedicatedIpWarmupAttributes', function() {
      it('should call putDedicatedIpWarmupAttributes successfully', function(done) {
        //uncomment below and update the code to test putDedicatedIpWarmupAttributes
        //instance.putDedicatedIpWarmupAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putDeliverabilityDashboardOption', function() {
      it('should call putDeliverabilityDashboardOption successfully', function(done) {
        //uncomment below and update the code to test putDeliverabilityDashboardOption
        //instance.putDeliverabilityDashboardOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putEmailIdentityDkimAttributes', function() {
      it('should call putEmailIdentityDkimAttributes successfully', function(done) {
        //uncomment below and update the code to test putEmailIdentityDkimAttributes
        //instance.putEmailIdentityDkimAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putEmailIdentityFeedbackAttributes', function() {
      it('should call putEmailIdentityFeedbackAttributes successfully', function(done) {
        //uncomment below and update the code to test putEmailIdentityFeedbackAttributes
        //instance.putEmailIdentityFeedbackAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putEmailIdentityMailFromAttributes', function() {
      it('should call putEmailIdentityMailFromAttributes successfully', function(done) {
        //uncomment below and update the code to test putEmailIdentityMailFromAttributes
        //instance.putEmailIdentityMailFromAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmail', function() {
      it('should call sendEmail successfully', function(done) {
        //uncomment below and update the code to test sendEmail
        //instance.sendEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfigurationSetEventDestination', function() {
      it('should call updateConfigurationSetEventDestination successfully', function(done) {
        //uncomment below and update the code to test updateConfigurationSetEventDestination
        //instance.updateConfigurationSetEventDestination(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
