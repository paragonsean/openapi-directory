openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Pinpoint Email Service</fullname> <p>Welcome to the\
    \ <i>Amazon Pinpoint Email API Reference</i>. This guide provides information\
    \ about the Amazon Pinpoint Email API (version 1.0), including supported operations,\
    \ data types, parameters, and schemas.</p> <p> <a href=\"https://aws.amazon.com/pinpoint\"\
    >Amazon Pinpoint</a> is an AWS service that you can use to engage with your customers\
    \ across multiple messaging channels. You can use Amazon Pinpoint to send email,\
    \ SMS text messages, voice messages, and push notifications. The Amazon Pinpoint\
    \ Email API provides programmatic access to options that are unique to the email\
    \ channel and supplement the options provided by the Amazon Pinpoint API.</p>\
    \ <p>If you're new to Amazon Pinpoint, you might find it helpful to also review\
    \ the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\"\
    >Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i>\
    \ provides tutorials, code samples, and procedures that demonstrate how to use\
    \ Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint\
    \ functionality into mobile apps and other types of applications. The guide also\
    \ provides information about key topics such as Amazon Pinpoint integration with\
    \ other AWS services and the limits that apply to using the service.</p> <p>The\
    \ Amazon Pinpoint Email API is available in several AWS Regions and it provides\
    \ an endpoint for each of these Regions. For a list of all the Regions and endpoints\
    \ where the API is currently available, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region\"\
    >AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.\
    \ To learn more about AWS Regions, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\"\
    >Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p>\
    \ <p>In each Region, AWS maintains multiple Availability Zones. These Availability\
    \ Zones are physically isolated from each other, but are united by private, low-latency,\
    \ high-throughput, and highly redundant network connections. These Availability\
    \ Zones enable us to provide very high levels of availability and redundancy,\
    \ while also minimizing latency. To learn more about the number of Availability\
    \ Zones that are available in each Region, see <a href=\"http://aws.amazon.com/about-aws/global-infrastructure/\"\
    >AWS Global Infrastructure</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Pinpoint Email Service
  version: 2018-07-26
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: pinpoint-email
  x-aws-signingName: ses
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pinpoint-email-2018-07-26.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/email/
servers:
- description: The Pinpoint Email multi-region endpoint
  url: "http://email.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Pinpoint Email multi-region endpoint
  url: "https://email.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Pinpoint Email endpoint for China (Beijing) and China (Ningxia)
  url: "http://email.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Pinpoint Email endpoint for China (Beijing) and China (Ningxia)
  url: "https://email.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/email/configuration-sets:
    get:
      description: "<p>List all of the configuration sets associated with your Amazon\
        \ Pinpoint account in the current region.</p> <p>In Amazon Pinpoint, <i>configuration\
        \ sets</i> are groups of rules that you can apply to the emails you send.\
        \ You apply a configuration set to an email by including a reference to the\
        \ configuration set in the headers of the email. When you apply a configuration\
        \ set to an email, all of the rules in that configuration set are applied\
        \ to the email.</p>"
      operationId: ListConfigurationSets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListConfigurationSets</code>
          to indicate the position in the list of configuration sets.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>ListConfigurationSets</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "Create a configuration set. <i>Configuration sets</i> are groups\
        \ of rules that you can apply to the emails you send using Amazon Pinpoint.\
        \ You apply a configuration set to an email by including a reference to the\
        \ configuration set in the headers of the email. When you apply a configuration\
        \ set to an email, all of the rules in that configuration set are applied\
        \ to the email. "
      operationId: CreateConfigurationSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationSet_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/event-destinations:
    get:
      description: "<p>Retrieve a list of event destinations that are associated with\
        \ a configuration set.</p> <p>In Amazon Pinpoint, <i>events</i> include message\
        \ sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i>\
        \ are places that you can send information about these events to. For example,\
        \ you can send event data to Amazon SNS to receive notifications when you\
        \ receive bounces or complaints, or you can use Amazon Kinesis Data Firehose\
        \ to stream data to Amazon S3 for long-term storage.</p>"
      operationId: GetConfigurationSetEventDestinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetEventDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "<p>Create an event destination. In Amazon Pinpoint, <i>events</i>\
        \ include message sends, deliveries, opens, clicks, bounces, and complaints.\
        \ <i>Event destinations</i> are places that you can send information about\
        \ these events to. For example, you can send event data to Amazon SNS to receive\
        \ notifications when you receive bounces or complaints, or you can use Amazon\
        \ Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>\
        \ <p>A single configuration set can include more than one event destination.</p>"
      operationId: CreateConfigurationSetEventDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to add an event
          destination to.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/dedicated-ip-pools:
    get:
      description: List all of the dedicated IP pools that exist in your Amazon Pinpoint
        account in the current AWS Region.
      operationId: ListDedicatedIpPools
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListDedicatedIpPools</code>
          to indicate the position in the list of dedicated IP pools.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>ListDedicatedIpPools</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDedicatedIpPoolsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "Create a new pool of dedicated IP addresses. A pool can include\
        \ one or more dedicated IP addresses that are associated with your Amazon\
        \ Pinpoint account. You can associate a pool with a configuration set. When\
        \ you send an email that uses that configuration set, Amazon Pinpoint sends\
        \ it using only the IP addresses in the associated pool."
      operationId: CreateDedicatedIpPool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDedicatedIpPool_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDedicatedIpPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/test:
    post:
      description: "Create a new predictive inbox placement test. Predictive inbox\
        \ placement tests can help you predict how your messages will be handled by\
        \ various email providers around the world. When you perform a predictive\
        \ inbox placement test, you provide a sample message that contains the content\
        \ that you plan to send to your customers. Amazon Pinpoint then sends that\
        \ message to special email addresses spread across several major email providers.\
        \ After about 24 hours, the test is complete, and you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results of the test."
      operationId: CreateDeliverabilityTestReport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeliverabilityTestReport_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliverabilityTestReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
          description: AccountSuspendedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/identities:
    get:
      description: Returns a list of all of the email identities that are associated
        with your Amazon Pinpoint account. An identity can be either an email address
        or a domain. This operation returns identities that are verified as well as
        those that aren't.
      operationId: ListEmailIdentities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListEmailIdentities</code>
          to indicate the position in the list of identities.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListEmailIdentities</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 0, and can be no more than 1000.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmailIdentitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "<p>Verifies an email identity for use with Amazon Pinpoint. In\
        \ Amazon Pinpoint, an identity is an email address or domain that you use\
        \ when you send email. Before you can use an identity to send email with Amazon\
        \ Pinpoint, you first have to verify it. By verifying an address, you demonstrate\
        \ that you're the owner of the address, and that you've given Amazon Pinpoint\
        \ permission to send email from the address.</p> <p>When you verify an email\
        \ address, Amazon Pinpoint sends an email to the address. Your email address\
        \ is verified as soon as you follow the link in the verification email. </p>\
        \ <p>When you verify a domain, this operation provides a set of DKIM tokens,\
        \ which you can convert into CNAME tokens. You add these CNAME tokens to the\
        \ DNS configuration for your domain. Your domain is verified when Amazon Pinpoint\
        \ detects these records in the DNS configuration for your domain. It usually\
        \ takes around 72 hours to complete the domain verification process.</p>"
      operationId: CreateEmailIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailIdentity_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}:
    delete:
      description: "<p>Delete an existing configuration set.</p> <p>In Amazon Pinpoint,\
        \ <i>configuration sets</i> are groups of rules that you can apply to the\
        \ emails you send. You apply a configuration set to an email by including\
        \ a reference to the configuration set in the headers of the email. When you\
        \ apply a configuration set to an email, all of the rules in that configuration\
        \ set are applied to the email.</p>"
      operationId: DeleteConfigurationSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to delete.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-accepts:
      - application/json
    get:
      description: "<p>Get information about an existing configuration set, including\
        \ the dedicated IP pool that it's associated with, whether or not it's enabled\
        \ for sending email, and more.</p> <p>In Amazon Pinpoint, <i>configuration\
        \ sets</i> are groups of rules that you can apply to the emails you send.\
        \ You apply a configuration set to an email by including a reference to the\
        \ configuration set in the headers of the email. When you apply a configuration\
        \ set to an email, all of the rules in that configuration set are applied\
        \ to the email.</p>"
      operationId: GetConfigurationSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to obtain more
          information about.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}:
    delete:
      description: "<p>Delete an event destination.</p> <p>In Amazon Pinpoint, <i>events</i>\
        \ include message sends, deliveries, opens, clicks, bounces, and complaints.\
        \ <i>Event destinations</i> are places that you can send information about\
        \ these events to. For example, you can send event data to Amazon SNS to receive\
        \ notifications when you receive bounces or complaints, or you can use Amazon\
        \ Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>"
      operationId: DeleteConfigurationSetEventDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination
          that you want to delete.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      - description: The name of the event destination that you want to delete.
        explode: false
        in: path
        name: EventDestinationName
        required: true
        schema:
          description: "<p>The name of an event destination.</p> <p>In Amazon Pinpoint,\
            \ <i>events</i> include message sends, deliveries, opens, clicks, bounces,\
            \ and complaints. <i>Event destinations</i> are places that you can send\
            \ information about these events to. For example, you can send event data\
            \ to Amazon SNS to receive notifications when you receive bounces or complaints,\
            \ or you can use Amazon Kinesis Data Firehose to stream data to Amazon\
            \ S3 for long-term storage.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    put:
      description: "<p>Update the configuration of an event destination for a configuration\
        \ set.</p> <p>In Amazon Pinpoint, <i>events</i> include message sends, deliveries,\
        \ opens, clicks, bounces, and complaints. <i>Event destinations</i> are places\
        \ that you can send information about these events to. For example, you can\
        \ send event data to Amazon SNS to receive notifications when you receive\
        \ bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream\
        \ data to Amazon S3 for long-term storage.</p>"
      operationId: UpdateConfigurationSetEventDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination
          that you want to modify.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      - description: The name of the event destination that you want to modify.
        explode: false
        in: path
        name: EventDestinationName
        required: true
        schema:
          description: "<p>The name of an event destination.</p> <p>In Amazon Pinpoint,\
            \ <i>events</i> include message sends, deliveries, opens, clicks, bounces,\
            \ and complaints. <i>Event destinations</i> are places that you can send\
            \ information about these events to. For example, you can send event data\
            \ to Amazon SNS to receive notifications when you receive bounces or complaints,\
            \ or you can use Amazon Kinesis Data Firehose to stream data to Amazon\
            \ S3 for long-term storage.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationSetEventDestination_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/dedicated-ip-pools/{PoolName}:
    delete:
      description: Delete a dedicated IP pool.
      operationId: DeleteDedicatedIpPool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the dedicated IP pool that you want to delete.
        explode: false
        in: path
        name: PoolName
        required: true
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDedicatedIpPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-accepts:
      - application/json
  /v1/email/identities/{EmailIdentity}:
    delete:
      description: Deletes an email identity that you previously verified for use
        with Amazon Pinpoint. An identity can be either an email address or a domain
        name.
      operationId: DeleteEmailIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identity (that is, the email address or domain) that you\
          \ want to delete from your Amazon Pinpoint account."
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-accepts:
      - application/json
    get:
      description: "Provides information about a specific identity associated with\
        \ your Amazon Pinpoint account, including the identity's verification status,\
        \ its DKIM authentication status, and its custom Mail-From settings."
      operationId: GetEmailIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity that you want to retrieve details for.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/account:
    get:
      description: Obtain information about the email-sending status and capabilities
        of your Amazon Pinpoint account in the current AWS Region.
      operationId: GetAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/blacklist-report#BlacklistItemNames:
    get:
      description: Retrieve a list of the blacklists that your dedicated IP addresses
        appear on.
      operationId: GetBlacklistReports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A list of IP addresses that you want to retrieve blacklist information
          about. You can only specify the dedicated IP addresses that you use to send
          email using Amazon Pinpoint or Amazon SES.
        explode: true
        in: query
        name: BlacklistItemNames
        required: true
        schema:
          items:
            $ref: '#/components/schemas/BlacklistItemName'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlacklistReportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/dedicated-ips/{IP}:
    get:
      description: "Get information about a dedicated IP address, including the name\
        \ of the dedicated IP pool that it's associated with, as well information\
        \ about the automatic warm-up process for the address."
      operationId: GetDedicatedIp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The IP address that you want to obtain more information about.
          The value you specify has to be a dedicated IP address that's assocaited
          with your Amazon Pinpoint account.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: A dedicated IP address that is associated with your Amazon
            Pinpoint account.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/dedicated-ips:
    get:
      description: List the dedicated IP addresses that are associated with your Amazon
        Pinpoint account.
      operationId: GetDedicatedIps
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the IP pool that the dedicated IP address is associated
          with.
        explode: true
        in: query
        name: PoolName
        required: false
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: form
      - description: A token returned from a previous call to <code>GetDedicatedIps</code>
          to indicate the position of the dedicated IP pool in the list of IP pools.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard:
    get:
      description: "<p>Retrieve information about the status of the Deliverability\
        \ dashboard for your Amazon Pinpoint account. When the Deliverability dashboard\
        \ is enabled, you gain access to reputation, deliverability, and other metrics\
        \ for the domains that you use to send email using Amazon Pinpoint. You also\
        \ gain the ability to perform predictive inbox placement tests.</p> <p>When\
        \ you use the Deliverability dashboard, you pay a monthly subscription charge,\
        \ in addition to any other fees that you accrue by using Amazon Pinpoint.\
        \ For more information about the features and cost of a Deliverability dashboard\
        \ subscription, see <a href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon\
        \ Pinpoint Pricing</a>.</p>"
      operationId: GetDeliverabilityDashboardOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityDashboardOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    put:
      description: "<p>Enable or disable the Deliverability dashboard for your Amazon\
        \ Pinpoint account. When you enable the Deliverability dashboard, you gain\
        \ access to reputation, deliverability, and other metrics for the domains\
        \ that you use to send email using Amazon Pinpoint. You also gain the ability\
        \ to perform predictive inbox placement tests.</p> <p>When you use the Deliverability\
        \ dashboard, you pay a monthly subscription charge, in addition to any other\
        \ fees that you accrue by using Amazon Pinpoint. For more information about\
        \ the features and cost of a Deliverability dashboard subscription, see <a\
        \ href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon Pinpoint Pricing</a>.</p>"
      operationId: PutDeliverabilityDashboardOption
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDeliverabilityDashboardOption_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDeliverabilityDashboardOptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/test-reports/{ReportId}:
    get:
      description: Retrieve the results of a predictive inbox placement test.
      operationId: GetDeliverabilityTestReport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A unique string that identifies the predictive inbox placement
          test.
        explode: false
        in: path
        name: ReportId
        required: true
        schema:
          description: A unique string that identifies a Deliverability dashboard
            report.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityTestReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/campaigns/{CampaignId}:
    get:
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      operationId: GetDomainDeliverabilityCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign. Amazon Pinpoint automatically
          generates and assigns this identifier to a campaign. This value is not the
          same as the campaign identifier that Amazon Pinpoint assigns to campaigns
          that you create and manage by using the Amazon Pinpoint API or the Amazon
          Pinpoint console.
        explode: false
        in: path
        name: CampaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainDeliverabilityCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/statistics-report/{Domain}#StartDate&EndDate:
    get:
      description: Retrieve inbox placement and engagement rates for the domains that
        you use to send email.
      operationId: GetDomainStatisticsReport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The domain that you want to obtain deliverability metrics for.
        explode: false
        in: path
        name: Domain
        required: true
        schema:
          type: string
        style: simple
      - description: The first day (in Unix time) that you want to obtain domain deliverability
          metrics for.
        explode: true
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The last day (in Unix time) that you want to obtain domain deliverability
          metrics for. The <code>EndDate</code> that you specify has to be less than
          or equal to 30 days after the <code>StartDate</code>.
        explode: true
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainStatisticsReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/test-reports:
    get:
      description: "Show a list of the predictive inbox placement tests that you've\
        \ performed, regardless of their statuses. For predictive inbox placement\
        \ tests that are complete, you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results."
      operationId: ListDeliverabilityTestReports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListDeliverabilityTestReports</code>
          to indicate the position in the list of predictive inbox placement tests.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListDeliverabilityTestReports</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 0, and can be no more than 1000.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliverabilityTestReportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /v1/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns#StartDate&EndDate:
    get:
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard (<code>PutDeliverabilityDashboardOption</code>
        operation) for the domain.
      operationId: ListDomainDeliverabilityCampaigns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The first day, in Unix time format, that you want to obtain\
          \ deliverability data for."
        explode: true
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "The last day, in Unix time format, that you want to obtain deliverability\
          \ data for. This value has to be less than or equal to 30 days after the\
          \ value of the <code>StartDate</code> parameter."
        explode: true
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The domain to obtain deliverability data for.
        explode: false
        in: path
        name: SubscribedDomain
        required: true
        schema:
          type: string
        style: simple
      - description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code>
          operation. This token indicates the position of a campaign in the list of
          campaigns.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to include in response to a single\
          \ call to the <code>ListDomainDeliverabilityCampaigns</code> operation.\
          \ If the number of results is larger than the number that you specify in\
          \ this parameter, the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainDeliverabilityCampaignsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-accepts:
      - application/json
  /v1/email/tags#ResourceArn:
    get:
      description: Retrieve a list of the tags (keys and values) that are associated
        with a specified resource. A <i>tag</i> is a label that you optionally define
        and associate with a resource in Amazon Pinpoint. Each tag consists of a required <i>tag
        key</i> and an optional associated <i>tag value</i>. A tag key is a general
        label that acts as a category for more specific tag values. A tag value acts
        as a descriptor within a tag key.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to retrieve tag information for.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/email/account/dedicated-ips/warmup:
    put:
      description: Enable or disable the automatic warm-up feature for dedicated IP
        addresses.
      operationId: PutAccountDedicatedIpWarmupAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountDedicatedIpWarmupAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountDedicatedIpWarmupAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/account/sending:
    put:
      description: Enable or disable the ability of your account to send email.
      operationId: PutAccountSendingAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountSendingAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountSendingAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/delivery-options:
    put:
      description: Associate a configuration set with a dedicated IP pool. You can
        use dedicated IP pools to create groups of dedicated IP addresses for sending
        specific types of email.
      operationId: PutConfigurationSetDeliveryOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to associate
          with a dedicated IP pool.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetDeliveryOptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetDeliveryOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/reputation-options:
    put:
      description: Enable or disable collection of reputation metrics for emails that
        you send using a particular configuration set in a specific AWS Region.
      operationId: PutConfigurationSetReputationOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to enable or
          disable reputation metric tracking for.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetReputationOptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetReputationOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/sending:
    put:
      description: Enable or disable email sending for messages that use a particular
        configuration set in a specific AWS Region.
      operationId: PutConfigurationSetSendingOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to enable or
          disable email sending for.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetSendingOptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetSendingOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/configuration-sets/{ConfigurationSetName}/tracking-options:
    put:
      description: Specify a custom domain to use for open and click tracking elements
        in email that you send using Amazon Pinpoint.
      operationId: PutConfigurationSetTrackingOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that you want to add a custom
          tracking domain to.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetTrackingOptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetTrackingOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/dedicated-ips/{IP}/pool:
    put:
      description: "<p>Move a dedicated IP address to an existing dedicated IP pool.</p>\
        \ <note> <p>The dedicated IP address that you specify must already exist,\
        \ and must be associated with your Amazon Pinpoint account. </p> <p>The dedicated\
        \ IP pool you specify must already exist. You can create a new pool by using\
        \ the <code>CreateDedicatedIpPool</code> operation.</p> </note>"
      operationId: PutDedicatedIpInPool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The IP address that you want to move to the dedicated IP pool.
          The value you specify has to be a dedicated IP address that's associated
          with your Amazon Pinpoint account.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: A dedicated IP address that is associated with your Amazon
            Pinpoint account.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDedicatedIpInPool_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpInPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/dedicated-ips/{IP}/warmup:
    put:
      description: <p/>
      operationId: PutDedicatedIpWarmupAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The dedicated IP address that you want to update the warm-up
          attributes for.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: A dedicated IP address that is associated with your Amazon
            Pinpoint account.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDedicatedIpWarmupAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpWarmupAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/identities/{EmailIdentity}/dkim:
    put:
      description: Used to enable or disable DKIM authentication for an email identity.
      operationId: PutEmailIdentityDkimAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity that you want to change the DKIM settings
          for.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityDkimAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityDkimAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/identities/{EmailIdentity}/feedback:
    put:
      description: "<p>Used to enable or disable feedback forwarding for an identity.\
        \ This setting determines what happens when an identity is used to send an\
        \ email that results in a bounce or complaint event.</p> <p>When you enable\
        \ feedback forwarding, Amazon Pinpoint sends you email notifications when\
        \ bounce or complaint events occur. Amazon Pinpoint sends this notification\
        \ to the address that you specified in the Return-Path header of the original\
        \ email.</p> <p>When you disable feedback forwarding, Amazon Pinpoint sends\
        \ notifications through other mechanisms, such as by notifying an Amazon SNS\
        \ topic. You're required to have a method of tracking bounces and complaints.\
        \ If you haven't set up another mechanism for receiving bounce or complaint\
        \ notifications, Amazon Pinpoint sends an email notification when these events\
        \ occur (even if this setting is disabled).</p>"
      operationId: PutEmailIdentityFeedbackAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity that you want to configure bounce and complaint
          feedback forwarding for.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityFeedbackAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityFeedbackAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/identities/{EmailIdentity}/mail-from:
    put:
      description: Used to enable or disable the custom Mail-From domain configuration
        for an email identity.
      operationId: PutEmailIdentityMailFromAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The verified email identity that you want to set up the custom
          MAIL FROM domain for.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityMailFromAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityMailFromAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/outbound-emails:
    post:
      description: "<p>Sends an email message. You can use the Amazon Pinpoint Email\
        \ API to send two types of messages:</p> <ul> <li> <p> <b>Simple</b> – A standard\
        \ email message. When you create this type of message, you specify the sender,\
        \ the recipient, and the message body, and Amazon Pinpoint assembles the message\
        \ for you.</p> </li> <li> <p> <b>Raw</b> – A raw, MIME-formatted email message.\
        \ When you send this type of email, you have to specify all of the message\
        \ headers, as well as the message body. You can use this message type to send\
        \ messages that contain attachments. The message that you specify has to be\
        \ a valid MIME message.</p> </li> </ul>"
      operationId: SendEmail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmail_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
          description: AccountSuspendedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/tags:
    post:
      description: "<p>Add one or more tags (keys and values) to a specified resource.\
        \ A <i>tag</i>\_is a label that you optionally define and associate with a\
        \ resource in Amazon Pinpoint. Tags can help you categorize and manage resources\
        \ in different ways, such as by purpose, owner, environment, or other criteria.\
        \ A resource can have as many as 50 tags.</p> <p>Each tag consists of a required\_\
        <i>tag key</i>\_and an associated\_<i>tag value</i>, both of which you define.\
        \ A tag key is a general label that acts as a category for more specific tag\
        \ values. A tag value acts as a descriptor within a tag key.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/email/tags#ResourceArn&TagKeys:
    delete:
      description: Remove one or more tags (keys and values) from a specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to remove one or more tags from.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The tags (tag keys) that you want to remove from the resource.\
          \ When you specify a tag key, the action removes both that key and its associated\
          \ tag value.</p> <p>To remove more than one tag from the resource, append\
          \ the <code>TagKeys</code> parameter and argument for each additional tag\
          \ to remove, separated by an ampersand. For example: <code>/v1/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;TagKeys=Key2</code>\
          \ </p>"
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateConfigurationSetResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    CustomRedirectDomain:
      description: The domain that you want to use for tracking open and click events.
      type: string
    TlsPolicy:
      description: "Specifies whether messages that use the configuration set are\
        \ required to use Transport Layer Security (TLS). If the value is <code>Require</code>,\
        \ messages are only delivered if a TLS connection can be established. If the\
        \ value is <code>Optional</code>, messages can be delivered in plain text\
        \ if a TLS connection can't be established."
      enum:
      - REQUIRE
      - OPTIONAL
      type: string
    PoolName:
      description: The name of a dedicated IP pool.
      type: string
    Enabled:
      type: boolean
    LastFreshStart:
      description: "The date and time (in Unix time) when the reputation metrics were\
        \ last given a fresh start. When your account is given a fresh start, your\
        \ reputation metrics are calculated starting from the date of the fresh start."
      format: date-time
      type: string
    Tag:
      description: "<p>An object that defines the tags that are associated with a\
        \ resource. A\_<i>tag</i>\_is a label that you optionally define and associate\
        \ with a resource in Amazon Pinpoint. Tags can help you categorize and manage\
        \ resources in different ways, such as by purpose, owner, environment, or\
        \ other criteria. A resource can have as many as 50 tags.</p> <p>Each tag\
        \ consists of a required\_<i>tag key</i>\_and an associated\_<i>tag value</i>,\
        \ both of which you define. A tag key is a general label that acts as a category\
        \ for a more specific tag value. A tag value acts as a descriptor within a\
        \ tag key. A tag key can contain as many as 128 characters. A tag value can\
        \ contain as many as 256 characters. The characters can be Unicode letters,\
        \ digits, white space, or one of the following symbols: _ . : / = + -. The\
        \ following additional restrictions apply to tags:</p> <ul> <li> <p>Tag keys\
        \ and values are case sensitive.</p> </li> <li> <p>For each associated resource,\
        \ each tag key must be unique and it can have only one value.</p> </li> <li>\
        \ <p>The\_<code>aws:</code>\_prefix is reserved for use by AWS; you can’t\
        \ use it in any tag keys or values that you define. In addition, you can't\
        \ edit or remove tag keys or values that use this prefix. Tags that use this\
        \ prefix don’t count against the limit of 50 tags per resource.</p> </li>\
        \ <li> <p>You can associate tags with public or shared resources, but the\
        \ tags are available only for your AWS account, not any other accounts that\
        \ share the resource. In addition, the tags are available only for resources\
        \ that are located in the specified AWS Region for your AWS account.</p> </li>\
        \ </ul>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that defines a tag. The maximum
              length of a tag key is 128 characters. The minimum length is 1 character.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The optional part of a key-value pair that defines a tag.\
              \ The maximum length of a tag value is 256 characters. The minimum length\
              \ is 0 characters. If you don’t want a resource to have a specific tag\
              \ value, don’t specify a value for this\_parameter. Amazon Pinpoint\
              \ will set the value to an empty string."
      required:
      - Key
      - Value
      type: object
    AlreadyExistsException: {}
    NotFoundException: {}
    TooManyRequestsException: {}
    LimitExceededException: {}
    BadRequestException: {}
    ConcurrentModificationException: {}
    CreateConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    EventTypes:
      items:
        $ref: '#/components/schemas/EventType'
      type: array
    KinesisFirehoseDestination:
      description: "An object that defines an Amazon Kinesis Data Firehose destination\
        \ for email events. You can use Amazon Kinesis Data Firehose to stream data\
        \ to other services, such as Amazon S3 and Amazon Redshift."
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the IAM role that Amazon
              Pinpoint uses when sending email events to the Amazon Kinesis Data Firehose
              stream.
        DeliveryStreamArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data
              Firehose stream that Amazon Pinpoint sends email events to.
      required:
      - DeliveryStreamArn
      - IamRoleArn
      type: object
    CloudWatchDestination:
      description: An object that defines an Amazon CloudWatch destination for email
        events. You can use Amazon CloudWatch to monitor and gain insights on your
        email sending metrics.
      properties:
        DimensionConfigurations:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDimensionConfigurations'
          - description: An array of objects that define the dimensions to use when
              you send email events to Amazon CloudWatch.
      required:
      - DimensionConfigurations
      type: object
    SnsDestination:
      description: An object that defines an Amazon SNS destination for email events.
        You can use Amazon SNS to send notification when certain email events occur.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The Amazon Resource Name (ARN) of the Amazon SNS topic that\
              \ you want to publish email events to. For more information about Amazon\
              \ SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\"\
              >Amazon SNS Developer Guide</a>."
      required:
      - TopicArn
      type: object
    PinpointDestination:
      description: An object that defines a Amazon Pinpoint destination for email
        events. You can use Amazon Pinpoint events to create attributes in Amazon
        Pinpoint projects. You can use these attributes to create segments for your
        campaigns.
      properties:
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Amazon Pinpoint project
              that you want to send email events to.
      type: object
    CreateDedicatedIpPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    CreateDeliverabilityTestReportResponse:
      description: Information about the predictive inbox placement test that you
        created.
      example:
        DeliverabilityTestStatus: ""
        ReportId: ""
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: A unique string that identifies the predictive inbox placement
              test.
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          - description: "The status of the predictive inbox placement test. If the\
              \ status is <code>IN_PROGRESS</code>, then the predictive inbox placement\
              \ test is currently running. Predictive inbox placement tests are usually\
              \ complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
              \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
              \ to view the results of the test."
      required:
      - DeliverabilityTestStatus
      - ReportId
      type: object
    Message:
      description: Represents the email message that you're sending. The <code>Message</code>
        object consists of a subject line and a message body.
      properties:
        Subject:
          $ref: '#/components/schemas/Message_Subject'
        Body:
          $ref: '#/components/schemas/Message_Body'
      required:
      - Body
      - Subject
      type: object
    RawMessage:
      description: The raw email message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/RawMessageData'
          - description: "<p>The raw email message. The message has to meet the following\
              \ criteria:</p> <ul> <li> <p>The message has to contain a header and\
              \ a body, separated by one blank line.</p> </li> <li> <p>All of the\
              \ required header fields must be present in the message.</p> </li> <li>\
              \ <p>Each part of a multipart MIME message must be formatted properly.</p>\
              \ </li> <li> <p>Attachments must be in a file format that Amazon Pinpoint\
              \ supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p>\
              \ </li> <li> <p>If any of the MIME parts in your message contain content\
              \ that is outside of the 7-bit ASCII character range, you should encode\
              \ that content to ensure that recipients' email clients render the message\
              \ properly.</p> </li> <li> <p>The length of any single line of text\
              \ in the message can't exceed 1,000 characters. This restriction is\
              \ defined in <a href=\"https://tools.ietf.org/html/rfc5321\">RFC 5321</a>.</p>\
              \ </li> </ul>"
      required:
      - Data
      type: object
    Template:
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          - description: The Amazon Resource Name (ARN) of the template.
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/TemplateData'
          - description: An object that defines the values to use for message variables
              in the template. This object is a set of key-value pairs. Each key defines
              a message variable in the template. The corresponding value defines
              the value to use for that variable.
      type: object
    AccountSuspendedException: {}
    SendingPausedException: {}
    MessageRejected: {}
    MailFromDomainNotVerifiedException: {}
    CreateEmailIdentityResponse:
      description: "<p>If the email identity is a domain, this object contains tokens\
        \ that you can use to create a set of CNAME records. To sucessfully verify\
        \ your domain, you have to add these records to the DNS configuration for\
        \ your domain.</p> <p>If the email identity is an email address, this object\
        \ is empty. </p>"
      example:
        IdentityType: ""
        VerifiedForSendingStatus: ""
        DkimAttributes:
          SigningEnabled: ""
          Status: ""
          Tokens: ""
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: The email identity type.
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether or not the identity is verified. In Amazon\
              \ Pinpoint, you can only send email from verified email addresses or\
              \ domains. For more information about verifying identities, see the\
              \ <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\"\
              >Amazon Pinpoint User Guide</a>."
        DkimAttributes:
          $ref: '#/components/schemas/CreateEmailIdentityResponse_DkimAttributes'
      type: object
    DeleteConfigurationSetResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteDedicatedIpPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteEmailIdentityResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    GetAccountResponse:
      description: A list of details about the email-sending capabilities of your
        Amazon Pinpoint account in the current AWS Region.
      example:
        SendQuota:
          SentLast24Hours: ""
          MaxSendRate: ""
          Max24HourSend: ""
        ProductionAccessEnabled: ""
        DedicatedIpAutoWarmupEnabled: ""
        SendingEnabled: ""
        EnforcementStatus: ""
      properties:
        SendQuota:
          $ref: '#/components/schemas/GetAccountResponse_SendQuota'
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Indicates whether or not email sending is enabled for your
              Amazon Pinpoint account in the current AWS Region.
        DedicatedIpAutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Indicates whether or not the automatic warm-up feature is
              enabled for dedicated IP addresses that are associated with your account.
        EnforcementStatus:
          allOf:
          - $ref: '#/components/schemas/GeneralEnforcementStatus'
          - description: "<p>The reputation status of your Amazon Pinpoint account.\
              \ The status can be one of the following:</p> <ul> <li> <p> <code>HEALTHY</code>\
              \ – There are no reputation-related issues that currently impact your\
              \ account.</p> </li> <li> <p> <code>PROBATION</code> – We've identified\
              \ some issues with your Amazon Pinpoint account. We're placing your\
              \ account under review while you work on correcting these issues.</p>\
              \ </li> <li> <p> <code>SHUTDOWN</code> – Your account's ability to send\
              \ email is currently paused because of an issue with the email sent\
              \ from your account. When you correct the issue, you can contact us\
              \ and request that your account's ability to send email is resumed.</p>\
              \ </li> </ul>"
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Indicates whether or not your account has production\
              \ access in the current AWS Region.</p> <p>If the value is <code>false</code>,\
              \ then your account is in the <i>sandbox</i>. When your account is in\
              \ the sandbox, you can only send email to verified identities. Additionally,\
              \ the maximum number of emails you can send in a 24-hour period (your\
              \ sending quota) is 200, and the maximum number of emails you can send\
              \ per second (your maximum sending rate) is 1.</p> <p>If the value is\
              \ <code>true</code>, then your account has production access. When your\
              \ account has production access, you can send email to any address.\
              \ The sending quota and maximum sending rate for your account vary based\
              \ on your specific use case.</p>"
      type: object
    GetBlacklistReportsResponse:
      description: An object that contains information about blacklist events.
      example:
        BlacklistReport: ""
      properties:
        BlacklistReport:
          allOf:
          - $ref: '#/components/schemas/BlacklistReport'
          - description: An object that contains information about a blacklist that
              one of your dedicated IP addresses appears on.
      required:
      - BlacklistReport
      type: object
    BlacklistItemName:
      description: An IP address that you want to obtain blacklist information for.
      type: string
    GetConfigurationSetResponse:
      description: Information about a configuration set.
      example:
        SendingOptions:
          SendingEnabled: ""
        TrackingOptions:
          CustomRedirectDomain: ""
        ConfigurationSetName: ""
        ReputationOptions:
          LastFreshStart: ""
          ReputationMetricsEnabled: ""
        DeliveryOptions:
          SendingPoolName: ""
          TlsPolicy: ""
        Tags: ""
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set.
        TrackingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_SendingOptions'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the configuration set.
      type: object
    GetConfigurationSetEventDestinationsResponse:
      description: Information about an event destination for a configuration set.
      example:
        EventDestinations: ""
      properties:
        EventDestinations:
          allOf:
          - $ref: '#/components/schemas/EventDestinations'
          - description: An array that includes all of the events destinations that
              have been configured for the configuration set.
      type: object
    GetDedicatedIpResponse:
      description: Information about a dedicated IP address.
      example:
        DedicatedIp:
          PoolName: ""
          WarmupStatus: ""
          Ip: ""
          WarmupPercentage: ""
      properties:
        DedicatedIp:
          $ref: '#/components/schemas/GetDedicatedIpResponse_DedicatedIp'
      type: object
    GetDedicatedIpsResponse:
      description: Information about the dedicated IP addresses that are associated
        with your Amazon Pinpoint account.
      example:
        DedicatedIps: ""
        NextToken: ""
      properties:
        DedicatedIps:
          allOf:
          - $ref: '#/components/schemas/DedicatedIpList'
          - description: A list of dedicated IP addresses that are reserved for use
              by your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional dedicated\
              \ IP addresses to list. To view additional addresses, issue another\
              \ request to <code>GetDedicatedIps</code>, passing this token in the\
              \ <code>NextToken</code> parameter."
      type: object
    GetDeliverabilityDashboardOptionsResponse:
      description: An object that shows the status of the Deliverability dashboard
        for your Amazon Pinpoint account.
      example:
        SubscriptionExpiryDate: ""
        AccountStatus: ""
        ActiveSubscribedDomains: ""
        PendingExpirationSubscribedDomains: ""
        DashboardEnabled: ""
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether the Deliverability dashboard is enabled\
              \ for your Amazon Pinpoint account. If this value is <code>true</code>,\
              \ the dashboard is enabled."
        SubscriptionExpiryDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date, in Unix time format, when your current subscription\
              \ to the Deliverability dashboard is scheduled to expire, if your subscription\
              \ is scheduled to expire at the end of the current calendar month. This\
              \ value is null if you have an active subscription that isn’t due to\
              \ expire at the end of the month."
        AccountStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityDashboardAccountStatus'
          - description: "The current status of your Deliverability dashboard subscription.\
              \ If this value is <code>PENDING_EXPIRATION</code>, your subscription\
              \ is scheduled to expire at the end of the current calendar month."
        ActiveSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and currently has an active Deliverability dashboard\
              \ subscription that isn’t scheduled to expire at the end of the current\
              \ calendar month."
        PendingExpirationSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and currently has an active Deliverability dashboard\
              \ subscription that's scheduled to expire at the end of the current\
              \ calendar month."
      required:
      - DashboardEnabled
      type: object
    GetDeliverabilityTestReportResponse:
      description: The results of the predictive inbox placement test.
      example:
        Message: ""
        IspPlacements: ""
        DeliverabilityTestReport:
          FromEmailAddress: ""
          DeliverabilityTestStatus: ""
          ReportName: ""
          ReportId: ""
          CreateDate: ""
          Subject: ""
        OverallPlacement:
          InboxPercentage: ""
          SpfPercentage: ""
          MissingPercentage: ""
          SpamPercentage: ""
          DkimPercentage: ""
        Tags: ""
      properties:
        DeliverabilityTestReport:
          $ref: '#/components/schemas/GetDeliverabilityTestReportResponse_DeliverabilityTestReport'
        OverallPlacement:
          $ref: '#/components/schemas/GetDeliverabilityTestReportResponse_OverallPlacement'
        IspPlacements:
          allOf:
          - $ref: '#/components/schemas/IspPlacements'
          - description: "An object that describes how the test email was handled\
              \ by several email providers, including Gmail, Hotmail, Yahoo, AOL,\
              \ and others."
        Message:
          allOf:
          - $ref: '#/components/schemas/MessageContent'
          - description: An object that contains the message that you sent when you
              performed this predictive inbox placement test.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the predictive inbox placement test.
      required:
      - DeliverabilityTestReport
      - IspPlacements
      - OverallPlacement
      type: object
    GetDomainDeliverabilityCampaignResponse:
      description: An object that contains all the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      example:
        DomainDeliverabilityCampaign:
          FirstSeenDateTime: ""
          InboxCount: ""
          ImageUrl: ""
          Subject: ""
          Esps: ""
          SpamCount: ""
          FromAddress: ""
          CampaignId: ""
          ReadRate: ""
          DeleteRate: ""
          LastSeenDateTime: ""
          SendingIps: ""
          ReadDeleteRate: ""
          ProjectedVolume: ""
      properties:
        DomainDeliverabilityCampaign:
          $ref: '#/components/schemas/GetDomainDeliverabilityCampaignResponse_DomainDeliverabilityCampaign'
      required:
      - DomainDeliverabilityCampaign
      type: object
    GetDomainStatisticsReportResponse:
      description: An object that includes statistics that are related to the domain
        that you specified.
      example:
        OverallVolume:
          DomainIspPlacements: ""
          VolumeStatistics:
            InboxRawCount: ""
            ProjectedInbox: ""
            ProjectedSpam: ""
            SpamRawCount: ""
          ReadRatePercent: ""
        DailyVolumes: ""
      properties:
        OverallVolume:
          $ref: '#/components/schemas/GetDomainStatisticsReportResponse_OverallVolume'
        DailyVolumes:
          allOf:
          - $ref: '#/components/schemas/DailyVolumes'
          - description: "An object that contains deliverability metrics for the domain\
              \ that you specified. This object contains data for each day, starting\
              \ on the <code>StartDate</code> and ending on the <code>EndDate</code>."
      required:
      - DailyVolumes
      - OverallVolume
      type: object
    GetEmailIdentityResponse:
      description: Details about an email identity.
      example:
        IdentityType: ""
        VerifiedForSendingStatus: ""
        FeedbackForwardingStatus: ""
        DkimAttributes:
          SigningEnabled: ""
          Status: ""
          Tokens: ""
        Tags: ""
        MailFromAttributes:
          MailFromDomain: ""
          MailFromDomainStatus: ""
          BehaviorOnMxFailure: ""
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: The email identity type.
        FeedbackForwardingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>The feedback forwarding configuration for the identity.</p>\
              \ <p>If the value is <code>true</code>, Amazon Pinpoint sends you email\
              \ notifications when bounce or complaint events occur. Amazon Pinpoint\
              \ sends this notification to the address that you specified in the Return-Path\
              \ header of the original email.</p> <p>When you set this value to <code>false</code>,\
              \ Amazon Pinpoint sends notifications through other mechanisms, such\
              \ as by notifying an Amazon SNS topic or another event destination.\
              \ You're required to have a method of tracking bounces and complaints.\
              \ If you haven't set up another mechanism for receiving bounce or complaint\
              \ notifications, Amazon Pinpoint sends an email notification when these\
              \ events occur (even if this setting is disabled).</p>"
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether or not the identity is verified. In Amazon\
              \ Pinpoint, you can only send email from verified email addresses or\
              \ domains. For more information about verifying identities, see the\
              \ <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\"\
              >Amazon Pinpoint User Guide</a>."
        DkimAttributes:
          $ref: '#/components/schemas/CreateEmailIdentityResponse_DkimAttributes'
        MailFromAttributes:
          $ref: '#/components/schemas/GetEmailIdentityResponse_MailFromAttributes'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the email identity.
      type: object
    ListConfigurationSetsResponse:
      description: A list of configuration sets in your Amazon Pinpoint account in
        the current AWS Region.
      example:
        NextToken: ""
        ConfigurationSets: ""
      properties:
        ConfigurationSets:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetNameList'
          - description: An array that contains all of the configuration sets in your
              Amazon Pinpoint account in the current AWS Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional configuration\
              \ sets to list. To view additional configuration sets, issue another\
              \ request to <code>ListConfigurationSets</code>, and pass this token\
              \ in the <code>NextToken</code> parameter."
      type: object
    ListDedicatedIpPoolsResponse:
      description: A list of dedicated IP pools.
      example:
        NextToken: ""
        DedicatedIpPools: ""
      properties:
        DedicatedIpPools:
          allOf:
          - $ref: '#/components/schemas/ListOfDedicatedIpPools'
          - description: A list of all of the dedicated IP pools that are associated
              with your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional IP pools\
              \ to list. To view additional IP pools, issue another request to <code>ListDedicatedIpPools</code>,\
              \ passing this token in the <code>NextToken</code> parameter."
      type: object
    ListDeliverabilityTestReportsResponse:
      description: "A list of the predictive inbox placement test reports that are\
        \ available for your account, regardless of whether or not those tests are\
        \ complete."
      example:
        NextToken: ""
        DeliverabilityTestReports: ""
      properties:
        DeliverabilityTestReports:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReports'
          - description: An object that contains a lists of predictive inbox placement
              tests that you've performed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional predictive\
              \ inbox placement tests to list. To view additional predictive inbox\
              \ placement tests, issue another request to <code>ListDeliverabilityTestReports</code>,\
              \ and pass this token in the <code>NextToken</code> parameter."
      required:
      - DeliverabilityTestReports
      type: object
    ListDomainDeliverabilityCampaignsResponse:
      description: An array of objects that provide deliverability data for all the
        campaigns that used a specific domain to send email during a specified time
        range. This data is available for a domain only if you enabled the Deliverability
        dashboard (<code>PutDeliverabilityDashboardOption</code> operation) for the
        domain.
      example:
        NextToken: ""
        DomainDeliverabilityCampaigns: ""
      properties:
        DomainDeliverabilityCampaigns:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaignList'
          - description: "An array of responses, one for each campaign that used the\
              \ domain to send email during the specified time range."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code>
              operation. This token indicates the position of the campaign in the
              list of campaigns.
      required:
      - DomainDeliverabilityCampaigns
      type: object
    ListEmailIdentitiesResponse:
      description: "A list of all of the identities that you've attempted to verify\
        \ for use with Amazon Pinpoint, regardless of whether or not those identities\
        \ were successfully verified."
      example:
        NextToken: ""
        EmailIdentities: ""
      properties:
        EmailIdentities:
          allOf:
          - $ref: '#/components/schemas/IdentityInfoList'
          - description: An array that includes all of the identities associated with
              your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional configuration\
              \ sets to list. To view additional configuration sets, issue another\
              \ request to <code>ListEmailIdentities</code>, and pass this token in\
              \ the <code>NextToken</code> parameter."
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array that lists all the tags that are associated with
              the resource. Each tag consists of a required tag key (<code>Key</code>)
              and an associated tag value (<code>Value</code>)
      required:
      - Tags
      type: object
    PutAccountDedicatedIpWarmupAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutAccountSendingAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetDeliveryOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetReputationOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetSendingOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetTrackingOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDedicatedIpInPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDedicatedIpWarmupAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDeliverabilityDashboardOptionResponse:
      description: A response that indicates whether the Deliverability dashboard
        is enabled for your Amazon Pinpoint account.
      properties: {}
      type: object
    DomainDeliverabilityTrackingOption:
      description: "An object that contains information about the Deliverability dashboard\
        \ subscription for a verified domain that you use to send email and currently\
        \ has an active Deliverability dashboard subscription. If a Deliverability\
        \ dashboard subscription is active for a domain, you gain access to reputation,\
        \ inbox placement, and other metrics for the domain."
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: A verified domain that’s associated with your AWS account
              and currently has an active Deliverability dashboard subscription.
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date, in Unix time format, when you enabled the Deliverability\
              \ dashboard for the domain."
        InboxPlacementTrackingOption:
          $ref: '#/components/schemas/DomainDeliverabilityTrackingOption_InboxPlacementTrackingOption'
      type: object
    PutEmailIdentityDkimAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutEmailIdentityFeedbackAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutEmailIdentityMailFromAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    SendEmailResponse:
      description: A unique message ID that you receive when Amazon Pinpoint accepts
        an email for sending.
      example:
        MessageId: ""
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          - description: "<p>A unique identifier for the message that is generated\
              \ when Amazon Pinpoint accepts the message.</p> <note> <p>It is possible\
              \ for Amazon Pinpoint to accept a message without sending it. This can\
              \ happen when the message you're trying to send has an attachment doesn't\
              \ pass a virus check, or when you send a templated email that contains\
              \ invalid personalization content, for example.</p> </note>"
      type: object
    EmailAddressList:
      items:
        $ref: '#/components/schemas/EmailAddress'
      type: array
    EmailAddress:
      type: string
    MessageTag:
      description: 'Contains the name and value of a tag that you apply to an email.
        You can use message tags when you publish email sending events. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MessageTagName'
          - description: "<p>The name of the message tag. The message tag name has\
              \ to meet the following criteria:</p> <ul> <li> <p>It can only contain\
              \ ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes\
              \ (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
              \ </li> </ul>"
        Value:
          allOf:
          - $ref: '#/components/schemas/MessageTagValue'
          - description: "<p>The value of the message tag. The message tag value has\
              \ to meet the following criteria:</p> <ul> <li> <p>It can only contain\
              \ ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes\
              \ (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
              \ </li> </ul>"
      required:
      - Name
      - Value
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      type: string
    UpdateConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    AmazonResourceName:
      type: string
    BehaviorOnMxFailure:
      description: "<p>The action that you want Amazon Pinpoint to take if it can't\
        \ read the required MX record for a custom MAIL FROM domain. When you set\
        \ this value to <code>UseDefaultValue</code>, Amazon Pinpoint uses <i>amazonses.com</i>\
        \ as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>,\
        \ Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code> error,\
        \ and doesn't attempt to deliver the email.</p> <p>These behaviors are taken\
        \ when the custom MAIL FROM domain configuration is in the <code>Pending</code>,\
        \ <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>"
      enum:
      - USE_DEFAULT_VALUE
      - REJECT_MESSAGE
      type: string
    BlacklistEntry:
      description: An object that contains information about a blacklisting event
        that impacts one of the dedicated IP addresses that is associated with your
        account.
      properties:
        RblName:
          allOf:
          - $ref: '#/components/schemas/RblName'
          - description: The name of the blacklist that the IP address appears on.
        ListingTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time when the blacklisting event occurred, shown in\
              \ Unix time format."
        Description:
          allOf:
          - $ref: '#/components/schemas/BlacklistingDescription'
          - description: "Additional information about the blacklisting event, as\
              \ provided by the blacklist maintainer."
      type: object
    BlacklistEntries:
      items:
        $ref: '#/components/schemas/BlacklistEntry'
      type: array
    RblName:
      description: The name of a blacklist that an IP address was found on.
      type: string
    Timestamp:
      format: date-time
      type: string
    BlacklistingDescription:
      description: A description of the blacklisting event.
      type: string
    BlacklistItemNames:
      items:
        $ref: '#/components/schemas/BlacklistItemName'
      type: array
    BlacklistReport:
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
      type: object
    Content:
      description: "An object that represents the content of the email, and optionally\
        \ a character set specification."
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          - description: The content of the message itself.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          - description: "The character set for the content. Because of the constraints\
              \ of the SMTP protocol, Amazon Pinpoint uses 7-bit ASCII by default.\
              \ If the text includes characters outside of the ASCII range, you have\
              \ to specify a character set. For example, you could specify <code>UTF-8</code>,\
              \ <code>ISO-8859-1</code>, or <code>Shift_JIS</code>."
      required:
      - Data
      type: object
    Body:
      description: Represents the body of the email message.
      properties:
        Text:
          $ref: '#/components/schemas/Body_Text'
        Html:
          $ref: '#/components/schemas/Body_Html'
      type: object
    CampaignId:
      type: string
    Charset:
      type: string
    CloudWatchDimensionConfigurations:
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
      type: array
    DimensionName:
      description: "<p>The name of an Amazon CloudWatch dimension associated with\
        \ an email sending metric. The name has to meet the following criteria:</p>\
        \ <ul> <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers (0-9),\
        \ underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more\
        \ than 256 characters.</p> </li> </ul>"
      type: string
    DimensionValueSource:
      description: "The location where Amazon Pinpoint finds the value of a dimension\
        \ to publish to Amazon CloudWatch. If you want Amazon Pinpoint to use the\
        \ message tags that you specify using an X-SES-MESSAGE-TAGS header or a parameter\
        \ to the SendEmail/SendRawEmail API, choose <code>messageTag</code>. If you\
        \ want Amazon Pinpoint to use your own email headers, choose <code>emailHeader</code>.\
        \ If you want Amazon Pinpoint to use link tags, choose <code>linkTags</code>."
      enum:
      - MESSAGE_TAG
      - EMAIL_HEADER
      - LINK_TAG
      type: string
    DefaultDimensionValue:
      description: "<p>The default value of the dimension that is published to Amazon\
        \ CloudWatch if you don't provide the value of the dimension when you send\
        \ an email. This value has to meet the following criteria:</p> <ul> <li> <p>It\
        \ can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),\
        \ or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
        \ </li> </ul>"
      type: string
    CloudWatchDimensionConfiguration:
      description: An object that defines the dimension configuration to use when
        you send Amazon Pinpoint email events to Amazon CloudWatch.
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          - description: "<p>The name of an Amazon CloudWatch dimension associated\
              \ with an email sending metric. The name has to meet the following criteria:</p>\
              \ <ul> <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers\
              \ (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain\
              \ no more than 256 characters.</p> </li> </ul>"
        DimensionValueSource:
          allOf:
          - $ref: '#/components/schemas/DimensionValueSource'
          - description: "The location where Amazon Pinpoint finds the value of a\
              \ dimension to publish to Amazon CloudWatch. If you want Amazon Pinpoint\
              \ to use the message tags that you specify using an X-SES-MESSAGE-TAGS\
              \ header or a parameter to the SendEmail/SendRawEmail API, choose <code>messageTag</code>.\
              \ If you want Amazon Pinpoint to use your own email headers, choose\
              \ <code>emailHeader</code>. If you want Amazon Pinpoint to use link\
              \ tags, choose <code>linkTags</code>."
        DefaultDimensionValue:
          allOf:
          - $ref: '#/components/schemas/DefaultDimensionValue'
          - description: "<p>The default value of the dimension that is published\
              \ to Amazon CloudWatch if you don't provide the value of the dimension\
              \ when you send an email. This value has to meet the following criteria:</p>\
              \ <ul> <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers\
              \ (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain\
              \ no more than 256 characters.</p> </li> </ul>"
      required:
      - DefaultDimensionValue
      - DimensionName
      - DimensionValueSource
      type: object
    ConfigurationSetName:
      description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
        \ <i>configuration sets</i> are groups of rules that you can apply to the\
        \ emails you send. You apply a configuration set to an email by including\
        \ a reference to the configuration set in the headers of the email. When you\
        \ apply a configuration set to an email, all of the rules in that configuration\
        \ set are applied to the email.</p>"
      type: string
    ConfigurationSetNameList:
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
      type: array
    MessageData:
      type: string
    EventDestinationName:
      description: "<p>The name of an event destination.</p> <p>In Amazon Pinpoint,\
        \ <i>events</i> include message sends, deliveries, opens, clicks, bounces,\
        \ and complaints. <i>Event destinations</i> are places that you can send information\
        \ about these events to. For example, you can send event data to Amazon SNS\
        \ to receive notifications when you receive bounces or complaints, or you\
        \ can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term\
        \ storage.</p>"
      type: string
    EventDestinationDefinition:
      description: "An object that defines the event destination. Specifically, it\
        \ defines which services receive events from emails sent using the configuration\
        \ set that the event destination is associated with. Also defines the types\
        \ of events that are sent to the event destination."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: An array that specifies which events Amazon Pinpoint should
              send to the destinations in this <code>EventDestinationDefinition</code>.
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      type: object
    CreateConfigurationSetEventDestinationRequest:
      description: A request to add an event destination to a configuration set.
      example:
        EventDestinationName: ""
        EventDestination:
          SnsDestination:
            TopicArn: ""
          CloudWatchDestination:
            DimensionConfigurations: ""
          Enabled: ""
          MatchingEventTypes: ""
          PinpointDestination:
            ApplicationArn: ""
          KinesisFirehoseDestination:
            DeliveryStreamArn: ""
            IamRoleArn: ""
      properties:
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          - description: A name that identifies the event destination within the configuration
              set.
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestinationRequest_EventDestination'
      required:
      - EventDestination
      - EventDestinationName
      title: CreateConfigurationSetEventDestinationRequest
      type: object
    TrackingOptions:
      description: "<p>An object that defines the tracking options for a configuration\
        \ set. When you use Amazon Pinpoint to send an email, it contains an invisible\
        \ image that's used to track when recipients open your email. If your email\
        \ contains links, those links are changed slightly in order to track when\
        \ recipients click them.</p> <p>These images and links include references\
        \ to a domain operated by AWS. You can optionally configure Amazon Pinpoint\
        \ to use a domain that you operate for these images and links.</p>"
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain that you want to use for tracking open and click
              events.
      required:
      - CustomRedirectDomain
      type: object
    DeliveryOptions:
      description: Used to associate a configuration set with a dedicated IP pool.
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool that you want to associate
              with the configuration set.
      type: object
    ReputationOptions:
      description: 'Enable or disable collection of reputation metrics for emails
        that you send using this configuration set in the current AWS Region. '
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          - description: "The date and time (in Unix time) when the reputation metrics\
              \ were last given a fresh start. When your account is given a fresh\
              \ start, your reputation metrics are calculated starting from the date\
              \ of the fresh start."
      type: object
    SendingOptions:
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current AWS Region.
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    CreateConfigurationSetRequest:
      description: A request to create a configuration set.
      example:
        SendingOptions:
          SendingEnabled: ""
        TrackingOptions:
          CustomRedirectDomain: ""
        ConfigurationSetName: ""
        ReputationOptions:
          LastFreshStart: ""
          ReputationMetricsEnabled: ""
        DeliveryOptions:
          SendingPoolName: ""
          TlsPolicy: ""
        Tags: ""
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set.
        TrackingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_SendingOptions'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that you want to associate with the configuration set.
      required:
      - ConfigurationSetName
      title: CreateConfigurationSetRequest
      type: object
    CreateDedicatedIpPoolRequest:
      description: A request to create a new dedicated IP pool.
      example:
        PoolName: ""
        Tags: ""
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An object that defines the tags (keys and values) that you
              want to associate with the pool.
      required:
      - PoolName
      title: CreateDedicatedIpPoolRequest
      type: object
    ReportName:
      description: A name that helps you identify a report generated by the Deliverability
        dashboard.
      type: string
    EmailContent:
      description: "An object that defines the entire content of the email, including\
        \ the message headers and the body content. You can create a simple email\
        \ message, in which you specify the subject and the text and HTML versions\
        \ of the message body. You can also create raw messages, in which you specify\
        \ a complete MIME-formatted message. Raw messages can include attachments\
        \ and custom headers."
      properties:
        Simple:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Simple'
        Raw:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Raw'
        Template:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Template'
      type: object
    CreateDeliverabilityTestReportRequest:
      description: "A request to perform a predictive inbox placement test. Predictive\
        \ inbox placement tests can help you predict how your messages will be handled\
        \ by various email providers around the world. When you perform a predictive\
        \ inbox placement test, you provide a sample message that contains the content\
        \ that you plan to send to your customers. Amazon Pinpoint then sends that\
        \ message to special email addresses spread across several major email providers.\
        \ After about 24 hours, the test is complete, and you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results of the test."
      example:
        FromEmailAddress: ""
        ReportName: ""
        Content:
          Raw:
            Data: ""
          Simple:
            Body:
              Html:
                Charset: ""
                Data: ""
              Text:
                Charset: ""
                Data: ""
            Subject:
              Charset: ""
              Data: ""
          Template:
            TemplateArn: ""
            TemplateData: ""
        Tags: ""
      properties:
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          - description: A unique name that helps you to identify the predictive inbox
              placement test when you retrieve the results.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the predictive inbox placement test
              email was sent from.
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReportRequest_Content'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that you want to associate with the predictive inbox placement test.
      required:
      - Content
      - FromEmailAddress
      title: CreateDeliverabilityTestReportRequest
      type: object
    ReportId:
      description: A unique string that identifies a Deliverability dashboard report.
      type: string
    DeliverabilityTestStatus:
      description: "The status of a predictive inbox placement test. If the status\
        \ is <code>IN_PROGRESS</code>, then the predictive inbox placement test is\
        \ currently running. Predictive inbox placement tests are usually complete\
        \ within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
        \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results of the test."
      enum:
      - IN_PROGRESS
      - COMPLETED
      type: string
    Identity:
      type: string
    CreateEmailIdentityRequest:
      description: A request to begin the verification process for an email identity
        (an email address or domain).
      example:
        EmailIdentity: ""
        Tags: ""
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The email address or domain that you want to verify.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that you want to associate with the email identity.
      required:
      - EmailIdentity
      title: CreateEmailIdentityRequest
      type: object
    IdentityType:
      description: <p>The email identity type. The identity type can be one of the
        following:</p> <ul> <li> <p> <code>EMAIL_ADDRESS</code> – The identity is
        an email address.</p> </li> <li> <p> <code>DOMAIN</code> – The identity is
        a domain.</p> </li> </ul>
      enum:
      - EMAIL_ADDRESS
      - DOMAIN
      - MANAGED_DOMAIN
      type: string
    DkimAttributes:
      description: An object that contains information about the DKIM configuration
        for an email identity.
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If the value is <code>true</code>, then the messages that\
              \ Amazon Pinpoint sends from the identity are DKIM-signed. If the value\
              \ is <code>false</code>, then the messages that Amazon Pinpoint sends\
              \ from the identity aren't DKIM-signed."
        Status:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          - description: "<p>Describes whether or not Amazon Pinpoint has successfully\
              \ located the DKIM records in the DNS records for the domain. The status\
              \ can be one of the following:</p> <ul> <li> <p> <code>PENDING</code>\
              \ – Amazon Pinpoint hasn't yet located the DKIM records in the DNS configuration\
              \ for the domain, but will continue to attempt to locate them.</p> </li>\
              \ <li> <p> <code>SUCCESS</code> – Amazon Pinpoint located the DKIM records\
              \ in the DNS configuration for the domain and determined that they're\
              \ correct. Amazon Pinpoint can now send DKIM-signed email from the identity.</p>\
              \ </li> <li> <p> <code>FAILED</code> – Amazon Pinpoint was unable to\
              \ locate the DKIM records in the DNS settings for the domain, and won't\
              \ continue to search for them.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code>\
              \ – A temporary issue occurred, which prevented Amazon Pinpoint from\
              \ determining the DKIM status for the domain.</p> </li> <li> <p> <code>NOT_STARTED</code>\
              \ – Amazon Pinpoint hasn't yet started searching for the DKIM records\
              \ in the DKIM records for the domain.</p> </li> </ul>"
        Tokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          - description: "A set of unique strings that you use to create a set of\
              \ CNAME records that you add to the DNS configuration for your domain.\
              \ When Amazon Pinpoint detects these records in the DNS configuration\
              \ for your domain, the DKIM authentication process is complete. Amazon\
              \ Pinpoint usually detects these records within about 72 hours of adding\
              \ them to the DNS configuration for your domain."
      type: object
    VolumeStatistics:
      description: An object that contains information about the amount of email that
        was delivered to recipients.
      properties:
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of emails that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of emails that arrived in recipients' spam
              or junk mail folders.
        ProjectedInbox:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: An estimate of the percentage of emails sent from the current
              domain that will arrive in recipients' inboxes.
        ProjectedSpam:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: An estimate of the percentage of emails sent from the current
              domain that will arrive in recipients' spam or junk mail folders.
      type: object
    DomainIspPlacements:
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
      type: array
    DailyVolume:
      description: An object that contains information about the volume of email sent
        on each day of the analysis period.
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date that the DailyVolume metrics apply to, in Unix\
              \ time."
        VolumeStatistics:
          $ref: '#/components/schemas/DailyVolume_VolumeStatistics'
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          - description: "An object that contains inbox placement metrics for a specified\
              \ day in the analysis period, broken out by the recipient's email provider."
      type: object
    DailyVolumes:
      items:
        $ref: '#/components/schemas/DailyVolume'
      type: array
    Ip:
      description: A dedicated IP address that is associated with your Amazon Pinpoint
        account.
      type: string
    WarmupStatus:
      description: The warmup status of a dedicated IP.
      enum:
      - IN_PROGRESS
      - DONE
      type: string
    Percentage100Wrapper:
      type: integer
    DedicatedIp:
      description: <p>Contains information about a dedicated IP address that is associated
        with your Amazon Pinpoint account.</p> <p/>
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: An IP address that is reserved for use by your Amazon Pinpoint
              account.
        WarmupStatus:
          allOf:
          - $ref: '#/components/schemas/WarmupStatus'
          - description: "<p>The warm-up status of a dedicated IP address. The status\
              \ can have one of the following values:</p> <ul> <li> <p> <code>IN_PROGRESS</code>\
              \ – The IP address isn't ready to use because the dedicated IP warm-up\
              \ process is ongoing.</p> </li> <li> <p> <code>DONE</code> – The dedicated\
              \ IP warm-up process is complete, and the IP address is ready to use.</p>\
              \ </li> </ul>"
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          - description: "Indicates how complete the dedicated IP warm-up process\
              \ is. When this value equals 1, the address has completed the warm-up\
              \ process and is ready for use."
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool that the IP address is
              associated with.
      required:
      - Ip
      - WarmupPercentage
      - WarmupStatus
      type: object
    DedicatedIpList:
      description: A list of dedicated IP addresses that are associated with your
        Amazon Pinpoint account.
      items:
        $ref: '#/components/schemas/DedicatedIp'
      type: array
    DeleteConfigurationSetEventDestinationRequest:
      description: A request to delete an event destination from a configuration set.
      properties: {}
      title: DeleteConfigurationSetEventDestinationRequest
      type: object
    DeleteConfigurationSetRequest:
      description: A request to delete a configuration set.
      properties: {}
      title: DeleteConfigurationSetRequest
      type: object
    DeleteDedicatedIpPoolRequest:
      description: A request to delete a dedicated IP pool.
      properties: {}
      title: DeleteDedicatedIpPoolRequest
      type: object
    DeleteEmailIdentityRequest:
      description: "A request to delete an existing email identity. When you delete\
        \ an identity, you lose the ability to use Amazon Pinpoint to send email from\
        \ that identity. You can restore your ability to send email by completing\
        \ the verification process for the identity again."
      properties: {}
      title: DeleteEmailIdentityRequest
      type: object
    DeliverabilityDashboardAccountStatus:
      description: "The current status of your Deliverability dashboard subscription.\
        \ If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled\
        \ to expire at the end of the current calendar month."
      enum:
      - ACTIVE
      - PENDING_EXPIRATION
      - DISABLED
      type: string
    DeliverabilityTestSubject:
      description: The subject line for an email that you submitted in a predictive
        inbox placement test.
      type: string
    DeliverabilityTestReport:
      description: An object that contains metadata related to a predictive inbox
        placement test.
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: A unique string that identifies the predictive inbox placement
              test.
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          - description: A name that helps you identify a predictive inbox placement
              test report.
        Subject:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestSubject'
          - description: The subject line for an email that you submitted in a predictive
              inbox placement test.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The sender address that you specified for the predictive
              inbox placement test.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the predictive inbox placement test\
              \ was created, in Unix time format."
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          - description: "The status of the predictive inbox placement test. If the\
              \ status is <code>IN_PROGRESS</code>, then the predictive inbox placement\
              \ test is currently running. Predictive inbox placement tests are usually\
              \ complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
              \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
              \ to view the results of the test."
      type: object
    DeliverabilityTestReports:
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
      type: array
    Destination:
      description: An object that describes the recipients for an email.
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "To" recipients
              for the email.
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "CC" (carbon
              copy) recipients for the email.
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "BCC" (blind
              carbon copy) recipients for the email.
      type: object
    DkimStatus:
      description: "<p>The DKIM authentication status of the identity. The status\
        \ can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The\
        \ DKIM verification process was initiated, and Amazon Pinpoint is still waiting\
        \ for the required CNAME records to appear in the DNS configuration for the\
        \ domain.</p> </li> <li> <p> <code>SUCCESS</code> – The DKIM authentication\
        \ process completed successfully.</p> </li> <li> <p> <code>FAILED</code> –\
        \ The DKIM authentication process failed. This can happen when Amazon Pinpoint\
        \ fails to find the required CNAME records in the DNS configuration of the\
        \ domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary\
        \ issue is preventing Amazon Pinpoint from determining the DKIM authentication\
        \ status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The\
        \ DKIM verification process hasn't been initiated for the domain.</p> </li>\
        \ </ul>"
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      type: string
    DnsTokenList:
      items:
        $ref: '#/components/schemas/DnsToken'
      type: array
    DnsToken:
      type: string
    Domain:
      type: string
    ImageUrl:
      type: string
    Subject:
      type: string
    IpList:
      items:
        $ref: '#/components/schemas/Ip'
      type: array
    Volume:
      description: An object that contains information about inbox placement volume.
      type: integer
    Percentage:
      description: An object that contains information about inbox placement percentages.
      format: double
      type: number
    Esps:
      items:
        $ref: '#/components/schemas/Esp'
      type: array
    DomainDeliverabilityCampaign:
      description: An object that contains the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          - description: The unique identifier for the campaign. Amazon Pinpoint automatically
              generates and assigns this identifier to a campaign. This value is not
              the same as the campaign identifier that Amazon Pinpoint assigns to
              campaigns that you create and manage by using the Amazon Pinpoint API
              or the Amazon Pinpoint console.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/ImageUrl'
          - description: The URL of an image that contains a snapshot of the email
              message that was sent.
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          - description: "The subject line, or title, of the email message."
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The verified email address that the email message was sent
              from.
        SendingIps:
          allOf:
          - $ref: '#/components/schemas/IpList'
          - description: The IP addresses that were used to send the email message.
        FirstSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The first time, in Unix time format, when the email message\
              \ was delivered to any recipient's inbox. This value can help you determine\
              \ how long it took for a campaign to deliver an email message."
        LastSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The last time, in Unix time format, when the email message\
              \ was delivered to any recipient's inbox. This value can help you determine\
              \ how long it took for a campaign to deliver an email message."
        InboxCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The number of email messages that were delivered to recipients’
              inboxes.
        SpamCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The number of email messages that were delivered to recipients'
              spam or junk mail folders.
        ReadRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were opened by recipients.\
              \ Due to technical limitations, this value only includes recipients\
              \ who opened the message by using an email client that supports images."
        DeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were deleted by recipients,\
              \ without being opened first. Due to technical limitations, this value\
              \ only includes recipients who opened the message by using an email\
              \ client that supports images."
        ReadDeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were opened and then\
              \ deleted by recipients. Due to technical limitations, this value only\
              \ includes recipients who opened the message by using an email client\
              \ that supports images."
        ProjectedVolume:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The projected number of recipients that the email message
              was sent to.
        Esps:
          allOf:
          - $ref: '#/components/schemas/Esps'
          - description: The major email providers who handled the email message.
      type: object
    DomainDeliverabilityCampaignList:
      description: <p/>
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      type: array
    InboxPlacementTrackingOption:
      description: An object that contains information about the inbox placement data
        settings for a verified domain that’s associated with your AWS account. This
        data is available only if you enabled the Deliverability dashboard for the
        domain (<code>PutDeliverabilityDashboardOption</code> operation).
      properties:
        Global:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Specifies whether inbox placement data is being tracked for
              the domain.
        TrackedIsps:
          allOf:
          - $ref: '#/components/schemas/IspNameList'
          - description: "An array of strings, one for each major email provider that\
              \ the inbox placement data applies to."
      type: object
    DomainDeliverabilityTrackingOptions:
      description: "An object that contains information about the Deliverability dashboard\
        \ subscription for a verified domain that you use to send email and currently\
        \ has an active Deliverability dashboard subscription. If a Deliverability\
        \ dashboard subscription is active for a domain, you gain access to reputation,\
        \ inbox placement, and other metrics for the domain."
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
      type: array
    IspName:
      description: The name of an email provider.
      type: string
    DomainIspPlacement:
      description: An object that contains inbox placement data for email sent from
        one of your email domains to a specific email provider.
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          - description: The name of the email provider that the inbox placement data
              applies to.
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' spam
              or junk mail folders.
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' inboxes.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' spam
              or junk mail folders.
      type: object
    Esp:
      type: string
    EventDestination:
      description: "In Amazon Pinpoint, <i>events</i> include message sends, deliveries,\
        \ opens, clicks, bounces, and complaints. <i>Event destinations</i> are places\
        \ that you can send information about these events to. For example, you can\
        \ send event data to Amazon SNS to receive notifications when you receive\
        \ bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream\
        \ data to Amazon S3 for long-term storage."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          - description: A name that identifies the event destination.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: The types of events that Amazon Pinpoint sends to the specified
              event destinations.
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      required:
      - MatchingEventTypes
      - Name
      type: object
    EventDestinations:
      items:
        $ref: '#/components/schemas/EventDestination'
      type: array
    EventType:
      description: "An email sending event type. For example, email sends, opens,\
        \ and bounces are all email events."
      enum:
      - SEND
      - REJECT
      - BOUNCE
      - COMPLAINT
      - DELIVERY
      - OPEN
      - CLICK
      - RENDERING_FAILURE
      type: string
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      description: A request to obtain information about the email-sending capabilities
        of your Amazon Pinpoint account.
      properties: {}
      title: GetAccountRequest
      type: object
    SendQuota:
      description: An object that contains information about the per-day and per-second
        sending limits for your Amazon Pinpoint account in the current AWS Region.
      properties:
        Max24HourSend:
          allOf:
          - $ref: '#/components/schemas/Max24HourSend'
          - description: The maximum number of emails that you can send in the current
              AWS Region over a 24-hour period. This value is also called your <i>sending
              quota</i>.
        MaxSendRate:
          allOf:
          - $ref: '#/components/schemas/MaxSendRate'
          - description: The maximum number of emails that you can send per second
              in the current AWS Region. This value is also called your <i>maximum
              sending rate</i> or your <i>maximum TPS (transactions per second) rate</i>.
        SentLast24Hours:
          allOf:
          - $ref: '#/components/schemas/SentLast24Hours'
          - description: The number of emails sent from your Amazon Pinpoint account
              in the current AWS Region over the past 24 hours.
      type: object
    GetBlacklistReportsRequest:
      description: A request to retrieve a list of the blacklists that your dedicated
        IP addresses appear on.
      properties: {}
      title: GetBlacklistReportsRequest
      type: object
    GetConfigurationSetEventDestinationsRequest:
      description: A request to obtain information about the event destinations for
        a configuration set.
      properties: {}
      title: GetConfigurationSetEventDestinationsRequest
      type: object
    GetConfigurationSetRequest:
      description: A request to obtain information about a configuration set.
      properties: {}
      title: GetConfigurationSetRequest
      type: object
    GetDedicatedIpRequest:
      description: A request to obtain more information about a dedicated IP address.
      properties: {}
      title: GetDedicatedIpRequest
      type: object
    NextToken:
      type: string
    MaxItems:
      type: integer
    GetDedicatedIpsRequest:
      description: A request to obtain more information about dedicated IP pools.
      properties: {}
      title: GetDedicatedIpsRequest
      type: object
    GetDeliverabilityDashboardOptionsRequest:
      description: "<p>Retrieve information about the status of the Deliverability\
        \ dashboard for your Amazon Pinpoint account. When the Deliverability dashboard\
        \ is enabled, you gain access to reputation, deliverability, and other metrics\
        \ for the domains that you use to send email using Amazon Pinpoint. You also\
        \ gain the ability to perform predictive inbox placement tests.</p> <p>When\
        \ you use the Deliverability dashboard, you pay a monthly subscription charge,\
        \ in addition to any other fees that you accrue by using Amazon Pinpoint.\
        \ For more information about the features and cost of a Deliverability dashboard\
        \ subscription, see <a href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon\
        \ Pinpoint Pricing</a>.</p>"
      properties: {}
      title: GetDeliverabilityDashboardOptionsRequest
      type: object
    GetDeliverabilityTestReportRequest:
      description: A request to retrieve the results of a predictive inbox placement
        test.
      properties: {}
      title: GetDeliverabilityTestReportRequest
      type: object
    PlacementStatistics:
      description: An object that contains inbox placement data for an email provider.
      properties:
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that arrived in recipients' inboxes
              during the predictive inbox placement test.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that arrived in recipients' spam
              or junk mail folders during the predictive inbox placement test.
        MissingPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that didn't arrive in recipients'
              inboxes at all during the predictive inbox placement test.
        SpfPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were authenticated by using
              Sender Policy Framework (SPF) during the predictive inbox placement
              test.
        DkimPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were authenticated by using
              DomainKeys Identified Mail (DKIM) during the predictive inbox placement
              test.
      type: object
    IspPlacements:
      items:
        $ref: '#/components/schemas/IspPlacement'
      type: array
    MessageContent:
      description: The body of an email message.
      type: string
    GetDomainDeliverabilityCampaignRequest:
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      properties: {}
      title: GetDomainDeliverabilityCampaignRequest
      type: object
    GetDomainStatisticsReportRequest:
      description: A request to obtain deliverability metrics for a domain.
      properties: {}
      title: GetDomainStatisticsReportRequest
      type: object
    OverallVolume:
      description: An object that contains information about email that was sent from
        the selected domain.
      properties:
        VolumeStatistics:
          $ref: '#/components/schemas/OverallVolume_VolumeStatistics'
        ReadRatePercent:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were sent from the domain that
              were read by their recipients.
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          - description: An object that contains inbox and junk mail placement metrics
              for individual email providers.
      type: object
    GetEmailIdentityRequest:
      description: A request to return details about an email identity.
      properties: {}
      title: GetEmailIdentityRequest
      type: object
    MailFromAttributes:
      description: A list of attributes that are associated with a MAIL FROM domain.
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          - description: The name of a domain that an email identity uses as a custom
              MAIL FROM domain.
        MailFromDomainStatus:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainStatus'
          - description: "<p>The status of the MAIL FROM domain. This status can have\
              \ the following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon\
              \ Pinpoint hasn't started searching for the MX record yet.</p> </li>\
              \ <li> <p> <code>SUCCESS</code> – Amazon Pinpoint detected the required\
              \ MX record for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code>\
              \ – Amazon Pinpoint can't find the required MX record, or the record\
              \ no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code>\
              \ – A temporary issue occurred, which prevented Amazon Pinpoint from\
              \ determining the status of the MAIL FROM domain.</p> </li> </ul>"
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          - description: "<p>The action that Amazon Pinpoint to takes if it can't\
              \ read the required MX record for a custom MAIL FROM domain. When you\
              \ set this value to <code>UseDefaultValue</code>, Amazon Pinpoint uses\
              \ <i>amazonses.com</i> as the MAIL FROM domain. When you set this value\
              \ to <code>RejectMessage</code>, Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code>\
              \ error, and doesn't attempt to deliver the email.</p> <p>These behaviors\
              \ are taken when the custom MAIL FROM domain configuration is in the\
              \ <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>\
              \ states.</p>"
      required:
      - BehaviorOnMxFailure
      - MailFromDomain
      - MailFromDomainStatus
      type: object
    IdentityInfo:
      description: Information about an email identity.
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: <p>The email identity type. The identity type can be one
              of the following:</p> <ul> <li> <p> <code>EMAIL_ADDRESS</code> – The
              identity is an email address.</p> </li> <li> <p> <code>DOMAIN</code>
              – The identity is a domain.</p> </li> <li> <p> <code>MANAGED_DOMAIN</code>
              – The identity is a domain that is managed by AWS.</p> </li> </ul>
        IdentityName:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The address or domain of the identity.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Indicates whether or not you can send email from the\
              \ identity.</p> <p>In Amazon Pinpoint, an identity is an email address\
              \ or domain that you send email from. Before you can send email from\
              \ an identity, you have to demostrate that you own the identity, and\
              \ that you authorize Amazon Pinpoint to send email from that identity.</p>"
      type: object
    IdentityInfoList:
      items:
        $ref: '#/components/schemas/IdentityInfo'
      type: array
    IspNameList:
      items:
        $ref: '#/components/schemas/IspName'
      type: array
    IspPlacement:
      description: An object that describes how email sent during the predictive inbox
        placement test was handled by a certain email provider.
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          - description: The name of the email provider that the inbox placement data
              applies to.
        PlacementStatistics:
          $ref: '#/components/schemas/IspPlacement_PlacementStatistics'
      type: object
    ListConfigurationSetsRequest:
      description: A request to obtain a list of configuration sets for your Amazon
        Pinpoint account in the current AWS Region.
      properties: {}
      title: ListConfigurationSetsRequest
      type: object
    ListDedicatedIpPoolsRequest:
      description: A request to obtain a list of dedicated IP pools.
      properties: {}
      title: ListDedicatedIpPoolsRequest
      type: object
    ListOfDedicatedIpPools:
      description: A list of dedicated IP pools that are associated with your Amazon
        Pinpoint account.
      items:
        $ref: '#/components/schemas/PoolName'
      type: array
    ListDeliverabilityTestReportsRequest:
      description: A request to list all of the predictive inbox placement tests that
        you've performed.
      properties: {}
      title: ListDeliverabilityTestReportsRequest
      type: object
    ListDomainDeliverabilityCampaignsRequest:
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard (<code>PutDeliverabilityDashboardOption</code>
        operation) for the domain.
      properties: {}
      title: ListDomainDeliverabilityCampaignsRequest
      type: object
    ListEmailIdentitiesRequest:
      description: "A request to list all of the email identities associated with\
        \ your Amazon Pinpoint account. This list includes identities that you've\
        \ already verified, identities that are unverified, and identities that were\
        \ verified in the past, but are no longer verified."
      properties: {}
      title: ListEmailIdentitiesRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MailFromDomainName:
      description: The domain that you want to use as a MAIL FROM domain.
      type: string
    MailFromDomainStatus:
      description: "<p>The status of the MAIL FROM domain. This status can have the\
        \ following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon Pinpoint\
        \ hasn't started searching for the MX record yet.</p> </li> <li> <p> <code>SUCCESS</code>\
        \ – Amazon Pinpoint detected the required MX record for the MAIL FROM domain.</p>\
        \ </li> <li> <p> <code>FAILED</code> – Amazon Pinpoint can't find the required\
        \ MX record, or the record no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code>\
        \ – A temporary issue occurred, which prevented Amazon Pinpoint from determining\
        \ the status of the MAIL FROM domain.</p> </li> </ul>"
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      type: string
    Max24HourSend:
      format: double
      type: number
    MaxSendRate:
      format: double
      type: number
    MessageTagName:
      description: "<p>The name of the message tag. The message tag name has to meet\
        \ the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters\
        \ (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li>\
        \ <p>It can contain no more than 256 characters.</p> </li> </ul>"
      type: string
    MessageTagValue:
      description: "<p>The value of the message tag. The message tag value has to\
        \ meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII\
        \ letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li>\
        \ <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
      type: string
    MessageTagList:
      description: A list of message tags.
      items:
        $ref: '#/components/schemas/MessageTag'
      type: array
    OutboundMessageId:
      type: string
    PutAccountDedicatedIpWarmupAttributesRequest:
      description: A request to enable or disable the automatic IP address warm-up
        feature.
      example:
        AutoWarmupEnabled: ""
      properties:
        AutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Enables or disables the automatic warm-up feature for dedicated\
              \ IP addresses that are associated with your Amazon Pinpoint account\
              \ in the current AWS Region. Set to <code>true</code> to enable the\
              \ automatic warm-up feature, or set to <code>false</code> to disable\
              \ it."
      title: PutAccountDedicatedIpWarmupAttributesRequest
      type: object
    PutAccountSendingAttributesRequest:
      description: A request to change the ability of your account to send email.
      example:
        SendingEnabled: ""
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Enables or disables your account's ability to send email.\
              \ Set to <code>true</code> to enable email sending, or set to <code>false</code>\
              \ to disable email sending.</p> <note> <p>If AWS paused your account's\
              \ ability to send email, you can't use this operation to resume your\
              \ account's ability to send email.</p> </note>"
      title: PutAccountSendingAttributesRequest
      type: object
    SendingPoolName:
      description: The name of the dedicated IP pool that you want to associate with
        the configuration set.
      type: string
    PutConfigurationSetDeliveryOptionsRequest:
      description: A request to associate a configuration set with a dedicated IP
        pool.
      example:
        SendingPoolName: ""
        TlsPolicy: ""
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/SendingPoolName'
          - description: The name of the dedicated IP pool that you want to associate
              with the configuration set.
      title: PutConfigurationSetDeliveryOptionsRequest
      type: object
    PutConfigurationSetReputationOptionsRequest:
      description: A request to enable or disable tracking of reputation metrics for
        a configuration set.
      example:
        ReputationMetricsEnabled: ""
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
      title: PutConfigurationSetReputationOptionsRequest
      type: object
    PutConfigurationSetSendingOptionsRequest:
      description: A request to enable or disable the ability of Amazon Pinpoint to
        send emails that use a specific configuration set.
      example:
        SendingEnabled: ""
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
      title: PutConfigurationSetSendingOptionsRequest
      type: object
    PutConfigurationSetTrackingOptionsRequest:
      description: A request to add a custom domain for tracking open and click events
        to a configuration set.
      example:
        CustomRedirectDomain: ""
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain that you want to use to track open and click events.
      title: PutConfigurationSetTrackingOptionsRequest
      type: object
    PutDedicatedIpInPoolRequest:
      description: A request to move a dedicated IP address to a dedicated IP pool.
      example:
        DestinationPoolName: ""
      properties:
        DestinationPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the IP pool that you want to add the dedicated
              IP address to. You have to specify an IP pool that already exists.
      required:
      - DestinationPoolName
      title: PutDedicatedIpInPoolRequest
      type: object
    PutDedicatedIpWarmupAttributesRequest:
      description: A request to change the warm-up attributes for a dedicated IP address.
        This operation is useful when you want to resume the warm-up process for an
        existing IP address.
      example:
        WarmupPercentage: ""
      properties:
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          - description: The warm-up percentage that you want to associate with the
              dedicated IP address.
      required:
      - WarmupPercentage
      title: PutDedicatedIpWarmupAttributesRequest
      type: object
    PutDeliverabilityDashboardOptionRequest:
      description: "<p>Enable or disable the Deliverability dashboard for your Amazon\
        \ Pinpoint account. When you enable the Deliverability dashboard, you gain\
        \ access to reputation, deliverability, and other metrics for the domains\
        \ that you use to send email using Amazon Pinpoint. You also gain the ability\
        \ to perform predictive inbox placement tests.</p> <p>When you use the Deliverability\
        \ dashboard, you pay a monthly subscription charge, in addition to any other\
        \ fees that you accrue by using Amazon Pinpoint. For more information about\
        \ the features and cost of a Deliverability dashboard subscription, see <a\
        \ href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon Pinpoint Pricing</a>.</p>"
      example:
        SubscribedDomains: ""
        DashboardEnabled: ""
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether to enable the Deliverability dashboard\
              \ for your Amazon Pinpoint account. To enable the dashboard, set this\
              \ value to <code>true</code>."
        SubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and enabled the Deliverability dashboard for."
      required:
      - DashboardEnabled
      title: PutDeliverabilityDashboardOptionRequest
      type: object
    PutEmailIdentityDkimAttributesRequest:
      description: A request to enable or disable DKIM signing of email that you send
        from an email identity.
      example:
        SigningEnabled: ""
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Sets the DKIM signing configuration for the identity.</p>\
              \ <p>When you set this value <code>true</code>, then the messages that\
              \ Amazon Pinpoint sends from the identity are DKIM-signed. When you\
              \ set this value to <code>false</code>, then the messages that Amazon\
              \ Pinpoint sends from the identity aren't DKIM-signed.</p>"
      title: PutEmailIdentityDkimAttributesRequest
      type: object
    PutEmailIdentityFeedbackAttributesRequest:
      description: A request to set the attributes that control how bounce and complaint
        events are processed.
      example:
        EmailForwardingEnabled: ""
      properties:
        EmailForwardingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Sets the feedback forwarding configuration for the identity.</p>\
              \ <p>If the value is <code>true</code>, Amazon Pinpoint sends you email\
              \ notifications when bounce or complaint events occur. Amazon Pinpoint\
              \ sends this notification to the address that you specified in the Return-Path\
              \ header of the original email.</p> <p>When you set this value to <code>false</code>,\
              \ Amazon Pinpoint sends notifications through other mechanisms, such\
              \ as by notifying an Amazon SNS topic or another event destination.\
              \ You're required to have a method of tracking bounces and complaints.\
              \ If you haven't set up another mechanism for receiving bounce or complaint\
              \ notifications, Amazon Pinpoint sends an email notification when these\
              \ events occur (even if this setting is disabled).</p>"
      title: PutEmailIdentityFeedbackAttributesRequest
      type: object
    PutEmailIdentityMailFromAttributesRequest:
      description: A request to configure the custom MAIL FROM domain for a verified
        identity.
      example:
        MailFromDomain: ""
        BehaviorOnMxFailure: ""
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          - description: <p> The custom MAIL FROM domain that you want the verified
              identity to use. The MAIL FROM domain must meet the following criteria:</p>
              <ul> <li> <p>It has to be a subdomain of the verified identity.</p>
              </li> <li> <p>It can't be used to receive email.</p> </li> <li> <p>It
              can't be used in a "From" address if the MAIL FROM domain is a destination
              for feedback forwarding emails.</p> </li> </ul>
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          - description: "<p>The action that you want Amazon Pinpoint to take if it\
              \ can't read the required MX record when you send an email. When you\
              \ set this value to <code>UseDefaultValue</code>, Amazon Pinpoint uses\
              \ <i>amazonses.com</i> as the MAIL FROM domain. When you set this value\
              \ to <code>RejectMessage</code>, Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code>\
              \ error, and doesn't attempt to deliver the email.</p> <p>These behaviors\
              \ are taken when the custom MAIL FROM domain configuration is in the\
              \ <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>\
              \ states.</p>"
      title: PutEmailIdentityMailFromAttributesRequest
      type: object
    RawMessageData:
      description: "<p>The raw email message. The message has to meet the following\
        \ criteria:</p> <ul> <li> <p>The message has to contain a header and a body,\
        \ separated by one blank line.</p> </li> <li> <p>All of the required header\
        \ fields must be present in the message.</p> </li> <li> <p>Each part of a\
        \ multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments\
        \ must be in a file format that Amazon Pinpoint supports. </p> </li> <li>\
        \ <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of\
        \ the MIME parts in your message contain content that is outside of the 7-bit\
        \ ASCII character range, you should encode that content to ensure that recipients'\
        \ email clients render the message properly.</p> </li> <li> <p>The length\
        \ of any single line of text in the message can't exceed 1,000 characters.\
        \ This restriction is defined in <a href=\"https://tools.ietf.org/html/rfc5321\"\
        >RFC 5321</a>.</p> </li> </ul>"
      type: string
    SendEmailRequest:
      description: A request to send an email message.
      example:
        FromEmailAddress: ""
        FeedbackForwardingEmailAddress: ""
        Destination:
          ToAddresses: ""
          CcAddresses: ""
          BccAddresses: ""
        EmailTags: ""
        Content:
          Raw:
            Data: ""
          Simple:
            Body:
              Html:
                Charset: ""
                Data: ""
              Text:
                Charset: ""
                Data: ""
            Subject:
              Charset: ""
              Data: ""
          Template:
            TemplateArn: ""
            TemplateData: ""
        ReplyToAddresses: ""
        ConfigurationSetName: ""
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: 'The email address that you want to use as the "From" address
              for the email. The address that you specify has to be verified. '
        Destination:
          $ref: '#/components/schemas/SendEmailRequest_Destination'
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: "The \"Reply-to\" email addresses for the message. When the\
              \ recipient replies to the message, each Reply-to address receives the\
              \ reply."
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The address that Amazon Pinpoint should send bounce and complaint
              notifications to.
        Content:
          $ref: '#/components/schemas/SendEmailRequest_Content'
        EmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          - description: "A list of tags, in the form of name/value pairs, to apply\
              \ to an email that you send using the <code>SendEmail</code> operation.\
              \ Tags correspond to characteristics of the email that you define, so\
              \ that you can publish email sending events. "
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set that you want to use when
              sending the email.
      required:
      - Content
      - Destination
      title: SendEmailRequest
      type: object
    SentLast24Hours:
      format: double
      type: number
    TagValue:
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to add one or more tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of the tags that you want to add to the resource.
              A tag consists of a required tag key (<code>Key</code>) and an associated
              tag value (<code>Value</code>). The maximum length of a tag key is 128
              characters. The maximum length of a tag value is 256 characters.
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    TemplateArn:
      type: string
    TemplateData:
      maxLength: 262144
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateConfigurationSetEventDestinationRequest:
      description: A request to change the settings for an event destination for a
        configuration set.
      example:
        EventDestination:
          SnsDestination:
            TopicArn: ""
          CloudWatchDestination:
            DimensionConfigurations: ""
          Enabled: ""
          MatchingEventTypes: ""
          PinpointDestination:
            ApplicationArn: ""
          KinesisFirehoseDestination:
            DeliveryStreamArn: ""
            IamRoleArn: ""
      properties:
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestinationRequest_EventDestination'
      required:
      - EventDestination
      title: UpdateConfigurationSetEventDestinationRequest
      type: object
    CreateConfigurationSet_request_TrackingOptions:
      description: "<p>An object that defines the tracking options for a configuration\
        \ set. When you use Amazon Pinpoint to send an email, it contains an invisible\
        \ image that's used to track when recipients open your email. If your email\
        \ contains links, those links are changed slightly in order to track when\
        \ recipients click them.</p> <p>These images and links include references\
        \ to a domain operated by AWS. You can optionally configure Amazon Pinpoint\
        \ to use a domain that you operate for these images and links.</p>"
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain that you want to use for tracking open and click
              events.
      type: object
    CreateConfigurationSet_request_DeliveryOptions:
      description: Used to associate a configuration set with a dedicated IP pool.
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool that you want to associate
              with the configuration set.
      type: object
    CreateConfigurationSet_request_ReputationOptions:
      description: 'Enable or disable collection of reputation metrics for emails
        that you send using this configuration set in the current AWS Region. '
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          - description: "The date and time (in Unix time) when the reputation metrics\
              \ were last given a fresh start. When your account is given a fresh\
              \ start, your reputation metrics are calculated starting from the date\
              \ of the fresh start."
      type: object
    CreateConfigurationSet_request_SendingOptions:
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current AWS Region.
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
      type: object
    CreateConfigurationSet_request:
      properties:
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
        TrackingOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_SendingOptions'
        Tags:
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the configuration set.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - ConfigurationSetName
      type: object
    CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination:
      allOf:
      - $ref: '#/components/schemas/KinesisFirehoseDestination'
      - description: "An object that defines an Amazon Kinesis Data Firehose destination\
          \ for email events. You can use Amazon Kinesis Data Firehose to stream data\
          \ to other services, such as Amazon S3 and Amazon Redshift."
      example:
        DeliveryStreamArn: ""
        IamRoleArn: ""
    CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination:
      allOf:
      - $ref: '#/components/schemas/CloudWatchDestination'
      - description: An object that defines an Amazon CloudWatch destination for email
          events. You can use Amazon CloudWatch to monitor and gain insights on your
          email sending metrics.
      example:
        DimensionConfigurations: ""
    CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination:
      allOf:
      - $ref: '#/components/schemas/SnsDestination'
      - description: An object that defines an Amazon SNS destination for email events.
          You can use Amazon SNS to send notification when certain email events occur.
      example:
        TopicArn: ""
    CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination:
      allOf:
      - $ref: '#/components/schemas/PinpointDestination'
      - description: An object that defines a Amazon Pinpoint destination for email
          events. You can use Amazon Pinpoint events to create attributes in Amazon
          Pinpoint projects. You can use these attributes to create segments for your
          campaigns.
      example:
        ApplicationArn: ""
    CreateConfigurationSetEventDestination_request_EventDestination:
      description: "An object that defines the event destination. Specifically, it\
        \ defines which services receive events from emails sent using the configuration\
        \ set that the event destination is associated with. Also defines the types\
        \ of events that are sent to the event destination."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: An array that specifies which events Amazon Pinpoint should
              send to the destinations in this <code>EventDestinationDefinition</code>.
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      type: object
    CreateConfigurationSetEventDestination_request:
      properties:
        EventDestinationName:
          description: "<p>The name of an event destination.</p> <p>In Amazon Pinpoint,\
            \ <i>events</i> include message sends, deliveries, opens, clicks, bounces,\
            \ and complaints. <i>Event destinations</i> are places that you can send\
            \ information about these events to. For example, you can send event data\
            \ to Amazon SNS to receive notifications when you receive bounces or complaints,\
            \ or you can use Amazon Kinesis Data Firehose to stream data to Amazon\
            \ S3 for long-term storage.</p>"
          type: string
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination'
      required:
      - EventDestination
      - EventDestinationName
      type: object
    CreateDedicatedIpPool_request:
      properties:
        PoolName:
          description: The name of a dedicated IP pool.
          type: string
        Tags:
          description: An object that defines the tags (keys and values) that you
            want to associate with the pool.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - PoolName
      type: object
    CreateDeliverabilityTestReport_request_Content_Simple:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: The simple email message. The message consists of a subject and
          a message body.
      example:
        Body:
          Html:
            Charset: ""
            Data: ""
          Text:
            Charset: ""
            Data: ""
        Subject:
          Charset: ""
          Data: ""
    CreateDeliverabilityTestReport_request_Content_Raw:
      allOf:
      - $ref: '#/components/schemas/RawMessage'
      - description: "<p>The raw email message. The message has to meet the following\
          \ criteria:</p> <ul> <li> <p>The message has to contain a header and a body,\
          \ separated by one blank line.</p> </li> <li> <p>All of the required header\
          \ fields must be present in the message.</p> </li> <li> <p>Each part of\
          \ a multipart MIME message must be formatted properly.</p> </li> <li> <p>If\
          \ you include attachments, they must be in a file format that Amazon Pinpoint\
          \ supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p>\
          \ </li> <li> <p>If any of the MIME parts in your message contain content\
          \ that is outside of the 7-bit ASCII character range, you should encode\
          \ that content to ensure that recipients' email clients render the message\
          \ properly.</p> </li> <li> <p>The length of any single line of text in the\
          \ message can't exceed 1,000 characters. This restriction is defined in\
          \ <a href=\"https://tools.ietf.org/html/rfc5321\">RFC 5321</a>.</p> </li>\
          \ </ul>"
      example:
        Data: ""
    CreateDeliverabilityTestReport_request_Content_Template:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The template to use for the email message.
      example:
        TemplateArn: ""
        TemplateData: ""
    CreateDeliverabilityTestReport_request_Content:
      description: "An object that defines the entire content of the email, including\
        \ the message headers and the body content. You can create a simple email\
        \ message, in which you specify the subject and the text and HTML versions\
        \ of the message body. You can also create raw messages, in which you specify\
        \ a complete MIME-formatted message. Raw messages can include attachments\
        \ and custom headers."
      properties:
        Simple:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Simple'
        Raw:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Raw'
        Template:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Template'
      type: object
    CreateDeliverabilityTestReport_request:
      properties:
        ReportName:
          description: A name that helps you identify a report generated by the Deliverability
            dashboard.
          type: string
        FromEmailAddress:
          description: The email address that the predictive inbox placement test
            email was sent from.
          type: string
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content'
        Tags:
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the predictive inbox placement test.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - Content
      - FromEmailAddress
      type: object
    CreateEmailIdentity_request:
      properties:
        EmailIdentity:
          description: The email address or domain that you want to verify.
          type: string
        Tags:
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the email identity.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - EmailIdentity
      type: object
    UpdateConfigurationSetEventDestination_request:
      properties:
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination'
      required:
      - EventDestination
      type: object
    PutDeliverabilityDashboardOption_request:
      properties:
        DashboardEnabled:
          description: "Specifies whether to enable the Deliverability dashboard for\
            \ your Amazon Pinpoint account. To enable the dashboard, set this value\
            \ to <code>true</code>."
          type: boolean
        SubscribedDomains:
          description: "An object that contains information about the Deliverability\
            \ dashboard subscription for a verified domain that you use to send email\
            \ and currently has an active Deliverability dashboard subscription. If\
            \ a Deliverability dashboard subscription is active for a domain, you\
            \ gain access to reputation, inbox placement, and other metrics for the\
            \ domain."
          items:
            $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
          type: array
      required:
      - DashboardEnabled
      type: object
    PutAccountDedicatedIpWarmupAttributes_request:
      properties:
        AutoWarmupEnabled:
          description: "Enables or disables the automatic warm-up feature for dedicated\
            \ IP addresses that are associated with your Amazon Pinpoint account in\
            \ the current AWS Region. Set to <code>true</code> to enable the automatic\
            \ warm-up feature, or set to <code>false</code> to disable it."
          type: boolean
      type: object
    PutAccountSendingAttributes_request:
      properties:
        SendingEnabled:
          description: "<p>Enables or disables your account's ability to send email.\
            \ Set to <code>true</code> to enable email sending, or set to <code>false</code>\
            \ to disable email sending.</p> <note> <p>If AWS paused your account's\
            \ ability to send email, you can't use this operation to resume your account's\
            \ ability to send email.</p> </note>"
          type: boolean
      type: object
    PutConfigurationSetDeliveryOptions_request:
      properties:
        TlsPolicy:
          description: "Specifies whether messages that use the configuration set\
            \ are required to use Transport Layer Security (TLS). If the value is\
            \ <code>Require</code>, messages are only delivered if a TLS connection\
            \ can be established. If the value is <code>Optional</code>, messages\
            \ can be delivered in plain text if a TLS connection can't be established."
          enum:
          - REQUIRE
          - OPTIONAL
          type: string
        SendingPoolName:
          description: The name of the dedicated IP pool that you want to associate
            with the configuration set.
          type: string
      type: object
    PutConfigurationSetReputationOptions_request:
      properties:
        ReputationMetricsEnabled:
          description: "If <code>true</code>, tracking of reputation metrics is enabled\
            \ for the configuration set. If <code>false</code>, tracking of reputation\
            \ metrics is disabled for the configuration set."
          type: boolean
      type: object
    PutConfigurationSetSendingOptions_request:
      properties:
        SendingEnabled:
          description: "If <code>true</code>, email sending is enabled for the configuration\
            \ set. If <code>false</code>, email sending is disabled for the configuration\
            \ set."
          type: boolean
      type: object
    PutConfigurationSetTrackingOptions_request:
      properties:
        CustomRedirectDomain:
          description: The domain that you want to use for tracking open and click
            events.
          type: string
      type: object
    PutDedicatedIpInPool_request:
      properties:
        DestinationPoolName:
          description: The name of a dedicated IP pool.
          type: string
      required:
      - DestinationPoolName
      type: object
    PutDedicatedIpWarmupAttributes_request:
      properties:
        WarmupPercentage:
          description: The warm-up percentage that you want to associate with the
            dedicated IP address.
          type: integer
      required:
      - WarmupPercentage
      type: object
    PutEmailIdentityDkimAttributes_request:
      properties:
        SigningEnabled:
          description: "<p>Sets the DKIM signing configuration for the identity.</p>\
            \ <p>When you set this value <code>true</code>, then the messages that\
            \ Amazon Pinpoint sends from the identity are DKIM-signed. When you set\
            \ this value to <code>false</code>, then the messages that Amazon Pinpoint\
            \ sends from the identity aren't DKIM-signed.</p>"
          type: boolean
      type: object
    PutEmailIdentityFeedbackAttributes_request:
      properties:
        EmailForwardingEnabled:
          description: "<p>Sets the feedback forwarding configuration for the identity.</p>\
            \ <p>If the value is <code>true</code>, Amazon Pinpoint sends you email\
            \ notifications when bounce or complaint events occur. Amazon Pinpoint\
            \ sends this notification to the address that you specified in the Return-Path\
            \ header of the original email.</p> <p>When you set this value to <code>false</code>,\
            \ Amazon Pinpoint sends notifications through other mechanisms, such as\
            \ by notifying an Amazon SNS topic or another event destination. You're\
            \ required to have a method of tracking bounces and complaints. If you\
            \ haven't set up another mechanism for receiving bounce or complaint notifications,\
            \ Amazon Pinpoint sends an email notification when these events occur\
            \ (even if this setting is disabled).</p>"
          type: boolean
      type: object
    PutEmailIdentityMailFromAttributes_request:
      properties:
        MailFromDomain:
          description: The domain that you want to use as a MAIL FROM domain.
          type: string
        BehaviorOnMxFailure:
          description: "<p>The action that you want Amazon Pinpoint to take if it\
            \ can't read the required MX record for a custom MAIL FROM domain. When\
            \ you set this value to <code>UseDefaultValue</code>, Amazon Pinpoint\
            \ uses <i>amazonses.com</i> as the MAIL FROM domain. When you set this\
            \ value to <code>RejectMessage</code>, Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code>\
            \ error, and doesn't attempt to deliver the email.</p> <p>These behaviors\
            \ are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>,\
            \ <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>"
          enum:
          - USE_DEFAULT_VALUE
          - REJECT_MESSAGE
          type: string
      type: object
    SendEmail_request_Destination:
      description: An object that describes the recipients for an email.
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "To" recipients
              for the email.
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "CC" (carbon
              copy) recipients for the email.
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "BCC" (blind
              carbon copy) recipients for the email.
      type: object
    SendEmail_request:
      properties:
        FromEmailAddress:
          description: 'The email address that you want to use as the "From" address
            for the email. The address that you specify has to be verified. '
          type: string
        Destination:
          $ref: '#/components/schemas/SendEmail_request_Destination'
        ReplyToAddresses:
          description: "The \"Reply-to\" email addresses for the message. When the\
            \ recipient replies to the message, each Reply-to address receives the\
            \ reply."
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
        FeedbackForwardingEmailAddress:
          description: The address that Amazon Pinpoint should send bounce and complaint
            notifications to.
          type: string
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content'
        EmailTags:
          description: A list of message tags.
          items:
            $ref: '#/components/schemas/MessageTag'
          type: array
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p>In Amazon Pinpoint,\
            \ <i>configuration sets</i> are groups of rules that you can apply to\
            \ the emails you send. You apply a configuration set to an email by including\
            \ a reference to the configuration set in the headers of the email. When\
            \ you apply a configuration set to an email, all of the rules in that\
            \ configuration set are applied to the email.</p>"
          type: string
      required:
      - Content
      - Destination
      type: object
    TagResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add one or more tags to.
          type: string
        Tags:
          description: A list of the tags that you want to add to the resource. A
            tag consists of a required tag key (<code>Key</code>) and an associated
            tag value (<code>Value</code>). The maximum length of a tag key is 128
            characters. The maximum length of a tag value is 256 characters.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - ResourceArn
      - Tags
      type: object
    Message_Subject:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "The subject line of the email. The subject line can only contain\
          \ 7-bit ASCII characters. However, you can specify non-ASCII characters\
          \ in the subject line by using encoded-word syntax, as described in <a href=\"\
          https://tools.ietf.org/html/rfc2047\">RFC 2047</a>."
      example:
        Charset: ""
        Data: ""
    Message_Body:
      allOf:
      - $ref: '#/components/schemas/Body'
      - description: "The body of the message. You can specify an HTML version of\
          \ the message, a text-only version of the message, or both."
      example:
        Html:
          Charset: ""
          Data: ""
        Text:
          Charset: ""
          Data: ""
    CreateEmailIdentityResponse_DkimAttributes:
      allOf:
      - $ref: '#/components/schemas/DkimAttributes'
      - description: An object that contains information about the DKIM attributes
          for the identity. This object includes the tokens that you use to create
          the CNAME records that are required to complete the DKIM verification process.
      example:
        SigningEnabled: ""
        Status: ""
        Tokens: ""
    GetAccountResponse_SendQuota:
      allOf:
      - $ref: '#/components/schemas/SendQuota'
      - description: An object that contains information about the per-day and per-second
          sending limits for your Amazon Pinpoint account in the current AWS Region.
      example:
        SentLast24Hours: ""
        MaxSendRate: ""
        Max24HourSend: ""
    GetConfigurationSetResponse_TrackingOptions:
      allOf:
      - $ref: '#/components/schemas/TrackingOptions'
      - description: An object that defines the open and click tracking options for
          emails that you send using the configuration set.
      example:
        CustomRedirectDomain: ""
    GetConfigurationSetResponse_DeliveryOptions:
      allOf:
      - $ref: '#/components/schemas/DeliveryOptions'
      - description: An object that defines the dedicated IP pool that is used to
          send emails that you send using the configuration set.
      example:
        SendingPoolName: ""
        TlsPolicy: ""
    GetConfigurationSetResponse_ReputationOptions:
      allOf:
      - $ref: '#/components/schemas/ReputationOptions'
      - description: An object that defines whether or not Amazon Pinpoint collects
          reputation metrics for the emails that you send that use the configuration
          set.
      example:
        LastFreshStart: ""
        ReputationMetricsEnabled: ""
    GetConfigurationSetResponse_SendingOptions:
      allOf:
      - $ref: '#/components/schemas/SendingOptions'
      - description: An object that defines whether or not Amazon Pinpoint can send
          email that you send using the configuration set.
      example:
        SendingEnabled: ""
    GetDedicatedIpResponse_DedicatedIp:
      allOf:
      - $ref: '#/components/schemas/DedicatedIp'
      - description: An object that contains information about a dedicated IP address.
      example:
        PoolName: ""
        WarmupStatus: ""
        Ip: ""
        WarmupPercentage: ""
    GetDeliverabilityTestReportResponse_DeliverabilityTestReport:
      allOf:
      - $ref: '#/components/schemas/DeliverabilityTestReport'
      - description: An object that contains the results of the predictive inbox placement
          test.
      example:
        FromEmailAddress: ""
        DeliverabilityTestStatus: ""
        ReportName: ""
        ReportId: ""
        CreateDate: ""
        Subject: ""
    GetDeliverabilityTestReportResponse_OverallPlacement:
      allOf:
      - $ref: '#/components/schemas/PlacementStatistics'
      - description: "An object that specifies how many test messages that were sent\
          \ during the predictive inbox placement test were delivered to recipients'\
          \ inboxes, how many were sent to recipients' spam folders, and how many\
          \ weren't delivered."
      example:
        InboxPercentage: ""
        SpfPercentage: ""
        MissingPercentage: ""
        SpamPercentage: ""
        DkimPercentage: ""
    GetDomainDeliverabilityCampaignResponse_DomainDeliverabilityCampaign:
      allOf:
      - $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      - description: An object that contains the deliverability data for the campaign.
      example:
        FirstSeenDateTime: ""
        InboxCount: ""
        ImageUrl: ""
        Subject: ""
        Esps: ""
        SpamCount: ""
        FromAddress: ""
        CampaignId: ""
        ReadRate: ""
        DeleteRate: ""
        LastSeenDateTime: ""
        SendingIps: ""
        ReadDeleteRate: ""
        ProjectedVolume: ""
    GetDomainStatisticsReportResponse_OverallVolume:
      allOf:
      - $ref: '#/components/schemas/OverallVolume'
      - description: An object that contains deliverability metrics for the domain
          that you specified. The data in this object is a summary of all of the data
          that was collected from the <code>StartDate</code> to the <code>EndDate</code>.
      example:
        DomainIspPlacements: ""
        VolumeStatistics:
          InboxRawCount: ""
          ProjectedInbox: ""
          ProjectedSpam: ""
          SpamRawCount: ""
        ReadRatePercent: ""
    GetEmailIdentityResponse_MailFromAttributes:
      allOf:
      - $ref: '#/components/schemas/MailFromAttributes'
      - description: An object that contains information about the Mail-From attributes
          for the email identity.
      example:
        MailFromDomain: ""
        MailFromDomainStatus: ""
        BehaviorOnMxFailure: ""
    DomainDeliverabilityTrackingOption_InboxPlacementTrackingOption:
      allOf:
      - $ref: '#/components/schemas/InboxPlacementTrackingOption'
      - description: An object that contains information about the inbox placement
          data settings for the domain.
    Body_Text:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "An object that represents the version of the message that is\
          \ displayed in email clients that don't support HTML, or clients where the\
          \ recipient has disabled HTML rendering."
      example:
        Charset: ""
        Data: ""
    Body_Html:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "An object that represents the version of the message that is\
          \ displayed in email clients that support HTML. HTML messages can include\
          \ formatted text, hyperlinks, images, and more. "
      example:
        Charset: ""
        Data: ""
    CreateConfigurationSetEventDestinationRequest_EventDestination:
      allOf:
      - $ref: '#/components/schemas/EventDestinationDefinition'
      - description: An object that defines the event destination.
      example:
        SnsDestination:
          TopicArn: ""
        CloudWatchDestination:
          DimensionConfigurations: ""
        Enabled: ""
        MatchingEventTypes: ""
        PinpointDestination:
          ApplicationArn: ""
        KinesisFirehoseDestination:
          DeliveryStreamArn: ""
          IamRoleArn: ""
    CreateDeliverabilityTestReportRequest_Content:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - description: The HTML body of the message that you sent when you performed
          the predictive inbox placement test.
      example:
        Raw:
          Data: ""
        Simple:
          Body:
            Html:
              Charset: ""
              Data: ""
            Text:
              Charset: ""
              Data: ""
          Subject:
            Charset: ""
            Data: ""
        Template:
          TemplateArn: ""
          TemplateData: ""
    DailyVolume_VolumeStatistics:
      allOf:
      - $ref: '#/components/schemas/VolumeStatistics'
      - description: An object that contains inbox placement metrics for a specific
          day in the analysis period.
    OverallVolume_VolumeStatistics:
      allOf:
      - $ref: '#/components/schemas/VolumeStatistics'
      - description: An object that contains information about the numbers of messages
          that arrived in recipients' inboxes and junk mail folders.
      example:
        InboxRawCount: ""
        ProjectedInbox: ""
        ProjectedSpam: ""
        SpamRawCount: ""
    IspPlacement_PlacementStatistics:
      allOf:
      - $ref: '#/components/schemas/PlacementStatistics'
      - description: An object that contains inbox placement metrics for a specific
          email provider.
    SendEmailRequest_Destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: An object that contains the recipients of the email message.
      example:
        ToAddresses: ""
        CcAddresses: ""
        BccAddresses: ""
    SendEmailRequest_Content:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - description: An object that contains the body of the message. You can send
          either a Simple message or a Raw message.
      example:
        Raw:
          Data: ""
        Simple:
          Body:
            Html:
              Charset: ""
              Data: ""
            Text:
              Charset: ""
              Data: ""
          Subject:
            Charset: ""
            Data: ""
        Template:
          TemplateArn: ""
          TemplateData: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

