/*
 * Amazon Pinpoint Email Service
 * <fullname>Amazon Pinpoint Email Service</fullname> <p>Welcome to the <i>Amazon Pinpoint Email API Reference</i>. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.</p> <p> <a href=\"https://aws.amazon.com/pinpoint\">Amazon Pinpoint</a> is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\">Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.</p> <p>The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region\">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To learn more about AWS Regions, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\">Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see <a href=\"http://aws.amazon.com/about-aws/global-infrastructure/\">AWS Global Infrastructure</a>.</p>
 *
 * The version of the OpenAPI document: 2018-07-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetConfigurationSetResponseDeliveryOptions;
import org.openapitools.client.model.GetConfigurationSetResponseReputationOptions;
import org.openapitools.client.model.GetConfigurationSetResponseSendingOptions;
import org.openapitools.client.model.GetConfigurationSetResponseTrackingOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a configuration set.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:35.756955-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetConfigurationSetResponse {
  public static final String SERIALIZED_NAME_CONFIGURATION_SET_NAME = "ConfigurationSetName";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_SET_NAME)
  private String configurationSetName;

  public static final String SERIALIZED_NAME_TRACKING_OPTIONS = "TrackingOptions";
  @SerializedName(SERIALIZED_NAME_TRACKING_OPTIONS)
  private GetConfigurationSetResponseTrackingOptions trackingOptions;

  public static final String SERIALIZED_NAME_DELIVERY_OPTIONS = "DeliveryOptions";
  @SerializedName(SERIALIZED_NAME_DELIVERY_OPTIONS)
  private GetConfigurationSetResponseDeliveryOptions deliveryOptions;

  public static final String SERIALIZED_NAME_REPUTATION_OPTIONS = "ReputationOptions";
  @SerializedName(SERIALIZED_NAME_REPUTATION_OPTIONS)
  private GetConfigurationSetResponseReputationOptions reputationOptions;

  public static final String SERIALIZED_NAME_SENDING_OPTIONS = "SendingOptions";
  @SerializedName(SERIALIZED_NAME_SENDING_OPTIONS)
  private GetConfigurationSetResponseSendingOptions sendingOptions;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public GetConfigurationSetResponse() {
  }

  public GetConfigurationSetResponse configurationSetName(String configurationSetName) {
    this.configurationSetName = configurationSetName;
    return this;
  }

  /**
   * Get configurationSetName
   * @return configurationSetName
   */
  @javax.annotation.Nullable
  public String getConfigurationSetName() {
    return configurationSetName;
  }

  public void setConfigurationSetName(String configurationSetName) {
    this.configurationSetName = configurationSetName;
  }


  public GetConfigurationSetResponse trackingOptions(GetConfigurationSetResponseTrackingOptions trackingOptions) {
    this.trackingOptions = trackingOptions;
    return this;
  }

  /**
   * Get trackingOptions
   * @return trackingOptions
   */
  @javax.annotation.Nullable
  public GetConfigurationSetResponseTrackingOptions getTrackingOptions() {
    return trackingOptions;
  }

  public void setTrackingOptions(GetConfigurationSetResponseTrackingOptions trackingOptions) {
    this.trackingOptions = trackingOptions;
  }


  public GetConfigurationSetResponse deliveryOptions(GetConfigurationSetResponseDeliveryOptions deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
    return this;
  }

  /**
   * Get deliveryOptions
   * @return deliveryOptions
   */
  @javax.annotation.Nullable
  public GetConfigurationSetResponseDeliveryOptions getDeliveryOptions() {
    return deliveryOptions;
  }

  public void setDeliveryOptions(GetConfigurationSetResponseDeliveryOptions deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
  }


  public GetConfigurationSetResponse reputationOptions(GetConfigurationSetResponseReputationOptions reputationOptions) {
    this.reputationOptions = reputationOptions;
    return this;
  }

  /**
   * Get reputationOptions
   * @return reputationOptions
   */
  @javax.annotation.Nullable
  public GetConfigurationSetResponseReputationOptions getReputationOptions() {
    return reputationOptions;
  }

  public void setReputationOptions(GetConfigurationSetResponseReputationOptions reputationOptions) {
    this.reputationOptions = reputationOptions;
  }


  public GetConfigurationSetResponse sendingOptions(GetConfigurationSetResponseSendingOptions sendingOptions) {
    this.sendingOptions = sendingOptions;
    return this;
  }

  /**
   * Get sendingOptions
   * @return sendingOptions
   */
  @javax.annotation.Nullable
  public GetConfigurationSetResponseSendingOptions getSendingOptions() {
    return sendingOptions;
  }

  public void setSendingOptions(GetConfigurationSetResponseSendingOptions sendingOptions) {
    this.sendingOptions = sendingOptions;
  }


  public GetConfigurationSetResponse tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetConfigurationSetResponse getConfigurationSetResponse = (GetConfigurationSetResponse) o;
    return Objects.equals(this.configurationSetName, getConfigurationSetResponse.configurationSetName) &&
        Objects.equals(this.trackingOptions, getConfigurationSetResponse.trackingOptions) &&
        Objects.equals(this.deliveryOptions, getConfigurationSetResponse.deliveryOptions) &&
        Objects.equals(this.reputationOptions, getConfigurationSetResponse.reputationOptions) &&
        Objects.equals(this.sendingOptions, getConfigurationSetResponse.sendingOptions) &&
        Objects.equals(this.tags, getConfigurationSetResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configurationSetName, trackingOptions, deliveryOptions, reputationOptions, sendingOptions, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetConfigurationSetResponse {\n");
    sb.append("    configurationSetName: ").append(toIndentedString(configurationSetName)).append("\n");
    sb.append("    trackingOptions: ").append(toIndentedString(trackingOptions)).append("\n");
    sb.append("    deliveryOptions: ").append(toIndentedString(deliveryOptions)).append("\n");
    sb.append("    reputationOptions: ").append(toIndentedString(reputationOptions)).append("\n");
    sb.append("    sendingOptions: ").append(toIndentedString(sendingOptions)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ConfigurationSetName");
    openapiFields.add("TrackingOptions");
    openapiFields.add("DeliveryOptions");
    openapiFields.add("ReputationOptions");
    openapiFields.add("SendingOptions");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetConfigurationSetResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetConfigurationSetResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetConfigurationSetResponse is not found in the empty JSON string", GetConfigurationSetResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetConfigurationSetResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetConfigurationSetResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ConfigurationSetName`
      if (jsonObj.get("ConfigurationSetName") != null && !jsonObj.get("ConfigurationSetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ConfigurationSetName"));
      }
      // validate the optional field `TrackingOptions`
      if (jsonObj.get("TrackingOptions") != null && !jsonObj.get("TrackingOptions").isJsonNull()) {
        GetConfigurationSetResponseTrackingOptions.validateJsonElement(jsonObj.get("TrackingOptions"));
      }
      // validate the optional field `DeliveryOptions`
      if (jsonObj.get("DeliveryOptions") != null && !jsonObj.get("DeliveryOptions").isJsonNull()) {
        GetConfigurationSetResponseDeliveryOptions.validateJsonElement(jsonObj.get("DeliveryOptions"));
      }
      // validate the optional field `ReputationOptions`
      if (jsonObj.get("ReputationOptions") != null && !jsonObj.get("ReputationOptions").isJsonNull()) {
        GetConfigurationSetResponseReputationOptions.validateJsonElement(jsonObj.get("ReputationOptions"));
      }
      // validate the optional field `SendingOptions`
      if (jsonObj.get("SendingOptions") != null && !jsonObj.get("SendingOptions").isJsonNull()) {
        GetConfigurationSetResponseSendingOptions.validateJsonElement(jsonObj.get("SendingOptions"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetConfigurationSetResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetConfigurationSetResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetConfigurationSetResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetConfigurationSetResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetConfigurationSetResponse>() {
           @Override
           public void write(JsonWriter out, GetConfigurationSetResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetConfigurationSetResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetConfigurationSetResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetConfigurationSetResponse
   * @throws IOException if the JSON string is invalid with respect to GetConfigurationSetResponse
   */
  public static GetConfigurationSetResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetConfigurationSetResponse.class);
  }

  /**
   * Convert an instance of GetConfigurationSetResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

