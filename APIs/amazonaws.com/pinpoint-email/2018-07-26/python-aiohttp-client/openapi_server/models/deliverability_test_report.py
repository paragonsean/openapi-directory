# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deliverability_test_status import DeliverabilityTestStatus
from openapi_server import util


class DeliverabilityTestReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report_id: str=None, report_name: str=None, subject: str=None, from_email_address: str=None, create_date: datetime=None, deliverability_test_status: DeliverabilityTestStatus=None):
        """DeliverabilityTestReport - a model defined in OpenAPI

        :param report_id: The report_id of this DeliverabilityTestReport.
        :param report_name: The report_name of this DeliverabilityTestReport.
        :param subject: The subject of this DeliverabilityTestReport.
        :param from_email_address: The from_email_address of this DeliverabilityTestReport.
        :param create_date: The create_date of this DeliverabilityTestReport.
        :param deliverability_test_status: The deliverability_test_status of this DeliverabilityTestReport.
        """
        self.openapi_types = {
            'report_id': str,
            'report_name': str,
            'subject': str,
            'from_email_address': str,
            'create_date': datetime,
            'deliverability_test_status': DeliverabilityTestStatus
        }

        self.attribute_map = {
            'report_id': 'ReportId',
            'report_name': 'ReportName',
            'subject': 'Subject',
            'from_email_address': 'FromEmailAddress',
            'create_date': 'CreateDate',
            'deliverability_test_status': 'DeliverabilityTestStatus'
        }

        self._report_id = report_id
        self._report_name = report_name
        self._subject = subject
        self._from_email_address = from_email_address
        self._create_date = create_date
        self._deliverability_test_status = deliverability_test_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliverabilityTestReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliverabilityTestReport of this DeliverabilityTestReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report_id(self):
        """Gets the report_id of this DeliverabilityTestReport.


        :return: The report_id of this DeliverabilityTestReport.
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this DeliverabilityTestReport.


        :param report_id: The report_id of this DeliverabilityTestReport.
        :type report_id: str
        """

        self._report_id = report_id

    @property
    def report_name(self):
        """Gets the report_name of this DeliverabilityTestReport.


        :return: The report_name of this DeliverabilityTestReport.
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this DeliverabilityTestReport.


        :param report_name: The report_name of this DeliverabilityTestReport.
        :type report_name: str
        """

        self._report_name = report_name

    @property
    def subject(self):
        """Gets the subject of this DeliverabilityTestReport.


        :return: The subject of this DeliverabilityTestReport.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this DeliverabilityTestReport.


        :param subject: The subject of this DeliverabilityTestReport.
        :type subject: str
        """

        self._subject = subject

    @property
    def from_email_address(self):
        """Gets the from_email_address of this DeliverabilityTestReport.


        :return: The from_email_address of this DeliverabilityTestReport.
        :rtype: str
        """
        return self._from_email_address

    @from_email_address.setter
    def from_email_address(self, from_email_address):
        """Sets the from_email_address of this DeliverabilityTestReport.


        :param from_email_address: The from_email_address of this DeliverabilityTestReport.
        :type from_email_address: str
        """

        self._from_email_address = from_email_address

    @property
    def create_date(self):
        """Gets the create_date of this DeliverabilityTestReport.


        :return: The create_date of this DeliverabilityTestReport.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this DeliverabilityTestReport.


        :param create_date: The create_date of this DeliverabilityTestReport.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def deliverability_test_status(self):
        """Gets the deliverability_test_status of this DeliverabilityTestReport.


        :return: The deliverability_test_status of this DeliverabilityTestReport.
        :rtype: DeliverabilityTestStatus
        """
        return self._deliverability_test_status

    @deliverability_test_status.setter
    def deliverability_test_status(self, deliverability_test_status):
        """Sets the deliverability_test_status of this DeliverabilityTestReport.


        :param deliverability_test_status: The deliverability_test_status of this DeliverabilityTestReport.
        :type deliverability_test_status: DeliverabilityTestStatus
        """

        self._deliverability_test_status = deliverability_test_status
