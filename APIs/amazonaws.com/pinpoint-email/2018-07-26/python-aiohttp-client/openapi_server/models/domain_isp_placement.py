# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainIspPlacement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, isp_name: str=None, inbox_raw_count: int=None, spam_raw_count: int=None, inbox_percentage: float=None, spam_percentage: float=None):
        """DomainIspPlacement - a model defined in OpenAPI

        :param isp_name: The isp_name of this DomainIspPlacement.
        :param inbox_raw_count: The inbox_raw_count of this DomainIspPlacement.
        :param spam_raw_count: The spam_raw_count of this DomainIspPlacement.
        :param inbox_percentage: The inbox_percentage of this DomainIspPlacement.
        :param spam_percentage: The spam_percentage of this DomainIspPlacement.
        """
        self.openapi_types = {
            'isp_name': str,
            'inbox_raw_count': int,
            'spam_raw_count': int,
            'inbox_percentage': float,
            'spam_percentage': float
        }

        self.attribute_map = {
            'isp_name': 'IspName',
            'inbox_raw_count': 'InboxRawCount',
            'spam_raw_count': 'SpamRawCount',
            'inbox_percentage': 'InboxPercentage',
            'spam_percentage': 'SpamPercentage'
        }

        self._isp_name = isp_name
        self._inbox_raw_count = inbox_raw_count
        self._spam_raw_count = spam_raw_count
        self._inbox_percentage = inbox_percentage
        self._spam_percentage = spam_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainIspPlacement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainIspPlacement of this DomainIspPlacement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def isp_name(self):
        """Gets the isp_name of this DomainIspPlacement.


        :return: The isp_name of this DomainIspPlacement.
        :rtype: str
        """
        return self._isp_name

    @isp_name.setter
    def isp_name(self, isp_name):
        """Sets the isp_name of this DomainIspPlacement.


        :param isp_name: The isp_name of this DomainIspPlacement.
        :type isp_name: str
        """

        self._isp_name = isp_name

    @property
    def inbox_raw_count(self):
        """Gets the inbox_raw_count of this DomainIspPlacement.


        :return: The inbox_raw_count of this DomainIspPlacement.
        :rtype: int
        """
        return self._inbox_raw_count

    @inbox_raw_count.setter
    def inbox_raw_count(self, inbox_raw_count):
        """Sets the inbox_raw_count of this DomainIspPlacement.


        :param inbox_raw_count: The inbox_raw_count of this DomainIspPlacement.
        :type inbox_raw_count: int
        """

        self._inbox_raw_count = inbox_raw_count

    @property
    def spam_raw_count(self):
        """Gets the spam_raw_count of this DomainIspPlacement.


        :return: The spam_raw_count of this DomainIspPlacement.
        :rtype: int
        """
        return self._spam_raw_count

    @spam_raw_count.setter
    def spam_raw_count(self, spam_raw_count):
        """Sets the spam_raw_count of this DomainIspPlacement.


        :param spam_raw_count: The spam_raw_count of this DomainIspPlacement.
        :type spam_raw_count: int
        """

        self._spam_raw_count = spam_raw_count

    @property
    def inbox_percentage(self):
        """Gets the inbox_percentage of this DomainIspPlacement.


        :return: The inbox_percentage of this DomainIspPlacement.
        :rtype: float
        """
        return self._inbox_percentage

    @inbox_percentage.setter
    def inbox_percentage(self, inbox_percentage):
        """Sets the inbox_percentage of this DomainIspPlacement.


        :param inbox_percentage: The inbox_percentage of this DomainIspPlacement.
        :type inbox_percentage: float
        """

        self._inbox_percentage = inbox_percentage

    @property
    def spam_percentage(self):
        """Gets the spam_percentage of this DomainIspPlacement.


        :return: The spam_percentage of this DomainIspPlacement.
        :rtype: float
        """
        return self._spam_percentage

    @spam_percentage.setter
    def spam_percentage(self, spam_percentage):
        """Sets the spam_percentage of this DomainIspPlacement.


        :param spam_percentage: The spam_percentage of this DomainIspPlacement.
        :type spam_percentage: float
        """

        self._spam_percentage = spam_percentage
