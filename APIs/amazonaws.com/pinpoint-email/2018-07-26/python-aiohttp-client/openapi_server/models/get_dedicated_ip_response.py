# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_dedicated_ip_response_dedicated_ip import GetDedicatedIpResponseDedicatedIp
from openapi_server import util


class GetDedicatedIpResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dedicated_ip: GetDedicatedIpResponseDedicatedIp=None):
        """GetDedicatedIpResponse - a model defined in OpenAPI

        :param dedicated_ip: The dedicated_ip of this GetDedicatedIpResponse.
        """
        self.openapi_types = {
            'dedicated_ip': GetDedicatedIpResponseDedicatedIp
        }

        self.attribute_map = {
            'dedicated_ip': 'DedicatedIp'
        }

        self._dedicated_ip = dedicated_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDedicatedIpResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDedicatedIpResponse of this GetDedicatedIpResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dedicated_ip(self):
        """Gets the dedicated_ip of this GetDedicatedIpResponse.


        :return: The dedicated_ip of this GetDedicatedIpResponse.
        :rtype: GetDedicatedIpResponseDedicatedIp
        """
        return self._dedicated_ip

    @dedicated_ip.setter
    def dedicated_ip(self, dedicated_ip):
        """Sets the dedicated_ip of this GetDedicatedIpResponse.


        :param dedicated_ip: The dedicated_ip of this GetDedicatedIpResponse.
        :type dedicated_ip: GetDedicatedIpResponseDedicatedIp
        """

        self._dedicated_ip = dedicated_ip
