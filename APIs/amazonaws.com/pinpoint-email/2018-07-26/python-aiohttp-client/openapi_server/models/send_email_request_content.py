# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_deliverability_test_report_request_content_raw import CreateDeliverabilityTestReportRequestContentRaw
from openapi_server.models.create_deliverability_test_report_request_content_simple import CreateDeliverabilityTestReportRequestContentSimple
from openapi_server.models.create_deliverability_test_report_request_content_template import CreateDeliverabilityTestReportRequestContentTemplate
from openapi_server import util


class SendEmailRequestContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, simple: CreateDeliverabilityTestReportRequestContentSimple=None, raw: CreateDeliverabilityTestReportRequestContentRaw=None, template: CreateDeliverabilityTestReportRequestContentTemplate=None):
        """SendEmailRequestContent - a model defined in OpenAPI

        :param simple: The simple of this SendEmailRequestContent.
        :param raw: The raw of this SendEmailRequestContent.
        :param template: The template of this SendEmailRequestContent.
        """
        self.openapi_types = {
            'simple': CreateDeliverabilityTestReportRequestContentSimple,
            'raw': CreateDeliverabilityTestReportRequestContentRaw,
            'template': CreateDeliverabilityTestReportRequestContentTemplate
        }

        self.attribute_map = {
            'simple': 'Simple',
            'raw': 'Raw',
            'template': 'Template'
        }

        self._simple = simple
        self._raw = raw
        self._template = template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendEmailRequestContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendEmailRequest_Content of this SendEmailRequestContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def simple(self):
        """Gets the simple of this SendEmailRequestContent.


        :return: The simple of this SendEmailRequestContent.
        :rtype: CreateDeliverabilityTestReportRequestContentSimple
        """
        return self._simple

    @simple.setter
    def simple(self, simple):
        """Sets the simple of this SendEmailRequestContent.


        :param simple: The simple of this SendEmailRequestContent.
        :type simple: CreateDeliverabilityTestReportRequestContentSimple
        """

        self._simple = simple

    @property
    def raw(self):
        """Gets the raw of this SendEmailRequestContent.


        :return: The raw of this SendEmailRequestContent.
        :rtype: CreateDeliverabilityTestReportRequestContentRaw
        """
        return self._raw

    @raw.setter
    def raw(self, raw):
        """Sets the raw of this SendEmailRequestContent.


        :param raw: The raw of this SendEmailRequestContent.
        :type raw: CreateDeliverabilityTestReportRequestContentRaw
        """

        self._raw = raw

    @property
    def template(self):
        """Gets the template of this SendEmailRequestContent.


        :return: The template of this SendEmailRequestContent.
        :rtype: CreateDeliverabilityTestReportRequestContentTemplate
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this SendEmailRequestContent.


        :param template: The template of this SendEmailRequestContent.
        :type template: CreateDeliverabilityTestReportRequestContentTemplate
        """

        self._template = template
