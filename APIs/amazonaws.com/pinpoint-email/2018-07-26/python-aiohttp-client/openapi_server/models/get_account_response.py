# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_account_response_send_quota import GetAccountResponseSendQuota
from openapi_server import util


class GetAccountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, send_quota: GetAccountResponseSendQuota=None, sending_enabled: bool=None, dedicated_ip_auto_warmup_enabled: bool=None, enforcement_status: str=None, production_access_enabled: bool=None):
        """GetAccountResponse - a model defined in OpenAPI

        :param send_quota: The send_quota of this GetAccountResponse.
        :param sending_enabled: The sending_enabled of this GetAccountResponse.
        :param dedicated_ip_auto_warmup_enabled: The dedicated_ip_auto_warmup_enabled of this GetAccountResponse.
        :param enforcement_status: The enforcement_status of this GetAccountResponse.
        :param production_access_enabled: The production_access_enabled of this GetAccountResponse.
        """
        self.openapi_types = {
            'send_quota': GetAccountResponseSendQuota,
            'sending_enabled': bool,
            'dedicated_ip_auto_warmup_enabled': bool,
            'enforcement_status': str,
            'production_access_enabled': bool
        }

        self.attribute_map = {
            'send_quota': 'SendQuota',
            'sending_enabled': 'SendingEnabled',
            'dedicated_ip_auto_warmup_enabled': 'DedicatedIpAutoWarmupEnabled',
            'enforcement_status': 'EnforcementStatus',
            'production_access_enabled': 'ProductionAccessEnabled'
        }

        self._send_quota = send_quota
        self._sending_enabled = sending_enabled
        self._dedicated_ip_auto_warmup_enabled = dedicated_ip_auto_warmup_enabled
        self._enforcement_status = enforcement_status
        self._production_access_enabled = production_access_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAccountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAccountResponse of this GetAccountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def send_quota(self):
        """Gets the send_quota of this GetAccountResponse.


        :return: The send_quota of this GetAccountResponse.
        :rtype: GetAccountResponseSendQuota
        """
        return self._send_quota

    @send_quota.setter
    def send_quota(self, send_quota):
        """Sets the send_quota of this GetAccountResponse.


        :param send_quota: The send_quota of this GetAccountResponse.
        :type send_quota: GetAccountResponseSendQuota
        """

        self._send_quota = send_quota

    @property
    def sending_enabled(self):
        """Gets the sending_enabled of this GetAccountResponse.


        :return: The sending_enabled of this GetAccountResponse.
        :rtype: bool
        """
        return self._sending_enabled

    @sending_enabled.setter
    def sending_enabled(self, sending_enabled):
        """Sets the sending_enabled of this GetAccountResponse.


        :param sending_enabled: The sending_enabled of this GetAccountResponse.
        :type sending_enabled: bool
        """

        self._sending_enabled = sending_enabled

    @property
    def dedicated_ip_auto_warmup_enabled(self):
        """Gets the dedicated_ip_auto_warmup_enabled of this GetAccountResponse.


        :return: The dedicated_ip_auto_warmup_enabled of this GetAccountResponse.
        :rtype: bool
        """
        return self._dedicated_ip_auto_warmup_enabled

    @dedicated_ip_auto_warmup_enabled.setter
    def dedicated_ip_auto_warmup_enabled(self, dedicated_ip_auto_warmup_enabled):
        """Sets the dedicated_ip_auto_warmup_enabled of this GetAccountResponse.


        :param dedicated_ip_auto_warmup_enabled: The dedicated_ip_auto_warmup_enabled of this GetAccountResponse.
        :type dedicated_ip_auto_warmup_enabled: bool
        """

        self._dedicated_ip_auto_warmup_enabled = dedicated_ip_auto_warmup_enabled

    @property
    def enforcement_status(self):
        """Gets the enforcement_status of this GetAccountResponse.


        :return: The enforcement_status of this GetAccountResponse.
        :rtype: str
        """
        return self._enforcement_status

    @enforcement_status.setter
    def enforcement_status(self, enforcement_status):
        """Sets the enforcement_status of this GetAccountResponse.


        :param enforcement_status: The enforcement_status of this GetAccountResponse.
        :type enforcement_status: str
        """

        self._enforcement_status = enforcement_status

    @property
    def production_access_enabled(self):
        """Gets the production_access_enabled of this GetAccountResponse.


        :return: The production_access_enabled of this GetAccountResponse.
        :rtype: bool
        """
        return self._production_access_enabled

    @production_access_enabled.setter
    def production_access_enabled(self, production_access_enabled):
        """Sets the production_access_enabled of this GetAccountResponse.


        :param production_access_enabled: The production_access_enabled of this GetAccountResponse.
        :type production_access_enabled: bool
        """

        self._production_access_enabled = production_access_enabled
