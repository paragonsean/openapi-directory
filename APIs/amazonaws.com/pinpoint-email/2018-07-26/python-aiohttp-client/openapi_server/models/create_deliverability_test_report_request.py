# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_deliverability_test_report_request_content import CreateDeliverabilityTestReportRequestContent
from openapi_server.models.tag import Tag
from openapi_server import util


class CreateDeliverabilityTestReportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report_name: str=None, from_email_address: str=None, content: CreateDeliverabilityTestReportRequestContent=None, tags: List[Tag]=None):
        """CreateDeliverabilityTestReportRequest - a model defined in OpenAPI

        :param report_name: The report_name of this CreateDeliverabilityTestReportRequest.
        :param from_email_address: The from_email_address of this CreateDeliverabilityTestReportRequest.
        :param content: The content of this CreateDeliverabilityTestReportRequest.
        :param tags: The tags of this CreateDeliverabilityTestReportRequest.
        """
        self.openapi_types = {
            'report_name': str,
            'from_email_address': str,
            'content': CreateDeliverabilityTestReportRequestContent,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'report_name': 'ReportName',
            'from_email_address': 'FromEmailAddress',
            'content': 'Content',
            'tags': 'Tags'
        }

        self._report_name = report_name
        self._from_email_address = from_email_address
        self._content = content
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDeliverabilityTestReportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDeliverabilityTestReport_request of this CreateDeliverabilityTestReportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report_name(self):
        """Gets the report_name of this CreateDeliverabilityTestReportRequest.

        A name that helps you identify a report generated by the Deliverability dashboard.

        :return: The report_name of this CreateDeliverabilityTestReportRequest.
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this CreateDeliverabilityTestReportRequest.

        A name that helps you identify a report generated by the Deliverability dashboard.

        :param report_name: The report_name of this CreateDeliverabilityTestReportRequest.
        :type report_name: str
        """

        self._report_name = report_name

    @property
    def from_email_address(self):
        """Gets the from_email_address of this CreateDeliverabilityTestReportRequest.

        The email address that the predictive inbox placement test email was sent from.

        :return: The from_email_address of this CreateDeliverabilityTestReportRequest.
        :rtype: str
        """
        return self._from_email_address

    @from_email_address.setter
    def from_email_address(self, from_email_address):
        """Sets the from_email_address of this CreateDeliverabilityTestReportRequest.

        The email address that the predictive inbox placement test email was sent from.

        :param from_email_address: The from_email_address of this CreateDeliverabilityTestReportRequest.
        :type from_email_address: str
        """
        if from_email_address is None:
            raise ValueError("Invalid value for `from_email_address`, must not be `None`")

        self._from_email_address = from_email_address

    @property
    def content(self):
        """Gets the content of this CreateDeliverabilityTestReportRequest.


        :return: The content of this CreateDeliverabilityTestReportRequest.
        :rtype: CreateDeliverabilityTestReportRequestContent
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this CreateDeliverabilityTestReportRequest.


        :param content: The content of this CreateDeliverabilityTestReportRequest.
        :type content: CreateDeliverabilityTestReportRequestContent
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")

        self._content = content

    @property
    def tags(self):
        """Gets the tags of this CreateDeliverabilityTestReportRequest.

        An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.

        :return: The tags of this CreateDeliverabilityTestReportRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateDeliverabilityTestReportRequest.

        An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.

        :param tags: The tags of this CreateDeliverabilityTestReportRequest.
        :type tags: List[Tag]
        """

        self._tags = tags
