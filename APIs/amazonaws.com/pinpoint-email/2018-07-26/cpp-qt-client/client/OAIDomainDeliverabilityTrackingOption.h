/**
 * Amazon Pinpoint Email Service
 * <fullname>Amazon Pinpoint Email Service</fullname> <p>Welcome to the <i>Amazon Pinpoint Email API Reference</i>. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.</p> <p> <a href=\"https://aws.amazon.com/pinpoint\">Amazon Pinpoint</a> is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\">Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.</p> <p>The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region\">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To learn more about AWS Regions, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\">Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see <a href=\"http://aws.amazon.com/about-aws/global-infrastructure/\">AWS Global Infrastructure</a>.</p>
 *
 * The version of the OpenAPI document: 2018-07-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainDeliverabilityTrackingOption.h
 *
 * An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.
 */

#ifndef OAIDomainDeliverabilityTrackingOption_H
#define OAIDomainDeliverabilityTrackingOption_H

#include <QJsonObject>

#include "OAIDomainDeliverabilityTrackingOption_InboxPlacementTrackingOption.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainDeliverabilityTrackingOption_InboxPlacementTrackingOption;

class OAIDomainDeliverabilityTrackingOption : public OAIObject {
public:
    OAIDomainDeliverabilityTrackingOption();
    OAIDomainDeliverabilityTrackingOption(QString json);
    ~OAIDomainDeliverabilityTrackingOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QDateTime getSubscriptionStartDate() const;
    void setSubscriptionStartDate(const QDateTime &subscription_start_date);
    bool is_subscription_start_date_Set() const;
    bool is_subscription_start_date_Valid() const;

    OAIDomainDeliverabilityTrackingOption_InboxPlacementTrackingOption getInboxPlacementTrackingOption() const;
    void setInboxPlacementTrackingOption(const OAIDomainDeliverabilityTrackingOption_InboxPlacementTrackingOption &inbox_placement_tracking_option);
    bool is_inbox_placement_tracking_option_Set() const;
    bool is_inbox_placement_tracking_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QDateTime m_subscription_start_date;
    bool m_subscription_start_date_isSet;
    bool m_subscription_start_date_isValid;

    OAIDomainDeliverabilityTrackingOption_InboxPlacementTrackingOption m_inbox_placement_tracking_option;
    bool m_inbox_placement_tracking_option_isSet;
    bool m_inbox_placement_tracking_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainDeliverabilityTrackingOption)

#endif // OAIDomainDeliverabilityTrackingOption_H
