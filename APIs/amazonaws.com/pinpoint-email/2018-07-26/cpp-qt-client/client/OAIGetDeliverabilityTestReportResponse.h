/**
 * Amazon Pinpoint Email Service
 * <fullname>Amazon Pinpoint Email Service</fullname> <p>Welcome to the <i>Amazon Pinpoint Email API Reference</i>. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.</p> <p> <a href=\"https://aws.amazon.com/pinpoint\">Amazon Pinpoint</a> is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.</p> <p>If you're new to Amazon Pinpoint, you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html\">Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint Developer Guide</i> provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.</p> <p>The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region\">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To learn more about AWS Regions, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\">Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see <a href=\"http://aws.amazon.com/about-aws/global-infrastructure/\">AWS Global Infrastructure</a>.</p>
 *
 * The version of the OpenAPI document: 2018-07-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeliverabilityTestReportResponse.h
 *
 * The results of the predictive inbox placement test.
 */

#ifndef OAIGetDeliverabilityTestReportResponse_H
#define OAIGetDeliverabilityTestReportResponse_H

#include <QJsonObject>

#include "OAIGetDeliverabilityTestReportResponse_DeliverabilityTestReport.h"
#include "OAIGetDeliverabilityTestReportResponse_OverallPlacement.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDeliverabilityTestReportResponse_DeliverabilityTestReport;
class OAIGetDeliverabilityTestReportResponse_OverallPlacement;

class OAIGetDeliverabilityTestReportResponse : public OAIObject {
public:
    OAIGetDeliverabilityTestReportResponse();
    OAIGetDeliverabilityTestReportResponse(QString json);
    ~OAIGetDeliverabilityTestReportResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetDeliverabilityTestReportResponse_DeliverabilityTestReport getDeliverabilityTestReport() const;
    void setDeliverabilityTestReport(const OAIGetDeliverabilityTestReportResponse_DeliverabilityTestReport &deliverability_test_report);
    bool is_deliverability_test_report_Set() const;
    bool is_deliverability_test_report_Valid() const;

    OAIGetDeliverabilityTestReportResponse_OverallPlacement getOverallPlacement() const;
    void setOverallPlacement(const OAIGetDeliverabilityTestReportResponse_OverallPlacement &overall_placement);
    bool is_overall_placement_Set() const;
    bool is_overall_placement_Valid() const;

    QList getIspPlacements() const;
    void setIspPlacements(const QList &isp_placements);
    bool is_isp_placements_Set() const;
    bool is_isp_placements_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetDeliverabilityTestReportResponse_DeliverabilityTestReport m_deliverability_test_report;
    bool m_deliverability_test_report_isSet;
    bool m_deliverability_test_report_isValid;

    OAIGetDeliverabilityTestReportResponse_OverallPlacement m_overall_placement;
    bool m_overall_placement_isSet;
    bool m_overall_placement_isValid;

    QList m_isp_placements;
    bool m_isp_placements_isSet;
    bool m_isp_placements_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeliverabilityTestReportResponse)

#endif // OAIGetDeliverabilityTestReportResponse_H
