/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubtotalOptions_TotalCellStyle.h
 *
 * 
 */

#ifndef OAISubtotalOptions_TotalCellStyle_H
#define OAISubtotalOptions_TotalCellStyle_H

#include <QJsonObject>

#include "OAIHorizontalTextAlignment.h"
#include "OAITableCellStyle_Border.h"
#include "OAITableCellStyle_FontConfiguration.h"
#include "OAITextWrap.h"
#include "OAIVerticalTextAlignment.h"
#include "OAIVisibility.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableCellStyle_FontConfiguration;
class OAITableCellStyle_Border;

class OAISubtotalOptions_TotalCellStyle : public OAIObject {
public:
    OAISubtotalOptions_TotalCellStyle();
    OAISubtotalOptions_TotalCellStyle(QString json);
    ~OAISubtotalOptions_TotalCellStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    OAITableCellStyle_FontConfiguration getFontConfiguration() const;
    void setFontConfiguration(const OAITableCellStyle_FontConfiguration &font_configuration);
    bool is_font_configuration_Set() const;
    bool is_font_configuration_Valid() const;

    OAITextWrap getTextWrap() const;
    void setTextWrap(const OAITextWrap &text_wrap);
    bool is_text_wrap_Set() const;
    bool is_text_wrap_Valid() const;

    OAIHorizontalTextAlignment getHorizontalTextAlignment() const;
    void setHorizontalTextAlignment(const OAIHorizontalTextAlignment &horizontal_text_alignment);
    bool is_horizontal_text_alignment_Set() const;
    bool is_horizontal_text_alignment_Valid() const;

    OAIVerticalTextAlignment getVerticalTextAlignment() const;
    void setVerticalTextAlignment(const OAIVerticalTextAlignment &vertical_text_alignment);
    bool is_vertical_text_alignment_Set() const;
    bool is_vertical_text_alignment_Valid() const;

    QString getBackgroundColor() const;
    void setBackgroundColor(const QString &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAITableCellStyle_Border getBorder() const;
    void setBorder(const OAITableCellStyle_Border &border);
    bool is_border_Set() const;
    bool is_border_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    OAITableCellStyle_FontConfiguration m_font_configuration;
    bool m_font_configuration_isSet;
    bool m_font_configuration_isValid;

    OAITextWrap m_text_wrap;
    bool m_text_wrap_isSet;
    bool m_text_wrap_isValid;

    OAIHorizontalTextAlignment m_horizontal_text_alignment;
    bool m_horizontal_text_alignment_isSet;
    bool m_horizontal_text_alignment_isValid;

    OAIVerticalTextAlignment m_vertical_text_alignment;
    bool m_vertical_text_alignment_isSet;
    bool m_vertical_text_alignment_isValid;

    QString m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAITableCellStyle_Border m_border;
    bool m_border_isSet;
    bool m_border_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubtotalOptions_TotalCellStyle)

#endif // OAISubtotalOptions_TotalCellStyle_H
