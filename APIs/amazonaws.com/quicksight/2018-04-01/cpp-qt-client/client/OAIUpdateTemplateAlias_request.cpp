/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTemplateAlias_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTemplateAlias_request::OAIUpdateTemplateAlias_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTemplateAlias_request::OAIUpdateTemplateAlias_request() {
    this->initializeModel();
}

OAIUpdateTemplateAlias_request::~OAIUpdateTemplateAlias_request() {}

void OAIUpdateTemplateAlias_request::initializeModel() {

    m_template_version_number_isSet = false;
    m_template_version_number_isValid = false;
}

void OAIUpdateTemplateAlias_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTemplateAlias_request::fromJsonObject(QJsonObject json) {

    m_template_version_number_isValid = ::OpenAPI::fromJsonValue(m_template_version_number, json[QString("TemplateVersionNumber")]);
    m_template_version_number_isSet = !json[QString("TemplateVersionNumber")].isNull() && m_template_version_number_isValid;
}

QString OAIUpdateTemplateAlias_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTemplateAlias_request::asJsonObject() const {
    QJsonObject obj;
    if (m_template_version_number_isSet) {
        obj.insert(QString("TemplateVersionNumber"), ::OpenAPI::toJsonValue(m_template_version_number));
    }
    return obj;
}

qint32 OAIUpdateTemplateAlias_request::getTemplateVersionNumber() const {
    return m_template_version_number;
}
void OAIUpdateTemplateAlias_request::setTemplateVersionNumber(const qint32 &template_version_number) {
    m_template_version_number = template_version_number;
    m_template_version_number_isSet = true;
}

bool OAIUpdateTemplateAlias_request::is_template_version_number_Set() const{
    return m_template_version_number_isSet;
}

bool OAIUpdateTemplateAlias_request::is_template_version_number_Valid() const{
    return m_template_version_number_isValid;
}

bool OAIUpdateTemplateAlias_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_template_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTemplateAlias_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_template_version_number_isValid && true;
}

} // namespace OpenAPI
