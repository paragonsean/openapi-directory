/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGaugeChartConditionalFormattingOption.h
 *
 * Conditional formatting options of a &lt;code&gt;GaugeChartVisual&lt;/code&gt;.
 */

#ifndef OAIGaugeChartConditionalFormattingOption_H
#define OAIGaugeChartConditionalFormattingOption_H

#include <QJsonObject>

#include "OAIGaugeChartConditionalFormattingOption_Arc.h"
#include "OAIGaugeChartConditionalFormattingOption_PrimaryValue.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGaugeChartConditionalFormattingOption_PrimaryValue;
class OAIGaugeChartConditionalFormattingOption_Arc;

class OAIGaugeChartConditionalFormattingOption : public OAIObject {
public:
    OAIGaugeChartConditionalFormattingOption();
    OAIGaugeChartConditionalFormattingOption(QString json);
    ~OAIGaugeChartConditionalFormattingOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGaugeChartConditionalFormattingOption_PrimaryValue getPrimaryValue() const;
    void setPrimaryValue(const OAIGaugeChartConditionalFormattingOption_PrimaryValue &primary_value);
    bool is_primary_value_Set() const;
    bool is_primary_value_Valid() const;

    OAIGaugeChartConditionalFormattingOption_Arc getArc() const;
    void setArc(const OAIGaugeChartConditionalFormattingOption_Arc &arc);
    bool is_arc_Set() const;
    bool is_arc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGaugeChartConditionalFormattingOption_PrimaryValue m_primary_value;
    bool m_primary_value_isSet;
    bool m_primary_value_isValid;

    OAIGaugeChartConditionalFormattingOption_Arc m_arc;
    bool m_arc_isSet;
    bool m_arc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGaugeChartConditionalFormattingOption)

#endif // OAIGaugeChartConditionalFormattingOption_H
