/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateColumnsOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateColumnsOperation::OAICreateColumnsOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateColumnsOperation::OAICreateColumnsOperation() {
    this->initializeModel();
}

OAICreateColumnsOperation::~OAICreateColumnsOperation() {}

void OAICreateColumnsOperation::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;
}

void OAICreateColumnsOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateColumnsOperation::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("Columns")]);
    m_columns_isSet = !json[QString("Columns")].isNull() && m_columns_isValid;
}

QString OAICreateColumnsOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateColumnsOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.isSet()) {
        obj.insert(QString("Columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    return obj;
}

QList OAICreateColumnsOperation::getColumns() const {
    return m_columns;
}
void OAICreateColumnsOperation::setColumns(const QList &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAICreateColumnsOperation::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAICreateColumnsOperation::is_columns_Valid() const{
    return m_columns_isValid;
}

bool OAICreateColumnsOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateColumnsOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_columns_isValid && true;
}

} // namespace OpenAPI
