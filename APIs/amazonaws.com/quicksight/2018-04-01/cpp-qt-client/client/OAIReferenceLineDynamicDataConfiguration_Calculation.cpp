/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceLineDynamicDataConfiguration_Calculation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceLineDynamicDataConfiguration_Calculation::OAIReferenceLineDynamicDataConfiguration_Calculation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceLineDynamicDataConfiguration_Calculation::OAIReferenceLineDynamicDataConfiguration_Calculation() {
    this->initializeModel();
}

OAIReferenceLineDynamicDataConfiguration_Calculation::~OAIReferenceLineDynamicDataConfiguration_Calculation() {}

void OAIReferenceLineDynamicDataConfiguration_Calculation::initializeModel() {

    m_simple_numerical_aggregation_isSet = false;
    m_simple_numerical_aggregation_isValid = false;

    m_percentile_aggregation_isSet = false;
    m_percentile_aggregation_isValid = false;
}

void OAIReferenceLineDynamicDataConfiguration_Calculation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReferenceLineDynamicDataConfiguration_Calculation::fromJsonObject(QJsonObject json) {

    m_simple_numerical_aggregation_isValid = ::OpenAPI::fromJsonValue(m_simple_numerical_aggregation, json[QString("SimpleNumericalAggregation")]);
    m_simple_numerical_aggregation_isSet = !json[QString("SimpleNumericalAggregation")].isNull() && m_simple_numerical_aggregation_isValid;

    m_percentile_aggregation_isValid = ::OpenAPI::fromJsonValue(m_percentile_aggregation, json[QString("PercentileAggregation")]);
    m_percentile_aggregation_isSet = !json[QString("PercentileAggregation")].isNull() && m_percentile_aggregation_isValid;
}

QString OAIReferenceLineDynamicDataConfiguration_Calculation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReferenceLineDynamicDataConfiguration_Calculation::asJsonObject() const {
    QJsonObject obj;
    if (m_simple_numerical_aggregation.isSet()) {
        obj.insert(QString("SimpleNumericalAggregation"), ::OpenAPI::toJsonValue(m_simple_numerical_aggregation));
    }
    if (m_percentile_aggregation.isSet()) {
        obj.insert(QString("PercentileAggregation"), ::OpenAPI::toJsonValue(m_percentile_aggregation));
    }
    return obj;
}

OAISimpleNumericalAggregationFunction OAIReferenceLineDynamicDataConfiguration_Calculation::getSimpleNumericalAggregation() const {
    return m_simple_numerical_aggregation;
}
void OAIReferenceLineDynamicDataConfiguration_Calculation::setSimpleNumericalAggregation(const OAISimpleNumericalAggregationFunction &simple_numerical_aggregation) {
    m_simple_numerical_aggregation = simple_numerical_aggregation;
    m_simple_numerical_aggregation_isSet = true;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::is_simple_numerical_aggregation_Set() const{
    return m_simple_numerical_aggregation_isSet;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::is_simple_numerical_aggregation_Valid() const{
    return m_simple_numerical_aggregation_isValid;
}

OAINumericalAggregationFunction_PercentileAggregation OAIReferenceLineDynamicDataConfiguration_Calculation::getPercentileAggregation() const {
    return m_percentile_aggregation;
}
void OAIReferenceLineDynamicDataConfiguration_Calculation::setPercentileAggregation(const OAINumericalAggregationFunction_PercentileAggregation &percentile_aggregation) {
    m_percentile_aggregation = percentile_aggregation;
    m_percentile_aggregation_isSet = true;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::is_percentile_aggregation_Set() const{
    return m_percentile_aggregation_isSet;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::is_percentile_aggregation_Valid() const{
    return m_percentile_aggregation_isValid;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_simple_numerical_aggregation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentile_aggregation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReferenceLineDynamicDataConfiguration_Calculation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
