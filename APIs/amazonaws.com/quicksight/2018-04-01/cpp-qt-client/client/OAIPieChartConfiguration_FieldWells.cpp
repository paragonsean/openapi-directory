/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPieChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPieChartConfiguration_FieldWells::OAIPieChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPieChartConfiguration_FieldWells::OAIPieChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAIPieChartConfiguration_FieldWells::~OAIPieChartConfiguration_FieldWells() {}

void OAIPieChartConfiguration_FieldWells::initializeModel() {

    m_pie_chart_aggregated_field_wells_isSet = false;
    m_pie_chart_aggregated_field_wells_isValid = false;
}

void OAIPieChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPieChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_pie_chart_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_pie_chart_aggregated_field_wells, json[QString("PieChartAggregatedFieldWells")]);
    m_pie_chart_aggregated_field_wells_isSet = !json[QString("PieChartAggregatedFieldWells")].isNull() && m_pie_chart_aggregated_field_wells_isValid;
}

QString OAIPieChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPieChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_pie_chart_aggregated_field_wells.isSet()) {
        obj.insert(QString("PieChartAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_pie_chart_aggregated_field_wells));
    }
    return obj;
}

OAIPieChartFieldWells_PieChartAggregatedFieldWells OAIPieChartConfiguration_FieldWells::getPieChartAggregatedFieldWells() const {
    return m_pie_chart_aggregated_field_wells;
}
void OAIPieChartConfiguration_FieldWells::setPieChartAggregatedFieldWells(const OAIPieChartFieldWells_PieChartAggregatedFieldWells &pie_chart_aggregated_field_wells) {
    m_pie_chart_aggregated_field_wells = pie_chart_aggregated_field_wells;
    m_pie_chart_aggregated_field_wells_isSet = true;
}

bool OAIPieChartConfiguration_FieldWells::is_pie_chart_aggregated_field_wells_Set() const{
    return m_pie_chart_aggregated_field_wells_isSet;
}

bool OAIPieChartConfiguration_FieldWells::is_pie_chart_aggregated_field_wells_Valid() const{
    return m_pie_chart_aggregated_field_wells_isValid;
}

bool OAIPieChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pie_chart_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPieChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
