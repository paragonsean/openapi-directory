/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartDashboardSnapshotJob_request_UserConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartDashboardSnapshotJob_request_UserConfiguration::OAIStartDashboardSnapshotJob_request_UserConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartDashboardSnapshotJob_request_UserConfiguration::OAIStartDashboardSnapshotJob_request_UserConfiguration() {
    this->initializeModel();
}

OAIStartDashboardSnapshotJob_request_UserConfiguration::~OAIStartDashboardSnapshotJob_request_UserConfiguration() {}

void OAIStartDashboardSnapshotJob_request_UserConfiguration::initializeModel() {

    m_anonymous_users_isSet = false;
    m_anonymous_users_isValid = false;
}

void OAIStartDashboardSnapshotJob_request_UserConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartDashboardSnapshotJob_request_UserConfiguration::fromJsonObject(QJsonObject json) {

    m_anonymous_users_isValid = ::OpenAPI::fromJsonValue(m_anonymous_users, json[QString("AnonymousUsers")]);
    m_anonymous_users_isSet = !json[QString("AnonymousUsers")].isNull() && m_anonymous_users_isValid;
}

QString OAIStartDashboardSnapshotJob_request_UserConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartDashboardSnapshotJob_request_UserConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_anonymous_users.isSet()) {
        obj.insert(QString("AnonymousUsers"), ::OpenAPI::toJsonValue(m_anonymous_users));
    }
    return obj;
}

QList OAIStartDashboardSnapshotJob_request_UserConfiguration::getAnonymousUsers() const {
    return m_anonymous_users;
}
void OAIStartDashboardSnapshotJob_request_UserConfiguration::setAnonymousUsers(const QList &anonymous_users) {
    m_anonymous_users = anonymous_users;
    m_anonymous_users_isSet = true;
}

bool OAIStartDashboardSnapshotJob_request_UserConfiguration::is_anonymous_users_Set() const{
    return m_anonymous_users_isSet;
}

bool OAIStartDashboardSnapshotJob_request_UserConfiguration::is_anonymous_users_Valid() const{
    return m_anonymous_users_isValid;
}

bool OAIStartDashboardSnapshotJob_request_UserConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anonymous_users.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartDashboardSnapshotJob_request_UserConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
