/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeospatialHeatmapColorScale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeospatialHeatmapColorScale::OAIGeospatialHeatmapColorScale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeospatialHeatmapColorScale::OAIGeospatialHeatmapColorScale() {
    this->initializeModel();
}

OAIGeospatialHeatmapColorScale::~OAIGeospatialHeatmapColorScale() {}

void OAIGeospatialHeatmapColorScale::initializeModel() {

    m_colors_isSet = false;
    m_colors_isValid = false;
}

void OAIGeospatialHeatmapColorScale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeospatialHeatmapColorScale::fromJsonObject(QJsonObject json) {

    m_colors_isValid = ::OpenAPI::fromJsonValue(m_colors, json[QString("Colors")]);
    m_colors_isSet = !json[QString("Colors")].isNull() && m_colors_isValid;
}

QString OAIGeospatialHeatmapColorScale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeospatialHeatmapColorScale::asJsonObject() const {
    QJsonObject obj;
    if (m_colors.isSet()) {
        obj.insert(QString("Colors"), ::OpenAPI::toJsonValue(m_colors));
    }
    return obj;
}

QList OAIGeospatialHeatmapColorScale::getColors() const {
    return m_colors;
}
void OAIGeospatialHeatmapColorScale::setColors(const QList &colors) {
    m_colors = colors;
    m_colors_isSet = true;
}

bool OAIGeospatialHeatmapColorScale::is_colors_Set() const{
    return m_colors_isSet;
}

bool OAIGeospatialHeatmapColorScale::is_colors_Valid() const{
    return m_colors_isValid;
}

bool OAIGeospatialHeatmapColorScale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_colors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeospatialHeatmapColorScale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
