/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDashboardResponse_Dashboard.h
 *
 * 
 */

#ifndef OAIDescribeDashboardResponse_Dashboard_H
#define OAIDescribeDashboardResponse_Dashboard_H

#include <QJsonObject>

#include "OAIDashboard_Version.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashboard_Version;

class OAIDescribeDashboardResponse_Dashboard : public OAIObject {
public:
    OAIDescribeDashboardResponse_Dashboard();
    OAIDescribeDashboardResponse_Dashboard(QString json);
    ~OAIDescribeDashboardResponse_Dashboard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDashboardId() const;
    void setDashboardId(const QString &dashboard_id);
    bool is_dashboard_id_Set() const;
    bool is_dashboard_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDashboard_Version getVersion() const;
    void setVersion(const OAIDashboard_Version &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastPublishedTime() const;
    void setLastPublishedTime(const QDateTime &last_published_time);
    bool is_last_published_time_Set() const;
    bool is_last_published_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dashboard_id;
    bool m_dashboard_id_isSet;
    bool m_dashboard_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDashboard_Version m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_published_time;
    bool m_last_published_time_isSet;
    bool m_last_published_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDashboardResponse_Dashboard)

#endif // OAIDescribeDashboardResponse_Dashboard_H
