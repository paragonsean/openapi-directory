/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopBottomMoversComputation.h
 *
 * The top movers and bottom movers computation setup.
 */

#ifndef OAITopBottomMoversComputation_H
#define OAITopBottomMoversComputation_H

#include <QJsonObject>

#include "OAITopBottomComputationType.h"
#include "OAITopBottomMoversComputation_Time.h"
#include "OAITopBottomRankedComputation_Category.h"
#include "OAITopBottomRankedComputation_Value.h"
#include "OAITopBottomSortOrder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopBottomMoversComputation_Time;
class OAITopBottomRankedComputation_Category;
class OAITopBottomRankedComputation_Value;

class OAITopBottomMoversComputation : public OAIObject {
public:
    OAITopBottomMoversComputation();
    OAITopBottomMoversComputation(QString json);
    ~OAITopBottomMoversComputation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComputationId() const;
    void setComputationId(const QString &computation_id);
    bool is_computation_id_Set() const;
    bool is_computation_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAITopBottomMoversComputation_Time getTime() const;
    void setTime(const OAITopBottomMoversComputation_Time &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    OAITopBottomRankedComputation_Category getCategory() const;
    void setCategory(const OAITopBottomRankedComputation_Category &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAITopBottomRankedComputation_Value getValue() const;
    void setValue(const OAITopBottomRankedComputation_Value &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    qint32 getMoverSize() const;
    void setMoverSize(const qint32 &mover_size);
    bool is_mover_size_Set() const;
    bool is_mover_size_Valid() const;

    OAITopBottomSortOrder getSortOrder() const;
    void setSortOrder(const OAITopBottomSortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    OAITopBottomComputationType getType() const;
    void setType(const OAITopBottomComputationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_computation_id;
    bool m_computation_id_isSet;
    bool m_computation_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAITopBottomMoversComputation_Time m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    OAITopBottomRankedComputation_Category m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAITopBottomRankedComputation_Value m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    qint32 m_mover_size;
    bool m_mover_size_isSet;
    bool m_mover_size_isValid;

    OAITopBottomSortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    OAITopBottomComputationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopBottomMoversComputation)

#endif // OAITopBottomMoversComputation_H
