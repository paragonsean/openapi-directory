/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisScale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisScale::OAIAxisScale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisScale::OAIAxisScale() {
    this->initializeModel();
}

OAIAxisScale::~OAIAxisScale() {}

void OAIAxisScale::initializeModel() {

    m_linear_isSet = false;
    m_linear_isValid = false;

    m_logarithmic_isSet = false;
    m_logarithmic_isValid = false;
}

void OAIAxisScale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisScale::fromJsonObject(QJsonObject json) {

    m_linear_isValid = ::OpenAPI::fromJsonValue(m_linear, json[QString("Linear")]);
    m_linear_isSet = !json[QString("Linear")].isNull() && m_linear_isValid;

    m_logarithmic_isValid = ::OpenAPI::fromJsonValue(m_logarithmic, json[QString("Logarithmic")]);
    m_logarithmic_isSet = !json[QString("Logarithmic")].isNull() && m_logarithmic_isValid;
}

QString OAIAxisScale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisScale::asJsonObject() const {
    QJsonObject obj;
    if (m_linear.isSet()) {
        obj.insert(QString("Linear"), ::OpenAPI::toJsonValue(m_linear));
    }
    if (m_logarithmic.isSet()) {
        obj.insert(QString("Logarithmic"), ::OpenAPI::toJsonValue(m_logarithmic));
    }
    return obj;
}

OAIAxisScale_Linear OAIAxisScale::getLinear() const {
    return m_linear;
}
void OAIAxisScale::setLinear(const OAIAxisScale_Linear &linear) {
    m_linear = linear;
    m_linear_isSet = true;
}

bool OAIAxisScale::is_linear_Set() const{
    return m_linear_isSet;
}

bool OAIAxisScale::is_linear_Valid() const{
    return m_linear_isValid;
}

OAIAxisScale_Logarithmic OAIAxisScale::getLogarithmic() const {
    return m_logarithmic;
}
void OAIAxisScale::setLogarithmic(const OAIAxisScale_Logarithmic &logarithmic) {
    m_logarithmic = logarithmic;
    m_logarithmic_isSet = true;
}

bool OAIAxisScale::is_logarithmic_Set() const{
    return m_logarithmic_isSet;
}

bool OAIAxisScale::is_logarithmic_Valid() const{
    return m_logarithmic_isValid;
}

bool OAIAxisScale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_linear.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logarithmic.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisScale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
