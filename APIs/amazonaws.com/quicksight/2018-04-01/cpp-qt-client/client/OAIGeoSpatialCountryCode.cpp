/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeoSpatialCountryCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeoSpatialCountryCode::OAIGeoSpatialCountryCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeoSpatialCountryCode::OAIGeoSpatialCountryCode() {
    this->initializeModel();
}

OAIGeoSpatialCountryCode::~OAIGeoSpatialCountryCode() {}

void OAIGeoSpatialCountryCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGeoSpatialCountryCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGeoSpatialCountryCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("US", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGeoSpatialCountryCode::US;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGeoSpatialCountryCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGeoSpatialCountryCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGeoSpatialCountryCode::US:
            val = "US";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGeoSpatialCountryCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGeoSpatialCountryCode::eOAIGeoSpatialCountryCode OAIGeoSpatialCountryCode::getValue() const {
    return m_value;
}

void OAIGeoSpatialCountryCode::setValue(const OAIGeoSpatialCountryCode::eOAIGeoSpatialCountryCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGeoSpatialCountryCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIGeoSpatialCountryCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
