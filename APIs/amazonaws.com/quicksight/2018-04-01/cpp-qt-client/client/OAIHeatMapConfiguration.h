/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeatMapConfiguration.h
 *
 * The configuration of a heat map.
 */

#ifndef OAIHeatMapConfiguration_H
#define OAIHeatMapConfiguration_H

#include <QJsonObject>

#include "OAIBarChartConfiguration_DataLabels.h"
#include "OAIBarChartConfiguration_Legend.h"
#include "OAIBarChartConfiguration_Tooltip.h"
#include "OAIHeatMapConfiguration_ColorScale.h"
#include "OAIHeatMapConfiguration_ColumnLabelOptions.h"
#include "OAIHeatMapConfiguration_FieldWells.h"
#include "OAIHeatMapConfiguration_RowLabelOptions.h"
#include "OAIHeatMapConfiguration_SortConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHeatMapConfiguration_FieldWells;
class OAIHeatMapConfiguration_SortConfiguration;
class OAIHeatMapConfiguration_RowLabelOptions;
class OAIHeatMapConfiguration_ColumnLabelOptions;
class OAIHeatMapConfiguration_ColorScale;
class OAIBarChartConfiguration_Legend;
class OAIBarChartConfiguration_DataLabels;
class OAIBarChartConfiguration_Tooltip;

class OAIHeatMapConfiguration : public OAIObject {
public:
    OAIHeatMapConfiguration();
    OAIHeatMapConfiguration(QString json);
    ~OAIHeatMapConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHeatMapConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAIHeatMapConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAIHeatMapConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAIHeatMapConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAIHeatMapConfiguration_RowLabelOptions getRowLabelOptions() const;
    void setRowLabelOptions(const OAIHeatMapConfiguration_RowLabelOptions &row_label_options);
    bool is_row_label_options_Set() const;
    bool is_row_label_options_Valid() const;

    OAIHeatMapConfiguration_ColumnLabelOptions getColumnLabelOptions() const;
    void setColumnLabelOptions(const OAIHeatMapConfiguration_ColumnLabelOptions &column_label_options);
    bool is_column_label_options_Set() const;
    bool is_column_label_options_Valid() const;

    OAIHeatMapConfiguration_ColorScale getColorScale() const;
    void setColorScale(const OAIHeatMapConfiguration_ColorScale &color_scale);
    bool is_color_scale_Set() const;
    bool is_color_scale_Valid() const;

    OAIBarChartConfiguration_Legend getLegend() const;
    void setLegend(const OAIBarChartConfiguration_Legend &legend);
    bool is_legend_Set() const;
    bool is_legend_Valid() const;

    OAIBarChartConfiguration_DataLabels getDataLabels() const;
    void setDataLabels(const OAIBarChartConfiguration_DataLabels &data_labels);
    bool is_data_labels_Set() const;
    bool is_data_labels_Valid() const;

    OAIBarChartConfiguration_Tooltip getTooltip() const;
    void setTooltip(const OAIBarChartConfiguration_Tooltip &tooltip);
    bool is_tooltip_Set() const;
    bool is_tooltip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHeatMapConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAIHeatMapConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAIHeatMapConfiguration_RowLabelOptions m_row_label_options;
    bool m_row_label_options_isSet;
    bool m_row_label_options_isValid;

    OAIHeatMapConfiguration_ColumnLabelOptions m_column_label_options;
    bool m_column_label_options_isSet;
    bool m_column_label_options_isValid;

    OAIHeatMapConfiguration_ColorScale m_color_scale;
    bool m_color_scale_isSet;
    bool m_color_scale_isValid;

    OAIBarChartConfiguration_Legend m_legend;
    bool m_legend_isSet;
    bool m_legend_isValid;

    OAIBarChartConfiguration_DataLabels m_data_labels;
    bool m_data_labels_isSet;
    bool m_data_labels_isValid;

    OAIBarChartConfiguration_Tooltip m_tooltip;
    bool m_tooltip_isSet;
    bool m_tooltip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeatMapConfiguration)

#endif // OAIHeatMapConfiguration_H
