/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVPCConnectionSummary.h
 *
 * The summary metadata that describes a VPC connection.
 */

#ifndef OAIVPCConnectionSummary_H
#define OAIVPCConnectionSummary_H

#include <QJsonObject>

#include "OAIVPCConnectionAvailabilityStatus.h"
#include "OAIVPCConnectionResourceStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVPCConnectionSummary : public OAIObject {
public:
    OAIVPCConnectionSummary();
    OAIVPCConnectionSummary(QString json);
    ~OAIVPCConnectionSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVpcConnectionId() const;
    void setVpcConnectionId(const QString &vpc_connection_id);
    bool is_vpc_connection_id_Set() const;
    bool is_vpc_connection_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getVpcid() const;
    void setVpcid(const QString &vpcid);
    bool is_vpcid_Set() const;
    bool is_vpcid_Valid() const;

    QList getSecurityGroupIds() const;
    void setSecurityGroupIds(const QList &security_group_ids);
    bool is_security_group_ids_Set() const;
    bool is_security_group_ids_Valid() const;

    QList getDnsResolvers() const;
    void setDnsResolvers(const QList &dns_resolvers);
    bool is_dns_resolvers_Set() const;
    bool is_dns_resolvers_Valid() const;

    OAIVPCConnectionResourceStatus getStatus() const;
    void setStatus(const OAIVPCConnectionResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIVPCConnectionAvailabilityStatus getAvailabilityStatus() const;
    void setAvailabilityStatus(const OAIVPCConnectionAvailabilityStatus &availability_status);
    bool is_availability_status_Set() const;
    bool is_availability_status_Valid() const;

    QList getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vpc_connection_id;
    bool m_vpc_connection_id_isSet;
    bool m_vpc_connection_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_vpcid;
    bool m_vpcid_isSet;
    bool m_vpcid_isValid;

    QList m_security_group_ids;
    bool m_security_group_ids_isSet;
    bool m_security_group_ids_isValid;

    QList m_dns_resolvers;
    bool m_dns_resolvers_isSet;
    bool m_dns_resolvers_isValid;

    OAIVPCConnectionResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIVPCConnectionAvailabilityStatus m_availability_status;
    bool m_availability_status_isSet;
    bool m_availability_status_isValid;

    QList m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVPCConnectionSummary)

#endif // OAIVPCConnectionSummary_H
