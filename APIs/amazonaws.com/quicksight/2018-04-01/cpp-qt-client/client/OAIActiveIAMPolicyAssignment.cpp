/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActiveIAMPolicyAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActiveIAMPolicyAssignment::OAIActiveIAMPolicyAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActiveIAMPolicyAssignment::OAIActiveIAMPolicyAssignment() {
    this->initializeModel();
}

OAIActiveIAMPolicyAssignment::~OAIActiveIAMPolicyAssignment() {}

void OAIActiveIAMPolicyAssignment::initializeModel() {

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;
}

void OAIActiveIAMPolicyAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActiveIAMPolicyAssignment::fromJsonObject(QJsonObject json) {

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("PolicyArn")]);
    m_policy_arn_isSet = !json[QString("PolicyArn")].isNull() && m_policy_arn_isValid;
}

QString OAIActiveIAMPolicyAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActiveIAMPolicyAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("PolicyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    return obj;
}

QString OAIActiveIAMPolicyAssignment::getAssignmentName() const {
    return m_assignment_name;
}
void OAIActiveIAMPolicyAssignment::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAIActiveIAMPolicyAssignment::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAIActiveIAMPolicyAssignment::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

QString OAIActiveIAMPolicyAssignment::getPolicyArn() const {
    return m_policy_arn;
}
void OAIActiveIAMPolicyAssignment::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAIActiveIAMPolicyAssignment::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAIActiveIAMPolicyAssignment::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

bool OAIActiveIAMPolicyAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActiveIAMPolicyAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
