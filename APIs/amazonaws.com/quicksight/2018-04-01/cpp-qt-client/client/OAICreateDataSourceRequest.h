/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataSourceRequest.h
 *
 * 
 */

#ifndef OAICreateDataSourceRequest_H
#define OAICreateDataSourceRequest_H

#include <QJsonObject>

#include "OAICreateDataSourceRequest_Credentials.h"
#include "OAICreateDataSourceRequest_DataSourceParameters.h"
#include "OAICreateDataSourceRequest_SslProperties.h"
#include "OAICreateDataSourceRequest_VpcConnectionProperties.h"
#include "OAIDataSourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDataSourceRequest_DataSourceParameters;
class OAICreateDataSourceRequest_Credentials;
class OAICreateDataSourceRequest_VpcConnectionProperties;
class OAICreateDataSourceRequest_SslProperties;

class OAICreateDataSourceRequest : public OAIObject {
public:
    OAICreateDataSourceRequest();
    OAICreateDataSourceRequest(QString json);
    ~OAICreateDataSourceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDataSourceType getType() const;
    void setType(const OAIDataSourceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAICreateDataSourceRequest_DataSourceParameters getDataSourceParameters() const;
    void setDataSourceParameters(const OAICreateDataSourceRequest_DataSourceParameters &data_source_parameters);
    bool is_data_source_parameters_Set() const;
    bool is_data_source_parameters_Valid() const;

    OAICreateDataSourceRequest_Credentials getCredentials() const;
    void setCredentials(const OAICreateDataSourceRequest_Credentials &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QList getPermissions() const;
    void setPermissions(const QList &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    OAICreateDataSourceRequest_VpcConnectionProperties getVpcConnectionProperties() const;
    void setVpcConnectionProperties(const OAICreateDataSourceRequest_VpcConnectionProperties &vpc_connection_properties);
    bool is_vpc_connection_properties_Set() const;
    bool is_vpc_connection_properties_Valid() const;

    OAICreateDataSourceRequest_SslProperties getSslProperties() const;
    void setSslProperties(const OAICreateDataSourceRequest_SslProperties &ssl_properties);
    bool is_ssl_properties_Set() const;
    bool is_ssl_properties_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDataSourceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAICreateDataSourceRequest_DataSourceParameters m_data_source_parameters;
    bool m_data_source_parameters_isSet;
    bool m_data_source_parameters_isValid;

    OAICreateDataSourceRequest_Credentials m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QList m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    OAICreateDataSourceRequest_VpcConnectionProperties m_vpc_connection_properties;
    bool m_vpc_connection_properties_isSet;
    bool m_vpc_connection_properties_isValid;

    OAICreateDataSourceRequest_SslProperties m_ssl_properties;
    bool m_ssl_properties_isSet;
    bool m_ssl_properties_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataSourceRequest)

#endif // OAICreateDataSourceRequest_H
