/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopicFilter_RelativeDateFilter.h
 *
 * 
 */

#ifndef OAITopicFilter_RelativeDateFilter_H
#define OAITopicFilter_RelativeDateFilter_H

#include <QJsonObject>

#include "OAITopicRelativeDateFilterFunction.h"
#include "OAITopicRelativeDateFilter_Constant.h"
#include "OAITopicTimeGranularity.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopicRelativeDateFilter_Constant;

class OAITopicFilter_RelativeDateFilter : public OAIObject {
public:
    OAITopicFilter_RelativeDateFilter();
    OAITopicFilter_RelativeDateFilter(QString json);
    ~OAITopicFilter_RelativeDateFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITopicTimeGranularity getTimeGranularity() const;
    void setTimeGranularity(const OAITopicTimeGranularity &time_granularity);
    bool is_time_granularity_Set() const;
    bool is_time_granularity_Valid() const;

    OAITopicRelativeDateFilterFunction getRelativeDateFilterFunction() const;
    void setRelativeDateFilterFunction(const OAITopicRelativeDateFilterFunction &relative_date_filter_function);
    bool is_relative_date_filter_function_Set() const;
    bool is_relative_date_filter_function_Valid() const;

    OAITopicRelativeDateFilter_Constant getConstant() const;
    void setConstant(const OAITopicRelativeDateFilter_Constant &constant);
    bool is_constant_Set() const;
    bool is_constant_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITopicTimeGranularity m_time_granularity;
    bool m_time_granularity_isSet;
    bool m_time_granularity_isValid;

    OAITopicRelativeDateFilterFunction m_relative_date_filter_function;
    bool m_relative_date_filter_function_isSet;
    bool m_relative_date_filter_function_isValid;

    OAITopicRelativeDateFilter_Constant m_constant;
    bool m_constant_isSet;
    bool m_constant_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopicFilter_RelativeDateFilter)

#endif // OAITopicFilter_RelativeDateFilter_H
