/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTemplatePermissions_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTemplatePermissions_request::OAIUpdateTemplatePermissions_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTemplatePermissions_request::OAIUpdateTemplatePermissions_request() {
    this->initializeModel();
}

OAIUpdateTemplatePermissions_request::~OAIUpdateTemplatePermissions_request() {}

void OAIUpdateTemplatePermissions_request::initializeModel() {

    m_grant_permissions_isSet = false;
    m_grant_permissions_isValid = false;

    m_revoke_permissions_isSet = false;
    m_revoke_permissions_isValid = false;
}

void OAIUpdateTemplatePermissions_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTemplatePermissions_request::fromJsonObject(QJsonObject json) {

    m_grant_permissions_isValid = ::OpenAPI::fromJsonValue(m_grant_permissions, json[QString("GrantPermissions")]);
    m_grant_permissions_isSet = !json[QString("GrantPermissions")].isNull() && m_grant_permissions_isValid;

    m_revoke_permissions_isValid = ::OpenAPI::fromJsonValue(m_revoke_permissions, json[QString("RevokePermissions")]);
    m_revoke_permissions_isSet = !json[QString("RevokePermissions")].isNull() && m_revoke_permissions_isValid;
}

QString OAIUpdateTemplatePermissions_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTemplatePermissions_request::asJsonObject() const {
    QJsonObject obj;
    if (m_grant_permissions.size() > 0) {
        obj.insert(QString("GrantPermissions"), ::OpenAPI::toJsonValue(m_grant_permissions));
    }
    if (m_revoke_permissions.size() > 0) {
        obj.insert(QString("RevokePermissions"), ::OpenAPI::toJsonValue(m_revoke_permissions));
    }
    return obj;
}

QList<OAIResourcePermission> OAIUpdateTemplatePermissions_request::getGrantPermissions() const {
    return m_grant_permissions;
}
void OAIUpdateTemplatePermissions_request::setGrantPermissions(const QList<OAIResourcePermission> &grant_permissions) {
    m_grant_permissions = grant_permissions;
    m_grant_permissions_isSet = true;
}

bool OAIUpdateTemplatePermissions_request::is_grant_permissions_Set() const{
    return m_grant_permissions_isSet;
}

bool OAIUpdateTemplatePermissions_request::is_grant_permissions_Valid() const{
    return m_grant_permissions_isValid;
}

QList<OAIResourcePermission> OAIUpdateTemplatePermissions_request::getRevokePermissions() const {
    return m_revoke_permissions;
}
void OAIUpdateTemplatePermissions_request::setRevokePermissions(const QList<OAIResourcePermission> &revoke_permissions) {
    m_revoke_permissions = revoke_permissions;
    m_revoke_permissions_isSet = true;
}

bool OAIUpdateTemplatePermissions_request::is_revoke_permissions_Set() const{
    return m_revoke_permissions_isSet;
}

bool OAIUpdateTemplatePermissions_request::is_revoke_permissions_Valid() const{
    return m_revoke_permissions_isValid;
}

bool OAIUpdateTemplatePermissions_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grant_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revoke_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTemplatePermissions_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
