/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIAMPolicyAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIAMPolicyAssignment::OAIIAMPolicyAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIAMPolicyAssignment::OAIIAMPolicyAssignment() {
    this->initializeModel();
}

OAIIAMPolicyAssignment::~OAIIAMPolicyAssignment() {}

void OAIIAMPolicyAssignment::initializeModel() {

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_assignment_id_isSet = false;
    m_assignment_id_isValid = false;

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;

    m_identities_isSet = false;
    m_identities_isValid = false;

    m_assignment_status_isSet = false;
    m_assignment_status_isValid = false;
}

void OAIIAMPolicyAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIAMPolicyAssignment::fromJsonObject(QJsonObject json) {

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_assignment_id_isValid = ::OpenAPI::fromJsonValue(m_assignment_id, json[QString("AssignmentId")]);
    m_assignment_id_isSet = !json[QString("AssignmentId")].isNull() && m_assignment_id_isValid;

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("PolicyArn")]);
    m_policy_arn_isSet = !json[QString("PolicyArn")].isNull() && m_policy_arn_isValid;

    m_identities_isValid = ::OpenAPI::fromJsonValue(m_identities, json[QString("Identities")]);
    m_identities_isSet = !json[QString("Identities")].isNull() && m_identities_isValid;

    m_assignment_status_isValid = ::OpenAPI::fromJsonValue(m_assignment_status, json[QString("AssignmentStatus")]);
    m_assignment_status_isSet = !json[QString("AssignmentStatus")].isNull() && m_assignment_status_isValid;
}

QString OAIIAMPolicyAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIAMPolicyAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_assignment_id_isSet) {
        obj.insert(QString("AssignmentId"), ::OpenAPI::toJsonValue(m_assignment_id));
    }
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("PolicyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    if (m_identities.isSet()) {
        obj.insert(QString("Identities"), ::OpenAPI::toJsonValue(m_identities));
    }
    if (m_assignment_status.isSet()) {
        obj.insert(QString("AssignmentStatus"), ::OpenAPI::toJsonValue(m_assignment_status));
    }
    return obj;
}

QString OAIIAMPolicyAssignment::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIIAMPolicyAssignment::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIIAMPolicyAssignment::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIIAMPolicyAssignment::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAIIAMPolicyAssignment::getAssignmentId() const {
    return m_assignment_id;
}
void OAIIAMPolicyAssignment::setAssignmentId(const QString &assignment_id) {
    m_assignment_id = assignment_id;
    m_assignment_id_isSet = true;
}

bool OAIIAMPolicyAssignment::is_assignment_id_Set() const{
    return m_assignment_id_isSet;
}

bool OAIIAMPolicyAssignment::is_assignment_id_Valid() const{
    return m_assignment_id_isValid;
}

QString OAIIAMPolicyAssignment::getAssignmentName() const {
    return m_assignment_name;
}
void OAIIAMPolicyAssignment::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAIIAMPolicyAssignment::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAIIAMPolicyAssignment::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

QString OAIIAMPolicyAssignment::getPolicyArn() const {
    return m_policy_arn;
}
void OAIIAMPolicyAssignment::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAIIAMPolicyAssignment::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAIIAMPolicyAssignment::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

QMap OAIIAMPolicyAssignment::getIdentities() const {
    return m_identities;
}
void OAIIAMPolicyAssignment::setIdentities(const QMap &identities) {
    m_identities = identities;
    m_identities_isSet = true;
}

bool OAIIAMPolicyAssignment::is_identities_Set() const{
    return m_identities_isSet;
}

bool OAIIAMPolicyAssignment::is_identities_Valid() const{
    return m_identities_isValid;
}

OAIAssignmentStatus OAIIAMPolicyAssignment::getAssignmentStatus() const {
    return m_assignment_status;
}
void OAIIAMPolicyAssignment::setAssignmentStatus(const OAIAssignmentStatus &assignment_status) {
    m_assignment_status = assignment_status;
    m_assignment_status_isSet = true;
}

bool OAIIAMPolicyAssignment::is_assignment_status_Set() const{
    return m_assignment_status_isSet;
}

bool OAIIAMPolicyAssignment::is_assignment_status_Valid() const{
    return m_assignment_status_isValid;
}

bool OAIIAMPolicyAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIAMPolicyAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
