/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGlobalTableBorderOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGlobalTableBorderOptions::OAIGlobalTableBorderOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGlobalTableBorderOptions::OAIGlobalTableBorderOptions() {
    this->initializeModel();
}

OAIGlobalTableBorderOptions::~OAIGlobalTableBorderOptions() {}

void OAIGlobalTableBorderOptions::initializeModel() {

    m_uniform_border_isSet = false;
    m_uniform_border_isValid = false;

    m_side_specific_border_isSet = false;
    m_side_specific_border_isValid = false;
}

void OAIGlobalTableBorderOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGlobalTableBorderOptions::fromJsonObject(QJsonObject json) {

    m_uniform_border_isValid = ::OpenAPI::fromJsonValue(m_uniform_border, json[QString("UniformBorder")]);
    m_uniform_border_isSet = !json[QString("UniformBorder")].isNull() && m_uniform_border_isValid;

    m_side_specific_border_isValid = ::OpenAPI::fromJsonValue(m_side_specific_border, json[QString("SideSpecificBorder")]);
    m_side_specific_border_isSet = !json[QString("SideSpecificBorder")].isNull() && m_side_specific_border_isValid;
}

QString OAIGlobalTableBorderOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGlobalTableBorderOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_uniform_border.isSet()) {
        obj.insert(QString("UniformBorder"), ::OpenAPI::toJsonValue(m_uniform_border));
    }
    if (m_side_specific_border.isSet()) {
        obj.insert(QString("SideSpecificBorder"), ::OpenAPI::toJsonValue(m_side_specific_border));
    }
    return obj;
}

OAIGlobalTableBorderOptions_UniformBorder OAIGlobalTableBorderOptions::getUniformBorder() const {
    return m_uniform_border;
}
void OAIGlobalTableBorderOptions::setUniformBorder(const OAIGlobalTableBorderOptions_UniformBorder &uniform_border) {
    m_uniform_border = uniform_border;
    m_uniform_border_isSet = true;
}

bool OAIGlobalTableBorderOptions::is_uniform_border_Set() const{
    return m_uniform_border_isSet;
}

bool OAIGlobalTableBorderOptions::is_uniform_border_Valid() const{
    return m_uniform_border_isValid;
}

OAIGlobalTableBorderOptions_SideSpecificBorder OAIGlobalTableBorderOptions::getSideSpecificBorder() const {
    return m_side_specific_border;
}
void OAIGlobalTableBorderOptions::setSideSpecificBorder(const OAIGlobalTableBorderOptions_SideSpecificBorder &side_specific_border) {
    m_side_specific_border = side_specific_border;
    m_side_specific_border_isSet = true;
}

bool OAIGlobalTableBorderOptions::is_side_specific_border_Set() const{
    return m_side_specific_border_isSet;
}

bool OAIGlobalTableBorderOptions::is_side_specific_border_Valid() const{
    return m_side_specific_border_isValid;
}

bool OAIGlobalTableBorderOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_uniform_border.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_side_specific_border.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGlobalTableBorderOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
