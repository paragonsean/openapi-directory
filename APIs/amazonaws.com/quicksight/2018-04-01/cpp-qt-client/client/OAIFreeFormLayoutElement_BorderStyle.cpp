/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeFormLayoutElement_BorderStyle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeFormLayoutElement_BorderStyle::OAIFreeFormLayoutElement_BorderStyle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeFormLayoutElement_BorderStyle::OAIFreeFormLayoutElement_BorderStyle() {
    this->initializeModel();
}

OAIFreeFormLayoutElement_BorderStyle::~OAIFreeFormLayoutElement_BorderStyle() {}

void OAIFreeFormLayoutElement_BorderStyle::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;
}

void OAIFreeFormLayoutElement_BorderStyle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeFormLayoutElement_BorderStyle::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("Color")]);
    m_color_isSet = !json[QString("Color")].isNull() && m_color_isValid;
}

QString OAIFreeFormLayoutElement_BorderStyle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeFormLayoutElement_BorderStyle::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    if (m_color_isSet) {
        obj.insert(QString("Color"), ::OpenAPI::toJsonValue(m_color));
    }
    return obj;
}

OAIVisibility OAIFreeFormLayoutElement_BorderStyle::getVisibility() const {
    return m_visibility;
}
void OAIFreeFormLayoutElement_BorderStyle::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIFreeFormLayoutElement_BorderStyle::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIFreeFormLayoutElement_BorderStyle::is_visibility_Valid() const{
    return m_visibility_isValid;
}

QString OAIFreeFormLayoutElement_BorderStyle::getColor() const {
    return m_color;
}
void OAIFreeFormLayoutElement_BorderStyle::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIFreeFormLayoutElement_BorderStyle::is_color_Set() const{
    return m_color_isSet;
}

bool OAIFreeFormLayoutElement_BorderStyle::is_color_Valid() const{
    return m_color_isValid;
}

bool OAIFreeFormLayoutElement_BorderStyle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeFormLayoutElement_BorderStyle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
