/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomFilterConfiguration.h
 *
 * A custom filter that filters based on a single value. This filter can be partially matched.
 */

#ifndef OAICustomFilterConfiguration_H
#define OAICustomFilterConfiguration_H

#include <QJsonObject>

#include "OAICategoryFilterMatchOperator.h"
#include "OAICategoryFilterSelectAllOptions.h"
#include "OAIFilterNullOption.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICustomFilterConfiguration : public OAIObject {
public:
    OAICustomFilterConfiguration();
    OAICustomFilterConfiguration(QString json);
    ~OAICustomFilterConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICategoryFilterMatchOperator getMatchOperator() const;
    void setMatchOperator(const OAICategoryFilterMatchOperator &match_operator);
    bool is_match_operator_Set() const;
    bool is_match_operator_Valid() const;

    QString getCategoryValue() const;
    void setCategoryValue(const QString &category_value);
    bool is_category_value_Set() const;
    bool is_category_value_Valid() const;

    OAICategoryFilterSelectAllOptions getSelectAllOptions() const;
    void setSelectAllOptions(const OAICategoryFilterSelectAllOptions &select_all_options);
    bool is_select_all_options_Set() const;
    bool is_select_all_options_Valid() const;

    QString getParameterName() const;
    void setParameterName(const QString &parameter_name);
    bool is_parameter_name_Set() const;
    bool is_parameter_name_Valid() const;

    OAIFilterNullOption getNullOption() const;
    void setNullOption(const OAIFilterNullOption &null_option);
    bool is_null_option_Set() const;
    bool is_null_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICategoryFilterMatchOperator m_match_operator;
    bool m_match_operator_isSet;
    bool m_match_operator_isValid;

    QString m_category_value;
    bool m_category_value_isSet;
    bool m_category_value_isValid;

    OAICategoryFilterSelectAllOptions m_select_all_options;
    bool m_select_all_options_isSet;
    bool m_select_all_options_isValid;

    QString m_parameter_name;
    bool m_parameter_name_isSet;
    bool m_parameter_name_isValid;

    OAIFilterNullOption m_null_option;
    bool m_null_option_isSet;
    bool m_null_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomFilterConfiguration)

#endif // OAICustomFilterConfiguration_H
