/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3Source_UploadSettings.h
 *
 * 
 */

#ifndef OAIS3Source_UploadSettings_H
#define OAIS3Source_UploadSettings_H

#include <QJsonObject>

#include "OAIFileFormat.h"
#include "OAITextQualifier.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIS3Source_UploadSettings : public OAIObject {
public:
    OAIS3Source_UploadSettings();
    OAIS3Source_UploadSettings(QString json);
    ~OAIS3Source_UploadSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFileFormat getFormat() const;
    void setFormat(const OAIFileFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    qint32 getStartFromRow() const;
    void setStartFromRow(const qint32 &start_from_row);
    bool is_start_from_row_Set() const;
    bool is_start_from_row_Valid() const;

    bool getContainsHeader() const;
    void setContainsHeader(const bool &contains_header);
    bool is_contains_header_Set() const;
    bool is_contains_header_Valid() const;

    OAITextQualifier getTextQualifier() const;
    void setTextQualifier(const OAITextQualifier &text_qualifier);
    bool is_text_qualifier_Set() const;
    bool is_text_qualifier_Valid() const;

    QString getDelimiter() const;
    void setDelimiter(const QString &delimiter);
    bool is_delimiter_Set() const;
    bool is_delimiter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFileFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    qint32 m_start_from_row;
    bool m_start_from_row_isSet;
    bool m_start_from_row_isValid;

    bool m_contains_header;
    bool m_contains_header_isSet;
    bool m_contains_header_isValid;

    OAITextQualifier m_text_qualifier;
    bool m_text_qualifier_isSet;
    bool m_text_qualifier_isValid;

    QString m_delimiter;
    bool m_delimiter_isSet;
    bool m_delimiter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3Source_UploadSettings)

#endif // OAIS3Source_UploadSettings_H
