/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestinationParameterValueConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestinationParameterValueConfiguration::OAIDestinationParameterValueConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestinationParameterValueConfiguration::OAIDestinationParameterValueConfiguration() {
    this->initializeModel();
}

OAIDestinationParameterValueConfiguration::~OAIDestinationParameterValueConfiguration() {}

void OAIDestinationParameterValueConfiguration::initializeModel() {

    m_custom_values_configuration_isSet = false;
    m_custom_values_configuration_isValid = false;

    m_select_all_value_options_isSet = false;
    m_select_all_value_options_isValid = false;

    m_source_parameter_name_isSet = false;
    m_source_parameter_name_isValid = false;

    m_source_field_isSet = false;
    m_source_field_isValid = false;

    m_source_column_isSet = false;
    m_source_column_isValid = false;
}

void OAIDestinationParameterValueConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestinationParameterValueConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_values_configuration_isValid = ::OpenAPI::fromJsonValue(m_custom_values_configuration, json[QString("CustomValuesConfiguration")]);
    m_custom_values_configuration_isSet = !json[QString("CustomValuesConfiguration")].isNull() && m_custom_values_configuration_isValid;

    m_select_all_value_options_isValid = ::OpenAPI::fromJsonValue(m_select_all_value_options, json[QString("SelectAllValueOptions")]);
    m_select_all_value_options_isSet = !json[QString("SelectAllValueOptions")].isNull() && m_select_all_value_options_isValid;

    m_source_parameter_name_isValid = ::OpenAPI::fromJsonValue(m_source_parameter_name, json[QString("SourceParameterName")]);
    m_source_parameter_name_isSet = !json[QString("SourceParameterName")].isNull() && m_source_parameter_name_isValid;

    m_source_field_isValid = ::OpenAPI::fromJsonValue(m_source_field, json[QString("SourceField")]);
    m_source_field_isSet = !json[QString("SourceField")].isNull() && m_source_field_isValid;

    m_source_column_isValid = ::OpenAPI::fromJsonValue(m_source_column, json[QString("SourceColumn")]);
    m_source_column_isSet = !json[QString("SourceColumn")].isNull() && m_source_column_isValid;
}

QString OAIDestinationParameterValueConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestinationParameterValueConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_values_configuration.isSet()) {
        obj.insert(QString("CustomValuesConfiguration"), ::OpenAPI::toJsonValue(m_custom_values_configuration));
    }
    if (m_select_all_value_options.isSet()) {
        obj.insert(QString("SelectAllValueOptions"), ::OpenAPI::toJsonValue(m_select_all_value_options));
    }
    if (m_source_parameter_name_isSet) {
        obj.insert(QString("SourceParameterName"), ::OpenAPI::toJsonValue(m_source_parameter_name));
    }
    if (m_source_field_isSet) {
        obj.insert(QString("SourceField"), ::OpenAPI::toJsonValue(m_source_field));
    }
    if (m_source_column.isSet()) {
        obj.insert(QString("SourceColumn"), ::OpenAPI::toJsonValue(m_source_column));
    }
    return obj;
}

OAIDestinationParameterValueConfiguration_CustomValuesConfiguration OAIDestinationParameterValueConfiguration::getCustomValuesConfiguration() const {
    return m_custom_values_configuration;
}
void OAIDestinationParameterValueConfiguration::setCustomValuesConfiguration(const OAIDestinationParameterValueConfiguration_CustomValuesConfiguration &custom_values_configuration) {
    m_custom_values_configuration = custom_values_configuration;
    m_custom_values_configuration_isSet = true;
}

bool OAIDestinationParameterValueConfiguration::is_custom_values_configuration_Set() const{
    return m_custom_values_configuration_isSet;
}

bool OAIDestinationParameterValueConfiguration::is_custom_values_configuration_Valid() const{
    return m_custom_values_configuration_isValid;
}

OAISelectAllValueOptions OAIDestinationParameterValueConfiguration::getSelectAllValueOptions() const {
    return m_select_all_value_options;
}
void OAIDestinationParameterValueConfiguration::setSelectAllValueOptions(const OAISelectAllValueOptions &select_all_value_options) {
    m_select_all_value_options = select_all_value_options;
    m_select_all_value_options_isSet = true;
}

bool OAIDestinationParameterValueConfiguration::is_select_all_value_options_Set() const{
    return m_select_all_value_options_isSet;
}

bool OAIDestinationParameterValueConfiguration::is_select_all_value_options_Valid() const{
    return m_select_all_value_options_isValid;
}

QString OAIDestinationParameterValueConfiguration::getSourceParameterName() const {
    return m_source_parameter_name;
}
void OAIDestinationParameterValueConfiguration::setSourceParameterName(const QString &source_parameter_name) {
    m_source_parameter_name = source_parameter_name;
    m_source_parameter_name_isSet = true;
}

bool OAIDestinationParameterValueConfiguration::is_source_parameter_name_Set() const{
    return m_source_parameter_name_isSet;
}

bool OAIDestinationParameterValueConfiguration::is_source_parameter_name_Valid() const{
    return m_source_parameter_name_isValid;
}

QString OAIDestinationParameterValueConfiguration::getSourceField() const {
    return m_source_field;
}
void OAIDestinationParameterValueConfiguration::setSourceField(const QString &source_field) {
    m_source_field = source_field;
    m_source_field_isSet = true;
}

bool OAIDestinationParameterValueConfiguration::is_source_field_Set() const{
    return m_source_field_isSet;
}

bool OAIDestinationParameterValueConfiguration::is_source_field_Valid() const{
    return m_source_field_isValid;
}

OAIColumnIdentifier OAIDestinationParameterValueConfiguration::getSourceColumn() const {
    return m_source_column;
}
void OAIDestinationParameterValueConfiguration::setSourceColumn(const OAIColumnIdentifier &source_column) {
    m_source_column = source_column;
    m_source_column_isSet = true;
}

bool OAIDestinationParameterValueConfiguration::is_source_column_Set() const{
    return m_source_column_isSet;
}

bool OAIDestinationParameterValueConfiguration::is_source_column_Valid() const{
    return m_source_column_isValid;
}

bool OAIDestinationParameterValueConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_values_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_select_all_value_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_parameter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestinationParameterValueConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
