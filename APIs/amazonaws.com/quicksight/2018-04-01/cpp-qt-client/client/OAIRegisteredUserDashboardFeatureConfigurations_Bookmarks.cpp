/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks() {
    this->initializeModel();
}

OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::~OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks() {}

void OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;
}

QString OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

bool OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::getEnabled() const {
    return m_enabled;
}
void OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisteredUserDashboardFeatureConfigurations_Bookmarks::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
