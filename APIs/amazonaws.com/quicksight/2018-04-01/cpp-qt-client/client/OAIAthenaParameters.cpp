/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAthenaParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAthenaParameters::OAIAthenaParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAthenaParameters::OAIAthenaParameters() {
    this->initializeModel();
}

OAIAthenaParameters::~OAIAthenaParameters() {}

void OAIAthenaParameters::initializeModel() {

    m_work_group_isSet = false;
    m_work_group_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIAthenaParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAthenaParameters::fromJsonObject(QJsonObject json) {

    m_work_group_isValid = ::OpenAPI::fromJsonValue(m_work_group, json[QString("WorkGroup")]);
    m_work_group_isSet = !json[QString("WorkGroup")].isNull() && m_work_group_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAIAthenaParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAthenaParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_work_group_isSet) {
        obj.insert(QString("WorkGroup"), ::OpenAPI::toJsonValue(m_work_group));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

QString OAIAthenaParameters::getWorkGroup() const {
    return m_work_group;
}
void OAIAthenaParameters::setWorkGroup(const QString &work_group) {
    m_work_group = work_group;
    m_work_group_isSet = true;
}

bool OAIAthenaParameters::is_work_group_Set() const{
    return m_work_group_isSet;
}

bool OAIAthenaParameters::is_work_group_Valid() const{
    return m_work_group_isValid;
}

QString OAIAthenaParameters::getRoleArn() const {
    return m_role_arn;
}
void OAIAthenaParameters::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIAthenaParameters::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIAthenaParameters::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIAthenaParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_work_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAthenaParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
