/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectOperation::OAIProjectOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectOperation::OAIProjectOperation() {
    this->initializeModel();
}

OAIProjectOperation::~OAIProjectOperation() {}

void OAIProjectOperation::initializeModel() {

    m_projected_columns_isSet = false;
    m_projected_columns_isValid = false;
}

void OAIProjectOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectOperation::fromJsonObject(QJsonObject json) {

    m_projected_columns_isValid = ::OpenAPI::fromJsonValue(m_projected_columns, json[QString("ProjectedColumns")]);
    m_projected_columns_isSet = !json[QString("ProjectedColumns")].isNull() && m_projected_columns_isValid;
}

QString OAIProjectOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_projected_columns.isSet()) {
        obj.insert(QString("ProjectedColumns"), ::OpenAPI::toJsonValue(m_projected_columns));
    }
    return obj;
}

QList OAIProjectOperation::getProjectedColumns() const {
    return m_projected_columns;
}
void OAIProjectOperation::setProjectedColumns(const QList &projected_columns) {
    m_projected_columns = projected_columns;
    m_projected_columns_isSet = true;
}

bool OAIProjectOperation::is_projected_columns_Set() const{
    return m_projected_columns_isSet;
}

bool OAIProjectOperation::is_projected_columns_Valid() const{
    return m_projected_columns_isValid;
}

bool OAIProjectOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_projected_columns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_projected_columns_isValid && true;
}

} // namespace OpenAPI
