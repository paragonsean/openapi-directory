/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalFormattingGradientColor.h
 *
 * Formatting configuration for gradient color.
 */

#ifndef OAIConditionalFormattingGradientColor_H
#define OAIConditionalFormattingGradientColor_H

#include <QJsonObject>

#include "OAIConditionalFormattingGradientColor_Color.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionalFormattingGradientColor_Color;

class OAIConditionalFormattingGradientColor : public OAIObject {
public:
    OAIConditionalFormattingGradientColor();
    OAIConditionalFormattingGradientColor(QString json);
    ~OAIConditionalFormattingGradientColor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAIConditionalFormattingGradientColor_Color getColor() const;
    void setColor(const OAIConditionalFormattingGradientColor_Color &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAIConditionalFormattingGradientColor_Color m_color;
    bool m_color_isSet;
    bool m_color_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalFormattingGradientColor)

#endif // OAIConditionalFormattingGradientColor_H
