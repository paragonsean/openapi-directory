/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDashboardSnapshotJobResponse_UserConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::OAIDescribeDashboardSnapshotJobResponse_UserConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::OAIDescribeDashboardSnapshotJobResponse_UserConfiguration() {
    this->initializeModel();
}

OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::~OAIDescribeDashboardSnapshotJobResponse_UserConfiguration() {}

void OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::initializeModel() {

    m_anonymous_users_isSet = false;
    m_anonymous_users_isValid = false;
}

void OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::fromJsonObject(QJsonObject json) {

    m_anonymous_users_isValid = ::OpenAPI::fromJsonValue(m_anonymous_users, json[QString("AnonymousUsers")]);
    m_anonymous_users_isSet = !json[QString("AnonymousUsers")].isNull() && m_anonymous_users_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_anonymous_users.isSet()) {
        obj.insert(QString("AnonymousUsers"), ::OpenAPI::toJsonValue(m_anonymous_users));
    }
    return obj;
}

QList OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::getAnonymousUsers() const {
    return m_anonymous_users;
}
void OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::setAnonymousUsers(const QList &anonymous_users) {
    m_anonymous_users = anonymous_users;
    m_anonymous_users_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::is_anonymous_users_Set() const{
    return m_anonymous_users_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::is_anonymous_users_Valid() const{
    return m_anonymous_users_isValid;
}

bool OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anonymous_users.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDashboardSnapshotJobResponse_UserConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
