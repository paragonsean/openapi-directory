/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceLineLabelConfiguration_CustomLabelConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::OAIReferenceLineLabelConfiguration_CustomLabelConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::OAIReferenceLineLabelConfiguration_CustomLabelConfiguration() {
    this->initializeModel();
}

OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::~OAIReferenceLineLabelConfiguration_CustomLabelConfiguration() {}

void OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::initializeModel() {

    m_custom_label_isSet = false;
    m_custom_label_isValid = false;
}

void OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_label_isValid = ::OpenAPI::fromJsonValue(m_custom_label, json[QString("CustomLabel")]);
    m_custom_label_isSet = !json[QString("CustomLabel")].isNull() && m_custom_label_isValid;
}

QString OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_label_isSet) {
        obj.insert(QString("CustomLabel"), ::OpenAPI::toJsonValue(m_custom_label));
    }
    return obj;
}

QString OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::getCustomLabel() const {
    return m_custom_label;
}
void OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::setCustomLabel(const QString &custom_label) {
    m_custom_label = custom_label;
    m_custom_label_isSet = true;
}

bool OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::is_custom_label_Set() const{
    return m_custom_label_isSet;
}

bool OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::is_custom_label_Valid() const{
    return m_custom_label_isValid;
}

bool OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReferenceLineLabelConfiguration_CustomLabelConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_custom_label_isValid && true;
}

} // namespace OpenAPI
