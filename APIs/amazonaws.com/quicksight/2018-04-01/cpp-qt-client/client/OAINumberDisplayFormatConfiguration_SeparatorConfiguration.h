/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumberDisplayFormatConfiguration_SeparatorConfiguration.h
 *
 * 
 */

#ifndef OAINumberDisplayFormatConfiguration_SeparatorConfiguration_H
#define OAINumberDisplayFormatConfiguration_SeparatorConfiguration_H

#include <QJsonObject>

#include "OAINumericSeparatorConfiguration_ThousandsSeparator.h"
#include "OAINumericSeparatorSymbol.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINumericSeparatorConfiguration_ThousandsSeparator;

class OAINumberDisplayFormatConfiguration_SeparatorConfiguration : public OAIObject {
public:
    OAINumberDisplayFormatConfiguration_SeparatorConfiguration();
    OAINumberDisplayFormatConfiguration_SeparatorConfiguration(QString json);
    ~OAINumberDisplayFormatConfiguration_SeparatorConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINumericSeparatorSymbol getDecimalSeparator() const;
    void setDecimalSeparator(const OAINumericSeparatorSymbol &decimal_separator);
    bool is_decimal_separator_Set() const;
    bool is_decimal_separator_Valid() const;

    OAINumericSeparatorConfiguration_ThousandsSeparator getThousandsSeparator() const;
    void setThousandsSeparator(const OAINumericSeparatorConfiguration_ThousandsSeparator &thousands_separator);
    bool is_thousands_separator_Set() const;
    bool is_thousands_separator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINumericSeparatorSymbol m_decimal_separator;
    bool m_decimal_separator_isSet;
    bool m_decimal_separator_isValid;

    OAINumericSeparatorConfiguration_ThousandsSeparator m_thousands_separator;
    bool m_thousands_separator_isSet;
    bool m_thousands_separator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumberDisplayFormatConfiguration_SeparatorConfiguration)

#endif // OAINumberDisplayFormatConfiguration_SeparatorConfiguration_H
