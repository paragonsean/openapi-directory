/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableVisual_ChartConfiguration.h
 *
 * 
 */

#ifndef OAITableVisual_ChartConfiguration_H
#define OAITableVisual_ChartConfiguration_H

#include <QJsonObject>

#include "OAITableConfiguration_FieldOptions.h"
#include "OAITableConfiguration_FieldWells.h"
#include "OAITableConfiguration_PaginatedReportOptions.h"
#include "OAITableConfiguration_SortConfiguration.h"
#include "OAITableConfiguration_TableOptions.h"
#include "OAITableConfiguration_TotalOptions.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableConfiguration_FieldWells;
class OAITableConfiguration_SortConfiguration;
class OAITableConfiguration_TableOptions;
class OAITableConfiguration_TotalOptions;
class OAITableConfiguration_FieldOptions;
class OAITableConfiguration_PaginatedReportOptions;

class OAITableVisual_ChartConfiguration : public OAIObject {
public:
    OAITableVisual_ChartConfiguration();
    OAITableVisual_ChartConfiguration(QString json);
    ~OAITableVisual_ChartConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITableConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAITableConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAITableConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAITableConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAITableConfiguration_TableOptions getTableOptions() const;
    void setTableOptions(const OAITableConfiguration_TableOptions &table_options);
    bool is_table_options_Set() const;
    bool is_table_options_Valid() const;

    OAITableConfiguration_TotalOptions getTotalOptions() const;
    void setTotalOptions(const OAITableConfiguration_TotalOptions &total_options);
    bool is_total_options_Set() const;
    bool is_total_options_Valid() const;

    OAITableConfiguration_FieldOptions getFieldOptions() const;
    void setFieldOptions(const OAITableConfiguration_FieldOptions &field_options);
    bool is_field_options_Set() const;
    bool is_field_options_Valid() const;

    OAITableConfiguration_PaginatedReportOptions getPaginatedReportOptions() const;
    void setPaginatedReportOptions(const OAITableConfiguration_PaginatedReportOptions &paginated_report_options);
    bool is_paginated_report_options_Set() const;
    bool is_paginated_report_options_Valid() const;

    QList getTableInlineVisualizations() const;
    void setTableInlineVisualizations(const QList &table_inline_visualizations);
    bool is_table_inline_visualizations_Set() const;
    bool is_table_inline_visualizations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITableConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAITableConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAITableConfiguration_TableOptions m_table_options;
    bool m_table_options_isSet;
    bool m_table_options_isValid;

    OAITableConfiguration_TotalOptions m_total_options;
    bool m_total_options_isSet;
    bool m_total_options_isValid;

    OAITableConfiguration_FieldOptions m_field_options;
    bool m_field_options_isSet;
    bool m_field_options_isValid;

    OAITableConfiguration_PaginatedReportOptions m_paginated_report_options;
    bool m_paginated_report_options_isSet;
    bool m_paginated_report_options_isValid;

    QList m_table_inline_visualizations;
    bool m_table_inline_visualizations_isSet;
    bool m_table_inline_visualizations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableVisual_ChartConfiguration)

#endif // OAITableVisual_ChartConfiguration_H
