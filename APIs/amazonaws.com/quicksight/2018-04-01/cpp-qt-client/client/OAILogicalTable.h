/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogicalTable.h
 *
 * A &lt;i&gt;logical table&lt;/i&gt; is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.
 */

#ifndef OAILogicalTable_H
#define OAILogicalTable_H

#include <QJsonObject>

#include "OAILogicalTable_Source.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogicalTable_Source;

class OAILogicalTable : public OAIObject {
public:
    OAILogicalTable();
    OAILogicalTable(QString json);
    ~OAILogicalTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QList getDataTransforms() const;
    void setDataTransforms(const QList &data_transforms);
    bool is_data_transforms_Set() const;
    bool is_data_transforms_Valid() const;

    OAILogicalTable_Source getSource() const;
    void setSource(const OAILogicalTable_Source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QList m_data_transforms;
    bool m_data_transforms_isSet;
    bool m_data_transforms_isValid;

    OAILogicalTable_Source m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogicalTable)

#endif // OAILogicalTable_H
