/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITooltipItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITooltipItem::OAITooltipItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITooltipItem::OAITooltipItem() {
    this->initializeModel();
}

OAITooltipItem::~OAITooltipItem() {}

void OAITooltipItem::initializeModel() {

    m_field_tooltip_item_isSet = false;
    m_field_tooltip_item_isValid = false;

    m_column_tooltip_item_isSet = false;
    m_column_tooltip_item_isValid = false;
}

void OAITooltipItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITooltipItem::fromJsonObject(QJsonObject json) {

    m_field_tooltip_item_isValid = ::OpenAPI::fromJsonValue(m_field_tooltip_item, json[QString("FieldTooltipItem")]);
    m_field_tooltip_item_isSet = !json[QString("FieldTooltipItem")].isNull() && m_field_tooltip_item_isValid;

    m_column_tooltip_item_isValid = ::OpenAPI::fromJsonValue(m_column_tooltip_item, json[QString("ColumnTooltipItem")]);
    m_column_tooltip_item_isSet = !json[QString("ColumnTooltipItem")].isNull() && m_column_tooltip_item_isValid;
}

QString OAITooltipItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITooltipItem::asJsonObject() const {
    QJsonObject obj;
    if (m_field_tooltip_item.isSet()) {
        obj.insert(QString("FieldTooltipItem"), ::OpenAPI::toJsonValue(m_field_tooltip_item));
    }
    if (m_column_tooltip_item.isSet()) {
        obj.insert(QString("ColumnTooltipItem"), ::OpenAPI::toJsonValue(m_column_tooltip_item));
    }
    return obj;
}

OAITooltipItem_FieldTooltipItem OAITooltipItem::getFieldTooltipItem() const {
    return m_field_tooltip_item;
}
void OAITooltipItem::setFieldTooltipItem(const OAITooltipItem_FieldTooltipItem &field_tooltip_item) {
    m_field_tooltip_item = field_tooltip_item;
    m_field_tooltip_item_isSet = true;
}

bool OAITooltipItem::is_field_tooltip_item_Set() const{
    return m_field_tooltip_item_isSet;
}

bool OAITooltipItem::is_field_tooltip_item_Valid() const{
    return m_field_tooltip_item_isValid;
}

OAITooltipItem_ColumnTooltipItem OAITooltipItem::getColumnTooltipItem() const {
    return m_column_tooltip_item;
}
void OAITooltipItem::setColumnTooltipItem(const OAITooltipItem_ColumnTooltipItem &column_tooltip_item) {
    m_column_tooltip_item = column_tooltip_item;
    m_column_tooltip_item_isSet = true;
}

bool OAITooltipItem::is_column_tooltip_item_Set() const{
    return m_column_tooltip_item_isSet;
}

bool OAITooltipItem::is_column_tooltip_item_Valid() const{
    return m_column_tooltip_item_isValid;
}

bool OAITooltipItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_tooltip_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_tooltip_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITooltipItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
