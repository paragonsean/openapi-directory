/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAssetBundleExportJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAssetBundleExportJobResponse::OAIDescribeAssetBundleExportJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAssetBundleExportJobResponse::OAIDescribeAssetBundleExportJobResponse() {
    this->initializeModel();
}

OAIDescribeAssetBundleExportJobResponse::~OAIDescribeAssetBundleExportJobResponse() {}

void OAIDescribeAssetBundleExportJobResponse::initializeModel() {

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_asset_bundle_export_job_id_isSet = false;
    m_asset_bundle_export_job_id_isValid = false;

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_resource_arns_isSet = false;
    m_resource_arns_isValid = false;

    m_include_all_dependencies_isSet = false;
    m_include_all_dependencies_isValid = false;

    m_export_format_isSet = false;
    m_export_format_isValid = false;

    m_cloud_formation_override_property_configuration_isSet = false;
    m_cloud_formation_override_property_configuration_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeAssetBundleExportJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAssetBundleExportJobResponse::fromJsonObject(QJsonObject json) {

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(m_download_url, json[QString("DownloadUrl")]);
    m_download_url_isSet = !json[QString("DownloadUrl")].isNull() && m_download_url_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("Errors")]);
    m_errors_isSet = !json[QString("Errors")].isNull() && m_errors_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_asset_bundle_export_job_id_isValid = ::OpenAPI::fromJsonValue(m_asset_bundle_export_job_id, json[QString("AssetBundleExportJobId")]);
    m_asset_bundle_export_job_id_isSet = !json[QString("AssetBundleExportJobId")].isNull() && m_asset_bundle_export_job_id_isValid;

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_resource_arns_isValid = ::OpenAPI::fromJsonValue(m_resource_arns, json[QString("ResourceArns")]);
    m_resource_arns_isSet = !json[QString("ResourceArns")].isNull() && m_resource_arns_isValid;

    m_include_all_dependencies_isValid = ::OpenAPI::fromJsonValue(m_include_all_dependencies, json[QString("IncludeAllDependencies")]);
    m_include_all_dependencies_isSet = !json[QString("IncludeAllDependencies")].isNull() && m_include_all_dependencies_isValid;

    m_export_format_isValid = ::OpenAPI::fromJsonValue(m_export_format, json[QString("ExportFormat")]);
    m_export_format_isSet = !json[QString("ExportFormat")].isNull() && m_export_format_isValid;

    m_cloud_formation_override_property_configuration_isValid = ::OpenAPI::fromJsonValue(m_cloud_formation_override_property_configuration, json[QString("CloudFormationOverridePropertyConfiguration")]);
    m_cloud_formation_override_property_configuration_isSet = !json[QString("CloudFormationOverridePropertyConfiguration")].isNull() && m_cloud_formation_override_property_configuration_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAssetBundleExportJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_download_url_isSet) {
        obj.insert(QString("DownloadUrl"), ::OpenAPI::toJsonValue(m_download_url));
    }
    if (m_errors.isSet()) {
        obj.insert(QString("Errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_asset_bundle_export_job_id_isSet) {
        obj.insert(QString("AssetBundleExportJobId"), ::OpenAPI::toJsonValue(m_asset_bundle_export_job_id));
    }
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_resource_arns.isSet()) {
        obj.insert(QString("ResourceArns"), ::OpenAPI::toJsonValue(m_resource_arns));
    }
    if (m_include_all_dependencies_isSet) {
        obj.insert(QString("IncludeAllDependencies"), ::OpenAPI::toJsonValue(m_include_all_dependencies));
    }
    if (m_export_format.isSet()) {
        obj.insert(QString("ExportFormat"), ::OpenAPI::toJsonValue(m_export_format));
    }
    if (m_cloud_formation_override_property_configuration.isSet()) {
        obj.insert(QString("CloudFormationOverridePropertyConfiguration"), ::OpenAPI::toJsonValue(m_cloud_formation_override_property_configuration));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIAssetBundleExportJobStatus OAIDescribeAssetBundleExportJobResponse::getJobStatus() const {
    return m_job_status;
}
void OAIDescribeAssetBundleExportJobResponse::setJobStatus(const OAIAssetBundleExportJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::getDownloadUrl() const {
    return m_download_url;
}
void OAIDescribeAssetBundleExportJobResponse::setDownloadUrl(const QString &download_url) {
    m_download_url = download_url;
    m_download_url_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_download_url_Valid() const{
    return m_download_url_isValid;
}

QList OAIDescribeAssetBundleExportJobResponse::getErrors() const {
    return m_errors;
}
void OAIDescribeAssetBundleExportJobResponse::setErrors(const QList &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::getArn() const {
    return m_arn;
}
void OAIDescribeAssetBundleExportJobResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIDescribeAssetBundleExportJobResponse::getCreatedTime() const {
    return m_created_time;
}
void OAIDescribeAssetBundleExportJobResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::getAssetBundleExportJobId() const {
    return m_asset_bundle_export_job_id;
}
void OAIDescribeAssetBundleExportJobResponse::setAssetBundleExportJobId(const QString &asset_bundle_export_job_id) {
    m_asset_bundle_export_job_id = asset_bundle_export_job_id;
    m_asset_bundle_export_job_id_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_asset_bundle_export_job_id_Set() const{
    return m_asset_bundle_export_job_id_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_asset_bundle_export_job_id_Valid() const{
    return m_asset_bundle_export_job_id_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIDescribeAssetBundleExportJobResponse::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QList OAIDescribeAssetBundleExportJobResponse::getResourceArns() const {
    return m_resource_arns;
}
void OAIDescribeAssetBundleExportJobResponse::setResourceArns(const QList &resource_arns) {
    m_resource_arns = resource_arns;
    m_resource_arns_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_resource_arns_Set() const{
    return m_resource_arns_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_resource_arns_Valid() const{
    return m_resource_arns_isValid;
}

bool OAIDescribeAssetBundleExportJobResponse::getIncludeAllDependencies() const {
    return m_include_all_dependencies;
}
void OAIDescribeAssetBundleExportJobResponse::setIncludeAllDependencies(const bool &include_all_dependencies) {
    m_include_all_dependencies = include_all_dependencies;
    m_include_all_dependencies_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_include_all_dependencies_Set() const{
    return m_include_all_dependencies_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_include_all_dependencies_Valid() const{
    return m_include_all_dependencies_isValid;
}

OAIAssetBundleExportFormat OAIDescribeAssetBundleExportJobResponse::getExportFormat() const {
    return m_export_format;
}
void OAIDescribeAssetBundleExportJobResponse::setExportFormat(const OAIAssetBundleExportFormat &export_format) {
    m_export_format = export_format;
    m_export_format_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_export_format_Set() const{
    return m_export_format_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_export_format_Valid() const{
    return m_export_format_isValid;
}

OAIDescribeAssetBundleExportJobResponse_CloudFormationOverridePropertyConfiguration OAIDescribeAssetBundleExportJobResponse::getCloudFormationOverridePropertyConfiguration() const {
    return m_cloud_formation_override_property_configuration;
}
void OAIDescribeAssetBundleExportJobResponse::setCloudFormationOverridePropertyConfiguration(const OAIDescribeAssetBundleExportJobResponse_CloudFormationOverridePropertyConfiguration &cloud_formation_override_property_configuration) {
    m_cloud_formation_override_property_configuration = cloud_formation_override_property_configuration;
    m_cloud_formation_override_property_configuration_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_cloud_formation_override_property_configuration_Set() const{
    return m_cloud_formation_override_property_configuration_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_cloud_formation_override_property_configuration_Valid() const{
    return m_cloud_formation_override_property_configuration_isValid;
}

QString OAIDescribeAssetBundleExportJobResponse::getRequestId() const {
    return m_request_id;
}
void OAIDescribeAssetBundleExportJobResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDescribeAssetBundleExportJobResponse::getStatus() const {
    return m_status;
}
void OAIDescribeAssetBundleExportJobResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeAssetBundleExportJobResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeAssetBundleExportJobResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeAssetBundleExportJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_bundle_export_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_all_dependencies_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_formation_override_property_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAssetBundleExportJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
