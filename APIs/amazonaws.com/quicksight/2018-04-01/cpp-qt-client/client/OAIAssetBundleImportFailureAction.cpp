/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleImportFailureAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleImportFailureAction::OAIAssetBundleImportFailureAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleImportFailureAction::OAIAssetBundleImportFailureAction() {
    this->initializeModel();
}

OAIAssetBundleImportFailureAction::~OAIAssetBundleImportFailureAction() {}

void OAIAssetBundleImportFailureAction::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetBundleImportFailureAction::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetBundleImportFailureAction::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DO_NOTHING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleImportFailureAction::DO_NOTHING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ROLLBACK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleImportFailureAction::ROLLBACK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetBundleImportFailureAction::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetBundleImportFailureAction::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetBundleImportFailureAction::DO_NOTHING:
            val = "DO_NOTHING";
            break;
        case eOAIAssetBundleImportFailureAction::ROLLBACK:
            val = "ROLLBACK";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetBundleImportFailureAction::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetBundleImportFailureAction::eOAIAssetBundleImportFailureAction OAIAssetBundleImportFailureAction::getValue() const {
    return m_value;
}

void OAIAssetBundleImportFailureAction::setValue(const OAIAssetBundleImportFailureAction::eOAIAssetBundleImportFailureAction& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetBundleImportFailureAction::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetBundleImportFailureAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
