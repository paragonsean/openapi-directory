/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatasetMetadata.h
 *
 * A structure that represents a dataset.
 */

#ifndef OAIDatasetMetadata_H
#define OAIDatasetMetadata_H

#include <QJsonObject>

#include "OAIDatasetMetadata_DataAggregation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDatasetMetadata_DataAggregation;

class OAIDatasetMetadata : public OAIObject {
public:
    OAIDatasetMetadata();
    OAIDatasetMetadata(QString json);
    ~OAIDatasetMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatasetArn() const;
    void setDatasetArn(const QString &dataset_arn);
    bool is_dataset_arn_Set() const;
    bool is_dataset_arn_Valid() const;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    QString getDatasetDescription() const;
    void setDatasetDescription(const QString &dataset_description);
    bool is_dataset_description_Set() const;
    bool is_dataset_description_Valid() const;

    OAIDatasetMetadata_DataAggregation getDataAggregation() const;
    void setDataAggregation(const OAIDatasetMetadata_DataAggregation &data_aggregation);
    bool is_data_aggregation_Set() const;
    bool is_data_aggregation_Valid() const;

    QList getFilters() const;
    void setFilters(const QList &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QList getColumns() const;
    void setColumns(const QList &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    QList getCalculatedFields() const;
    void setCalculatedFields(const QList &calculated_fields);
    bool is_calculated_fields_Set() const;
    bool is_calculated_fields_Valid() const;

    QList getNamedEntities() const;
    void setNamedEntities(const QList &named_entities);
    bool is_named_entities_Set() const;
    bool is_named_entities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset_arn;
    bool m_dataset_arn_isSet;
    bool m_dataset_arn_isValid;

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    QString m_dataset_description;
    bool m_dataset_description_isSet;
    bool m_dataset_description_isValid;

    OAIDatasetMetadata_DataAggregation m_data_aggregation;
    bool m_data_aggregation_isSet;
    bool m_data_aggregation_isValid;

    QList m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QList m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    QList m_calculated_fields;
    bool m_calculated_fields_isSet;
    bool m_calculated_fields_isValid;

    QList m_named_entities;
    bool m_named_entities_isSet;
    bool m_named_entities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatasetMetadata)

#endif // OAIDatasetMetadata_H
