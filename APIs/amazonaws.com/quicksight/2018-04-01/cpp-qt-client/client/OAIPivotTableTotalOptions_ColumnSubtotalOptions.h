/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivotTableTotalOptions_ColumnSubtotalOptions.h
 *
 * 
 */

#ifndef OAIPivotTableTotalOptions_ColumnSubtotalOptions_H
#define OAIPivotTableTotalOptions_ColumnSubtotalOptions_H

#include <QJsonObject>

#include "OAIPivotTableSubtotalLevel.h"
#include "OAISubtotalOptions_MetricHeaderCellStyle.h"
#include "OAISubtotalOptions_TotalCellStyle.h"
#include "OAISubtotalOptions_ValueCellStyle.h"
#include "OAIVisibility.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubtotalOptions_TotalCellStyle;
class OAISubtotalOptions_ValueCellStyle;
class OAISubtotalOptions_MetricHeaderCellStyle;

class OAIPivotTableTotalOptions_ColumnSubtotalOptions : public OAIObject {
public:
    OAIPivotTableTotalOptions_ColumnSubtotalOptions();
    OAIPivotTableTotalOptions_ColumnSubtotalOptions(QString json);
    ~OAIPivotTableTotalOptions_ColumnSubtotalOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVisibility getTotalsVisibility() const;
    void setTotalsVisibility(const OAIVisibility &totals_visibility);
    bool is_totals_visibility_Set() const;
    bool is_totals_visibility_Valid() const;

    QString getCustomLabel() const;
    void setCustomLabel(const QString &custom_label);
    bool is_custom_label_Set() const;
    bool is_custom_label_Valid() const;

    OAIPivotTableSubtotalLevel getFieldLevel() const;
    void setFieldLevel(const OAIPivotTableSubtotalLevel &field_level);
    bool is_field_level_Set() const;
    bool is_field_level_Valid() const;

    QList getFieldLevelOptions() const;
    void setFieldLevelOptions(const QList &field_level_options);
    bool is_field_level_options_Set() const;
    bool is_field_level_options_Valid() const;

    OAISubtotalOptions_TotalCellStyle getTotalCellStyle() const;
    void setTotalCellStyle(const OAISubtotalOptions_TotalCellStyle &total_cell_style);
    bool is_total_cell_style_Set() const;
    bool is_total_cell_style_Valid() const;

    OAISubtotalOptions_ValueCellStyle getValueCellStyle() const;
    void setValueCellStyle(const OAISubtotalOptions_ValueCellStyle &value_cell_style);
    bool is_value_cell_style_Set() const;
    bool is_value_cell_style_Valid() const;

    OAISubtotalOptions_MetricHeaderCellStyle getMetricHeaderCellStyle() const;
    void setMetricHeaderCellStyle(const OAISubtotalOptions_MetricHeaderCellStyle &metric_header_cell_style);
    bool is_metric_header_cell_style_Set() const;
    bool is_metric_header_cell_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVisibility m_totals_visibility;
    bool m_totals_visibility_isSet;
    bool m_totals_visibility_isValid;

    QString m_custom_label;
    bool m_custom_label_isSet;
    bool m_custom_label_isValid;

    OAIPivotTableSubtotalLevel m_field_level;
    bool m_field_level_isSet;
    bool m_field_level_isValid;

    QList m_field_level_options;
    bool m_field_level_options_isSet;
    bool m_field_level_options_isValid;

    OAISubtotalOptions_TotalCellStyle m_total_cell_style;
    bool m_total_cell_style_isSet;
    bool m_total_cell_style_isValid;

    OAISubtotalOptions_ValueCellStyle m_value_cell_style;
    bool m_value_cell_style_isSet;
    bool m_value_cell_style_isValid;

    OAISubtotalOptions_MetricHeaderCellStyle m_metric_header_cell_style;
    bool m_metric_header_cell_style_isSet;
    bool m_metric_header_cell_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivotTableTotalOptions_ColumnSubtotalOptions)

#endif // OAIPivotTableTotalOptions_ColumnSubtotalOptions_H
