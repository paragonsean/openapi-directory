/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalysisDefaults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalysisDefaults::OAIAnalysisDefaults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalysisDefaults::OAIAnalysisDefaults() {
    this->initializeModel();
}

OAIAnalysisDefaults::~OAIAnalysisDefaults() {}

void OAIAnalysisDefaults::initializeModel() {

    m_default_new_sheet_configuration_isSet = false;
    m_default_new_sheet_configuration_isValid = false;
}

void OAIAnalysisDefaults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalysisDefaults::fromJsonObject(QJsonObject json) {

    m_default_new_sheet_configuration_isValid = ::OpenAPI::fromJsonValue(m_default_new_sheet_configuration, json[QString("DefaultNewSheetConfiguration")]);
    m_default_new_sheet_configuration_isSet = !json[QString("DefaultNewSheetConfiguration")].isNull() && m_default_new_sheet_configuration_isValid;
}

QString OAIAnalysisDefaults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalysisDefaults::asJsonObject() const {
    QJsonObject obj;
    if (m_default_new_sheet_configuration.isSet()) {
        obj.insert(QString("DefaultNewSheetConfiguration"), ::OpenAPI::toJsonValue(m_default_new_sheet_configuration));
    }
    return obj;
}

OAIAnalysisDefaults_DefaultNewSheetConfiguration OAIAnalysisDefaults::getDefaultNewSheetConfiguration() const {
    return m_default_new_sheet_configuration;
}
void OAIAnalysisDefaults::setDefaultNewSheetConfiguration(const OAIAnalysisDefaults_DefaultNewSheetConfiguration &default_new_sheet_configuration) {
    m_default_new_sheet_configuration = default_new_sheet_configuration;
    m_default_new_sheet_configuration_isSet = true;
}

bool OAIAnalysisDefaults::is_default_new_sheet_configuration_Set() const{
    return m_default_new_sheet_configuration_isSet;
}

bool OAIAnalysisDefaults::is_default_new_sheet_configuration_Valid() const{
    return m_default_new_sheet_configuration_isValid;
}

bool OAIAnalysisDefaults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_new_sheet_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalysisDefaults::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_new_sheet_configuration_isValid && true;
}

} // namespace OpenAPI
