/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxPlotSortConfiguration_PaginationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxPlotSortConfiguration_PaginationConfiguration::OAIBoxPlotSortConfiguration_PaginationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxPlotSortConfiguration_PaginationConfiguration::OAIBoxPlotSortConfiguration_PaginationConfiguration() {
    this->initializeModel();
}

OAIBoxPlotSortConfiguration_PaginationConfiguration::~OAIBoxPlotSortConfiguration_PaginationConfiguration() {}

void OAIBoxPlotSortConfiguration_PaginationConfiguration::initializeModel() {

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;
}

void OAIBoxPlotSortConfiguration_PaginationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoxPlotSortConfiguration_PaginationConfiguration::fromJsonObject(QJsonObject json) {

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("PageSize")]);
    m_page_size_isSet = !json[QString("PageSize")].isNull() && m_page_size_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("PageNumber")]);
    m_page_number_isSet = !json[QString("PageNumber")].isNull() && m_page_number_isValid;
}

QString OAIBoxPlotSortConfiguration_PaginationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoxPlotSortConfiguration_PaginationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_page_size_isSet) {
        obj.insert(QString("PageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("PageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    return obj;
}

qint32 OAIBoxPlotSortConfiguration_PaginationConfiguration::getPageSize() const {
    return m_page_size;
}
void OAIBoxPlotSortConfiguration_PaginationConfiguration::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::is_page_size_Valid() const{
    return m_page_size_isValid;
}

qint32 OAIBoxPlotSortConfiguration_PaginationConfiguration::getPageNumber() const {
    return m_page_number;
}
void OAIBoxPlotSortConfiguration_PaginationConfiguration::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::is_page_number_Valid() const{
    return m_page_number_isValid;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoxPlotSortConfiguration_PaginationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_page_size_isValid && m_page_number_isValid && true;
}

} // namespace OpenAPI
