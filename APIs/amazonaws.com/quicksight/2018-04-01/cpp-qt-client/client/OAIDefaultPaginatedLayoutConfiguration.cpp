/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultPaginatedLayoutConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultPaginatedLayoutConfiguration::OAIDefaultPaginatedLayoutConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultPaginatedLayoutConfiguration::OAIDefaultPaginatedLayoutConfiguration() {
    this->initializeModel();
}

OAIDefaultPaginatedLayoutConfiguration::~OAIDefaultPaginatedLayoutConfiguration() {}

void OAIDefaultPaginatedLayoutConfiguration::initializeModel() {

    m_section_based_isSet = false;
    m_section_based_isValid = false;
}

void OAIDefaultPaginatedLayoutConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultPaginatedLayoutConfiguration::fromJsonObject(QJsonObject json) {

    m_section_based_isValid = ::OpenAPI::fromJsonValue(m_section_based, json[QString("SectionBased")]);
    m_section_based_isSet = !json[QString("SectionBased")].isNull() && m_section_based_isValid;
}

QString OAIDefaultPaginatedLayoutConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultPaginatedLayoutConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_section_based.isSet()) {
        obj.insert(QString("SectionBased"), ::OpenAPI::toJsonValue(m_section_based));
    }
    return obj;
}

OAIDefaultPaginatedLayoutConfiguration_SectionBased OAIDefaultPaginatedLayoutConfiguration::getSectionBased() const {
    return m_section_based;
}
void OAIDefaultPaginatedLayoutConfiguration::setSectionBased(const OAIDefaultPaginatedLayoutConfiguration_SectionBased &section_based) {
    m_section_based = section_based;
    m_section_based_isSet = true;
}

bool OAIDefaultPaginatedLayoutConfiguration::is_section_based_Set() const{
    return m_section_based_isSet;
}

bool OAIDefaultPaginatedLayoutConfiguration::is_section_based_Valid() const{
    return m_section_based_isValid;
}

bool OAIDefaultPaginatedLayoutConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_section_based.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultPaginatedLayoutConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
