/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineChartConfiguration_FieldWells::OAILineChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineChartConfiguration_FieldWells::OAILineChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAILineChartConfiguration_FieldWells::~OAILineChartConfiguration_FieldWells() {}

void OAILineChartConfiguration_FieldWells::initializeModel() {

    m_line_chart_aggregated_field_wells_isSet = false;
    m_line_chart_aggregated_field_wells_isValid = false;
}

void OAILineChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_line_chart_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_line_chart_aggregated_field_wells, json[QString("LineChartAggregatedFieldWells")]);
    m_line_chart_aggregated_field_wells_isSet = !json[QString("LineChartAggregatedFieldWells")].isNull() && m_line_chart_aggregated_field_wells_isValid;
}

QString OAILineChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_line_chart_aggregated_field_wells.isSet()) {
        obj.insert(QString("LineChartAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_line_chart_aggregated_field_wells));
    }
    return obj;
}

OAILineChartFieldWells_LineChartAggregatedFieldWells OAILineChartConfiguration_FieldWells::getLineChartAggregatedFieldWells() const {
    return m_line_chart_aggregated_field_wells;
}
void OAILineChartConfiguration_FieldWells::setLineChartAggregatedFieldWells(const OAILineChartFieldWells_LineChartAggregatedFieldWells &line_chart_aggregated_field_wells) {
    m_line_chart_aggregated_field_wells = line_chart_aggregated_field_wells;
    m_line_chart_aggregated_field_wells_isSet = true;
}

bool OAILineChartConfiguration_FieldWells::is_line_chart_aggregated_field_wells_Set() const{
    return m_line_chart_aggregated_field_wells_isSet;
}

bool OAILineChartConfiguration_FieldWells::is_line_chart_aggregated_field_wells_Valid() const{
    return m_line_chart_aggregated_field_wells_isValid;
}

bool OAILineChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_chart_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
