/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILookbackWindow.h
 *
 * The lookback window setup of an incremental refresh configuration.
 */

#ifndef OAILookbackWindow_H
#define OAILookbackWindow_H

#include <QJsonObject>

#include "OAILookbackWindowSizeUnit.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILookbackWindow : public OAIObject {
public:
    OAILookbackWindow();
    OAILookbackWindow(QString json);
    ~OAILookbackWindow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColumnName() const;
    void setColumnName(const QString &column_name);
    bool is_column_name_Set() const;
    bool is_column_name_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    OAILookbackWindowSizeUnit getSizeUnit() const;
    void setSizeUnit(const OAILookbackWindowSizeUnit &size_unit);
    bool is_size_unit_Set() const;
    bool is_size_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_column_name;
    bool m_column_name_isSet;
    bool m_column_name_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    OAILookbackWindowSizeUnit m_size_unit;
    bool m_size_unit_isSet;
    bool m_size_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILookbackWindow)

#endif // OAILookbackWindow_H
