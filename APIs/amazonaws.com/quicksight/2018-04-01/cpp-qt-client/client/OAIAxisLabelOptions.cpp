/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisLabelOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisLabelOptions::OAIAxisLabelOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisLabelOptions::OAIAxisLabelOptions() {
    this->initializeModel();
}

OAIAxisLabelOptions::~OAIAxisLabelOptions() {}

void OAIAxisLabelOptions::initializeModel() {

    m_font_configuration_isSet = false;
    m_font_configuration_isValid = false;

    m_custom_label_isSet = false;
    m_custom_label_isValid = false;

    m_apply_to_isSet = false;
    m_apply_to_isValid = false;
}

void OAIAxisLabelOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisLabelOptions::fromJsonObject(QJsonObject json) {

    m_font_configuration_isValid = ::OpenAPI::fromJsonValue(m_font_configuration, json[QString("FontConfiguration")]);
    m_font_configuration_isSet = !json[QString("FontConfiguration")].isNull() && m_font_configuration_isValid;

    m_custom_label_isValid = ::OpenAPI::fromJsonValue(m_custom_label, json[QString("CustomLabel")]);
    m_custom_label_isSet = !json[QString("CustomLabel")].isNull() && m_custom_label_isValid;

    m_apply_to_isValid = ::OpenAPI::fromJsonValue(m_apply_to, json[QString("ApplyTo")]);
    m_apply_to_isSet = !json[QString("ApplyTo")].isNull() && m_apply_to_isValid;
}

QString OAIAxisLabelOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisLabelOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_font_configuration.isSet()) {
        obj.insert(QString("FontConfiguration"), ::OpenAPI::toJsonValue(m_font_configuration));
    }
    if (m_custom_label_isSet) {
        obj.insert(QString("CustomLabel"), ::OpenAPI::toJsonValue(m_custom_label));
    }
    if (m_apply_to.isSet()) {
        obj.insert(QString("ApplyTo"), ::OpenAPI::toJsonValue(m_apply_to));
    }
    return obj;
}

OAIAxisLabelOptions_FontConfiguration OAIAxisLabelOptions::getFontConfiguration() const {
    return m_font_configuration;
}
void OAIAxisLabelOptions::setFontConfiguration(const OAIAxisLabelOptions_FontConfiguration &font_configuration) {
    m_font_configuration = font_configuration;
    m_font_configuration_isSet = true;
}

bool OAIAxisLabelOptions::is_font_configuration_Set() const{
    return m_font_configuration_isSet;
}

bool OAIAxisLabelOptions::is_font_configuration_Valid() const{
    return m_font_configuration_isValid;
}

QString OAIAxisLabelOptions::getCustomLabel() const {
    return m_custom_label;
}
void OAIAxisLabelOptions::setCustomLabel(const QString &custom_label) {
    m_custom_label = custom_label;
    m_custom_label_isSet = true;
}

bool OAIAxisLabelOptions::is_custom_label_Set() const{
    return m_custom_label_isSet;
}

bool OAIAxisLabelOptions::is_custom_label_Valid() const{
    return m_custom_label_isValid;
}

OAIAxisLabelOptions_ApplyTo OAIAxisLabelOptions::getApplyTo() const {
    return m_apply_to;
}
void OAIAxisLabelOptions::setApplyTo(const OAIAxisLabelOptions_ApplyTo &apply_to) {
    m_apply_to = apply_to;
    m_apply_to_isSet = true;
}

bool OAIAxisLabelOptions::is_apply_to_Set() const{
    return m_apply_to_isSet;
}

bool OAIAxisLabelOptions::is_apply_to_Valid() const{
    return m_apply_to_isValid;
}

bool OAIAxisLabelOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_font_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_to.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisLabelOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
