/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISheetDefinition.h
 *
 * A sheet is an object that contains a set of visuals that are viewed together on one page in a paginated report. Every analysis and dashboard must contain at least one sheet.
 */

#ifndef OAISheetDefinition_H
#define OAISheetDefinition_H

#include <QJsonObject>

#include "OAISheetContentType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISheetDefinition : public OAIObject {
public:
    OAISheetDefinition();
    OAISheetDefinition(QString json);
    ~OAISheetDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSheetId() const;
    void setSheetId(const QString &sheet_id);
    bool is_sheet_id_Set() const;
    bool is_sheet_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getParameterControls() const;
    void setParameterControls(const QList &parameter_controls);
    bool is_parameter_controls_Set() const;
    bool is_parameter_controls_Valid() const;

    QList getFilterControls() const;
    void setFilterControls(const QList &filter_controls);
    bool is_filter_controls_Set() const;
    bool is_filter_controls_Valid() const;

    QList getVisuals() const;
    void setVisuals(const QList &visuals);
    bool is_visuals_Set() const;
    bool is_visuals_Valid() const;

    QList getTextBoxes() const;
    void setTextBoxes(const QList &text_boxes);
    bool is_text_boxes_Set() const;
    bool is_text_boxes_Valid() const;

    QList getLayouts() const;
    void setLayouts(const QList &layouts);
    bool is_layouts_Set() const;
    bool is_layouts_Valid() const;

    QList getSheetControlLayouts() const;
    void setSheetControlLayouts(const QList &sheet_control_layouts);
    bool is_sheet_control_layouts_Set() const;
    bool is_sheet_control_layouts_Valid() const;

    OAISheetContentType getContentType() const;
    void setContentType(const OAISheetContentType &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_sheet_id;
    bool m_sheet_id_isSet;
    bool m_sheet_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_parameter_controls;
    bool m_parameter_controls_isSet;
    bool m_parameter_controls_isValid;

    QList m_filter_controls;
    bool m_filter_controls_isSet;
    bool m_filter_controls_isValid;

    QList m_visuals;
    bool m_visuals_isSet;
    bool m_visuals_isValid;

    QList m_text_boxes;
    bool m_text_boxes_isSet;
    bool m_text_boxes_isValid;

    QList m_layouts;
    bool m_layouts_isSet;
    bool m_layouts_isValid;

    QList m_sheet_control_layouts;
    bool m_sheet_control_layouts_isSet;
    bool m_sheet_control_layouts_isValid;

    OAISheetContentType m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISheetDefinition)

#endif // OAISheetDefinition_H
