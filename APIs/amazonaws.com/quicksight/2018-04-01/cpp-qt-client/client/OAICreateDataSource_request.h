/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataSource_request.h
 *
 * 
 */

#ifndef OAICreateDataSource_request_H
#define OAICreateDataSource_request_H

#include <QJsonObject>

#include "OAICreateDataSource_request_Credentials.h"
#include "OAICreateDataSource_request_DataSourceParameters.h"
#include "OAICreateDataSource_request_SslProperties.h"
#include "OAICreateDataSource_request_VpcConnectionProperties.h"
#include "OAIResourcePermission.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDataSource_request_DataSourceParameters;
class OAICreateDataSource_request_Credentials;
class OAIResourcePermission;
class OAICreateDataSource_request_VpcConnectionProperties;
class OAICreateDataSource_request_SslProperties;
class OAITag;

class OAICreateDataSource_request : public OAIObject {
public:
    OAICreateDataSource_request();
    OAICreateDataSource_request(QString json);
    ~OAICreateDataSource_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAICreateDataSource_request_DataSourceParameters getDataSourceParameters() const;
    void setDataSourceParameters(const OAICreateDataSource_request_DataSourceParameters &data_source_parameters);
    bool is_data_source_parameters_Set() const;
    bool is_data_source_parameters_Valid() const;

    OAICreateDataSource_request_Credentials getCredentials() const;
    void setCredentials(const OAICreateDataSource_request_Credentials &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QList<OAIResourcePermission> getPermissions() const;
    void setPermissions(const QList<OAIResourcePermission> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    OAICreateDataSource_request_VpcConnectionProperties getVpcConnectionProperties() const;
    void setVpcConnectionProperties(const OAICreateDataSource_request_VpcConnectionProperties &vpc_connection_properties);
    bool is_vpc_connection_properties_Set() const;
    bool is_vpc_connection_properties_Valid() const;

    OAICreateDataSource_request_SslProperties getSslProperties() const;
    void setSslProperties(const OAICreateDataSource_request_SslProperties &ssl_properties);
    bool is_ssl_properties_Set() const;
    bool is_ssl_properties_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAICreateDataSource_request_DataSourceParameters m_data_source_parameters;
    bool m_data_source_parameters_isSet;
    bool m_data_source_parameters_isValid;

    OAICreateDataSource_request_Credentials m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QList<OAIResourcePermission> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    OAICreateDataSource_request_VpcConnectionProperties m_vpc_connection_properties;
    bool m_vpc_connection_properties_isSet;
    bool m_vpc_connection_properties_isValid;

    OAICreateDataSource_request_SslProperties m_ssl_properties;
    bool m_ssl_properties_isSet;
    bool m_ssl_properties_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataSource_request)

#endif // OAICreateDataSource_request_H
