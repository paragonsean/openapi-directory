/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceLine.h
 *
 * The reference line visual display options.
 */

#ifndef OAIReferenceLine_H
#define OAIReferenceLine_H

#include <QJsonObject>

#include "OAIReferenceLine_DataConfiguration.h"
#include "OAIReferenceLine_LabelConfiguration.h"
#include "OAIReferenceLine_StyleConfiguration.h"
#include "OAIWidgetStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceLine_DataConfiguration;
class OAIReferenceLine_StyleConfiguration;
class OAIReferenceLine_LabelConfiguration;

class OAIReferenceLine : public OAIObject {
public:
    OAIReferenceLine();
    OAIReferenceLine(QString json);
    ~OAIReferenceLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWidgetStatus getStatus() const;
    void setStatus(const OAIWidgetStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIReferenceLine_DataConfiguration getDataConfiguration() const;
    void setDataConfiguration(const OAIReferenceLine_DataConfiguration &data_configuration);
    bool is_data_configuration_Set() const;
    bool is_data_configuration_Valid() const;

    OAIReferenceLine_StyleConfiguration getStyleConfiguration() const;
    void setStyleConfiguration(const OAIReferenceLine_StyleConfiguration &style_configuration);
    bool is_style_configuration_Set() const;
    bool is_style_configuration_Valid() const;

    OAIReferenceLine_LabelConfiguration getLabelConfiguration() const;
    void setLabelConfiguration(const OAIReferenceLine_LabelConfiguration &label_configuration);
    bool is_label_configuration_Set() const;
    bool is_label_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWidgetStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIReferenceLine_DataConfiguration m_data_configuration;
    bool m_data_configuration_isSet;
    bool m_data_configuration_isValid;

    OAIReferenceLine_StyleConfiguration m_style_configuration;
    bool m_style_configuration_isSet;
    bool m_style_configuration_isValid;

    OAIReferenceLine_LabelConfiguration m_label_configuration;
    bool m_label_configuration_isSet;
    bool m_label_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceLine)

#endif // OAIReferenceLine_H
