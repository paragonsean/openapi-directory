/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheet::OAISheet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheet::OAISheet() {
    this->initializeModel();
}

OAISheet::~OAISheet() {}

void OAISheet::initializeModel() {

    m_sheet_id_isSet = false;
    m_sheet_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAISheet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISheet::fromJsonObject(QJsonObject json) {

    m_sheet_id_isValid = ::OpenAPI::fromJsonValue(m_sheet_id, json[QString("SheetId")]);
    m_sheet_id_isSet = !json[QString("SheetId")].isNull() && m_sheet_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAISheet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISheet::asJsonObject() const {
    QJsonObject obj;
    if (m_sheet_id_isSet) {
        obj.insert(QString("SheetId"), ::OpenAPI::toJsonValue(m_sheet_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAISheet::getSheetId() const {
    return m_sheet_id;
}
void OAISheet::setSheetId(const QString &sheet_id) {
    m_sheet_id = sheet_id;
    m_sheet_id_isSet = true;
}

bool OAISheet::is_sheet_id_Set() const{
    return m_sheet_id_isSet;
}

bool OAISheet::is_sheet_id_Valid() const{
    return m_sheet_id_isValid;
}

QString OAISheet::getName() const {
    return m_name;
}
void OAISheet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISheet::is_name_Set() const{
    return m_name_isSet;
}

bool OAISheet::is_name_Valid() const{
    return m_name_isValid;
}

bool OAISheet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISheet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
