/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeBasedForecastProperties.h
 *
 * The forecast properties setup of a forecast in the line chart.
 */

#ifndef OAITimeBasedForecastProperties_H
#define OAITimeBasedForecastProperties_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimeBasedForecastProperties : public OAIObject {
public:
    OAITimeBasedForecastProperties();
    OAITimeBasedForecastProperties(QString json);
    ~OAITimeBasedForecastProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPeriodsForward() const;
    void setPeriodsForward(const qint32 &periods_forward);
    bool is_periods_forward_Set() const;
    bool is_periods_forward_Valid() const;

    qint32 getPeriodsBackward() const;
    void setPeriodsBackward(const qint32 &periods_backward);
    bool is_periods_backward_Set() const;
    bool is_periods_backward_Valid() const;

    double getUpperBoundary() const;
    void setUpperBoundary(const double &upper_boundary);
    bool is_upper_boundary_Set() const;
    bool is_upper_boundary_Valid() const;

    double getLowerBoundary() const;
    void setLowerBoundary(const double &lower_boundary);
    bool is_lower_boundary_Set() const;
    bool is_lower_boundary_Valid() const;

    qint32 getPredictionInterval() const;
    void setPredictionInterval(const qint32 &prediction_interval);
    bool is_prediction_interval_Set() const;
    bool is_prediction_interval_Valid() const;

    qint32 getSeasonality() const;
    void setSeasonality(const qint32 &seasonality);
    bool is_seasonality_Set() const;
    bool is_seasonality_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_periods_forward;
    bool m_periods_forward_isSet;
    bool m_periods_forward_isValid;

    qint32 m_periods_backward;
    bool m_periods_backward_isSet;
    bool m_periods_backward_isValid;

    double m_upper_boundary;
    bool m_upper_boundary_isSet;
    bool m_upper_boundary_isValid;

    double m_lower_boundary;
    bool m_lower_boundary_isSet;
    bool m_lower_boundary_isValid;

    qint32 m_prediction_interval;
    bool m_prediction_interval_isSet;
    bool m_prediction_interval_isValid;

    qint32 m_seasonality;
    bool m_seasonality_isSet;
    bool m_seasonality_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeBasedForecastProperties)

#endif // OAITimeBasedForecastProperties_H
