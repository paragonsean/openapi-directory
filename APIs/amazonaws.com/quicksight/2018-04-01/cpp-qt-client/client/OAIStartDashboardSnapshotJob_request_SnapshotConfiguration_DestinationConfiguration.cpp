/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration() {
    this->initializeModel();
}

OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::~OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration() {}

void OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::initializeModel() {

    m_s3_destinations_isSet = false;
    m_s3_destinations_isValid = false;
}

void OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::fromJsonObject(QJsonObject json) {

    m_s3_destinations_isValid = ::OpenAPI::fromJsonValue(m_s3_destinations, json[QString("S3Destinations")]);
    m_s3_destinations_isSet = !json[QString("S3Destinations")].isNull() && m_s3_destinations_isValid;
}

QString OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_destinations.isSet()) {
        obj.insert(QString("S3Destinations"), ::OpenAPI::toJsonValue(m_s3_destinations));
    }
    return obj;
}

QList OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::getS3Destinations() const {
    return m_s3_destinations;
}
void OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::setS3Destinations(const QList &s3_destinations) {
    m_s3_destinations = s3_destinations;
    m_s3_destinations_isSet = true;
}

bool OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::is_s3_destinations_Set() const{
    return m_s3_destinations_isSet;
}

bool OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::is_s3_destinations_Valid() const{
    return m_s3_destinations_isValid;
}

bool OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartDashboardSnapshotJob_request_SnapshotConfiguration_DestinationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
