/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalParameter::OAIDecimalParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalParameter::OAIDecimalParameter() {
    this->initializeModel();
}

OAIDecimalParameter::~OAIDecimalParameter() {}

void OAIDecimalParameter::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIDecimalParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalParameter::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIDecimalParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIDecimalParameter::getName() const {
    return m_name;
}
void OAIDecimalParameter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDecimalParameter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDecimalParameter::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIDecimalParameter::getValues() const {
    return m_values;
}
void OAIDecimalParameter::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIDecimalParameter::is_values_Set() const{
    return m_values_isSet;
}

bool OAIDecimalParameter::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIDecimalParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_values_isValid && true;
}

} // namespace OpenAPI
