/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormatConfiguration_StringFormatConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormatConfiguration_StringFormatConfiguration::OAIFormatConfiguration_StringFormatConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormatConfiguration_StringFormatConfiguration::OAIFormatConfiguration_StringFormatConfiguration() {
    this->initializeModel();
}

OAIFormatConfiguration_StringFormatConfiguration::~OAIFormatConfiguration_StringFormatConfiguration() {}

void OAIFormatConfiguration_StringFormatConfiguration::initializeModel() {

    m_null_value_format_configuration_isSet = false;
    m_null_value_format_configuration_isValid = false;

    m_numeric_format_configuration_isSet = false;
    m_numeric_format_configuration_isValid = false;
}

void OAIFormatConfiguration_StringFormatConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFormatConfiguration_StringFormatConfiguration::fromJsonObject(QJsonObject json) {

    m_null_value_format_configuration_isValid = ::OpenAPI::fromJsonValue(m_null_value_format_configuration, json[QString("NullValueFormatConfiguration")]);
    m_null_value_format_configuration_isSet = !json[QString("NullValueFormatConfiguration")].isNull() && m_null_value_format_configuration_isValid;

    m_numeric_format_configuration_isValid = ::OpenAPI::fromJsonValue(m_numeric_format_configuration, json[QString("NumericFormatConfiguration")]);
    m_numeric_format_configuration_isSet = !json[QString("NumericFormatConfiguration")].isNull() && m_numeric_format_configuration_isValid;
}

QString OAIFormatConfiguration_StringFormatConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFormatConfiguration_StringFormatConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_null_value_format_configuration.isSet()) {
        obj.insert(QString("NullValueFormatConfiguration"), ::OpenAPI::toJsonValue(m_null_value_format_configuration));
    }
    if (m_numeric_format_configuration.isSet()) {
        obj.insert(QString("NumericFormatConfiguration"), ::OpenAPI::toJsonValue(m_numeric_format_configuration));
    }
    return obj;
}

OAIStringFormatConfiguration_NullValueFormatConfiguration OAIFormatConfiguration_StringFormatConfiguration::getNullValueFormatConfiguration() const {
    return m_null_value_format_configuration;
}
void OAIFormatConfiguration_StringFormatConfiguration::setNullValueFormatConfiguration(const OAIStringFormatConfiguration_NullValueFormatConfiguration &null_value_format_configuration) {
    m_null_value_format_configuration = null_value_format_configuration;
    m_null_value_format_configuration_isSet = true;
}

bool OAIFormatConfiguration_StringFormatConfiguration::is_null_value_format_configuration_Set() const{
    return m_null_value_format_configuration_isSet;
}

bool OAIFormatConfiguration_StringFormatConfiguration::is_null_value_format_configuration_Valid() const{
    return m_null_value_format_configuration_isValid;
}

OAIStringFormatConfiguration_NumericFormatConfiguration OAIFormatConfiguration_StringFormatConfiguration::getNumericFormatConfiguration() const {
    return m_numeric_format_configuration;
}
void OAIFormatConfiguration_StringFormatConfiguration::setNumericFormatConfiguration(const OAIStringFormatConfiguration_NumericFormatConfiguration &numeric_format_configuration) {
    m_numeric_format_configuration = numeric_format_configuration;
    m_numeric_format_configuration_isSet = true;
}

bool OAIFormatConfiguration_StringFormatConfiguration::is_numeric_format_configuration_Set() const{
    return m_numeric_format_configuration_isSet;
}

bool OAIFormatConfiguration_StringFormatConfiguration::is_numeric_format_configuration_Valid() const{
    return m_numeric_format_configuration_isValid;
}

bool OAIFormatConfiguration_StringFormatConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_null_value_format_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_numeric_format_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFormatConfiguration_StringFormatConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
