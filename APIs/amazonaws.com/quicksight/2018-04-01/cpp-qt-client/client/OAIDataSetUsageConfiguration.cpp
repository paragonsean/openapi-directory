/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSetUsageConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSetUsageConfiguration::OAIDataSetUsageConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSetUsageConfiguration::OAIDataSetUsageConfiguration() {
    this->initializeModel();
}

OAIDataSetUsageConfiguration::~OAIDataSetUsageConfiguration() {}

void OAIDataSetUsageConfiguration::initializeModel() {

    m_disable_use_as_direct_query_source_isSet = false;
    m_disable_use_as_direct_query_source_isValid = false;

    m_disable_use_as_imported_source_isSet = false;
    m_disable_use_as_imported_source_isValid = false;
}

void OAIDataSetUsageConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSetUsageConfiguration::fromJsonObject(QJsonObject json) {

    m_disable_use_as_direct_query_source_isValid = ::OpenAPI::fromJsonValue(m_disable_use_as_direct_query_source, json[QString("DisableUseAsDirectQuerySource")]);
    m_disable_use_as_direct_query_source_isSet = !json[QString("DisableUseAsDirectQuerySource")].isNull() && m_disable_use_as_direct_query_source_isValid;

    m_disable_use_as_imported_source_isValid = ::OpenAPI::fromJsonValue(m_disable_use_as_imported_source, json[QString("DisableUseAsImportedSource")]);
    m_disable_use_as_imported_source_isSet = !json[QString("DisableUseAsImportedSource")].isNull() && m_disable_use_as_imported_source_isValid;
}

QString OAIDataSetUsageConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSetUsageConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_use_as_direct_query_source_isSet) {
        obj.insert(QString("DisableUseAsDirectQuerySource"), ::OpenAPI::toJsonValue(m_disable_use_as_direct_query_source));
    }
    if (m_disable_use_as_imported_source_isSet) {
        obj.insert(QString("DisableUseAsImportedSource"), ::OpenAPI::toJsonValue(m_disable_use_as_imported_source));
    }
    return obj;
}

bool OAIDataSetUsageConfiguration::getDisableUseAsDirectQuerySource() const {
    return m_disable_use_as_direct_query_source;
}
void OAIDataSetUsageConfiguration::setDisableUseAsDirectQuerySource(const bool &disable_use_as_direct_query_source) {
    m_disable_use_as_direct_query_source = disable_use_as_direct_query_source;
    m_disable_use_as_direct_query_source_isSet = true;
}

bool OAIDataSetUsageConfiguration::is_disable_use_as_direct_query_source_Set() const{
    return m_disable_use_as_direct_query_source_isSet;
}

bool OAIDataSetUsageConfiguration::is_disable_use_as_direct_query_source_Valid() const{
    return m_disable_use_as_direct_query_source_isValid;
}

bool OAIDataSetUsageConfiguration::getDisableUseAsImportedSource() const {
    return m_disable_use_as_imported_source;
}
void OAIDataSetUsageConfiguration::setDisableUseAsImportedSource(const bool &disable_use_as_imported_source) {
    m_disable_use_as_imported_source = disable_use_as_imported_source;
    m_disable_use_as_imported_source_isSet = true;
}

bool OAIDataSetUsageConfiguration::is_disable_use_as_imported_source_Set() const{
    return m_disable_use_as_imported_source_isSet;
}

bool OAIDataSetUsageConfiguration::is_disable_use_as_imported_source_Valid() const{
    return m_disable_use_as_imported_source_isValid;
}

bool OAIDataSetUsageConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_use_as_direct_query_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_use_as_imported_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSetUsageConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
