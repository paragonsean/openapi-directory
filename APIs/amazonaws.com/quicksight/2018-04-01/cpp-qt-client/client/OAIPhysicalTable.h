/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhysicalTable.h
 *
 * A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
 */

#ifndef OAIPhysicalTable_H
#define OAIPhysicalTable_H

#include <QJsonObject>

#include "OAIPhysicalTable_CustomSql.h"
#include "OAIPhysicalTable_RelationalTable.h"
#include "OAIPhysicalTable_S3Source.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhysicalTable_RelationalTable;
class OAIPhysicalTable_CustomSql;
class OAIPhysicalTable_S3Source;

class OAIPhysicalTable : public OAIObject {
public:
    OAIPhysicalTable();
    OAIPhysicalTable(QString json);
    ~OAIPhysicalTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPhysicalTable_RelationalTable getRelationalTable() const;
    void setRelationalTable(const OAIPhysicalTable_RelationalTable &relational_table);
    bool is_relational_table_Set() const;
    bool is_relational_table_Valid() const;

    OAIPhysicalTable_CustomSql getCustomSql() const;
    void setCustomSql(const OAIPhysicalTable_CustomSql &custom_sql);
    bool is_custom_sql_Set() const;
    bool is_custom_sql_Valid() const;

    OAIPhysicalTable_S3Source getS3Source() const;
    void setS3Source(const OAIPhysicalTable_S3Source &s3_source);
    bool is_s3_source_Set() const;
    bool is_s3_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPhysicalTable_RelationalTable m_relational_table;
    bool m_relational_table_isSet;
    bool m_relational_table_isValid;

    OAIPhysicalTable_CustomSql m_custom_sql;
    bool m_custom_sql_isSet;
    bool m_custom_sql_isValid;

    OAIPhysicalTable_S3Source m_s3_source;
    bool m_s3_source_isSet;
    bool m_s3_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhysicalTable)

#endif // OAIPhysicalTable_H
