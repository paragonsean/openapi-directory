/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineChartConfiguration_PrimaryYAxisDisplayOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineChartConfiguration_PrimaryYAxisDisplayOptions::OAILineChartConfiguration_PrimaryYAxisDisplayOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineChartConfiguration_PrimaryYAxisDisplayOptions::OAILineChartConfiguration_PrimaryYAxisDisplayOptions() {
    this->initializeModel();
}

OAILineChartConfiguration_PrimaryYAxisDisplayOptions::~OAILineChartConfiguration_PrimaryYAxisDisplayOptions() {}

void OAILineChartConfiguration_PrimaryYAxisDisplayOptions::initializeModel() {

    m_axis_options_isSet = false;
    m_axis_options_isValid = false;

    m_missing_data_configurations_isSet = false;
    m_missing_data_configurations_isValid = false;
}

void OAILineChartConfiguration_PrimaryYAxisDisplayOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineChartConfiguration_PrimaryYAxisDisplayOptions::fromJsonObject(QJsonObject json) {

    m_axis_options_isValid = ::OpenAPI::fromJsonValue(m_axis_options, json[QString("AxisOptions")]);
    m_axis_options_isSet = !json[QString("AxisOptions")].isNull() && m_axis_options_isValid;

    m_missing_data_configurations_isValid = ::OpenAPI::fromJsonValue(m_missing_data_configurations, json[QString("MissingDataConfigurations")]);
    m_missing_data_configurations_isSet = !json[QString("MissingDataConfigurations")].isNull() && m_missing_data_configurations_isValid;
}

QString OAILineChartConfiguration_PrimaryYAxisDisplayOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineChartConfiguration_PrimaryYAxisDisplayOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_axis_options.isSet()) {
        obj.insert(QString("AxisOptions"), ::OpenAPI::toJsonValue(m_axis_options));
    }
    if (m_missing_data_configurations.isSet()) {
        obj.insert(QString("MissingDataConfigurations"), ::OpenAPI::toJsonValue(m_missing_data_configurations));
    }
    return obj;
}

OAILineSeriesAxisDisplayOptions_AxisOptions OAILineChartConfiguration_PrimaryYAxisDisplayOptions::getAxisOptions() const {
    return m_axis_options;
}
void OAILineChartConfiguration_PrimaryYAxisDisplayOptions::setAxisOptions(const OAILineSeriesAxisDisplayOptions_AxisOptions &axis_options) {
    m_axis_options = axis_options;
    m_axis_options_isSet = true;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::is_axis_options_Set() const{
    return m_axis_options_isSet;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::is_axis_options_Valid() const{
    return m_axis_options_isValid;
}

QList OAILineChartConfiguration_PrimaryYAxisDisplayOptions::getMissingDataConfigurations() const {
    return m_missing_data_configurations;
}
void OAILineChartConfiguration_PrimaryYAxisDisplayOptions::setMissingDataConfigurations(const QList &missing_data_configurations) {
    m_missing_data_configurations = missing_data_configurations;
    m_missing_data_configurations_isSet = true;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::is_missing_data_configurations_Set() const{
    return m_missing_data_configurations_isSet;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::is_missing_data_configurations_Valid() const{
    return m_missing_data_configurations_isValid;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_axis_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_missing_data_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineChartConfiguration_PrimaryYAxisDisplayOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
