/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionStyle_Padding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionStyle_Padding::OAISectionStyle_Padding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionStyle_Padding::OAISectionStyle_Padding() {
    this->initializeModel();
}

OAISectionStyle_Padding::~OAISectionStyle_Padding() {}

void OAISectionStyle_Padding::initializeModel() {

    m_top_isSet = false;
    m_top_isValid = false;

    m_bottom_isSet = false;
    m_bottom_isValid = false;

    m_left_isSet = false;
    m_left_isValid = false;

    m_right_isSet = false;
    m_right_isValid = false;
}

void OAISectionStyle_Padding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionStyle_Padding::fromJsonObject(QJsonObject json) {

    m_top_isValid = ::OpenAPI::fromJsonValue(m_top, json[QString("Top")]);
    m_top_isSet = !json[QString("Top")].isNull() && m_top_isValid;

    m_bottom_isValid = ::OpenAPI::fromJsonValue(m_bottom, json[QString("Bottom")]);
    m_bottom_isSet = !json[QString("Bottom")].isNull() && m_bottom_isValid;

    m_left_isValid = ::OpenAPI::fromJsonValue(m_left, json[QString("Left")]);
    m_left_isSet = !json[QString("Left")].isNull() && m_left_isValid;

    m_right_isValid = ::OpenAPI::fromJsonValue(m_right, json[QString("Right")]);
    m_right_isSet = !json[QString("Right")].isNull() && m_right_isValid;
}

QString OAISectionStyle_Padding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionStyle_Padding::asJsonObject() const {
    QJsonObject obj;
    if (m_top_isSet) {
        obj.insert(QString("Top"), ::OpenAPI::toJsonValue(m_top));
    }
    if (m_bottom_isSet) {
        obj.insert(QString("Bottom"), ::OpenAPI::toJsonValue(m_bottom));
    }
    if (m_left_isSet) {
        obj.insert(QString("Left"), ::OpenAPI::toJsonValue(m_left));
    }
    if (m_right_isSet) {
        obj.insert(QString("Right"), ::OpenAPI::toJsonValue(m_right));
    }
    return obj;
}

QString OAISectionStyle_Padding::getTop() const {
    return m_top;
}
void OAISectionStyle_Padding::setTop(const QString &top) {
    m_top = top;
    m_top_isSet = true;
}

bool OAISectionStyle_Padding::is_top_Set() const{
    return m_top_isSet;
}

bool OAISectionStyle_Padding::is_top_Valid() const{
    return m_top_isValid;
}

QString OAISectionStyle_Padding::getBottom() const {
    return m_bottom;
}
void OAISectionStyle_Padding::setBottom(const QString &bottom) {
    m_bottom = bottom;
    m_bottom_isSet = true;
}

bool OAISectionStyle_Padding::is_bottom_Set() const{
    return m_bottom_isSet;
}

bool OAISectionStyle_Padding::is_bottom_Valid() const{
    return m_bottom_isValid;
}

QString OAISectionStyle_Padding::getLeft() const {
    return m_left;
}
void OAISectionStyle_Padding::setLeft(const QString &left) {
    m_left = left;
    m_left_isSet = true;
}

bool OAISectionStyle_Padding::is_left_Set() const{
    return m_left_isSet;
}

bool OAISectionStyle_Padding::is_left_Valid() const{
    return m_left_isValid;
}

QString OAISectionStyle_Padding::getRight() const {
    return m_right;
}
void OAISectionStyle_Padding::setRight(const QString &right) {
    m_right = right;
    m_right_isSet = true;
}

bool OAISectionStyle_Padding::is_right_Set() const{
    return m_right_isSet;
}

bool OAISectionStyle_Padding::is_right_Valid() const{
    return m_right_isValid;
}

bool OAISectionStyle_Padding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_top_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bottom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_left_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_right_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionStyle_Padding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
