/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetBundleImportJobRefreshScheduleOverrideParameters.h
 *
 * A list of overrides for a specific &lt;code&gt;RefreshsSchedule&lt;/code&gt; resource that is present in the asset bundle that is imported.
 */

#ifndef OAIAssetBundleImportJobRefreshScheduleOverrideParameters_H
#define OAIAssetBundleImportJobRefreshScheduleOverrideParameters_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssetBundleImportJobRefreshScheduleOverrideParameters : public OAIObject {
public:
    OAIAssetBundleImportJobRefreshScheduleOverrideParameters();
    OAIAssetBundleImportJobRefreshScheduleOverrideParameters(QString json);
    ~OAIAssetBundleImportJobRefreshScheduleOverrideParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSetId() const;
    void setDataSetId(const QString &data_set_id);
    bool is_data_set_id_Set() const;
    bool is_data_set_id_Valid() const;

    QString getScheduleId() const;
    void setScheduleId(const QString &schedule_id);
    bool is_schedule_id_Set() const;
    bool is_schedule_id_Valid() const;

    QDateTime getStartAfterDateTime() const;
    void setStartAfterDateTime(const QDateTime &start_after_date_time);
    bool is_start_after_date_time_Set() const;
    bool is_start_after_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_set_id;
    bool m_data_set_id_isSet;
    bool m_data_set_id_isValid;

    QString m_schedule_id;
    bool m_schedule_id_isSet;
    bool m_schedule_id_isValid;

    QDateTime m_start_after_date_time;
    bool m_start_after_date_time_isSet;
    bool m_start_after_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetBundleImportJobRefreshScheduleOverrideParameters)

#endif // OAIAssetBundleImportJobRefreshScheduleOverrideParameters_H
