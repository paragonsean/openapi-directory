/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITypography.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITypography::OAITypography(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITypography::OAITypography() {
    this->initializeModel();
}

OAITypography::~OAITypography() {}

void OAITypography::initializeModel() {

    m_font_families_isSet = false;
    m_font_families_isValid = false;
}

void OAITypography::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITypography::fromJsonObject(QJsonObject json) {

    m_font_families_isValid = ::OpenAPI::fromJsonValue(m_font_families, json[QString("FontFamilies")]);
    m_font_families_isSet = !json[QString("FontFamilies")].isNull() && m_font_families_isValid;
}

QString OAITypography::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITypography::asJsonObject() const {
    QJsonObject obj;
    if (m_font_families.isSet()) {
        obj.insert(QString("FontFamilies"), ::OpenAPI::toJsonValue(m_font_families));
    }
    return obj;
}

QList OAITypography::getFontFamilies() const {
    return m_font_families;
}
void OAITypography::setFontFamilies(const QList &font_families) {
    m_font_families = font_families;
    m_font_families_isSet = true;
}

bool OAITypography::is_font_families_Set() const{
    return m_font_families_isSet;
}

bool OAITypography::is_font_families_Valid() const{
    return m_font_families_isValid;
}

bool OAITypography::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_font_families.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITypography::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
