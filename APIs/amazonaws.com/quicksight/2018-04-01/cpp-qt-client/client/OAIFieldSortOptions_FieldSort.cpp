/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldSortOptions_FieldSort.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldSortOptions_FieldSort::OAIFieldSortOptions_FieldSort(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldSortOptions_FieldSort::OAIFieldSortOptions_FieldSort() {
    this->initializeModel();
}

OAIFieldSortOptions_FieldSort::~OAIFieldSortOptions_FieldSort() {}

void OAIFieldSortOptions_FieldSort::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;
}

void OAIFieldSortOptions_FieldSort::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldSortOptions_FieldSort::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldId")]);
    m_field_id_isSet = !json[QString("FieldId")].isNull() && m_field_id_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("Direction")]);
    m_direction_isSet = !json[QString("Direction")].isNull() && m_direction_isValid;
}

QString OAIFieldSortOptions_FieldSort::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldSortOptions_FieldSort::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id_isSet) {
        obj.insert(QString("FieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_direction.isSet()) {
        obj.insert(QString("Direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    return obj;
}

QString OAIFieldSortOptions_FieldSort::getFieldId() const {
    return m_field_id;
}
void OAIFieldSortOptions_FieldSort::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIFieldSortOptions_FieldSort::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIFieldSortOptions_FieldSort::is_field_id_Valid() const{
    return m_field_id_isValid;
}

OAISortDirection OAIFieldSortOptions_FieldSort::getDirection() const {
    return m_direction;
}
void OAIFieldSortOptions_FieldSort::setDirection(const OAISortDirection &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIFieldSortOptions_FieldSort::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIFieldSortOptions_FieldSort::is_direction_Valid() const{
    return m_direction_isValid;
}

bool OAIFieldSortOptions_FieldSort::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldSortOptions_FieldSort::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_id_isValid && m_direction_isValid && true;
}

} // namespace OpenAPI
