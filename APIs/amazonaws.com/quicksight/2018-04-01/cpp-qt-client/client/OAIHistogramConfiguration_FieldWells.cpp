/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistogramConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistogramConfiguration_FieldWells::OAIHistogramConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistogramConfiguration_FieldWells::OAIHistogramConfiguration_FieldWells() {
    this->initializeModel();
}

OAIHistogramConfiguration_FieldWells::~OAIHistogramConfiguration_FieldWells() {}

void OAIHistogramConfiguration_FieldWells::initializeModel() {

    m_histogram_aggregated_field_wells_isSet = false;
    m_histogram_aggregated_field_wells_isValid = false;
}

void OAIHistogramConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistogramConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_histogram_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_histogram_aggregated_field_wells, json[QString("HistogramAggregatedFieldWells")]);
    m_histogram_aggregated_field_wells_isSet = !json[QString("HistogramAggregatedFieldWells")].isNull() && m_histogram_aggregated_field_wells_isValid;
}

QString OAIHistogramConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistogramConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_histogram_aggregated_field_wells.isSet()) {
        obj.insert(QString("HistogramAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_histogram_aggregated_field_wells));
    }
    return obj;
}

OAIHistogramFieldWells_HistogramAggregatedFieldWells OAIHistogramConfiguration_FieldWells::getHistogramAggregatedFieldWells() const {
    return m_histogram_aggregated_field_wells;
}
void OAIHistogramConfiguration_FieldWells::setHistogramAggregatedFieldWells(const OAIHistogramFieldWells_HistogramAggregatedFieldWells &histogram_aggregated_field_wells) {
    m_histogram_aggregated_field_wells = histogram_aggregated_field_wells;
    m_histogram_aggregated_field_wells_isSet = true;
}

bool OAIHistogramConfiguration_FieldWells::is_histogram_aggregated_field_wells_Set() const{
    return m_histogram_aggregated_field_wells_isSet;
}

bool OAIHistogramConfiguration_FieldWells::is_histogram_aggregated_field_wells_Valid() const{
    return m_histogram_aggregated_field_wells_isValid;
}

bool OAIHistogramConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_histogram_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistogramConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
