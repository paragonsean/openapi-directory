/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeNamespaceResponse_Namespace.h
 *
 * 
 */

#ifndef OAIDescribeNamespaceResponse_Namespace_H
#define OAIDescribeNamespaceResponse_Namespace_H

#include <QJsonObject>

#include "OAIIdentityStore.h"
#include "OAINamespaceInfoV2_NamespaceError.h"
#include "OAINamespaceStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINamespaceInfoV2_NamespaceError;

class OAIDescribeNamespaceResponse_Namespace : public OAIObject {
public:
    OAIDescribeNamespaceResponse_Namespace();
    OAIDescribeNamespaceResponse_Namespace(QString json);
    ~OAIDescribeNamespaceResponse_Namespace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getCapacityRegion() const;
    void setCapacityRegion(const QString &capacity_region);
    bool is_capacity_region_Set() const;
    bool is_capacity_region_Valid() const;

    OAINamespaceStatus getCreationStatus() const;
    void setCreationStatus(const OAINamespaceStatus &creation_status);
    bool is_creation_status_Set() const;
    bool is_creation_status_Valid() const;

    OAIIdentityStore getIdentityStore() const;
    void setIdentityStore(const OAIIdentityStore &identity_store);
    bool is_identity_store_Set() const;
    bool is_identity_store_Valid() const;

    OAINamespaceInfoV2_NamespaceError getNamespaceError() const;
    void setNamespaceError(const OAINamespaceInfoV2_NamespaceError &namespace_error);
    bool is_namespace_error_Set() const;
    bool is_namespace_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_capacity_region;
    bool m_capacity_region_isSet;
    bool m_capacity_region_isValid;

    OAINamespaceStatus m_creation_status;
    bool m_creation_status_isSet;
    bool m_creation_status_isValid;

    OAIIdentityStore m_identity_store;
    bool m_identity_store_isSet;
    bool m_identity_store_isValid;

    OAINamespaceInfoV2_NamespaceError m_namespace_error;
    bool m_namespace_error_isSet;
    bool m_namespace_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeNamespaceResponse_Namespace)

#endif // OAIDescribeNamespaceResponse_Namespace_H
