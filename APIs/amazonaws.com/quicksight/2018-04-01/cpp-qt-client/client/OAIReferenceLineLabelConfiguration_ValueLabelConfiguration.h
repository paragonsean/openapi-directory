/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceLineLabelConfiguration_ValueLabelConfiguration.h
 *
 * 
 */

#ifndef OAIReferenceLineLabelConfiguration_ValueLabelConfiguration_H
#define OAIReferenceLineLabelConfiguration_ValueLabelConfiguration_H

#include <QJsonObject>

#include "OAIReferenceLineValueLabelConfiguration_FormatConfiguration.h"
#include "OAIReferenceLineValueLabelRelativePosition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceLineValueLabelConfiguration_FormatConfiguration;

class OAIReferenceLineLabelConfiguration_ValueLabelConfiguration : public OAIObject {
public:
    OAIReferenceLineLabelConfiguration_ValueLabelConfiguration();
    OAIReferenceLineLabelConfiguration_ValueLabelConfiguration(QString json);
    ~OAIReferenceLineLabelConfiguration_ValueLabelConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReferenceLineValueLabelRelativePosition getRelativePosition() const;
    void setRelativePosition(const OAIReferenceLineValueLabelRelativePosition &relative_position);
    bool is_relative_position_Set() const;
    bool is_relative_position_Valid() const;

    OAIReferenceLineValueLabelConfiguration_FormatConfiguration getFormatConfiguration() const;
    void setFormatConfiguration(const OAIReferenceLineValueLabelConfiguration_FormatConfiguration &format_configuration);
    bool is_format_configuration_Set() const;
    bool is_format_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReferenceLineValueLabelRelativePosition m_relative_position;
    bool m_relative_position_isSet;
    bool m_relative_position_isValid;

    OAIReferenceLineValueLabelConfiguration_FormatConfiguration m_format_configuration;
    bool m_format_configuration_isSet;
    bool m_format_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceLineLabelConfiguration_ValueLabelConfiguration)

#endif // OAIReferenceLineLabelConfiguration_ValueLabelConfiguration_H
