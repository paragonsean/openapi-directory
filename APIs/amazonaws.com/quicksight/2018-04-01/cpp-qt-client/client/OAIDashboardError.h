/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashboardError.h
 *
 * Dashboard error.
 */

#ifndef OAIDashboardError_H
#define OAIDashboardError_H

#include <QJsonObject>

#include "OAIDashboardErrorType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDashboardError : public OAIObject {
public:
    OAIDashboardError();
    OAIDashboardError(QString json);
    ~OAIDashboardError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDashboardErrorType getType() const;
    void setType(const OAIDashboardErrorType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList getViolatedEntities() const;
    void setViolatedEntities(const QList &violated_entities);
    bool is_violated_entities_Set() const;
    bool is_violated_entities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDashboardErrorType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList m_violated_entities;
    bool m_violated_entities_isSet;
    bool m_violated_entities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashboardError)

#endif // OAIDashboardError_H
