/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIpRestrictionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIpRestrictionResponse::OAIDescribeIpRestrictionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIpRestrictionResponse::OAIDescribeIpRestrictionResponse() {
    this->initializeModel();
}

OAIDescribeIpRestrictionResponse::~OAIDescribeIpRestrictionResponse() {}

void OAIDescribeIpRestrictionResponse::initializeModel() {

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_ip_restriction_rule_map_isSet = false;
    m_ip_restriction_rule_map_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeIpRestrictionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIpRestrictionResponse::fromJsonObject(QJsonObject json) {

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_ip_restriction_rule_map_isValid = ::OpenAPI::fromJsonValue(m_ip_restriction_rule_map, json[QString("IpRestrictionRuleMap")]);
    m_ip_restriction_rule_map_isSet = !json[QString("IpRestrictionRuleMap")].isNull() && m_ip_restriction_rule_map_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeIpRestrictionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIpRestrictionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_ip_restriction_rule_map.isSet()) {
        obj.insert(QString("IpRestrictionRuleMap"), ::OpenAPI::toJsonValue(m_ip_restriction_rule_map));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDescribeIpRestrictionResponse::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIDescribeIpRestrictionResponse::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIDescribeIpRestrictionResponse::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIDescribeIpRestrictionResponse::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QMap OAIDescribeIpRestrictionResponse::getIpRestrictionRuleMap() const {
    return m_ip_restriction_rule_map;
}
void OAIDescribeIpRestrictionResponse::setIpRestrictionRuleMap(const QMap &ip_restriction_rule_map) {
    m_ip_restriction_rule_map = ip_restriction_rule_map;
    m_ip_restriction_rule_map_isSet = true;
}

bool OAIDescribeIpRestrictionResponse::is_ip_restriction_rule_map_Set() const{
    return m_ip_restriction_rule_map_isSet;
}

bool OAIDescribeIpRestrictionResponse::is_ip_restriction_rule_map_Valid() const{
    return m_ip_restriction_rule_map_isValid;
}

bool OAIDescribeIpRestrictionResponse::getEnabled() const {
    return m_enabled;
}
void OAIDescribeIpRestrictionResponse::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIDescribeIpRestrictionResponse::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIDescribeIpRestrictionResponse::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIDescribeIpRestrictionResponse::getRequestId() const {
    return m_request_id;
}
void OAIDescribeIpRestrictionResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDescribeIpRestrictionResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDescribeIpRestrictionResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDescribeIpRestrictionResponse::getStatus() const {
    return m_status;
}
void OAIDescribeIpRestrictionResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeIpRestrictionResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeIpRestrictionResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeIpRestrictionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_restriction_rule_map.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIpRestrictionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
