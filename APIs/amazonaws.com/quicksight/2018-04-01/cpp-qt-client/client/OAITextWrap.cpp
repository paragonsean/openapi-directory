/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITextWrap.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITextWrap::OAITextWrap(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITextWrap::OAITextWrap() {
    this->initializeModel();
}

OAITextWrap::~OAITextWrap() {}

void OAITextWrap::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITextWrap::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITextWrap::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITextWrap::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WRAP", Qt::CaseInsensitive) == 0) {
        m_value = eOAITextWrap::WRAP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITextWrap::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITextWrap::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITextWrap::NONE:
            val = "NONE";
            break;
        case eOAITextWrap::WRAP:
            val = "WRAP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITextWrap::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITextWrap::eOAITextWrap OAITextWrap::getValue() const {
    return m_value;
}

void OAITextWrap::setValue(const OAITextWrap::eOAITextWrap& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITextWrap::isSet() const {
    
    return m_value_isSet;
}

bool OAITextWrap::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
