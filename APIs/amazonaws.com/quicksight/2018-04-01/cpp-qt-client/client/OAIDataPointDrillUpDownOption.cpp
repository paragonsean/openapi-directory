/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataPointDrillUpDownOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataPointDrillUpDownOption::OAIDataPointDrillUpDownOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataPointDrillUpDownOption::OAIDataPointDrillUpDownOption() {
    this->initializeModel();
}

OAIDataPointDrillUpDownOption::~OAIDataPointDrillUpDownOption() {}

void OAIDataPointDrillUpDownOption::initializeModel() {

    m_availability_status_isSet = false;
    m_availability_status_isValid = false;
}

void OAIDataPointDrillUpDownOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataPointDrillUpDownOption::fromJsonObject(QJsonObject json) {

    m_availability_status_isValid = ::OpenAPI::fromJsonValue(m_availability_status, json[QString("AvailabilityStatus")]);
    m_availability_status_isSet = !json[QString("AvailabilityStatus")].isNull() && m_availability_status_isValid;
}

QString OAIDataPointDrillUpDownOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataPointDrillUpDownOption::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_status.isSet()) {
        obj.insert(QString("AvailabilityStatus"), ::OpenAPI::toJsonValue(m_availability_status));
    }
    return obj;
}

OAIDashboardBehavior OAIDataPointDrillUpDownOption::getAvailabilityStatus() const {
    return m_availability_status;
}
void OAIDataPointDrillUpDownOption::setAvailabilityStatus(const OAIDashboardBehavior &availability_status) {
    m_availability_status = availability_status;
    m_availability_status_isSet = true;
}

bool OAIDataPointDrillUpDownOption::is_availability_status_Set() const{
    return m_availability_status_isSet;
}

bool OAIDataPointDrillUpDownOption::is_availability_status_Valid() const{
    return m_availability_status_isValid;
}

bool OAIDataPointDrillUpDownOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataPointDrillUpDownOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
