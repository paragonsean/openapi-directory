/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisDisplayOptions_ScrollbarOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisDisplayOptions_ScrollbarOptions::OAIAxisDisplayOptions_ScrollbarOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisDisplayOptions_ScrollbarOptions::OAIAxisDisplayOptions_ScrollbarOptions() {
    this->initializeModel();
}

OAIAxisDisplayOptions_ScrollbarOptions::~OAIAxisDisplayOptions_ScrollbarOptions() {}

void OAIAxisDisplayOptions_ScrollbarOptions::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;

    m_visible_range_isSet = false;
    m_visible_range_isValid = false;
}

void OAIAxisDisplayOptions_ScrollbarOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisDisplayOptions_ScrollbarOptions::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;

    m_visible_range_isValid = ::OpenAPI::fromJsonValue(m_visible_range, json[QString("VisibleRange")]);
    m_visible_range_isSet = !json[QString("VisibleRange")].isNull() && m_visible_range_isValid;
}

QString OAIAxisDisplayOptions_ScrollbarOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisDisplayOptions_ScrollbarOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    if (m_visible_range.isSet()) {
        obj.insert(QString("VisibleRange"), ::OpenAPI::toJsonValue(m_visible_range));
    }
    return obj;
}

OAIVisibility OAIAxisDisplayOptions_ScrollbarOptions::getVisibility() const {
    return m_visibility;
}
void OAIAxisDisplayOptions_ScrollbarOptions::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::is_visibility_Valid() const{
    return m_visibility_isValid;
}

OAIScrollBarOptions_VisibleRange OAIAxisDisplayOptions_ScrollbarOptions::getVisibleRange() const {
    return m_visible_range;
}
void OAIAxisDisplayOptions_ScrollbarOptions::setVisibleRange(const OAIScrollBarOptions_VisibleRange &visible_range) {
    m_visible_range = visible_range;
    m_visible_range_isSet = true;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::is_visible_range_Set() const{
    return m_visible_range_isSet;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::is_visible_range_Valid() const{
    return m_visible_range_isValid;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisDisplayOptions_ScrollbarOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
