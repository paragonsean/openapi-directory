/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistogramFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistogramFieldWells::OAIHistogramFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistogramFieldWells::OAIHistogramFieldWells() {
    this->initializeModel();
}

OAIHistogramFieldWells::~OAIHistogramFieldWells() {}

void OAIHistogramFieldWells::initializeModel() {

    m_histogram_aggregated_field_wells_isSet = false;
    m_histogram_aggregated_field_wells_isValid = false;
}

void OAIHistogramFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistogramFieldWells::fromJsonObject(QJsonObject json) {

    m_histogram_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_histogram_aggregated_field_wells, json[QString("HistogramAggregatedFieldWells")]);
    m_histogram_aggregated_field_wells_isSet = !json[QString("HistogramAggregatedFieldWells")].isNull() && m_histogram_aggregated_field_wells_isValid;
}

QString OAIHistogramFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistogramFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_histogram_aggregated_field_wells.isSet()) {
        obj.insert(QString("HistogramAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_histogram_aggregated_field_wells));
    }
    return obj;
}

OAIHistogramFieldWells_HistogramAggregatedFieldWells OAIHistogramFieldWells::getHistogramAggregatedFieldWells() const {
    return m_histogram_aggregated_field_wells;
}
void OAIHistogramFieldWells::setHistogramAggregatedFieldWells(const OAIHistogramFieldWells_HistogramAggregatedFieldWells &histogram_aggregated_field_wells) {
    m_histogram_aggregated_field_wells = histogram_aggregated_field_wells;
    m_histogram_aggregated_field_wells_isSet = true;
}

bool OAIHistogramFieldWells::is_histogram_aggregated_field_wells_Set() const{
    return m_histogram_aggregated_field_wells_isSet;
}

bool OAIHistogramFieldWells::is_histogram_aggregated_field_wells_Valid() const{
    return m_histogram_aggregated_field_wells_isValid;
}

bool OAIHistogramFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_histogram_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistogramFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
