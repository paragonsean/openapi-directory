/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistogramBinOptions_BinCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistogramBinOptions_BinCount::OAIHistogramBinOptions_BinCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistogramBinOptions_BinCount::OAIHistogramBinOptions_BinCount() {
    this->initializeModel();
}

OAIHistogramBinOptions_BinCount::~OAIHistogramBinOptions_BinCount() {}

void OAIHistogramBinOptions_BinCount::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIHistogramBinOptions_BinCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistogramBinOptions_BinCount::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIHistogramBinOptions_BinCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistogramBinOptions_BinCount::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

qint32 OAIHistogramBinOptions_BinCount::getValue() const {
    return m_value;
}
void OAIHistogramBinOptions_BinCount::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIHistogramBinOptions_BinCount::is_value_Set() const{
    return m_value_isSet;
}

bool OAIHistogramBinOptions_BinCount::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIHistogramBinOptions_BinCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistogramBinOptions_BinCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
