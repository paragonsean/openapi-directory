/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumericAxisOptions_Range.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumericAxisOptions_Range::OAINumericAxisOptions_Range(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumericAxisOptions_Range::OAINumericAxisOptions_Range() {
    this->initializeModel();
}

OAINumericAxisOptions_Range::~OAINumericAxisOptions_Range() {}

void OAINumericAxisOptions_Range::initializeModel() {

    m_min_max_isSet = false;
    m_min_max_isValid = false;

    m_data_driven_isSet = false;
    m_data_driven_isValid = false;
}

void OAINumericAxisOptions_Range::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumericAxisOptions_Range::fromJsonObject(QJsonObject json) {

    m_min_max_isValid = ::OpenAPI::fromJsonValue(m_min_max, json[QString("MinMax")]);
    m_min_max_isSet = !json[QString("MinMax")].isNull() && m_min_max_isValid;

    m_data_driven_isValid = ::OpenAPI::fromJsonValue(m_data_driven, json[QString("DataDriven")]);
    m_data_driven_isSet = !json[QString("DataDriven")].isNull() && m_data_driven_isValid;
}

QString OAINumericAxisOptions_Range::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumericAxisOptions_Range::asJsonObject() const {
    QJsonObject obj;
    if (m_min_max.isSet()) {
        obj.insert(QString("MinMax"), ::OpenAPI::toJsonValue(m_min_max));
    }
    if (m_data_driven.isSet()) {
        obj.insert(QString("DataDriven"), ::OpenAPI::toJsonValue(m_data_driven));
    }
    return obj;
}

OAIAxisDisplayRange_MinMax OAINumericAxisOptions_Range::getMinMax() const {
    return m_min_max;
}
void OAINumericAxisOptions_Range::setMinMax(const OAIAxisDisplayRange_MinMax &min_max) {
    m_min_max = min_max;
    m_min_max_isSet = true;
}

bool OAINumericAxisOptions_Range::is_min_max_Set() const{
    return m_min_max_isSet;
}

bool OAINumericAxisOptions_Range::is_min_max_Valid() const{
    return m_min_max_isValid;
}

OAIObject OAINumericAxisOptions_Range::getDataDriven() const {
    return m_data_driven;
}
void OAINumericAxisOptions_Range::setDataDriven(const OAIObject &data_driven) {
    m_data_driven = data_driven;
    m_data_driven_isSet = true;
}

bool OAINumericAxisOptions_Range::is_data_driven_Set() const{
    return m_data_driven_isSet;
}

bool OAINumericAxisOptions_Range::is_data_driven_Valid() const{
    return m_data_driven_isValid;
}

bool OAINumericAxisOptions_Range::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_min_max.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_driven.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumericAxisOptions_Range::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
