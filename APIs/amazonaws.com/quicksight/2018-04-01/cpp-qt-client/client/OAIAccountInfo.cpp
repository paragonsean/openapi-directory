/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountInfo::OAIAccountInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountInfo::OAIAccountInfo() {
    this->initializeModel();
}

OAIAccountInfo::~OAIAccountInfo() {}

void OAIAccountInfo::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_edition_isSet = false;
    m_edition_isValid = false;

    m_notification_email_isSet = false;
    m_notification_email_isValid = false;

    m_authentication_type_isSet = false;
    m_authentication_type_isValid = false;

    m_account_subscription_status_isSet = false;
    m_account_subscription_status_isValid = false;
}

void OAIAccountInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountInfo::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("AccountName")]);
    m_account_name_isSet = !json[QString("AccountName")].isNull() && m_account_name_isValid;

    m_edition_isValid = ::OpenAPI::fromJsonValue(m_edition, json[QString("Edition")]);
    m_edition_isSet = !json[QString("Edition")].isNull() && m_edition_isValid;

    m_notification_email_isValid = ::OpenAPI::fromJsonValue(m_notification_email, json[QString("NotificationEmail")]);
    m_notification_email_isSet = !json[QString("NotificationEmail")].isNull() && m_notification_email_isValid;

    m_authentication_type_isValid = ::OpenAPI::fromJsonValue(m_authentication_type, json[QString("AuthenticationType")]);
    m_authentication_type_isSet = !json[QString("AuthenticationType")].isNull() && m_authentication_type_isValid;

    m_account_subscription_status_isValid = ::OpenAPI::fromJsonValue(m_account_subscription_status, json[QString("AccountSubscriptionStatus")]);
    m_account_subscription_status_isSet = !json[QString("AccountSubscriptionStatus")].isNull() && m_account_subscription_status_isValid;
}

QString OAIAccountInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("AccountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_edition.isSet()) {
        obj.insert(QString("Edition"), ::OpenAPI::toJsonValue(m_edition));
    }
    if (m_notification_email_isSet) {
        obj.insert(QString("NotificationEmail"), ::OpenAPI::toJsonValue(m_notification_email));
    }
    if (m_authentication_type_isSet) {
        obj.insert(QString("AuthenticationType"), ::OpenAPI::toJsonValue(m_authentication_type));
    }
    if (m_account_subscription_status_isSet) {
        obj.insert(QString("AccountSubscriptionStatus"), ::OpenAPI::toJsonValue(m_account_subscription_status));
    }
    return obj;
}

QString OAIAccountInfo::getAccountName() const {
    return m_account_name;
}
void OAIAccountInfo::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIAccountInfo::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIAccountInfo::is_account_name_Valid() const{
    return m_account_name_isValid;
}

OAIEdition OAIAccountInfo::getEdition() const {
    return m_edition;
}
void OAIAccountInfo::setEdition(const OAIEdition &edition) {
    m_edition = edition;
    m_edition_isSet = true;
}

bool OAIAccountInfo::is_edition_Set() const{
    return m_edition_isSet;
}

bool OAIAccountInfo::is_edition_Valid() const{
    return m_edition_isValid;
}

QString OAIAccountInfo::getNotificationEmail() const {
    return m_notification_email;
}
void OAIAccountInfo::setNotificationEmail(const QString &notification_email) {
    m_notification_email = notification_email;
    m_notification_email_isSet = true;
}

bool OAIAccountInfo::is_notification_email_Set() const{
    return m_notification_email_isSet;
}

bool OAIAccountInfo::is_notification_email_Valid() const{
    return m_notification_email_isValid;
}

QString OAIAccountInfo::getAuthenticationType() const {
    return m_authentication_type;
}
void OAIAccountInfo::setAuthenticationType(const QString &authentication_type) {
    m_authentication_type = authentication_type;
    m_authentication_type_isSet = true;
}

bool OAIAccountInfo::is_authentication_type_Set() const{
    return m_authentication_type_isSet;
}

bool OAIAccountInfo::is_authentication_type_Valid() const{
    return m_authentication_type_isValid;
}

QString OAIAccountInfo::getAccountSubscriptionStatus() const {
    return m_account_subscription_status;
}
void OAIAccountInfo::setAccountSubscriptionStatus(const QString &account_subscription_status) {
    m_account_subscription_status = account_subscription_status;
    m_account_subscription_status_isSet = true;
}

bool OAIAccountInfo::is_account_subscription_status_Set() const{
    return m_account_subscription_status_isSet;
}

bool OAIAccountInfo::is_account_subscription_status_Valid() const{
    return m_account_subscription_status_isValid;
}

bool OAIAccountInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_subscription_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
