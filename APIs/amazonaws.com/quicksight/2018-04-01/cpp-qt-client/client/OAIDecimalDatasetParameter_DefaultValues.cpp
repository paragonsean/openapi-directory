/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalDatasetParameter_DefaultValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalDatasetParameter_DefaultValues::OAIDecimalDatasetParameter_DefaultValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalDatasetParameter_DefaultValues::OAIDecimalDatasetParameter_DefaultValues() {
    this->initializeModel();
}

OAIDecimalDatasetParameter_DefaultValues::~OAIDecimalDatasetParameter_DefaultValues() {}

void OAIDecimalDatasetParameter_DefaultValues::initializeModel() {

    m_static_values_isSet = false;
    m_static_values_isValid = false;
}

void OAIDecimalDatasetParameter_DefaultValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalDatasetParameter_DefaultValues::fromJsonObject(QJsonObject json) {

    m_static_values_isValid = ::OpenAPI::fromJsonValue(m_static_values, json[QString("StaticValues")]);
    m_static_values_isSet = !json[QString("StaticValues")].isNull() && m_static_values_isValid;
}

QString OAIDecimalDatasetParameter_DefaultValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalDatasetParameter_DefaultValues::asJsonObject() const {
    QJsonObject obj;
    if (m_static_values.isSet()) {
        obj.insert(QString("StaticValues"), ::OpenAPI::toJsonValue(m_static_values));
    }
    return obj;
}

QList OAIDecimalDatasetParameter_DefaultValues::getStaticValues() const {
    return m_static_values;
}
void OAIDecimalDatasetParameter_DefaultValues::setStaticValues(const QList &static_values) {
    m_static_values = static_values;
    m_static_values_isSet = true;
}

bool OAIDecimalDatasetParameter_DefaultValues::is_static_values_Set() const{
    return m_static_values_isSet;
}

bool OAIDecimalDatasetParameter_DefaultValues::is_static_values_Valid() const{
    return m_static_values_isValid;
}

bool OAIDecimalDatasetParameter_DefaultValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalDatasetParameter_DefaultValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
