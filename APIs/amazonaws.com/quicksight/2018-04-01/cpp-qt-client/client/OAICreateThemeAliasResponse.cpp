/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateThemeAliasResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateThemeAliasResponse::OAICreateThemeAliasResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateThemeAliasResponse::OAICreateThemeAliasResponse() {
    this->initializeModel();
}

OAICreateThemeAliasResponse::~OAICreateThemeAliasResponse() {}

void OAICreateThemeAliasResponse::initializeModel() {

    m_theme_alias_isSet = false;
    m_theme_alias_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAICreateThemeAliasResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateThemeAliasResponse::fromJsonObject(QJsonObject json) {

    m_theme_alias_isValid = ::OpenAPI::fromJsonValue(m_theme_alias, json[QString("ThemeAlias")]);
    m_theme_alias_isSet = !json[QString("ThemeAlias")].isNull() && m_theme_alias_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAICreateThemeAliasResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateThemeAliasResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_theme_alias.isSet()) {
        obj.insert(QString("ThemeAlias"), ::OpenAPI::toJsonValue(m_theme_alias));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

OAICreateThemeAliasResponse_ThemeAlias OAICreateThemeAliasResponse::getThemeAlias() const {
    return m_theme_alias;
}
void OAICreateThemeAliasResponse::setThemeAlias(const OAICreateThemeAliasResponse_ThemeAlias &theme_alias) {
    m_theme_alias = theme_alias;
    m_theme_alias_isSet = true;
}

bool OAICreateThemeAliasResponse::is_theme_alias_Set() const{
    return m_theme_alias_isSet;
}

bool OAICreateThemeAliasResponse::is_theme_alias_Valid() const{
    return m_theme_alias_isValid;
}

qint32 OAICreateThemeAliasResponse::getStatus() const {
    return m_status;
}
void OAICreateThemeAliasResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateThemeAliasResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateThemeAliasResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICreateThemeAliasResponse::getRequestId() const {
    return m_request_id;
}
void OAICreateThemeAliasResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAICreateThemeAliasResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAICreateThemeAliasResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAICreateThemeAliasResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_theme_alias.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateThemeAliasResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
