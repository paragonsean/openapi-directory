/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilter_NumericEqualityFilter.h
 *
 * 
 */

#ifndef OAIFilter_NumericEqualityFilter_H
#define OAIFilter_NumericEqualityFilter_H

#include <QJsonObject>

#include "OAICategoryDrillDownFilter_Column.h"
#include "OAIFilterNullOption.h"
#include "OAINumericEqualityMatchOperator.h"
#include "OAINumericFilterSelectAllOptions.h"
#include "OAINumericRangeFilter_AggregationFunction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryDrillDownFilter_Column;
class OAINumericRangeFilter_AggregationFunction;

class OAIFilter_NumericEqualityFilter : public OAIObject {
public:
    OAIFilter_NumericEqualityFilter();
    OAIFilter_NumericEqualityFilter(QString json);
    ~OAIFilter_NumericEqualityFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterId() const;
    void setFilterId(const QString &filter_id);
    bool is_filter_id_Set() const;
    bool is_filter_id_Valid() const;

    OAICategoryDrillDownFilter_Column getColumn() const;
    void setColumn(const OAICategoryDrillDownFilter_Column &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAINumericFilterSelectAllOptions getSelectAllOptions() const;
    void setSelectAllOptions(const OAINumericFilterSelectAllOptions &select_all_options);
    bool is_select_all_options_Set() const;
    bool is_select_all_options_Valid() const;

    OAINumericEqualityMatchOperator getMatchOperator() const;
    void setMatchOperator(const OAINumericEqualityMatchOperator &match_operator);
    bool is_match_operator_Set() const;
    bool is_match_operator_Valid() const;

    OAINumericRangeFilter_AggregationFunction getAggregationFunction() const;
    void setAggregationFunction(const OAINumericRangeFilter_AggregationFunction &aggregation_function);
    bool is_aggregation_function_Set() const;
    bool is_aggregation_function_Valid() const;

    QString getParameterName() const;
    void setParameterName(const QString &parameter_name);
    bool is_parameter_name_Set() const;
    bool is_parameter_name_Valid() const;

    OAIFilterNullOption getNullOption() const;
    void setNullOption(const OAIFilterNullOption &null_option);
    bool is_null_option_Set() const;
    bool is_null_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_id;
    bool m_filter_id_isSet;
    bool m_filter_id_isValid;

    OAICategoryDrillDownFilter_Column m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAINumericFilterSelectAllOptions m_select_all_options;
    bool m_select_all_options_isSet;
    bool m_select_all_options_isValid;

    OAINumericEqualityMatchOperator m_match_operator;
    bool m_match_operator_isSet;
    bool m_match_operator_isValid;

    OAINumericRangeFilter_AggregationFunction m_aggregation_function;
    bool m_aggregation_function_isSet;
    bool m_aggregation_function_isValid;

    QString m_parameter_name;
    bool m_parameter_name_isSet;
    bool m_parameter_name_isValid;

    OAIFilterNullOption m_null_option;
    bool m_null_option_isSet;
    bool m_null_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilter_NumericEqualityFilter)

#endif // OAIFilter_NumericEqualityFilter_H
