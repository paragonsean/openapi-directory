/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateThemeAliasRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateThemeAliasRequest::OAICreateThemeAliasRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateThemeAliasRequest::OAICreateThemeAliasRequest() {
    this->initializeModel();
}

OAICreateThemeAliasRequest::~OAICreateThemeAliasRequest() {}

void OAICreateThemeAliasRequest::initializeModel() {

    m_theme_version_number_isSet = false;
    m_theme_version_number_isValid = false;
}

void OAICreateThemeAliasRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateThemeAliasRequest::fromJsonObject(QJsonObject json) {

    m_theme_version_number_isValid = ::OpenAPI::fromJsonValue(m_theme_version_number, json[QString("ThemeVersionNumber")]);
    m_theme_version_number_isSet = !json[QString("ThemeVersionNumber")].isNull() && m_theme_version_number_isValid;
}

QString OAICreateThemeAliasRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateThemeAliasRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_theme_version_number_isSet) {
        obj.insert(QString("ThemeVersionNumber"), ::OpenAPI::toJsonValue(m_theme_version_number));
    }
    return obj;
}

qint32 OAICreateThemeAliasRequest::getThemeVersionNumber() const {
    return m_theme_version_number;
}
void OAICreateThemeAliasRequest::setThemeVersionNumber(const qint32 &theme_version_number) {
    m_theme_version_number = theme_version_number;
    m_theme_version_number_isSet = true;
}

bool OAICreateThemeAliasRequest::is_theme_version_number_Set() const{
    return m_theme_version_number_isSet;
}

bool OAICreateThemeAliasRequest::is_theme_version_number_Valid() const{
    return m_theme_version_number_isValid;
}

bool OAICreateThemeAliasRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_theme_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateThemeAliasRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_theme_version_number_isValid && true;
}

} // namespace OpenAPI
