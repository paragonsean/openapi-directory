/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISeriesItem_FieldSeriesItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISeriesItem_FieldSeriesItem::OAISeriesItem_FieldSeriesItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISeriesItem_FieldSeriesItem::OAISeriesItem_FieldSeriesItem() {
    this->initializeModel();
}

OAISeriesItem_FieldSeriesItem::~OAISeriesItem_FieldSeriesItem() {}

void OAISeriesItem_FieldSeriesItem::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_axis_binding_isSet = false;
    m_axis_binding_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAISeriesItem_FieldSeriesItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISeriesItem_FieldSeriesItem::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldId")]);
    m_field_id_isSet = !json[QString("FieldId")].isNull() && m_field_id_isValid;

    m_axis_binding_isValid = ::OpenAPI::fromJsonValue(m_axis_binding, json[QString("AxisBinding")]);
    m_axis_binding_isSet = !json[QString("AxisBinding")].isNull() && m_axis_binding_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("Settings")]);
    m_settings_isSet = !json[QString("Settings")].isNull() && m_settings_isValid;
}

QString OAISeriesItem_FieldSeriesItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISeriesItem_FieldSeriesItem::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id_isSet) {
        obj.insert(QString("FieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_axis_binding.isSet()) {
        obj.insert(QString("AxisBinding"), ::OpenAPI::toJsonValue(m_axis_binding));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("Settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QString OAISeriesItem_FieldSeriesItem::getFieldId() const {
    return m_field_id;
}
void OAISeriesItem_FieldSeriesItem::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAISeriesItem_FieldSeriesItem::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAISeriesItem_FieldSeriesItem::is_field_id_Valid() const{
    return m_field_id_isValid;
}

OAIAxisBinding OAISeriesItem_FieldSeriesItem::getAxisBinding() const {
    return m_axis_binding;
}
void OAISeriesItem_FieldSeriesItem::setAxisBinding(const OAIAxisBinding &axis_binding) {
    m_axis_binding = axis_binding;
    m_axis_binding_isSet = true;
}

bool OAISeriesItem_FieldSeriesItem::is_axis_binding_Set() const{
    return m_axis_binding_isSet;
}

bool OAISeriesItem_FieldSeriesItem::is_axis_binding_Valid() const{
    return m_axis_binding_isValid;
}

OAIDataFieldSeriesItem_Settings OAISeriesItem_FieldSeriesItem::getSettings() const {
    return m_settings;
}
void OAISeriesItem_FieldSeriesItem::setSettings(const OAIDataFieldSeriesItem_Settings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAISeriesItem_FieldSeriesItem::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAISeriesItem_FieldSeriesItem::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAISeriesItem_FieldSeriesItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_axis_binding.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISeriesItem_FieldSeriesItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_id_isValid && m_axis_binding_isValid && true;
}

} // namespace OpenAPI
