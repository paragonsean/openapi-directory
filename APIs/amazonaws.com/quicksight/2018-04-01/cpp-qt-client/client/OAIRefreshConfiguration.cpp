/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefreshConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefreshConfiguration::OAIRefreshConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefreshConfiguration::OAIRefreshConfiguration() {
    this->initializeModel();
}

OAIRefreshConfiguration::~OAIRefreshConfiguration() {}

void OAIRefreshConfiguration::initializeModel() {

    m_incremental_refresh_isSet = false;
    m_incremental_refresh_isValid = false;
}

void OAIRefreshConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefreshConfiguration::fromJsonObject(QJsonObject json) {

    m_incremental_refresh_isValid = ::OpenAPI::fromJsonValue(m_incremental_refresh, json[QString("IncrementalRefresh")]);
    m_incremental_refresh_isSet = !json[QString("IncrementalRefresh")].isNull() && m_incremental_refresh_isValid;
}

QString OAIRefreshConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefreshConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_incremental_refresh.isSet()) {
        obj.insert(QString("IncrementalRefresh"), ::OpenAPI::toJsonValue(m_incremental_refresh));
    }
    return obj;
}

OAIRefreshConfiguration_IncrementalRefresh OAIRefreshConfiguration::getIncrementalRefresh() const {
    return m_incremental_refresh;
}
void OAIRefreshConfiguration::setIncrementalRefresh(const OAIRefreshConfiguration_IncrementalRefresh &incremental_refresh) {
    m_incremental_refresh = incremental_refresh;
    m_incremental_refresh_isSet = true;
}

bool OAIRefreshConfiguration::is_incremental_refresh_Set() const{
    return m_incremental_refresh_isSet;
}

bool OAIRefreshConfiguration::is_incremental_refresh_Valid() const{
    return m_incremental_refresh_isValid;
}

bool OAIRefreshConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_incremental_refresh.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefreshConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_incremental_refresh_isValid && true;
}

} // namespace OpenAPI
