/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComboChartConfiguration_SortConfiguration.h
 *
 * 
 */

#ifndef OAIComboChartConfiguration_SortConfiguration_H
#define OAIComboChartConfiguration_SortConfiguration_H

#include <QJsonObject>

#include "OAIComboChartSortConfiguration_CategoryItemsLimit.h"
#include "OAIComboChartSortConfiguration_ColorItemsLimit.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComboChartSortConfiguration_CategoryItemsLimit;
class OAIComboChartSortConfiguration_ColorItemsLimit;

class OAIComboChartConfiguration_SortConfiguration : public OAIObject {
public:
    OAIComboChartConfiguration_SortConfiguration();
    OAIComboChartConfiguration_SortConfiguration(QString json);
    ~OAIComboChartConfiguration_SortConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCategorySort() const;
    void setCategorySort(const QList &category_sort);
    bool is_category_sort_Set() const;
    bool is_category_sort_Valid() const;

    OAIComboChartSortConfiguration_CategoryItemsLimit getCategoryItemsLimit() const;
    void setCategoryItemsLimit(const OAIComboChartSortConfiguration_CategoryItemsLimit &category_items_limit);
    bool is_category_items_limit_Set() const;
    bool is_category_items_limit_Valid() const;

    QList getColorSort() const;
    void setColorSort(const QList &color_sort);
    bool is_color_sort_Set() const;
    bool is_color_sort_Valid() const;

    OAIComboChartSortConfiguration_ColorItemsLimit getColorItemsLimit() const;
    void setColorItemsLimit(const OAIComboChartSortConfiguration_ColorItemsLimit &color_items_limit);
    bool is_color_items_limit_Set() const;
    bool is_color_items_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_category_sort;
    bool m_category_sort_isSet;
    bool m_category_sort_isValid;

    OAIComboChartSortConfiguration_CategoryItemsLimit m_category_items_limit;
    bool m_category_items_limit_isSet;
    bool m_category_items_limit_isValid;

    QList m_color_sort;
    bool m_color_sort_isSet;
    bool m_color_sort_isValid;

    OAIComboChartSortConfiguration_ColorItemsLimit m_color_items_limit;
    bool m_color_items_limit_isSet;
    bool m_color_items_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComboChartConfiguration_SortConfiguration)

#endif // OAIComboChartConfiguration_SortConfiguration_H
