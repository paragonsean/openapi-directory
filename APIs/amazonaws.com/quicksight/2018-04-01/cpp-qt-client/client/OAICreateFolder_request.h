/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFolder_request.h
 *
 * 
 */

#ifndef OAICreateFolder_request_H
#define OAICreateFolder_request_H

#include <QJsonObject>

#include "OAIResourcePermission.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourcePermission;
class OAITag;

class OAICreateFolder_request : public OAIObject {
public:
    OAICreateFolder_request();
    OAICreateFolder_request(QString json);
    ~OAICreateFolder_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getFolderType() const;
    void setFolderType(const QString &folder_type);
    bool is_folder_type_Set() const;
    bool is_folder_type_Valid() const;

    QString getParentFolderArn() const;
    void setParentFolderArn(const QString &parent_folder_arn);
    bool is_parent_folder_arn_Set() const;
    bool is_parent_folder_arn_Valid() const;

    QList<OAIResourcePermission> getPermissions() const;
    void setPermissions(const QList<OAIResourcePermission> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_folder_type;
    bool m_folder_type_isSet;
    bool m_folder_type_isValid;

    QString m_parent_folder_arn;
    bool m_parent_folder_arn_isSet;
    bool m_parent_folder_arn_isValid;

    QList<OAIResourcePermission> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFolder_request)

#endif // OAICreateFolder_request_H
