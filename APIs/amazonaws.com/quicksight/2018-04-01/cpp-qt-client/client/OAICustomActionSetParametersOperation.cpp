/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomActionSetParametersOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomActionSetParametersOperation::OAICustomActionSetParametersOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomActionSetParametersOperation::OAICustomActionSetParametersOperation() {
    this->initializeModel();
}

OAICustomActionSetParametersOperation::~OAICustomActionSetParametersOperation() {}

void OAICustomActionSetParametersOperation::initializeModel() {

    m_parameter_value_configurations_isSet = false;
    m_parameter_value_configurations_isValid = false;
}

void OAICustomActionSetParametersOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomActionSetParametersOperation::fromJsonObject(QJsonObject json) {

    m_parameter_value_configurations_isValid = ::OpenAPI::fromJsonValue(m_parameter_value_configurations, json[QString("ParameterValueConfigurations")]);
    m_parameter_value_configurations_isSet = !json[QString("ParameterValueConfigurations")].isNull() && m_parameter_value_configurations_isValid;
}

QString OAICustomActionSetParametersOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomActionSetParametersOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_parameter_value_configurations.isSet()) {
        obj.insert(QString("ParameterValueConfigurations"), ::OpenAPI::toJsonValue(m_parameter_value_configurations));
    }
    return obj;
}

QList OAICustomActionSetParametersOperation::getParameterValueConfigurations() const {
    return m_parameter_value_configurations;
}
void OAICustomActionSetParametersOperation::setParameterValueConfigurations(const QList &parameter_value_configurations) {
    m_parameter_value_configurations = parameter_value_configurations;
    m_parameter_value_configurations_isSet = true;
}

bool OAICustomActionSetParametersOperation::is_parameter_value_configurations_Set() const{
    return m_parameter_value_configurations_isSet;
}

bool OAICustomActionSetParametersOperation::is_parameter_value_configurations_Valid() const{
    return m_parameter_value_configurations_isValid;
}

bool OAICustomActionSetParametersOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameter_value_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomActionSetParametersOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_parameter_value_configurations_isValid && true;
}

} // namespace OpenAPI
