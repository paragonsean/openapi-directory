/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDashboardSnapshotJobResultResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDashboardSnapshotJobResultResponse::OAIDescribeDashboardSnapshotJobResultResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDashboardSnapshotJobResultResponse::OAIDescribeDashboardSnapshotJobResultResponse() {
    this->initializeModel();
}

OAIDescribeDashboardSnapshotJobResultResponse::~OAIDescribeDashboardSnapshotJobResultResponse() {}

void OAIDescribeDashboardSnapshotJobResultResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeDashboardSnapshotJobResultResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDashboardSnapshotJobResultResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("Result")]);
    m_result_isSet = !json[QString("Result")].isNull() && m_result_isValid;

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("ErrorInfo")]);
    m_error_info_isSet = !json[QString("ErrorInfo")].isNull() && m_error_info_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeDashboardSnapshotJobResultResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDashboardSnapshotJobResultResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_result.isSet()) {
        obj.insert(QString("Result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_error_info.isSet()) {
        obj.insert(QString("ErrorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDescribeDashboardSnapshotJobResultResponse::getArn() const {
    return m_arn;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

OAISnapshotJobStatus OAIDescribeDashboardSnapshotJobResultResponse::getJobStatus() const {
    return m_job_status;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setJobStatus(const OAISnapshotJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QDateTime OAIDescribeDashboardSnapshotJobResultResponse::getCreatedTime() const {
    return m_created_time;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QDateTime OAIDescribeDashboardSnapshotJobResultResponse::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

OAIDescribeDashboardSnapshotJobResultResponse_Result OAIDescribeDashboardSnapshotJobResultResponse::getResult() const {
    return m_result;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setResult(const OAIDescribeDashboardSnapshotJobResultResponse_Result &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_result_Set() const{
    return m_result_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_result_Valid() const{
    return m_result_isValid;
}

OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo OAIDescribeDashboardSnapshotJobResultResponse::getErrorInfo() const {
    return m_error_info;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setErrorInfo(const OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_error_info_Valid() const{
    return m_error_info_isValid;
}

QString OAIDescribeDashboardSnapshotJobResultResponse::getRequestId() const {
    return m_request_id;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDescribeDashboardSnapshotJobResultResponse::getStatus() const {
    return m_status;
}
void OAIDescribeDashboardSnapshotJobResultResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDashboardSnapshotJobResultResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
