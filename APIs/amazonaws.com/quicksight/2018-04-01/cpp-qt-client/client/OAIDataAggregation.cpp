/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataAggregation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataAggregation::OAIDataAggregation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataAggregation::OAIDataAggregation() {
    this->initializeModel();
}

OAIDataAggregation::~OAIDataAggregation() {}

void OAIDataAggregation::initializeModel() {

    m_dataset_row_date_granularity_isSet = false;
    m_dataset_row_date_granularity_isValid = false;

    m_default_date_column_name_isSet = false;
    m_default_date_column_name_isValid = false;
}

void OAIDataAggregation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataAggregation::fromJsonObject(QJsonObject json) {

    m_dataset_row_date_granularity_isValid = ::OpenAPI::fromJsonValue(m_dataset_row_date_granularity, json[QString("DatasetRowDateGranularity")]);
    m_dataset_row_date_granularity_isSet = !json[QString("DatasetRowDateGranularity")].isNull() && m_dataset_row_date_granularity_isValid;

    m_default_date_column_name_isValid = ::OpenAPI::fromJsonValue(m_default_date_column_name, json[QString("DefaultDateColumnName")]);
    m_default_date_column_name_isSet = !json[QString("DefaultDateColumnName")].isNull() && m_default_date_column_name_isValid;
}

QString OAIDataAggregation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataAggregation::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_row_date_granularity.isSet()) {
        obj.insert(QString("DatasetRowDateGranularity"), ::OpenAPI::toJsonValue(m_dataset_row_date_granularity));
    }
    if (m_default_date_column_name_isSet) {
        obj.insert(QString("DefaultDateColumnName"), ::OpenAPI::toJsonValue(m_default_date_column_name));
    }
    return obj;
}

OAITopicTimeGranularity OAIDataAggregation::getDatasetRowDateGranularity() const {
    return m_dataset_row_date_granularity;
}
void OAIDataAggregation::setDatasetRowDateGranularity(const OAITopicTimeGranularity &dataset_row_date_granularity) {
    m_dataset_row_date_granularity = dataset_row_date_granularity;
    m_dataset_row_date_granularity_isSet = true;
}

bool OAIDataAggregation::is_dataset_row_date_granularity_Set() const{
    return m_dataset_row_date_granularity_isSet;
}

bool OAIDataAggregation::is_dataset_row_date_granularity_Valid() const{
    return m_dataset_row_date_granularity_isValid;
}

QString OAIDataAggregation::getDefaultDateColumnName() const {
    return m_default_date_column_name;
}
void OAIDataAggregation::setDefaultDateColumnName(const QString &default_date_column_name) {
    m_default_date_column_name = default_date_column_name;
    m_default_date_column_name_isSet = true;
}

bool OAIDataAggregation::is_default_date_column_name_Set() const{
    return m_default_date_column_name_isSet;
}

bool OAIDataAggregation::is_default_date_column_name_Valid() const{
    return m_default_date_column_name_isValid;
}

bool OAIDataAggregation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_row_date_granularity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_date_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataAggregation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
