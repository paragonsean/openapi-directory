/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILayoutConfiguration.h
 *
 * &lt;p&gt;The configuration that determines what the type of layout will be used on a sheet.&lt;/p&gt; &lt;p&gt;This is a union type structure. For this structure to be valid, only one of the attributes can be defined.&lt;/p&gt;
 */

#ifndef OAILayoutConfiguration_H
#define OAILayoutConfiguration_H

#include <QJsonObject>

#include "OAILayoutConfiguration_FreeFormLayout.h"
#include "OAILayoutConfiguration_GridLayout.h"
#include "OAILayoutConfiguration_SectionBasedLayout.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILayoutConfiguration_GridLayout;
class OAILayoutConfiguration_FreeFormLayout;
class OAILayoutConfiguration_SectionBasedLayout;

class OAILayoutConfiguration : public OAIObject {
public:
    OAILayoutConfiguration();
    OAILayoutConfiguration(QString json);
    ~OAILayoutConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILayoutConfiguration_GridLayout getGridLayout() const;
    void setGridLayout(const OAILayoutConfiguration_GridLayout &grid_layout);
    bool is_grid_layout_Set() const;
    bool is_grid_layout_Valid() const;

    OAILayoutConfiguration_FreeFormLayout getFreeFormLayout() const;
    void setFreeFormLayout(const OAILayoutConfiguration_FreeFormLayout &free_form_layout);
    bool is_free_form_layout_Set() const;
    bool is_free_form_layout_Valid() const;

    OAILayoutConfiguration_SectionBasedLayout getSectionBasedLayout() const;
    void setSectionBasedLayout(const OAILayoutConfiguration_SectionBasedLayout &section_based_layout);
    bool is_section_based_layout_Set() const;
    bool is_section_based_layout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILayoutConfiguration_GridLayout m_grid_layout;
    bool m_grid_layout_isSet;
    bool m_grid_layout_isValid;

    OAILayoutConfiguration_FreeFormLayout m_free_form_layout;
    bool m_free_form_layout_isSet;
    bool m_free_form_layout_isValid;

    OAILayoutConfiguration_SectionBasedLayout m_section_based_layout;
    bool m_section_based_layout_isSet;
    bool m_section_based_layout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILayoutConfiguration)

#endif // OAILayoutConfiguration_H
