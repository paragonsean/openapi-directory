/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxPlotStyleOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxPlotStyleOptions::OAIBoxPlotStyleOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxPlotStyleOptions::OAIBoxPlotStyleOptions() {
    this->initializeModel();
}

OAIBoxPlotStyleOptions::~OAIBoxPlotStyleOptions() {}

void OAIBoxPlotStyleOptions::initializeModel() {

    m_fill_style_isSet = false;
    m_fill_style_isValid = false;
}

void OAIBoxPlotStyleOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoxPlotStyleOptions::fromJsonObject(QJsonObject json) {

    m_fill_style_isValid = ::OpenAPI::fromJsonValue(m_fill_style, json[QString("FillStyle")]);
    m_fill_style_isSet = !json[QString("FillStyle")].isNull() && m_fill_style_isValid;
}

QString OAIBoxPlotStyleOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoxPlotStyleOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_fill_style.isSet()) {
        obj.insert(QString("FillStyle"), ::OpenAPI::toJsonValue(m_fill_style));
    }
    return obj;
}

OAIBoxPlotFillStyle OAIBoxPlotStyleOptions::getFillStyle() const {
    return m_fill_style;
}
void OAIBoxPlotStyleOptions::setFillStyle(const OAIBoxPlotFillStyle &fill_style) {
    m_fill_style = fill_style;
    m_fill_style_isSet = true;
}

bool OAIBoxPlotStyleOptions::is_fill_style_Set() const{
    return m_fill_style_isSet;
}

bool OAIBoxPlotStyleOptions::is_fill_style_Valid() const{
    return m_fill_style_isValid;
}

bool OAIBoxPlotStyleOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fill_style.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoxPlotStyleOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
