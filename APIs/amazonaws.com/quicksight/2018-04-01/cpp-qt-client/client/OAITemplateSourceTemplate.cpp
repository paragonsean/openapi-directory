/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplateSourceTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplateSourceTemplate::OAITemplateSourceTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplateSourceTemplate::OAITemplateSourceTemplate() {
    this->initializeModel();
}

OAITemplateSourceTemplate::~OAITemplateSourceTemplate() {}

void OAITemplateSourceTemplate::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;
}

void OAITemplateSourceTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplateSourceTemplate::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;
}

QString OAITemplateSourceTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplateSourceTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    return obj;
}

QString OAITemplateSourceTemplate::getArn() const {
    return m_arn;
}
void OAITemplateSourceTemplate::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAITemplateSourceTemplate::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAITemplateSourceTemplate::is_arn_Valid() const{
    return m_arn_isValid;
}

bool OAITemplateSourceTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplateSourceTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && true;
}

} // namespace OpenAPI
