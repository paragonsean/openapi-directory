/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTopic_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTopic_request::OAIUpdateTopic_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTopic_request::OAIUpdateTopic_request() {
    this->initializeModel();
}

OAIUpdateTopic_request::~OAIUpdateTopic_request() {}

void OAIUpdateTopic_request::initializeModel() {

    m_topic_isSet = false;
    m_topic_isValid = false;
}

void OAIUpdateTopic_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTopic_request::fromJsonObject(QJsonObject json) {

    m_topic_isValid = ::OpenAPI::fromJsonValue(m_topic, json[QString("Topic")]);
    m_topic_isSet = !json[QString("Topic")].isNull() && m_topic_isValid;
}

QString OAIUpdateTopic_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTopic_request::asJsonObject() const {
    QJsonObject obj;
    if (m_topic.isSet()) {
        obj.insert(QString("Topic"), ::OpenAPI::toJsonValue(m_topic));
    }
    return obj;
}

OAICreateTopic_request_Topic OAIUpdateTopic_request::getTopic() const {
    return m_topic;
}
void OAIUpdateTopic_request::setTopic(const OAICreateTopic_request_Topic &topic) {
    m_topic = topic;
    m_topic_isSet = true;
}

bool OAIUpdateTopic_request::is_topic_Set() const{
    return m_topic_isSet;
}

bool OAIUpdateTopic_request::is_topic_Valid() const{
    return m_topic_isValid;
}

bool OAIUpdateTopic_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_topic.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTopic_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_topic_isValid && true;
}

} // namespace OpenAPI
