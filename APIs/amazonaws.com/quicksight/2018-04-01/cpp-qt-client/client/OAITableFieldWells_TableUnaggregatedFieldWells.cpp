/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldWells_TableUnaggregatedFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldWells_TableUnaggregatedFieldWells::OAITableFieldWells_TableUnaggregatedFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldWells_TableUnaggregatedFieldWells::OAITableFieldWells_TableUnaggregatedFieldWells() {
    this->initializeModel();
}

OAITableFieldWells_TableUnaggregatedFieldWells::~OAITableFieldWells_TableUnaggregatedFieldWells() {}

void OAITableFieldWells_TableUnaggregatedFieldWells::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAITableFieldWells_TableUnaggregatedFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldWells_TableUnaggregatedFieldWells::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAITableFieldWells_TableUnaggregatedFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldWells_TableUnaggregatedFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList OAITableFieldWells_TableUnaggregatedFieldWells::getValues() const {
    return m_values;
}
void OAITableFieldWells_TableUnaggregatedFieldWells::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAITableFieldWells_TableUnaggregatedFieldWells::is_values_Set() const{
    return m_values_isSet;
}

bool OAITableFieldWells_TableUnaggregatedFieldWells::is_values_Valid() const{
    return m_values_isValid;
}

bool OAITableFieldWells_TableUnaggregatedFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldWells_TableUnaggregatedFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
