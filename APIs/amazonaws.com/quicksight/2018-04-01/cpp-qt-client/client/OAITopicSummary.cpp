/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicSummary::OAITopicSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicSummary::OAITopicSummary() {
    this->initializeModel();
}

OAITopicSummary::~OAITopicSummary() {}

void OAITopicSummary::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_topic_id_isSet = false;
    m_topic_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAITopicSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicSummary::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_topic_id_isValid = ::OpenAPI::fromJsonValue(m_topic_id, json[QString("TopicId")]);
    m_topic_id_isSet = !json[QString("TopicId")].isNull() && m_topic_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAITopicSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_topic_id_isSet) {
        obj.insert(QString("TopicId"), ::OpenAPI::toJsonValue(m_topic_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAITopicSummary::getArn() const {
    return m_arn;
}
void OAITopicSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAITopicSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAITopicSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAITopicSummary::getTopicId() const {
    return m_topic_id;
}
void OAITopicSummary::setTopicId(const QString &topic_id) {
    m_topic_id = topic_id;
    m_topic_id_isSet = true;
}

bool OAITopicSummary::is_topic_id_Set() const{
    return m_topic_id_isSet;
}

bool OAITopicSummary::is_topic_id_Valid() const{
    return m_topic_id_isValid;
}

QString OAITopicSummary::getName() const {
    return m_name;
}
void OAITopicSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITopicSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAITopicSummary::is_name_Valid() const{
    return m_name_isValid;
}

bool OAITopicSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
