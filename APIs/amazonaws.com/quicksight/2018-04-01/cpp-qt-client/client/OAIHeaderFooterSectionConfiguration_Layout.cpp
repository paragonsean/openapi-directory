/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHeaderFooterSectionConfiguration_Layout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHeaderFooterSectionConfiguration_Layout::OAIHeaderFooterSectionConfiguration_Layout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHeaderFooterSectionConfiguration_Layout::OAIHeaderFooterSectionConfiguration_Layout() {
    this->initializeModel();
}

OAIHeaderFooterSectionConfiguration_Layout::~OAIHeaderFooterSectionConfiguration_Layout() {}

void OAIHeaderFooterSectionConfiguration_Layout::initializeModel() {

    m_free_form_layout_isSet = false;
    m_free_form_layout_isValid = false;
}

void OAIHeaderFooterSectionConfiguration_Layout::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHeaderFooterSectionConfiguration_Layout::fromJsonObject(QJsonObject json) {

    m_free_form_layout_isValid = ::OpenAPI::fromJsonValue(m_free_form_layout, json[QString("FreeFormLayout")]);
    m_free_form_layout_isSet = !json[QString("FreeFormLayout")].isNull() && m_free_form_layout_isValid;
}

QString OAIHeaderFooterSectionConfiguration_Layout::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHeaderFooterSectionConfiguration_Layout::asJsonObject() const {
    QJsonObject obj;
    if (m_free_form_layout.isSet()) {
        obj.insert(QString("FreeFormLayout"), ::OpenAPI::toJsonValue(m_free_form_layout));
    }
    return obj;
}

OAISectionLayoutConfiguration_FreeFormLayout OAIHeaderFooterSectionConfiguration_Layout::getFreeFormLayout() const {
    return m_free_form_layout;
}
void OAIHeaderFooterSectionConfiguration_Layout::setFreeFormLayout(const OAISectionLayoutConfiguration_FreeFormLayout &free_form_layout) {
    m_free_form_layout = free_form_layout;
    m_free_form_layout_isSet = true;
}

bool OAIHeaderFooterSectionConfiguration_Layout::is_free_form_layout_Set() const{
    return m_free_form_layout_isSet;
}

bool OAIHeaderFooterSectionConfiguration_Layout::is_free_form_layout_Valid() const{
    return m_free_form_layout_isValid;
}

bool OAIHeaderFooterSectionConfiguration_Layout::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_free_form_layout.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHeaderFooterSectionConfiguration_Layout::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_free_form_layout_isValid && true;
}

} // namespace OpenAPI
