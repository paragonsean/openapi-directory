/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeFormLayoutElement_LoadingAnimation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeFormLayoutElement_LoadingAnimation::OAIFreeFormLayoutElement_LoadingAnimation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeFormLayoutElement_LoadingAnimation::OAIFreeFormLayoutElement_LoadingAnimation() {
    this->initializeModel();
}

OAIFreeFormLayoutElement_LoadingAnimation::~OAIFreeFormLayoutElement_LoadingAnimation() {}

void OAIFreeFormLayoutElement_LoadingAnimation::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;
}

void OAIFreeFormLayoutElement_LoadingAnimation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeFormLayoutElement_LoadingAnimation::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;
}

QString OAIFreeFormLayoutElement_LoadingAnimation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeFormLayoutElement_LoadingAnimation::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    return obj;
}

OAIVisibility OAIFreeFormLayoutElement_LoadingAnimation::getVisibility() const {
    return m_visibility;
}
void OAIFreeFormLayoutElement_LoadingAnimation::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIFreeFormLayoutElement_LoadingAnimation::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIFreeFormLayoutElement_LoadingAnimation::is_visibility_Valid() const{
    return m_visibility_isValid;
}

bool OAIFreeFormLayoutElement_LoadingAnimation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeFormLayoutElement_LoadingAnimation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
