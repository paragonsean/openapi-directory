/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSetImportMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSetImportMode::OAIDataSetImportMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSetImportMode::OAIDataSetImportMode() {
    this->initializeModel();
}

OAIDataSetImportMode::~OAIDataSetImportMode() {}

void OAIDataSetImportMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataSetImportMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataSetImportMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SPICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSetImportMode::SPICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DIRECT_QUERY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSetImportMode::DIRECT_QUERY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataSetImportMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataSetImportMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataSetImportMode::SPICE:
            val = "SPICE";
            break;
        case eOAIDataSetImportMode::DIRECT_QUERY:
            val = "DIRECT_QUERY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataSetImportMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataSetImportMode::eOAIDataSetImportMode OAIDataSetImportMode::getValue() const {
    return m_value;
}

void OAIDataSetImportMode::setValue(const OAIDataSetImportMode::eOAIDataSetImportMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataSetImportMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataSetImportMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
