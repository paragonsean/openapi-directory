/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISelectedFieldOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISelectedFieldOptions::OAISelectedFieldOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISelectedFieldOptions::OAISelectedFieldOptions() {
    this->initializeModel();
}

OAISelectedFieldOptions::~OAISelectedFieldOptions() {}

void OAISelectedFieldOptions::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISelectedFieldOptions::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISelectedFieldOptions::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ALL_FIELDS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISelectedFieldOptions::ALL_FIELDS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISelectedFieldOptions::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISelectedFieldOptions::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISelectedFieldOptions::ALL_FIELDS:
            val = "ALL_FIELDS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISelectedFieldOptions::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISelectedFieldOptions::eOAISelectedFieldOptions OAISelectedFieldOptions::getValue() const {
    return m_value;
}

void OAISelectedFieldOptions::setValue(const OAISelectedFieldOptions::eOAISelectedFieldOptions& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISelectedFieldOptions::isSet() const {
    
    return m_value_isSet;
}

bool OAISelectedFieldOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
