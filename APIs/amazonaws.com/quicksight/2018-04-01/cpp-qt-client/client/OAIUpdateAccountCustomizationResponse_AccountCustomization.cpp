/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountCustomizationResponse_AccountCustomization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountCustomizationResponse_AccountCustomization::OAIUpdateAccountCustomizationResponse_AccountCustomization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountCustomizationResponse_AccountCustomization::OAIUpdateAccountCustomizationResponse_AccountCustomization() {
    this->initializeModel();
}

OAIUpdateAccountCustomizationResponse_AccountCustomization::~OAIUpdateAccountCustomizationResponse_AccountCustomization() {}

void OAIUpdateAccountCustomizationResponse_AccountCustomization::initializeModel() {

    m_default_theme_isSet = false;
    m_default_theme_isValid = false;

    m_default_email_customization_template_isSet = false;
    m_default_email_customization_template_isValid = false;
}

void OAIUpdateAccountCustomizationResponse_AccountCustomization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountCustomizationResponse_AccountCustomization::fromJsonObject(QJsonObject json) {

    m_default_theme_isValid = ::OpenAPI::fromJsonValue(m_default_theme, json[QString("DefaultTheme")]);
    m_default_theme_isSet = !json[QString("DefaultTheme")].isNull() && m_default_theme_isValid;

    m_default_email_customization_template_isValid = ::OpenAPI::fromJsonValue(m_default_email_customization_template, json[QString("DefaultEmailCustomizationTemplate")]);
    m_default_email_customization_template_isSet = !json[QString("DefaultEmailCustomizationTemplate")].isNull() && m_default_email_customization_template_isValid;
}

QString OAIUpdateAccountCustomizationResponse_AccountCustomization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountCustomizationResponse_AccountCustomization::asJsonObject() const {
    QJsonObject obj;
    if (m_default_theme_isSet) {
        obj.insert(QString("DefaultTheme"), ::OpenAPI::toJsonValue(m_default_theme));
    }
    if (m_default_email_customization_template_isSet) {
        obj.insert(QString("DefaultEmailCustomizationTemplate"), ::OpenAPI::toJsonValue(m_default_email_customization_template));
    }
    return obj;
}

QString OAIUpdateAccountCustomizationResponse_AccountCustomization::getDefaultTheme() const {
    return m_default_theme;
}
void OAIUpdateAccountCustomizationResponse_AccountCustomization::setDefaultTheme(const QString &default_theme) {
    m_default_theme = default_theme;
    m_default_theme_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::is_default_theme_Set() const{
    return m_default_theme_isSet;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::is_default_theme_Valid() const{
    return m_default_theme_isValid;
}

QString OAIUpdateAccountCustomizationResponse_AccountCustomization::getDefaultEmailCustomizationTemplate() const {
    return m_default_email_customization_template;
}
void OAIUpdateAccountCustomizationResponse_AccountCustomization::setDefaultEmailCustomizationTemplate(const QString &default_email_customization_template) {
    m_default_email_customization_template = default_email_customization_template;
    m_default_email_customization_template_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::is_default_email_customization_template_Set() const{
    return m_default_email_customization_template_isSet;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::is_default_email_customization_template_Valid() const{
    return m_default_email_customization_template_isValid;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_theme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_email_customization_template_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountCustomizationResponse_AccountCustomization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
