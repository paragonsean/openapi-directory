/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefreshInterval.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefreshInterval::OAIRefreshInterval(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefreshInterval::OAIRefreshInterval() {
    this->initializeModel();
}

OAIRefreshInterval::~OAIRefreshInterval() {}

void OAIRefreshInterval::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRefreshInterval::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRefreshInterval::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MINUTE15", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::MINUTE15;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MINUTE30", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::MINUTE30;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HOURLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::HOURLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DAILY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::DAILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::WEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRefreshInterval::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRefreshInterval::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRefreshInterval::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRefreshInterval::MINUTE15:
            val = "MINUTE15";
            break;
        case eOAIRefreshInterval::MINUTE30:
            val = "MINUTE30";
            break;
        case eOAIRefreshInterval::HOURLY:
            val = "HOURLY";
            break;
        case eOAIRefreshInterval::DAILY:
            val = "DAILY";
            break;
        case eOAIRefreshInterval::WEEKLY:
            val = "WEEKLY";
            break;
        case eOAIRefreshInterval::MONTHLY:
            val = "MONTHLY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRefreshInterval::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRefreshInterval::eOAIRefreshInterval OAIRefreshInterval::getValue() const {
    return m_value;
}

void OAIRefreshInterval::setValue(const OAIRefreshInterval::eOAIRefreshInterval& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRefreshInterval::isSet() const {
    
    return m_value_isSet;
}

bool OAIRefreshInterval::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
