/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUndefinedSpecifiedValueType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUndefinedSpecifiedValueType::OAIUndefinedSpecifiedValueType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUndefinedSpecifiedValueType::OAIUndefinedSpecifiedValueType() {
    this->initializeModel();
}

OAIUndefinedSpecifiedValueType::~OAIUndefinedSpecifiedValueType() {}

void OAIUndefinedSpecifiedValueType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUndefinedSpecifiedValueType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUndefinedSpecifiedValueType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LEAST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUndefinedSpecifiedValueType::LEAST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MOST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUndefinedSpecifiedValueType::MOST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUndefinedSpecifiedValueType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUndefinedSpecifiedValueType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUndefinedSpecifiedValueType::LEAST:
            val = "LEAST";
            break;
        case eOAIUndefinedSpecifiedValueType::MOST:
            val = "MOST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUndefinedSpecifiedValueType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUndefinedSpecifiedValueType::eOAIUndefinedSpecifiedValueType OAIUndefinedSpecifiedValueType::getValue() const {
    return m_value;
}

void OAIUndefinedSpecifiedValueType::setValue(const OAIUndefinedSpecifiedValueType::eOAIUndefinedSpecifiedValueType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUndefinedSpecifiedValueType::isSet() const {
    
    return m_value_isSet;
}

bool OAIUndefinedSpecifiedValueType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
