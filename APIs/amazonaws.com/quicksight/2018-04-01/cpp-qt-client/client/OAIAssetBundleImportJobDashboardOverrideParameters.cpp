/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleImportJobDashboardOverrideParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleImportJobDashboardOverrideParameters::OAIAssetBundleImportJobDashboardOverrideParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleImportJobDashboardOverrideParameters::OAIAssetBundleImportJobDashboardOverrideParameters() {
    this->initializeModel();
}

OAIAssetBundleImportJobDashboardOverrideParameters::~OAIAssetBundleImportJobDashboardOverrideParameters() {}

void OAIAssetBundleImportJobDashboardOverrideParameters::initializeModel() {

    m_dashboard_id_isSet = false;
    m_dashboard_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAssetBundleImportJobDashboardOverrideParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetBundleImportJobDashboardOverrideParameters::fromJsonObject(QJsonObject json) {

    m_dashboard_id_isValid = ::OpenAPI::fromJsonValue(m_dashboard_id, json[QString("DashboardId")]);
    m_dashboard_id_isSet = !json[QString("DashboardId")].isNull() && m_dashboard_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIAssetBundleImportJobDashboardOverrideParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetBundleImportJobDashboardOverrideParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_dashboard_id_isSet) {
        obj.insert(QString("DashboardId"), ::OpenAPI::toJsonValue(m_dashboard_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAssetBundleImportJobDashboardOverrideParameters::getDashboardId() const {
    return m_dashboard_id;
}
void OAIAssetBundleImportJobDashboardOverrideParameters::setDashboardId(const QString &dashboard_id) {
    m_dashboard_id = dashboard_id;
    m_dashboard_id_isSet = true;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::is_dashboard_id_Set() const{
    return m_dashboard_id_isSet;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::is_dashboard_id_Valid() const{
    return m_dashboard_id_isValid;
}

QString OAIAssetBundleImportJobDashboardOverrideParameters::getName() const {
    return m_name;
}
void OAIAssetBundleImportJobDashboardOverrideParameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dashboard_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetBundleImportJobDashboardOverrideParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dashboard_id_isValid && true;
}

} // namespace OpenAPI
