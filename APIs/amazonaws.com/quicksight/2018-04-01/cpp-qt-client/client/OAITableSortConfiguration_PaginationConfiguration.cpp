/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableSortConfiguration_PaginationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableSortConfiguration_PaginationConfiguration::OAITableSortConfiguration_PaginationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableSortConfiguration_PaginationConfiguration::OAITableSortConfiguration_PaginationConfiguration() {
    this->initializeModel();
}

OAITableSortConfiguration_PaginationConfiguration::~OAITableSortConfiguration_PaginationConfiguration() {}

void OAITableSortConfiguration_PaginationConfiguration::initializeModel() {

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;
}

void OAITableSortConfiguration_PaginationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableSortConfiguration_PaginationConfiguration::fromJsonObject(QJsonObject json) {

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("PageSize")]);
    m_page_size_isSet = !json[QString("PageSize")].isNull() && m_page_size_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("PageNumber")]);
    m_page_number_isSet = !json[QString("PageNumber")].isNull() && m_page_number_isValid;
}

QString OAITableSortConfiguration_PaginationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableSortConfiguration_PaginationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_page_size_isSet) {
        obj.insert(QString("PageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("PageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    return obj;
}

qint32 OAITableSortConfiguration_PaginationConfiguration::getPageSize() const {
    return m_page_size;
}
void OAITableSortConfiguration_PaginationConfiguration::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAITableSortConfiguration_PaginationConfiguration::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAITableSortConfiguration_PaginationConfiguration::is_page_size_Valid() const{
    return m_page_size_isValid;
}

qint32 OAITableSortConfiguration_PaginationConfiguration::getPageNumber() const {
    return m_page_number;
}
void OAITableSortConfiguration_PaginationConfiguration::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAITableSortConfiguration_PaginationConfiguration::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAITableSortConfiguration_PaginationConfiguration::is_page_number_Valid() const{
    return m_page_number_isValid;
}

bool OAITableSortConfiguration_PaginationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableSortConfiguration_PaginationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_page_size_isValid && m_page_number_isValid && true;
}

} // namespace OpenAPI
