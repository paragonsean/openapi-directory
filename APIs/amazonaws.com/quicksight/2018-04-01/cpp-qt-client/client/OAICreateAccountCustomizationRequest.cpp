/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAccountCustomizationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAccountCustomizationRequest::OAICreateAccountCustomizationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAccountCustomizationRequest::OAICreateAccountCustomizationRequest() {
    this->initializeModel();
}

OAICreateAccountCustomizationRequest::~OAICreateAccountCustomizationRequest() {}

void OAICreateAccountCustomizationRequest::initializeModel() {

    m_account_customization_isSet = false;
    m_account_customization_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateAccountCustomizationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAccountCustomizationRequest::fromJsonObject(QJsonObject json) {

    m_account_customization_isValid = ::OpenAPI::fromJsonValue(m_account_customization, json[QString("AccountCustomization")]);
    m_account_customization_isSet = !json[QString("AccountCustomization")].isNull() && m_account_customization_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateAccountCustomizationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAccountCustomizationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_customization.isSet()) {
        obj.insert(QString("AccountCustomization"), ::OpenAPI::toJsonValue(m_account_customization));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreateAccountCustomizationRequest_AccountCustomization OAICreateAccountCustomizationRequest::getAccountCustomization() const {
    return m_account_customization;
}
void OAICreateAccountCustomizationRequest::setAccountCustomization(const OAICreateAccountCustomizationRequest_AccountCustomization &account_customization) {
    m_account_customization = account_customization;
    m_account_customization_isSet = true;
}

bool OAICreateAccountCustomizationRequest::is_account_customization_Set() const{
    return m_account_customization_isSet;
}

bool OAICreateAccountCustomizationRequest::is_account_customization_Valid() const{
    return m_account_customization_isValid;
}

QList OAICreateAccountCustomizationRequest::getTags() const {
    return m_tags;
}
void OAICreateAccountCustomizationRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateAccountCustomizationRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateAccountCustomizationRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateAccountCustomizationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_customization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAccountCustomizationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_customization_isValid && true;
}

} // namespace OpenAPI
