/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDashboardRequest_DashboardPublishOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDashboardRequest_DashboardPublishOptions::OAICreateDashboardRequest_DashboardPublishOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDashboardRequest_DashboardPublishOptions::OAICreateDashboardRequest_DashboardPublishOptions() {
    this->initializeModel();
}

OAICreateDashboardRequest_DashboardPublishOptions::~OAICreateDashboardRequest_DashboardPublishOptions() {}

void OAICreateDashboardRequest_DashboardPublishOptions::initializeModel() {

    m_ad_hoc_filtering_option_isSet = false;
    m_ad_hoc_filtering_option_isValid = false;

    m_export_to_csv_option_isSet = false;
    m_export_to_csv_option_isValid = false;

    m_sheet_controls_option_isSet = false;
    m_sheet_controls_option_isValid = false;

    m_visual_publish_options_isSet = false;
    m_visual_publish_options_isValid = false;

    m_sheet_layout_element_maximization_option_isSet = false;
    m_sheet_layout_element_maximization_option_isValid = false;

    m_visual_menu_option_isSet = false;
    m_visual_menu_option_isValid = false;

    m_visual_axis_sort_option_isSet = false;
    m_visual_axis_sort_option_isValid = false;

    m_export_with_hidden_fields_option_isSet = false;
    m_export_with_hidden_fields_option_isValid = false;

    m_data_point_drill_up_down_option_isSet = false;
    m_data_point_drill_up_down_option_isValid = false;

    m_data_point_menu_label_option_isSet = false;
    m_data_point_menu_label_option_isValid = false;

    m_data_point_tooltip_option_isSet = false;
    m_data_point_tooltip_option_isValid = false;
}

void OAICreateDashboardRequest_DashboardPublishOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDashboardRequest_DashboardPublishOptions::fromJsonObject(QJsonObject json) {

    m_ad_hoc_filtering_option_isValid = ::OpenAPI::fromJsonValue(m_ad_hoc_filtering_option, json[QString("AdHocFilteringOption")]);
    m_ad_hoc_filtering_option_isSet = !json[QString("AdHocFilteringOption")].isNull() && m_ad_hoc_filtering_option_isValid;

    m_export_to_csv_option_isValid = ::OpenAPI::fromJsonValue(m_export_to_csv_option, json[QString("ExportToCSVOption")]);
    m_export_to_csv_option_isSet = !json[QString("ExportToCSVOption")].isNull() && m_export_to_csv_option_isValid;

    m_sheet_controls_option_isValid = ::OpenAPI::fromJsonValue(m_sheet_controls_option, json[QString("SheetControlsOption")]);
    m_sheet_controls_option_isSet = !json[QString("SheetControlsOption")].isNull() && m_sheet_controls_option_isValid;

    m_visual_publish_options_isValid = ::OpenAPI::fromJsonValue(m_visual_publish_options, json[QString("VisualPublishOptions")]);
    m_visual_publish_options_isSet = !json[QString("VisualPublishOptions")].isNull() && m_visual_publish_options_isValid;

    m_sheet_layout_element_maximization_option_isValid = ::OpenAPI::fromJsonValue(m_sheet_layout_element_maximization_option, json[QString("SheetLayoutElementMaximizationOption")]);
    m_sheet_layout_element_maximization_option_isSet = !json[QString("SheetLayoutElementMaximizationOption")].isNull() && m_sheet_layout_element_maximization_option_isValid;

    m_visual_menu_option_isValid = ::OpenAPI::fromJsonValue(m_visual_menu_option, json[QString("VisualMenuOption")]);
    m_visual_menu_option_isSet = !json[QString("VisualMenuOption")].isNull() && m_visual_menu_option_isValid;

    m_visual_axis_sort_option_isValid = ::OpenAPI::fromJsonValue(m_visual_axis_sort_option, json[QString("VisualAxisSortOption")]);
    m_visual_axis_sort_option_isSet = !json[QString("VisualAxisSortOption")].isNull() && m_visual_axis_sort_option_isValid;

    m_export_with_hidden_fields_option_isValid = ::OpenAPI::fromJsonValue(m_export_with_hidden_fields_option, json[QString("ExportWithHiddenFieldsOption")]);
    m_export_with_hidden_fields_option_isSet = !json[QString("ExportWithHiddenFieldsOption")].isNull() && m_export_with_hidden_fields_option_isValid;

    m_data_point_drill_up_down_option_isValid = ::OpenAPI::fromJsonValue(m_data_point_drill_up_down_option, json[QString("DataPointDrillUpDownOption")]);
    m_data_point_drill_up_down_option_isSet = !json[QString("DataPointDrillUpDownOption")].isNull() && m_data_point_drill_up_down_option_isValid;

    m_data_point_menu_label_option_isValid = ::OpenAPI::fromJsonValue(m_data_point_menu_label_option, json[QString("DataPointMenuLabelOption")]);
    m_data_point_menu_label_option_isSet = !json[QString("DataPointMenuLabelOption")].isNull() && m_data_point_menu_label_option_isValid;

    m_data_point_tooltip_option_isValid = ::OpenAPI::fromJsonValue(m_data_point_tooltip_option, json[QString("DataPointTooltipOption")]);
    m_data_point_tooltip_option_isSet = !json[QString("DataPointTooltipOption")].isNull() && m_data_point_tooltip_option_isValid;
}

QString OAICreateDashboardRequest_DashboardPublishOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDashboardRequest_DashboardPublishOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_hoc_filtering_option.isSet()) {
        obj.insert(QString("AdHocFilteringOption"), ::OpenAPI::toJsonValue(m_ad_hoc_filtering_option));
    }
    if (m_export_to_csv_option.isSet()) {
        obj.insert(QString("ExportToCSVOption"), ::OpenAPI::toJsonValue(m_export_to_csv_option));
    }
    if (m_sheet_controls_option.isSet()) {
        obj.insert(QString("SheetControlsOption"), ::OpenAPI::toJsonValue(m_sheet_controls_option));
    }
    if (m_visual_publish_options.isSet()) {
        obj.insert(QString("VisualPublishOptions"), ::OpenAPI::toJsonValue(m_visual_publish_options));
    }
    if (m_sheet_layout_element_maximization_option.isSet()) {
        obj.insert(QString("SheetLayoutElementMaximizationOption"), ::OpenAPI::toJsonValue(m_sheet_layout_element_maximization_option));
    }
    if (m_visual_menu_option.isSet()) {
        obj.insert(QString("VisualMenuOption"), ::OpenAPI::toJsonValue(m_visual_menu_option));
    }
    if (m_visual_axis_sort_option.isSet()) {
        obj.insert(QString("VisualAxisSortOption"), ::OpenAPI::toJsonValue(m_visual_axis_sort_option));
    }
    if (m_export_with_hidden_fields_option.isSet()) {
        obj.insert(QString("ExportWithHiddenFieldsOption"), ::OpenAPI::toJsonValue(m_export_with_hidden_fields_option));
    }
    if (m_data_point_drill_up_down_option.isSet()) {
        obj.insert(QString("DataPointDrillUpDownOption"), ::OpenAPI::toJsonValue(m_data_point_drill_up_down_option));
    }
    if (m_data_point_menu_label_option.isSet()) {
        obj.insert(QString("DataPointMenuLabelOption"), ::OpenAPI::toJsonValue(m_data_point_menu_label_option));
    }
    if (m_data_point_tooltip_option.isSet()) {
        obj.insert(QString("DataPointTooltipOption"), ::OpenAPI::toJsonValue(m_data_point_tooltip_option));
    }
    return obj;
}

OAIUpdateDashboard_request_DashboardPublishOptions_AdHocFilteringOption OAICreateDashboardRequest_DashboardPublishOptions::getAdHocFilteringOption() const {
    return m_ad_hoc_filtering_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setAdHocFilteringOption(const OAIUpdateDashboard_request_DashboardPublishOptions_AdHocFilteringOption &ad_hoc_filtering_option) {
    m_ad_hoc_filtering_option = ad_hoc_filtering_option;
    m_ad_hoc_filtering_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_ad_hoc_filtering_option_Set() const{
    return m_ad_hoc_filtering_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_ad_hoc_filtering_option_Valid() const{
    return m_ad_hoc_filtering_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption OAICreateDashboardRequest_DashboardPublishOptions::getExportToCsvOption() const {
    return m_export_to_csv_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setExportToCsvOption(const OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption &export_to_csv_option) {
    m_export_to_csv_option = export_to_csv_option;
    m_export_to_csv_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_export_to_csv_option_Set() const{
    return m_export_to_csv_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_export_to_csv_option_Valid() const{
    return m_export_to_csv_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_SheetControlsOption OAICreateDashboardRequest_DashboardPublishOptions::getSheetControlsOption() const {
    return m_sheet_controls_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setSheetControlsOption(const OAIUpdateDashboard_request_DashboardPublishOptions_SheetControlsOption &sheet_controls_option) {
    m_sheet_controls_option = sheet_controls_option;
    m_sheet_controls_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_sheet_controls_option_Set() const{
    return m_sheet_controls_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_sheet_controls_option_Valid() const{
    return m_sheet_controls_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_VisualPublishOptions OAICreateDashboardRequest_DashboardPublishOptions::getVisualPublishOptions() const {
    return m_visual_publish_options;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setVisualPublishOptions(const OAIUpdateDashboard_request_DashboardPublishOptions_VisualPublishOptions &visual_publish_options) {
    m_visual_publish_options = visual_publish_options;
    m_visual_publish_options_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_publish_options_Set() const{
    return m_visual_publish_options_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_publish_options_Valid() const{
    return m_visual_publish_options_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_SheetLayoutElementMaximizationOption OAICreateDashboardRequest_DashboardPublishOptions::getSheetLayoutElementMaximizationOption() const {
    return m_sheet_layout_element_maximization_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setSheetLayoutElementMaximizationOption(const OAIUpdateDashboard_request_DashboardPublishOptions_SheetLayoutElementMaximizationOption &sheet_layout_element_maximization_option) {
    m_sheet_layout_element_maximization_option = sheet_layout_element_maximization_option;
    m_sheet_layout_element_maximization_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_sheet_layout_element_maximization_option_Set() const{
    return m_sheet_layout_element_maximization_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_sheet_layout_element_maximization_option_Valid() const{
    return m_sheet_layout_element_maximization_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_VisualMenuOption OAICreateDashboardRequest_DashboardPublishOptions::getVisualMenuOption() const {
    return m_visual_menu_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setVisualMenuOption(const OAIUpdateDashboard_request_DashboardPublishOptions_VisualMenuOption &visual_menu_option) {
    m_visual_menu_option = visual_menu_option;
    m_visual_menu_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_menu_option_Set() const{
    return m_visual_menu_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_menu_option_Valid() const{
    return m_visual_menu_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_VisualAxisSortOption OAICreateDashboardRequest_DashboardPublishOptions::getVisualAxisSortOption() const {
    return m_visual_axis_sort_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setVisualAxisSortOption(const OAIUpdateDashboard_request_DashboardPublishOptions_VisualAxisSortOption &visual_axis_sort_option) {
    m_visual_axis_sort_option = visual_axis_sort_option;
    m_visual_axis_sort_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_axis_sort_option_Set() const{
    return m_visual_axis_sort_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_visual_axis_sort_option_Valid() const{
    return m_visual_axis_sort_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_ExportWithHiddenFieldsOption OAICreateDashboardRequest_DashboardPublishOptions::getExportWithHiddenFieldsOption() const {
    return m_export_with_hidden_fields_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setExportWithHiddenFieldsOption(const OAIUpdateDashboard_request_DashboardPublishOptions_ExportWithHiddenFieldsOption &export_with_hidden_fields_option) {
    m_export_with_hidden_fields_option = export_with_hidden_fields_option;
    m_export_with_hidden_fields_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_export_with_hidden_fields_option_Set() const{
    return m_export_with_hidden_fields_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_export_with_hidden_fields_option_Valid() const{
    return m_export_with_hidden_fields_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_DataPointDrillUpDownOption OAICreateDashboardRequest_DashboardPublishOptions::getDataPointDrillUpDownOption() const {
    return m_data_point_drill_up_down_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setDataPointDrillUpDownOption(const OAIUpdateDashboard_request_DashboardPublishOptions_DataPointDrillUpDownOption &data_point_drill_up_down_option) {
    m_data_point_drill_up_down_option = data_point_drill_up_down_option;
    m_data_point_drill_up_down_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_drill_up_down_option_Set() const{
    return m_data_point_drill_up_down_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_drill_up_down_option_Valid() const{
    return m_data_point_drill_up_down_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_DataPointMenuLabelOption OAICreateDashboardRequest_DashboardPublishOptions::getDataPointMenuLabelOption() const {
    return m_data_point_menu_label_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setDataPointMenuLabelOption(const OAIUpdateDashboard_request_DashboardPublishOptions_DataPointMenuLabelOption &data_point_menu_label_option) {
    m_data_point_menu_label_option = data_point_menu_label_option;
    m_data_point_menu_label_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_menu_label_option_Set() const{
    return m_data_point_menu_label_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_menu_label_option_Valid() const{
    return m_data_point_menu_label_option_isValid;
}

OAIUpdateDashboard_request_DashboardPublishOptions_DataPointTooltipOption OAICreateDashboardRequest_DashboardPublishOptions::getDataPointTooltipOption() const {
    return m_data_point_tooltip_option;
}
void OAICreateDashboardRequest_DashboardPublishOptions::setDataPointTooltipOption(const OAIUpdateDashboard_request_DashboardPublishOptions_DataPointTooltipOption &data_point_tooltip_option) {
    m_data_point_tooltip_option = data_point_tooltip_option;
    m_data_point_tooltip_option_isSet = true;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_tooltip_option_Set() const{
    return m_data_point_tooltip_option_isSet;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::is_data_point_tooltip_option_Valid() const{
    return m_data_point_tooltip_option_isValid;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_hoc_filtering_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_to_csv_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sheet_controls_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_visual_publish_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sheet_layout_element_maximization_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_visual_menu_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_visual_axis_sort_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_with_hidden_fields_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_point_drill_up_down_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_point_menu_label_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_point_tooltip_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDashboardRequest_DashboardPublishOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
