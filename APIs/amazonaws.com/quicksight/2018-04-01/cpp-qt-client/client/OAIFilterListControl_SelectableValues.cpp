/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterListControl_SelectableValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterListControl_SelectableValues::OAIFilterListControl_SelectableValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterListControl_SelectableValues::OAIFilterListControl_SelectableValues() {
    this->initializeModel();
}

OAIFilterListControl_SelectableValues::~OAIFilterListControl_SelectableValues() {}

void OAIFilterListControl_SelectableValues::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIFilterListControl_SelectableValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilterListControl_SelectableValues::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIFilterListControl_SelectableValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilterListControl_SelectableValues::asJsonObject() const {
    QJsonObject obj;
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList OAIFilterListControl_SelectableValues::getValues() const {
    return m_values;
}
void OAIFilterListControl_SelectableValues::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIFilterListControl_SelectableValues::is_values_Set() const{
    return m_values_isSet;
}

bool OAIFilterListControl_SelectableValues::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIFilterListControl_SelectableValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilterListControl_SelectableValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
