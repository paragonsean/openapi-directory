/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDataSourceResponse_DataSource.h
 *
 * 
 */

#ifndef OAIDescribeDataSourceResponse_DataSource_H
#define OAIDescribeDataSourceResponse_DataSource_H

#include <QJsonObject>

#include "OAICreateDataSourceRequest_SslProperties.h"
#include "OAIDataSourceType.h"
#include "OAIDataSource_DataSourceParameters.h"
#include "OAIDataSource_ErrorInfo.h"
#include "OAIDataSource_VpcConnectionProperties.h"
#include "OAIResourceStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSource_DataSourceParameters;
class OAIDataSource_VpcConnectionProperties;
class OAICreateDataSourceRequest_SslProperties;
class OAIDataSource_ErrorInfo;

class OAIDescribeDataSourceResponse_DataSource : public OAIObject {
public:
    OAIDescribeDataSourceResponse_DataSource();
    OAIDescribeDataSourceResponse_DataSource(QString json);
    ~OAIDescribeDataSourceResponse_DataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDataSourceType getType() const;
    void setType(const OAIDataSourceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    OAIDataSource_DataSourceParameters getDataSourceParameters() const;
    void setDataSourceParameters(const OAIDataSource_DataSourceParameters &data_source_parameters);
    bool is_data_source_parameters_Set() const;
    bool is_data_source_parameters_Valid() const;

    QList getAlternateDataSourceParameters() const;
    void setAlternateDataSourceParameters(const QList &alternate_data_source_parameters);
    bool is_alternate_data_source_parameters_Set() const;
    bool is_alternate_data_source_parameters_Valid() const;

    OAIDataSource_VpcConnectionProperties getVpcConnectionProperties() const;
    void setVpcConnectionProperties(const OAIDataSource_VpcConnectionProperties &vpc_connection_properties);
    bool is_vpc_connection_properties_Set() const;
    bool is_vpc_connection_properties_Valid() const;

    OAICreateDataSourceRequest_SslProperties getSslProperties() const;
    void setSslProperties(const OAICreateDataSourceRequest_SslProperties &ssl_properties);
    bool is_ssl_properties_Set() const;
    bool is_ssl_properties_Valid() const;

    OAIDataSource_ErrorInfo getErrorInfo() const;
    void setErrorInfo(const OAIDataSource_ErrorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QString getSecretArn() const;
    void setSecretArn(const QString &secret_arn);
    bool is_secret_arn_Set() const;
    bool is_secret_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDataSourceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    OAIDataSource_DataSourceParameters m_data_source_parameters;
    bool m_data_source_parameters_isSet;
    bool m_data_source_parameters_isValid;

    QList m_alternate_data_source_parameters;
    bool m_alternate_data_source_parameters_isSet;
    bool m_alternate_data_source_parameters_isValid;

    OAIDataSource_VpcConnectionProperties m_vpc_connection_properties;
    bool m_vpc_connection_properties_isSet;
    bool m_vpc_connection_properties_isValid;

    OAICreateDataSourceRequest_SslProperties m_ssl_properties;
    bool m_ssl_properties_isSet;
    bool m_ssl_properties_isValid;

    OAIDataSource_ErrorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QString m_secret_arn;
    bool m_secret_arn_isSet;
    bool m_secret_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDataSourceResponse_DataSource)

#endif // OAIDescribeDataSourceResponse_DataSource_H
