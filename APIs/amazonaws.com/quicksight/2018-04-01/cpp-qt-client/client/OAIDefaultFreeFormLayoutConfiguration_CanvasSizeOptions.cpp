/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions() {
    this->initializeModel();
}

OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::~OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions() {}

void OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::initializeModel() {

    m_screen_canvas_size_options_isSet = false;
    m_screen_canvas_size_options_isValid = false;
}

void OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::fromJsonObject(QJsonObject json) {

    m_screen_canvas_size_options_isValid = ::OpenAPI::fromJsonValue(m_screen_canvas_size_options, json[QString("ScreenCanvasSizeOptions")]);
    m_screen_canvas_size_options_isSet = !json[QString("ScreenCanvasSizeOptions")].isNull() && m_screen_canvas_size_options_isValid;
}

QString OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_screen_canvas_size_options.isSet()) {
        obj.insert(QString("ScreenCanvasSizeOptions"), ::OpenAPI::toJsonValue(m_screen_canvas_size_options));
    }
    return obj;
}

OAIFreeFormLayoutCanvasSizeOptions_ScreenCanvasSizeOptions OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::getScreenCanvasSizeOptions() const {
    return m_screen_canvas_size_options;
}
void OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::setScreenCanvasSizeOptions(const OAIFreeFormLayoutCanvasSizeOptions_ScreenCanvasSizeOptions &screen_canvas_size_options) {
    m_screen_canvas_size_options = screen_canvas_size_options;
    m_screen_canvas_size_options_isSet = true;
}

bool OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::is_screen_canvas_size_options_Set() const{
    return m_screen_canvas_size_options_isSet;
}

bool OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::is_screen_canvas_size_options_Valid() const{
    return m_screen_canvas_size_options_isValid;
}

bool OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_screen_canvas_size_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultFreeFormLayoutConfiguration_CanvasSizeOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
