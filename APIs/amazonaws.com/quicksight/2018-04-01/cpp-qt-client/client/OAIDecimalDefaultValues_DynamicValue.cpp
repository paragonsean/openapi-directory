/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalDefaultValues_DynamicValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalDefaultValues_DynamicValue::OAIDecimalDefaultValues_DynamicValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalDefaultValues_DynamicValue::OAIDecimalDefaultValues_DynamicValue() {
    this->initializeModel();
}

OAIDecimalDefaultValues_DynamicValue::~OAIDecimalDefaultValues_DynamicValue() {}

void OAIDecimalDefaultValues_DynamicValue::initializeModel() {

    m_user_name_column_isSet = false;
    m_user_name_column_isValid = false;

    m_group_name_column_isSet = false;
    m_group_name_column_isValid = false;

    m_default_value_column_isSet = false;
    m_default_value_column_isValid = false;
}

void OAIDecimalDefaultValues_DynamicValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalDefaultValues_DynamicValue::fromJsonObject(QJsonObject json) {

    m_user_name_column_isValid = ::OpenAPI::fromJsonValue(m_user_name_column, json[QString("UserNameColumn")]);
    m_user_name_column_isSet = !json[QString("UserNameColumn")].isNull() && m_user_name_column_isValid;

    m_group_name_column_isValid = ::OpenAPI::fromJsonValue(m_group_name_column, json[QString("GroupNameColumn")]);
    m_group_name_column_isSet = !json[QString("GroupNameColumn")].isNull() && m_group_name_column_isValid;

    m_default_value_column_isValid = ::OpenAPI::fromJsonValue(m_default_value_column, json[QString("DefaultValueColumn")]);
    m_default_value_column_isSet = !json[QString("DefaultValueColumn")].isNull() && m_default_value_column_isValid;
}

QString OAIDecimalDefaultValues_DynamicValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalDefaultValues_DynamicValue::asJsonObject() const {
    QJsonObject obj;
    if (m_user_name_column.isSet()) {
        obj.insert(QString("UserNameColumn"), ::OpenAPI::toJsonValue(m_user_name_column));
    }
    if (m_group_name_column.isSet()) {
        obj.insert(QString("GroupNameColumn"), ::OpenAPI::toJsonValue(m_group_name_column));
    }
    if (m_default_value_column.isSet()) {
        obj.insert(QString("DefaultValueColumn"), ::OpenAPI::toJsonValue(m_default_value_column));
    }
    return obj;
}

OAIDynamicDefaultValue_UserNameColumn OAIDecimalDefaultValues_DynamicValue::getUserNameColumn() const {
    return m_user_name_column;
}
void OAIDecimalDefaultValues_DynamicValue::setUserNameColumn(const OAIDynamicDefaultValue_UserNameColumn &user_name_column) {
    m_user_name_column = user_name_column;
    m_user_name_column_isSet = true;
}

bool OAIDecimalDefaultValues_DynamicValue::is_user_name_column_Set() const{
    return m_user_name_column_isSet;
}

bool OAIDecimalDefaultValues_DynamicValue::is_user_name_column_Valid() const{
    return m_user_name_column_isValid;
}

OAIDynamicDefaultValue_GroupNameColumn OAIDecimalDefaultValues_DynamicValue::getGroupNameColumn() const {
    return m_group_name_column;
}
void OAIDecimalDefaultValues_DynamicValue::setGroupNameColumn(const OAIDynamicDefaultValue_GroupNameColumn &group_name_column) {
    m_group_name_column = group_name_column;
    m_group_name_column_isSet = true;
}

bool OAIDecimalDefaultValues_DynamicValue::is_group_name_column_Set() const{
    return m_group_name_column_isSet;
}

bool OAIDecimalDefaultValues_DynamicValue::is_group_name_column_Valid() const{
    return m_group_name_column_isValid;
}

OAIDynamicDefaultValue_DefaultValueColumn OAIDecimalDefaultValues_DynamicValue::getDefaultValueColumn() const {
    return m_default_value_column;
}
void OAIDecimalDefaultValues_DynamicValue::setDefaultValueColumn(const OAIDynamicDefaultValue_DefaultValueColumn &default_value_column) {
    m_default_value_column = default_value_column;
    m_default_value_column_isSet = true;
}

bool OAIDecimalDefaultValues_DynamicValue::is_default_value_column_Set() const{
    return m_default_value_column_isSet;
}

bool OAIDecimalDefaultValues_DynamicValue::is_default_value_column_Valid() const{
    return m_default_value_column_isValid;
}

bool OAIDecimalDefaultValues_DynamicValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalDefaultValues_DynamicValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_value_column_isValid && true;
}

} // namespace OpenAPI
