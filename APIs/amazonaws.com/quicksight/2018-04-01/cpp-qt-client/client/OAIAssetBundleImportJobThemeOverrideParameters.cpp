/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleImportJobThemeOverrideParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleImportJobThemeOverrideParameters::OAIAssetBundleImportJobThemeOverrideParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleImportJobThemeOverrideParameters::OAIAssetBundleImportJobThemeOverrideParameters() {
    this->initializeModel();
}

OAIAssetBundleImportJobThemeOverrideParameters::~OAIAssetBundleImportJobThemeOverrideParameters() {}

void OAIAssetBundleImportJobThemeOverrideParameters::initializeModel() {

    m_theme_id_isSet = false;
    m_theme_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAssetBundleImportJobThemeOverrideParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetBundleImportJobThemeOverrideParameters::fromJsonObject(QJsonObject json) {

    m_theme_id_isValid = ::OpenAPI::fromJsonValue(m_theme_id, json[QString("ThemeId")]);
    m_theme_id_isSet = !json[QString("ThemeId")].isNull() && m_theme_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIAssetBundleImportJobThemeOverrideParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetBundleImportJobThemeOverrideParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_theme_id_isSet) {
        obj.insert(QString("ThemeId"), ::OpenAPI::toJsonValue(m_theme_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAssetBundleImportJobThemeOverrideParameters::getThemeId() const {
    return m_theme_id;
}
void OAIAssetBundleImportJobThemeOverrideParameters::setThemeId(const QString &theme_id) {
    m_theme_id = theme_id;
    m_theme_id_isSet = true;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::is_theme_id_Set() const{
    return m_theme_id_isSet;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::is_theme_id_Valid() const{
    return m_theme_id_isValid;
}

QString OAIAssetBundleImportJobThemeOverrideParameters::getName() const {
    return m_name;
}
void OAIAssetBundleImportJobThemeOverrideParameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_theme_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetBundleImportJobThemeOverrideParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_theme_id_isValid && true;
}

} // namespace OpenAPI
