/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICredentialPair.h
 *
 * The combination of user name and password that are used as credentials.
 */

#ifndef OAICredentialPair_H
#define OAICredentialPair_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICredentialPair : public OAIObject {
public:
    OAICredentialPair();
    OAICredentialPair(QString json);
    ~OAICredentialPair() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QList getAlternateDataSourceParameters() const;
    void setAlternateDataSourceParameters(const QList &alternate_data_source_parameters);
    bool is_alternate_data_source_parameters_Set() const;
    bool is_alternate_data_source_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QList m_alternate_data_source_parameters;
    bool m_alternate_data_source_parameters_isSet;
    bool m_alternate_data_source_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICredentialPair)

#endif // OAICredentialPair_H
