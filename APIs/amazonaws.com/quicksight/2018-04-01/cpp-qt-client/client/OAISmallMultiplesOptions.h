/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISmallMultiplesOptions.h
 *
 * Options that determine the layout and display options of a chart&#39;s small multiples.
 */

#ifndef OAISmallMultiplesOptions_H
#define OAISmallMultiplesOptions_H

#include <QJsonObject>

#include "OAISmallMultiplesOptions_PanelConfiguration.h"
#include "OAISmallMultiplesOptions_XAxis.h"
#include "OAISmallMultiplesOptions_YAxis.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISmallMultiplesOptions_PanelConfiguration;
class OAISmallMultiplesOptions_XAxis;
class OAISmallMultiplesOptions_YAxis;

class OAISmallMultiplesOptions : public OAIObject {
public:
    OAISmallMultiplesOptions();
    OAISmallMultiplesOptions(QString json);
    ~OAISmallMultiplesOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxVisibleRows() const;
    void setMaxVisibleRows(const qint32 &max_visible_rows);
    bool is_max_visible_rows_Set() const;
    bool is_max_visible_rows_Valid() const;

    qint32 getMaxVisibleColumns() const;
    void setMaxVisibleColumns(const qint32 &max_visible_columns);
    bool is_max_visible_columns_Set() const;
    bool is_max_visible_columns_Valid() const;

    OAISmallMultiplesOptions_PanelConfiguration getPanelConfiguration() const;
    void setPanelConfiguration(const OAISmallMultiplesOptions_PanelConfiguration &panel_configuration);
    bool is_panel_configuration_Set() const;
    bool is_panel_configuration_Valid() const;

    OAISmallMultiplesOptions_XAxis getXAxis() const;
    void setXAxis(const OAISmallMultiplesOptions_XAxis &x_axis);
    bool is_x_axis_Set() const;
    bool is_x_axis_Valid() const;

    OAISmallMultiplesOptions_YAxis getYAxis() const;
    void setYAxis(const OAISmallMultiplesOptions_YAxis &y_axis);
    bool is_y_axis_Set() const;
    bool is_y_axis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_visible_rows;
    bool m_max_visible_rows_isSet;
    bool m_max_visible_rows_isValid;

    qint32 m_max_visible_columns;
    bool m_max_visible_columns_isSet;
    bool m_max_visible_columns_isValid;

    OAISmallMultiplesOptions_PanelConfiguration m_panel_configuration;
    bool m_panel_configuration_isSet;
    bool m_panel_configuration_isValid;

    OAISmallMultiplesOptions_XAxis m_x_axis;
    bool m_x_axis_isSet;
    bool m_x_axis_isValid;

    OAISmallMultiplesOptions_YAxis m_y_axis;
    bool m_y_axis_isSet;
    bool m_y_axis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISmallMultiplesOptions)

#endif // OAISmallMultiplesOptions_H
