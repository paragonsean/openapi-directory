/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVisualCustomActionOperation_SetParametersOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVisualCustomActionOperation_SetParametersOperation::OAIVisualCustomActionOperation_SetParametersOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVisualCustomActionOperation_SetParametersOperation::OAIVisualCustomActionOperation_SetParametersOperation() {
    this->initializeModel();
}

OAIVisualCustomActionOperation_SetParametersOperation::~OAIVisualCustomActionOperation_SetParametersOperation() {}

void OAIVisualCustomActionOperation_SetParametersOperation::initializeModel() {

    m_parameter_value_configurations_isSet = false;
    m_parameter_value_configurations_isValid = false;
}

void OAIVisualCustomActionOperation_SetParametersOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVisualCustomActionOperation_SetParametersOperation::fromJsonObject(QJsonObject json) {

    m_parameter_value_configurations_isValid = ::OpenAPI::fromJsonValue(m_parameter_value_configurations, json[QString("ParameterValueConfigurations")]);
    m_parameter_value_configurations_isSet = !json[QString("ParameterValueConfigurations")].isNull() && m_parameter_value_configurations_isValid;
}

QString OAIVisualCustomActionOperation_SetParametersOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVisualCustomActionOperation_SetParametersOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_parameter_value_configurations.isSet()) {
        obj.insert(QString("ParameterValueConfigurations"), ::OpenAPI::toJsonValue(m_parameter_value_configurations));
    }
    return obj;
}

QList OAIVisualCustomActionOperation_SetParametersOperation::getParameterValueConfigurations() const {
    return m_parameter_value_configurations;
}
void OAIVisualCustomActionOperation_SetParametersOperation::setParameterValueConfigurations(const QList &parameter_value_configurations) {
    m_parameter_value_configurations = parameter_value_configurations;
    m_parameter_value_configurations_isSet = true;
}

bool OAIVisualCustomActionOperation_SetParametersOperation::is_parameter_value_configurations_Set() const{
    return m_parameter_value_configurations_isSet;
}

bool OAIVisualCustomActionOperation_SetParametersOperation::is_parameter_value_configurations_Valid() const{
    return m_parameter_value_configurations_isValid;
}

bool OAIVisualCustomActionOperation_SetParametersOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameter_value_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVisualCustomActionOperation_SetParametersOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_parameter_value_configurations_isValid && true;
}

} // namespace OpenAPI
