/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateGroup_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateGroup_request::OAICreateGroup_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateGroup_request::OAICreateGroup_request() {
    this->initializeModel();
}

OAICreateGroup_request::~OAICreateGroup_request() {}

void OAICreateGroup_request::initializeModel() {

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAICreateGroup_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateGroup_request::fromJsonObject(QJsonObject json) {

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("GroupName")]);
    m_group_name_isSet = !json[QString("GroupName")].isNull() && m_group_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;
}

QString OAICreateGroup_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateGroup_request::asJsonObject() const {
    QJsonObject obj;
    if (m_group_name_isSet) {
        obj.insert(QString("GroupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAICreateGroup_request::getGroupName() const {
    return m_group_name;
}
void OAICreateGroup_request::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAICreateGroup_request::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAICreateGroup_request::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAICreateGroup_request::getDescription() const {
    return m_description;
}
void OAICreateGroup_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateGroup_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateGroup_request::is_description_Valid() const{
    return m_description_isValid;
}

bool OAICreateGroup_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateGroup_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_name_isValid && true;
}

} // namespace OpenAPI
