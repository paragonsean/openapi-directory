/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleExportJobStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleExportJobStatus::OAIAssetBundleExportJobStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleExportJobStatus::OAIAssetBundleExportJobStatus() {
    this->initializeModel();
}

OAIAssetBundleExportJobStatus::~OAIAssetBundleExportJobStatus() {}

void OAIAssetBundleExportJobStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetBundleExportJobStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetBundleExportJobStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("QUEUED_FOR_IMMEDIATE_EXECUTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportJobStatus::QUEUED_FOR_IMMEDIATE_EXECUTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportJobStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUCCESSFUL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportJobStatus::SUCCESSFUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportJobStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetBundleExportJobStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetBundleExportJobStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetBundleExportJobStatus::QUEUED_FOR_IMMEDIATE_EXECUTION:
            val = "QUEUED_FOR_IMMEDIATE_EXECUTION";
            break;
        case eOAIAssetBundleExportJobStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIAssetBundleExportJobStatus::SUCCESSFUL:
            val = "SUCCESSFUL";
            break;
        case eOAIAssetBundleExportJobStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetBundleExportJobStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetBundleExportJobStatus::eOAIAssetBundleExportJobStatus OAIAssetBundleExportJobStatus::getValue() const {
    return m_value;
}

void OAIAssetBundleExportJobStatus::setValue(const OAIAssetBundleExportJobStatus::eOAIAssetBundleExportJobStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetBundleExportJobStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetBundleExportJobStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
