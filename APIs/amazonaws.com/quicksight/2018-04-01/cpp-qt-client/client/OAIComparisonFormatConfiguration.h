/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComparisonFormatConfiguration.h
 *
 * &lt;p&gt;The format of the comparison.&lt;/p&gt; &lt;p&gt;This is a union type structure. For this structure to be valid, only one of the attributes can be defined.&lt;/p&gt;
 */

#ifndef OAIComparisonFormatConfiguration_H
#define OAIComparisonFormatConfiguration_H

#include <QJsonObject>

#include "OAIComparisonFormatConfiguration_NumberDisplayFormatConfiguration.h"
#include "OAIComparisonFormatConfiguration_PercentageDisplayFormatConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComparisonFormatConfiguration_NumberDisplayFormatConfiguration;
class OAIComparisonFormatConfiguration_PercentageDisplayFormatConfiguration;

class OAIComparisonFormatConfiguration : public OAIObject {
public:
    OAIComparisonFormatConfiguration();
    OAIComparisonFormatConfiguration(QString json);
    ~OAIComparisonFormatConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIComparisonFormatConfiguration_NumberDisplayFormatConfiguration getNumberDisplayFormatConfiguration() const;
    void setNumberDisplayFormatConfiguration(const OAIComparisonFormatConfiguration_NumberDisplayFormatConfiguration &number_display_format_configuration);
    bool is_number_display_format_configuration_Set() const;
    bool is_number_display_format_configuration_Valid() const;

    OAIComparisonFormatConfiguration_PercentageDisplayFormatConfiguration getPercentageDisplayFormatConfiguration() const;
    void setPercentageDisplayFormatConfiguration(const OAIComparisonFormatConfiguration_PercentageDisplayFormatConfiguration &percentage_display_format_configuration);
    bool is_percentage_display_format_configuration_Set() const;
    bool is_percentage_display_format_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIComparisonFormatConfiguration_NumberDisplayFormatConfiguration m_number_display_format_configuration;
    bool m_number_display_format_configuration_isSet;
    bool m_number_display_format_configuration_isValid;

    OAIComparisonFormatConfiguration_PercentageDisplayFormatConfiguration m_percentage_display_format_configuration;
    bool m_percentage_display_format_configuration_isSet;
    bool m_percentage_display_format_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComparisonFormatConfiguration)

#endif // OAIComparisonFormatConfiguration_H
