/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFreeFormLayoutElement.h
 *
 * An element within a free-form layout.
 */

#ifndef OAIFreeFormLayoutElement_H
#define OAIFreeFormLayoutElement_H

#include <QJsonObject>

#include "OAIFreeFormLayoutElement_BackgroundStyle.h"
#include "OAIFreeFormLayoutElement_BorderStyle.h"
#include "OAIFreeFormLayoutElement_LoadingAnimation.h"
#include "OAIFreeFormLayoutElement_SelectedBorderStyle.h"
#include "OAILayoutElementType.h"
#include "OAIVisibility.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFreeFormLayoutElement_BorderStyle;
class OAIFreeFormLayoutElement_SelectedBorderStyle;
class OAIFreeFormLayoutElement_BackgroundStyle;
class OAIFreeFormLayoutElement_LoadingAnimation;

class OAIFreeFormLayoutElement : public OAIObject {
public:
    OAIFreeFormLayoutElement();
    OAIFreeFormLayoutElement(QString json);
    ~OAIFreeFormLayoutElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getElementId() const;
    void setElementId(const QString &element_id);
    bool is_element_id_Set() const;
    bool is_element_id_Valid() const;

    OAILayoutElementType getElementType() const;
    void setElementType(const OAILayoutElementType &element_type);
    bool is_element_type_Set() const;
    bool is_element_type_Valid() const;

    QString getXAxisLocation() const;
    void setXAxisLocation(const QString &x_axis_location);
    bool is_x_axis_location_Set() const;
    bool is_x_axis_location_Valid() const;

    QString getYAxisLocation() const;
    void setYAxisLocation(const QString &y_axis_location);
    bool is_y_axis_location_Set() const;
    bool is_y_axis_location_Valid() const;

    QString getWidth() const;
    void setWidth(const QString &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    QString getHeight() const;
    void setHeight(const QString &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    QList getRenderingRules() const;
    void setRenderingRules(const QList &rendering_rules);
    bool is_rendering_rules_Set() const;
    bool is_rendering_rules_Valid() const;

    OAIFreeFormLayoutElement_BorderStyle getBorderStyle() const;
    void setBorderStyle(const OAIFreeFormLayoutElement_BorderStyle &border_style);
    bool is_border_style_Set() const;
    bool is_border_style_Valid() const;

    OAIFreeFormLayoutElement_SelectedBorderStyle getSelectedBorderStyle() const;
    void setSelectedBorderStyle(const OAIFreeFormLayoutElement_SelectedBorderStyle &selected_border_style);
    bool is_selected_border_style_Set() const;
    bool is_selected_border_style_Valid() const;

    OAIFreeFormLayoutElement_BackgroundStyle getBackgroundStyle() const;
    void setBackgroundStyle(const OAIFreeFormLayoutElement_BackgroundStyle &background_style);
    bool is_background_style_Set() const;
    bool is_background_style_Valid() const;

    OAIFreeFormLayoutElement_LoadingAnimation getLoadingAnimation() const;
    void setLoadingAnimation(const OAIFreeFormLayoutElement_LoadingAnimation &loading_animation);
    bool is_loading_animation_Set() const;
    bool is_loading_animation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_element_id;
    bool m_element_id_isSet;
    bool m_element_id_isValid;

    OAILayoutElementType m_element_type;
    bool m_element_type_isSet;
    bool m_element_type_isValid;

    QString m_x_axis_location;
    bool m_x_axis_location_isSet;
    bool m_x_axis_location_isValid;

    QString m_y_axis_location;
    bool m_y_axis_location_isSet;
    bool m_y_axis_location_isValid;

    QString m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    QString m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    QList m_rendering_rules;
    bool m_rendering_rules_isSet;
    bool m_rendering_rules_isValid;

    OAIFreeFormLayoutElement_BorderStyle m_border_style;
    bool m_border_style_isSet;
    bool m_border_style_isValid;

    OAIFreeFormLayoutElement_SelectedBorderStyle m_selected_border_style;
    bool m_selected_border_style_isSet;
    bool m_selected_border_style_isValid;

    OAIFreeFormLayoutElement_BackgroundStyle m_background_style;
    bool m_background_style_isSet;
    bool m_background_style_isValid;

    OAIFreeFormLayoutElement_LoadingAnimation m_loading_animation;
    bool m_loading_animation_isSet;
    bool m_loading_animation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFreeFormLayoutElement)

#endif // OAIFreeFormLayoutElement_H
