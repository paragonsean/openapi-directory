/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration() {
    this->initializeModel();
}

OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::~OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration() {}

void OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::initializeModel() {

    m_grid_isSet = false;
    m_grid_isValid = false;

    m_free_form_isSet = false;
    m_free_form_isValid = false;
}

void OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::fromJsonObject(QJsonObject json) {

    m_grid_isValid = ::OpenAPI::fromJsonValue(m_grid, json[QString("Grid")]);
    m_grid_isSet = !json[QString("Grid")].isNull() && m_grid_isValid;

    m_free_form_isValid = ::OpenAPI::fromJsonValue(m_free_form, json[QString("FreeForm")]);
    m_free_form_isSet = !json[QString("FreeForm")].isNull() && m_free_form_isValid;
}

QString OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_grid.isSet()) {
        obj.insert(QString("Grid"), ::OpenAPI::toJsonValue(m_grid));
    }
    if (m_free_form.isSet()) {
        obj.insert(QString("FreeForm"), ::OpenAPI::toJsonValue(m_free_form));
    }
    return obj;
}

OAIDefaultInteractiveLayoutConfiguration_Grid OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::getGrid() const {
    return m_grid;
}
void OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::setGrid(const OAIDefaultInteractiveLayoutConfiguration_Grid &grid) {
    m_grid = grid;
    m_grid_isSet = true;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::is_grid_Set() const{
    return m_grid_isSet;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::is_grid_Valid() const{
    return m_grid_isValid;
}

OAIDefaultInteractiveLayoutConfiguration_FreeForm OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::getFreeForm() const {
    return m_free_form;
}
void OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::setFreeForm(const OAIDefaultInteractiveLayoutConfiguration_FreeForm &free_form) {
    m_free_form = free_form;
    m_free_form_isSet = true;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::is_free_form_Set() const{
    return m_free_form_isSet;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::is_free_form_Valid() const{
    return m_free_form_isValid;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grid.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_form.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
