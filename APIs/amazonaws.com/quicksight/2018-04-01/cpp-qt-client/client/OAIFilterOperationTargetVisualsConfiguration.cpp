/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterOperationTargetVisualsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterOperationTargetVisualsConfiguration::OAIFilterOperationTargetVisualsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterOperationTargetVisualsConfiguration::OAIFilterOperationTargetVisualsConfiguration() {
    this->initializeModel();
}

OAIFilterOperationTargetVisualsConfiguration::~OAIFilterOperationTargetVisualsConfiguration() {}

void OAIFilterOperationTargetVisualsConfiguration::initializeModel() {

    m_same_sheet_target_visual_configuration_isSet = false;
    m_same_sheet_target_visual_configuration_isValid = false;
}

void OAIFilterOperationTargetVisualsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilterOperationTargetVisualsConfiguration::fromJsonObject(QJsonObject json) {

    m_same_sheet_target_visual_configuration_isValid = ::OpenAPI::fromJsonValue(m_same_sheet_target_visual_configuration, json[QString("SameSheetTargetVisualConfiguration")]);
    m_same_sheet_target_visual_configuration_isSet = !json[QString("SameSheetTargetVisualConfiguration")].isNull() && m_same_sheet_target_visual_configuration_isValid;
}

QString OAIFilterOperationTargetVisualsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilterOperationTargetVisualsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_same_sheet_target_visual_configuration.isSet()) {
        obj.insert(QString("SameSheetTargetVisualConfiguration"), ::OpenAPI::toJsonValue(m_same_sheet_target_visual_configuration));
    }
    return obj;
}

OAIFilterOperationTargetVisualsConfiguration_SameSheetTargetVisualConfiguration OAIFilterOperationTargetVisualsConfiguration::getSameSheetTargetVisualConfiguration() const {
    return m_same_sheet_target_visual_configuration;
}
void OAIFilterOperationTargetVisualsConfiguration::setSameSheetTargetVisualConfiguration(const OAIFilterOperationTargetVisualsConfiguration_SameSheetTargetVisualConfiguration &same_sheet_target_visual_configuration) {
    m_same_sheet_target_visual_configuration = same_sheet_target_visual_configuration;
    m_same_sheet_target_visual_configuration_isSet = true;
}

bool OAIFilterOperationTargetVisualsConfiguration::is_same_sheet_target_visual_configuration_Set() const{
    return m_same_sheet_target_visual_configuration_isSet;
}

bool OAIFilterOperationTargetVisualsConfiguration::is_same_sheet_target_visual_configuration_Valid() const{
    return m_same_sheet_target_visual_configuration_isValid;
}

bool OAIFilterOperationTargetVisualsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_same_sheet_target_visual_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilterOperationTargetVisualsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
