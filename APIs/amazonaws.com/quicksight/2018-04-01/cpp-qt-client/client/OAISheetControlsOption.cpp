/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheetControlsOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheetControlsOption::OAISheetControlsOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheetControlsOption::OAISheetControlsOption() {
    this->initializeModel();
}

OAISheetControlsOption::~OAISheetControlsOption() {}

void OAISheetControlsOption::initializeModel() {

    m_visibility_state_isSet = false;
    m_visibility_state_isValid = false;
}

void OAISheetControlsOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISheetControlsOption::fromJsonObject(QJsonObject json) {

    m_visibility_state_isValid = ::OpenAPI::fromJsonValue(m_visibility_state, json[QString("VisibilityState")]);
    m_visibility_state_isSet = !json[QString("VisibilityState")].isNull() && m_visibility_state_isValid;
}

QString OAISheetControlsOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISheetControlsOption::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility_state.isSet()) {
        obj.insert(QString("VisibilityState"), ::OpenAPI::toJsonValue(m_visibility_state));
    }
    return obj;
}

OAIDashboardUIState OAISheetControlsOption::getVisibilityState() const {
    return m_visibility_state;
}
void OAISheetControlsOption::setVisibilityState(const OAIDashboardUIState &visibility_state) {
    m_visibility_state = visibility_state;
    m_visibility_state_isSet = true;
}

bool OAISheetControlsOption::is_visibility_state_Set() const{
    return m_visibility_state_isSet;
}

bool OAISheetControlsOption::is_visibility_state_Valid() const{
    return m_visibility_state_isValid;
}

bool OAISheetControlsOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISheetControlsOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
