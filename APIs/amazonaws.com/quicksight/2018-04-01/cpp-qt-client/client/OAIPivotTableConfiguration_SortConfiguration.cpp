/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPivotTableConfiguration_SortConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPivotTableConfiguration_SortConfiguration::OAIPivotTableConfiguration_SortConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPivotTableConfiguration_SortConfiguration::OAIPivotTableConfiguration_SortConfiguration() {
    this->initializeModel();
}

OAIPivotTableConfiguration_SortConfiguration::~OAIPivotTableConfiguration_SortConfiguration() {}

void OAIPivotTableConfiguration_SortConfiguration::initializeModel() {

    m_field_sort_options_isSet = false;
    m_field_sort_options_isValid = false;
}

void OAIPivotTableConfiguration_SortConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPivotTableConfiguration_SortConfiguration::fromJsonObject(QJsonObject json) {

    m_field_sort_options_isValid = ::OpenAPI::fromJsonValue(m_field_sort_options, json[QString("FieldSortOptions")]);
    m_field_sort_options_isSet = !json[QString("FieldSortOptions")].isNull() && m_field_sort_options_isValid;
}

QString OAIPivotTableConfiguration_SortConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPivotTableConfiguration_SortConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_field_sort_options.isSet()) {
        obj.insert(QString("FieldSortOptions"), ::OpenAPI::toJsonValue(m_field_sort_options));
    }
    return obj;
}

QList OAIPivotTableConfiguration_SortConfiguration::getFieldSortOptions() const {
    return m_field_sort_options;
}
void OAIPivotTableConfiguration_SortConfiguration::setFieldSortOptions(const QList &field_sort_options) {
    m_field_sort_options = field_sort_options;
    m_field_sort_options_isSet = true;
}

bool OAIPivotTableConfiguration_SortConfiguration::is_field_sort_options_Set() const{
    return m_field_sort_options_isSet;
}

bool OAIPivotTableConfiguration_SortConfiguration::is_field_sort_options_Valid() const{
    return m_field_sort_options_isValid;
}

bool OAIPivotTableConfiguration_SortConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_sort_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPivotTableConfiguration_SortConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
