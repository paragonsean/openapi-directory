/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDefaultNewSheetConfiguration.h
 *
 * The configuration for default new sheet settings.
 */

#ifndef OAIDefaultNewSheetConfiguration_H
#define OAIDefaultNewSheetConfiguration_H

#include <QJsonObject>

#include "OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration.h"
#include "OAIDefaultNewSheetConfiguration_PaginatedLayoutConfiguration.h"
#include "OAISheetContentType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration;
class OAIDefaultNewSheetConfiguration_PaginatedLayoutConfiguration;

class OAIDefaultNewSheetConfiguration : public OAIObject {
public:
    OAIDefaultNewSheetConfiguration();
    OAIDefaultNewSheetConfiguration(QString json);
    ~OAIDefaultNewSheetConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration getInteractiveLayoutConfiguration() const;
    void setInteractiveLayoutConfiguration(const OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration &interactive_layout_configuration);
    bool is_interactive_layout_configuration_Set() const;
    bool is_interactive_layout_configuration_Valid() const;

    OAIDefaultNewSheetConfiguration_PaginatedLayoutConfiguration getPaginatedLayoutConfiguration() const;
    void setPaginatedLayoutConfiguration(const OAIDefaultNewSheetConfiguration_PaginatedLayoutConfiguration &paginated_layout_configuration);
    bool is_paginated_layout_configuration_Set() const;
    bool is_paginated_layout_configuration_Valid() const;

    OAISheetContentType getSheetContentType() const;
    void setSheetContentType(const OAISheetContentType &sheet_content_type);
    bool is_sheet_content_type_Set() const;
    bool is_sheet_content_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDefaultNewSheetConfiguration_InteractiveLayoutConfiguration m_interactive_layout_configuration;
    bool m_interactive_layout_configuration_isSet;
    bool m_interactive_layout_configuration_isValid;

    OAIDefaultNewSheetConfiguration_PaginatedLayoutConfiguration m_paginated_layout_configuration;
    bool m_paginated_layout_configuration_isSet;
    bool m_paginated_layout_configuration_isValid;

    OAISheetContentType m_sheet_content_type;
    bool m_sheet_content_type_isSet;
    bool m_sheet_content_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDefaultNewSheetConfiguration)

#endif // OAIDefaultNewSheetConfiguration_H
