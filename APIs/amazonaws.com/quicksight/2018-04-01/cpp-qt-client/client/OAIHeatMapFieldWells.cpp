/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHeatMapFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHeatMapFieldWells::OAIHeatMapFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHeatMapFieldWells::OAIHeatMapFieldWells() {
    this->initializeModel();
}

OAIHeatMapFieldWells::~OAIHeatMapFieldWells() {}

void OAIHeatMapFieldWells::initializeModel() {

    m_heat_map_aggregated_field_wells_isSet = false;
    m_heat_map_aggregated_field_wells_isValid = false;
}

void OAIHeatMapFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHeatMapFieldWells::fromJsonObject(QJsonObject json) {

    m_heat_map_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_heat_map_aggregated_field_wells, json[QString("HeatMapAggregatedFieldWells")]);
    m_heat_map_aggregated_field_wells_isSet = !json[QString("HeatMapAggregatedFieldWells")].isNull() && m_heat_map_aggregated_field_wells_isValid;
}

QString OAIHeatMapFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHeatMapFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_heat_map_aggregated_field_wells.isSet()) {
        obj.insert(QString("HeatMapAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_heat_map_aggregated_field_wells));
    }
    return obj;
}

OAIHeatMapFieldWells_HeatMapAggregatedFieldWells OAIHeatMapFieldWells::getHeatMapAggregatedFieldWells() const {
    return m_heat_map_aggregated_field_wells;
}
void OAIHeatMapFieldWells::setHeatMapAggregatedFieldWells(const OAIHeatMapFieldWells_HeatMapAggregatedFieldWells &heat_map_aggregated_field_wells) {
    m_heat_map_aggregated_field_wells = heat_map_aggregated_field_wells;
    m_heat_map_aggregated_field_wells_isSet = true;
}

bool OAIHeatMapFieldWells::is_heat_map_aggregated_field_wells_Set() const{
    return m_heat_map_aggregated_field_wells_isSet;
}

bool OAIHeatMapFieldWells::is_heat_map_aggregated_field_wells_Valid() const{
    return m_heat_map_aggregated_field_wells_isValid;
}

bool OAIHeatMapFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_heat_map_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHeatMapFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
