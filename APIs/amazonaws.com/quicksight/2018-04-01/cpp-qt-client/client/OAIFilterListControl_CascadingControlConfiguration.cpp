/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterListControl_CascadingControlConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterListControl_CascadingControlConfiguration::OAIFilterListControl_CascadingControlConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterListControl_CascadingControlConfiguration::OAIFilterListControl_CascadingControlConfiguration() {
    this->initializeModel();
}

OAIFilterListControl_CascadingControlConfiguration::~OAIFilterListControl_CascadingControlConfiguration() {}

void OAIFilterListControl_CascadingControlConfiguration::initializeModel() {

    m_source_controls_isSet = false;
    m_source_controls_isValid = false;
}

void OAIFilterListControl_CascadingControlConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilterListControl_CascadingControlConfiguration::fromJsonObject(QJsonObject json) {

    m_source_controls_isValid = ::OpenAPI::fromJsonValue(m_source_controls, json[QString("SourceControls")]);
    m_source_controls_isSet = !json[QString("SourceControls")].isNull() && m_source_controls_isValid;
}

QString OAIFilterListControl_CascadingControlConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilterListControl_CascadingControlConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_source_controls.isSet()) {
        obj.insert(QString("SourceControls"), ::OpenAPI::toJsonValue(m_source_controls));
    }
    return obj;
}

QList OAIFilterListControl_CascadingControlConfiguration::getSourceControls() const {
    return m_source_controls;
}
void OAIFilterListControl_CascadingControlConfiguration::setSourceControls(const QList &source_controls) {
    m_source_controls = source_controls;
    m_source_controls_isSet = true;
}

bool OAIFilterListControl_CascadingControlConfiguration::is_source_controls_Set() const{
    return m_source_controls_isSet;
}

bool OAIFilterListControl_CascadingControlConfiguration::is_source_controls_Valid() const{
    return m_source_controls_isValid;
}

bool OAIFilterListControl_CascadingControlConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_controls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilterListControl_CascadingControlConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
