/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDonutOptions_DonutCenterOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDonutOptions_DonutCenterOptions::OAIDonutOptions_DonutCenterOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDonutOptions_DonutCenterOptions::OAIDonutOptions_DonutCenterOptions() {
    this->initializeModel();
}

OAIDonutOptions_DonutCenterOptions::~OAIDonutOptions_DonutCenterOptions() {}

void OAIDonutOptions_DonutCenterOptions::initializeModel() {

    m_label_visibility_isSet = false;
    m_label_visibility_isValid = false;
}

void OAIDonutOptions_DonutCenterOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDonutOptions_DonutCenterOptions::fromJsonObject(QJsonObject json) {

    m_label_visibility_isValid = ::OpenAPI::fromJsonValue(m_label_visibility, json[QString("LabelVisibility")]);
    m_label_visibility_isSet = !json[QString("LabelVisibility")].isNull() && m_label_visibility_isValid;
}

QString OAIDonutOptions_DonutCenterOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDonutOptions_DonutCenterOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_label_visibility.isSet()) {
        obj.insert(QString("LabelVisibility"), ::OpenAPI::toJsonValue(m_label_visibility));
    }
    return obj;
}

OAIVisibility OAIDonutOptions_DonutCenterOptions::getLabelVisibility() const {
    return m_label_visibility;
}
void OAIDonutOptions_DonutCenterOptions::setLabelVisibility(const OAIVisibility &label_visibility) {
    m_label_visibility = label_visibility;
    m_label_visibility_isSet = true;
}

bool OAIDonutOptions_DonutCenterOptions::is_label_visibility_Set() const{
    return m_label_visibility_isSet;
}

bool OAIDonutOptions_DonutCenterOptions::is_label_visibility_Valid() const{
    return m_label_visibility_isValid;
}

bool OAIDonutOptions_DonutCenterOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDonutOptions_DonutCenterOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
