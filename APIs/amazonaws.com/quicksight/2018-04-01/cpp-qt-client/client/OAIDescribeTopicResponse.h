/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTopicResponse.h
 *
 * 
 */

#ifndef OAIDescribeTopicResponse_H
#define OAIDescribeTopicResponse_H

#include <QJsonObject>

#include "OAIDescribeTopicResponse_Topic.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeTopicResponse_Topic;

class OAIDescribeTopicResponse : public OAIObject {
public:
    OAIDescribeTopicResponse();
    OAIDescribeTopicResponse(QString json);
    ~OAIDescribeTopicResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getTopicId() const;
    void setTopicId(const QString &topic_id);
    bool is_topic_id_Set() const;
    bool is_topic_id_Valid() const;

    OAIDescribeTopicResponse_Topic getTopic() const;
    void setTopic(const OAIDescribeTopicResponse_Topic &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_topic_id;
    bool m_topic_id_isSet;
    bool m_topic_id_isValid;

    OAIDescribeTopicResponse_Topic m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTopicResponse)

#endif // OAIDescribeTopicResponse_H
