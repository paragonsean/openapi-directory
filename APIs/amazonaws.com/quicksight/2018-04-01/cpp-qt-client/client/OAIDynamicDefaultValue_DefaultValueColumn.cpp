/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDynamicDefaultValue_DefaultValueColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDynamicDefaultValue_DefaultValueColumn::OAIDynamicDefaultValue_DefaultValueColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDynamicDefaultValue_DefaultValueColumn::OAIDynamicDefaultValue_DefaultValueColumn() {
    this->initializeModel();
}

OAIDynamicDefaultValue_DefaultValueColumn::~OAIDynamicDefaultValue_DefaultValueColumn() {}

void OAIDynamicDefaultValue_DefaultValueColumn::initializeModel() {

    m_data_set_identifier_isSet = false;
    m_data_set_identifier_isValid = false;

    m_column_name_isSet = false;
    m_column_name_isValid = false;
}

void OAIDynamicDefaultValue_DefaultValueColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDynamicDefaultValue_DefaultValueColumn::fromJsonObject(QJsonObject json) {

    m_data_set_identifier_isValid = ::OpenAPI::fromJsonValue(m_data_set_identifier, json[QString("DataSetIdentifier")]);
    m_data_set_identifier_isSet = !json[QString("DataSetIdentifier")].isNull() && m_data_set_identifier_isValid;

    m_column_name_isValid = ::OpenAPI::fromJsonValue(m_column_name, json[QString("ColumnName")]);
    m_column_name_isSet = !json[QString("ColumnName")].isNull() && m_column_name_isValid;
}

QString OAIDynamicDefaultValue_DefaultValueColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDynamicDefaultValue_DefaultValueColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_data_set_identifier_isSet) {
        obj.insert(QString("DataSetIdentifier"), ::OpenAPI::toJsonValue(m_data_set_identifier));
    }
    if (m_column_name_isSet) {
        obj.insert(QString("ColumnName"), ::OpenAPI::toJsonValue(m_column_name));
    }
    return obj;
}

QString OAIDynamicDefaultValue_DefaultValueColumn::getDataSetIdentifier() const {
    return m_data_set_identifier;
}
void OAIDynamicDefaultValue_DefaultValueColumn::setDataSetIdentifier(const QString &data_set_identifier) {
    m_data_set_identifier = data_set_identifier;
    m_data_set_identifier_isSet = true;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::is_data_set_identifier_Set() const{
    return m_data_set_identifier_isSet;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::is_data_set_identifier_Valid() const{
    return m_data_set_identifier_isValid;
}

QString OAIDynamicDefaultValue_DefaultValueColumn::getColumnName() const {
    return m_column_name;
}
void OAIDynamicDefaultValue_DefaultValueColumn::setColumnName(const QString &column_name) {
    m_column_name = column_name;
    m_column_name_isSet = true;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::is_column_name_Set() const{
    return m_column_name_isSet;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::is_column_name_Valid() const{
    return m_column_name_isValid;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_set_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDynamicDefaultValue_DefaultValueColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_set_identifier_isValid && m_column_name_isValid && true;
}

} // namespace OpenAPI
