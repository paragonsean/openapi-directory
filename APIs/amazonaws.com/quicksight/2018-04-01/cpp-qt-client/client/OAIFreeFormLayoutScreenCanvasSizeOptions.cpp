/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeFormLayoutScreenCanvasSizeOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeFormLayoutScreenCanvasSizeOptions::OAIFreeFormLayoutScreenCanvasSizeOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeFormLayoutScreenCanvasSizeOptions::OAIFreeFormLayoutScreenCanvasSizeOptions() {
    this->initializeModel();
}

OAIFreeFormLayoutScreenCanvasSizeOptions::~OAIFreeFormLayoutScreenCanvasSizeOptions() {}

void OAIFreeFormLayoutScreenCanvasSizeOptions::initializeModel() {

    m_optimized_view_port_width_isSet = false;
    m_optimized_view_port_width_isValid = false;
}

void OAIFreeFormLayoutScreenCanvasSizeOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeFormLayoutScreenCanvasSizeOptions::fromJsonObject(QJsonObject json) {

    m_optimized_view_port_width_isValid = ::OpenAPI::fromJsonValue(m_optimized_view_port_width, json[QString("OptimizedViewPortWidth")]);
    m_optimized_view_port_width_isSet = !json[QString("OptimizedViewPortWidth")].isNull() && m_optimized_view_port_width_isValid;
}

QString OAIFreeFormLayoutScreenCanvasSizeOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeFormLayoutScreenCanvasSizeOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_optimized_view_port_width_isSet) {
        obj.insert(QString("OptimizedViewPortWidth"), ::OpenAPI::toJsonValue(m_optimized_view_port_width));
    }
    return obj;
}

QString OAIFreeFormLayoutScreenCanvasSizeOptions::getOptimizedViewPortWidth() const {
    return m_optimized_view_port_width;
}
void OAIFreeFormLayoutScreenCanvasSizeOptions::setOptimizedViewPortWidth(const QString &optimized_view_port_width) {
    m_optimized_view_port_width = optimized_view_port_width;
    m_optimized_view_port_width_isSet = true;
}

bool OAIFreeFormLayoutScreenCanvasSizeOptions::is_optimized_view_port_width_Set() const{
    return m_optimized_view_port_width_isSet;
}

bool OAIFreeFormLayoutScreenCanvasSizeOptions::is_optimized_view_port_width_Valid() const{
    return m_optimized_view_port_width_isValid;
}

bool OAIFreeFormLayoutScreenCanvasSizeOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_optimized_view_port_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeFormLayoutScreenCanvasSizeOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_optimized_view_port_width_isValid && true;
}

} // namespace OpenAPI
