/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomActionNavigationOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomActionNavigationOperation::OAICustomActionNavigationOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomActionNavigationOperation::OAICustomActionNavigationOperation() {
    this->initializeModel();
}

OAICustomActionNavigationOperation::~OAICustomActionNavigationOperation() {}

void OAICustomActionNavigationOperation::initializeModel() {

    m_local_navigation_configuration_isSet = false;
    m_local_navigation_configuration_isValid = false;
}

void OAICustomActionNavigationOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomActionNavigationOperation::fromJsonObject(QJsonObject json) {

    m_local_navigation_configuration_isValid = ::OpenAPI::fromJsonValue(m_local_navigation_configuration, json[QString("LocalNavigationConfiguration")]);
    m_local_navigation_configuration_isSet = !json[QString("LocalNavigationConfiguration")].isNull() && m_local_navigation_configuration_isValid;
}

QString OAICustomActionNavigationOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomActionNavigationOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_local_navigation_configuration.isSet()) {
        obj.insert(QString("LocalNavigationConfiguration"), ::OpenAPI::toJsonValue(m_local_navigation_configuration));
    }
    return obj;
}

OAICustomActionNavigationOperation_LocalNavigationConfiguration OAICustomActionNavigationOperation::getLocalNavigationConfiguration() const {
    return m_local_navigation_configuration;
}
void OAICustomActionNavigationOperation::setLocalNavigationConfiguration(const OAICustomActionNavigationOperation_LocalNavigationConfiguration &local_navigation_configuration) {
    m_local_navigation_configuration = local_navigation_configuration;
    m_local_navigation_configuration_isSet = true;
}

bool OAICustomActionNavigationOperation::is_local_navigation_configuration_Set() const{
    return m_local_navigation_configuration_isSet;
}

bool OAICustomActionNavigationOperation::is_local_navigation_configuration_Valid() const{
    return m_local_navigation_configuration_isValid;
}

bool OAICustomActionNavigationOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_local_navigation_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomActionNavigationOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
