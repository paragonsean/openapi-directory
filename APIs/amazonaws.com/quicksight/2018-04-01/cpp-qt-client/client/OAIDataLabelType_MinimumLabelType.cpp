/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataLabelType_MinimumLabelType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataLabelType_MinimumLabelType::OAIDataLabelType_MinimumLabelType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataLabelType_MinimumLabelType::OAIDataLabelType_MinimumLabelType() {
    this->initializeModel();
}

OAIDataLabelType_MinimumLabelType::~OAIDataLabelType_MinimumLabelType() {}

void OAIDataLabelType_MinimumLabelType::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;
}

void OAIDataLabelType_MinimumLabelType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataLabelType_MinimumLabelType::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;
}

QString OAIDataLabelType_MinimumLabelType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataLabelType_MinimumLabelType::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    return obj;
}

OAIVisibility OAIDataLabelType_MinimumLabelType::getVisibility() const {
    return m_visibility;
}
void OAIDataLabelType_MinimumLabelType::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIDataLabelType_MinimumLabelType::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIDataLabelType_MinimumLabelType::is_visibility_Valid() const{
    return m_visibility_isValid;
}

bool OAIDataLabelType_MinimumLabelType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataLabelType_MinimumLabelType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
