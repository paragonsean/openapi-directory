/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineChartType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineChartType::OAILineChartType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineChartType::OAILineChartType() {
    this->initializeModel();
}

OAILineChartType::~OAILineChartType() {}

void OAILineChartType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILineChartType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILineChartType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LINE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartType::LINE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AREA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartType::AREA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STACKED_AREA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartType::STACKED_AREA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILineChartType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILineChartType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILineChartType::LINE:
            val = "LINE";
            break;
        case eOAILineChartType::AREA:
            val = "AREA";
            break;
        case eOAILineChartType::STACKED_AREA:
            val = "STACKED_AREA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILineChartType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILineChartType::eOAILineChartType OAILineChartType::getValue() const {
    return m_value;
}

void OAILineChartType::setValue(const OAILineChartType::eOAILineChartType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILineChartType::isSet() const {
    
    return m_value_isSet;
}

bool OAILineChartType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
