/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataLabelType.h
 *
 * &lt;p&gt;The option that determines the data label type.&lt;/p&gt; &lt;p&gt;This is a union type structure. For this structure to be valid, only one of the attributes can be defined.&lt;/p&gt;
 */

#ifndef OAIDataLabelType_H
#define OAIDataLabelType_H

#include <QJsonObject>

#include "OAIDataLabelType_DataPathLabelType.h"
#include "OAIDataLabelType_FieldLabelType.h"
#include "OAIDataLabelType_MaximumLabelType.h"
#include "OAIDataLabelType_MinimumLabelType.h"
#include "OAIDataLabelType_RangeEndsLabelType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataLabelType_FieldLabelType;
class OAIDataLabelType_DataPathLabelType;
class OAIDataLabelType_RangeEndsLabelType;
class OAIDataLabelType_MinimumLabelType;
class OAIDataLabelType_MaximumLabelType;

class OAIDataLabelType : public OAIObject {
public:
    OAIDataLabelType();
    OAIDataLabelType(QString json);
    ~OAIDataLabelType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataLabelType_FieldLabelType getFieldLabelType() const;
    void setFieldLabelType(const OAIDataLabelType_FieldLabelType &field_label_type);
    bool is_field_label_type_Set() const;
    bool is_field_label_type_Valid() const;

    OAIDataLabelType_DataPathLabelType getDataPathLabelType() const;
    void setDataPathLabelType(const OAIDataLabelType_DataPathLabelType &data_path_label_type);
    bool is_data_path_label_type_Set() const;
    bool is_data_path_label_type_Valid() const;

    OAIDataLabelType_RangeEndsLabelType getRangeEndsLabelType() const;
    void setRangeEndsLabelType(const OAIDataLabelType_RangeEndsLabelType &range_ends_label_type);
    bool is_range_ends_label_type_Set() const;
    bool is_range_ends_label_type_Valid() const;

    OAIDataLabelType_MinimumLabelType getMinimumLabelType() const;
    void setMinimumLabelType(const OAIDataLabelType_MinimumLabelType &minimum_label_type);
    bool is_minimum_label_type_Set() const;
    bool is_minimum_label_type_Valid() const;

    OAIDataLabelType_MaximumLabelType getMaximumLabelType() const;
    void setMaximumLabelType(const OAIDataLabelType_MaximumLabelType &maximum_label_type);
    bool is_maximum_label_type_Set() const;
    bool is_maximum_label_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataLabelType_FieldLabelType m_field_label_type;
    bool m_field_label_type_isSet;
    bool m_field_label_type_isValid;

    OAIDataLabelType_DataPathLabelType m_data_path_label_type;
    bool m_data_path_label_type_isSet;
    bool m_data_path_label_type_isValid;

    OAIDataLabelType_RangeEndsLabelType m_range_ends_label_type;
    bool m_range_ends_label_type_isSet;
    bool m_range_ends_label_type_isValid;

    OAIDataLabelType_MinimumLabelType m_minimum_label_type;
    bool m_minimum_label_type_isSet;
    bool m_minimum_label_type_isValid;

    OAIDataLabelType_MaximumLabelType m_maximum_label_type;
    bool m_maximum_label_type_isSet;
    bool m_maximum_label_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataLabelType)

#endif // OAIDataLabelType_H
