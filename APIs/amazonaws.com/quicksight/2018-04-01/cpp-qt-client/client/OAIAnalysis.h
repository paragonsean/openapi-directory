/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysis.h
 *
 * Metadata structure for an analysis in Amazon QuickSight
 */

#ifndef OAIAnalysis_H
#define OAIAnalysis_H

#include <QJsonObject>

#include "OAIResourceStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalysis : public OAIObject {
public:
    OAIAnalysis();
    OAIAnalysis(QString json);
    ~OAIAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisId() const;
    void setAnalysisId(const QString &analysis_id);
    bool is_analysis_id_Set() const;
    bool is_analysis_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getErrors() const;
    void setErrors(const QList &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList getDataSetArns() const;
    void setDataSetArns(const QList &data_set_arns);
    bool is_data_set_arns_Set() const;
    bool is_data_set_arns_Valid() const;

    QString getThemeArn() const;
    void setThemeArn(const QString &theme_arn);
    bool is_theme_arn_Set() const;
    bool is_theme_arn_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QList getSheets() const;
    void setSheets(const QList &sheets);
    bool is_sheets_Set() const;
    bool is_sheets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_id;
    bool m_analysis_id_isSet;
    bool m_analysis_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList m_data_set_arns;
    bool m_data_set_arns_isSet;
    bool m_data_set_arns_isValid;

    QString m_theme_arn;
    bool m_theme_arn_isSet;
    bool m_theme_arn_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QList m_sheets;
    bool m_sheets_isSet;
    bool m_sheets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysis)

#endif // OAIAnalysis_H
