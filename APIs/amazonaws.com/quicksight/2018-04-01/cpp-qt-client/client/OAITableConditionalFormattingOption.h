/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableConditionalFormattingOption.h
 *
 * Conditional formatting options for a &lt;code&gt;PivotTableVisual&lt;/code&gt;.
 */

#ifndef OAITableConditionalFormattingOption_H
#define OAITableConditionalFormattingOption_H

#include <QJsonObject>

#include "OAITableConditionalFormattingOption_Cell.h"
#include "OAITableConditionalFormattingOption_Row.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableConditionalFormattingOption_Cell;
class OAITableConditionalFormattingOption_Row;

class OAITableConditionalFormattingOption : public OAIObject {
public:
    OAITableConditionalFormattingOption();
    OAITableConditionalFormattingOption(QString json);
    ~OAITableConditionalFormattingOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITableConditionalFormattingOption_Cell getCell() const;
    void setCell(const OAITableConditionalFormattingOption_Cell &cell);
    bool is_cell_Set() const;
    bool is_cell_Valid() const;

    OAITableConditionalFormattingOption_Row getRow() const;
    void setRow(const OAITableConditionalFormattingOption_Row &row);
    bool is_row_Set() const;
    bool is_row_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITableConditionalFormattingOption_Cell m_cell;
    bool m_cell_isSet;
    bool m_cell_isValid;

    OAITableConditionalFormattingOption_Row m_row;
    bool m_row_isSet;
    bool m_row_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableConditionalFormattingOption)

#endif // OAITableConditionalFormattingOption_H
