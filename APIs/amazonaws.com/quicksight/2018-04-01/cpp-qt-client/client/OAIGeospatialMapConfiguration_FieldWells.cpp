/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeospatialMapConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeospatialMapConfiguration_FieldWells::OAIGeospatialMapConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeospatialMapConfiguration_FieldWells::OAIGeospatialMapConfiguration_FieldWells() {
    this->initializeModel();
}

OAIGeospatialMapConfiguration_FieldWells::~OAIGeospatialMapConfiguration_FieldWells() {}

void OAIGeospatialMapConfiguration_FieldWells::initializeModel() {

    m_geospatial_map_aggregated_field_wells_isSet = false;
    m_geospatial_map_aggregated_field_wells_isValid = false;
}

void OAIGeospatialMapConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeospatialMapConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_geospatial_map_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_geospatial_map_aggregated_field_wells, json[QString("GeospatialMapAggregatedFieldWells")]);
    m_geospatial_map_aggregated_field_wells_isSet = !json[QString("GeospatialMapAggregatedFieldWells")].isNull() && m_geospatial_map_aggregated_field_wells_isValid;
}

QString OAIGeospatialMapConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeospatialMapConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_geospatial_map_aggregated_field_wells.isSet()) {
        obj.insert(QString("GeospatialMapAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_geospatial_map_aggregated_field_wells));
    }
    return obj;
}

OAIGeospatialMapFieldWells_GeospatialMapAggregatedFieldWells OAIGeospatialMapConfiguration_FieldWells::getGeospatialMapAggregatedFieldWells() const {
    return m_geospatial_map_aggregated_field_wells;
}
void OAIGeospatialMapConfiguration_FieldWells::setGeospatialMapAggregatedFieldWells(const OAIGeospatialMapFieldWells_GeospatialMapAggregatedFieldWells &geospatial_map_aggregated_field_wells) {
    m_geospatial_map_aggregated_field_wells = geospatial_map_aggregated_field_wells;
    m_geospatial_map_aggregated_field_wells_isSet = true;
}

bool OAIGeospatialMapConfiguration_FieldWells::is_geospatial_map_aggregated_field_wells_Set() const{
    return m_geospatial_map_aggregated_field_wells_isSet;
}

bool OAIGeospatialMapConfiguration_FieldWells::is_geospatial_map_aggregated_field_wells_Valid() const{
    return m_geospatial_map_aggregated_field_wells_isValid;
}

bool OAIGeospatialMapConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_geospatial_map_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeospatialMapConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
