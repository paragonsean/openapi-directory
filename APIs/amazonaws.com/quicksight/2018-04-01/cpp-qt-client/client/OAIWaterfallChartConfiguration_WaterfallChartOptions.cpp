/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWaterfallChartConfiguration_WaterfallChartOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWaterfallChartConfiguration_WaterfallChartOptions::OAIWaterfallChartConfiguration_WaterfallChartOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWaterfallChartConfiguration_WaterfallChartOptions::OAIWaterfallChartConfiguration_WaterfallChartOptions() {
    this->initializeModel();
}

OAIWaterfallChartConfiguration_WaterfallChartOptions::~OAIWaterfallChartConfiguration_WaterfallChartOptions() {}

void OAIWaterfallChartConfiguration_WaterfallChartOptions::initializeModel() {

    m_total_bar_label_isSet = false;
    m_total_bar_label_isValid = false;
}

void OAIWaterfallChartConfiguration_WaterfallChartOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWaterfallChartConfiguration_WaterfallChartOptions::fromJsonObject(QJsonObject json) {

    m_total_bar_label_isValid = ::OpenAPI::fromJsonValue(m_total_bar_label, json[QString("TotalBarLabel")]);
    m_total_bar_label_isSet = !json[QString("TotalBarLabel")].isNull() && m_total_bar_label_isValid;
}

QString OAIWaterfallChartConfiguration_WaterfallChartOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWaterfallChartConfiguration_WaterfallChartOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_total_bar_label_isSet) {
        obj.insert(QString("TotalBarLabel"), ::OpenAPI::toJsonValue(m_total_bar_label));
    }
    return obj;
}

QString OAIWaterfallChartConfiguration_WaterfallChartOptions::getTotalBarLabel() const {
    return m_total_bar_label;
}
void OAIWaterfallChartConfiguration_WaterfallChartOptions::setTotalBarLabel(const QString &total_bar_label) {
    m_total_bar_label = total_bar_label;
    m_total_bar_label_isSet = true;
}

bool OAIWaterfallChartConfiguration_WaterfallChartOptions::is_total_bar_label_Set() const{
    return m_total_bar_label_isSet;
}

bool OAIWaterfallChartConfiguration_WaterfallChartOptions::is_total_bar_label_Valid() const{
    return m_total_bar_label_isValid;
}

bool OAIWaterfallChartConfiguration_WaterfallChartOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_total_bar_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWaterfallChartConfiguration_WaterfallChartOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
