/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPivotTableConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPivotTableConfiguration_FieldWells::OAIPivotTableConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPivotTableConfiguration_FieldWells::OAIPivotTableConfiguration_FieldWells() {
    this->initializeModel();
}

OAIPivotTableConfiguration_FieldWells::~OAIPivotTableConfiguration_FieldWells() {}

void OAIPivotTableConfiguration_FieldWells::initializeModel() {

    m_pivot_table_aggregated_field_wells_isSet = false;
    m_pivot_table_aggregated_field_wells_isValid = false;
}

void OAIPivotTableConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPivotTableConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_pivot_table_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_pivot_table_aggregated_field_wells, json[QString("PivotTableAggregatedFieldWells")]);
    m_pivot_table_aggregated_field_wells_isSet = !json[QString("PivotTableAggregatedFieldWells")].isNull() && m_pivot_table_aggregated_field_wells_isValid;
}

QString OAIPivotTableConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPivotTableConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_pivot_table_aggregated_field_wells.isSet()) {
        obj.insert(QString("PivotTableAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_pivot_table_aggregated_field_wells));
    }
    return obj;
}

OAIPivotTableFieldWells_PivotTableAggregatedFieldWells OAIPivotTableConfiguration_FieldWells::getPivotTableAggregatedFieldWells() const {
    return m_pivot_table_aggregated_field_wells;
}
void OAIPivotTableConfiguration_FieldWells::setPivotTableAggregatedFieldWells(const OAIPivotTableFieldWells_PivotTableAggregatedFieldWells &pivot_table_aggregated_field_wells) {
    m_pivot_table_aggregated_field_wells = pivot_table_aggregated_field_wells;
    m_pivot_table_aggregated_field_wells_isSet = true;
}

bool OAIPivotTableConfiguration_FieldWells::is_pivot_table_aggregated_field_wells_Set() const{
    return m_pivot_table_aggregated_field_wells_isSet;
}

bool OAIPivotTableConfiguration_FieldWells::is_pivot_table_aggregated_field_wells_Valid() const{
    return m_pivot_table_aggregated_field_wells_isValid;
}

bool OAIPivotTableConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pivot_table_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPivotTableConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
