/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumericAxisOptions_Scale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumericAxisOptions_Scale::OAINumericAxisOptions_Scale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumericAxisOptions_Scale::OAINumericAxisOptions_Scale() {
    this->initializeModel();
}

OAINumericAxisOptions_Scale::~OAINumericAxisOptions_Scale() {}

void OAINumericAxisOptions_Scale::initializeModel() {

    m_linear_isSet = false;
    m_linear_isValid = false;

    m_logarithmic_isSet = false;
    m_logarithmic_isValid = false;
}

void OAINumericAxisOptions_Scale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumericAxisOptions_Scale::fromJsonObject(QJsonObject json) {

    m_linear_isValid = ::OpenAPI::fromJsonValue(m_linear, json[QString("Linear")]);
    m_linear_isSet = !json[QString("Linear")].isNull() && m_linear_isValid;

    m_logarithmic_isValid = ::OpenAPI::fromJsonValue(m_logarithmic, json[QString("Logarithmic")]);
    m_logarithmic_isSet = !json[QString("Logarithmic")].isNull() && m_logarithmic_isValid;
}

QString OAINumericAxisOptions_Scale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumericAxisOptions_Scale::asJsonObject() const {
    QJsonObject obj;
    if (m_linear.isSet()) {
        obj.insert(QString("Linear"), ::OpenAPI::toJsonValue(m_linear));
    }
    if (m_logarithmic.isSet()) {
        obj.insert(QString("Logarithmic"), ::OpenAPI::toJsonValue(m_logarithmic));
    }
    return obj;
}

OAIAxisScale_Linear OAINumericAxisOptions_Scale::getLinear() const {
    return m_linear;
}
void OAINumericAxisOptions_Scale::setLinear(const OAIAxisScale_Linear &linear) {
    m_linear = linear;
    m_linear_isSet = true;
}

bool OAINumericAxisOptions_Scale::is_linear_Set() const{
    return m_linear_isSet;
}

bool OAINumericAxisOptions_Scale::is_linear_Valid() const{
    return m_linear_isValid;
}

OAIAxisScale_Logarithmic OAINumericAxisOptions_Scale::getLogarithmic() const {
    return m_logarithmic;
}
void OAINumericAxisOptions_Scale::setLogarithmic(const OAIAxisScale_Logarithmic &logarithmic) {
    m_logarithmic = logarithmic;
    m_logarithmic_isSet = true;
}

bool OAINumericAxisOptions_Scale::is_logarithmic_Set() const{
    return m_logarithmic_isSet;
}

bool OAINumericAxisOptions_Scale::is_logarithmic_Valid() const{
    return m_logarithmic_isValid;
}

bool OAINumericAxisOptions_Scale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_linear.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logarithmic.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumericAxisOptions_Scale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
