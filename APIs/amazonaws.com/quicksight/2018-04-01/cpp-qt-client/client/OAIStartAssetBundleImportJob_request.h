/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartAssetBundleImportJob_request.h
 *
 * 
 */

#ifndef OAIStartAssetBundleImportJob_request_H
#define OAIStartAssetBundleImportJob_request_H

#include <QJsonObject>

#include "OAIStartAssetBundleImportJob_request_AssetBundleImportSource.h"
#include "OAIStartAssetBundleImportJob_request_OverrideParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartAssetBundleImportJob_request_AssetBundleImportSource;
class OAIStartAssetBundleImportJob_request_OverrideParameters;

class OAIStartAssetBundleImportJob_request : public OAIObject {
public:
    OAIStartAssetBundleImportJob_request();
    OAIStartAssetBundleImportJob_request(QString json);
    ~OAIStartAssetBundleImportJob_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetBundleImportJobId() const;
    void setAssetBundleImportJobId(const QString &asset_bundle_import_job_id);
    bool is_asset_bundle_import_job_id_Set() const;
    bool is_asset_bundle_import_job_id_Valid() const;

    OAIStartAssetBundleImportJob_request_AssetBundleImportSource getAssetBundleImportSource() const;
    void setAssetBundleImportSource(const OAIStartAssetBundleImportJob_request_AssetBundleImportSource &asset_bundle_import_source);
    bool is_asset_bundle_import_source_Set() const;
    bool is_asset_bundle_import_source_Valid() const;

    OAIStartAssetBundleImportJob_request_OverrideParameters getOverrideParameters() const;
    void setOverrideParameters(const OAIStartAssetBundleImportJob_request_OverrideParameters &override_parameters);
    bool is_override_parameters_Set() const;
    bool is_override_parameters_Valid() const;

    QString getFailureAction() const;
    void setFailureAction(const QString &failure_action);
    bool is_failure_action_Set() const;
    bool is_failure_action_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_bundle_import_job_id;
    bool m_asset_bundle_import_job_id_isSet;
    bool m_asset_bundle_import_job_id_isValid;

    OAIStartAssetBundleImportJob_request_AssetBundleImportSource m_asset_bundle_import_source;
    bool m_asset_bundle_import_source_isSet;
    bool m_asset_bundle_import_source_isValid;

    OAIStartAssetBundleImportJob_request_OverrideParameters m_override_parameters;
    bool m_override_parameters_isSet;
    bool m_override_parameters_isValid;

    QString m_failure_action;
    bool m_failure_action_isSet;
    bool m_failure_action_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartAssetBundleImportJob_request)

#endif // OAIStartAssetBundleImportJob_request_H
