/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmptyVisual.h
 *
 * &lt;p&gt;An empty visual.&lt;/p&gt; &lt;p&gt;Empty visuals are used in layouts but have not been configured to show any data. A new visual created in the Amazon QuickSight console is considered an &lt;code&gt;EmptyVisual&lt;/code&gt; until a visual type is selected.&lt;/p&gt;
 */

#ifndef OAIEmptyVisual_H
#define OAIEmptyVisual_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEmptyVisual : public OAIObject {
public:
    OAIEmptyVisual();
    OAIEmptyVisual(QString json);
    ~OAIEmptyVisual() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVisualId() const;
    void setVisualId(const QString &visual_id);
    bool is_visual_id_Set() const;
    bool is_visual_id_Valid() const;

    QString getDataSetIdentifier() const;
    void setDataSetIdentifier(const QString &data_set_identifier);
    bool is_data_set_identifier_Set() const;
    bool is_data_set_identifier_Valid() const;

    QList getActions() const;
    void setActions(const QList &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_visual_id;
    bool m_visual_id_isSet;
    bool m_visual_id_isValid;

    QString m_data_set_identifier;
    bool m_data_set_identifier_isSet;
    bool m_data_set_identifier_isValid;

    QList m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmptyVisual)

#endif // OAIEmptyVisual_H
