/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivotTablePaginatedReportOptions.h
 *
 * The paginated report options for a pivot table visual.
 */

#ifndef OAIPivotTablePaginatedReportOptions_H
#define OAIPivotTablePaginatedReportOptions_H

#include <QJsonObject>

#include "OAIVisibility.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPivotTablePaginatedReportOptions : public OAIObject {
public:
    OAIPivotTablePaginatedReportOptions();
    OAIPivotTablePaginatedReportOptions(QString json);
    ~OAIPivotTablePaginatedReportOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVisibility getVerticalOverflowVisibility() const;
    void setVerticalOverflowVisibility(const OAIVisibility &vertical_overflow_visibility);
    bool is_vertical_overflow_visibility_Set() const;
    bool is_vertical_overflow_visibility_Valid() const;

    OAIVisibility getOverflowColumnHeaderVisibility() const;
    void setOverflowColumnHeaderVisibility(const OAIVisibility &overflow_column_header_visibility);
    bool is_overflow_column_header_visibility_Set() const;
    bool is_overflow_column_header_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVisibility m_vertical_overflow_visibility;
    bool m_vertical_overflow_visibility_isSet;
    bool m_vertical_overflow_visibility_isValid;

    OAIVisibility m_overflow_column_header_visibility;
    bool m_overflow_column_header_visibility_isSet;
    bool m_overflow_column_header_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivotTablePaginatedReportOptions)

#endif // OAIPivotTablePaginatedReportOptions_H
