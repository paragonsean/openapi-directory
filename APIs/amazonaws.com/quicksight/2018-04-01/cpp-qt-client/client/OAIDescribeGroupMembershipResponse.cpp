/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeGroupMembershipResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeGroupMembershipResponse::OAIDescribeGroupMembershipResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeGroupMembershipResponse::OAIDescribeGroupMembershipResponse() {
    this->initializeModel();
}

OAIDescribeGroupMembershipResponse::~OAIDescribeGroupMembershipResponse() {}

void OAIDescribeGroupMembershipResponse::initializeModel() {

    m_group_member_isSet = false;
    m_group_member_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeGroupMembershipResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeGroupMembershipResponse::fromJsonObject(QJsonObject json) {

    m_group_member_isValid = ::OpenAPI::fromJsonValue(m_group_member, json[QString("GroupMember")]);
    m_group_member_isSet = !json[QString("GroupMember")].isNull() && m_group_member_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeGroupMembershipResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeGroupMembershipResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_group_member.isSet()) {
        obj.insert(QString("GroupMember"), ::OpenAPI::toJsonValue(m_group_member));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIGroupMember OAIDescribeGroupMembershipResponse::getGroupMember() const {
    return m_group_member;
}
void OAIDescribeGroupMembershipResponse::setGroupMember(const OAIGroupMember &group_member) {
    m_group_member = group_member;
    m_group_member_isSet = true;
}

bool OAIDescribeGroupMembershipResponse::is_group_member_Set() const{
    return m_group_member_isSet;
}

bool OAIDescribeGroupMembershipResponse::is_group_member_Valid() const{
    return m_group_member_isValid;
}

QString OAIDescribeGroupMembershipResponse::getRequestId() const {
    return m_request_id;
}
void OAIDescribeGroupMembershipResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDescribeGroupMembershipResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDescribeGroupMembershipResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDescribeGroupMembershipResponse::getStatus() const {
    return m_status;
}
void OAIDescribeGroupMembershipResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeGroupMembershipResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeGroupMembershipResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeGroupMembershipResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_member.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeGroupMembershipResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
