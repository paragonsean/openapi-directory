/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParameterListControl_SelectableValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParameterListControl_SelectableValues::OAIParameterListControl_SelectableValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParameterListControl_SelectableValues::OAIParameterListControl_SelectableValues() {
    this->initializeModel();
}

OAIParameterListControl_SelectableValues::~OAIParameterListControl_SelectableValues() {}

void OAIParameterListControl_SelectableValues::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;

    m_link_to_data_set_column_isSet = false;
    m_link_to_data_set_column_isValid = false;
}

void OAIParameterListControl_SelectableValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParameterListControl_SelectableValues::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;

    m_link_to_data_set_column_isValid = ::OpenAPI::fromJsonValue(m_link_to_data_set_column, json[QString("LinkToDataSetColumn")]);
    m_link_to_data_set_column_isSet = !json[QString("LinkToDataSetColumn")].isNull() && m_link_to_data_set_column_isValid;
}

QString OAIParameterListControl_SelectableValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParameterListControl_SelectableValues::asJsonObject() const {
    QJsonObject obj;
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    if (m_link_to_data_set_column.isSet()) {
        obj.insert(QString("LinkToDataSetColumn"), ::OpenAPI::toJsonValue(m_link_to_data_set_column));
    }
    return obj;
}

QList OAIParameterListControl_SelectableValues::getValues() const {
    return m_values;
}
void OAIParameterListControl_SelectableValues::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIParameterListControl_SelectableValues::is_values_Set() const{
    return m_values_isSet;
}

bool OAIParameterListControl_SelectableValues::is_values_Valid() const{
    return m_values_isValid;
}

OAIParameterSelectableValues_LinkToDataSetColumn OAIParameterListControl_SelectableValues::getLinkToDataSetColumn() const {
    return m_link_to_data_set_column;
}
void OAIParameterListControl_SelectableValues::setLinkToDataSetColumn(const OAIParameterSelectableValues_LinkToDataSetColumn &link_to_data_set_column) {
    m_link_to_data_set_column = link_to_data_set_column;
    m_link_to_data_set_column_isSet = true;
}

bool OAIParameterListControl_SelectableValues::is_link_to_data_set_column_Set() const{
    return m_link_to_data_set_column_isSet;
}

bool OAIParameterListControl_SelectableValues::is_link_to_data_set_column_Valid() const{
    return m_link_to_data_set_column_isValid;
}

bool OAIParameterListControl_SelectableValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_to_data_set_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParameterListControl_SelectableValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
