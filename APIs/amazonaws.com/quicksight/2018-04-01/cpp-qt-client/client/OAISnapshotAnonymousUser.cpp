/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISnapshotAnonymousUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISnapshotAnonymousUser::OAISnapshotAnonymousUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISnapshotAnonymousUser::OAISnapshotAnonymousUser() {
    this->initializeModel();
}

OAISnapshotAnonymousUser::~OAISnapshotAnonymousUser() {}

void OAISnapshotAnonymousUser::initializeModel() {

    m_row_level_permission_tags_isSet = false;
    m_row_level_permission_tags_isValid = false;
}

void OAISnapshotAnonymousUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISnapshotAnonymousUser::fromJsonObject(QJsonObject json) {

    m_row_level_permission_tags_isValid = ::OpenAPI::fromJsonValue(m_row_level_permission_tags, json[QString("RowLevelPermissionTags")]);
    m_row_level_permission_tags_isSet = !json[QString("RowLevelPermissionTags")].isNull() && m_row_level_permission_tags_isValid;
}

QString OAISnapshotAnonymousUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISnapshotAnonymousUser::asJsonObject() const {
    QJsonObject obj;
    if (m_row_level_permission_tags.isSet()) {
        obj.insert(QString("RowLevelPermissionTags"), ::OpenAPI::toJsonValue(m_row_level_permission_tags));
    }
    return obj;
}

QList OAISnapshotAnonymousUser::getRowLevelPermissionTags() const {
    return m_row_level_permission_tags;
}
void OAISnapshotAnonymousUser::setRowLevelPermissionTags(const QList &row_level_permission_tags) {
    m_row_level_permission_tags = row_level_permission_tags;
    m_row_level_permission_tags_isSet = true;
}

bool OAISnapshotAnonymousUser::is_row_level_permission_tags_Set() const{
    return m_row_level_permission_tags_isSet;
}

bool OAISnapshotAnonymousUser::is_row_level_permission_tags_Valid() const{
    return m_row_level_permission_tags_isValid;
}

bool OAISnapshotAnonymousUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_level_permission_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISnapshotAnonymousUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
