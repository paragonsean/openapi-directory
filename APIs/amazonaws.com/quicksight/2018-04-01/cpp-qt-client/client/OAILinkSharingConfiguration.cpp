/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkSharingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkSharingConfiguration::OAILinkSharingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkSharingConfiguration::OAILinkSharingConfiguration() {
    this->initializeModel();
}

OAILinkSharingConfiguration::~OAILinkSharingConfiguration() {}

void OAILinkSharingConfiguration::initializeModel() {

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAILinkSharingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkSharingConfiguration::fromJsonObject(QJsonObject json) {

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("Permissions")]);
    m_permissions_isSet = !json[QString("Permissions")].isNull() && m_permissions_isValid;
}

QString OAILinkSharingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkSharingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_permissions.isSet()) {
        obj.insert(QString("Permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

QList OAILinkSharingConfiguration::getPermissions() const {
    return m_permissions;
}
void OAILinkSharingConfiguration::setPermissions(const QList &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAILinkSharingConfiguration::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAILinkSharingConfiguration::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAILinkSharingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkSharingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
