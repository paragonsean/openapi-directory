/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocalNavigationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocalNavigationConfiguration::OAILocalNavigationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocalNavigationConfiguration::OAILocalNavigationConfiguration() {
    this->initializeModel();
}

OAILocalNavigationConfiguration::~OAILocalNavigationConfiguration() {}

void OAILocalNavigationConfiguration::initializeModel() {

    m_target_sheet_id_isSet = false;
    m_target_sheet_id_isValid = false;
}

void OAILocalNavigationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocalNavigationConfiguration::fromJsonObject(QJsonObject json) {

    m_target_sheet_id_isValid = ::OpenAPI::fromJsonValue(m_target_sheet_id, json[QString("TargetSheetId")]);
    m_target_sheet_id_isSet = !json[QString("TargetSheetId")].isNull() && m_target_sheet_id_isValid;
}

QString OAILocalNavigationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocalNavigationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_target_sheet_id_isSet) {
        obj.insert(QString("TargetSheetId"), ::OpenAPI::toJsonValue(m_target_sheet_id));
    }
    return obj;
}

QString OAILocalNavigationConfiguration::getTargetSheetId() const {
    return m_target_sheet_id;
}
void OAILocalNavigationConfiguration::setTargetSheetId(const QString &target_sheet_id) {
    m_target_sheet_id = target_sheet_id;
    m_target_sheet_id_isSet = true;
}

bool OAILocalNavigationConfiguration::is_target_sheet_id_Set() const{
    return m_target_sheet_id_isSet;
}

bool OAILocalNavigationConfiguration::is_target_sheet_id_Valid() const{
    return m_target_sheet_id_isValid;
}

bool OAILocalNavigationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_sheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocalNavigationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_sheet_id_isValid && true;
}

} // namespace OpenAPI
