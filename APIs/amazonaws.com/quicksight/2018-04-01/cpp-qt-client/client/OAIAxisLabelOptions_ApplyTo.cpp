/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisLabelOptions_ApplyTo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisLabelOptions_ApplyTo::OAIAxisLabelOptions_ApplyTo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisLabelOptions_ApplyTo::OAIAxisLabelOptions_ApplyTo() {
    this->initializeModel();
}

OAIAxisLabelOptions_ApplyTo::~OAIAxisLabelOptions_ApplyTo() {}

void OAIAxisLabelOptions_ApplyTo::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_column_isSet = false;
    m_column_isValid = false;
}

void OAIAxisLabelOptions_ApplyTo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisLabelOptions_ApplyTo::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldId")]);
    m_field_id_isSet = !json[QString("FieldId")].isNull() && m_field_id_isValid;

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("Column")]);
    m_column_isSet = !json[QString("Column")].isNull() && m_column_isValid;
}

QString OAIAxisLabelOptions_ApplyTo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisLabelOptions_ApplyTo::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id_isSet) {
        obj.insert(QString("FieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_column.isSet()) {
        obj.insert(QString("Column"), ::OpenAPI::toJsonValue(m_column));
    }
    return obj;
}

QString OAIAxisLabelOptions_ApplyTo::getFieldId() const {
    return m_field_id;
}
void OAIAxisLabelOptions_ApplyTo::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIAxisLabelOptions_ApplyTo::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIAxisLabelOptions_ApplyTo::is_field_id_Valid() const{
    return m_field_id_isValid;
}

OAIAxisLabelReferenceOptions_Column OAIAxisLabelOptions_ApplyTo::getColumn() const {
    return m_column;
}
void OAIAxisLabelOptions_ApplyTo::setColumn(const OAIAxisLabelReferenceOptions_Column &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIAxisLabelOptions_ApplyTo::is_column_Set() const{
    return m_column_isSet;
}

bool OAIAxisLabelOptions_ApplyTo::is_column_Valid() const{
    return m_column_isValid;
}

bool OAIAxisLabelOptions_ApplyTo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisLabelOptions_ApplyTo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_id_isValid && m_column_isValid && true;
}

} // namespace OpenAPI
