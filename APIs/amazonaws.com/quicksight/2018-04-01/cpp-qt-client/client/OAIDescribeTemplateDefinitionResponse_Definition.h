/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTemplateDefinitionResponse_Definition.h
 *
 * 
 */

#ifndef OAIDescribeTemplateDefinitionResponse_Definition_H
#define OAIDescribeTemplateDefinitionResponse_Definition_H

#include <QJsonObject>

#include "OAIAnalysisDefaults.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisDefaults;

class OAIDescribeTemplateDefinitionResponse_Definition : public OAIObject {
public:
    OAIDescribeTemplateDefinitionResponse_Definition();
    OAIDescribeTemplateDefinitionResponse_Definition(QString json);
    ~OAIDescribeTemplateDefinitionResponse_Definition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDataSetConfigurations() const;
    void setDataSetConfigurations(const QList &data_set_configurations);
    bool is_data_set_configurations_Set() const;
    bool is_data_set_configurations_Valid() const;

    QList getSheets() const;
    void setSheets(const QList &sheets);
    bool is_sheets_Set() const;
    bool is_sheets_Valid() const;

    QList getCalculatedFields() const;
    void setCalculatedFields(const QList &calculated_fields);
    bool is_calculated_fields_Set() const;
    bool is_calculated_fields_Valid() const;

    QList getParameterDeclarations() const;
    void setParameterDeclarations(const QList &parameter_declarations);
    bool is_parameter_declarations_Set() const;
    bool is_parameter_declarations_Valid() const;

    QList getFilterGroups() const;
    void setFilterGroups(const QList &filter_groups);
    bool is_filter_groups_Set() const;
    bool is_filter_groups_Valid() const;

    QList getColumnConfigurations() const;
    void setColumnConfigurations(const QList &column_configurations);
    bool is_column_configurations_Set() const;
    bool is_column_configurations_Valid() const;

    OAIAnalysisDefaults getAnalysisDefaults() const;
    void setAnalysisDefaults(const OAIAnalysisDefaults &analysis_defaults);
    bool is_analysis_defaults_Set() const;
    bool is_analysis_defaults_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_data_set_configurations;
    bool m_data_set_configurations_isSet;
    bool m_data_set_configurations_isValid;

    QList m_sheets;
    bool m_sheets_isSet;
    bool m_sheets_isValid;

    QList m_calculated_fields;
    bool m_calculated_fields_isSet;
    bool m_calculated_fields_isValid;

    QList m_parameter_declarations;
    bool m_parameter_declarations_isSet;
    bool m_parameter_declarations_isValid;

    QList m_filter_groups;
    bool m_filter_groups_isSet;
    bool m_filter_groups_isValid;

    QList m_column_configurations;
    bool m_column_configurations_isSet;
    bool m_column_configurations_isValid;

    OAIAnalysisDefaults m_analysis_defaults;
    bool m_analysis_defaults_isSet;
    bool m_analysis_defaults_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTemplateDefinitionResponse_Definition)

#endif // OAIDescribeTemplateDefinitionResponse_Definition_H
