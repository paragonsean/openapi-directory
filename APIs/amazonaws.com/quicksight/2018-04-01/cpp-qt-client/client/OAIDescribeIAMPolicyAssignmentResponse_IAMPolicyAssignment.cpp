/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment() {
    this->initializeModel();
}

OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::~OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment() {}

void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::initializeModel() {

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_assignment_id_isSet = false;
    m_assignment_id_isValid = false;

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;

    m_identities_isSet = false;
    m_identities_isValid = false;

    m_assignment_status_isSet = false;
    m_assignment_status_isValid = false;
}

void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::fromJsonObject(QJsonObject json) {

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_assignment_id_isValid = ::OpenAPI::fromJsonValue(m_assignment_id, json[QString("AssignmentId")]);
    m_assignment_id_isSet = !json[QString("AssignmentId")].isNull() && m_assignment_id_isValid;

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("PolicyArn")]);
    m_policy_arn_isSet = !json[QString("PolicyArn")].isNull() && m_policy_arn_isValid;

    m_identities_isValid = ::OpenAPI::fromJsonValue(m_identities, json[QString("Identities")]);
    m_identities_isSet = !json[QString("Identities")].isNull() && m_identities_isValid;

    m_assignment_status_isValid = ::OpenAPI::fromJsonValue(m_assignment_status, json[QString("AssignmentStatus")]);
    m_assignment_status_isSet = !json[QString("AssignmentStatus")].isNull() && m_assignment_status_isValid;
}

QString OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_assignment_id_isSet) {
        obj.insert(QString("AssignmentId"), ::OpenAPI::toJsonValue(m_assignment_id));
    }
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("PolicyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    if (m_identities.isSet()) {
        obj.insert(QString("Identities"), ::OpenAPI::toJsonValue(m_identities));
    }
    if (m_assignment_status.isSet()) {
        obj.insert(QString("AssignmentStatus"), ::OpenAPI::toJsonValue(m_assignment_status));
    }
    return obj;
}

QString OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getAssignmentId() const {
    return m_assignment_id;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setAssignmentId(const QString &assignment_id) {
    m_assignment_id = assignment_id;
    m_assignment_id_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_id_Set() const{
    return m_assignment_id_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_id_Valid() const{
    return m_assignment_id_isValid;
}

QString OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getAssignmentName() const {
    return m_assignment_name;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

QString OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getPolicyArn() const {
    return m_policy_arn;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

QMap OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getIdentities() const {
    return m_identities;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setIdentities(const QMap &identities) {
    m_identities = identities;
    m_identities_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_identities_Set() const{
    return m_identities_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_identities_Valid() const{
    return m_identities_isValid;
}

OAIAssignmentStatus OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::getAssignmentStatus() const {
    return m_assignment_status;
}
void OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::setAssignmentStatus(const OAIAssignmentStatus &assignment_status) {
    m_assignment_status = assignment_status;
    m_assignment_status_isSet = true;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_status_Set() const{
    return m_assignment_status_isSet;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::is_assignment_status_Valid() const{
    return m_assignment_status_isValid;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIAMPolicyAssignmentResponse_IAMPolicyAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
