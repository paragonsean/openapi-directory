/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopicNamedEntity.h
 *
 * A structure that represents a named entity.
 */

#ifndef OAITopicNamedEntity_H
#define OAITopicNamedEntity_H

#include <QJsonObject>

#include "OAITopicNamedEntity_SemanticEntityType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopicNamedEntity_SemanticEntityType;

class OAITopicNamedEntity : public OAIObject {
public:
    OAITopicNamedEntity();
    OAITopicNamedEntity(QString json);
    ~OAITopicNamedEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntityName() const;
    void setEntityName(const QString &entity_name);
    bool is_entity_name_Set() const;
    bool is_entity_name_Valid() const;

    QString getEntityDescription() const;
    void setEntityDescription(const QString &entity_description);
    bool is_entity_description_Set() const;
    bool is_entity_description_Valid() const;

    QList getEntitySynonyms() const;
    void setEntitySynonyms(const QList &entity_synonyms);
    bool is_entity_synonyms_Set() const;
    bool is_entity_synonyms_Valid() const;

    OAITopicNamedEntity_SemanticEntityType getSemanticEntityType() const;
    void setSemanticEntityType(const OAITopicNamedEntity_SemanticEntityType &semantic_entity_type);
    bool is_semantic_entity_type_Set() const;
    bool is_semantic_entity_type_Valid() const;

    QList getDefinition() const;
    void setDefinition(const QList &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entity_name;
    bool m_entity_name_isSet;
    bool m_entity_name_isValid;

    QString m_entity_description;
    bool m_entity_description_isSet;
    bool m_entity_description_isValid;

    QList m_entity_synonyms;
    bool m_entity_synonyms_isSet;
    bool m_entity_synonyms_isValid;

    OAITopicNamedEntity_SemanticEntityType m_semantic_entity_type;
    bool m_semantic_entity_type_isSet;
    bool m_semantic_entity_type_isValid;

    QList m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopicNamedEntity)

#endif // OAITopicNamedEntity_H
