/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldURLConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldURLConfiguration::OAITableFieldURLConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldURLConfiguration::OAITableFieldURLConfiguration() {
    this->initializeModel();
}

OAITableFieldURLConfiguration::~OAITableFieldURLConfiguration() {}

void OAITableFieldURLConfiguration::initializeModel() {

    m_link_configuration_isSet = false;
    m_link_configuration_isValid = false;

    m_image_configuration_isSet = false;
    m_image_configuration_isValid = false;
}

void OAITableFieldURLConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldURLConfiguration::fromJsonObject(QJsonObject json) {

    m_link_configuration_isValid = ::OpenAPI::fromJsonValue(m_link_configuration, json[QString("LinkConfiguration")]);
    m_link_configuration_isSet = !json[QString("LinkConfiguration")].isNull() && m_link_configuration_isValid;

    m_image_configuration_isValid = ::OpenAPI::fromJsonValue(m_image_configuration, json[QString("ImageConfiguration")]);
    m_image_configuration_isSet = !json[QString("ImageConfiguration")].isNull() && m_image_configuration_isValid;
}

QString OAITableFieldURLConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldURLConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_link_configuration.isSet()) {
        obj.insert(QString("LinkConfiguration"), ::OpenAPI::toJsonValue(m_link_configuration));
    }
    if (m_image_configuration.isSet()) {
        obj.insert(QString("ImageConfiguration"), ::OpenAPI::toJsonValue(m_image_configuration));
    }
    return obj;
}

OAITableFieldURLConfiguration_LinkConfiguration OAITableFieldURLConfiguration::getLinkConfiguration() const {
    return m_link_configuration;
}
void OAITableFieldURLConfiguration::setLinkConfiguration(const OAITableFieldURLConfiguration_LinkConfiguration &link_configuration) {
    m_link_configuration = link_configuration;
    m_link_configuration_isSet = true;
}

bool OAITableFieldURLConfiguration::is_link_configuration_Set() const{
    return m_link_configuration_isSet;
}

bool OAITableFieldURLConfiguration::is_link_configuration_Valid() const{
    return m_link_configuration_isValid;
}

OAITableFieldURLConfiguration_ImageConfiguration OAITableFieldURLConfiguration::getImageConfiguration() const {
    return m_image_configuration;
}
void OAITableFieldURLConfiguration::setImageConfiguration(const OAITableFieldURLConfiguration_ImageConfiguration &image_configuration) {
    m_image_configuration = image_configuration;
    m_image_configuration_isSet = true;
}

bool OAITableFieldURLConfiguration::is_image_configuration_Set() const{
    return m_image_configuration_isSet;
}

bool OAITableFieldURLConfiguration::is_image_configuration_Valid() const{
    return m_image_configuration_isValid;
}

bool OAITableFieldURLConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldURLConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
