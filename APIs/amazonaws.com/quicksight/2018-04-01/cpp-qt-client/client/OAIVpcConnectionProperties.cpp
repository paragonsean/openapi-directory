/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcConnectionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcConnectionProperties::OAIVpcConnectionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcConnectionProperties::OAIVpcConnectionProperties() {
    this->initializeModel();
}

OAIVpcConnectionProperties::~OAIVpcConnectionProperties() {}

void OAIVpcConnectionProperties::initializeModel() {

    m_vpc_connection_arn_isSet = false;
    m_vpc_connection_arn_isValid = false;
}

void OAIVpcConnectionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcConnectionProperties::fromJsonObject(QJsonObject json) {

    m_vpc_connection_arn_isValid = ::OpenAPI::fromJsonValue(m_vpc_connection_arn, json[QString("VpcConnectionArn")]);
    m_vpc_connection_arn_isSet = !json[QString("VpcConnectionArn")].isNull() && m_vpc_connection_arn_isValid;
}

QString OAIVpcConnectionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcConnectionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_connection_arn_isSet) {
        obj.insert(QString("VpcConnectionArn"), ::OpenAPI::toJsonValue(m_vpc_connection_arn));
    }
    return obj;
}

QString OAIVpcConnectionProperties::getVpcConnectionArn() const {
    return m_vpc_connection_arn;
}
void OAIVpcConnectionProperties::setVpcConnectionArn(const QString &vpc_connection_arn) {
    m_vpc_connection_arn = vpc_connection_arn;
    m_vpc_connection_arn_isSet = true;
}

bool OAIVpcConnectionProperties::is_vpc_connection_arn_Set() const{
    return m_vpc_connection_arn_isSet;
}

bool OAIVpcConnectionProperties::is_vpc_connection_arn_Valid() const{
    return m_vpc_connection_arn_isValid;
}

bool OAIVpcConnectionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_connection_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcConnectionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vpc_connection_arn_isValid && true;
}

} // namespace OpenAPI
