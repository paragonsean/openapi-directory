/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicCategoryFilter_Constant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicCategoryFilter_Constant::OAITopicCategoryFilter_Constant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicCategoryFilter_Constant::OAITopicCategoryFilter_Constant() {
    this->initializeModel();
}

OAITopicCategoryFilter_Constant::~OAITopicCategoryFilter_Constant() {}

void OAITopicCategoryFilter_Constant::initializeModel() {

    m_constant_type_isSet = false;
    m_constant_type_isValid = false;

    m_singular_constant_isSet = false;
    m_singular_constant_isValid = false;

    m_collective_constant_isSet = false;
    m_collective_constant_isValid = false;
}

void OAITopicCategoryFilter_Constant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicCategoryFilter_Constant::fromJsonObject(QJsonObject json) {

    m_constant_type_isValid = ::OpenAPI::fromJsonValue(m_constant_type, json[QString("ConstantType")]);
    m_constant_type_isSet = !json[QString("ConstantType")].isNull() && m_constant_type_isValid;

    m_singular_constant_isValid = ::OpenAPI::fromJsonValue(m_singular_constant, json[QString("SingularConstant")]);
    m_singular_constant_isSet = !json[QString("SingularConstant")].isNull() && m_singular_constant_isValid;

    m_collective_constant_isValid = ::OpenAPI::fromJsonValue(m_collective_constant, json[QString("CollectiveConstant")]);
    m_collective_constant_isSet = !json[QString("CollectiveConstant")].isNull() && m_collective_constant_isValid;
}

QString OAITopicCategoryFilter_Constant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicCategoryFilter_Constant::asJsonObject() const {
    QJsonObject obj;
    if (m_constant_type.isSet()) {
        obj.insert(QString("ConstantType"), ::OpenAPI::toJsonValue(m_constant_type));
    }
    if (m_singular_constant_isSet) {
        obj.insert(QString("SingularConstant"), ::OpenAPI::toJsonValue(m_singular_constant));
    }
    if (m_collective_constant.isSet()) {
        obj.insert(QString("CollectiveConstant"), ::OpenAPI::toJsonValue(m_collective_constant));
    }
    return obj;
}

OAIConstantType OAITopicCategoryFilter_Constant::getConstantType() const {
    return m_constant_type;
}
void OAITopicCategoryFilter_Constant::setConstantType(const OAIConstantType &constant_type) {
    m_constant_type = constant_type;
    m_constant_type_isSet = true;
}

bool OAITopicCategoryFilter_Constant::is_constant_type_Set() const{
    return m_constant_type_isSet;
}

bool OAITopicCategoryFilter_Constant::is_constant_type_Valid() const{
    return m_constant_type_isValid;
}

QString OAITopicCategoryFilter_Constant::getSingularConstant() const {
    return m_singular_constant;
}
void OAITopicCategoryFilter_Constant::setSingularConstant(const QString &singular_constant) {
    m_singular_constant = singular_constant;
    m_singular_constant_isSet = true;
}

bool OAITopicCategoryFilter_Constant::is_singular_constant_Set() const{
    return m_singular_constant_isSet;
}

bool OAITopicCategoryFilter_Constant::is_singular_constant_Valid() const{
    return m_singular_constant_isValid;
}

OAITopicCategoryFilterConstant_CollectiveConstant OAITopicCategoryFilter_Constant::getCollectiveConstant() const {
    return m_collective_constant;
}
void OAITopicCategoryFilter_Constant::setCollectiveConstant(const OAITopicCategoryFilterConstant_CollectiveConstant &collective_constant) {
    m_collective_constant = collective_constant;
    m_collective_constant_isSet = true;
}

bool OAITopicCategoryFilter_Constant::is_collective_constant_Set() const{
    return m_collective_constant_isSet;
}

bool OAITopicCategoryFilter_Constant::is_collective_constant_Valid() const{
    return m_collective_constant_isValid;
}

bool OAITopicCategoryFilter_Constant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constant_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_singular_constant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_collective_constant.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicCategoryFilter_Constant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
