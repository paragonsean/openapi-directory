/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDataSet_request_RowLevelPermissionTagConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDataSet_request_RowLevelPermissionTagConfiguration::OAICreateDataSet_request_RowLevelPermissionTagConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDataSet_request_RowLevelPermissionTagConfiguration::OAICreateDataSet_request_RowLevelPermissionTagConfiguration() {
    this->initializeModel();
}

OAICreateDataSet_request_RowLevelPermissionTagConfiguration::~OAICreateDataSet_request_RowLevelPermissionTagConfiguration() {}

void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_tag_rules_isSet = false;
    m_tag_rules_isValid = false;

    m_tag_rule_configurations_isSet = false;
    m_tag_rule_configurations_isValid = false;
}

void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_tag_rules_isValid = ::OpenAPI::fromJsonValue(m_tag_rules, json[QString("TagRules")]);
    m_tag_rules_isSet = !json[QString("TagRules")].isNull() && m_tag_rules_isValid;

    m_tag_rule_configurations_isValid = ::OpenAPI::fromJsonValue(m_tag_rule_configurations, json[QString("TagRuleConfigurations")]);
    m_tag_rule_configurations_isSet = !json[QString("TagRuleConfigurations")].isNull() && m_tag_rule_configurations_isValid;
}

QString OAICreateDataSet_request_RowLevelPermissionTagConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDataSet_request_RowLevelPermissionTagConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tag_rules.isSet()) {
        obj.insert(QString("TagRules"), ::OpenAPI::toJsonValue(m_tag_rules));
    }
    if (m_tag_rule_configurations.isSet()) {
        obj.insert(QString("TagRuleConfigurations"), ::OpenAPI::toJsonValue(m_tag_rule_configurations));
    }
    return obj;
}

OAIStatus OAICreateDataSet_request_RowLevelPermissionTagConfiguration::getStatus() const {
    return m_status;
}
void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_status_Valid() const{
    return m_status_isValid;
}

QList OAICreateDataSet_request_RowLevelPermissionTagConfiguration::getTagRules() const {
    return m_tag_rules;
}
void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::setTagRules(const QList &tag_rules) {
    m_tag_rules = tag_rules;
    m_tag_rules_isSet = true;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_tag_rules_Set() const{
    return m_tag_rules_isSet;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_tag_rules_Valid() const{
    return m_tag_rules_isValid;
}

QList OAICreateDataSet_request_RowLevelPermissionTagConfiguration::getTagRuleConfigurations() const {
    return m_tag_rule_configurations;
}
void OAICreateDataSet_request_RowLevelPermissionTagConfiguration::setTagRuleConfigurations(const QList &tag_rule_configurations) {
    m_tag_rule_configurations = tag_rule_configurations;
    m_tag_rule_configurations_isSet = true;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_tag_rule_configurations_Set() const{
    return m_tag_rule_configurations_isSet;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::is_tag_rule_configurations_Valid() const{
    return m_tag_rule_configurations_isValid;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_rule_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDataSet_request_RowLevelPermissionTagConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
