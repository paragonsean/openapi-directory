/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComboChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComboChartConfiguration_FieldWells::OAIComboChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComboChartConfiguration_FieldWells::OAIComboChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAIComboChartConfiguration_FieldWells::~OAIComboChartConfiguration_FieldWells() {}

void OAIComboChartConfiguration_FieldWells::initializeModel() {

    m_combo_chart_aggregated_field_wells_isSet = false;
    m_combo_chart_aggregated_field_wells_isValid = false;
}

void OAIComboChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComboChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_combo_chart_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_combo_chart_aggregated_field_wells, json[QString("ComboChartAggregatedFieldWells")]);
    m_combo_chart_aggregated_field_wells_isSet = !json[QString("ComboChartAggregatedFieldWells")].isNull() && m_combo_chart_aggregated_field_wells_isValid;
}

QString OAIComboChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComboChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_combo_chart_aggregated_field_wells.isSet()) {
        obj.insert(QString("ComboChartAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_combo_chart_aggregated_field_wells));
    }
    return obj;
}

OAIComboChartFieldWells_ComboChartAggregatedFieldWells OAIComboChartConfiguration_FieldWells::getComboChartAggregatedFieldWells() const {
    return m_combo_chart_aggregated_field_wells;
}
void OAIComboChartConfiguration_FieldWells::setComboChartAggregatedFieldWells(const OAIComboChartFieldWells_ComboChartAggregatedFieldWells &combo_chart_aggregated_field_wells) {
    m_combo_chart_aggregated_field_wells = combo_chart_aggregated_field_wells;
    m_combo_chart_aggregated_field_wells_isSet = true;
}

bool OAIComboChartConfiguration_FieldWells::is_combo_chart_aggregated_field_wells_Set() const{
    return m_combo_chart_aggregated_field_wells_isSet;
}

bool OAIComboChartConfiguration_FieldWells::is_combo_chart_aggregated_field_wells_Valid() const{
    return m_combo_chart_aggregated_field_wells_isValid;
}

bool OAIComboChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_combo_chart_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComboChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
