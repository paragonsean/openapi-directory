/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeRangeFilter.h
 *
 * A &lt;code&gt;TimeRangeFilter&lt;/code&gt; filters values that are between two specified values.
 */

#ifndef OAITimeRangeFilter_H
#define OAITimeRangeFilter_H

#include <QJsonObject>

#include "OAICategoryDrillDownFilter_Column.h"
#include "OAIFilterNullOption.h"
#include "OAITimeGranularity.h"
#include "OAITimeRangeFilter_ExcludePeriodConfiguration.h"
#include "OAITimeRangeFilter_RangeMaximumValue.h"
#include "OAITimeRangeFilter_RangeMinimumValue.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryDrillDownFilter_Column;
class OAITimeRangeFilter_RangeMinimumValue;
class OAITimeRangeFilter_RangeMaximumValue;
class OAITimeRangeFilter_ExcludePeriodConfiguration;

class OAITimeRangeFilter : public OAIObject {
public:
    OAITimeRangeFilter();
    OAITimeRangeFilter(QString json);
    ~OAITimeRangeFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterId() const;
    void setFilterId(const QString &filter_id);
    bool is_filter_id_Set() const;
    bool is_filter_id_Valid() const;

    OAICategoryDrillDownFilter_Column getColumn() const;
    void setColumn(const OAICategoryDrillDownFilter_Column &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    bool getIncludeMinimum() const;
    void setIncludeMinimum(const bool &include_minimum);
    bool is_include_minimum_Set() const;
    bool is_include_minimum_Valid() const;

    bool getIncludeMaximum() const;
    void setIncludeMaximum(const bool &include_maximum);
    bool is_include_maximum_Set() const;
    bool is_include_maximum_Valid() const;

    OAITimeRangeFilter_RangeMinimumValue getRangeMinimumValue() const;
    void setRangeMinimumValue(const OAITimeRangeFilter_RangeMinimumValue &range_minimum_value);
    bool is_range_minimum_value_Set() const;
    bool is_range_minimum_value_Valid() const;

    OAITimeRangeFilter_RangeMaximumValue getRangeMaximumValue() const;
    void setRangeMaximumValue(const OAITimeRangeFilter_RangeMaximumValue &range_maximum_value);
    bool is_range_maximum_value_Set() const;
    bool is_range_maximum_value_Valid() const;

    OAIFilterNullOption getNullOption() const;
    void setNullOption(const OAIFilterNullOption &null_option);
    bool is_null_option_Set() const;
    bool is_null_option_Valid() const;

    OAITimeRangeFilter_ExcludePeriodConfiguration getExcludePeriodConfiguration() const;
    void setExcludePeriodConfiguration(const OAITimeRangeFilter_ExcludePeriodConfiguration &exclude_period_configuration);
    bool is_exclude_period_configuration_Set() const;
    bool is_exclude_period_configuration_Valid() const;

    OAITimeGranularity getTimeGranularity() const;
    void setTimeGranularity(const OAITimeGranularity &time_granularity);
    bool is_time_granularity_Set() const;
    bool is_time_granularity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_id;
    bool m_filter_id_isSet;
    bool m_filter_id_isValid;

    OAICategoryDrillDownFilter_Column m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    bool m_include_minimum;
    bool m_include_minimum_isSet;
    bool m_include_minimum_isValid;

    bool m_include_maximum;
    bool m_include_maximum_isSet;
    bool m_include_maximum_isValid;

    OAITimeRangeFilter_RangeMinimumValue m_range_minimum_value;
    bool m_range_minimum_value_isSet;
    bool m_range_minimum_value_isValid;

    OAITimeRangeFilter_RangeMaximumValue m_range_maximum_value;
    bool m_range_maximum_value_isSet;
    bool m_range_maximum_value_isValid;

    OAIFilterNullOption m_null_option;
    bool m_null_option_isSet;
    bool m_null_option_isValid;

    OAITimeRangeFilter_ExcludePeriodConfiguration m_exclude_period_configuration;
    bool m_exclude_period_configuration_isSet;
    bool m_exclude_period_configuration_isValid;

    OAITimeGranularity m_time_granularity;
    bool m_time_granularity_isSet;
    bool m_time_granularity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeRangeFilter)

#endif // OAITimeRangeFilter_H
