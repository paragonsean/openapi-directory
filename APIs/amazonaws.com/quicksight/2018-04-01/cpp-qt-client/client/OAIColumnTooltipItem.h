/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIColumnTooltipItem.h
 *
 * The tooltip item for the columns that are not part of a field well.
 */

#ifndef OAIColumnTooltipItem_H
#define OAIColumnTooltipItem_H

#include <QJsonObject>

#include "OAIColumnTooltipItem_Aggregation.h"
#include "OAIColumnTooltipItem_Column.h"
#include "OAIVisibility.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColumnTooltipItem_Column;
class OAIColumnTooltipItem_Aggregation;

class OAIColumnTooltipItem : public OAIObject {
public:
    OAIColumnTooltipItem();
    OAIColumnTooltipItem(QString json);
    ~OAIColumnTooltipItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColumnTooltipItem_Column getColumn() const;
    void setColumn(const OAIColumnTooltipItem_Column &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    OAIColumnTooltipItem_Aggregation getAggregation() const;
    void setAggregation(const OAIColumnTooltipItem_Aggregation &aggregation);
    bool is_aggregation_Set() const;
    bool is_aggregation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColumnTooltipItem_Column m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    OAIColumnTooltipItem_Aggregation m_aggregation;
    bool m_aggregation_isSet;
    bool m_aggregation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIColumnTooltipItem)

#endif // OAIColumnTooltipItem_H
