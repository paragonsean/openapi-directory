/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColorsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColorsConfiguration::OAIColorsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColorsConfiguration::OAIColorsConfiguration() {
    this->initializeModel();
}

OAIColorsConfiguration::~OAIColorsConfiguration() {}

void OAIColorsConfiguration::initializeModel() {

    m_custom_colors_isSet = false;
    m_custom_colors_isValid = false;
}

void OAIColorsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColorsConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_colors_isValid = ::OpenAPI::fromJsonValue(m_custom_colors, json[QString("CustomColors")]);
    m_custom_colors_isSet = !json[QString("CustomColors")].isNull() && m_custom_colors_isValid;
}

QString OAIColorsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColorsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_colors.isSet()) {
        obj.insert(QString("CustomColors"), ::OpenAPI::toJsonValue(m_custom_colors));
    }
    return obj;
}

QList OAIColorsConfiguration::getCustomColors() const {
    return m_custom_colors;
}
void OAIColorsConfiguration::setCustomColors(const QList &custom_colors) {
    m_custom_colors = custom_colors;
    m_custom_colors_isSet = true;
}

bool OAIColorsConfiguration::is_custom_colors_Set() const{
    return m_custom_colors_isSet;
}

bool OAIColorsConfiguration::is_custom_colors_Valid() const{
    return m_custom_colors_isValid;
}

bool OAIColorsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_colors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColorsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
