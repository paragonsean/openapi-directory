/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartAssetBundleImportJobRequest.h
 *
 * 
 */

#ifndef OAIStartAssetBundleImportJobRequest_H
#define OAIStartAssetBundleImportJobRequest_H

#include <QJsonObject>

#include "OAIAssetBundleImportFailureAction.h"
#include "OAIDescribeAssetBundleImportJobResponse_OverrideParameters.h"
#include "OAIStartAssetBundleImportJobRequest_AssetBundleImportSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartAssetBundleImportJobRequest_AssetBundleImportSource;
class OAIDescribeAssetBundleImportJobResponse_OverrideParameters;

class OAIStartAssetBundleImportJobRequest : public OAIObject {
public:
    OAIStartAssetBundleImportJobRequest();
    OAIStartAssetBundleImportJobRequest(QString json);
    ~OAIStartAssetBundleImportJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetBundleImportJobId() const;
    void setAssetBundleImportJobId(const QString &asset_bundle_import_job_id);
    bool is_asset_bundle_import_job_id_Set() const;
    bool is_asset_bundle_import_job_id_Valid() const;

    OAIStartAssetBundleImportJobRequest_AssetBundleImportSource getAssetBundleImportSource() const;
    void setAssetBundleImportSource(const OAIStartAssetBundleImportJobRequest_AssetBundleImportSource &asset_bundle_import_source);
    bool is_asset_bundle_import_source_Set() const;
    bool is_asset_bundle_import_source_Valid() const;

    OAIDescribeAssetBundleImportJobResponse_OverrideParameters getOverrideParameters() const;
    void setOverrideParameters(const OAIDescribeAssetBundleImportJobResponse_OverrideParameters &override_parameters);
    bool is_override_parameters_Set() const;
    bool is_override_parameters_Valid() const;

    OAIAssetBundleImportFailureAction getFailureAction() const;
    void setFailureAction(const OAIAssetBundleImportFailureAction &failure_action);
    bool is_failure_action_Set() const;
    bool is_failure_action_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_bundle_import_job_id;
    bool m_asset_bundle_import_job_id_isSet;
    bool m_asset_bundle_import_job_id_isValid;

    OAIStartAssetBundleImportJobRequest_AssetBundleImportSource m_asset_bundle_import_source;
    bool m_asset_bundle_import_source_isSet;
    bool m_asset_bundle_import_source_isValid;

    OAIDescribeAssetBundleImportJobResponse_OverrideParameters m_override_parameters;
    bool m_override_parameters_isSet;
    bool m_override_parameters_isValid;

    OAIAssetBundleImportFailureAction m_failure_action;
    bool m_failure_action_isSet;
    bool m_failure_action_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartAssetBundleImportJobRequest)

#endif // OAIStartAssetBundleImportJobRequest_H
