/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBarChartFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBarChartFieldWells::OAIBarChartFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBarChartFieldWells::OAIBarChartFieldWells() {
    this->initializeModel();
}

OAIBarChartFieldWells::~OAIBarChartFieldWells() {}

void OAIBarChartFieldWells::initializeModel() {

    m_bar_chart_aggregated_field_wells_isSet = false;
    m_bar_chart_aggregated_field_wells_isValid = false;
}

void OAIBarChartFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBarChartFieldWells::fromJsonObject(QJsonObject json) {

    m_bar_chart_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_bar_chart_aggregated_field_wells, json[QString("BarChartAggregatedFieldWells")]);
    m_bar_chart_aggregated_field_wells_isSet = !json[QString("BarChartAggregatedFieldWells")].isNull() && m_bar_chart_aggregated_field_wells_isValid;
}

QString OAIBarChartFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBarChartFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_bar_chart_aggregated_field_wells.isSet()) {
        obj.insert(QString("BarChartAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_bar_chart_aggregated_field_wells));
    }
    return obj;
}

OAIBarChartFieldWells_BarChartAggregatedFieldWells OAIBarChartFieldWells::getBarChartAggregatedFieldWells() const {
    return m_bar_chart_aggregated_field_wells;
}
void OAIBarChartFieldWells::setBarChartAggregatedFieldWells(const OAIBarChartFieldWells_BarChartAggregatedFieldWells &bar_chart_aggregated_field_wells) {
    m_bar_chart_aggregated_field_wells = bar_chart_aggregated_field_wells;
    m_bar_chart_aggregated_field_wells_isSet = true;
}

bool OAIBarChartFieldWells::is_bar_chart_aggregated_field_wells_Set() const{
    return m_bar_chart_aggregated_field_wells_isSet;
}

bool OAIBarChartFieldWells::is_bar_chart_aggregated_field_wells_Valid() const{
    return m_bar_chart_aggregated_field_wells_isValid;
}

bool OAIBarChartFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bar_chart_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBarChartFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
