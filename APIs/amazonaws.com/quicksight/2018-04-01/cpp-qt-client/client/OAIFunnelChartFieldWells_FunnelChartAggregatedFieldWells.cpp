/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells() {
    this->initializeModel();
}

OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::~OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells() {}

void OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("Category")]);
    m_category_isSet = !json[QString("Category")].isNull() && m_category_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_category.isSet()) {
        obj.insert(QString("Category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::getCategory() const {
    return m_category;
}
void OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::setCategory(const QList &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::is_category_Set() const{
    return m_category_isSet;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::is_category_Valid() const{
    return m_category_isValid;
}

QList OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::getValues() const {
    return m_values;
}
void OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::is_values_Set() const{
    return m_values_isSet;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFunnelChartFieldWells_FunnelChartAggregatedFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
