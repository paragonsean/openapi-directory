/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPercentVisibleRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPercentVisibleRange::OAIPercentVisibleRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPercentVisibleRange::OAIPercentVisibleRange() {
    this->initializeModel();
}

OAIPercentVisibleRange::~OAIPercentVisibleRange() {}

void OAIPercentVisibleRange::initializeModel() {

    m_from_isSet = false;
    m_from_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIPercentVisibleRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPercentVisibleRange::fromJsonObject(QJsonObject json) {

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("From")]);
    m_from_isSet = !json[QString("From")].isNull() && m_from_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("To")]);
    m_to_isSet = !json[QString("To")].isNull() && m_to_isValid;
}

QString OAIPercentVisibleRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPercentVisibleRange::asJsonObject() const {
    QJsonObject obj;
    if (m_from_isSet) {
        obj.insert(QString("From"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_to_isSet) {
        obj.insert(QString("To"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

double OAIPercentVisibleRange::getFrom() const {
    return m_from;
}
void OAIPercentVisibleRange::setFrom(const double &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIPercentVisibleRange::is_from_Set() const{
    return m_from_isSet;
}

bool OAIPercentVisibleRange::is_from_Valid() const{
    return m_from_isValid;
}

double OAIPercentVisibleRange::getTo() const {
    return m_to;
}
void OAIPercentVisibleRange::setTo(const double &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIPercentVisibleRange::is_to_Set() const{
    return m_to_isSet;
}

bool OAIPercentVisibleRange::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIPercentVisibleRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPercentVisibleRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
