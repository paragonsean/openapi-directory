/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDashboardSnapshotJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDashboardSnapshotJobResponse::OAIDescribeDashboardSnapshotJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDashboardSnapshotJobResponse::OAIDescribeDashboardSnapshotJobResponse() {
    this->initializeModel();
}

OAIDescribeDashboardSnapshotJobResponse::~OAIDescribeDashboardSnapshotJobResponse() {}

void OAIDescribeDashboardSnapshotJobResponse::initializeModel() {

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_dashboard_id_isSet = false;
    m_dashboard_id_isValid = false;

    m_snapshot_job_id_isSet = false;
    m_snapshot_job_id_isValid = false;

    m_user_configuration_isSet = false;
    m_user_configuration_isValid = false;

    m_snapshot_configuration_isSet = false;
    m_snapshot_configuration_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeDashboardSnapshotJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDashboardSnapshotJobResponse::fromJsonObject(QJsonObject json) {

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_dashboard_id_isValid = ::OpenAPI::fromJsonValue(m_dashboard_id, json[QString("DashboardId")]);
    m_dashboard_id_isSet = !json[QString("DashboardId")].isNull() && m_dashboard_id_isValid;

    m_snapshot_job_id_isValid = ::OpenAPI::fromJsonValue(m_snapshot_job_id, json[QString("SnapshotJobId")]);
    m_snapshot_job_id_isSet = !json[QString("SnapshotJobId")].isNull() && m_snapshot_job_id_isValid;

    m_user_configuration_isValid = ::OpenAPI::fromJsonValue(m_user_configuration, json[QString("UserConfiguration")]);
    m_user_configuration_isSet = !json[QString("UserConfiguration")].isNull() && m_user_configuration_isValid;

    m_snapshot_configuration_isValid = ::OpenAPI::fromJsonValue(m_snapshot_configuration, json[QString("SnapshotConfiguration")]);
    m_snapshot_configuration_isSet = !json[QString("SnapshotConfiguration")].isNull() && m_snapshot_configuration_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDashboardSnapshotJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_dashboard_id_isSet) {
        obj.insert(QString("DashboardId"), ::OpenAPI::toJsonValue(m_dashboard_id));
    }
    if (m_snapshot_job_id_isSet) {
        obj.insert(QString("SnapshotJobId"), ::OpenAPI::toJsonValue(m_snapshot_job_id));
    }
    if (m_user_configuration.isSet()) {
        obj.insert(QString("UserConfiguration"), ::OpenAPI::toJsonValue(m_user_configuration));
    }
    if (m_snapshot_configuration.isSet()) {
        obj.insert(QString("SnapshotConfiguration"), ::OpenAPI::toJsonValue(m_snapshot_configuration));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDescribeDashboardSnapshotJobResponse::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIDescribeDashboardSnapshotJobResponse::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse::getDashboardId() const {
    return m_dashboard_id;
}
void OAIDescribeDashboardSnapshotJobResponse::setDashboardId(const QString &dashboard_id) {
    m_dashboard_id = dashboard_id;
    m_dashboard_id_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_dashboard_id_Set() const{
    return m_dashboard_id_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_dashboard_id_Valid() const{
    return m_dashboard_id_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse::getSnapshotJobId() const {
    return m_snapshot_job_id;
}
void OAIDescribeDashboardSnapshotJobResponse::setSnapshotJobId(const QString &snapshot_job_id) {
    m_snapshot_job_id = snapshot_job_id;
    m_snapshot_job_id_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_snapshot_job_id_Set() const{
    return m_snapshot_job_id_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_snapshot_job_id_Valid() const{
    return m_snapshot_job_id_isValid;
}

OAIDescribeDashboardSnapshotJobResponse_UserConfiguration OAIDescribeDashboardSnapshotJobResponse::getUserConfiguration() const {
    return m_user_configuration;
}
void OAIDescribeDashboardSnapshotJobResponse::setUserConfiguration(const OAIDescribeDashboardSnapshotJobResponse_UserConfiguration &user_configuration) {
    m_user_configuration = user_configuration;
    m_user_configuration_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_user_configuration_Set() const{
    return m_user_configuration_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_user_configuration_Valid() const{
    return m_user_configuration_isValid;
}

OAIDescribeDashboardSnapshotJobResponse_SnapshotConfiguration OAIDescribeDashboardSnapshotJobResponse::getSnapshotConfiguration() const {
    return m_snapshot_configuration;
}
void OAIDescribeDashboardSnapshotJobResponse::setSnapshotConfiguration(const OAIDescribeDashboardSnapshotJobResponse_SnapshotConfiguration &snapshot_configuration) {
    m_snapshot_configuration = snapshot_configuration;
    m_snapshot_configuration_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_snapshot_configuration_Set() const{
    return m_snapshot_configuration_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_snapshot_configuration_Valid() const{
    return m_snapshot_configuration_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse::getArn() const {
    return m_arn;
}
void OAIDescribeDashboardSnapshotJobResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

OAISnapshotJobStatus OAIDescribeDashboardSnapshotJobResponse::getJobStatus() const {
    return m_job_status;
}
void OAIDescribeDashboardSnapshotJobResponse::setJobStatus(const OAISnapshotJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QDateTime OAIDescribeDashboardSnapshotJobResponse::getCreatedTime() const {
    return m_created_time;
}
void OAIDescribeDashboardSnapshotJobResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QDateTime OAIDescribeDashboardSnapshotJobResponse::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIDescribeDashboardSnapshotJobResponse::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

QString OAIDescribeDashboardSnapshotJobResponse::getRequestId() const {
    return m_request_id;
}
void OAIDescribeDashboardSnapshotJobResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDescribeDashboardSnapshotJobResponse::getStatus() const {
    return m_status;
}
void OAIDescribeDashboardSnapshotJobResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeDashboardSnapshotJobResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeDashboardSnapshotJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dashboard_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDashboardSnapshotJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
