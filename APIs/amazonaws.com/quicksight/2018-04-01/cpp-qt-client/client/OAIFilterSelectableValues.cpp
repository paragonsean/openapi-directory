/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterSelectableValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterSelectableValues::OAIFilterSelectableValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterSelectableValues::OAIFilterSelectableValues() {
    this->initializeModel();
}

OAIFilterSelectableValues::~OAIFilterSelectableValues() {}

void OAIFilterSelectableValues::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIFilterSelectableValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilterSelectableValues::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIFilterSelectableValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilterSelectableValues::asJsonObject() const {
    QJsonObject obj;
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList OAIFilterSelectableValues::getValues() const {
    return m_values;
}
void OAIFilterSelectableValues::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIFilterSelectableValues::is_values_Set() const{
    return m_values_isSet;
}

bool OAIFilterSelectableValues::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIFilterSelectableValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilterSelectableValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
