/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicRangeFilterConstant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicRangeFilterConstant::OAITopicRangeFilterConstant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicRangeFilterConstant::OAITopicRangeFilterConstant() {
    this->initializeModel();
}

OAITopicRangeFilterConstant::~OAITopicRangeFilterConstant() {}

void OAITopicRangeFilterConstant::initializeModel() {

    m_constant_type_isSet = false;
    m_constant_type_isValid = false;

    m_range_constant_isSet = false;
    m_range_constant_isValid = false;
}

void OAITopicRangeFilterConstant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicRangeFilterConstant::fromJsonObject(QJsonObject json) {

    m_constant_type_isValid = ::OpenAPI::fromJsonValue(m_constant_type, json[QString("ConstantType")]);
    m_constant_type_isSet = !json[QString("ConstantType")].isNull() && m_constant_type_isValid;

    m_range_constant_isValid = ::OpenAPI::fromJsonValue(m_range_constant, json[QString("RangeConstant")]);
    m_range_constant_isSet = !json[QString("RangeConstant")].isNull() && m_range_constant_isValid;
}

QString OAITopicRangeFilterConstant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicRangeFilterConstant::asJsonObject() const {
    QJsonObject obj;
    if (m_constant_type.isSet()) {
        obj.insert(QString("ConstantType"), ::OpenAPI::toJsonValue(m_constant_type));
    }
    if (m_range_constant.isSet()) {
        obj.insert(QString("RangeConstant"), ::OpenAPI::toJsonValue(m_range_constant));
    }
    return obj;
}

OAIConstantType OAITopicRangeFilterConstant::getConstantType() const {
    return m_constant_type;
}
void OAITopicRangeFilterConstant::setConstantType(const OAIConstantType &constant_type) {
    m_constant_type = constant_type;
    m_constant_type_isSet = true;
}

bool OAITopicRangeFilterConstant::is_constant_type_Set() const{
    return m_constant_type_isSet;
}

bool OAITopicRangeFilterConstant::is_constant_type_Valid() const{
    return m_constant_type_isValid;
}

OAITopicRangeFilterConstant_RangeConstant OAITopicRangeFilterConstant::getRangeConstant() const {
    return m_range_constant;
}
void OAITopicRangeFilterConstant::setRangeConstant(const OAITopicRangeFilterConstant_RangeConstant &range_constant) {
    m_range_constant = range_constant;
    m_range_constant_isSet = true;
}

bool OAITopicRangeFilterConstant::is_range_constant_Set() const{
    return m_range_constant_isSet;
}

bool OAITopicRangeFilterConstant::is_range_constant_Valid() const{
    return m_range_constant_isValid;
}

bool OAITopicRangeFilterConstant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constant_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_constant.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicRangeFilterConstant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
