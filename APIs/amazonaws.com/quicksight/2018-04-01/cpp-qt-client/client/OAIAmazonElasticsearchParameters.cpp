/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAmazonElasticsearchParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAmazonElasticsearchParameters::OAIAmazonElasticsearchParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAmazonElasticsearchParameters::OAIAmazonElasticsearchParameters() {
    this->initializeModel();
}

OAIAmazonElasticsearchParameters::~OAIAmazonElasticsearchParameters() {}

void OAIAmazonElasticsearchParameters::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;
}

void OAIAmazonElasticsearchParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAmazonElasticsearchParameters::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("Domain")]);
    m_domain_isSet = !json[QString("Domain")].isNull() && m_domain_isValid;
}

QString OAIAmazonElasticsearchParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAmazonElasticsearchParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_isSet) {
        obj.insert(QString("Domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    return obj;
}

QString OAIAmazonElasticsearchParameters::getDomain() const {
    return m_domain;
}
void OAIAmazonElasticsearchParameters::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIAmazonElasticsearchParameters::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIAmazonElasticsearchParameters::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIAmazonElasticsearchParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAmazonElasticsearchParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domain_isValid && true;
}

} // namespace OpenAPI
