/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISslProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISslProperties::OAISslProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISslProperties::OAISslProperties() {
    this->initializeModel();
}

OAISslProperties::~OAISslProperties() {}

void OAISslProperties::initializeModel() {

    m_disable_ssl_isSet = false;
    m_disable_ssl_isValid = false;
}

void OAISslProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISslProperties::fromJsonObject(QJsonObject json) {

    m_disable_ssl_isValid = ::OpenAPI::fromJsonValue(m_disable_ssl, json[QString("DisableSsl")]);
    m_disable_ssl_isSet = !json[QString("DisableSsl")].isNull() && m_disable_ssl_isValid;
}

QString OAISslProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISslProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_ssl_isSet) {
        obj.insert(QString("DisableSsl"), ::OpenAPI::toJsonValue(m_disable_ssl));
    }
    return obj;
}

bool OAISslProperties::getDisableSsl() const {
    return m_disable_ssl;
}
void OAISslProperties::setDisableSsl(const bool &disable_ssl) {
    m_disable_ssl = disable_ssl;
    m_disable_ssl_isSet = true;
}

bool OAISslProperties::is_disable_ssl_Set() const{
    return m_disable_ssl_isSet;
}

bool OAISslProperties::is_disable_ssl_Valid() const{
    return m_disable_ssl_isValid;
}

bool OAISslProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_ssl_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISslProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
