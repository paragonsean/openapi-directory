/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountCustomizationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountCustomizationResponse::OAIUpdateAccountCustomizationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountCustomizationResponse::OAIUpdateAccountCustomizationResponse() {
    this->initializeModel();
}

OAIUpdateAccountCustomizationResponse::~OAIUpdateAccountCustomizationResponse() {}

void OAIUpdateAccountCustomizationResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_r_namespace_isSet = false;
    m_r_namespace_isValid = false;

    m_account_customization_isSet = false;
    m_account_customization_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdateAccountCustomizationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountCustomizationResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AwsAccountId")]);
    m_aws_account_id_isSet = !json[QString("AwsAccountId")].isNull() && m_aws_account_id_isValid;

    m_r_namespace_isValid = ::OpenAPI::fromJsonValue(m_r_namespace, json[QString("Namespace")]);
    m_r_namespace_isSet = !json[QString("Namespace")].isNull() && m_r_namespace_isValid;

    m_account_customization_isValid = ::OpenAPI::fromJsonValue(m_account_customization, json[QString("AccountCustomization")]);
    m_account_customization_isSet = !json[QString("AccountCustomization")].isNull() && m_account_customization_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIUpdateAccountCustomizationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountCustomizationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_aws_account_id_isSet) {
        obj.insert(QString("AwsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_r_namespace_isSet) {
        obj.insert(QString("Namespace"), ::OpenAPI::toJsonValue(m_r_namespace));
    }
    if (m_account_customization.isSet()) {
        obj.insert(QString("AccountCustomization"), ::OpenAPI::toJsonValue(m_account_customization));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIUpdateAccountCustomizationResponse::getArn() const {
    return m_arn;
}
void OAIUpdateAccountCustomizationResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIUpdateAccountCustomizationResponse::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIUpdateAccountCustomizationResponse::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAIUpdateAccountCustomizationResponse::getRNamespace() const {
    return m_r_namespace;
}
void OAIUpdateAccountCustomizationResponse::setRNamespace(const QString &r_namespace) {
    m_r_namespace = r_namespace;
    m_r_namespace_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_r_namespace_Set() const{
    return m_r_namespace_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_r_namespace_Valid() const{
    return m_r_namespace_isValid;
}

OAIUpdateAccountCustomizationResponse_AccountCustomization OAIUpdateAccountCustomizationResponse::getAccountCustomization() const {
    return m_account_customization;
}
void OAIUpdateAccountCustomizationResponse::setAccountCustomization(const OAIUpdateAccountCustomizationResponse_AccountCustomization &account_customization) {
    m_account_customization = account_customization;
    m_account_customization_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_account_customization_Set() const{
    return m_account_customization_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_account_customization_Valid() const{
    return m_account_customization_isValid;
}

QString OAIUpdateAccountCustomizationResponse::getRequestId() const {
    return m_request_id;
}
void OAIUpdateAccountCustomizationResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIUpdateAccountCustomizationResponse::getStatus() const {
    return m_status;
}
void OAIUpdateAccountCustomizationResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateAccountCustomizationResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateAccountCustomizationResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateAccountCustomizationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_customization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountCustomizationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
