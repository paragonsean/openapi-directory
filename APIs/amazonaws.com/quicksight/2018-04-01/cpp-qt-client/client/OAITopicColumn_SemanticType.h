/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopicColumn_SemanticType.h
 *
 * 
 */

#ifndef OAITopicColumn_SemanticType_H
#define OAITopicColumn_SemanticType_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITopicColumn_SemanticType : public OAIObject {
public:
    OAITopicColumn_SemanticType();
    OAITopicColumn_SemanticType(QString json);
    ~OAITopicColumn_SemanticType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getSubTypeName() const;
    void setSubTypeName(const QString &sub_type_name);
    bool is_sub_type_name_Set() const;
    bool is_sub_type_name_Valid() const;

    QMap getTypeParameters() const;
    void setTypeParameters(const QMap &type_parameters);
    bool is_type_parameters_Set() const;
    bool is_type_parameters_Valid() const;

    QString getTruthyCellValue() const;
    void setTruthyCellValue(const QString &truthy_cell_value);
    bool is_truthy_cell_value_Set() const;
    bool is_truthy_cell_value_Valid() const;

    QList getTruthyCellValueSynonyms() const;
    void setTruthyCellValueSynonyms(const QList &truthy_cell_value_synonyms);
    bool is_truthy_cell_value_synonyms_Set() const;
    bool is_truthy_cell_value_synonyms_Valid() const;

    QString getFalseyCellValue() const;
    void setFalseyCellValue(const QString &falsey_cell_value);
    bool is_falsey_cell_value_Set() const;
    bool is_falsey_cell_value_Valid() const;

    QList getFalseyCellValueSynonyms() const;
    void setFalseyCellValueSynonyms(const QList &falsey_cell_value_synonyms);
    bool is_falsey_cell_value_synonyms_Set() const;
    bool is_falsey_cell_value_synonyms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_sub_type_name;
    bool m_sub_type_name_isSet;
    bool m_sub_type_name_isValid;

    QMap m_type_parameters;
    bool m_type_parameters_isSet;
    bool m_type_parameters_isValid;

    QString m_truthy_cell_value;
    bool m_truthy_cell_value_isSet;
    bool m_truthy_cell_value_isValid;

    QList m_truthy_cell_value_synonyms;
    bool m_truthy_cell_value_synonyms_isSet;
    bool m_truthy_cell_value_synonyms_isValid;

    QString m_falsey_cell_value;
    bool m_falsey_cell_value_isSet;
    bool m_falsey_cell_value_isValid;

    QList m_falsey_cell_value_synonyms;
    bool m_falsey_cell_value_synonyms_isSet;
    bool m_falsey_cell_value_synonyms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopicColumn_SemanticType)

#endif // OAITopicColumn_SemanticType_H
