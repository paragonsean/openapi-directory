/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration() {
    this->initializeModel();
}

OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::~OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration() {}

void OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::initializeModel() {

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::fromJsonObject(QJsonObject json) {

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("Permissions")]);
    m_permissions_isSet = !json[QString("Permissions")].isNull() && m_permissions_isValid;
}

QString OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_permissions.isSet()) {
        obj.insert(QString("Permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

QList OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::getPermissions() const {
    return m_permissions;
}
void OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::setPermissions(const QList &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDashboardPermissionsResponse_LinkSharingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
