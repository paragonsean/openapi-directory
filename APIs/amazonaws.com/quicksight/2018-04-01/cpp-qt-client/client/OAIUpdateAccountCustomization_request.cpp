/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountCustomization_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountCustomization_request::OAIUpdateAccountCustomization_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountCustomization_request::OAIUpdateAccountCustomization_request() {
    this->initializeModel();
}

OAIUpdateAccountCustomization_request::~OAIUpdateAccountCustomization_request() {}

void OAIUpdateAccountCustomization_request::initializeModel() {

    m_account_customization_isSet = false;
    m_account_customization_isValid = false;
}

void OAIUpdateAccountCustomization_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountCustomization_request::fromJsonObject(QJsonObject json) {

    m_account_customization_isValid = ::OpenAPI::fromJsonValue(m_account_customization, json[QString("AccountCustomization")]);
    m_account_customization_isSet = !json[QString("AccountCustomization")].isNull() && m_account_customization_isValid;
}

QString OAIUpdateAccountCustomization_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountCustomization_request::asJsonObject() const {
    QJsonObject obj;
    if (m_account_customization.isSet()) {
        obj.insert(QString("AccountCustomization"), ::OpenAPI::toJsonValue(m_account_customization));
    }
    return obj;
}

OAIUpdateAccountCustomization_request_AccountCustomization OAIUpdateAccountCustomization_request::getAccountCustomization() const {
    return m_account_customization;
}
void OAIUpdateAccountCustomization_request::setAccountCustomization(const OAIUpdateAccountCustomization_request_AccountCustomization &account_customization) {
    m_account_customization = account_customization;
    m_account_customization_isSet = true;
}

bool OAIUpdateAccountCustomization_request::is_account_customization_Set() const{
    return m_account_customization_isSet;
}

bool OAIUpdateAccountCustomization_request::is_account_customization_Valid() const{
    return m_account_customization_isValid;
}

bool OAIUpdateAccountCustomization_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_customization.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountCustomization_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_customization_isValid && true;
}

} // namespace OpenAPI
