/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartAssetBundleExportJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartAssetBundleExportJobRequest::OAIStartAssetBundleExportJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartAssetBundleExportJobRequest::OAIStartAssetBundleExportJobRequest() {
    this->initializeModel();
}

OAIStartAssetBundleExportJobRequest::~OAIStartAssetBundleExportJobRequest() {}

void OAIStartAssetBundleExportJobRequest::initializeModel() {

    m_asset_bundle_export_job_id_isSet = false;
    m_asset_bundle_export_job_id_isValid = false;

    m_resource_arns_isSet = false;
    m_resource_arns_isValid = false;

    m_include_all_dependencies_isSet = false;
    m_include_all_dependencies_isValid = false;

    m_export_format_isSet = false;
    m_export_format_isValid = false;

    m_cloud_formation_override_property_configuration_isSet = false;
    m_cloud_formation_override_property_configuration_isValid = false;
}

void OAIStartAssetBundleExportJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartAssetBundleExportJobRequest::fromJsonObject(QJsonObject json) {

    m_asset_bundle_export_job_id_isValid = ::OpenAPI::fromJsonValue(m_asset_bundle_export_job_id, json[QString("AssetBundleExportJobId")]);
    m_asset_bundle_export_job_id_isSet = !json[QString("AssetBundleExportJobId")].isNull() && m_asset_bundle_export_job_id_isValid;

    m_resource_arns_isValid = ::OpenAPI::fromJsonValue(m_resource_arns, json[QString("ResourceArns")]);
    m_resource_arns_isSet = !json[QString("ResourceArns")].isNull() && m_resource_arns_isValid;

    m_include_all_dependencies_isValid = ::OpenAPI::fromJsonValue(m_include_all_dependencies, json[QString("IncludeAllDependencies")]);
    m_include_all_dependencies_isSet = !json[QString("IncludeAllDependencies")].isNull() && m_include_all_dependencies_isValid;

    m_export_format_isValid = ::OpenAPI::fromJsonValue(m_export_format, json[QString("ExportFormat")]);
    m_export_format_isSet = !json[QString("ExportFormat")].isNull() && m_export_format_isValid;

    m_cloud_formation_override_property_configuration_isValid = ::OpenAPI::fromJsonValue(m_cloud_formation_override_property_configuration, json[QString("CloudFormationOverridePropertyConfiguration")]);
    m_cloud_formation_override_property_configuration_isSet = !json[QString("CloudFormationOverridePropertyConfiguration")].isNull() && m_cloud_formation_override_property_configuration_isValid;
}

QString OAIStartAssetBundleExportJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartAssetBundleExportJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_bundle_export_job_id_isSet) {
        obj.insert(QString("AssetBundleExportJobId"), ::OpenAPI::toJsonValue(m_asset_bundle_export_job_id));
    }
    if (m_resource_arns.isSet()) {
        obj.insert(QString("ResourceArns"), ::OpenAPI::toJsonValue(m_resource_arns));
    }
    if (m_include_all_dependencies_isSet) {
        obj.insert(QString("IncludeAllDependencies"), ::OpenAPI::toJsonValue(m_include_all_dependencies));
    }
    if (m_export_format.isSet()) {
        obj.insert(QString("ExportFormat"), ::OpenAPI::toJsonValue(m_export_format));
    }
    if (m_cloud_formation_override_property_configuration.isSet()) {
        obj.insert(QString("CloudFormationOverridePropertyConfiguration"), ::OpenAPI::toJsonValue(m_cloud_formation_override_property_configuration));
    }
    return obj;
}

QString OAIStartAssetBundleExportJobRequest::getAssetBundleExportJobId() const {
    return m_asset_bundle_export_job_id;
}
void OAIStartAssetBundleExportJobRequest::setAssetBundleExportJobId(const QString &asset_bundle_export_job_id) {
    m_asset_bundle_export_job_id = asset_bundle_export_job_id;
    m_asset_bundle_export_job_id_isSet = true;
}

bool OAIStartAssetBundleExportJobRequest::is_asset_bundle_export_job_id_Set() const{
    return m_asset_bundle_export_job_id_isSet;
}

bool OAIStartAssetBundleExportJobRequest::is_asset_bundle_export_job_id_Valid() const{
    return m_asset_bundle_export_job_id_isValid;
}

QList OAIStartAssetBundleExportJobRequest::getResourceArns() const {
    return m_resource_arns;
}
void OAIStartAssetBundleExportJobRequest::setResourceArns(const QList &resource_arns) {
    m_resource_arns = resource_arns;
    m_resource_arns_isSet = true;
}

bool OAIStartAssetBundleExportJobRequest::is_resource_arns_Set() const{
    return m_resource_arns_isSet;
}

bool OAIStartAssetBundleExportJobRequest::is_resource_arns_Valid() const{
    return m_resource_arns_isValid;
}

bool OAIStartAssetBundleExportJobRequest::getIncludeAllDependencies() const {
    return m_include_all_dependencies;
}
void OAIStartAssetBundleExportJobRequest::setIncludeAllDependencies(const bool &include_all_dependencies) {
    m_include_all_dependencies = include_all_dependencies;
    m_include_all_dependencies_isSet = true;
}

bool OAIStartAssetBundleExportJobRequest::is_include_all_dependencies_Set() const{
    return m_include_all_dependencies_isSet;
}

bool OAIStartAssetBundleExportJobRequest::is_include_all_dependencies_Valid() const{
    return m_include_all_dependencies_isValid;
}

OAIAssetBundleExportFormat OAIStartAssetBundleExportJobRequest::getExportFormat() const {
    return m_export_format;
}
void OAIStartAssetBundleExportJobRequest::setExportFormat(const OAIAssetBundleExportFormat &export_format) {
    m_export_format = export_format;
    m_export_format_isSet = true;
}

bool OAIStartAssetBundleExportJobRequest::is_export_format_Set() const{
    return m_export_format_isSet;
}

bool OAIStartAssetBundleExportJobRequest::is_export_format_Valid() const{
    return m_export_format_isValid;
}

OAIStartAssetBundleExportJobRequest_CloudFormationOverridePropertyConfiguration OAIStartAssetBundleExportJobRequest::getCloudFormationOverridePropertyConfiguration() const {
    return m_cloud_formation_override_property_configuration;
}
void OAIStartAssetBundleExportJobRequest::setCloudFormationOverridePropertyConfiguration(const OAIStartAssetBundleExportJobRequest_CloudFormationOverridePropertyConfiguration &cloud_formation_override_property_configuration) {
    m_cloud_formation_override_property_configuration = cloud_formation_override_property_configuration;
    m_cloud_formation_override_property_configuration_isSet = true;
}

bool OAIStartAssetBundleExportJobRequest::is_cloud_formation_override_property_configuration_Set() const{
    return m_cloud_formation_override_property_configuration_isSet;
}

bool OAIStartAssetBundleExportJobRequest::is_cloud_formation_override_property_configuration_Valid() const{
    return m_cloud_formation_override_property_configuration_isValid;
}

bool OAIStartAssetBundleExportJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_bundle_export_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_all_dependencies_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_formation_override_property_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartAssetBundleExportJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_asset_bundle_export_job_id_isValid && m_resource_arns_isValid && m_export_format_isValid && true;
}

} // namespace OpenAPI
