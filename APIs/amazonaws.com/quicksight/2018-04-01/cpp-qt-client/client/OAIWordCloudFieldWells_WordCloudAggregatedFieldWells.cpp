/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWordCloudFieldWells_WordCloudAggregatedFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::OAIWordCloudFieldWells_WordCloudAggregatedFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::OAIWordCloudFieldWells_WordCloudAggregatedFieldWells() {
    this->initializeModel();
}

OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::~OAIWordCloudFieldWells_WordCloudAggregatedFieldWells() {}

void OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::initializeModel() {

    m_group_by_isSet = false;
    m_group_by_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::fromJsonObject(QJsonObject json) {

    m_group_by_isValid = ::OpenAPI::fromJsonValue(m_group_by, json[QString("GroupBy")]);
    m_group_by_isSet = !json[QString("GroupBy")].isNull() && m_group_by_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("Size")]);
    m_size_isSet = !json[QString("Size")].isNull() && m_size_isValid;
}

QString OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_group_by.isSet()) {
        obj.insert(QString("GroupBy"), ::OpenAPI::toJsonValue(m_group_by));
    }
    if (m_size.isSet()) {
        obj.insert(QString("Size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QList OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::getGroupBy() const {
    return m_group_by;
}
void OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::setGroupBy(const QList &group_by) {
    m_group_by = group_by;
    m_group_by_isSet = true;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::is_group_by_Set() const{
    return m_group_by_isSet;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::is_group_by_Valid() const{
    return m_group_by_isValid;
}

QList OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::getSize() const {
    return m_size;
}
void OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::setSize(const QList &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::is_size_Set() const{
    return m_size_isSet;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_size.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWordCloudFieldWells_WordCloudAggregatedFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
