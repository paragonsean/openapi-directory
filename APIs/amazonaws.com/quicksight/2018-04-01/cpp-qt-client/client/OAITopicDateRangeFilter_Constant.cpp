/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicDateRangeFilter_Constant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicDateRangeFilter_Constant::OAITopicDateRangeFilter_Constant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicDateRangeFilter_Constant::OAITopicDateRangeFilter_Constant() {
    this->initializeModel();
}

OAITopicDateRangeFilter_Constant::~OAITopicDateRangeFilter_Constant() {}

void OAITopicDateRangeFilter_Constant::initializeModel() {

    m_constant_type_isSet = false;
    m_constant_type_isValid = false;

    m_range_constant_isSet = false;
    m_range_constant_isValid = false;
}

void OAITopicDateRangeFilter_Constant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicDateRangeFilter_Constant::fromJsonObject(QJsonObject json) {

    m_constant_type_isValid = ::OpenAPI::fromJsonValue(m_constant_type, json[QString("ConstantType")]);
    m_constant_type_isSet = !json[QString("ConstantType")].isNull() && m_constant_type_isValid;

    m_range_constant_isValid = ::OpenAPI::fromJsonValue(m_range_constant, json[QString("RangeConstant")]);
    m_range_constant_isSet = !json[QString("RangeConstant")].isNull() && m_range_constant_isValid;
}

QString OAITopicDateRangeFilter_Constant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicDateRangeFilter_Constant::asJsonObject() const {
    QJsonObject obj;
    if (m_constant_type.isSet()) {
        obj.insert(QString("ConstantType"), ::OpenAPI::toJsonValue(m_constant_type));
    }
    if (m_range_constant.isSet()) {
        obj.insert(QString("RangeConstant"), ::OpenAPI::toJsonValue(m_range_constant));
    }
    return obj;
}

OAIConstantType OAITopicDateRangeFilter_Constant::getConstantType() const {
    return m_constant_type;
}
void OAITopicDateRangeFilter_Constant::setConstantType(const OAIConstantType &constant_type) {
    m_constant_type = constant_type;
    m_constant_type_isSet = true;
}

bool OAITopicDateRangeFilter_Constant::is_constant_type_Set() const{
    return m_constant_type_isSet;
}

bool OAITopicDateRangeFilter_Constant::is_constant_type_Valid() const{
    return m_constant_type_isValid;
}

OAITopicRangeFilterConstant_RangeConstant OAITopicDateRangeFilter_Constant::getRangeConstant() const {
    return m_range_constant;
}
void OAITopicDateRangeFilter_Constant::setRangeConstant(const OAITopicRangeFilterConstant_RangeConstant &range_constant) {
    m_range_constant = range_constant;
    m_range_constant_isSet = true;
}

bool OAITopicDateRangeFilter_Constant::is_range_constant_Set() const{
    return m_range_constant_isSet;
}

bool OAITopicDateRangeFilter_Constant::is_range_constant_Valid() const{
    return m_range_constant_isValid;
}

bool OAITopicDateRangeFilter_Constant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constant_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_constant.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicDateRangeFilter_Constant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
