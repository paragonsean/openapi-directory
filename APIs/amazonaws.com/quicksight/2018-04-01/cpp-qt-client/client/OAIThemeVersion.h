/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThemeVersion.h
 *
 * A version of a theme.
 */

#ifndef OAIThemeVersion_H
#define OAIThemeVersion_H

#include <QJsonObject>

#include "OAIResourceStatus.h"
#include "OAIThemeVersion_Configuration.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThemeVersion_Configuration;

class OAIThemeVersion : public OAIObject {
public:
    OAIThemeVersion();
    OAIThemeVersion(QString json);
    ~OAIThemeVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getVersionNumber() const;
    void setVersionNumber(const qint32 &version_number);
    bool is_version_number_Set() const;
    bool is_version_number_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getBaseThemeId() const;
    void setBaseThemeId(const QString &base_theme_id);
    bool is_base_theme_id_Set() const;
    bool is_base_theme_id_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    OAIThemeVersion_Configuration getConfiguration() const;
    void setConfiguration(const OAIThemeVersion_Configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QList getErrors() const;
    void setErrors(const QList &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_version_number;
    bool m_version_number_isSet;
    bool m_version_number_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_base_theme_id;
    bool m_base_theme_id_isSet;
    bool m_base_theme_id_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    OAIThemeVersion_Configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QList m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThemeVersion)

#endif // OAIThemeVersion_H
