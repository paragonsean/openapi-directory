/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAccountCustomizationResponse_AccountCustomization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAccountCustomizationResponse_AccountCustomization::OAICreateAccountCustomizationResponse_AccountCustomization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAccountCustomizationResponse_AccountCustomization::OAICreateAccountCustomizationResponse_AccountCustomization() {
    this->initializeModel();
}

OAICreateAccountCustomizationResponse_AccountCustomization::~OAICreateAccountCustomizationResponse_AccountCustomization() {}

void OAICreateAccountCustomizationResponse_AccountCustomization::initializeModel() {

    m_default_theme_isSet = false;
    m_default_theme_isValid = false;

    m_default_email_customization_template_isSet = false;
    m_default_email_customization_template_isValid = false;
}

void OAICreateAccountCustomizationResponse_AccountCustomization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAccountCustomizationResponse_AccountCustomization::fromJsonObject(QJsonObject json) {

    m_default_theme_isValid = ::OpenAPI::fromJsonValue(m_default_theme, json[QString("DefaultTheme")]);
    m_default_theme_isSet = !json[QString("DefaultTheme")].isNull() && m_default_theme_isValid;

    m_default_email_customization_template_isValid = ::OpenAPI::fromJsonValue(m_default_email_customization_template, json[QString("DefaultEmailCustomizationTemplate")]);
    m_default_email_customization_template_isSet = !json[QString("DefaultEmailCustomizationTemplate")].isNull() && m_default_email_customization_template_isValid;
}

QString OAICreateAccountCustomizationResponse_AccountCustomization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAccountCustomizationResponse_AccountCustomization::asJsonObject() const {
    QJsonObject obj;
    if (m_default_theme_isSet) {
        obj.insert(QString("DefaultTheme"), ::OpenAPI::toJsonValue(m_default_theme));
    }
    if (m_default_email_customization_template_isSet) {
        obj.insert(QString("DefaultEmailCustomizationTemplate"), ::OpenAPI::toJsonValue(m_default_email_customization_template));
    }
    return obj;
}

QString OAICreateAccountCustomizationResponse_AccountCustomization::getDefaultTheme() const {
    return m_default_theme;
}
void OAICreateAccountCustomizationResponse_AccountCustomization::setDefaultTheme(const QString &default_theme) {
    m_default_theme = default_theme;
    m_default_theme_isSet = true;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::is_default_theme_Set() const{
    return m_default_theme_isSet;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::is_default_theme_Valid() const{
    return m_default_theme_isValid;
}

QString OAICreateAccountCustomizationResponse_AccountCustomization::getDefaultEmailCustomizationTemplate() const {
    return m_default_email_customization_template;
}
void OAICreateAccountCustomizationResponse_AccountCustomization::setDefaultEmailCustomizationTemplate(const QString &default_email_customization_template) {
    m_default_email_customization_template = default_email_customization_template;
    m_default_email_customization_template_isSet = true;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::is_default_email_customization_template_Set() const{
    return m_default_email_customization_template_isSet;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::is_default_email_customization_template_Valid() const{
    return m_default_email_customization_template_isValid;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_theme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_email_customization_template_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAccountCustomizationResponse_AccountCustomization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
