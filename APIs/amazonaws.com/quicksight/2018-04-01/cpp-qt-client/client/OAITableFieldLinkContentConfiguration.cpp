/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldLinkContentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldLinkContentConfiguration::OAITableFieldLinkContentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldLinkContentConfiguration::OAITableFieldLinkContentConfiguration() {
    this->initializeModel();
}

OAITableFieldLinkContentConfiguration::~OAITableFieldLinkContentConfiguration() {}

void OAITableFieldLinkContentConfiguration::initializeModel() {

    m_custom_text_content_isSet = false;
    m_custom_text_content_isValid = false;

    m_custom_icon_content_isSet = false;
    m_custom_icon_content_isValid = false;
}

void OAITableFieldLinkContentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldLinkContentConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_text_content_isValid = ::OpenAPI::fromJsonValue(m_custom_text_content, json[QString("CustomTextContent")]);
    m_custom_text_content_isSet = !json[QString("CustomTextContent")].isNull() && m_custom_text_content_isValid;

    m_custom_icon_content_isValid = ::OpenAPI::fromJsonValue(m_custom_icon_content, json[QString("CustomIconContent")]);
    m_custom_icon_content_isSet = !json[QString("CustomIconContent")].isNull() && m_custom_icon_content_isValid;
}

QString OAITableFieldLinkContentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldLinkContentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_text_content.isSet()) {
        obj.insert(QString("CustomTextContent"), ::OpenAPI::toJsonValue(m_custom_text_content));
    }
    if (m_custom_icon_content.isSet()) {
        obj.insert(QString("CustomIconContent"), ::OpenAPI::toJsonValue(m_custom_icon_content));
    }
    return obj;
}

OAITableFieldLinkContentConfiguration_CustomTextContent OAITableFieldLinkContentConfiguration::getCustomTextContent() const {
    return m_custom_text_content;
}
void OAITableFieldLinkContentConfiguration::setCustomTextContent(const OAITableFieldLinkContentConfiguration_CustomTextContent &custom_text_content) {
    m_custom_text_content = custom_text_content;
    m_custom_text_content_isSet = true;
}

bool OAITableFieldLinkContentConfiguration::is_custom_text_content_Set() const{
    return m_custom_text_content_isSet;
}

bool OAITableFieldLinkContentConfiguration::is_custom_text_content_Valid() const{
    return m_custom_text_content_isValid;
}

OAITableFieldLinkContentConfiguration_CustomIconContent OAITableFieldLinkContentConfiguration::getCustomIconContent() const {
    return m_custom_icon_content;
}
void OAITableFieldLinkContentConfiguration::setCustomIconContent(const OAITableFieldLinkContentConfiguration_CustomIconContent &custom_icon_content) {
    m_custom_icon_content = custom_icon_content;
    m_custom_icon_content_isSet = true;
}

bool OAITableFieldLinkContentConfiguration::is_custom_icon_content_Set() const{
    return m_custom_icon_content_isSet;
}

bool OAITableFieldLinkContentConfiguration::is_custom_icon_content_Valid() const{
    return m_custom_icon_content_isValid;
}

bool OAITableFieldLinkContentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_text_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_icon_content.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldLinkContentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
