/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIAMPolicyAssignmentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIAMPolicyAssignmentRequest::OAICreateIAMPolicyAssignmentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIAMPolicyAssignmentRequest::OAICreateIAMPolicyAssignmentRequest() {
    this->initializeModel();
}

OAICreateIAMPolicyAssignmentRequest::~OAICreateIAMPolicyAssignmentRequest() {}

void OAICreateIAMPolicyAssignmentRequest::initializeModel() {

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_assignment_status_isSet = false;
    m_assignment_status_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;

    m_identities_isSet = false;
    m_identities_isValid = false;
}

void OAICreateIAMPolicyAssignmentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIAMPolicyAssignmentRequest::fromJsonObject(QJsonObject json) {

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_assignment_status_isValid = ::OpenAPI::fromJsonValue(m_assignment_status, json[QString("AssignmentStatus")]);
    m_assignment_status_isSet = !json[QString("AssignmentStatus")].isNull() && m_assignment_status_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("PolicyArn")]);
    m_policy_arn_isSet = !json[QString("PolicyArn")].isNull() && m_policy_arn_isValid;

    m_identities_isValid = ::OpenAPI::fromJsonValue(m_identities, json[QString("Identities")]);
    m_identities_isSet = !json[QString("Identities")].isNull() && m_identities_isValid;
}

QString OAICreateIAMPolicyAssignmentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIAMPolicyAssignmentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_assignment_status.isSet()) {
        obj.insert(QString("AssignmentStatus"), ::OpenAPI::toJsonValue(m_assignment_status));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("PolicyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    if (m_identities.isSet()) {
        obj.insert(QString("Identities"), ::OpenAPI::toJsonValue(m_identities));
    }
    return obj;
}

QString OAICreateIAMPolicyAssignmentRequest::getAssignmentName() const {
    return m_assignment_name;
}
void OAICreateIAMPolicyAssignmentRequest::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAICreateIAMPolicyAssignmentRequest::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAICreateIAMPolicyAssignmentRequest::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

OAIAssignmentStatus OAICreateIAMPolicyAssignmentRequest::getAssignmentStatus() const {
    return m_assignment_status;
}
void OAICreateIAMPolicyAssignmentRequest::setAssignmentStatus(const OAIAssignmentStatus &assignment_status) {
    m_assignment_status = assignment_status;
    m_assignment_status_isSet = true;
}

bool OAICreateIAMPolicyAssignmentRequest::is_assignment_status_Set() const{
    return m_assignment_status_isSet;
}

bool OAICreateIAMPolicyAssignmentRequest::is_assignment_status_Valid() const{
    return m_assignment_status_isValid;
}

QString OAICreateIAMPolicyAssignmentRequest::getPolicyArn() const {
    return m_policy_arn;
}
void OAICreateIAMPolicyAssignmentRequest::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAICreateIAMPolicyAssignmentRequest::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAICreateIAMPolicyAssignmentRequest::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

QMap OAICreateIAMPolicyAssignmentRequest::getIdentities() const {
    return m_identities;
}
void OAICreateIAMPolicyAssignmentRequest::setIdentities(const QMap &identities) {
    m_identities = identities;
    m_identities_isSet = true;
}

bool OAICreateIAMPolicyAssignmentRequest::is_identities_Set() const{
    return m_identities_isSet;
}

bool OAICreateIAMPolicyAssignmentRequest::is_identities_Valid() const{
    return m_identities_isValid;
}

bool OAICreateIAMPolicyAssignmentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identities.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIAMPolicyAssignmentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assignment_name_isValid && m_assignment_status_isValid && true;
}

} // namespace OpenAPI
