/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateVPCConnectionRequest.h
 *
 * 
 */

#ifndef OAICreateVPCConnectionRequest_H
#define OAICreateVPCConnectionRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateVPCConnectionRequest : public OAIObject {
public:
    OAICreateVPCConnectionRequest();
    OAICreateVPCConnectionRequest(QString json);
    ~OAICreateVPCConnectionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVpcConnectionId() const;
    void setVpcConnectionId(const QString &vpc_connection_id);
    bool is_vpc_connection_id_Set() const;
    bool is_vpc_connection_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getSecurityGroupIds() const;
    void setSecurityGroupIds(const QList &security_group_ids);
    bool is_security_group_ids_Set() const;
    bool is_security_group_ids_Valid() const;

    QList getDnsResolvers() const;
    void setDnsResolvers(const QList &dns_resolvers);
    bool is_dns_resolvers_Set() const;
    bool is_dns_resolvers_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vpc_connection_id;
    bool m_vpc_connection_id_isSet;
    bool m_vpc_connection_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_security_group_ids;
    bool m_security_group_ids_isSet;
    bool m_security_group_ids_isValid;

    QList m_dns_resolvers;
    bool m_dns_resolvers_isSet;
    bool m_dns_resolvers_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateVPCConnectionRequest)

#endif // OAICreateVPCConnectionRequest_H
