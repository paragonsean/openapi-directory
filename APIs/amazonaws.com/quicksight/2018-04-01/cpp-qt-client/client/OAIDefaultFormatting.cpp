/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultFormatting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultFormatting::OAIDefaultFormatting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultFormatting::OAIDefaultFormatting() {
    this->initializeModel();
}

OAIDefaultFormatting::~OAIDefaultFormatting() {}

void OAIDefaultFormatting::initializeModel() {

    m_display_format_isSet = false;
    m_display_format_isValid = false;

    m_display_format_options_isSet = false;
    m_display_format_options_isValid = false;
}

void OAIDefaultFormatting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultFormatting::fromJsonObject(QJsonObject json) {

    m_display_format_isValid = ::OpenAPI::fromJsonValue(m_display_format, json[QString("DisplayFormat")]);
    m_display_format_isSet = !json[QString("DisplayFormat")].isNull() && m_display_format_isValid;

    m_display_format_options_isValid = ::OpenAPI::fromJsonValue(m_display_format_options, json[QString("DisplayFormatOptions")]);
    m_display_format_options_isSet = !json[QString("DisplayFormatOptions")].isNull() && m_display_format_options_isValid;
}

QString OAIDefaultFormatting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultFormatting::asJsonObject() const {
    QJsonObject obj;
    if (m_display_format.isSet()) {
        obj.insert(QString("DisplayFormat"), ::OpenAPI::toJsonValue(m_display_format));
    }
    if (m_display_format_options.isSet()) {
        obj.insert(QString("DisplayFormatOptions"), ::OpenAPI::toJsonValue(m_display_format_options));
    }
    return obj;
}

OAIDisplayFormat OAIDefaultFormatting::getDisplayFormat() const {
    return m_display_format;
}
void OAIDefaultFormatting::setDisplayFormat(const OAIDisplayFormat &display_format) {
    m_display_format = display_format;
    m_display_format_isSet = true;
}

bool OAIDefaultFormatting::is_display_format_Set() const{
    return m_display_format_isSet;
}

bool OAIDefaultFormatting::is_display_format_Valid() const{
    return m_display_format_isValid;
}

OAIDefaultFormatting_DisplayFormatOptions OAIDefaultFormatting::getDisplayFormatOptions() const {
    return m_display_format_options;
}
void OAIDefaultFormatting::setDisplayFormatOptions(const OAIDefaultFormatting_DisplayFormatOptions &display_format_options) {
    m_display_format_options = display_format_options;
    m_display_format_options_isSet = true;
}

bool OAIDefaultFormatting::is_display_format_options_Set() const{
    return m_display_format_options_isSet;
}

bool OAIDefaultFormatting::is_display_format_options_Valid() const{
    return m_display_format_options_isValid;
}

bool OAIDefaultFormatting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_format_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultFormatting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
