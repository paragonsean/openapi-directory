/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableSortConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableSortConfiguration::OAITableSortConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableSortConfiguration::OAITableSortConfiguration() {
    this->initializeModel();
}

OAITableSortConfiguration::~OAITableSortConfiguration() {}

void OAITableSortConfiguration::initializeModel() {

    m_row_sort_isSet = false;
    m_row_sort_isValid = false;

    m_pagination_configuration_isSet = false;
    m_pagination_configuration_isValid = false;
}

void OAITableSortConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableSortConfiguration::fromJsonObject(QJsonObject json) {

    m_row_sort_isValid = ::OpenAPI::fromJsonValue(m_row_sort, json[QString("RowSort")]);
    m_row_sort_isSet = !json[QString("RowSort")].isNull() && m_row_sort_isValid;

    m_pagination_configuration_isValid = ::OpenAPI::fromJsonValue(m_pagination_configuration, json[QString("PaginationConfiguration")]);
    m_pagination_configuration_isSet = !json[QString("PaginationConfiguration")].isNull() && m_pagination_configuration_isValid;
}

QString OAITableSortConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableSortConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_row_sort.isSet()) {
        obj.insert(QString("RowSort"), ::OpenAPI::toJsonValue(m_row_sort));
    }
    if (m_pagination_configuration.isSet()) {
        obj.insert(QString("PaginationConfiguration"), ::OpenAPI::toJsonValue(m_pagination_configuration));
    }
    return obj;
}

QList OAITableSortConfiguration::getRowSort() const {
    return m_row_sort;
}
void OAITableSortConfiguration::setRowSort(const QList &row_sort) {
    m_row_sort = row_sort;
    m_row_sort_isSet = true;
}

bool OAITableSortConfiguration::is_row_sort_Set() const{
    return m_row_sort_isSet;
}

bool OAITableSortConfiguration::is_row_sort_Valid() const{
    return m_row_sort_isValid;
}

OAITableSortConfiguration_PaginationConfiguration OAITableSortConfiguration::getPaginationConfiguration() const {
    return m_pagination_configuration;
}
void OAITableSortConfiguration::setPaginationConfiguration(const OAITableSortConfiguration_PaginationConfiguration &pagination_configuration) {
    m_pagination_configuration = pagination_configuration;
    m_pagination_configuration_isSet = true;
}

bool OAITableSortConfiguration::is_pagination_configuration_Set() const{
    return m_pagination_configuration_isSet;
}

bool OAITableSortConfiguration::is_pagination_configuration_Valid() const{
    return m_pagination_configuration_isValid;
}

bool OAITableSortConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_sort.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pagination_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableSortConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
