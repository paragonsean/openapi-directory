/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITextFieldControlDisplayOptions_PlaceholderOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITextFieldControlDisplayOptions_PlaceholderOptions::OAITextFieldControlDisplayOptions_PlaceholderOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITextFieldControlDisplayOptions_PlaceholderOptions::OAITextFieldControlDisplayOptions_PlaceholderOptions() {
    this->initializeModel();
}

OAITextFieldControlDisplayOptions_PlaceholderOptions::~OAITextFieldControlDisplayOptions_PlaceholderOptions() {}

void OAITextFieldControlDisplayOptions_PlaceholderOptions::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;
}

void OAITextFieldControlDisplayOptions_PlaceholderOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITextFieldControlDisplayOptions_PlaceholderOptions::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;
}

QString OAITextFieldControlDisplayOptions_PlaceholderOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITextFieldControlDisplayOptions_PlaceholderOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    return obj;
}

OAIVisibility OAITextFieldControlDisplayOptions_PlaceholderOptions::getVisibility() const {
    return m_visibility;
}
void OAITextFieldControlDisplayOptions_PlaceholderOptions::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAITextFieldControlDisplayOptions_PlaceholderOptions::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAITextFieldControlDisplayOptions_PlaceholderOptions::is_visibility_Valid() const{
    return m_visibility_isValid;
}

bool OAITextFieldControlDisplayOptions_PlaceholderOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITextFieldControlDisplayOptions_PlaceholderOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
