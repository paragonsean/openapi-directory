/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalPlacesConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalPlacesConfiguration::OAIDecimalPlacesConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalPlacesConfiguration::OAIDecimalPlacesConfiguration() {
    this->initializeModel();
}

OAIDecimalPlacesConfiguration::~OAIDecimalPlacesConfiguration() {}

void OAIDecimalPlacesConfiguration::initializeModel() {

    m_decimal_places_isSet = false;
    m_decimal_places_isValid = false;
}

void OAIDecimalPlacesConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalPlacesConfiguration::fromJsonObject(QJsonObject json) {

    m_decimal_places_isValid = ::OpenAPI::fromJsonValue(m_decimal_places, json[QString("DecimalPlaces")]);
    m_decimal_places_isSet = !json[QString("DecimalPlaces")].isNull() && m_decimal_places_isValid;
}

QString OAIDecimalPlacesConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalPlacesConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_decimal_places_isSet) {
        obj.insert(QString("DecimalPlaces"), ::OpenAPI::toJsonValue(m_decimal_places));
    }
    return obj;
}

qint32 OAIDecimalPlacesConfiguration::getDecimalPlaces() const {
    return m_decimal_places;
}
void OAIDecimalPlacesConfiguration::setDecimalPlaces(const qint32 &decimal_places) {
    m_decimal_places = decimal_places;
    m_decimal_places_isSet = true;
}

bool OAIDecimalPlacesConfiguration::is_decimal_places_Set() const{
    return m_decimal_places_isSet;
}

bool OAIDecimalPlacesConfiguration::is_decimal_places_Valid() const{
    return m_decimal_places_isValid;
}

bool OAIDecimalPlacesConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_decimal_places_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalPlacesConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_decimal_places_isValid && true;
}

} // namespace OpenAPI
