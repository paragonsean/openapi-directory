/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataSource_request_DataSourceParameters_OracleParameters.h
 *
 * 
 */

#ifndef OAICreateDataSource_request_DataSourceParameters_OracleParameters_H
#define OAICreateDataSource_request_DataSourceParameters_OracleParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateDataSource_request_DataSourceParameters_OracleParameters : public OAIObject {
public:
    OAICreateDataSource_request_DataSourceParameters_OracleParameters();
    OAICreateDataSource_request_DataSourceParameters_OracleParameters(QString json);
    ~OAICreateDataSource_request_DataSourceParameters_OracleParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getDatabase() const;
    void setDatabase(const QString &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_database;
    bool m_database_isSet;
    bool m_database_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataSource_request_DataSourceParameters_OracleParameters)

#endif // OAICreateDataSource_request_DataSourceParameters_OracleParameters_H
