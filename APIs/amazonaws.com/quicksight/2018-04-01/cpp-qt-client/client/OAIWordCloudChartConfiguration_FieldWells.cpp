/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWordCloudChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWordCloudChartConfiguration_FieldWells::OAIWordCloudChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWordCloudChartConfiguration_FieldWells::OAIWordCloudChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAIWordCloudChartConfiguration_FieldWells::~OAIWordCloudChartConfiguration_FieldWells() {}

void OAIWordCloudChartConfiguration_FieldWells::initializeModel() {

    m_word_cloud_aggregated_field_wells_isSet = false;
    m_word_cloud_aggregated_field_wells_isValid = false;
}

void OAIWordCloudChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWordCloudChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_word_cloud_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_word_cloud_aggregated_field_wells, json[QString("WordCloudAggregatedFieldWells")]);
    m_word_cloud_aggregated_field_wells_isSet = !json[QString("WordCloudAggregatedFieldWells")].isNull() && m_word_cloud_aggregated_field_wells_isValid;
}

QString OAIWordCloudChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWordCloudChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_word_cloud_aggregated_field_wells.isSet()) {
        obj.insert(QString("WordCloudAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_word_cloud_aggregated_field_wells));
    }
    return obj;
}

OAIWordCloudFieldWells_WordCloudAggregatedFieldWells OAIWordCloudChartConfiguration_FieldWells::getWordCloudAggregatedFieldWells() const {
    return m_word_cloud_aggregated_field_wells;
}
void OAIWordCloudChartConfiguration_FieldWells::setWordCloudAggregatedFieldWells(const OAIWordCloudFieldWells_WordCloudAggregatedFieldWells &word_cloud_aggregated_field_wells) {
    m_word_cloud_aggregated_field_wells = word_cloud_aggregated_field_wells;
    m_word_cloud_aggregated_field_wells_isSet = true;
}

bool OAIWordCloudChartConfiguration_FieldWells::is_word_cloud_aggregated_field_wells_Set() const{
    return m_word_cloud_aggregated_field_wells_isSet;
}

bool OAIWordCloudChartConfiguration_FieldWells::is_word_cloud_aggregated_field_wells_Valid() const{
    return m_word_cloud_aggregated_field_wells_isValid;
}

bool OAIWordCloudChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_word_cloud_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWordCloudChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
