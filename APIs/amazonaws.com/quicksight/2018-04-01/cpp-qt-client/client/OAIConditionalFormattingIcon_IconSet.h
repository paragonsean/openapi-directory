/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalFormattingIcon_IconSet.h
 *
 * 
 */

#ifndef OAIConditionalFormattingIcon_IconSet_H
#define OAIConditionalFormattingIcon_IconSet_H

#include <QJsonObject>

#include "OAIConditionalFormattingIconSetType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConditionalFormattingIcon_IconSet : public OAIObject {
public:
    OAIConditionalFormattingIcon_IconSet();
    OAIConditionalFormattingIcon_IconSet(QString json);
    ~OAIConditionalFormattingIcon_IconSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAIConditionalFormattingIconSetType getIconSetType() const;
    void setIconSetType(const OAIConditionalFormattingIconSetType &icon_set_type);
    bool is_icon_set_type_Set() const;
    bool is_icon_set_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAIConditionalFormattingIconSetType m_icon_set_type;
    bool m_icon_set_type_isSet;
    bool m_icon_set_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalFormattingIcon_IconSet)

#endif // OAIConditionalFormattingIcon_IconSet_H
