/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePublicSharingSettingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePublicSharingSettingsRequest::OAIUpdatePublicSharingSettingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePublicSharingSettingsRequest::OAIUpdatePublicSharingSettingsRequest() {
    this->initializeModel();
}

OAIUpdatePublicSharingSettingsRequest::~OAIUpdatePublicSharingSettingsRequest() {}

void OAIUpdatePublicSharingSettingsRequest::initializeModel() {

    m_public_sharing_enabled_isSet = false;
    m_public_sharing_enabled_isValid = false;
}

void OAIUpdatePublicSharingSettingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePublicSharingSettingsRequest::fromJsonObject(QJsonObject json) {

    m_public_sharing_enabled_isValid = ::OpenAPI::fromJsonValue(m_public_sharing_enabled, json[QString("PublicSharingEnabled")]);
    m_public_sharing_enabled_isSet = !json[QString("PublicSharingEnabled")].isNull() && m_public_sharing_enabled_isValid;
}

QString OAIUpdatePublicSharingSettingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePublicSharingSettingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_public_sharing_enabled_isSet) {
        obj.insert(QString("PublicSharingEnabled"), ::OpenAPI::toJsonValue(m_public_sharing_enabled));
    }
    return obj;
}

bool OAIUpdatePublicSharingSettingsRequest::getPublicSharingEnabled() const {
    return m_public_sharing_enabled;
}
void OAIUpdatePublicSharingSettingsRequest::setPublicSharingEnabled(const bool &public_sharing_enabled) {
    m_public_sharing_enabled = public_sharing_enabled;
    m_public_sharing_enabled_isSet = true;
}

bool OAIUpdatePublicSharingSettingsRequest::is_public_sharing_enabled_Set() const{
    return m_public_sharing_enabled_isSet;
}

bool OAIUpdatePublicSharingSettingsRequest::is_public_sharing_enabled_Valid() const{
    return m_public_sharing_enabled_isValid;
}

bool OAIUpdatePublicSharingSettingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_sharing_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePublicSharingSettingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
