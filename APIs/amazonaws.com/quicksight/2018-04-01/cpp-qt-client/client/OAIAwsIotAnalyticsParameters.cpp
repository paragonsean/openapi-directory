/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAwsIotAnalyticsParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAwsIotAnalyticsParameters::OAIAwsIotAnalyticsParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAwsIotAnalyticsParameters::OAIAwsIotAnalyticsParameters() {
    this->initializeModel();
}

OAIAwsIotAnalyticsParameters::~OAIAwsIotAnalyticsParameters() {}

void OAIAwsIotAnalyticsParameters::initializeModel() {

    m_data_set_name_isSet = false;
    m_data_set_name_isValid = false;
}

void OAIAwsIotAnalyticsParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAwsIotAnalyticsParameters::fromJsonObject(QJsonObject json) {

    m_data_set_name_isValid = ::OpenAPI::fromJsonValue(m_data_set_name, json[QString("DataSetName")]);
    m_data_set_name_isSet = !json[QString("DataSetName")].isNull() && m_data_set_name_isValid;
}

QString OAIAwsIotAnalyticsParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAwsIotAnalyticsParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_data_set_name_isSet) {
        obj.insert(QString("DataSetName"), ::OpenAPI::toJsonValue(m_data_set_name));
    }
    return obj;
}

QString OAIAwsIotAnalyticsParameters::getDataSetName() const {
    return m_data_set_name;
}
void OAIAwsIotAnalyticsParameters::setDataSetName(const QString &data_set_name) {
    m_data_set_name = data_set_name;
    m_data_set_name_isSet = true;
}

bool OAIAwsIotAnalyticsParameters::is_data_set_name_Set() const{
    return m_data_set_name_isSet;
}

bool OAIAwsIotAnalyticsParameters::is_data_set_name_Valid() const{
    return m_data_set_name_isValid;
}

bool OAIAwsIotAnalyticsParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAwsIotAnalyticsParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_set_name_isValid && true;
}

} // namespace OpenAPI
