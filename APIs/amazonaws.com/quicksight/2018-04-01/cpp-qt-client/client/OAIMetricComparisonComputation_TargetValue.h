/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricComparisonComputation_TargetValue.h
 *
 * 
 */

#ifndef OAIMetricComparisonComputation_TargetValue_H
#define OAIMetricComparisonComputation_TargetValue_H

#include <QJsonObject>

#include "OAIMeasureField_CalculatedMeasureField.h"
#include "OAIMeasureField_CategoricalMeasureField.h"
#include "OAIMeasureField_DateMeasureField.h"
#include "OAIMeasureField_NumericalMeasureField.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMeasureField_NumericalMeasureField;
class OAIMeasureField_CategoricalMeasureField;
class OAIMeasureField_DateMeasureField;
class OAIMeasureField_CalculatedMeasureField;

class OAIMetricComparisonComputation_TargetValue : public OAIObject {
public:
    OAIMetricComparisonComputation_TargetValue();
    OAIMetricComparisonComputation_TargetValue(QString json);
    ~OAIMetricComparisonComputation_TargetValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMeasureField_NumericalMeasureField getNumericalMeasureField() const;
    void setNumericalMeasureField(const OAIMeasureField_NumericalMeasureField &numerical_measure_field);
    bool is_numerical_measure_field_Set() const;
    bool is_numerical_measure_field_Valid() const;

    OAIMeasureField_CategoricalMeasureField getCategoricalMeasureField() const;
    void setCategoricalMeasureField(const OAIMeasureField_CategoricalMeasureField &categorical_measure_field);
    bool is_categorical_measure_field_Set() const;
    bool is_categorical_measure_field_Valid() const;

    OAIMeasureField_DateMeasureField getDateMeasureField() const;
    void setDateMeasureField(const OAIMeasureField_DateMeasureField &date_measure_field);
    bool is_date_measure_field_Set() const;
    bool is_date_measure_field_Valid() const;

    OAIMeasureField_CalculatedMeasureField getCalculatedMeasureField() const;
    void setCalculatedMeasureField(const OAIMeasureField_CalculatedMeasureField &calculated_measure_field);
    bool is_calculated_measure_field_Set() const;
    bool is_calculated_measure_field_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMeasureField_NumericalMeasureField m_numerical_measure_field;
    bool m_numerical_measure_field_isSet;
    bool m_numerical_measure_field_isValid;

    OAIMeasureField_CategoricalMeasureField m_categorical_measure_field;
    bool m_categorical_measure_field_isSet;
    bool m_categorical_measure_field_isValid;

    OAIMeasureField_DateMeasureField m_date_measure_field;
    bool m_date_measure_field_isSet;
    bool m_date_measure_field_isValid;

    OAIMeasureField_CalculatedMeasureField m_calculated_measure_field;
    bool m_calculated_measure_field_isSet;
    bool m_calculated_measure_field_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricComparisonComputation_TargetValue)

#endif // OAIMetricComparisonComputation_TargetValue_H
