/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRenameColumnOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRenameColumnOperation::OAIRenameColumnOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRenameColumnOperation::OAIRenameColumnOperation() {
    this->initializeModel();
}

OAIRenameColumnOperation::~OAIRenameColumnOperation() {}

void OAIRenameColumnOperation::initializeModel() {

    m_column_name_isSet = false;
    m_column_name_isValid = false;

    m_new_column_name_isSet = false;
    m_new_column_name_isValid = false;
}

void OAIRenameColumnOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRenameColumnOperation::fromJsonObject(QJsonObject json) {

    m_column_name_isValid = ::OpenAPI::fromJsonValue(m_column_name, json[QString("ColumnName")]);
    m_column_name_isSet = !json[QString("ColumnName")].isNull() && m_column_name_isValid;

    m_new_column_name_isValid = ::OpenAPI::fromJsonValue(m_new_column_name, json[QString("NewColumnName")]);
    m_new_column_name_isSet = !json[QString("NewColumnName")].isNull() && m_new_column_name_isValid;
}

QString OAIRenameColumnOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRenameColumnOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_column_name_isSet) {
        obj.insert(QString("ColumnName"), ::OpenAPI::toJsonValue(m_column_name));
    }
    if (m_new_column_name_isSet) {
        obj.insert(QString("NewColumnName"), ::OpenAPI::toJsonValue(m_new_column_name));
    }
    return obj;
}

QString OAIRenameColumnOperation::getColumnName() const {
    return m_column_name;
}
void OAIRenameColumnOperation::setColumnName(const QString &column_name) {
    m_column_name = column_name;
    m_column_name_isSet = true;
}

bool OAIRenameColumnOperation::is_column_name_Set() const{
    return m_column_name_isSet;
}

bool OAIRenameColumnOperation::is_column_name_Valid() const{
    return m_column_name_isValid;
}

QString OAIRenameColumnOperation::getNewColumnName() const {
    return m_new_column_name;
}
void OAIRenameColumnOperation::setNewColumnName(const QString &new_column_name) {
    m_new_column_name = new_column_name;
    m_new_column_name_isSet = true;
}

bool OAIRenameColumnOperation::is_new_column_name_Set() const{
    return m_new_column_name_isSet;
}

bool OAIRenameColumnOperation::is_new_column_name_Valid() const{
    return m_new_column_name_isValid;
}

bool OAIRenameColumnOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRenameColumnOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_column_name_isValid && m_new_column_name_isValid && true;
}

} // namespace OpenAPI
