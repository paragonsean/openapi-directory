/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextAreaControlDisplayOptions.h
 *
 * The display options of a control.
 */

#ifndef OAITextAreaControlDisplayOptions_H
#define OAITextAreaControlDisplayOptions_H

#include <QJsonObject>

#include "OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions.h"
#include "OAIDateTimePickerControlDisplayOptions_TitleOptions.h"
#include "OAITextAreaControlDisplayOptions_PlaceholderOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDateTimePickerControlDisplayOptions_TitleOptions;
class OAITextAreaControlDisplayOptions_PlaceholderOptions;
class OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions;

class OAITextAreaControlDisplayOptions : public OAIObject {
public:
    OAITextAreaControlDisplayOptions();
    OAITextAreaControlDisplayOptions(QString json);
    ~OAITextAreaControlDisplayOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDateTimePickerControlDisplayOptions_TitleOptions getTitleOptions() const;
    void setTitleOptions(const OAIDateTimePickerControlDisplayOptions_TitleOptions &title_options);
    bool is_title_options_Set() const;
    bool is_title_options_Valid() const;

    OAITextAreaControlDisplayOptions_PlaceholderOptions getPlaceholderOptions() const;
    void setPlaceholderOptions(const OAITextAreaControlDisplayOptions_PlaceholderOptions &placeholder_options);
    bool is_placeholder_options_Set() const;
    bool is_placeholder_options_Valid() const;

    OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions getInfoIconLabelOptions() const;
    void setInfoIconLabelOptions(const OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions &info_icon_label_options);
    bool is_info_icon_label_options_Set() const;
    bool is_info_icon_label_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDateTimePickerControlDisplayOptions_TitleOptions m_title_options;
    bool m_title_options_isSet;
    bool m_title_options_isValid;

    OAITextAreaControlDisplayOptions_PlaceholderOptions m_placeholder_options;
    bool m_placeholder_options_isSet;
    bool m_placeholder_options_isValid;

    OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions m_info_icon_label_options;
    bool m_info_icon_label_options_isSet;
    bool m_info_icon_label_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextAreaControlDisplayOptions)

#endif // OAITextAreaControlDisplayOptions_H
