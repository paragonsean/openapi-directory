/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRadarChartVisual_ChartConfiguration.h
 *
 * 
 */

#ifndef OAIRadarChartVisual_ChartConfiguration_H
#define OAIRadarChartVisual_ChartConfiguration_H

#include <QJsonObject>

#include "OAIBarChartConfiguration_Legend.h"
#include "OAIBarChartConfiguration_VisualPalette.h"
#include "OAIRadarChartAxesRangeScale.h"
#include "OAIRadarChartConfiguration_BaseSeriesSettings.h"
#include "OAIRadarChartConfiguration_CategoryAxis.h"
#include "OAIRadarChartConfiguration_CategoryLabelOptions.h"
#include "OAIRadarChartConfiguration_ColorAxis.h"
#include "OAIRadarChartConfiguration_ColorLabelOptions.h"
#include "OAIRadarChartConfiguration_FieldWells.h"
#include "OAIRadarChartConfiguration_SortConfiguration.h"
#include "OAIRadarChartShape.h"
#include "OAIVisibility.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRadarChartConfiguration_FieldWells;
class OAIRadarChartConfiguration_SortConfiguration;
class OAIRadarChartConfiguration_BaseSeriesSettings;
class OAIBarChartConfiguration_VisualPalette;
class OAIRadarChartConfiguration_CategoryAxis;
class OAIRadarChartConfiguration_CategoryLabelOptions;
class OAIRadarChartConfiguration_ColorAxis;
class OAIRadarChartConfiguration_ColorLabelOptions;
class OAIBarChartConfiguration_Legend;

class OAIRadarChartVisual_ChartConfiguration : public OAIObject {
public:
    OAIRadarChartVisual_ChartConfiguration();
    OAIRadarChartVisual_ChartConfiguration(QString json);
    ~OAIRadarChartVisual_ChartConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRadarChartConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAIRadarChartConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAIRadarChartConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAIRadarChartConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAIRadarChartShape getShape() const;
    void setShape(const OAIRadarChartShape &shape);
    bool is_shape_Set() const;
    bool is_shape_Valid() const;

    OAIRadarChartConfiguration_BaseSeriesSettings getBaseSeriesSettings() const;
    void setBaseSeriesSettings(const OAIRadarChartConfiguration_BaseSeriesSettings &base_series_settings);
    bool is_base_series_settings_Set() const;
    bool is_base_series_settings_Valid() const;

    double getStartAngle() const;
    void setStartAngle(const double &start_angle);
    bool is_start_angle_Set() const;
    bool is_start_angle_Valid() const;

    OAIBarChartConfiguration_VisualPalette getVisualPalette() const;
    void setVisualPalette(const OAIBarChartConfiguration_VisualPalette &visual_palette);
    bool is_visual_palette_Set() const;
    bool is_visual_palette_Valid() const;

    OAIVisibility getAlternateBandColorsVisibility() const;
    void setAlternateBandColorsVisibility(const OAIVisibility &alternate_band_colors_visibility);
    bool is_alternate_band_colors_visibility_Set() const;
    bool is_alternate_band_colors_visibility_Valid() const;

    QString getAlternateBandEvenColor() const;
    void setAlternateBandEvenColor(const QString &alternate_band_even_color);
    bool is_alternate_band_even_color_Set() const;
    bool is_alternate_band_even_color_Valid() const;

    QString getAlternateBandOddColor() const;
    void setAlternateBandOddColor(const QString &alternate_band_odd_color);
    bool is_alternate_band_odd_color_Set() const;
    bool is_alternate_band_odd_color_Valid() const;

    OAIRadarChartConfiguration_CategoryAxis getCategoryAxis() const;
    void setCategoryAxis(const OAIRadarChartConfiguration_CategoryAxis &category_axis);
    bool is_category_axis_Set() const;
    bool is_category_axis_Valid() const;

    OAIRadarChartConfiguration_CategoryLabelOptions getCategoryLabelOptions() const;
    void setCategoryLabelOptions(const OAIRadarChartConfiguration_CategoryLabelOptions &category_label_options);
    bool is_category_label_options_Set() const;
    bool is_category_label_options_Valid() const;

    OAIRadarChartConfiguration_ColorAxis getColorAxis() const;
    void setColorAxis(const OAIRadarChartConfiguration_ColorAxis &color_axis);
    bool is_color_axis_Set() const;
    bool is_color_axis_Valid() const;

    OAIRadarChartConfiguration_ColorLabelOptions getColorLabelOptions() const;
    void setColorLabelOptions(const OAIRadarChartConfiguration_ColorLabelOptions &color_label_options);
    bool is_color_label_options_Set() const;
    bool is_color_label_options_Valid() const;

    OAIBarChartConfiguration_Legend getLegend() const;
    void setLegend(const OAIBarChartConfiguration_Legend &legend);
    bool is_legend_Set() const;
    bool is_legend_Valid() const;

    OAIRadarChartAxesRangeScale getAxesRangeScale() const;
    void setAxesRangeScale(const OAIRadarChartAxesRangeScale &axes_range_scale);
    bool is_axes_range_scale_Set() const;
    bool is_axes_range_scale_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRadarChartConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAIRadarChartConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAIRadarChartShape m_shape;
    bool m_shape_isSet;
    bool m_shape_isValid;

    OAIRadarChartConfiguration_BaseSeriesSettings m_base_series_settings;
    bool m_base_series_settings_isSet;
    bool m_base_series_settings_isValid;

    double m_start_angle;
    bool m_start_angle_isSet;
    bool m_start_angle_isValid;

    OAIBarChartConfiguration_VisualPalette m_visual_palette;
    bool m_visual_palette_isSet;
    bool m_visual_palette_isValid;

    OAIVisibility m_alternate_band_colors_visibility;
    bool m_alternate_band_colors_visibility_isSet;
    bool m_alternate_band_colors_visibility_isValid;

    QString m_alternate_band_even_color;
    bool m_alternate_band_even_color_isSet;
    bool m_alternate_band_even_color_isValid;

    QString m_alternate_band_odd_color;
    bool m_alternate_band_odd_color_isSet;
    bool m_alternate_band_odd_color_isValid;

    OAIRadarChartConfiguration_CategoryAxis m_category_axis;
    bool m_category_axis_isSet;
    bool m_category_axis_isValid;

    OAIRadarChartConfiguration_CategoryLabelOptions m_category_label_options;
    bool m_category_label_options_isSet;
    bool m_category_label_options_isValid;

    OAIRadarChartConfiguration_ColorAxis m_color_axis;
    bool m_color_axis_isSet;
    bool m_color_axis_isValid;

    OAIRadarChartConfiguration_ColorLabelOptions m_color_label_options;
    bool m_color_label_options_isSet;
    bool m_color_label_options_isValid;

    OAIBarChartConfiguration_Legend m_legend;
    bool m_legend_isSet;
    bool m_legend_isValid;

    OAIRadarChartAxesRangeScale m_axes_range_scale;
    bool m_axes_range_scale_isSet;
    bool m_axes_range_scale_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRadarChartVisual_ChartConfiguration)

#endif // OAIRadarChartVisual_ChartConfiguration_H
