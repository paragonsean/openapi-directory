/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICollectiveConstant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICollectiveConstant::OAICollectiveConstant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICollectiveConstant::OAICollectiveConstant() {
    this->initializeModel();
}

OAICollectiveConstant::~OAICollectiveConstant() {}

void OAICollectiveConstant::initializeModel() {

    m_value_list_isSet = false;
    m_value_list_isValid = false;
}

void OAICollectiveConstant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICollectiveConstant::fromJsonObject(QJsonObject json) {

    m_value_list_isValid = ::OpenAPI::fromJsonValue(m_value_list, json[QString("ValueList")]);
    m_value_list_isSet = !json[QString("ValueList")].isNull() && m_value_list_isValid;
}

QString OAICollectiveConstant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICollectiveConstant::asJsonObject() const {
    QJsonObject obj;
    if (m_value_list.isSet()) {
        obj.insert(QString("ValueList"), ::OpenAPI::toJsonValue(m_value_list));
    }
    return obj;
}

QList OAICollectiveConstant::getValueList() const {
    return m_value_list;
}
void OAICollectiveConstant::setValueList(const QList &value_list) {
    m_value_list = value_list;
    m_value_list_isSet = true;
}

bool OAICollectiveConstant::is_value_list_Set() const{
    return m_value_list_isSet;
}

bool OAICollectiveConstant::is_value_list_Valid() const{
    return m_value_list_isValid;
}

bool OAICollectiveConstant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICollectiveConstant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
