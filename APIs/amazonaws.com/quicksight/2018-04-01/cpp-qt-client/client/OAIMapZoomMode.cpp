/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMapZoomMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMapZoomMode::OAIMapZoomMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMapZoomMode::OAIMapZoomMode() {
    this->initializeModel();
}

OAIMapZoomMode::~OAIMapZoomMode() {}

void OAIMapZoomMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMapZoomMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMapZoomMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AUTO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMapZoomMode::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MANUAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMapZoomMode::MANUAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMapZoomMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMapZoomMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMapZoomMode::AUTO:
            val = "AUTO";
            break;
        case eOAIMapZoomMode::MANUAL:
            val = "MANUAL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMapZoomMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMapZoomMode::eOAIMapZoomMode OAIMapZoomMode::getValue() const {
    return m_value;
}

void OAIMapZoomMode::setValue(const OAIMapZoomMode::eOAIMapZoomMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMapZoomMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIMapZoomMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
