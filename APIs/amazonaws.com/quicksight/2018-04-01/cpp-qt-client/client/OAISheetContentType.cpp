/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheetContentType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheetContentType::OAISheetContentType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheetContentType::OAISheetContentType() {
    this->initializeModel();
}

OAISheetContentType::~OAISheetContentType() {}

void OAISheetContentType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISheetContentType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISheetContentType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PAGINATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAISheetContentType::PAGINATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INTERACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISheetContentType::INTERACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISheetContentType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISheetContentType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISheetContentType::PAGINATED:
            val = "PAGINATED";
            break;
        case eOAISheetContentType::INTERACTIVE:
            val = "INTERACTIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISheetContentType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISheetContentType::eOAISheetContentType OAISheetContentType::getValue() const {
    return m_value;
}

void OAISheetContentType::setValue(const OAISheetContentType::eOAISheetContentType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISheetContentType::isSet() const {
    
    return m_value_isSet;
}

bool OAISheetContentType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
