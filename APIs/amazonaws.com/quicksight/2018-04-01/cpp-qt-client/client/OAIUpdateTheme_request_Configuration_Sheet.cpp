/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTheme_request_Configuration_Sheet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTheme_request_Configuration_Sheet::OAIUpdateTheme_request_Configuration_Sheet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTheme_request_Configuration_Sheet::OAIUpdateTheme_request_Configuration_Sheet() {
    this->initializeModel();
}

OAIUpdateTheme_request_Configuration_Sheet::~OAIUpdateTheme_request_Configuration_Sheet() {}

void OAIUpdateTheme_request_Configuration_Sheet::initializeModel() {

    m_tile_isSet = false;
    m_tile_isValid = false;

    m_tile_layout_isSet = false;
    m_tile_layout_isValid = false;
}

void OAIUpdateTheme_request_Configuration_Sheet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTheme_request_Configuration_Sheet::fromJsonObject(QJsonObject json) {

    m_tile_isValid = ::OpenAPI::fromJsonValue(m_tile, json[QString("Tile")]);
    m_tile_isSet = !json[QString("Tile")].isNull() && m_tile_isValid;

    m_tile_layout_isValid = ::OpenAPI::fromJsonValue(m_tile_layout, json[QString("TileLayout")]);
    m_tile_layout_isSet = !json[QString("TileLayout")].isNull() && m_tile_layout_isValid;
}

QString OAIUpdateTheme_request_Configuration_Sheet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTheme_request_Configuration_Sheet::asJsonObject() const {
    QJsonObject obj;
    if (m_tile.isSet()) {
        obj.insert(QString("Tile"), ::OpenAPI::toJsonValue(m_tile));
    }
    if (m_tile_layout.isSet()) {
        obj.insert(QString("TileLayout"), ::OpenAPI::toJsonValue(m_tile_layout));
    }
    return obj;
}

OAISheetStyle_Tile OAIUpdateTheme_request_Configuration_Sheet::getTile() const {
    return m_tile;
}
void OAIUpdateTheme_request_Configuration_Sheet::setTile(const OAISheetStyle_Tile &tile) {
    m_tile = tile;
    m_tile_isSet = true;
}

bool OAIUpdateTheme_request_Configuration_Sheet::is_tile_Set() const{
    return m_tile_isSet;
}

bool OAIUpdateTheme_request_Configuration_Sheet::is_tile_Valid() const{
    return m_tile_isValid;
}

OAISheetStyle_TileLayout OAIUpdateTheme_request_Configuration_Sheet::getTileLayout() const {
    return m_tile_layout;
}
void OAIUpdateTheme_request_Configuration_Sheet::setTileLayout(const OAISheetStyle_TileLayout &tile_layout) {
    m_tile_layout = tile_layout;
    m_tile_layout_isSet = true;
}

bool OAIUpdateTheme_request_Configuration_Sheet::is_tile_layout_Set() const{
    return m_tile_layout_isSet;
}

bool OAIUpdateTheme_request_Configuration_Sheet::is_tile_layout_Valid() const{
    return m_tile_layout_isValid;
}

bool OAIUpdateTheme_request_Configuration_Sheet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tile_layout.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTheme_request_Configuration_Sheet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
