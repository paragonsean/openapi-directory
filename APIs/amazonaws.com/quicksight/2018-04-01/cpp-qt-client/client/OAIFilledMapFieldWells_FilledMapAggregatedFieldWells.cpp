/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilledMapFieldWells_FilledMapAggregatedFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::OAIFilledMapFieldWells_FilledMapAggregatedFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::OAIFilledMapFieldWells_FilledMapAggregatedFieldWells() {
    this->initializeModel();
}

OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::~OAIFilledMapFieldWells_FilledMapAggregatedFieldWells() {}

void OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::initializeModel() {

    m_geospatial_isSet = false;
    m_geospatial_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::fromJsonObject(QJsonObject json) {

    m_geospatial_isValid = ::OpenAPI::fromJsonValue(m_geospatial, json[QString("Geospatial")]);
    m_geospatial_isSet = !json[QString("Geospatial")].isNull() && m_geospatial_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_geospatial.isSet()) {
        obj.insert(QString("Geospatial"), ::OpenAPI::toJsonValue(m_geospatial));
    }
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::getGeospatial() const {
    return m_geospatial;
}
void OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::setGeospatial(const QList &geospatial) {
    m_geospatial = geospatial;
    m_geospatial_isSet = true;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::is_geospatial_Set() const{
    return m_geospatial_isSet;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::is_geospatial_Valid() const{
    return m_geospatial_isValid;
}

QList OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::getValues() const {
    return m_values;
}
void OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::is_values_Set() const{
    return m_values_isSet;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_geospatial.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilledMapFieldWells_FilledMapAggregatedFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
