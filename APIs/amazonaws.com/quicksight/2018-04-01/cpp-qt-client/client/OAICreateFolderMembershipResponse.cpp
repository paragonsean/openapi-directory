/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFolderMembershipResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFolderMembershipResponse::OAICreateFolderMembershipResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFolderMembershipResponse::OAICreateFolderMembershipResponse() {
    this->initializeModel();
}

OAICreateFolderMembershipResponse::~OAICreateFolderMembershipResponse() {}

void OAICreateFolderMembershipResponse::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_folder_member_isSet = false;
    m_folder_member_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAICreateFolderMembershipResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFolderMembershipResponse::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_folder_member_isValid = ::OpenAPI::fromJsonValue(m_folder_member, json[QString("FolderMember")]);
    m_folder_member_isSet = !json[QString("FolderMember")].isNull() && m_folder_member_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAICreateFolderMembershipResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFolderMembershipResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_folder_member.isSet()) {
        obj.insert(QString("FolderMember"), ::OpenAPI::toJsonValue(m_folder_member));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

qint32 OAICreateFolderMembershipResponse::getStatus() const {
    return m_status;
}
void OAICreateFolderMembershipResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateFolderMembershipResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateFolderMembershipResponse::is_status_Valid() const{
    return m_status_isValid;
}

OAICreateFolderMembershipResponse_FolderMember OAICreateFolderMembershipResponse::getFolderMember() const {
    return m_folder_member;
}
void OAICreateFolderMembershipResponse::setFolderMember(const OAICreateFolderMembershipResponse_FolderMember &folder_member) {
    m_folder_member = folder_member;
    m_folder_member_isSet = true;
}

bool OAICreateFolderMembershipResponse::is_folder_member_Set() const{
    return m_folder_member_isSet;
}

bool OAICreateFolderMembershipResponse::is_folder_member_Valid() const{
    return m_folder_member_isValid;
}

QString OAICreateFolderMembershipResponse::getRequestId() const {
    return m_request_id;
}
void OAICreateFolderMembershipResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAICreateFolderMembershipResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAICreateFolderMembershipResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAICreateFolderMembershipResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_member.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFolderMembershipResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
