/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoryFilterConfiguration_CustomFilterListConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoryFilterConfiguration_CustomFilterListConfiguration::OAICategoryFilterConfiguration_CustomFilterListConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoryFilterConfiguration_CustomFilterListConfiguration::OAICategoryFilterConfiguration_CustomFilterListConfiguration() {
    this->initializeModel();
}

OAICategoryFilterConfiguration_CustomFilterListConfiguration::~OAICategoryFilterConfiguration_CustomFilterListConfiguration() {}

void OAICategoryFilterConfiguration_CustomFilterListConfiguration::initializeModel() {

    m_match_operator_isSet = false;
    m_match_operator_isValid = false;

    m_category_values_isSet = false;
    m_category_values_isValid = false;

    m_select_all_options_isSet = false;
    m_select_all_options_isValid = false;

    m_null_option_isSet = false;
    m_null_option_isValid = false;
}

void OAICategoryFilterConfiguration_CustomFilterListConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategoryFilterConfiguration_CustomFilterListConfiguration::fromJsonObject(QJsonObject json) {

    m_match_operator_isValid = ::OpenAPI::fromJsonValue(m_match_operator, json[QString("MatchOperator")]);
    m_match_operator_isSet = !json[QString("MatchOperator")].isNull() && m_match_operator_isValid;

    m_category_values_isValid = ::OpenAPI::fromJsonValue(m_category_values, json[QString("CategoryValues")]);
    m_category_values_isSet = !json[QString("CategoryValues")].isNull() && m_category_values_isValid;

    m_select_all_options_isValid = ::OpenAPI::fromJsonValue(m_select_all_options, json[QString("SelectAllOptions")]);
    m_select_all_options_isSet = !json[QString("SelectAllOptions")].isNull() && m_select_all_options_isValid;

    m_null_option_isValid = ::OpenAPI::fromJsonValue(m_null_option, json[QString("NullOption")]);
    m_null_option_isSet = !json[QString("NullOption")].isNull() && m_null_option_isValid;
}

QString OAICategoryFilterConfiguration_CustomFilterListConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategoryFilterConfiguration_CustomFilterListConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_match_operator.isSet()) {
        obj.insert(QString("MatchOperator"), ::OpenAPI::toJsonValue(m_match_operator));
    }
    if (m_category_values.isSet()) {
        obj.insert(QString("CategoryValues"), ::OpenAPI::toJsonValue(m_category_values));
    }
    if (m_select_all_options.isSet()) {
        obj.insert(QString("SelectAllOptions"), ::OpenAPI::toJsonValue(m_select_all_options));
    }
    if (m_null_option.isSet()) {
        obj.insert(QString("NullOption"), ::OpenAPI::toJsonValue(m_null_option));
    }
    return obj;
}

OAICategoryFilterMatchOperator OAICategoryFilterConfiguration_CustomFilterListConfiguration::getMatchOperator() const {
    return m_match_operator;
}
void OAICategoryFilterConfiguration_CustomFilterListConfiguration::setMatchOperator(const OAICategoryFilterMatchOperator &match_operator) {
    m_match_operator = match_operator;
    m_match_operator_isSet = true;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_match_operator_Set() const{
    return m_match_operator_isSet;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_match_operator_Valid() const{
    return m_match_operator_isValid;
}

QList OAICategoryFilterConfiguration_CustomFilterListConfiguration::getCategoryValues() const {
    return m_category_values;
}
void OAICategoryFilterConfiguration_CustomFilterListConfiguration::setCategoryValues(const QList &category_values) {
    m_category_values = category_values;
    m_category_values_isSet = true;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_category_values_Set() const{
    return m_category_values_isSet;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_category_values_Valid() const{
    return m_category_values_isValid;
}

OAICategoryFilterSelectAllOptions OAICategoryFilterConfiguration_CustomFilterListConfiguration::getSelectAllOptions() const {
    return m_select_all_options;
}
void OAICategoryFilterConfiguration_CustomFilterListConfiguration::setSelectAllOptions(const OAICategoryFilterSelectAllOptions &select_all_options) {
    m_select_all_options = select_all_options;
    m_select_all_options_isSet = true;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_select_all_options_Set() const{
    return m_select_all_options_isSet;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_select_all_options_Valid() const{
    return m_select_all_options_isValid;
}

OAIFilterNullOption OAICategoryFilterConfiguration_CustomFilterListConfiguration::getNullOption() const {
    return m_null_option;
}
void OAICategoryFilterConfiguration_CustomFilterListConfiguration::setNullOption(const OAIFilterNullOption &null_option) {
    m_null_option = null_option;
    m_null_option_isSet = true;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_null_option_Set() const{
    return m_null_option_isSet;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::is_null_option_Valid() const{
    return m_null_option_isValid;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_operator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_select_all_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_null_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategoryFilterConfiguration_CustomFilterListConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_match_operator_isValid && m_null_option_isValid && true;
}

} // namespace OpenAPI
