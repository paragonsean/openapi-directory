/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDynamicDefaultValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDynamicDefaultValue::OAIDynamicDefaultValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDynamicDefaultValue::OAIDynamicDefaultValue() {
    this->initializeModel();
}

OAIDynamicDefaultValue::~OAIDynamicDefaultValue() {}

void OAIDynamicDefaultValue::initializeModel() {

    m_user_name_column_isSet = false;
    m_user_name_column_isValid = false;

    m_group_name_column_isSet = false;
    m_group_name_column_isValid = false;

    m_default_value_column_isSet = false;
    m_default_value_column_isValid = false;
}

void OAIDynamicDefaultValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDynamicDefaultValue::fromJsonObject(QJsonObject json) {

    m_user_name_column_isValid = ::OpenAPI::fromJsonValue(m_user_name_column, json[QString("UserNameColumn")]);
    m_user_name_column_isSet = !json[QString("UserNameColumn")].isNull() && m_user_name_column_isValid;

    m_group_name_column_isValid = ::OpenAPI::fromJsonValue(m_group_name_column, json[QString("GroupNameColumn")]);
    m_group_name_column_isSet = !json[QString("GroupNameColumn")].isNull() && m_group_name_column_isValid;

    m_default_value_column_isValid = ::OpenAPI::fromJsonValue(m_default_value_column, json[QString("DefaultValueColumn")]);
    m_default_value_column_isSet = !json[QString("DefaultValueColumn")].isNull() && m_default_value_column_isValid;
}

QString OAIDynamicDefaultValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDynamicDefaultValue::asJsonObject() const {
    QJsonObject obj;
    if (m_user_name_column.isSet()) {
        obj.insert(QString("UserNameColumn"), ::OpenAPI::toJsonValue(m_user_name_column));
    }
    if (m_group_name_column.isSet()) {
        obj.insert(QString("GroupNameColumn"), ::OpenAPI::toJsonValue(m_group_name_column));
    }
    if (m_default_value_column.isSet()) {
        obj.insert(QString("DefaultValueColumn"), ::OpenAPI::toJsonValue(m_default_value_column));
    }
    return obj;
}

OAIDynamicDefaultValue_UserNameColumn OAIDynamicDefaultValue::getUserNameColumn() const {
    return m_user_name_column;
}
void OAIDynamicDefaultValue::setUserNameColumn(const OAIDynamicDefaultValue_UserNameColumn &user_name_column) {
    m_user_name_column = user_name_column;
    m_user_name_column_isSet = true;
}

bool OAIDynamicDefaultValue::is_user_name_column_Set() const{
    return m_user_name_column_isSet;
}

bool OAIDynamicDefaultValue::is_user_name_column_Valid() const{
    return m_user_name_column_isValid;
}

OAIDynamicDefaultValue_GroupNameColumn OAIDynamicDefaultValue::getGroupNameColumn() const {
    return m_group_name_column;
}
void OAIDynamicDefaultValue::setGroupNameColumn(const OAIDynamicDefaultValue_GroupNameColumn &group_name_column) {
    m_group_name_column = group_name_column;
    m_group_name_column_isSet = true;
}

bool OAIDynamicDefaultValue::is_group_name_column_Set() const{
    return m_group_name_column_isSet;
}

bool OAIDynamicDefaultValue::is_group_name_column_Valid() const{
    return m_group_name_column_isValid;
}

OAIDynamicDefaultValue_DefaultValueColumn OAIDynamicDefaultValue::getDefaultValueColumn() const {
    return m_default_value_column;
}
void OAIDynamicDefaultValue::setDefaultValueColumn(const OAIDynamicDefaultValue_DefaultValueColumn &default_value_column) {
    m_default_value_column = default_value_column;
    m_default_value_column_isSet = true;
}

bool OAIDynamicDefaultValue::is_default_value_column_Set() const{
    return m_default_value_column_isSet;
}

bool OAIDynamicDefaultValue::is_default_value_column_Valid() const{
    return m_default_value_column_isValid;
}

bool OAIDynamicDefaultValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDynamicDefaultValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_value_column_isValid && true;
}

} // namespace OpenAPI
