/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineChartLineStyle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineChartLineStyle::OAILineChartLineStyle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineChartLineStyle::OAILineChartLineStyle() {
    this->initializeModel();
}

OAILineChartLineStyle::~OAILineChartLineStyle() {}

void OAILineChartLineStyle::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILineChartLineStyle::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILineChartLineStyle::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SOLID", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartLineStyle::SOLID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOTTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartLineStyle::DOTTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DASHED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILineChartLineStyle::DASHED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILineChartLineStyle::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILineChartLineStyle::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILineChartLineStyle::SOLID:
            val = "SOLID";
            break;
        case eOAILineChartLineStyle::DOTTED:
            val = "DOTTED";
            break;
        case eOAILineChartLineStyle::DASHED:
            val = "DASHED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILineChartLineStyle::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILineChartLineStyle::eOAILineChartLineStyle OAILineChartLineStyle::getValue() const {
    return m_value;
}

void OAILineChartLineStyle::setValue(const OAILineChartLineStyle::eOAILineChartLineStyle& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILineChartLineStyle::isSet() const {
    
    return m_value_isSet;
}

bool OAILineChartLineStyle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
