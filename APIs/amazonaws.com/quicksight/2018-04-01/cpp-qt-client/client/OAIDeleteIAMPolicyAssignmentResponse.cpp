/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteIAMPolicyAssignmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteIAMPolicyAssignmentResponse::OAIDeleteIAMPolicyAssignmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteIAMPolicyAssignmentResponse::OAIDeleteIAMPolicyAssignmentResponse() {
    this->initializeModel();
}

OAIDeleteIAMPolicyAssignmentResponse::~OAIDeleteIAMPolicyAssignmentResponse() {}

void OAIDeleteIAMPolicyAssignmentResponse::initializeModel() {

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDeleteIAMPolicyAssignmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteIAMPolicyAssignmentResponse::fromJsonObject(QJsonObject json) {

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDeleteIAMPolicyAssignmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteIAMPolicyAssignmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDeleteIAMPolicyAssignmentResponse::getAssignmentName() const {
    return m_assignment_name;
}
void OAIDeleteIAMPolicyAssignmentResponse::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

QString OAIDeleteIAMPolicyAssignmentResponse::getRequestId() const {
    return m_request_id;
}
void OAIDeleteIAMPolicyAssignmentResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIDeleteIAMPolicyAssignmentResponse::getStatus() const {
    return m_status;
}
void OAIDeleteIAMPolicyAssignmentResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDeleteIAMPolicyAssignmentResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDeleteIAMPolicyAssignmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteIAMPolicyAssignmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
