/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFontStyle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFontStyle::OAIFontStyle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFontStyle::OAIFontStyle() {
    this->initializeModel();
}

OAIFontStyle::~OAIFontStyle() {}

void OAIFontStyle::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFontStyle::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFontStyle::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NORMAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFontStyle::NORMAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ITALIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFontStyle::ITALIC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFontStyle::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFontStyle::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFontStyle::NORMAL:
            val = "NORMAL";
            break;
        case eOAIFontStyle::ITALIC:
            val = "ITALIC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFontStyle::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFontStyle::eOAIFontStyle OAIFontStyle::getValue() const {
    return m_value;
}

void OAIFontStyle::setValue(const OAIFontStyle::eOAIFontStyle& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFontStyle::isSet() const {
    
    return m_value_isSet;
}

bool OAIFontStyle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
