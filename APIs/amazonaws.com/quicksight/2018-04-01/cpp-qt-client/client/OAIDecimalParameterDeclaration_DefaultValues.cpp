/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalParameterDeclaration_DefaultValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalParameterDeclaration_DefaultValues::OAIDecimalParameterDeclaration_DefaultValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalParameterDeclaration_DefaultValues::OAIDecimalParameterDeclaration_DefaultValues() {
    this->initializeModel();
}

OAIDecimalParameterDeclaration_DefaultValues::~OAIDecimalParameterDeclaration_DefaultValues() {}

void OAIDecimalParameterDeclaration_DefaultValues::initializeModel() {

    m_dynamic_value_isSet = false;
    m_dynamic_value_isValid = false;

    m_static_values_isSet = false;
    m_static_values_isValid = false;
}

void OAIDecimalParameterDeclaration_DefaultValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalParameterDeclaration_DefaultValues::fromJsonObject(QJsonObject json) {

    m_dynamic_value_isValid = ::OpenAPI::fromJsonValue(m_dynamic_value, json[QString("DynamicValue")]);
    m_dynamic_value_isSet = !json[QString("DynamicValue")].isNull() && m_dynamic_value_isValid;

    m_static_values_isValid = ::OpenAPI::fromJsonValue(m_static_values, json[QString("StaticValues")]);
    m_static_values_isSet = !json[QString("StaticValues")].isNull() && m_static_values_isValid;
}

QString OAIDecimalParameterDeclaration_DefaultValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalParameterDeclaration_DefaultValues::asJsonObject() const {
    QJsonObject obj;
    if (m_dynamic_value.isSet()) {
        obj.insert(QString("DynamicValue"), ::OpenAPI::toJsonValue(m_dynamic_value));
    }
    if (m_static_values.isSet()) {
        obj.insert(QString("StaticValues"), ::OpenAPI::toJsonValue(m_static_values));
    }
    return obj;
}

OAIDecimalDefaultValues_DynamicValue OAIDecimalParameterDeclaration_DefaultValues::getDynamicValue() const {
    return m_dynamic_value;
}
void OAIDecimalParameterDeclaration_DefaultValues::setDynamicValue(const OAIDecimalDefaultValues_DynamicValue &dynamic_value) {
    m_dynamic_value = dynamic_value;
    m_dynamic_value_isSet = true;
}

bool OAIDecimalParameterDeclaration_DefaultValues::is_dynamic_value_Set() const{
    return m_dynamic_value_isSet;
}

bool OAIDecimalParameterDeclaration_DefaultValues::is_dynamic_value_Valid() const{
    return m_dynamic_value_isValid;
}

QList OAIDecimalParameterDeclaration_DefaultValues::getStaticValues() const {
    return m_static_values;
}
void OAIDecimalParameterDeclaration_DefaultValues::setStaticValues(const QList &static_values) {
    m_static_values = static_values;
    m_static_values_isSet = true;
}

bool OAIDecimalParameterDeclaration_DefaultValues::is_static_values_Set() const{
    return m_static_values_isSet;
}

bool OAIDecimalParameterDeclaration_DefaultValues::is_static_values_Valid() const{
    return m_static_values_isValid;
}

bool OAIDecimalParameterDeclaration_DefaultValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dynamic_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalParameterDeclaration_DefaultValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
