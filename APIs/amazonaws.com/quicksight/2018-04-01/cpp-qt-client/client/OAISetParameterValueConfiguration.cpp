/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISetParameterValueConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISetParameterValueConfiguration::OAISetParameterValueConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISetParameterValueConfiguration::OAISetParameterValueConfiguration() {
    this->initializeModel();
}

OAISetParameterValueConfiguration::~OAISetParameterValueConfiguration() {}

void OAISetParameterValueConfiguration::initializeModel() {

    m_destination_parameter_name_isSet = false;
    m_destination_parameter_name_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAISetParameterValueConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISetParameterValueConfiguration::fromJsonObject(QJsonObject json) {

    m_destination_parameter_name_isValid = ::OpenAPI::fromJsonValue(m_destination_parameter_name, json[QString("DestinationParameterName")]);
    m_destination_parameter_name_isSet = !json[QString("DestinationParameterName")].isNull() && m_destination_parameter_name_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAISetParameterValueConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISetParameterValueConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_parameter_name_isSet) {
        obj.insert(QString("DestinationParameterName"), ::OpenAPI::toJsonValue(m_destination_parameter_name));
    }
    if (m_value.isSet()) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAISetParameterValueConfiguration::getDestinationParameterName() const {
    return m_destination_parameter_name;
}
void OAISetParameterValueConfiguration::setDestinationParameterName(const QString &destination_parameter_name) {
    m_destination_parameter_name = destination_parameter_name;
    m_destination_parameter_name_isSet = true;
}

bool OAISetParameterValueConfiguration::is_destination_parameter_name_Set() const{
    return m_destination_parameter_name_isSet;
}

bool OAISetParameterValueConfiguration::is_destination_parameter_name_Valid() const{
    return m_destination_parameter_name_isValid;
}

OAIDestinationParameterValueConfiguration OAISetParameterValueConfiguration::getValue() const {
    return m_value;
}
void OAISetParameterValueConfiguration::setValue(const OAIDestinationParameterValueConfiguration &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAISetParameterValueConfiguration::is_value_Set() const{
    return m_value_isSet;
}

bool OAISetParameterValueConfiguration::is_value_Valid() const{
    return m_value_isValid;
}

bool OAISetParameterValueConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_parameter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISetParameterValueConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_parameter_name_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
