/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeospatialHeatmapDataColor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeospatialHeatmapDataColor::OAIGeospatialHeatmapDataColor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeospatialHeatmapDataColor::OAIGeospatialHeatmapDataColor() {
    this->initializeModel();
}

OAIGeospatialHeatmapDataColor::~OAIGeospatialHeatmapDataColor() {}

void OAIGeospatialHeatmapDataColor::initializeModel() {

    m_color_isSet = false;
    m_color_isValid = false;
}

void OAIGeospatialHeatmapDataColor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeospatialHeatmapDataColor::fromJsonObject(QJsonObject json) {

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("Color")]);
    m_color_isSet = !json[QString("Color")].isNull() && m_color_isValid;
}

QString OAIGeospatialHeatmapDataColor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeospatialHeatmapDataColor::asJsonObject() const {
    QJsonObject obj;
    if (m_color_isSet) {
        obj.insert(QString("Color"), ::OpenAPI::toJsonValue(m_color));
    }
    return obj;
}

QString OAIGeospatialHeatmapDataColor::getColor() const {
    return m_color;
}
void OAIGeospatialHeatmapDataColor::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIGeospatialHeatmapDataColor::is_color_Set() const{
    return m_color_isSet;
}

bool OAIGeospatialHeatmapDataColor::is_color_Valid() const{
    return m_color_isValid;
}

bool OAIGeospatialHeatmapDataColor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeospatialHeatmapDataColor::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_color_isValid && true;
}

} // namespace OpenAPI
