/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicNumericSeparatorSymbol.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicNumericSeparatorSymbol::OAITopicNumericSeparatorSymbol(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicNumericSeparatorSymbol::OAITopicNumericSeparatorSymbol() {
    this->initializeModel();
}

OAITopicNumericSeparatorSymbol::~OAITopicNumericSeparatorSymbol() {}

void OAITopicNumericSeparatorSymbol::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITopicNumericSeparatorSymbol::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITopicNumericSeparatorSymbol::fromJson(QString jsonString) {
    
    if ( jsonString.compare("COMMA", Qt::CaseInsensitive) == 0) {
        m_value = eOAITopicNumericSeparatorSymbol::COMMA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITopicNumericSeparatorSymbol::DOT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITopicNumericSeparatorSymbol::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITopicNumericSeparatorSymbol::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITopicNumericSeparatorSymbol::COMMA:
            val = "COMMA";
            break;
        case eOAITopicNumericSeparatorSymbol::DOT:
            val = "DOT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITopicNumericSeparatorSymbol::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITopicNumericSeparatorSymbol::eOAITopicNumericSeparatorSymbol OAITopicNumericSeparatorSymbol::getValue() const {
    return m_value;
}

void OAITopicNumericSeparatorSymbol::setValue(const OAITopicNumericSeparatorSymbol::eOAITopicNumericSeparatorSymbol& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITopicNumericSeparatorSymbol::isSet() const {
    
    return m_value_isSet;
}

bool OAITopicNumericSeparatorSymbol::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
