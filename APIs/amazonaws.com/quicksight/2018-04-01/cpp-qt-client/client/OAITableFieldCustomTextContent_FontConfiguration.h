/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableFieldCustomTextContent_FontConfiguration.h
 *
 * 
 */

#ifndef OAITableFieldCustomTextContent_FontConfiguration_H
#define OAITableFieldCustomTextContent_FontConfiguration_H

#include <QJsonObject>

#include "OAIFontConfiguration_FontSize.h"
#include "OAIFontConfiguration_FontWeight.h"
#include "OAIFontDecoration.h"
#include "OAIFontStyle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFontConfiguration_FontSize;
class OAIFontConfiguration_FontWeight;

class OAITableFieldCustomTextContent_FontConfiguration : public OAIObject {
public:
    OAITableFieldCustomTextContent_FontConfiguration();
    OAITableFieldCustomTextContent_FontConfiguration(QString json);
    ~OAITableFieldCustomTextContent_FontConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFontConfiguration_FontSize getFontSize() const;
    void setFontSize(const OAIFontConfiguration_FontSize &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    OAIFontDecoration getFontDecoration() const;
    void setFontDecoration(const OAIFontDecoration &font_decoration);
    bool is_font_decoration_Set() const;
    bool is_font_decoration_Valid() const;

    QString getFontColor() const;
    void setFontColor(const QString &font_color);
    bool is_font_color_Set() const;
    bool is_font_color_Valid() const;

    OAIFontConfiguration_FontWeight getFontWeight() const;
    void setFontWeight(const OAIFontConfiguration_FontWeight &font_weight);
    bool is_font_weight_Set() const;
    bool is_font_weight_Valid() const;

    OAIFontStyle getFontStyle() const;
    void setFontStyle(const OAIFontStyle &font_style);
    bool is_font_style_Set() const;
    bool is_font_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFontConfiguration_FontSize m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    OAIFontDecoration m_font_decoration;
    bool m_font_decoration_isSet;
    bool m_font_decoration_isValid;

    QString m_font_color;
    bool m_font_color_isSet;
    bool m_font_color_isValid;

    OAIFontConfiguration_FontWeight m_font_weight;
    bool m_font_weight_isSet;
    bool m_font_weight_isValid;

    OAIFontStyle m_font_style;
    bool m_font_style_isSet;
    bool m_font_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableFieldCustomTextContent_FontConfiguration)

#endif // OAITableFieldCustomTextContent_FontConfiguration_H
