/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFolderMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFolderMember::OAIFolderMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFolderMember::OAIFolderMember() {
    this->initializeModel();
}

OAIFolderMember::~OAIFolderMember() {}

void OAIFolderMember::initializeModel() {

    m_member_id_isSet = false;
    m_member_id_isValid = false;

    m_member_type_isSet = false;
    m_member_type_isValid = false;
}

void OAIFolderMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFolderMember::fromJsonObject(QJsonObject json) {

    m_member_id_isValid = ::OpenAPI::fromJsonValue(m_member_id, json[QString("MemberId")]);
    m_member_id_isSet = !json[QString("MemberId")].isNull() && m_member_id_isValid;

    m_member_type_isValid = ::OpenAPI::fromJsonValue(m_member_type, json[QString("MemberType")]);
    m_member_type_isSet = !json[QString("MemberType")].isNull() && m_member_type_isValid;
}

QString OAIFolderMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFolderMember::asJsonObject() const {
    QJsonObject obj;
    if (m_member_id_isSet) {
        obj.insert(QString("MemberId"), ::OpenAPI::toJsonValue(m_member_id));
    }
    if (m_member_type.isSet()) {
        obj.insert(QString("MemberType"), ::OpenAPI::toJsonValue(m_member_type));
    }
    return obj;
}

QString OAIFolderMember::getMemberId() const {
    return m_member_id;
}
void OAIFolderMember::setMemberId(const QString &member_id) {
    m_member_id = member_id;
    m_member_id_isSet = true;
}

bool OAIFolderMember::is_member_id_Set() const{
    return m_member_id_isSet;
}

bool OAIFolderMember::is_member_id_Valid() const{
    return m_member_id_isValid;
}

OAIMemberType OAIFolderMember::getMemberType() const {
    return m_member_type;
}
void OAIFolderMember::setMemberType(const OAIMemberType &member_type) {
    m_member_type = member_type;
    m_member_type_isSet = true;
}

bool OAIFolderMember::is_member_type_Set() const{
    return m_member_type_isSet;
}

bool OAIFolderMember::is_member_type_Valid() const{
    return m_member_type_isValid;
}

bool OAIFolderMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFolderMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
