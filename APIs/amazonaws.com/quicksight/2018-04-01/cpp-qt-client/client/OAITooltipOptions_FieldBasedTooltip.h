/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITooltipOptions_FieldBasedTooltip.h
 *
 * 
 */

#ifndef OAITooltipOptions_FieldBasedTooltip_H
#define OAITooltipOptions_FieldBasedTooltip_H

#include <QJsonObject>

#include "OAITooltipTitleType.h"
#include "OAIVisibility.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITooltipOptions_FieldBasedTooltip : public OAIObject {
public:
    OAITooltipOptions_FieldBasedTooltip();
    OAITooltipOptions_FieldBasedTooltip(QString json);
    ~OAITooltipOptions_FieldBasedTooltip() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVisibility getAggregationVisibility() const;
    void setAggregationVisibility(const OAIVisibility &aggregation_visibility);
    bool is_aggregation_visibility_Set() const;
    bool is_aggregation_visibility_Valid() const;

    OAITooltipTitleType getTooltipTitleType() const;
    void setTooltipTitleType(const OAITooltipTitleType &tooltip_title_type);
    bool is_tooltip_title_type_Set() const;
    bool is_tooltip_title_type_Valid() const;

    QList getTooltipFields() const;
    void setTooltipFields(const QList &tooltip_fields);
    bool is_tooltip_fields_Set() const;
    bool is_tooltip_fields_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVisibility m_aggregation_visibility;
    bool m_aggregation_visibility_isSet;
    bool m_aggregation_visibility_isValid;

    OAITooltipTitleType m_tooltip_title_type;
    bool m_tooltip_title_type_isSet;
    bool m_tooltip_title_type_isValid;

    QList m_tooltip_fields;
    bool m_tooltip_fields_isSet;
    bool m_tooltip_fields_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITooltipOptions_FieldBasedTooltip)

#endif // OAITooltipOptions_FieldBasedTooltip_H
