/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGaugeChartPrimaryValueConditionalFormatting_Icon.h
 *
 * 
 */

#ifndef OAIGaugeChartPrimaryValueConditionalFormatting_Icon_H
#define OAIGaugeChartPrimaryValueConditionalFormatting_Icon_H

#include <QJsonObject>

#include "OAIConditionalFormattingIcon_CustomCondition.h"
#include "OAIConditionalFormattingIcon_IconSet.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionalFormattingIcon_IconSet;
class OAIConditionalFormattingIcon_CustomCondition;

class OAIGaugeChartPrimaryValueConditionalFormatting_Icon : public OAIObject {
public:
    OAIGaugeChartPrimaryValueConditionalFormatting_Icon();
    OAIGaugeChartPrimaryValueConditionalFormatting_Icon(QString json);
    ~OAIGaugeChartPrimaryValueConditionalFormatting_Icon() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConditionalFormattingIcon_IconSet getIconSet() const;
    void setIconSet(const OAIConditionalFormattingIcon_IconSet &icon_set);
    bool is_icon_set_Set() const;
    bool is_icon_set_Valid() const;

    OAIConditionalFormattingIcon_CustomCondition getCustomCondition() const;
    void setCustomCondition(const OAIConditionalFormattingIcon_CustomCondition &custom_condition);
    bool is_custom_condition_Set() const;
    bool is_custom_condition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConditionalFormattingIcon_IconSet m_icon_set;
    bool m_icon_set_isSet;
    bool m_icon_set_isValid;

    OAIConditionalFormattingIcon_CustomCondition m_custom_condition;
    bool m_custom_condition_isSet;
    bool m_custom_condition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGaugeChartPrimaryValueConditionalFormatting_Icon)

#endif // OAIGaugeChartPrimaryValueConditionalFormatting_Icon_H
