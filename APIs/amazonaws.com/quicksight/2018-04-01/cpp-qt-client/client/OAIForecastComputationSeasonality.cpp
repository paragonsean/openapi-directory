/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForecastComputationSeasonality.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForecastComputationSeasonality::OAIForecastComputationSeasonality(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForecastComputationSeasonality::OAIForecastComputationSeasonality() {
    this->initializeModel();
}

OAIForecastComputationSeasonality::~OAIForecastComputationSeasonality() {}

void OAIForecastComputationSeasonality::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIForecastComputationSeasonality::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIForecastComputationSeasonality::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AUTOMATIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIForecastComputationSeasonality::AUTOMATIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIForecastComputationSeasonality::CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIForecastComputationSeasonality::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIForecastComputationSeasonality::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIForecastComputationSeasonality::AUTOMATIC:
            val = "AUTOMATIC";
            break;
        case eOAIForecastComputationSeasonality::CUSTOM:
            val = "CUSTOM";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIForecastComputationSeasonality::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIForecastComputationSeasonality::eOAIForecastComputationSeasonality OAIForecastComputationSeasonality::getValue() const {
    return m_value;
}

void OAIForecastComputationSeasonality::setValue(const OAIForecastComputationSeasonality::eOAIForecastComputationSeasonality& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIForecastComputationSeasonality::isSet() const {
    
    return m_value_isSet;
}

bool OAIForecastComputationSeasonality::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
