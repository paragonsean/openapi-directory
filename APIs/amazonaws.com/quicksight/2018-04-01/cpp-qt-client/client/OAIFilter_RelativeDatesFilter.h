/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilter_RelativeDatesFilter.h
 *
 * 
 */

#ifndef OAIFilter_RelativeDatesFilter_H
#define OAIFilter_RelativeDatesFilter_H

#include <QJsonObject>

#include "OAICategoryDrillDownFilter_Column.h"
#include "OAIFilterNullOption.h"
#include "OAIRelativeDateType.h"
#include "OAIRelativeDatesFilter_AnchorDateConfiguration.h"
#include "OAIRelativeDatesFilter_ExcludePeriodConfiguration.h"
#include "OAITimeGranularity.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryDrillDownFilter_Column;
class OAIRelativeDatesFilter_AnchorDateConfiguration;
class OAIRelativeDatesFilter_ExcludePeriodConfiguration;

class OAIFilter_RelativeDatesFilter : public OAIObject {
public:
    OAIFilter_RelativeDatesFilter();
    OAIFilter_RelativeDatesFilter(QString json);
    ~OAIFilter_RelativeDatesFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterId() const;
    void setFilterId(const QString &filter_id);
    bool is_filter_id_Set() const;
    bool is_filter_id_Valid() const;

    OAICategoryDrillDownFilter_Column getColumn() const;
    void setColumn(const OAICategoryDrillDownFilter_Column &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    OAIRelativeDatesFilter_AnchorDateConfiguration getAnchorDateConfiguration() const;
    void setAnchorDateConfiguration(const OAIRelativeDatesFilter_AnchorDateConfiguration &anchor_date_configuration);
    bool is_anchor_date_configuration_Set() const;
    bool is_anchor_date_configuration_Valid() const;

    OAITimeGranularity getMinimumGranularity() const;
    void setMinimumGranularity(const OAITimeGranularity &minimum_granularity);
    bool is_minimum_granularity_Set() const;
    bool is_minimum_granularity_Valid() const;

    OAITimeGranularity getTimeGranularity() const;
    void setTimeGranularity(const OAITimeGranularity &time_granularity);
    bool is_time_granularity_Set() const;
    bool is_time_granularity_Valid() const;

    OAIRelativeDateType getRelativeDateType() const;
    void setRelativeDateType(const OAIRelativeDateType &relative_date_type);
    bool is_relative_date_type_Set() const;
    bool is_relative_date_type_Valid() const;

    qint32 getRelativeDateValue() const;
    void setRelativeDateValue(const qint32 &relative_date_value);
    bool is_relative_date_value_Set() const;
    bool is_relative_date_value_Valid() const;

    QString getParameterName() const;
    void setParameterName(const QString &parameter_name);
    bool is_parameter_name_Set() const;
    bool is_parameter_name_Valid() const;

    OAIFilterNullOption getNullOption() const;
    void setNullOption(const OAIFilterNullOption &null_option);
    bool is_null_option_Set() const;
    bool is_null_option_Valid() const;

    OAIRelativeDatesFilter_ExcludePeriodConfiguration getExcludePeriodConfiguration() const;
    void setExcludePeriodConfiguration(const OAIRelativeDatesFilter_ExcludePeriodConfiguration &exclude_period_configuration);
    bool is_exclude_period_configuration_Set() const;
    bool is_exclude_period_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_id;
    bool m_filter_id_isSet;
    bool m_filter_id_isValid;

    OAICategoryDrillDownFilter_Column m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    OAIRelativeDatesFilter_AnchorDateConfiguration m_anchor_date_configuration;
    bool m_anchor_date_configuration_isSet;
    bool m_anchor_date_configuration_isValid;

    OAITimeGranularity m_minimum_granularity;
    bool m_minimum_granularity_isSet;
    bool m_minimum_granularity_isValid;

    OAITimeGranularity m_time_granularity;
    bool m_time_granularity_isSet;
    bool m_time_granularity_isValid;

    OAIRelativeDateType m_relative_date_type;
    bool m_relative_date_type_isSet;
    bool m_relative_date_type_isValid;

    qint32 m_relative_date_value;
    bool m_relative_date_value_isSet;
    bool m_relative_date_value_isValid;

    QString m_parameter_name;
    bool m_parameter_name_isSet;
    bool m_parameter_name_isValid;

    OAIFilterNullOption m_null_option;
    bool m_null_option_isSet;
    bool m_null_option_isValid;

    OAIRelativeDatesFilter_ExcludePeriodConfiguration m_exclude_period_configuration;
    bool m_exclude_period_configuration_isSet;
    bool m_exclude_period_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilter_RelativeDatesFilter)

#endif // OAIFilter_RelativeDatesFilter_H
