/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTopicRefreshSchedule_request_RefreshSchedule.h
 *
 * A structure that represents a topic refresh schedule.
 */

#ifndef OAICreateTopicRefreshSchedule_request_RefreshSchedule_H
#define OAICreateTopicRefreshSchedule_request_RefreshSchedule_H

#include <QJsonObject>

#include "OAITopicScheduleType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateTopicRefreshSchedule_request_RefreshSchedule : public OAIObject {
public:
    OAICreateTopicRefreshSchedule_request_RefreshSchedule();
    OAICreateTopicRefreshSchedule_request_RefreshSchedule(QString json);
    ~OAICreateTopicRefreshSchedule_request_RefreshSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    bool getBasedOnSpiceSchedule() const;
    void setBasedOnSpiceSchedule(const bool &based_on_spice_schedule);
    bool is_based_on_spice_schedule_Set() const;
    bool is_based_on_spice_schedule_Valid() const;

    QDateTime getStartingAt() const;
    void setStartingAt(const QDateTime &starting_at);
    bool is_starting_at_Set() const;
    bool is_starting_at_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getRepeatAt() const;
    void setRepeatAt(const QString &repeat_at);
    bool is_repeat_at_Set() const;
    bool is_repeat_at_Valid() const;

    OAITopicScheduleType getTopicScheduleType() const;
    void setTopicScheduleType(const OAITopicScheduleType &topic_schedule_type);
    bool is_topic_schedule_type_Set() const;
    bool is_topic_schedule_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    bool m_based_on_spice_schedule;
    bool m_based_on_spice_schedule_isSet;
    bool m_based_on_spice_schedule_isValid;

    QDateTime m_starting_at;
    bool m_starting_at_isSet;
    bool m_starting_at_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_repeat_at;
    bool m_repeat_at_isSet;
    bool m_repeat_at_isValid;

    OAITopicScheduleType m_topic_schedule_type;
    bool m_topic_schedule_type_isSet;
    bool m_topic_schedule_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTopicRefreshSchedule_request_RefreshSchedule)

#endif // OAICreateTopicRefreshSchedule_request_RefreshSchedule_H
