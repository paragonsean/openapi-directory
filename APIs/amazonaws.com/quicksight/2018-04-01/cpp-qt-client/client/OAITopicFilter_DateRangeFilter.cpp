/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicFilter_DateRangeFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicFilter_DateRangeFilter::OAITopicFilter_DateRangeFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicFilter_DateRangeFilter::OAITopicFilter_DateRangeFilter() {
    this->initializeModel();
}

OAITopicFilter_DateRangeFilter::~OAITopicFilter_DateRangeFilter() {}

void OAITopicFilter_DateRangeFilter::initializeModel() {

    m_inclusive_isSet = false;
    m_inclusive_isValid = false;

    m_constant_isSet = false;
    m_constant_isValid = false;
}

void OAITopicFilter_DateRangeFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicFilter_DateRangeFilter::fromJsonObject(QJsonObject json) {

    m_inclusive_isValid = ::OpenAPI::fromJsonValue(m_inclusive, json[QString("Inclusive")]);
    m_inclusive_isSet = !json[QString("Inclusive")].isNull() && m_inclusive_isValid;

    m_constant_isValid = ::OpenAPI::fromJsonValue(m_constant, json[QString("Constant")]);
    m_constant_isSet = !json[QString("Constant")].isNull() && m_constant_isValid;
}

QString OAITopicFilter_DateRangeFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicFilter_DateRangeFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_inclusive_isSet) {
        obj.insert(QString("Inclusive"), ::OpenAPI::toJsonValue(m_inclusive));
    }
    if (m_constant.isSet()) {
        obj.insert(QString("Constant"), ::OpenAPI::toJsonValue(m_constant));
    }
    return obj;
}

bool OAITopicFilter_DateRangeFilter::getInclusive() const {
    return m_inclusive;
}
void OAITopicFilter_DateRangeFilter::setInclusive(const bool &inclusive) {
    m_inclusive = inclusive;
    m_inclusive_isSet = true;
}

bool OAITopicFilter_DateRangeFilter::is_inclusive_Set() const{
    return m_inclusive_isSet;
}

bool OAITopicFilter_DateRangeFilter::is_inclusive_Valid() const{
    return m_inclusive_isValid;
}

OAITopicDateRangeFilter_Constant OAITopicFilter_DateRangeFilter::getConstant() const {
    return m_constant;
}
void OAITopicFilter_DateRangeFilter::setConstant(const OAITopicDateRangeFilter_Constant &constant) {
    m_constant = constant;
    m_constant_isSet = true;
}

bool OAITopicFilter_DateRangeFilter::is_constant_Set() const{
    return m_constant_isSet;
}

bool OAITopicFilter_DateRangeFilter::is_constant_Valid() const{
    return m_constant_isValid;
}

bool OAITopicFilter_DateRangeFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_constant.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicFilter_DateRangeFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
