/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISankeyDiagramVisual_ChartConfiguration.h
 *
 * 
 */

#ifndef OAISankeyDiagramVisual_ChartConfiguration_H
#define OAISankeyDiagramVisual_ChartConfiguration_H

#include <QJsonObject>

#include "OAISankeyDiagramChartConfiguration_DataLabels.h"
#include "OAISankeyDiagramChartConfiguration_FieldWells.h"
#include "OAISankeyDiagramChartConfiguration_SortConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISankeyDiagramChartConfiguration_FieldWells;
class OAISankeyDiagramChartConfiguration_SortConfiguration;
class OAISankeyDiagramChartConfiguration_DataLabels;

class OAISankeyDiagramVisual_ChartConfiguration : public OAIObject {
public:
    OAISankeyDiagramVisual_ChartConfiguration();
    OAISankeyDiagramVisual_ChartConfiguration(QString json);
    ~OAISankeyDiagramVisual_ChartConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISankeyDiagramChartConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAISankeyDiagramChartConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAISankeyDiagramChartConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAISankeyDiagramChartConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAISankeyDiagramChartConfiguration_DataLabels getDataLabels() const;
    void setDataLabels(const OAISankeyDiagramChartConfiguration_DataLabels &data_labels);
    bool is_data_labels_Set() const;
    bool is_data_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISankeyDiagramChartConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAISankeyDiagramChartConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAISankeyDiagramChartConfiguration_DataLabels m_data_labels;
    bool m_data_labels_isSet;
    bool m_data_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISankeyDiagramVisual_ChartConfiguration)

#endif // OAISankeyDiagramVisual_ChartConfiguration_H
