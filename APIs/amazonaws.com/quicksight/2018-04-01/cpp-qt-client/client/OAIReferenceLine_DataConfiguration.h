/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceLine_DataConfiguration.h
 *
 * 
 */

#ifndef OAIReferenceLine_DataConfiguration_H
#define OAIReferenceLine_DataConfiguration_H

#include <QJsonObject>

#include "OAIAxisBinding.h"
#include "OAIReferenceLineDataConfiguration_DynamicConfiguration.h"
#include "OAIReferenceLineDataConfiguration_StaticConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceLineDataConfiguration_StaticConfiguration;
class OAIReferenceLineDataConfiguration_DynamicConfiguration;

class OAIReferenceLine_DataConfiguration : public OAIObject {
public:
    OAIReferenceLine_DataConfiguration();
    OAIReferenceLine_DataConfiguration(QString json);
    ~OAIReferenceLine_DataConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReferenceLineDataConfiguration_StaticConfiguration getStaticConfiguration() const;
    void setStaticConfiguration(const OAIReferenceLineDataConfiguration_StaticConfiguration &static_configuration);
    bool is_static_configuration_Set() const;
    bool is_static_configuration_Valid() const;

    OAIReferenceLineDataConfiguration_DynamicConfiguration getDynamicConfiguration() const;
    void setDynamicConfiguration(const OAIReferenceLineDataConfiguration_DynamicConfiguration &dynamic_configuration);
    bool is_dynamic_configuration_Set() const;
    bool is_dynamic_configuration_Valid() const;

    OAIAxisBinding getAxisBinding() const;
    void setAxisBinding(const OAIAxisBinding &axis_binding);
    bool is_axis_binding_Set() const;
    bool is_axis_binding_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReferenceLineDataConfiguration_StaticConfiguration m_static_configuration;
    bool m_static_configuration_isSet;
    bool m_static_configuration_isValid;

    OAIReferenceLineDataConfiguration_DynamicConfiguration m_dynamic_configuration;
    bool m_dynamic_configuration_isSet;
    bool m_dynamic_configuration_isValid;

    OAIAxisBinding m_axis_binding;
    bool m_axis_binding_isSet;
    bool m_axis_binding_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceLine_DataConfiguration)

#endif // OAIReferenceLine_DataConfiguration_H
