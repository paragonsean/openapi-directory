/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterUserRequest.h
 *
 * 
 */

#ifndef OAIRegisterUserRequest_H
#define OAIRegisterUserRequest_H

#include <QJsonObject>

#include "OAIIdentityType.h"
#include "OAIUserRole.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegisterUserRequest : public OAIObject {
public:
    OAIRegisterUserRequest();
    OAIRegisterUserRequest(QString json);
    ~OAIRegisterUserRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIdentityType getIdentityType() const;
    void setIdentityType(const OAIIdentityType &identity_type);
    bool is_identity_type_Set() const;
    bool is_identity_type_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIUserRole getUserRole() const;
    void setUserRole(const OAIUserRole &user_role);
    bool is_user_role_Set() const;
    bool is_user_role_Valid() const;

    QString getIamArn() const;
    void setIamArn(const QString &iam_arn);
    bool is_iam_arn_Set() const;
    bool is_iam_arn_Valid() const;

    QString getSessionName() const;
    void setSessionName(const QString &session_name);
    bool is_session_name_Set() const;
    bool is_session_name_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    QString getCustomPermissionsName() const;
    void setCustomPermissionsName(const QString &custom_permissions_name);
    bool is_custom_permissions_name_Set() const;
    bool is_custom_permissions_name_Valid() const;

    QString getExternalLoginFederationProviderType() const;
    void setExternalLoginFederationProviderType(const QString &external_login_federation_provider_type);
    bool is_external_login_federation_provider_type_Set() const;
    bool is_external_login_federation_provider_type_Valid() const;

    QString getCustomFederationProviderUrl() const;
    void setCustomFederationProviderUrl(const QString &custom_federation_provider_url);
    bool is_custom_federation_provider_url_Set() const;
    bool is_custom_federation_provider_url_Valid() const;

    QString getExternalLoginId() const;
    void setExternalLoginId(const QString &external_login_id);
    bool is_external_login_id_Set() const;
    bool is_external_login_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIdentityType m_identity_type;
    bool m_identity_type_isSet;
    bool m_identity_type_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIUserRole m_user_role;
    bool m_user_role_isSet;
    bool m_user_role_isValid;

    QString m_iam_arn;
    bool m_iam_arn_isSet;
    bool m_iam_arn_isValid;

    QString m_session_name;
    bool m_session_name_isSet;
    bool m_session_name_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;

    QString m_custom_permissions_name;
    bool m_custom_permissions_name_isSet;
    bool m_custom_permissions_name_isValid;

    QString m_external_login_federation_provider_type;
    bool m_external_login_federation_provider_type_isSet;
    bool m_external_login_federation_provider_type_isValid;

    QString m_custom_federation_provider_url;
    bool m_custom_federation_provider_url_isSet;
    bool m_custom_federation_provider_url_isValid;

    QString m_external_login_id;
    bool m_external_login_id_isSet;
    bool m_external_login_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterUserRequest)

#endif // OAIRegisterUserRequest_H
