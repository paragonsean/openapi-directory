/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaginationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaginationConfiguration::OAIPaginationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaginationConfiguration::OAIPaginationConfiguration() {
    this->initializeModel();
}

OAIPaginationConfiguration::~OAIPaginationConfiguration() {}

void OAIPaginationConfiguration::initializeModel() {

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;
}

void OAIPaginationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaginationConfiguration::fromJsonObject(QJsonObject json) {

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("PageSize")]);
    m_page_size_isSet = !json[QString("PageSize")].isNull() && m_page_size_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("PageNumber")]);
    m_page_number_isSet = !json[QString("PageNumber")].isNull() && m_page_number_isValid;
}

QString OAIPaginationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaginationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_page_size_isSet) {
        obj.insert(QString("PageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("PageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    return obj;
}

qint32 OAIPaginationConfiguration::getPageSize() const {
    return m_page_size;
}
void OAIPaginationConfiguration::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIPaginationConfiguration::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIPaginationConfiguration::is_page_size_Valid() const{
    return m_page_size_isValid;
}

qint32 OAIPaginationConfiguration::getPageNumber() const {
    return m_page_number;
}
void OAIPaginationConfiguration::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIPaginationConfiguration::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIPaginationConfiguration::is_page_number_Valid() const{
    return m_page_number_isValid;
}

bool OAIPaginationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaginationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_page_size_isValid && m_page_number_isValid && true;
}

} // namespace OpenAPI
