/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency() {
    this->initializeModel();
}

OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::~OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency() {}

void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::initializeModel() {

    m_interval_isSet = false;
    m_interval_isValid = false;

    m_refresh_on_day_isSet = false;
    m_refresh_on_day_isValid = false;

    m_timezone_isSet = false;
    m_timezone_isValid = false;

    m_time_of_the_day_isSet = false;
    m_time_of_the_day_isValid = false;
}

void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::fromJsonObject(QJsonObject json) {

    m_interval_isValid = ::OpenAPI::fromJsonValue(m_interval, json[QString("Interval")]);
    m_interval_isSet = !json[QString("Interval")].isNull() && m_interval_isValid;

    m_refresh_on_day_isValid = ::OpenAPI::fromJsonValue(m_refresh_on_day, json[QString("RefreshOnDay")]);
    m_refresh_on_day_isSet = !json[QString("RefreshOnDay")].isNull() && m_refresh_on_day_isValid;

    m_timezone_isValid = ::OpenAPI::fromJsonValue(m_timezone, json[QString("Timezone")]);
    m_timezone_isSet = !json[QString("Timezone")].isNull() && m_timezone_isValid;

    m_time_of_the_day_isValid = ::OpenAPI::fromJsonValue(m_time_of_the_day, json[QString("TimeOfTheDay")]);
    m_time_of_the_day_isSet = !json[QString("TimeOfTheDay")].isNull() && m_time_of_the_day_isValid;
}

QString OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::asJsonObject() const {
    QJsonObject obj;
    if (m_interval.isSet()) {
        obj.insert(QString("Interval"), ::OpenAPI::toJsonValue(m_interval));
    }
    if (m_refresh_on_day.isSet()) {
        obj.insert(QString("RefreshOnDay"), ::OpenAPI::toJsonValue(m_refresh_on_day));
    }
    if (m_timezone_isSet) {
        obj.insert(QString("Timezone"), ::OpenAPI::toJsonValue(m_timezone));
    }
    if (m_time_of_the_day_isSet) {
        obj.insert(QString("TimeOfTheDay"), ::OpenAPI::toJsonValue(m_time_of_the_day));
    }
    return obj;
}

OAIRefreshInterval OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::getInterval() const {
    return m_interval;
}
void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::setInterval(const OAIRefreshInterval &interval) {
    m_interval = interval;
    m_interval_isSet = true;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_interval_Set() const{
    return m_interval_isSet;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_interval_Valid() const{
    return m_interval_isValid;
}

OAIRefreshFrequency_RefreshOnDay OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::getRefreshOnDay() const {
    return m_refresh_on_day;
}
void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::setRefreshOnDay(const OAIRefreshFrequency_RefreshOnDay &refresh_on_day) {
    m_refresh_on_day = refresh_on_day;
    m_refresh_on_day_isSet = true;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_refresh_on_day_Set() const{
    return m_refresh_on_day_isSet;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_refresh_on_day_Valid() const{
    return m_refresh_on_day_isValid;
}

QString OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::getTimezone() const {
    return m_timezone;
}
void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::setTimezone(const QString &timezone) {
    m_timezone = timezone;
    m_timezone_isSet = true;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_timezone_Set() const{
    return m_timezone_isSet;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_timezone_Valid() const{
    return m_timezone_isValid;
}

QString OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::getTimeOfTheDay() const {
    return m_time_of_the_day;
}
void OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::setTimeOfTheDay(const QString &time_of_the_day) {
    m_time_of_the_day = time_of_the_day;
    m_time_of_the_day_isSet = true;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_time_of_the_day_Set() const{
    return m_time_of_the_day_isSet;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::is_time_of_the_day_Valid() const{
    return m_time_of_the_day_isValid;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refresh_on_day.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_of_the_day_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRefreshSchedule_request_Schedule_ScheduleFrequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_interval_isValid && true;
}

} // namespace OpenAPI
