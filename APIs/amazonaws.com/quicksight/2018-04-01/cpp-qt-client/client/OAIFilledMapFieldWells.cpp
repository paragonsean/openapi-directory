/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilledMapFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilledMapFieldWells::OAIFilledMapFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilledMapFieldWells::OAIFilledMapFieldWells() {
    this->initializeModel();
}

OAIFilledMapFieldWells::~OAIFilledMapFieldWells() {}

void OAIFilledMapFieldWells::initializeModel() {

    m_filled_map_aggregated_field_wells_isSet = false;
    m_filled_map_aggregated_field_wells_isValid = false;
}

void OAIFilledMapFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFilledMapFieldWells::fromJsonObject(QJsonObject json) {

    m_filled_map_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_filled_map_aggregated_field_wells, json[QString("FilledMapAggregatedFieldWells")]);
    m_filled_map_aggregated_field_wells_isSet = !json[QString("FilledMapAggregatedFieldWells")].isNull() && m_filled_map_aggregated_field_wells_isValid;
}

QString OAIFilledMapFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFilledMapFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_filled_map_aggregated_field_wells.isSet()) {
        obj.insert(QString("FilledMapAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_filled_map_aggregated_field_wells));
    }
    return obj;
}

OAIFilledMapFieldWells_FilledMapAggregatedFieldWells OAIFilledMapFieldWells::getFilledMapAggregatedFieldWells() const {
    return m_filled_map_aggregated_field_wells;
}
void OAIFilledMapFieldWells::setFilledMapAggregatedFieldWells(const OAIFilledMapFieldWells_FilledMapAggregatedFieldWells &filled_map_aggregated_field_wells) {
    m_filled_map_aggregated_field_wells = filled_map_aggregated_field_wells;
    m_filled_map_aggregated_field_wells_isSet = true;
}

bool OAIFilledMapFieldWells::is_filled_map_aggregated_field_wells_Set() const{
    return m_filled_map_aggregated_field_wells_isSet;
}

bool OAIFilledMapFieldWells::is_filled_map_aggregated_field_wells_Valid() const{
    return m_filled_map_aggregated_field_wells_isValid;
}

bool OAIFilledMapFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filled_map_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFilledMapFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
