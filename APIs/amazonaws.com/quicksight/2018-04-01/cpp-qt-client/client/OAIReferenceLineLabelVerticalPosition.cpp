/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceLineLabelVerticalPosition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceLineLabelVerticalPosition::OAIReferenceLineLabelVerticalPosition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceLineLabelVerticalPosition::OAIReferenceLineLabelVerticalPosition() {
    this->initializeModel();
}

OAIReferenceLineLabelVerticalPosition::~OAIReferenceLineLabelVerticalPosition() {}

void OAIReferenceLineLabelVerticalPosition::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReferenceLineLabelVerticalPosition::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReferenceLineLabelVerticalPosition::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ABOVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferenceLineLabelVerticalPosition::ABOVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BELOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferenceLineLabelVerticalPosition::BELOW;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReferenceLineLabelVerticalPosition::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReferenceLineLabelVerticalPosition::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReferenceLineLabelVerticalPosition::ABOVE:
            val = "ABOVE";
            break;
        case eOAIReferenceLineLabelVerticalPosition::BELOW:
            val = "BELOW";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReferenceLineLabelVerticalPosition::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReferenceLineLabelVerticalPosition::eOAIReferenceLineLabelVerticalPosition OAIReferenceLineLabelVerticalPosition::getValue() const {
    return m_value;
}

void OAIReferenceLineLabelVerticalPosition::setValue(const OAIReferenceLineLabelVerticalPosition::eOAIReferenceLineLabelVerticalPosition& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReferenceLineLabelVerticalPosition::isSet() const {
    
    return m_value_isSet;
}

bool OAIReferenceLineLabelVerticalPosition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
