/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldWells::OAITableFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldWells::OAITableFieldWells() {
    this->initializeModel();
}

OAITableFieldWells::~OAITableFieldWells() {}

void OAITableFieldWells::initializeModel() {

    m_table_aggregated_field_wells_isSet = false;
    m_table_aggregated_field_wells_isValid = false;

    m_table_unaggregated_field_wells_isSet = false;
    m_table_unaggregated_field_wells_isValid = false;
}

void OAITableFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldWells::fromJsonObject(QJsonObject json) {

    m_table_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_table_aggregated_field_wells, json[QString("TableAggregatedFieldWells")]);
    m_table_aggregated_field_wells_isSet = !json[QString("TableAggregatedFieldWells")].isNull() && m_table_aggregated_field_wells_isValid;

    m_table_unaggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_table_unaggregated_field_wells, json[QString("TableUnaggregatedFieldWells")]);
    m_table_unaggregated_field_wells_isSet = !json[QString("TableUnaggregatedFieldWells")].isNull() && m_table_unaggregated_field_wells_isValid;
}

QString OAITableFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_table_aggregated_field_wells.isSet()) {
        obj.insert(QString("TableAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_table_aggregated_field_wells));
    }
    if (m_table_unaggregated_field_wells.isSet()) {
        obj.insert(QString("TableUnaggregatedFieldWells"), ::OpenAPI::toJsonValue(m_table_unaggregated_field_wells));
    }
    return obj;
}

OAITableFieldWells_TableAggregatedFieldWells OAITableFieldWells::getTableAggregatedFieldWells() const {
    return m_table_aggregated_field_wells;
}
void OAITableFieldWells::setTableAggregatedFieldWells(const OAITableFieldWells_TableAggregatedFieldWells &table_aggregated_field_wells) {
    m_table_aggregated_field_wells = table_aggregated_field_wells;
    m_table_aggregated_field_wells_isSet = true;
}

bool OAITableFieldWells::is_table_aggregated_field_wells_Set() const{
    return m_table_aggregated_field_wells_isSet;
}

bool OAITableFieldWells::is_table_aggregated_field_wells_Valid() const{
    return m_table_aggregated_field_wells_isValid;
}

OAITableFieldWells_TableUnaggregatedFieldWells OAITableFieldWells::getTableUnaggregatedFieldWells() const {
    return m_table_unaggregated_field_wells;
}
void OAITableFieldWells::setTableUnaggregatedFieldWells(const OAITableFieldWells_TableUnaggregatedFieldWells &table_unaggregated_field_wells) {
    m_table_unaggregated_field_wells = table_unaggregated_field_wells;
    m_table_unaggregated_field_wells_isSet = true;
}

bool OAITableFieldWells::is_table_unaggregated_field_wells_Set() const{
    return m_table_unaggregated_field_wells_isSet;
}

bool OAITableFieldWells::is_table_unaggregated_field_wells_Valid() const{
    return m_table_unaggregated_field_wells_isValid;
}

bool OAITableFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_unaggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
