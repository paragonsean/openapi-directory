/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParameterDropDownControl_DisplayOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParameterDropDownControl_DisplayOptions::OAIParameterDropDownControl_DisplayOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParameterDropDownControl_DisplayOptions::OAIParameterDropDownControl_DisplayOptions() {
    this->initializeModel();
}

OAIParameterDropDownControl_DisplayOptions::~OAIParameterDropDownControl_DisplayOptions() {}

void OAIParameterDropDownControl_DisplayOptions::initializeModel() {

    m_select_all_options_isSet = false;
    m_select_all_options_isValid = false;

    m_title_options_isSet = false;
    m_title_options_isValid = false;

    m_info_icon_label_options_isSet = false;
    m_info_icon_label_options_isValid = false;
}

void OAIParameterDropDownControl_DisplayOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParameterDropDownControl_DisplayOptions::fromJsonObject(QJsonObject json) {

    m_select_all_options_isValid = ::OpenAPI::fromJsonValue(m_select_all_options, json[QString("SelectAllOptions")]);
    m_select_all_options_isSet = !json[QString("SelectAllOptions")].isNull() && m_select_all_options_isValid;

    m_title_options_isValid = ::OpenAPI::fromJsonValue(m_title_options, json[QString("TitleOptions")]);
    m_title_options_isSet = !json[QString("TitleOptions")].isNull() && m_title_options_isValid;

    m_info_icon_label_options_isValid = ::OpenAPI::fromJsonValue(m_info_icon_label_options, json[QString("InfoIconLabelOptions")]);
    m_info_icon_label_options_isSet = !json[QString("InfoIconLabelOptions")].isNull() && m_info_icon_label_options_isValid;
}

QString OAIParameterDropDownControl_DisplayOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParameterDropDownControl_DisplayOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_select_all_options.isSet()) {
        obj.insert(QString("SelectAllOptions"), ::OpenAPI::toJsonValue(m_select_all_options));
    }
    if (m_title_options.isSet()) {
        obj.insert(QString("TitleOptions"), ::OpenAPI::toJsonValue(m_title_options));
    }
    if (m_info_icon_label_options.isSet()) {
        obj.insert(QString("InfoIconLabelOptions"), ::OpenAPI::toJsonValue(m_info_icon_label_options));
    }
    return obj;
}

OAIDropDownControlDisplayOptions_SelectAllOptions OAIParameterDropDownControl_DisplayOptions::getSelectAllOptions() const {
    return m_select_all_options;
}
void OAIParameterDropDownControl_DisplayOptions::setSelectAllOptions(const OAIDropDownControlDisplayOptions_SelectAllOptions &select_all_options) {
    m_select_all_options = select_all_options;
    m_select_all_options_isSet = true;
}

bool OAIParameterDropDownControl_DisplayOptions::is_select_all_options_Set() const{
    return m_select_all_options_isSet;
}

bool OAIParameterDropDownControl_DisplayOptions::is_select_all_options_Valid() const{
    return m_select_all_options_isValid;
}

OAIDateTimePickerControlDisplayOptions_TitleOptions OAIParameterDropDownControl_DisplayOptions::getTitleOptions() const {
    return m_title_options;
}
void OAIParameterDropDownControl_DisplayOptions::setTitleOptions(const OAIDateTimePickerControlDisplayOptions_TitleOptions &title_options) {
    m_title_options = title_options;
    m_title_options_isSet = true;
}

bool OAIParameterDropDownControl_DisplayOptions::is_title_options_Set() const{
    return m_title_options_isSet;
}

bool OAIParameterDropDownControl_DisplayOptions::is_title_options_Valid() const{
    return m_title_options_isValid;
}

OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions OAIParameterDropDownControl_DisplayOptions::getInfoIconLabelOptions() const {
    return m_info_icon_label_options;
}
void OAIParameterDropDownControl_DisplayOptions::setInfoIconLabelOptions(const OAIDateTimePickerControlDisplayOptions_InfoIconLabelOptions &info_icon_label_options) {
    m_info_icon_label_options = info_icon_label_options;
    m_info_icon_label_options_isSet = true;
}

bool OAIParameterDropDownControl_DisplayOptions::is_info_icon_label_options_Set() const{
    return m_info_icon_label_options_isSet;
}

bool OAIParameterDropDownControl_DisplayOptions::is_info_icon_label_options_Valid() const{
    return m_info_icon_label_options_isValid;
}

bool OAIParameterDropDownControl_DisplayOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_select_all_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_info_icon_label_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParameterDropDownControl_DisplayOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
