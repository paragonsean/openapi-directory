/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISankeyDiagramFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISankeyDiagramFieldWells::OAISankeyDiagramFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISankeyDiagramFieldWells::OAISankeyDiagramFieldWells() {
    this->initializeModel();
}

OAISankeyDiagramFieldWells::~OAISankeyDiagramFieldWells() {}

void OAISankeyDiagramFieldWells::initializeModel() {

    m_sankey_diagram_aggregated_field_wells_isSet = false;
    m_sankey_diagram_aggregated_field_wells_isValid = false;
}

void OAISankeyDiagramFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISankeyDiagramFieldWells::fromJsonObject(QJsonObject json) {

    m_sankey_diagram_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_sankey_diagram_aggregated_field_wells, json[QString("SankeyDiagramAggregatedFieldWells")]);
    m_sankey_diagram_aggregated_field_wells_isSet = !json[QString("SankeyDiagramAggregatedFieldWells")].isNull() && m_sankey_diagram_aggregated_field_wells_isValid;
}

QString OAISankeyDiagramFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISankeyDiagramFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_sankey_diagram_aggregated_field_wells.isSet()) {
        obj.insert(QString("SankeyDiagramAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_sankey_diagram_aggregated_field_wells));
    }
    return obj;
}

OAISankeyDiagramFieldWells_SankeyDiagramAggregatedFieldWells OAISankeyDiagramFieldWells::getSankeyDiagramAggregatedFieldWells() const {
    return m_sankey_diagram_aggregated_field_wells;
}
void OAISankeyDiagramFieldWells::setSankeyDiagramAggregatedFieldWells(const OAISankeyDiagramFieldWells_SankeyDiagramAggregatedFieldWells &sankey_diagram_aggregated_field_wells) {
    m_sankey_diagram_aggregated_field_wells = sankey_diagram_aggregated_field_wells;
    m_sankey_diagram_aggregated_field_wells_isSet = true;
}

bool OAISankeyDiagramFieldWells::is_sankey_diagram_aggregated_field_wells_Set() const{
    return m_sankey_diagram_aggregated_field_wells_isSet;
}

bool OAISankeyDiagramFieldWells::is_sankey_diagram_aggregated_field_wells_Valid() const{
    return m_sankey_diagram_aggregated_field_wells_isValid;
}

bool OAISankeyDiagramFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sankey_diagram_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISankeyDiagramFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
