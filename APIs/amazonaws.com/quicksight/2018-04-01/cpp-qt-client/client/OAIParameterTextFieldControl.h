/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterTextFieldControl.h
 *
 * A control to display a text box that is used to enter a single entry.
 */

#ifndef OAIParameterTextFieldControl_H
#define OAIParameterTextFieldControl_H

#include <QJsonObject>

#include "OAIFilterTextFieldControl_DisplayOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilterTextFieldControl_DisplayOptions;

class OAIParameterTextFieldControl : public OAIObject {
public:
    OAIParameterTextFieldControl();
    OAIParameterTextFieldControl(QString json);
    ~OAIParameterTextFieldControl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getParameterControlId() const;
    void setParameterControlId(const QString &parameter_control_id);
    bool is_parameter_control_id_Set() const;
    bool is_parameter_control_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getSourceParameterName() const;
    void setSourceParameterName(const QString &source_parameter_name);
    bool is_source_parameter_name_Set() const;
    bool is_source_parameter_name_Valid() const;

    OAIFilterTextFieldControl_DisplayOptions getDisplayOptions() const;
    void setDisplayOptions(const OAIFilterTextFieldControl_DisplayOptions &display_options);
    bool is_display_options_Set() const;
    bool is_display_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parameter_control_id;
    bool m_parameter_control_id_isSet;
    bool m_parameter_control_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_source_parameter_name;
    bool m_source_parameter_name_isSet;
    bool m_source_parameter_name_isValid;

    OAIFilterTextFieldControl_DisplayOptions m_display_options;
    bool m_display_options_isSet;
    bool m_display_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterTextFieldControl)

#endif // OAIParameterTextFieldControl_H
