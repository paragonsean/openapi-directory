/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateIpRestriction_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateIpRestriction_request::OAIUpdateIpRestriction_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateIpRestriction_request::OAIUpdateIpRestriction_request() {
    this->initializeModel();
}

OAIUpdateIpRestriction_request::~OAIUpdateIpRestriction_request() {}

void OAIUpdateIpRestriction_request::initializeModel() {

    m_ip_restriction_rule_map_isSet = false;
    m_ip_restriction_rule_map_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIUpdateIpRestriction_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateIpRestriction_request::fromJsonObject(QJsonObject json) {

    m_ip_restriction_rule_map_isValid = ::OpenAPI::fromJsonValue(m_ip_restriction_rule_map, json[QString("IpRestrictionRuleMap")]);
    m_ip_restriction_rule_map_isSet = !json[QString("IpRestrictionRuleMap")].isNull() && m_ip_restriction_rule_map_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;
}

QString OAIUpdateIpRestriction_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateIpRestriction_request::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_restriction_rule_map.size() > 0) {
        obj.insert(QString("IpRestrictionRuleMap"), ::OpenAPI::toJsonValue(m_ip_restriction_rule_map));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QMap<QString, QString> OAIUpdateIpRestriction_request::getIpRestrictionRuleMap() const {
    return m_ip_restriction_rule_map;
}
void OAIUpdateIpRestriction_request::setIpRestrictionRuleMap(const QMap<QString, QString> &ip_restriction_rule_map) {
    m_ip_restriction_rule_map = ip_restriction_rule_map;
    m_ip_restriction_rule_map_isSet = true;
}

bool OAIUpdateIpRestriction_request::is_ip_restriction_rule_map_Set() const{
    return m_ip_restriction_rule_map_isSet;
}

bool OAIUpdateIpRestriction_request::is_ip_restriction_rule_map_Valid() const{
    return m_ip_restriction_rule_map_isValid;
}

bool OAIUpdateIpRestriction_request::isEnabled() const {
    return m_enabled;
}
void OAIUpdateIpRestriction_request::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIUpdateIpRestriction_request::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIUpdateIpRestriction_request::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIUpdateIpRestriction_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_restriction_rule_map.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateIpRestriction_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
