/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataFieldSeriesItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataFieldSeriesItem::OAIDataFieldSeriesItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataFieldSeriesItem::OAIDataFieldSeriesItem() {
    this->initializeModel();
}

OAIDataFieldSeriesItem::~OAIDataFieldSeriesItem() {}

void OAIDataFieldSeriesItem::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_field_value_isSet = false;
    m_field_value_isValid = false;

    m_axis_binding_isSet = false;
    m_axis_binding_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAIDataFieldSeriesItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataFieldSeriesItem::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldId")]);
    m_field_id_isSet = !json[QString("FieldId")].isNull() && m_field_id_isValid;

    m_field_value_isValid = ::OpenAPI::fromJsonValue(m_field_value, json[QString("FieldValue")]);
    m_field_value_isSet = !json[QString("FieldValue")].isNull() && m_field_value_isValid;

    m_axis_binding_isValid = ::OpenAPI::fromJsonValue(m_axis_binding, json[QString("AxisBinding")]);
    m_axis_binding_isSet = !json[QString("AxisBinding")].isNull() && m_axis_binding_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("Settings")]);
    m_settings_isSet = !json[QString("Settings")].isNull() && m_settings_isValid;
}

QString OAIDataFieldSeriesItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataFieldSeriesItem::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id_isSet) {
        obj.insert(QString("FieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_field_value_isSet) {
        obj.insert(QString("FieldValue"), ::OpenAPI::toJsonValue(m_field_value));
    }
    if (m_axis_binding.isSet()) {
        obj.insert(QString("AxisBinding"), ::OpenAPI::toJsonValue(m_axis_binding));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("Settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QString OAIDataFieldSeriesItem::getFieldId() const {
    return m_field_id;
}
void OAIDataFieldSeriesItem::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIDataFieldSeriesItem::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIDataFieldSeriesItem::is_field_id_Valid() const{
    return m_field_id_isValid;
}

QString OAIDataFieldSeriesItem::getFieldValue() const {
    return m_field_value;
}
void OAIDataFieldSeriesItem::setFieldValue(const QString &field_value) {
    m_field_value = field_value;
    m_field_value_isSet = true;
}

bool OAIDataFieldSeriesItem::is_field_value_Set() const{
    return m_field_value_isSet;
}

bool OAIDataFieldSeriesItem::is_field_value_Valid() const{
    return m_field_value_isValid;
}

OAIAxisBinding OAIDataFieldSeriesItem::getAxisBinding() const {
    return m_axis_binding;
}
void OAIDataFieldSeriesItem::setAxisBinding(const OAIAxisBinding &axis_binding) {
    m_axis_binding = axis_binding;
    m_axis_binding_isSet = true;
}

bool OAIDataFieldSeriesItem::is_axis_binding_Set() const{
    return m_axis_binding_isSet;
}

bool OAIDataFieldSeriesItem::is_axis_binding_Valid() const{
    return m_axis_binding_isValid;
}

OAIDataFieldSeriesItem_Settings OAIDataFieldSeriesItem::getSettings() const {
    return m_settings;
}
void OAIDataFieldSeriesItem::setSettings(const OAIDataFieldSeriesItem_Settings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAIDataFieldSeriesItem::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIDataFieldSeriesItem::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAIDataFieldSeriesItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_axis_binding.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataFieldSeriesItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_id_isValid && m_axis_binding_isValid && true;
}

} // namespace OpenAPI
