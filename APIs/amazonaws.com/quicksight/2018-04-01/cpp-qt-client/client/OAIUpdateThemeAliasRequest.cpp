/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateThemeAliasRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateThemeAliasRequest::OAIUpdateThemeAliasRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateThemeAliasRequest::OAIUpdateThemeAliasRequest() {
    this->initializeModel();
}

OAIUpdateThemeAliasRequest::~OAIUpdateThemeAliasRequest() {}

void OAIUpdateThemeAliasRequest::initializeModel() {

    m_theme_version_number_isSet = false;
    m_theme_version_number_isValid = false;
}

void OAIUpdateThemeAliasRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateThemeAliasRequest::fromJsonObject(QJsonObject json) {

    m_theme_version_number_isValid = ::OpenAPI::fromJsonValue(m_theme_version_number, json[QString("ThemeVersionNumber")]);
    m_theme_version_number_isSet = !json[QString("ThemeVersionNumber")].isNull() && m_theme_version_number_isValid;
}

QString OAIUpdateThemeAliasRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateThemeAliasRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_theme_version_number_isSet) {
        obj.insert(QString("ThemeVersionNumber"), ::OpenAPI::toJsonValue(m_theme_version_number));
    }
    return obj;
}

qint32 OAIUpdateThemeAliasRequest::getThemeVersionNumber() const {
    return m_theme_version_number;
}
void OAIUpdateThemeAliasRequest::setThemeVersionNumber(const qint32 &theme_version_number) {
    m_theme_version_number = theme_version_number;
    m_theme_version_number_isSet = true;
}

bool OAIUpdateThemeAliasRequest::is_theme_version_number_Set() const{
    return m_theme_version_number_isSet;
}

bool OAIUpdateThemeAliasRequest::is_theme_version_number_Valid() const{
    return m_theme_version_number_isValid;
}

bool OAIUpdateThemeAliasRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_theme_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateThemeAliasRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_theme_version_number_isValid && true;
}

} // namespace OpenAPI
