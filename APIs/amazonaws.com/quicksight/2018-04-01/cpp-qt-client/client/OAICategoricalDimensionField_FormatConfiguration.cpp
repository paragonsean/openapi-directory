/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoricalDimensionField_FormatConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoricalDimensionField_FormatConfiguration::OAICategoricalDimensionField_FormatConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoricalDimensionField_FormatConfiguration::OAICategoricalDimensionField_FormatConfiguration() {
    this->initializeModel();
}

OAICategoricalDimensionField_FormatConfiguration::~OAICategoricalDimensionField_FormatConfiguration() {}

void OAICategoricalDimensionField_FormatConfiguration::initializeModel() {

    m_null_value_format_configuration_isSet = false;
    m_null_value_format_configuration_isValid = false;

    m_numeric_format_configuration_isSet = false;
    m_numeric_format_configuration_isValid = false;
}

void OAICategoricalDimensionField_FormatConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategoricalDimensionField_FormatConfiguration::fromJsonObject(QJsonObject json) {

    m_null_value_format_configuration_isValid = ::OpenAPI::fromJsonValue(m_null_value_format_configuration, json[QString("NullValueFormatConfiguration")]);
    m_null_value_format_configuration_isSet = !json[QString("NullValueFormatConfiguration")].isNull() && m_null_value_format_configuration_isValid;

    m_numeric_format_configuration_isValid = ::OpenAPI::fromJsonValue(m_numeric_format_configuration, json[QString("NumericFormatConfiguration")]);
    m_numeric_format_configuration_isSet = !json[QString("NumericFormatConfiguration")].isNull() && m_numeric_format_configuration_isValid;
}

QString OAICategoricalDimensionField_FormatConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategoricalDimensionField_FormatConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_null_value_format_configuration.isSet()) {
        obj.insert(QString("NullValueFormatConfiguration"), ::OpenAPI::toJsonValue(m_null_value_format_configuration));
    }
    if (m_numeric_format_configuration.isSet()) {
        obj.insert(QString("NumericFormatConfiguration"), ::OpenAPI::toJsonValue(m_numeric_format_configuration));
    }
    return obj;
}

OAIStringFormatConfiguration_NullValueFormatConfiguration OAICategoricalDimensionField_FormatConfiguration::getNullValueFormatConfiguration() const {
    return m_null_value_format_configuration;
}
void OAICategoricalDimensionField_FormatConfiguration::setNullValueFormatConfiguration(const OAIStringFormatConfiguration_NullValueFormatConfiguration &null_value_format_configuration) {
    m_null_value_format_configuration = null_value_format_configuration;
    m_null_value_format_configuration_isSet = true;
}

bool OAICategoricalDimensionField_FormatConfiguration::is_null_value_format_configuration_Set() const{
    return m_null_value_format_configuration_isSet;
}

bool OAICategoricalDimensionField_FormatConfiguration::is_null_value_format_configuration_Valid() const{
    return m_null_value_format_configuration_isValid;
}

OAIStringFormatConfiguration_NumericFormatConfiguration OAICategoricalDimensionField_FormatConfiguration::getNumericFormatConfiguration() const {
    return m_numeric_format_configuration;
}
void OAICategoricalDimensionField_FormatConfiguration::setNumericFormatConfiguration(const OAIStringFormatConfiguration_NumericFormatConfiguration &numeric_format_configuration) {
    m_numeric_format_configuration = numeric_format_configuration;
    m_numeric_format_configuration_isSet = true;
}

bool OAICategoricalDimensionField_FormatConfiguration::is_numeric_format_configuration_Set() const{
    return m_numeric_format_configuration_isSet;
}

bool OAICategoricalDimensionField_FormatConfiguration::is_numeric_format_configuration_Valid() const{
    return m_numeric_format_configuration_isValid;
}

bool OAICategoricalDimensionField_FormatConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_null_value_format_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_numeric_format_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategoricalDimensionField_FormatConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
