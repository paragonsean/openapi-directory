/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRadarChartConfiguration_BaseSeriesSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRadarChartConfiguration_BaseSeriesSettings::OAIRadarChartConfiguration_BaseSeriesSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRadarChartConfiguration_BaseSeriesSettings::OAIRadarChartConfiguration_BaseSeriesSettings() {
    this->initializeModel();
}

OAIRadarChartConfiguration_BaseSeriesSettings::~OAIRadarChartConfiguration_BaseSeriesSettings() {}

void OAIRadarChartConfiguration_BaseSeriesSettings::initializeModel() {

    m_area_style_settings_isSet = false;
    m_area_style_settings_isValid = false;
}

void OAIRadarChartConfiguration_BaseSeriesSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRadarChartConfiguration_BaseSeriesSettings::fromJsonObject(QJsonObject json) {

    m_area_style_settings_isValid = ::OpenAPI::fromJsonValue(m_area_style_settings, json[QString("AreaStyleSettings")]);
    m_area_style_settings_isSet = !json[QString("AreaStyleSettings")].isNull() && m_area_style_settings_isValid;
}

QString OAIRadarChartConfiguration_BaseSeriesSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRadarChartConfiguration_BaseSeriesSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_area_style_settings.isSet()) {
        obj.insert(QString("AreaStyleSettings"), ::OpenAPI::toJsonValue(m_area_style_settings));
    }
    return obj;
}

OAIRadarChartSeriesSettings_AreaStyleSettings OAIRadarChartConfiguration_BaseSeriesSettings::getAreaStyleSettings() const {
    return m_area_style_settings;
}
void OAIRadarChartConfiguration_BaseSeriesSettings::setAreaStyleSettings(const OAIRadarChartSeriesSettings_AreaStyleSettings &area_style_settings) {
    m_area_style_settings = area_style_settings;
    m_area_style_settings_isSet = true;
}

bool OAIRadarChartConfiguration_BaseSeriesSettings::is_area_style_settings_Set() const{
    return m_area_style_settings_isSet;
}

bool OAIRadarChartConfiguration_BaseSeriesSettings::is_area_style_settings_Valid() const{
    return m_area_style_settings_isValid;
}

bool OAIRadarChartConfiguration_BaseSeriesSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_area_style_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRadarChartConfiguration_BaseSeriesSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
