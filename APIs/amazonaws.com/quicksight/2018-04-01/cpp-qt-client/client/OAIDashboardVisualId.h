/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashboardVisualId.h
 *
 * &lt;p&gt;A structure that contains the following elements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;DashboardId&lt;/code&gt; of the dashboard that has the visual that you want to embed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;SheetId&lt;/code&gt; of the sheet that has the visual that you want to embed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;VisualId&lt;/code&gt; of the visual that you want to embed.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The &lt;code&gt;DashboardId&lt;/code&gt;, &lt;code&gt;SheetId&lt;/code&gt;, and &lt;code&gt;VisualId&lt;/code&gt; can be found in the &lt;code&gt;IDs for developers&lt;/code&gt; section of the &lt;code&gt;Embed visual&lt;/code&gt; pane of the visual&#39;s on-visual menu of the Amazon QuickSight console. You can also get the &lt;code&gt;DashboardId&lt;/code&gt; with a &lt;code&gt;ListDashboards&lt;/code&gt; API operation.&lt;/p&gt;
 */

#ifndef OAIDashboardVisualId_H
#define OAIDashboardVisualId_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDashboardVisualId : public OAIObject {
public:
    OAIDashboardVisualId();
    OAIDashboardVisualId(QString json);
    ~OAIDashboardVisualId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDashboardId() const;
    void setDashboardId(const QString &dashboard_id);
    bool is_dashboard_id_Set() const;
    bool is_dashboard_id_Valid() const;

    QString getSheetId() const;
    void setSheetId(const QString &sheet_id);
    bool is_sheet_id_Set() const;
    bool is_sheet_id_Valid() const;

    QString getVisualId() const;
    void setVisualId(const QString &visual_id);
    bool is_visual_id_Set() const;
    bool is_visual_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dashboard_id;
    bool m_dashboard_id_isSet;
    bool m_dashboard_id_isValid;

    QString m_sheet_id;
    bool m_sheet_id_isSet;
    bool m_sheet_id_isValid;

    QString m_visual_id;
    bool m_visual_id_isSet;
    bool m_visual_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashboardVisualId)

#endif // OAIDashboardVisualId_H
