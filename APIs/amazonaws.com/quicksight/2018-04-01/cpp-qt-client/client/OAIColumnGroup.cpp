/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnGroup::OAIColumnGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnGroup::OAIColumnGroup() {
    this->initializeModel();
}

OAIColumnGroup::~OAIColumnGroup() {}

void OAIColumnGroup::initializeModel() {

    m_geo_spatial_column_group_isSet = false;
    m_geo_spatial_column_group_isValid = false;
}

void OAIColumnGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnGroup::fromJsonObject(QJsonObject json) {

    m_geo_spatial_column_group_isValid = ::OpenAPI::fromJsonValue(m_geo_spatial_column_group, json[QString("GeoSpatialColumnGroup")]);
    m_geo_spatial_column_group_isSet = !json[QString("GeoSpatialColumnGroup")].isNull() && m_geo_spatial_column_group_isValid;
}

QString OAIColumnGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_geo_spatial_column_group.isSet()) {
        obj.insert(QString("GeoSpatialColumnGroup"), ::OpenAPI::toJsonValue(m_geo_spatial_column_group));
    }
    return obj;
}

OAIColumnGroup_GeoSpatialColumnGroup OAIColumnGroup::getGeoSpatialColumnGroup() const {
    return m_geo_spatial_column_group;
}
void OAIColumnGroup::setGeoSpatialColumnGroup(const OAIColumnGroup_GeoSpatialColumnGroup &geo_spatial_column_group) {
    m_geo_spatial_column_group = geo_spatial_column_group;
    m_geo_spatial_column_group_isSet = true;
}

bool OAIColumnGroup::is_geo_spatial_column_group_Set() const{
    return m_geo_spatial_column_group_isSet;
}

bool OAIColumnGroup::is_geo_spatial_column_group_Valid() const{
    return m_geo_spatial_column_group_isValid;
}

bool OAIColumnGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_geo_spatial_column_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
