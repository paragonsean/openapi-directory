/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRadarChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRadarChartConfiguration_FieldWells::OAIRadarChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRadarChartConfiguration_FieldWells::OAIRadarChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAIRadarChartConfiguration_FieldWells::~OAIRadarChartConfiguration_FieldWells() {}

void OAIRadarChartConfiguration_FieldWells::initializeModel() {

    m_radar_chart_aggregated_field_wells_isSet = false;
    m_radar_chart_aggregated_field_wells_isValid = false;
}

void OAIRadarChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRadarChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_radar_chart_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_radar_chart_aggregated_field_wells, json[QString("RadarChartAggregatedFieldWells")]);
    m_radar_chart_aggregated_field_wells_isSet = !json[QString("RadarChartAggregatedFieldWells")].isNull() && m_radar_chart_aggregated_field_wells_isValid;
}

QString OAIRadarChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRadarChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_radar_chart_aggregated_field_wells.isSet()) {
        obj.insert(QString("RadarChartAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_radar_chart_aggregated_field_wells));
    }
    return obj;
}

OAIRadarChartFieldWells_RadarChartAggregatedFieldWells OAIRadarChartConfiguration_FieldWells::getRadarChartAggregatedFieldWells() const {
    return m_radar_chart_aggregated_field_wells;
}
void OAIRadarChartConfiguration_FieldWells::setRadarChartAggregatedFieldWells(const OAIRadarChartFieldWells_RadarChartAggregatedFieldWells &radar_chart_aggregated_field_wells) {
    m_radar_chart_aggregated_field_wells = radar_chart_aggregated_field_wells;
    m_radar_chart_aggregated_field_wells_isSet = true;
}

bool OAIRadarChartConfiguration_FieldWells::is_radar_chart_aggregated_field_wells_Set() const{
    return m_radar_chart_aggregated_field_wells_isSet;
}

bool OAIRadarChartConfiguration_FieldWells::is_radar_chart_aggregated_field_wells_Valid() const{
    return m_radar_chart_aggregated_field_wells_isValid;
}

bool OAIRadarChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_radar_chart_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRadarChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
