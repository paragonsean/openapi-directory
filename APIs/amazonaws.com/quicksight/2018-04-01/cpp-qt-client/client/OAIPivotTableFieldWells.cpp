/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPivotTableFieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPivotTableFieldWells::OAIPivotTableFieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPivotTableFieldWells::OAIPivotTableFieldWells() {
    this->initializeModel();
}

OAIPivotTableFieldWells::~OAIPivotTableFieldWells() {}

void OAIPivotTableFieldWells::initializeModel() {

    m_pivot_table_aggregated_field_wells_isSet = false;
    m_pivot_table_aggregated_field_wells_isValid = false;
}

void OAIPivotTableFieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPivotTableFieldWells::fromJsonObject(QJsonObject json) {

    m_pivot_table_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_pivot_table_aggregated_field_wells, json[QString("PivotTableAggregatedFieldWells")]);
    m_pivot_table_aggregated_field_wells_isSet = !json[QString("PivotTableAggregatedFieldWells")].isNull() && m_pivot_table_aggregated_field_wells_isValid;
}

QString OAIPivotTableFieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPivotTableFieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_pivot_table_aggregated_field_wells.isSet()) {
        obj.insert(QString("PivotTableAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_pivot_table_aggregated_field_wells));
    }
    return obj;
}

OAIPivotTableFieldWells_PivotTableAggregatedFieldWells OAIPivotTableFieldWells::getPivotTableAggregatedFieldWells() const {
    return m_pivot_table_aggregated_field_wells;
}
void OAIPivotTableFieldWells::setPivotTableAggregatedFieldWells(const OAIPivotTableFieldWells_PivotTableAggregatedFieldWells &pivot_table_aggregated_field_wells) {
    m_pivot_table_aggregated_field_wells = pivot_table_aggregated_field_wells;
    m_pivot_table_aggregated_field_wells_isSet = true;
}

bool OAIPivotTableFieldWells::is_pivot_table_aggregated_field_wells_Set() const{
    return m_pivot_table_aggregated_field_wells_isSet;
}

bool OAIPivotTableFieldWells::is_pivot_table_aggregated_field_wells_Valid() const{
    return m_pivot_table_aggregated_field_wells_isValid;
}

bool OAIPivotTableFieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pivot_table_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPivotTableFieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
