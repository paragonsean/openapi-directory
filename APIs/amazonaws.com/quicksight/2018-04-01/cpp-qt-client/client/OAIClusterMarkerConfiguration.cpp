/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterMarkerConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterMarkerConfiguration::OAIClusterMarkerConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterMarkerConfiguration::OAIClusterMarkerConfiguration() {
    this->initializeModel();
}

OAIClusterMarkerConfiguration::~OAIClusterMarkerConfiguration() {}

void OAIClusterMarkerConfiguration::initializeModel() {

    m_cluster_marker_isSet = false;
    m_cluster_marker_isValid = false;
}

void OAIClusterMarkerConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterMarkerConfiguration::fromJsonObject(QJsonObject json) {

    m_cluster_marker_isValid = ::OpenAPI::fromJsonValue(m_cluster_marker, json[QString("ClusterMarker")]);
    m_cluster_marker_isSet = !json[QString("ClusterMarker")].isNull() && m_cluster_marker_isValid;
}

QString OAIClusterMarkerConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterMarkerConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_marker.isSet()) {
        obj.insert(QString("ClusterMarker"), ::OpenAPI::toJsonValue(m_cluster_marker));
    }
    return obj;
}

OAIClusterMarkerConfiguration_ClusterMarker OAIClusterMarkerConfiguration::getClusterMarker() const {
    return m_cluster_marker;
}
void OAIClusterMarkerConfiguration::setClusterMarker(const OAIClusterMarkerConfiguration_ClusterMarker &cluster_marker) {
    m_cluster_marker = cluster_marker;
    m_cluster_marker_isSet = true;
}

bool OAIClusterMarkerConfiguration::is_cluster_marker_Set() const{
    return m_cluster_marker_isSet;
}

bool OAIClusterMarkerConfiguration::is_cluster_marker_Valid() const{
    return m_cluster_marker_isValid;
}

bool OAIClusterMarkerConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_marker.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterMarkerConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
