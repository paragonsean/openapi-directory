/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnTag_ColumnDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnTag_ColumnDescription::OAIColumnTag_ColumnDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnTag_ColumnDescription::OAIColumnTag_ColumnDescription() {
    this->initializeModel();
}

OAIColumnTag_ColumnDescription::~OAIColumnTag_ColumnDescription() {}

void OAIColumnTag_ColumnDescription::initializeModel() {

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIColumnTag_ColumnDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnTag_ColumnDescription::fromJsonObject(QJsonObject json) {

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("Text")]);
    m_text_isSet = !json[QString("Text")].isNull() && m_text_isValid;
}

QString OAIColumnTag_ColumnDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnTag_ColumnDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_text_isSet) {
        obj.insert(QString("Text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QString OAIColumnTag_ColumnDescription::getText() const {
    return m_text;
}
void OAIColumnTag_ColumnDescription::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIColumnTag_ColumnDescription::is_text_Set() const{
    return m_text_isSet;
}

bool OAIColumnTag_ColumnDescription::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIColumnTag_ColumnDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnTag_ColumnDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
