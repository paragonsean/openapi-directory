/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheetControlLayout_Configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheetControlLayout_Configuration::OAISheetControlLayout_Configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheetControlLayout_Configuration::OAISheetControlLayout_Configuration() {
    this->initializeModel();
}

OAISheetControlLayout_Configuration::~OAISheetControlLayout_Configuration() {}

void OAISheetControlLayout_Configuration::initializeModel() {

    m_grid_layout_isSet = false;
    m_grid_layout_isValid = false;
}

void OAISheetControlLayout_Configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISheetControlLayout_Configuration::fromJsonObject(QJsonObject json) {

    m_grid_layout_isValid = ::OpenAPI::fromJsonValue(m_grid_layout, json[QString("GridLayout")]);
    m_grid_layout_isSet = !json[QString("GridLayout")].isNull() && m_grid_layout_isValid;
}

QString OAISheetControlLayout_Configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISheetControlLayout_Configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_grid_layout.isSet()) {
        obj.insert(QString("GridLayout"), ::OpenAPI::toJsonValue(m_grid_layout));
    }
    return obj;
}

OAISheetControlLayoutConfiguration_GridLayout OAISheetControlLayout_Configuration::getGridLayout() const {
    return m_grid_layout;
}
void OAISheetControlLayout_Configuration::setGridLayout(const OAISheetControlLayoutConfiguration_GridLayout &grid_layout) {
    m_grid_layout = grid_layout;
    m_grid_layout_isSet = true;
}

bool OAISheetControlLayout_Configuration::is_grid_layout_Set() const{
    return m_grid_layout_isSet;
}

bool OAISheetControlLayout_Configuration::is_grid_layout_Valid() const{
    return m_grid_layout_isValid;
}

bool OAISheetControlLayout_Configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grid_layout.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISheetControlLayout_Configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
