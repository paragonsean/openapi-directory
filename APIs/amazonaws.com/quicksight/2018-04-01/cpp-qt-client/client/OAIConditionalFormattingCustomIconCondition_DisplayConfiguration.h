/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalFormattingCustomIconCondition_DisplayConfiguration.h
 *
 * 
 */

#ifndef OAIConditionalFormattingCustomIconCondition_DisplayConfiguration_H
#define OAIConditionalFormattingCustomIconCondition_DisplayConfiguration_H

#include <QJsonObject>

#include "OAIConditionalFormattingIconDisplayOption.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConditionalFormattingCustomIconCondition_DisplayConfiguration : public OAIObject {
public:
    OAIConditionalFormattingCustomIconCondition_DisplayConfiguration();
    OAIConditionalFormattingCustomIconCondition_DisplayConfiguration(QString json);
    ~OAIConditionalFormattingCustomIconCondition_DisplayConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConditionalFormattingIconDisplayOption getIconDisplayOption() const;
    void setIconDisplayOption(const OAIConditionalFormattingIconDisplayOption &icon_display_option);
    bool is_icon_display_option_Set() const;
    bool is_icon_display_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConditionalFormattingIconDisplayOption m_icon_display_option;
    bool m_icon_display_option_isSet;
    bool m_icon_display_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalFormattingCustomIconCondition_DisplayConfiguration)

#endif // OAIConditionalFormattingCustomIconCondition_DisplayConfiguration_H
