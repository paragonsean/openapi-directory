/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollingDateConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollingDateConfiguration::OAIRollingDateConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollingDateConfiguration::OAIRollingDateConfiguration() {
    this->initializeModel();
}

OAIRollingDateConfiguration::~OAIRollingDateConfiguration() {}

void OAIRollingDateConfiguration::initializeModel() {

    m_data_set_identifier_isSet = false;
    m_data_set_identifier_isValid = false;

    m_expression_isSet = false;
    m_expression_isValid = false;
}

void OAIRollingDateConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollingDateConfiguration::fromJsonObject(QJsonObject json) {

    m_data_set_identifier_isValid = ::OpenAPI::fromJsonValue(m_data_set_identifier, json[QString("DataSetIdentifier")]);
    m_data_set_identifier_isSet = !json[QString("DataSetIdentifier")].isNull() && m_data_set_identifier_isValid;

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("Expression")]);
    m_expression_isSet = !json[QString("Expression")].isNull() && m_expression_isValid;
}

QString OAIRollingDateConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollingDateConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_data_set_identifier_isSet) {
        obj.insert(QString("DataSetIdentifier"), ::OpenAPI::toJsonValue(m_data_set_identifier));
    }
    if (m_expression_isSet) {
        obj.insert(QString("Expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    return obj;
}

QString OAIRollingDateConfiguration::getDataSetIdentifier() const {
    return m_data_set_identifier;
}
void OAIRollingDateConfiguration::setDataSetIdentifier(const QString &data_set_identifier) {
    m_data_set_identifier = data_set_identifier;
    m_data_set_identifier_isSet = true;
}

bool OAIRollingDateConfiguration::is_data_set_identifier_Set() const{
    return m_data_set_identifier_isSet;
}

bool OAIRollingDateConfiguration::is_data_set_identifier_Valid() const{
    return m_data_set_identifier_isValid;
}

QString OAIRollingDateConfiguration::getExpression() const {
    return m_expression;
}
void OAIRollingDateConfiguration::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIRollingDateConfiguration::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIRollingDateConfiguration::is_expression_Valid() const{
    return m_expression_isValid;
}

bool OAIRollingDateConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_set_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollingDateConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_expression_isValid && true;
}

} // namespace OpenAPI
