/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDrillDownFilter_CategoryFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDrillDownFilter_CategoryFilter::OAIDrillDownFilter_CategoryFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDrillDownFilter_CategoryFilter::OAIDrillDownFilter_CategoryFilter() {
    this->initializeModel();
}

OAIDrillDownFilter_CategoryFilter::~OAIDrillDownFilter_CategoryFilter() {}

void OAIDrillDownFilter_CategoryFilter::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_category_values_isSet = false;
    m_category_values_isValid = false;
}

void OAIDrillDownFilter_CategoryFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDrillDownFilter_CategoryFilter::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("Column")]);
    m_column_isSet = !json[QString("Column")].isNull() && m_column_isValid;

    m_category_values_isValid = ::OpenAPI::fromJsonValue(m_category_values, json[QString("CategoryValues")]);
    m_category_values_isSet = !json[QString("CategoryValues")].isNull() && m_category_values_isValid;
}

QString OAIDrillDownFilter_CategoryFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDrillDownFilter_CategoryFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_column.isSet()) {
        obj.insert(QString("Column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_category_values.isSet()) {
        obj.insert(QString("CategoryValues"), ::OpenAPI::toJsonValue(m_category_values));
    }
    return obj;
}

OAICategoryDrillDownFilter_Column OAIDrillDownFilter_CategoryFilter::getColumn() const {
    return m_column;
}
void OAIDrillDownFilter_CategoryFilter::setColumn(const OAICategoryDrillDownFilter_Column &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIDrillDownFilter_CategoryFilter::is_column_Set() const{
    return m_column_isSet;
}

bool OAIDrillDownFilter_CategoryFilter::is_column_Valid() const{
    return m_column_isValid;
}

QList OAIDrillDownFilter_CategoryFilter::getCategoryValues() const {
    return m_category_values;
}
void OAIDrillDownFilter_CategoryFilter::setCategoryValues(const QList &category_values) {
    m_category_values = category_values;
    m_category_values_isSet = true;
}

bool OAIDrillDownFilter_CategoryFilter::is_category_values_Set() const{
    return m_category_values_isSet;
}

bool OAIDrillDownFilter_CategoryFilter::is_category_values_Valid() const{
    return m_category_values_isValid;
}

bool OAIDrillDownFilter_CategoryFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDrillDownFilter_CategoryFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_column_isValid && m_category_values_isValid && true;
}

} // namespace OpenAPI
