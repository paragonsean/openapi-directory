/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration() {
    this->initializeModel();
}

OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::~OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration() {}

void OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::initializeModel() {

    m_prefix_for_all_resources_isSet = false;
    m_prefix_for_all_resources_isValid = false;
}

void OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::fromJsonObject(QJsonObject json) {

    m_prefix_for_all_resources_isValid = ::OpenAPI::fromJsonValue(m_prefix_for_all_resources, json[QString("PrefixForAllResources")]);
    m_prefix_for_all_resources_isSet = !json[QString("PrefixForAllResources")].isNull() && m_prefix_for_all_resources_isValid;
}

QString OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_prefix_for_all_resources_isSet) {
        obj.insert(QString("PrefixForAllResources"), ::OpenAPI::toJsonValue(m_prefix_for_all_resources));
    }
    return obj;
}

QString OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::getPrefixForAllResources() const {
    return m_prefix_for_all_resources;
}
void OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::setPrefixForAllResources(const QString &prefix_for_all_resources) {
    m_prefix_for_all_resources = prefix_for_all_resources;
    m_prefix_for_all_resources_isSet = true;
}

bool OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::is_prefix_for_all_resources_Set() const{
    return m_prefix_for_all_resources_isSet;
}

bool OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::is_prefix_for_all_resources_Valid() const{
    return m_prefix_for_all_resources_isValid;
}

bool OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_prefix_for_all_resources_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartAssetBundleImportJob_request_OverrideParameters_ResourceIdOverrideConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
