/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceLineStaticDataConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceLineStaticDataConfiguration::OAIReferenceLineStaticDataConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceLineStaticDataConfiguration::OAIReferenceLineStaticDataConfiguration() {
    this->initializeModel();
}

OAIReferenceLineStaticDataConfiguration::~OAIReferenceLineStaticDataConfiguration() {}

void OAIReferenceLineStaticDataConfiguration::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIReferenceLineStaticDataConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReferenceLineStaticDataConfiguration::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIReferenceLineStaticDataConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReferenceLineStaticDataConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

double OAIReferenceLineStaticDataConfiguration::getValue() const {
    return m_value;
}
void OAIReferenceLineStaticDataConfiguration::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIReferenceLineStaticDataConfiguration::is_value_Set() const{
    return m_value_isSet;
}

bool OAIReferenceLineStaticDataConfiguration::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIReferenceLineStaticDataConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReferenceLineStaticDataConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid && true;
}

} // namespace OpenAPI
