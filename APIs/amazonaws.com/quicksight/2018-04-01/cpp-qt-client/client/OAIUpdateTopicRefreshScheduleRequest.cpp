/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTopicRefreshScheduleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTopicRefreshScheduleRequest::OAIUpdateTopicRefreshScheduleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTopicRefreshScheduleRequest::OAIUpdateTopicRefreshScheduleRequest() {
    this->initializeModel();
}

OAIUpdateTopicRefreshScheduleRequest::~OAIUpdateTopicRefreshScheduleRequest() {}

void OAIUpdateTopicRefreshScheduleRequest::initializeModel() {

    m_refresh_schedule_isSet = false;
    m_refresh_schedule_isValid = false;
}

void OAIUpdateTopicRefreshScheduleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTopicRefreshScheduleRequest::fromJsonObject(QJsonObject json) {

    m_refresh_schedule_isValid = ::OpenAPI::fromJsonValue(m_refresh_schedule, json[QString("RefreshSchedule")]);
    m_refresh_schedule_isSet = !json[QString("RefreshSchedule")].isNull() && m_refresh_schedule_isValid;
}

QString OAIUpdateTopicRefreshScheduleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTopicRefreshScheduleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_refresh_schedule.isSet()) {
        obj.insert(QString("RefreshSchedule"), ::OpenAPI::toJsonValue(m_refresh_schedule));
    }
    return obj;
}

OAIDescribeTopicRefreshScheduleResponse_RefreshSchedule OAIUpdateTopicRefreshScheduleRequest::getRefreshSchedule() const {
    return m_refresh_schedule;
}
void OAIUpdateTopicRefreshScheduleRequest::setRefreshSchedule(const OAIDescribeTopicRefreshScheduleResponse_RefreshSchedule &refresh_schedule) {
    m_refresh_schedule = refresh_schedule;
    m_refresh_schedule_isSet = true;
}

bool OAIUpdateTopicRefreshScheduleRequest::is_refresh_schedule_Set() const{
    return m_refresh_schedule_isSet;
}

bool OAIUpdateTopicRefreshScheduleRequest::is_refresh_schedule_Valid() const{
    return m_refresh_schedule_isValid;
}

bool OAIUpdateTopicRefreshScheduleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refresh_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTopicRefreshScheduleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_refresh_schedule_isValid && true;
}

} // namespace OpenAPI
