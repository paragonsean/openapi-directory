/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopBottomSortOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopBottomSortOrder::OAITopBottomSortOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopBottomSortOrder::OAITopBottomSortOrder() {
    this->initializeModel();
}

OAITopBottomSortOrder::~OAITopBottomSortOrder() {}

void OAITopBottomSortOrder::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITopBottomSortOrder::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITopBottomSortOrder::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PERCENT_DIFFERENCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITopBottomSortOrder::PERCENT_DIFFERENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ABSOLUTE_DIFFERENCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITopBottomSortOrder::ABSOLUTE_DIFFERENCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITopBottomSortOrder::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITopBottomSortOrder::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITopBottomSortOrder::PERCENT_DIFFERENCE:
            val = "PERCENT_DIFFERENCE";
            break;
        case eOAITopBottomSortOrder::ABSOLUTE_DIFFERENCE:
            val = "ABSOLUTE_DIFFERENCE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITopBottomSortOrder::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITopBottomSortOrder::eOAITopBottomSortOrder OAITopBottomSortOrder::getValue() const {
    return m_value;
}

void OAITopBottomSortOrder::setValue(const OAITopBottomSortOrder::eOAITopBottomSortOrder& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITopBottomSortOrder::isSet() const {
    
    return m_value_isSet;
}

bool OAITopBottomSortOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
