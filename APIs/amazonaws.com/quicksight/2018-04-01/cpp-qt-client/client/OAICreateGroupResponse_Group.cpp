/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateGroupResponse_Group.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateGroupResponse_Group::OAICreateGroupResponse_Group(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateGroupResponse_Group::OAICreateGroupResponse_Group() {
    this->initializeModel();
}

OAICreateGroupResponse_Group::~OAICreateGroupResponse_Group() {}

void OAICreateGroupResponse_Group::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_principal_id_isSet = false;
    m_principal_id_isValid = false;
}

void OAICreateGroupResponse_Group::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateGroupResponse_Group::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("GroupName")]);
    m_group_name_isSet = !json[QString("GroupName")].isNull() && m_group_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_principal_id_isValid = ::OpenAPI::fromJsonValue(m_principal_id, json[QString("PrincipalId")]);
    m_principal_id_isSet = !json[QString("PrincipalId")].isNull() && m_principal_id_isValid;
}

QString OAICreateGroupResponse_Group::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateGroupResponse_Group::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_group_name_isSet) {
        obj.insert(QString("GroupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_principal_id_isSet) {
        obj.insert(QString("PrincipalId"), ::OpenAPI::toJsonValue(m_principal_id));
    }
    return obj;
}

QString OAICreateGroupResponse_Group::getArn() const {
    return m_arn;
}
void OAICreateGroupResponse_Group::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateGroupResponse_Group::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateGroupResponse_Group::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateGroupResponse_Group::getGroupName() const {
    return m_group_name;
}
void OAICreateGroupResponse_Group::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAICreateGroupResponse_Group::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAICreateGroupResponse_Group::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAICreateGroupResponse_Group::getDescription() const {
    return m_description;
}
void OAICreateGroupResponse_Group::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateGroupResponse_Group::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateGroupResponse_Group::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateGroupResponse_Group::getPrincipalId() const {
    return m_principal_id;
}
void OAICreateGroupResponse_Group::setPrincipalId(const QString &principal_id) {
    m_principal_id = principal_id;
    m_principal_id_isSet = true;
}

bool OAICreateGroupResponse_Group::is_principal_id_Set() const{
    return m_principal_id_isSet;
}

bool OAICreateGroupResponse_Group::is_principal_id_Valid() const{
    return m_principal_id_isValid;
}

bool OAICreateGroupResponse_Group::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateGroupResponse_Group::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
