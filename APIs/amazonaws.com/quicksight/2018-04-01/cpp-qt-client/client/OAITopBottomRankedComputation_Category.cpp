/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopBottomRankedComputation_Category.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopBottomRankedComputation_Category::OAITopBottomRankedComputation_Category(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopBottomRankedComputation_Category::OAITopBottomRankedComputation_Category() {
    this->initializeModel();
}

OAITopBottomRankedComputation_Category::~OAITopBottomRankedComputation_Category() {}

void OAITopBottomRankedComputation_Category::initializeModel() {

    m_numerical_dimension_field_isSet = false;
    m_numerical_dimension_field_isValid = false;

    m_categorical_dimension_field_isSet = false;
    m_categorical_dimension_field_isValid = false;

    m_date_dimension_field_isSet = false;
    m_date_dimension_field_isValid = false;
}

void OAITopBottomRankedComputation_Category::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopBottomRankedComputation_Category::fromJsonObject(QJsonObject json) {

    m_numerical_dimension_field_isValid = ::OpenAPI::fromJsonValue(m_numerical_dimension_field, json[QString("NumericalDimensionField")]);
    m_numerical_dimension_field_isSet = !json[QString("NumericalDimensionField")].isNull() && m_numerical_dimension_field_isValid;

    m_categorical_dimension_field_isValid = ::OpenAPI::fromJsonValue(m_categorical_dimension_field, json[QString("CategoricalDimensionField")]);
    m_categorical_dimension_field_isSet = !json[QString("CategoricalDimensionField")].isNull() && m_categorical_dimension_field_isValid;

    m_date_dimension_field_isValid = ::OpenAPI::fromJsonValue(m_date_dimension_field, json[QString("DateDimensionField")]);
    m_date_dimension_field_isSet = !json[QString("DateDimensionField")].isNull() && m_date_dimension_field_isValid;
}

QString OAITopBottomRankedComputation_Category::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopBottomRankedComputation_Category::asJsonObject() const {
    QJsonObject obj;
    if (m_numerical_dimension_field.isSet()) {
        obj.insert(QString("NumericalDimensionField"), ::OpenAPI::toJsonValue(m_numerical_dimension_field));
    }
    if (m_categorical_dimension_field.isSet()) {
        obj.insert(QString("CategoricalDimensionField"), ::OpenAPI::toJsonValue(m_categorical_dimension_field));
    }
    if (m_date_dimension_field.isSet()) {
        obj.insert(QString("DateDimensionField"), ::OpenAPI::toJsonValue(m_date_dimension_field));
    }
    return obj;
}

OAIDimensionField_NumericalDimensionField OAITopBottomRankedComputation_Category::getNumericalDimensionField() const {
    return m_numerical_dimension_field;
}
void OAITopBottomRankedComputation_Category::setNumericalDimensionField(const OAIDimensionField_NumericalDimensionField &numerical_dimension_field) {
    m_numerical_dimension_field = numerical_dimension_field;
    m_numerical_dimension_field_isSet = true;
}

bool OAITopBottomRankedComputation_Category::is_numerical_dimension_field_Set() const{
    return m_numerical_dimension_field_isSet;
}

bool OAITopBottomRankedComputation_Category::is_numerical_dimension_field_Valid() const{
    return m_numerical_dimension_field_isValid;
}

OAIDimensionField_CategoricalDimensionField OAITopBottomRankedComputation_Category::getCategoricalDimensionField() const {
    return m_categorical_dimension_field;
}
void OAITopBottomRankedComputation_Category::setCategoricalDimensionField(const OAIDimensionField_CategoricalDimensionField &categorical_dimension_field) {
    m_categorical_dimension_field = categorical_dimension_field;
    m_categorical_dimension_field_isSet = true;
}

bool OAITopBottomRankedComputation_Category::is_categorical_dimension_field_Set() const{
    return m_categorical_dimension_field_isSet;
}

bool OAITopBottomRankedComputation_Category::is_categorical_dimension_field_Valid() const{
    return m_categorical_dimension_field_isValid;
}

OAIDimensionField_DateDimensionField OAITopBottomRankedComputation_Category::getDateDimensionField() const {
    return m_date_dimension_field;
}
void OAITopBottomRankedComputation_Category::setDateDimensionField(const OAIDimensionField_DateDimensionField &date_dimension_field) {
    m_date_dimension_field = date_dimension_field;
    m_date_dimension_field_isSet = true;
}

bool OAITopBottomRankedComputation_Category::is_date_dimension_field_Set() const{
    return m_date_dimension_field_isSet;
}

bool OAITopBottomRankedComputation_Category::is_date_dimension_field_Valid() const{
    return m_date_dimension_field_isValid;
}

bool OAITopBottomRankedComputation_Category::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_numerical_dimension_field.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_categorical_dimension_field.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_dimension_field.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopBottomRankedComputation_Category::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
