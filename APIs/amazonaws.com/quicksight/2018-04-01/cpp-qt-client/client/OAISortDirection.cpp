/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISortDirection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISortDirection::OAISortDirection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISortDirection::OAISortDirection() {
    this->initializeModel();
}

OAISortDirection::~OAISortDirection() {}

void OAISortDirection::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISortDirection::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISortDirection::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ASC", Qt::CaseInsensitive) == 0) {
        m_value = eOAISortDirection::ASC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DESC", Qt::CaseInsensitive) == 0) {
        m_value = eOAISortDirection::DESC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISortDirection::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISortDirection::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISortDirection::ASC:
            val = "ASC";
            break;
        case eOAISortDirection::DESC:
            val = "DESC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISortDirection::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISortDirection::eOAISortDirection OAISortDirection::getValue() const {
    return m_value;
}

void OAISortDirection::setValue(const OAISortDirection::eOAISortDirection& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISortDirection::isSet() const {
    
    return m_value_isSet;
}

bool OAISortDirection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
