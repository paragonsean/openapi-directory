/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISeriesItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISeriesItem::OAISeriesItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISeriesItem::OAISeriesItem() {
    this->initializeModel();
}

OAISeriesItem::~OAISeriesItem() {}

void OAISeriesItem::initializeModel() {

    m_field_series_item_isSet = false;
    m_field_series_item_isValid = false;

    m_data_field_series_item_isSet = false;
    m_data_field_series_item_isValid = false;
}

void OAISeriesItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISeriesItem::fromJsonObject(QJsonObject json) {

    m_field_series_item_isValid = ::OpenAPI::fromJsonValue(m_field_series_item, json[QString("FieldSeriesItem")]);
    m_field_series_item_isSet = !json[QString("FieldSeriesItem")].isNull() && m_field_series_item_isValid;

    m_data_field_series_item_isValid = ::OpenAPI::fromJsonValue(m_data_field_series_item, json[QString("DataFieldSeriesItem")]);
    m_data_field_series_item_isSet = !json[QString("DataFieldSeriesItem")].isNull() && m_data_field_series_item_isValid;
}

QString OAISeriesItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISeriesItem::asJsonObject() const {
    QJsonObject obj;
    if (m_field_series_item.isSet()) {
        obj.insert(QString("FieldSeriesItem"), ::OpenAPI::toJsonValue(m_field_series_item));
    }
    if (m_data_field_series_item.isSet()) {
        obj.insert(QString("DataFieldSeriesItem"), ::OpenAPI::toJsonValue(m_data_field_series_item));
    }
    return obj;
}

OAISeriesItem_FieldSeriesItem OAISeriesItem::getFieldSeriesItem() const {
    return m_field_series_item;
}
void OAISeriesItem::setFieldSeriesItem(const OAISeriesItem_FieldSeriesItem &field_series_item) {
    m_field_series_item = field_series_item;
    m_field_series_item_isSet = true;
}

bool OAISeriesItem::is_field_series_item_Set() const{
    return m_field_series_item_isSet;
}

bool OAISeriesItem::is_field_series_item_Valid() const{
    return m_field_series_item_isValid;
}

OAISeriesItem_DataFieldSeriesItem OAISeriesItem::getDataFieldSeriesItem() const {
    return m_data_field_series_item;
}
void OAISeriesItem::setDataFieldSeriesItem(const OAISeriesItem_DataFieldSeriesItem &data_field_series_item) {
    m_data_field_series_item = data_field_series_item;
    m_data_field_series_item_isSet = true;
}

bool OAISeriesItem::is_data_field_series_item_Set() const{
    return m_data_field_series_item_isSet;
}

bool OAISeriesItem::is_data_field_series_item_Valid() const{
    return m_data_field_series_item_isValid;
}

bool OAISeriesItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_series_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_field_series_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISeriesItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
