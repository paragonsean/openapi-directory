/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxPlotChartConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxPlotChartConfiguration_FieldWells::OAIBoxPlotChartConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxPlotChartConfiguration_FieldWells::OAIBoxPlotChartConfiguration_FieldWells() {
    this->initializeModel();
}

OAIBoxPlotChartConfiguration_FieldWells::~OAIBoxPlotChartConfiguration_FieldWells() {}

void OAIBoxPlotChartConfiguration_FieldWells::initializeModel() {

    m_box_plot_aggregated_field_wells_isSet = false;
    m_box_plot_aggregated_field_wells_isValid = false;
}

void OAIBoxPlotChartConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoxPlotChartConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_box_plot_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_box_plot_aggregated_field_wells, json[QString("BoxPlotAggregatedFieldWells")]);
    m_box_plot_aggregated_field_wells_isSet = !json[QString("BoxPlotAggregatedFieldWells")].isNull() && m_box_plot_aggregated_field_wells_isValid;
}

QString OAIBoxPlotChartConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoxPlotChartConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_box_plot_aggregated_field_wells.isSet()) {
        obj.insert(QString("BoxPlotAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_box_plot_aggregated_field_wells));
    }
    return obj;
}

OAIBoxPlotFieldWells_BoxPlotAggregatedFieldWells OAIBoxPlotChartConfiguration_FieldWells::getBoxPlotAggregatedFieldWells() const {
    return m_box_plot_aggregated_field_wells;
}
void OAIBoxPlotChartConfiguration_FieldWells::setBoxPlotAggregatedFieldWells(const OAIBoxPlotFieldWells_BoxPlotAggregatedFieldWells &box_plot_aggregated_field_wells) {
    m_box_plot_aggregated_field_wells = box_plot_aggregated_field_wells;
    m_box_plot_aggregated_field_wells_isSet = true;
}

bool OAIBoxPlotChartConfiguration_FieldWells::is_box_plot_aggregated_field_wells_Set() const{
    return m_box_plot_aggregated_field_wells_isSet;
}

bool OAIBoxPlotChartConfiguration_FieldWells::is_box_plot_aggregated_field_wells_Valid() const{
    return m_box_plot_aggregated_field_wells_isValid;
}

bool OAIBoxPlotChartConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_box_plot_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoxPlotChartConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
