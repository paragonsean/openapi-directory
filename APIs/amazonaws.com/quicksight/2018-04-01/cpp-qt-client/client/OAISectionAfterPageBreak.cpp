/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionAfterPageBreak.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionAfterPageBreak::OAISectionAfterPageBreak(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionAfterPageBreak::OAISectionAfterPageBreak() {
    this->initializeModel();
}

OAISectionAfterPageBreak::~OAISectionAfterPageBreak() {}

void OAISectionAfterPageBreak::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISectionAfterPageBreak::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionAfterPageBreak::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAISectionAfterPageBreak::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionAfterPageBreak::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAISectionPageBreakStatus OAISectionAfterPageBreak::getStatus() const {
    return m_status;
}
void OAISectionAfterPageBreak::setStatus(const OAISectionPageBreakStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISectionAfterPageBreak::is_status_Set() const{
    return m_status_isSet;
}

bool OAISectionAfterPageBreak::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISectionAfterPageBreak::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionAfterPageBreak::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
