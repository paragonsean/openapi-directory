/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITreeMapConfiguration.h
 *
 * The configuration of a tree map.
 */

#ifndef OAITreeMapConfiguration_H
#define OAITreeMapConfiguration_H

#include <QJsonObject>

#include "OAIBarChartConfiguration_DataLabels.h"
#include "OAIBarChartConfiguration_Legend.h"
#include "OAIBarChartConfiguration_Tooltip.h"
#include "OAITreeMapConfiguration_ColorLabelOptions.h"
#include "OAITreeMapConfiguration_ColorScale.h"
#include "OAITreeMapConfiguration_FieldWells.h"
#include "OAITreeMapConfiguration_GroupLabelOptions.h"
#include "OAITreeMapConfiguration_SizeLabelOptions.h"
#include "OAITreeMapConfiguration_SortConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITreeMapConfiguration_FieldWells;
class OAITreeMapConfiguration_SortConfiguration;
class OAITreeMapConfiguration_GroupLabelOptions;
class OAITreeMapConfiguration_SizeLabelOptions;
class OAITreeMapConfiguration_ColorLabelOptions;
class OAITreeMapConfiguration_ColorScale;
class OAIBarChartConfiguration_Legend;
class OAIBarChartConfiguration_DataLabels;
class OAIBarChartConfiguration_Tooltip;

class OAITreeMapConfiguration : public OAIObject {
public:
    OAITreeMapConfiguration();
    OAITreeMapConfiguration(QString json);
    ~OAITreeMapConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITreeMapConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAITreeMapConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAITreeMapConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAITreeMapConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAITreeMapConfiguration_GroupLabelOptions getGroupLabelOptions() const;
    void setGroupLabelOptions(const OAITreeMapConfiguration_GroupLabelOptions &group_label_options);
    bool is_group_label_options_Set() const;
    bool is_group_label_options_Valid() const;

    OAITreeMapConfiguration_SizeLabelOptions getSizeLabelOptions() const;
    void setSizeLabelOptions(const OAITreeMapConfiguration_SizeLabelOptions &size_label_options);
    bool is_size_label_options_Set() const;
    bool is_size_label_options_Valid() const;

    OAITreeMapConfiguration_ColorLabelOptions getColorLabelOptions() const;
    void setColorLabelOptions(const OAITreeMapConfiguration_ColorLabelOptions &color_label_options);
    bool is_color_label_options_Set() const;
    bool is_color_label_options_Valid() const;

    OAITreeMapConfiguration_ColorScale getColorScale() const;
    void setColorScale(const OAITreeMapConfiguration_ColorScale &color_scale);
    bool is_color_scale_Set() const;
    bool is_color_scale_Valid() const;

    OAIBarChartConfiguration_Legend getLegend() const;
    void setLegend(const OAIBarChartConfiguration_Legend &legend);
    bool is_legend_Set() const;
    bool is_legend_Valid() const;

    OAIBarChartConfiguration_DataLabels getDataLabels() const;
    void setDataLabels(const OAIBarChartConfiguration_DataLabels &data_labels);
    bool is_data_labels_Set() const;
    bool is_data_labels_Valid() const;

    OAIBarChartConfiguration_Tooltip getTooltip() const;
    void setTooltip(const OAIBarChartConfiguration_Tooltip &tooltip);
    bool is_tooltip_Set() const;
    bool is_tooltip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITreeMapConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAITreeMapConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAITreeMapConfiguration_GroupLabelOptions m_group_label_options;
    bool m_group_label_options_isSet;
    bool m_group_label_options_isValid;

    OAITreeMapConfiguration_SizeLabelOptions m_size_label_options;
    bool m_size_label_options_isSet;
    bool m_size_label_options_isValid;

    OAITreeMapConfiguration_ColorLabelOptions m_color_label_options;
    bool m_color_label_options_isSet;
    bool m_color_label_options_isValid;

    OAITreeMapConfiguration_ColorScale m_color_scale;
    bool m_color_scale_isSet;
    bool m_color_scale_isValid;

    OAIBarChartConfiguration_Legend m_legend;
    bool m_legend_isSet;
    bool m_legend_isValid;

    OAIBarChartConfiguration_DataLabels m_data_labels;
    bool m_data_labels_isSet;
    bool m_data_labels_isValid;

    OAIBarChartConfiguration_Tooltip m_tooltip;
    bool m_tooltip_isSet;
    bool m_tooltip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITreeMapConfiguration)

#endif // OAITreeMapConfiguration_H
