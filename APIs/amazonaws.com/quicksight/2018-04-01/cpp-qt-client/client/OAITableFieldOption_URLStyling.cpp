/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldOption_URLStyling.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldOption_URLStyling::OAITableFieldOption_URLStyling(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldOption_URLStyling::OAITableFieldOption_URLStyling() {
    this->initializeModel();
}

OAITableFieldOption_URLStyling::~OAITableFieldOption_URLStyling() {}

void OAITableFieldOption_URLStyling::initializeModel() {

    m_link_configuration_isSet = false;
    m_link_configuration_isValid = false;

    m_image_configuration_isSet = false;
    m_image_configuration_isValid = false;
}

void OAITableFieldOption_URLStyling::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldOption_URLStyling::fromJsonObject(QJsonObject json) {

    m_link_configuration_isValid = ::OpenAPI::fromJsonValue(m_link_configuration, json[QString("LinkConfiguration")]);
    m_link_configuration_isSet = !json[QString("LinkConfiguration")].isNull() && m_link_configuration_isValid;

    m_image_configuration_isValid = ::OpenAPI::fromJsonValue(m_image_configuration, json[QString("ImageConfiguration")]);
    m_image_configuration_isSet = !json[QString("ImageConfiguration")].isNull() && m_image_configuration_isValid;
}

QString OAITableFieldOption_URLStyling::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldOption_URLStyling::asJsonObject() const {
    QJsonObject obj;
    if (m_link_configuration.isSet()) {
        obj.insert(QString("LinkConfiguration"), ::OpenAPI::toJsonValue(m_link_configuration));
    }
    if (m_image_configuration.isSet()) {
        obj.insert(QString("ImageConfiguration"), ::OpenAPI::toJsonValue(m_image_configuration));
    }
    return obj;
}

OAITableFieldURLConfiguration_LinkConfiguration OAITableFieldOption_URLStyling::getLinkConfiguration() const {
    return m_link_configuration;
}
void OAITableFieldOption_URLStyling::setLinkConfiguration(const OAITableFieldURLConfiguration_LinkConfiguration &link_configuration) {
    m_link_configuration = link_configuration;
    m_link_configuration_isSet = true;
}

bool OAITableFieldOption_URLStyling::is_link_configuration_Set() const{
    return m_link_configuration_isSet;
}

bool OAITableFieldOption_URLStyling::is_link_configuration_Valid() const{
    return m_link_configuration_isValid;
}

OAITableFieldURLConfiguration_ImageConfiguration OAITableFieldOption_URLStyling::getImageConfiguration() const {
    return m_image_configuration;
}
void OAITableFieldOption_URLStyling::setImageConfiguration(const OAITableFieldURLConfiguration_ImageConfiguration &image_configuration) {
    m_image_configuration = image_configuration;
    m_image_configuration_isSet = true;
}

bool OAITableFieldOption_URLStyling::is_image_configuration_Set() const{
    return m_image_configuration_isSet;
}

bool OAITableFieldOption_URLStyling::is_image_configuration_Valid() const{
    return m_image_configuration_isValid;
}

bool OAITableFieldOption_URLStyling::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldOption_URLStyling::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
