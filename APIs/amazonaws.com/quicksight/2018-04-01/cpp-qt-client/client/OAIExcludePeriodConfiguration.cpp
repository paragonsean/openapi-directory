/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExcludePeriodConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExcludePeriodConfiguration::OAIExcludePeriodConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExcludePeriodConfiguration::OAIExcludePeriodConfiguration() {
    this->initializeModel();
}

OAIExcludePeriodConfiguration::~OAIExcludePeriodConfiguration() {}

void OAIExcludePeriodConfiguration::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_granularity_isSet = false;
    m_granularity_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIExcludePeriodConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExcludePeriodConfiguration::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("Amount")]);
    m_amount_isSet = !json[QString("Amount")].isNull() && m_amount_isValid;

    m_granularity_isValid = ::OpenAPI::fromJsonValue(m_granularity, json[QString("Granularity")]);
    m_granularity_isSet = !json[QString("Granularity")].isNull() && m_granularity_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIExcludePeriodConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExcludePeriodConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("Amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_granularity.isSet()) {
        obj.insert(QString("Granularity"), ::OpenAPI::toJsonValue(m_granularity));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

qint32 OAIExcludePeriodConfiguration::getAmount() const {
    return m_amount;
}
void OAIExcludePeriodConfiguration::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIExcludePeriodConfiguration::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIExcludePeriodConfiguration::is_amount_Valid() const{
    return m_amount_isValid;
}

OAITimeGranularity OAIExcludePeriodConfiguration::getGranularity() const {
    return m_granularity;
}
void OAIExcludePeriodConfiguration::setGranularity(const OAITimeGranularity &granularity) {
    m_granularity = granularity;
    m_granularity_isSet = true;
}

bool OAIExcludePeriodConfiguration::is_granularity_Set() const{
    return m_granularity_isSet;
}

bool OAIExcludePeriodConfiguration::is_granularity_Valid() const{
    return m_granularity_isValid;
}

OAIWidgetStatus OAIExcludePeriodConfiguration::getStatus() const {
    return m_status;
}
void OAIExcludePeriodConfiguration::setStatus(const OAIWidgetStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIExcludePeriodConfiguration::is_status_Set() const{
    return m_status_isSet;
}

bool OAIExcludePeriodConfiguration::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIExcludePeriodConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_granularity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExcludePeriodConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_granularity_isValid && true;
}

} // namespace OpenAPI
