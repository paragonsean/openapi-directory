/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceLineLabelConfiguration.h
 *
 * The label configuration of a reference line.
 */

#ifndef OAIReferenceLineLabelConfiguration_H
#define OAIReferenceLineLabelConfiguration_H

#include <QJsonObject>

#include "OAIReferenceLineLabelConfiguration_CustomLabelConfiguration.h"
#include "OAIReferenceLineLabelConfiguration_FontConfiguration.h"
#include "OAIReferenceLineLabelConfiguration_ValueLabelConfiguration.h"
#include "OAIReferenceLineLabelHorizontalPosition.h"
#include "OAIReferenceLineLabelVerticalPosition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceLineLabelConfiguration_ValueLabelConfiguration;
class OAIReferenceLineLabelConfiguration_CustomLabelConfiguration;
class OAIReferenceLineLabelConfiguration_FontConfiguration;

class OAIReferenceLineLabelConfiguration : public OAIObject {
public:
    OAIReferenceLineLabelConfiguration();
    OAIReferenceLineLabelConfiguration(QString json);
    ~OAIReferenceLineLabelConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReferenceLineLabelConfiguration_ValueLabelConfiguration getValueLabelConfiguration() const;
    void setValueLabelConfiguration(const OAIReferenceLineLabelConfiguration_ValueLabelConfiguration &value_label_configuration);
    bool is_value_label_configuration_Set() const;
    bool is_value_label_configuration_Valid() const;

    OAIReferenceLineLabelConfiguration_CustomLabelConfiguration getCustomLabelConfiguration() const;
    void setCustomLabelConfiguration(const OAIReferenceLineLabelConfiguration_CustomLabelConfiguration &custom_label_configuration);
    bool is_custom_label_configuration_Set() const;
    bool is_custom_label_configuration_Valid() const;

    OAIReferenceLineLabelConfiguration_FontConfiguration getFontConfiguration() const;
    void setFontConfiguration(const OAIReferenceLineLabelConfiguration_FontConfiguration &font_configuration);
    bool is_font_configuration_Set() const;
    bool is_font_configuration_Valid() const;

    QString getFontColor() const;
    void setFontColor(const QString &font_color);
    bool is_font_color_Set() const;
    bool is_font_color_Valid() const;

    OAIReferenceLineLabelHorizontalPosition getHorizontalPosition() const;
    void setHorizontalPosition(const OAIReferenceLineLabelHorizontalPosition &horizontal_position);
    bool is_horizontal_position_Set() const;
    bool is_horizontal_position_Valid() const;

    OAIReferenceLineLabelVerticalPosition getVerticalPosition() const;
    void setVerticalPosition(const OAIReferenceLineLabelVerticalPosition &vertical_position);
    bool is_vertical_position_Set() const;
    bool is_vertical_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReferenceLineLabelConfiguration_ValueLabelConfiguration m_value_label_configuration;
    bool m_value_label_configuration_isSet;
    bool m_value_label_configuration_isValid;

    OAIReferenceLineLabelConfiguration_CustomLabelConfiguration m_custom_label_configuration;
    bool m_custom_label_configuration_isSet;
    bool m_custom_label_configuration_isValid;

    OAIReferenceLineLabelConfiguration_FontConfiguration m_font_configuration;
    bool m_font_configuration_isSet;
    bool m_font_configuration_isValid;

    QString m_font_color;
    bool m_font_color_isSet;
    bool m_font_color_isValid;

    OAIReferenceLineLabelHorizontalPosition m_horizontal_position;
    bool m_horizontal_position_isSet;
    bool m_horizontal_position_isValid;

    OAIReferenceLineLabelVerticalPosition m_vertical_position;
    bool m_vertical_position_isSet;
    bool m_vertical_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceLineLabelConfiguration)

#endif // OAIReferenceLineLabelConfiguration_H
