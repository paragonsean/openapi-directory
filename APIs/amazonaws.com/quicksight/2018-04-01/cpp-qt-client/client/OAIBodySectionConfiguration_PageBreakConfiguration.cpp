/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBodySectionConfiguration_PageBreakConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBodySectionConfiguration_PageBreakConfiguration::OAIBodySectionConfiguration_PageBreakConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBodySectionConfiguration_PageBreakConfiguration::OAIBodySectionConfiguration_PageBreakConfiguration() {
    this->initializeModel();
}

OAIBodySectionConfiguration_PageBreakConfiguration::~OAIBodySectionConfiguration_PageBreakConfiguration() {}

void OAIBodySectionConfiguration_PageBreakConfiguration::initializeModel() {

    m_after_isSet = false;
    m_after_isValid = false;
}

void OAIBodySectionConfiguration_PageBreakConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBodySectionConfiguration_PageBreakConfiguration::fromJsonObject(QJsonObject json) {

    m_after_isValid = ::OpenAPI::fromJsonValue(m_after, json[QString("After")]);
    m_after_isSet = !json[QString("After")].isNull() && m_after_isValid;
}

QString OAIBodySectionConfiguration_PageBreakConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBodySectionConfiguration_PageBreakConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_after.isSet()) {
        obj.insert(QString("After"), ::OpenAPI::toJsonValue(m_after));
    }
    return obj;
}

OAISectionPageBreakConfiguration_After OAIBodySectionConfiguration_PageBreakConfiguration::getAfter() const {
    return m_after;
}
void OAIBodySectionConfiguration_PageBreakConfiguration::setAfter(const OAISectionPageBreakConfiguration_After &after) {
    m_after = after;
    m_after_isSet = true;
}

bool OAIBodySectionConfiguration_PageBreakConfiguration::is_after_Set() const{
    return m_after_isSet;
}

bool OAIBodySectionConfiguration_PageBreakConfiguration::is_after_Valid() const{
    return m_after_isValid;
}

bool OAIBodySectionConfiguration_PageBreakConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBodySectionConfiguration_PageBreakConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
