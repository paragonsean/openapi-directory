/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomSql.h
 *
 * A physical table type built from the results of the custom SQL query.
 */

#ifndef OAICustomSql_H
#define OAICustomSql_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICustomSql : public OAIObject {
public:
    OAICustomSql();
    OAICustomSql(QString json);
    ~OAICustomSql() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceArn() const;
    void setDataSourceArn(const QString &data_source_arn);
    bool is_data_source_arn_Set() const;
    bool is_data_source_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSqlQuery() const;
    void setSqlQuery(const QString &sql_query);
    bool is_sql_query_Set() const;
    bool is_sql_query_Valid() const;

    QList getColumns() const;
    void setColumns(const QList &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_arn;
    bool m_data_source_arn_isSet;
    bool m_data_source_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_sql_query;
    bool m_sql_query_isSet;
    bool m_sql_query_isValid;

    QList m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomSql)

#endif // OAICustomSql_H
