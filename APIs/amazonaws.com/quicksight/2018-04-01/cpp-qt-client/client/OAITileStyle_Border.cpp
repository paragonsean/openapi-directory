/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITileStyle_Border.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITileStyle_Border::OAITileStyle_Border(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITileStyle_Border::OAITileStyle_Border() {
    this->initializeModel();
}

OAITileStyle_Border::~OAITileStyle_Border() {}

void OAITileStyle_Border::initializeModel() {

    m_show_isSet = false;
    m_show_isValid = false;
}

void OAITileStyle_Border::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITileStyle_Border::fromJsonObject(QJsonObject json) {

    m_show_isValid = ::OpenAPI::fromJsonValue(m_show, json[QString("Show")]);
    m_show_isSet = !json[QString("Show")].isNull() && m_show_isValid;
}

QString OAITileStyle_Border::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITileStyle_Border::asJsonObject() const {
    QJsonObject obj;
    if (m_show_isSet) {
        obj.insert(QString("Show"), ::OpenAPI::toJsonValue(m_show));
    }
    return obj;
}

bool OAITileStyle_Border::getShow() const {
    return m_show;
}
void OAITileStyle_Border::setShow(const bool &show) {
    m_show = show;
    m_show_isSet = true;
}

bool OAITileStyle_Border::is_show_Set() const{
    return m_show_isSet;
}

bool OAITileStyle_Border::is_show_Valid() const{
    return m_show_isValid;
}

bool OAITileStyle_Border::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_show_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITileStyle_Border::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
