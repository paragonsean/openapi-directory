/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHeatMapConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHeatMapConfiguration_FieldWells::OAIHeatMapConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHeatMapConfiguration_FieldWells::OAIHeatMapConfiguration_FieldWells() {
    this->initializeModel();
}

OAIHeatMapConfiguration_FieldWells::~OAIHeatMapConfiguration_FieldWells() {}

void OAIHeatMapConfiguration_FieldWells::initializeModel() {

    m_heat_map_aggregated_field_wells_isSet = false;
    m_heat_map_aggregated_field_wells_isValid = false;
}

void OAIHeatMapConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHeatMapConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_heat_map_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_heat_map_aggregated_field_wells, json[QString("HeatMapAggregatedFieldWells")]);
    m_heat_map_aggregated_field_wells_isSet = !json[QString("HeatMapAggregatedFieldWells")].isNull() && m_heat_map_aggregated_field_wells_isValid;
}

QString OAIHeatMapConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHeatMapConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_heat_map_aggregated_field_wells.isSet()) {
        obj.insert(QString("HeatMapAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_heat_map_aggregated_field_wells));
    }
    return obj;
}

OAIHeatMapFieldWells_HeatMapAggregatedFieldWells OAIHeatMapConfiguration_FieldWells::getHeatMapAggregatedFieldWells() const {
    return m_heat_map_aggregated_field_wells;
}
void OAIHeatMapConfiguration_FieldWells::setHeatMapAggregatedFieldWells(const OAIHeatMapFieldWells_HeatMapAggregatedFieldWells &heat_map_aggregated_field_wells) {
    m_heat_map_aggregated_field_wells = heat_map_aggregated_field_wells;
    m_heat_map_aggregated_field_wells_isSet = true;
}

bool OAIHeatMapConfiguration_FieldWells::is_heat_map_aggregated_field_wells_Set() const{
    return m_heat_map_aggregated_field_wells_isSet;
}

bool OAIHeatMapConfiguration_FieldWells::is_heat_map_aggregated_field_wells_Valid() const{
    return m_heat_map_aggregated_field_wells_isValid;
}

bool OAIHeatMapConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_heat_map_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHeatMapConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
