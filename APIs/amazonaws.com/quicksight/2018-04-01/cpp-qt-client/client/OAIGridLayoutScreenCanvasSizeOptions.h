/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGridLayoutScreenCanvasSizeOptions.h
 *
 * The options that determine the sizing of the canvas used in a grid layout.
 */

#ifndef OAIGridLayoutScreenCanvasSizeOptions_H
#define OAIGridLayoutScreenCanvasSizeOptions_H

#include <QJsonObject>

#include "OAIResizeOption.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGridLayoutScreenCanvasSizeOptions : public OAIObject {
public:
    OAIGridLayoutScreenCanvasSizeOptions();
    OAIGridLayoutScreenCanvasSizeOptions(QString json);
    ~OAIGridLayoutScreenCanvasSizeOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResizeOption getResizeOption() const;
    void setResizeOption(const OAIResizeOption &resize_option);
    bool is_resize_option_Set() const;
    bool is_resize_option_Valid() const;

    QString getOptimizedViewPortWidth() const;
    void setOptimizedViewPortWidth(const QString &optimized_view_port_width);
    bool is_optimized_view_port_width_Set() const;
    bool is_optimized_view_port_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResizeOption m_resize_option;
    bool m_resize_option_isSet;
    bool m_resize_option_isValid;

    QString m_optimized_view_port_width;
    bool m_optimized_view_port_width_isSet;
    bool m_optimized_view_port_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGridLayoutScreenCanvasSizeOptions)

#endif // OAIGridLayoutScreenCanvasSizeOptions_H
