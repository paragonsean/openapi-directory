/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAccountSubscriptionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAccountSubscriptionResponse::OAICreateAccountSubscriptionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAccountSubscriptionResponse::OAICreateAccountSubscriptionResponse() {
    this->initializeModel();
}

OAICreateAccountSubscriptionResponse::~OAICreateAccountSubscriptionResponse() {}

void OAICreateAccountSubscriptionResponse::initializeModel() {

    m_signup_response_isSet = false;
    m_signup_response_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAICreateAccountSubscriptionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAccountSubscriptionResponse::fromJsonObject(QJsonObject json) {

    m_signup_response_isValid = ::OpenAPI::fromJsonValue(m_signup_response, json[QString("SignupResponse")]);
    m_signup_response_isSet = !json[QString("SignupResponse")].isNull() && m_signup_response_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAICreateAccountSubscriptionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAccountSubscriptionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_signup_response.isSet()) {
        obj.insert(QString("SignupResponse"), ::OpenAPI::toJsonValue(m_signup_response));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

OAICreateAccountSubscriptionResponse_SignupResponse OAICreateAccountSubscriptionResponse::getSignupResponse() const {
    return m_signup_response;
}
void OAICreateAccountSubscriptionResponse::setSignupResponse(const OAICreateAccountSubscriptionResponse_SignupResponse &signup_response) {
    m_signup_response = signup_response;
    m_signup_response_isSet = true;
}

bool OAICreateAccountSubscriptionResponse::is_signup_response_Set() const{
    return m_signup_response_isSet;
}

bool OAICreateAccountSubscriptionResponse::is_signup_response_Valid() const{
    return m_signup_response_isValid;
}

qint32 OAICreateAccountSubscriptionResponse::getStatus() const {
    return m_status;
}
void OAICreateAccountSubscriptionResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateAccountSubscriptionResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateAccountSubscriptionResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICreateAccountSubscriptionResponse::getRequestId() const {
    return m_request_id;
}
void OAICreateAccountSubscriptionResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAICreateAccountSubscriptionResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAICreateAccountSubscriptionResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAICreateAccountSubscriptionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_signup_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAccountSubscriptionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
