/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumericalDimensionField_FormatConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumericalDimensionField_FormatConfiguration::OAINumericalDimensionField_FormatConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumericalDimensionField_FormatConfiguration::OAINumericalDimensionField_FormatConfiguration() {
    this->initializeModel();
}

OAINumericalDimensionField_FormatConfiguration::~OAINumericalDimensionField_FormatConfiguration() {}

void OAINumericalDimensionField_FormatConfiguration::initializeModel() {

    m_format_configuration_isSet = false;
    m_format_configuration_isValid = false;
}

void OAINumericalDimensionField_FormatConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumericalDimensionField_FormatConfiguration::fromJsonObject(QJsonObject json) {

    m_format_configuration_isValid = ::OpenAPI::fromJsonValue(m_format_configuration, json[QString("FormatConfiguration")]);
    m_format_configuration_isSet = !json[QString("FormatConfiguration")].isNull() && m_format_configuration_isValid;
}

QString OAINumericalDimensionField_FormatConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumericalDimensionField_FormatConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_format_configuration.isSet()) {
        obj.insert(QString("FormatConfiguration"), ::OpenAPI::toJsonValue(m_format_configuration));
    }
    return obj;
}

OAINumberFormatConfiguration_FormatConfiguration OAINumericalDimensionField_FormatConfiguration::getFormatConfiguration() const {
    return m_format_configuration;
}
void OAINumericalDimensionField_FormatConfiguration::setFormatConfiguration(const OAINumberFormatConfiguration_FormatConfiguration &format_configuration) {
    m_format_configuration = format_configuration;
    m_format_configuration_isSet = true;
}

bool OAINumericalDimensionField_FormatConfiguration::is_format_configuration_Set() const{
    return m_format_configuration_isSet;
}

bool OAINumericalDimensionField_FormatConfiguration::is_format_configuration_Valid() const{
    return m_format_configuration_isValid;
}

bool OAINumericalDimensionField_FormatConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_format_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumericalDimensionField_FormatConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
