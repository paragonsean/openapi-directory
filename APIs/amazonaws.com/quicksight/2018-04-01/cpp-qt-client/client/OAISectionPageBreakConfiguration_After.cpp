/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionPageBreakConfiguration_After.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionPageBreakConfiguration_After::OAISectionPageBreakConfiguration_After(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionPageBreakConfiguration_After::OAISectionPageBreakConfiguration_After() {
    this->initializeModel();
}

OAISectionPageBreakConfiguration_After::~OAISectionPageBreakConfiguration_After() {}

void OAISectionPageBreakConfiguration_After::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISectionPageBreakConfiguration_After::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionPageBreakConfiguration_After::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAISectionPageBreakConfiguration_After::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionPageBreakConfiguration_After::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAISectionPageBreakStatus OAISectionPageBreakConfiguration_After::getStatus() const {
    return m_status;
}
void OAISectionPageBreakConfiguration_After::setStatus(const OAISectionPageBreakStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISectionPageBreakConfiguration_After::is_status_Set() const{
    return m_status_isSet;
}

bool OAISectionPageBreakConfiguration_After::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISectionPageBreakConfiguration_After::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionPageBreakConfiguration_After::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
