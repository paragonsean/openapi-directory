/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKPIConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKPIConfiguration_FieldWells::OAIKPIConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKPIConfiguration_FieldWells::OAIKPIConfiguration_FieldWells() {
    this->initializeModel();
}

OAIKPIConfiguration_FieldWells::~OAIKPIConfiguration_FieldWells() {}

void OAIKPIConfiguration_FieldWells::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;

    m_target_values_isSet = false;
    m_target_values_isValid = false;

    m_trend_groups_isSet = false;
    m_trend_groups_isValid = false;
}

void OAIKPIConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKPIConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;

    m_target_values_isValid = ::OpenAPI::fromJsonValue(m_target_values, json[QString("TargetValues")]);
    m_target_values_isSet = !json[QString("TargetValues")].isNull() && m_target_values_isValid;

    m_trend_groups_isValid = ::OpenAPI::fromJsonValue(m_trend_groups, json[QString("TrendGroups")]);
    m_trend_groups_isSet = !json[QString("TrendGroups")].isNull() && m_trend_groups_isValid;
}

QString OAIKPIConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKPIConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    if (m_target_values.isSet()) {
        obj.insert(QString("TargetValues"), ::OpenAPI::toJsonValue(m_target_values));
    }
    if (m_trend_groups.isSet()) {
        obj.insert(QString("TrendGroups"), ::OpenAPI::toJsonValue(m_trend_groups));
    }
    return obj;
}

QList OAIKPIConfiguration_FieldWells::getValues() const {
    return m_values;
}
void OAIKPIConfiguration_FieldWells::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIKPIConfiguration_FieldWells::is_values_Set() const{
    return m_values_isSet;
}

bool OAIKPIConfiguration_FieldWells::is_values_Valid() const{
    return m_values_isValid;
}

QList OAIKPIConfiguration_FieldWells::getTargetValues() const {
    return m_target_values;
}
void OAIKPIConfiguration_FieldWells::setTargetValues(const QList &target_values) {
    m_target_values = target_values;
    m_target_values_isSet = true;
}

bool OAIKPIConfiguration_FieldWells::is_target_values_Set() const{
    return m_target_values_isSet;
}

bool OAIKPIConfiguration_FieldWells::is_target_values_Valid() const{
    return m_target_values_isValid;
}

QList OAIKPIConfiguration_FieldWells::getTrendGroups() const {
    return m_trend_groups;
}
void OAIKPIConfiguration_FieldWells::setTrendGroups(const QList &trend_groups) {
    m_trend_groups = trend_groups;
    m_trend_groups_isSet = true;
}

bool OAIKPIConfiguration_FieldWells::is_trend_groups_Set() const{
    return m_trend_groups_isSet;
}

bool OAIKPIConfiguration_FieldWells::is_trend_groups_Valid() const{
    return m_trend_groups_isValid;
}

bool OAIKPIConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trend_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKPIConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
