/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldImageConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldImageConfiguration::OAITableFieldImageConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldImageConfiguration::OAITableFieldImageConfiguration() {
    this->initializeModel();
}

OAITableFieldImageConfiguration::~OAITableFieldImageConfiguration() {}

void OAITableFieldImageConfiguration::initializeModel() {

    m_sizing_options_isSet = false;
    m_sizing_options_isValid = false;
}

void OAITableFieldImageConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldImageConfiguration::fromJsonObject(QJsonObject json) {

    m_sizing_options_isValid = ::OpenAPI::fromJsonValue(m_sizing_options, json[QString("SizingOptions")]);
    m_sizing_options_isSet = !json[QString("SizingOptions")].isNull() && m_sizing_options_isValid;
}

QString OAITableFieldImageConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldImageConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_sizing_options.isSet()) {
        obj.insert(QString("SizingOptions"), ::OpenAPI::toJsonValue(m_sizing_options));
    }
    return obj;
}

OAITableFieldImageConfiguration_SizingOptions OAITableFieldImageConfiguration::getSizingOptions() const {
    return m_sizing_options;
}
void OAITableFieldImageConfiguration::setSizingOptions(const OAITableFieldImageConfiguration_SizingOptions &sizing_options) {
    m_sizing_options = sizing_options;
    m_sizing_options_isSet = true;
}

bool OAITableFieldImageConfiguration::is_sizing_options_Set() const{
    return m_sizing_options_isSet;
}

bool OAITableFieldImageConfiguration::is_sizing_options_Valid() const{
    return m_sizing_options_isValid;
}

bool OAITableFieldImageConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sizing_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldImageConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
