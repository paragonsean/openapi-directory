/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisTickLabelOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisTickLabelOptions::OAIAxisTickLabelOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisTickLabelOptions::OAIAxisTickLabelOptions() {
    this->initializeModel();
}

OAIAxisTickLabelOptions::~OAIAxisTickLabelOptions() {}

void OAIAxisTickLabelOptions::initializeModel() {

    m_label_options_isSet = false;
    m_label_options_isValid = false;

    m_rotation_angle_isSet = false;
    m_rotation_angle_isValid = false;
}

void OAIAxisTickLabelOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisTickLabelOptions::fromJsonObject(QJsonObject json) {

    m_label_options_isValid = ::OpenAPI::fromJsonValue(m_label_options, json[QString("LabelOptions")]);
    m_label_options_isSet = !json[QString("LabelOptions")].isNull() && m_label_options_isValid;

    m_rotation_angle_isValid = ::OpenAPI::fromJsonValue(m_rotation_angle, json[QString("RotationAngle")]);
    m_rotation_angle_isSet = !json[QString("RotationAngle")].isNull() && m_rotation_angle_isValid;
}

QString OAIAxisTickLabelOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisTickLabelOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_label_options.isSet()) {
        obj.insert(QString("LabelOptions"), ::OpenAPI::toJsonValue(m_label_options));
    }
    if (m_rotation_angle_isSet) {
        obj.insert(QString("RotationAngle"), ::OpenAPI::toJsonValue(m_rotation_angle));
    }
    return obj;
}

OAIAxisTickLabelOptions_LabelOptions OAIAxisTickLabelOptions::getLabelOptions() const {
    return m_label_options;
}
void OAIAxisTickLabelOptions::setLabelOptions(const OAIAxisTickLabelOptions_LabelOptions &label_options) {
    m_label_options = label_options;
    m_label_options_isSet = true;
}

bool OAIAxisTickLabelOptions::is_label_options_Set() const{
    return m_label_options_isSet;
}

bool OAIAxisTickLabelOptions::is_label_options_Valid() const{
    return m_label_options_isValid;
}

double OAIAxisTickLabelOptions::getRotationAngle() const {
    return m_rotation_angle;
}
void OAIAxisTickLabelOptions::setRotationAngle(const double &rotation_angle) {
    m_rotation_angle = rotation_angle;
    m_rotation_angle_isSet = true;
}

bool OAIAxisTickLabelOptions::is_rotation_angle_Set() const{
    return m_rotation_angle_isSet;
}

bool OAIAxisTickLabelOptions::is_rotation_angle_Valid() const{
    return m_rotation_angle_isValid;
}

bool OAIAxisTickLabelOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rotation_angle_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisTickLabelOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
