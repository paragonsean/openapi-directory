/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableSideBorderOptions.h
 *
 * The side border options for a table.
 */

#ifndef OAITableSideBorderOptions_H
#define OAITableSideBorderOptions_H

#include <QJsonObject>

#include "OAITableSideBorderOptions_Bottom.h"
#include "OAITableSideBorderOptions_InnerHorizontal.h"
#include "OAITableSideBorderOptions_InnerVertical.h"
#include "OAITableSideBorderOptions_Left.h"
#include "OAITableSideBorderOptions_Right.h"
#include "OAITableSideBorderOptions_Top.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableSideBorderOptions_InnerVertical;
class OAITableSideBorderOptions_InnerHorizontal;
class OAITableSideBorderOptions_Left;
class OAITableSideBorderOptions_Right;
class OAITableSideBorderOptions_Top;
class OAITableSideBorderOptions_Bottom;

class OAITableSideBorderOptions : public OAIObject {
public:
    OAITableSideBorderOptions();
    OAITableSideBorderOptions(QString json);
    ~OAITableSideBorderOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITableSideBorderOptions_InnerVertical getInnerVertical() const;
    void setInnerVertical(const OAITableSideBorderOptions_InnerVertical &inner_vertical);
    bool is_inner_vertical_Set() const;
    bool is_inner_vertical_Valid() const;

    OAITableSideBorderOptions_InnerHorizontal getInnerHorizontal() const;
    void setInnerHorizontal(const OAITableSideBorderOptions_InnerHorizontal &inner_horizontal);
    bool is_inner_horizontal_Set() const;
    bool is_inner_horizontal_Valid() const;

    OAITableSideBorderOptions_Left getLeft() const;
    void setLeft(const OAITableSideBorderOptions_Left &left);
    bool is_left_Set() const;
    bool is_left_Valid() const;

    OAITableSideBorderOptions_Right getRight() const;
    void setRight(const OAITableSideBorderOptions_Right &right);
    bool is_right_Set() const;
    bool is_right_Valid() const;

    OAITableSideBorderOptions_Top getTop() const;
    void setTop(const OAITableSideBorderOptions_Top &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    OAITableSideBorderOptions_Bottom getBottom() const;
    void setBottom(const OAITableSideBorderOptions_Bottom &bottom);
    bool is_bottom_Set() const;
    bool is_bottom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITableSideBorderOptions_InnerVertical m_inner_vertical;
    bool m_inner_vertical_isSet;
    bool m_inner_vertical_isValid;

    OAITableSideBorderOptions_InnerHorizontal m_inner_horizontal;
    bool m_inner_horizontal_isSet;
    bool m_inner_horizontal_isValid;

    OAITableSideBorderOptions_Left m_left;
    bool m_left_isSet;
    bool m_left_isValid;

    OAITableSideBorderOptions_Right m_right;
    bool m_right_isSet;
    bool m_right_isValid;

    OAITableSideBorderOptions_Top m_top;
    bool m_top_isSet;
    bool m_top_isValid;

    OAITableSideBorderOptions_Bottom m_bottom;
    bool m_bottom_isSet;
    bool m_bottom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableSideBorderOptions)

#endif // OAITableSideBorderOptions_H
