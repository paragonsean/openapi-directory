/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDashboardSnapshotJobResultResponse.h
 *
 * 
 */

#ifndef OAIDescribeDashboardSnapshotJobResultResponse_H
#define OAIDescribeDashboardSnapshotJobResultResponse_H

#include <QJsonObject>

#include "OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo.h"
#include "OAIDescribeDashboardSnapshotJobResultResponse_Result.h"
#include "OAISnapshotJobStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeDashboardSnapshotJobResultResponse_Result;
class OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo;

class OAIDescribeDashboardSnapshotJobResultResponse : public OAIObject {
public:
    OAIDescribeDashboardSnapshotJobResultResponse();
    OAIDescribeDashboardSnapshotJobResultResponse(QString json);
    ~OAIDescribeDashboardSnapshotJobResultResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAISnapshotJobStatus getJobStatus() const;
    void setJobStatus(const OAISnapshotJobStatus &job_status);
    bool is_job_status_Set() const;
    bool is_job_status_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    OAIDescribeDashboardSnapshotJobResultResponse_Result getResult() const;
    void setResult(const OAIDescribeDashboardSnapshotJobResultResponse_Result &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo getErrorInfo() const;
    void setErrorInfo(const OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAISnapshotJobStatus m_job_status;
    bool m_job_status_isSet;
    bool m_job_status_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    OAIDescribeDashboardSnapshotJobResultResponse_Result m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    OAIDescribeDashboardSnapshotJobResultResponse_ErrorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDashboardSnapshotJobResultResponse)

#endif // OAIDescribeDashboardSnapshotJobResultResponse_H
