/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilledMapVisual_ChartConfiguration.h
 *
 * 
 */

#ifndef OAIFilledMapVisual_ChartConfiguration_H
#define OAIFilledMapVisual_ChartConfiguration_H

#include <QJsonObject>

#include "OAIBarChartConfiguration_Legend.h"
#include "OAIBarChartConfiguration_Tooltip.h"
#include "OAIFilledMapConfiguration_FieldWells.h"
#include "OAIFilledMapConfiguration_MapStyleOptions.h"
#include "OAIFilledMapConfiguration_SortConfiguration.h"
#include "OAIFilledMapConfiguration_WindowOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilledMapConfiguration_FieldWells;
class OAIFilledMapConfiguration_SortConfiguration;
class OAIBarChartConfiguration_Legend;
class OAIBarChartConfiguration_Tooltip;
class OAIFilledMapConfiguration_WindowOptions;
class OAIFilledMapConfiguration_MapStyleOptions;

class OAIFilledMapVisual_ChartConfiguration : public OAIObject {
public:
    OAIFilledMapVisual_ChartConfiguration();
    OAIFilledMapVisual_ChartConfiguration(QString json);
    ~OAIFilledMapVisual_ChartConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFilledMapConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAIFilledMapConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAIFilledMapConfiguration_SortConfiguration getSortConfiguration() const;
    void setSortConfiguration(const OAIFilledMapConfiguration_SortConfiguration &sort_configuration);
    bool is_sort_configuration_Set() const;
    bool is_sort_configuration_Valid() const;

    OAIBarChartConfiguration_Legend getLegend() const;
    void setLegend(const OAIBarChartConfiguration_Legend &legend);
    bool is_legend_Set() const;
    bool is_legend_Valid() const;

    OAIBarChartConfiguration_Tooltip getTooltip() const;
    void setTooltip(const OAIBarChartConfiguration_Tooltip &tooltip);
    bool is_tooltip_Set() const;
    bool is_tooltip_Valid() const;

    OAIFilledMapConfiguration_WindowOptions getWindowOptions() const;
    void setWindowOptions(const OAIFilledMapConfiguration_WindowOptions &window_options);
    bool is_window_options_Set() const;
    bool is_window_options_Valid() const;

    OAIFilledMapConfiguration_MapStyleOptions getMapStyleOptions() const;
    void setMapStyleOptions(const OAIFilledMapConfiguration_MapStyleOptions &map_style_options);
    bool is_map_style_options_Set() const;
    bool is_map_style_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFilledMapConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAIFilledMapConfiguration_SortConfiguration m_sort_configuration;
    bool m_sort_configuration_isSet;
    bool m_sort_configuration_isValid;

    OAIBarChartConfiguration_Legend m_legend;
    bool m_legend_isSet;
    bool m_legend_isValid;

    OAIBarChartConfiguration_Tooltip m_tooltip;
    bool m_tooltip_isSet;
    bool m_tooltip_isValid;

    OAIFilledMapConfiguration_WindowOptions m_window_options;
    bool m_window_options_isSet;
    bool m_window_options_isValid;

    OAIFilledMapConfiguration_MapStyleOptions m_map_style_options;
    bool m_map_style_options_isSet;
    bool m_map_style_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilledMapVisual_ChartConfiguration)

#endif // OAIFilledMapVisual_ChartConfiguration_H
