/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTopicRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTopicRequest::OAIUpdateTopicRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTopicRequest::OAIUpdateTopicRequest() {
    this->initializeModel();
}

OAIUpdateTopicRequest::~OAIUpdateTopicRequest() {}

void OAIUpdateTopicRequest::initializeModel() {

    m_topic_isSet = false;
    m_topic_isValid = false;
}

void OAIUpdateTopicRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTopicRequest::fromJsonObject(QJsonObject json) {

    m_topic_isValid = ::OpenAPI::fromJsonValue(m_topic, json[QString("Topic")]);
    m_topic_isSet = !json[QString("Topic")].isNull() && m_topic_isValid;
}

QString OAIUpdateTopicRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTopicRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_topic.isSet()) {
        obj.insert(QString("Topic"), ::OpenAPI::toJsonValue(m_topic));
    }
    return obj;
}

OAIUpdateTopicRequest_Topic OAIUpdateTopicRequest::getTopic() const {
    return m_topic;
}
void OAIUpdateTopicRequest::setTopic(const OAIUpdateTopicRequest_Topic &topic) {
    m_topic = topic;
    m_topic_isSet = true;
}

bool OAIUpdateTopicRequest::is_topic_Set() const{
    return m_topic_isSet;
}

bool OAIUpdateTopicRequest::is_topic_Valid() const{
    return m_topic_isValid;
}

bool OAIUpdateTopicRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_topic.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTopicRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_topic_isValid && true;
}

} // namespace OpenAPI
