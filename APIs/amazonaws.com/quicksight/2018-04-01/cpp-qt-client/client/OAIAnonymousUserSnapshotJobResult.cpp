/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnonymousUserSnapshotJobResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnonymousUserSnapshotJobResult::OAIAnonymousUserSnapshotJobResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnonymousUserSnapshotJobResult::OAIAnonymousUserSnapshotJobResult() {
    this->initializeModel();
}

OAIAnonymousUserSnapshotJobResult::~OAIAnonymousUserSnapshotJobResult() {}

void OAIAnonymousUserSnapshotJobResult::initializeModel() {

    m_file_groups_isSet = false;
    m_file_groups_isValid = false;
}

void OAIAnonymousUserSnapshotJobResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnonymousUserSnapshotJobResult::fromJsonObject(QJsonObject json) {

    m_file_groups_isValid = ::OpenAPI::fromJsonValue(m_file_groups, json[QString("FileGroups")]);
    m_file_groups_isSet = !json[QString("FileGroups")].isNull() && m_file_groups_isValid;
}

QString OAIAnonymousUserSnapshotJobResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnonymousUserSnapshotJobResult::asJsonObject() const {
    QJsonObject obj;
    if (m_file_groups.isSet()) {
        obj.insert(QString("FileGroups"), ::OpenAPI::toJsonValue(m_file_groups));
    }
    return obj;
}

QList OAIAnonymousUserSnapshotJobResult::getFileGroups() const {
    return m_file_groups;
}
void OAIAnonymousUserSnapshotJobResult::setFileGroups(const QList &file_groups) {
    m_file_groups = file_groups;
    m_file_groups_isSet = true;
}

bool OAIAnonymousUserSnapshotJobResult::is_file_groups_Set() const{
    return m_file_groups_isSet;
}

bool OAIAnonymousUserSnapshotJobResult::is_file_groups_Valid() const{
    return m_file_groups_isValid;
}

bool OAIAnonymousUserSnapshotJobResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnonymousUserSnapshotJobResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
