/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAccountSettingsResponse_AccountSettings.h
 *
 * 
 */

#ifndef OAIDescribeAccountSettingsResponse_AccountSettings_H
#define OAIDescribeAccountSettingsResponse_AccountSettings_H

#include <QJsonObject>

#include "OAIEdition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeAccountSettingsResponse_AccountSettings : public OAIObject {
public:
    OAIDescribeAccountSettingsResponse_AccountSettings();
    OAIDescribeAccountSettingsResponse_AccountSettings(QString json);
    ~OAIDescribeAccountSettingsResponse_AccountSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    OAIEdition getEdition() const;
    void setEdition(const OAIEdition &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    QString getDefaultNamespace() const;
    void setDefaultNamespace(const QString &default_namespace);
    bool is_default_namespace_Set() const;
    bool is_default_namespace_Valid() const;

    QString getNotificationEmail() const;
    void setNotificationEmail(const QString &notification_email);
    bool is_notification_email_Set() const;
    bool is_notification_email_Valid() const;

    bool getPublicSharingEnabled() const;
    void setPublicSharingEnabled(const bool &public_sharing_enabled);
    bool is_public_sharing_enabled_Set() const;
    bool is_public_sharing_enabled_Valid() const;

    bool getTerminationProtectionEnabled() const;
    void setTerminationProtectionEnabled(const bool &termination_protection_enabled);
    bool is_termination_protection_enabled_Set() const;
    bool is_termination_protection_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    OAIEdition m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    QString m_default_namespace;
    bool m_default_namespace_isSet;
    bool m_default_namespace_isValid;

    QString m_notification_email;
    bool m_notification_email_isSet;
    bool m_notification_email_isValid;

    bool m_public_sharing_enabled;
    bool m_public_sharing_enabled_isSet;
    bool m_public_sharing_enabled_isValid;

    bool m_termination_protection_enabled;
    bool m_termination_protection_enabled_isSet;
    bool m_termination_protection_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAccountSettingsResponse_AccountSettings)

#endif // OAIDescribeAccountSettingsResponse_AccountSettings_H
