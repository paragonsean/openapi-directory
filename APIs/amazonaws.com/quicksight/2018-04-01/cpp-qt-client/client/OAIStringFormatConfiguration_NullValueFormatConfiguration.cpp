/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStringFormatConfiguration_NullValueFormatConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStringFormatConfiguration_NullValueFormatConfiguration::OAIStringFormatConfiguration_NullValueFormatConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStringFormatConfiguration_NullValueFormatConfiguration::OAIStringFormatConfiguration_NullValueFormatConfiguration() {
    this->initializeModel();
}

OAIStringFormatConfiguration_NullValueFormatConfiguration::~OAIStringFormatConfiguration_NullValueFormatConfiguration() {}

void OAIStringFormatConfiguration_NullValueFormatConfiguration::initializeModel() {

    m_null_string_isSet = false;
    m_null_string_isValid = false;
}

void OAIStringFormatConfiguration_NullValueFormatConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStringFormatConfiguration_NullValueFormatConfiguration::fromJsonObject(QJsonObject json) {

    m_null_string_isValid = ::OpenAPI::fromJsonValue(m_null_string, json[QString("NullString")]);
    m_null_string_isSet = !json[QString("NullString")].isNull() && m_null_string_isValid;
}

QString OAIStringFormatConfiguration_NullValueFormatConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStringFormatConfiguration_NullValueFormatConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_null_string_isSet) {
        obj.insert(QString("NullString"), ::OpenAPI::toJsonValue(m_null_string));
    }
    return obj;
}

QString OAIStringFormatConfiguration_NullValueFormatConfiguration::getNullString() const {
    return m_null_string;
}
void OAIStringFormatConfiguration_NullValueFormatConfiguration::setNullString(const QString &null_string) {
    m_null_string = null_string;
    m_null_string_isSet = true;
}

bool OAIStringFormatConfiguration_NullValueFormatConfiguration::is_null_string_Set() const{
    return m_null_string_isSet;
}

bool OAIStringFormatConfiguration_NullValueFormatConfiguration::is_null_string_Valid() const{
    return m_null_string_isValid;
}

bool OAIStringFormatConfiguration_NullValueFormatConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_null_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStringFormatConfiguration_NullValueFormatConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_null_string_isValid && true;
}

} // namespace OpenAPI
