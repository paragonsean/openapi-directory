/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITreeMapConfiguration_FieldWells.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITreeMapConfiguration_FieldWells::OAITreeMapConfiguration_FieldWells(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITreeMapConfiguration_FieldWells::OAITreeMapConfiguration_FieldWells() {
    this->initializeModel();
}

OAITreeMapConfiguration_FieldWells::~OAITreeMapConfiguration_FieldWells() {}

void OAITreeMapConfiguration_FieldWells::initializeModel() {

    m_tree_map_aggregated_field_wells_isSet = false;
    m_tree_map_aggregated_field_wells_isValid = false;
}

void OAITreeMapConfiguration_FieldWells::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITreeMapConfiguration_FieldWells::fromJsonObject(QJsonObject json) {

    m_tree_map_aggregated_field_wells_isValid = ::OpenAPI::fromJsonValue(m_tree_map_aggregated_field_wells, json[QString("TreeMapAggregatedFieldWells")]);
    m_tree_map_aggregated_field_wells_isSet = !json[QString("TreeMapAggregatedFieldWells")].isNull() && m_tree_map_aggregated_field_wells_isValid;
}

QString OAITreeMapConfiguration_FieldWells::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITreeMapConfiguration_FieldWells::asJsonObject() const {
    QJsonObject obj;
    if (m_tree_map_aggregated_field_wells.isSet()) {
        obj.insert(QString("TreeMapAggregatedFieldWells"), ::OpenAPI::toJsonValue(m_tree_map_aggregated_field_wells));
    }
    return obj;
}

OAITreeMapFieldWells_TreeMapAggregatedFieldWells OAITreeMapConfiguration_FieldWells::getTreeMapAggregatedFieldWells() const {
    return m_tree_map_aggregated_field_wells;
}
void OAITreeMapConfiguration_FieldWells::setTreeMapAggregatedFieldWells(const OAITreeMapFieldWells_TreeMapAggregatedFieldWells &tree_map_aggregated_field_wells) {
    m_tree_map_aggregated_field_wells = tree_map_aggregated_field_wells;
    m_tree_map_aggregated_field_wells_isSet = true;
}

bool OAITreeMapConfiguration_FieldWells::is_tree_map_aggregated_field_wells_Set() const{
    return m_tree_map_aggregated_field_wells_isSet;
}

bool OAITreeMapConfiguration_FieldWells::is_tree_map_aggregated_field_wells_Valid() const{
    return m_tree_map_aggregated_field_wells_isValid;
}

bool OAITreeMapConfiguration_FieldWells::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tree_map_aggregated_field_wells.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITreeMapConfiguration_FieldWells::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
