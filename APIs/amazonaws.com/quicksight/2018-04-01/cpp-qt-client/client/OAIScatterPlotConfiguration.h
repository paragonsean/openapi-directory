/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScatterPlotConfiguration.h
 *
 * The configuration of a scatter plot.
 */

#ifndef OAIScatterPlotConfiguration_H
#define OAIScatterPlotConfiguration_H

#include <QJsonObject>

#include "OAIBarChartConfiguration_DataLabels.h"
#include "OAIBarChartConfiguration_Legend.h"
#include "OAIBarChartConfiguration_VisualPalette.h"
#include "OAIComboChartConfiguration_Tooltip.h"
#include "OAIScatterPlotConfiguration_FieldWells.h"
#include "OAIScatterPlotConfiguration_XAxisDisplayOptions.h"
#include "OAIScatterPlotConfiguration_XAxisLabelOptions.h"
#include "OAIScatterPlotConfiguration_YAxisDisplayOptions.h"
#include "OAIScatterPlotConfiguration_YAxisLabelOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScatterPlotConfiguration_FieldWells;
class OAIScatterPlotConfiguration_XAxisLabelOptions;
class OAIScatterPlotConfiguration_XAxisDisplayOptions;
class OAIScatterPlotConfiguration_YAxisLabelOptions;
class OAIScatterPlotConfiguration_YAxisDisplayOptions;
class OAIBarChartConfiguration_Legend;
class OAIBarChartConfiguration_DataLabels;
class OAIComboChartConfiguration_Tooltip;
class OAIBarChartConfiguration_VisualPalette;

class OAIScatterPlotConfiguration : public OAIObject {
public:
    OAIScatterPlotConfiguration();
    OAIScatterPlotConfiguration(QString json);
    ~OAIScatterPlotConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIScatterPlotConfiguration_FieldWells getFieldWells() const;
    void setFieldWells(const OAIScatterPlotConfiguration_FieldWells &field_wells);
    bool is_field_wells_Set() const;
    bool is_field_wells_Valid() const;

    OAIScatterPlotConfiguration_XAxisLabelOptions getXAxisLabelOptions() const;
    void setXAxisLabelOptions(const OAIScatterPlotConfiguration_XAxisLabelOptions &x_axis_label_options);
    bool is_x_axis_label_options_Set() const;
    bool is_x_axis_label_options_Valid() const;

    OAIScatterPlotConfiguration_XAxisDisplayOptions getXAxisDisplayOptions() const;
    void setXAxisDisplayOptions(const OAIScatterPlotConfiguration_XAxisDisplayOptions &x_axis_display_options);
    bool is_x_axis_display_options_Set() const;
    bool is_x_axis_display_options_Valid() const;

    OAIScatterPlotConfiguration_YAxisLabelOptions getYAxisLabelOptions() const;
    void setYAxisLabelOptions(const OAIScatterPlotConfiguration_YAxisLabelOptions &y_axis_label_options);
    bool is_y_axis_label_options_Set() const;
    bool is_y_axis_label_options_Valid() const;

    OAIScatterPlotConfiguration_YAxisDisplayOptions getYAxisDisplayOptions() const;
    void setYAxisDisplayOptions(const OAIScatterPlotConfiguration_YAxisDisplayOptions &y_axis_display_options);
    bool is_y_axis_display_options_Set() const;
    bool is_y_axis_display_options_Valid() const;

    OAIBarChartConfiguration_Legend getLegend() const;
    void setLegend(const OAIBarChartConfiguration_Legend &legend);
    bool is_legend_Set() const;
    bool is_legend_Valid() const;

    OAIBarChartConfiguration_DataLabels getDataLabels() const;
    void setDataLabels(const OAIBarChartConfiguration_DataLabels &data_labels);
    bool is_data_labels_Set() const;
    bool is_data_labels_Valid() const;

    OAIComboChartConfiguration_Tooltip getTooltip() const;
    void setTooltip(const OAIComboChartConfiguration_Tooltip &tooltip);
    bool is_tooltip_Set() const;
    bool is_tooltip_Valid() const;

    OAIBarChartConfiguration_VisualPalette getVisualPalette() const;
    void setVisualPalette(const OAIBarChartConfiguration_VisualPalette &visual_palette);
    bool is_visual_palette_Set() const;
    bool is_visual_palette_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIScatterPlotConfiguration_FieldWells m_field_wells;
    bool m_field_wells_isSet;
    bool m_field_wells_isValid;

    OAIScatterPlotConfiguration_XAxisLabelOptions m_x_axis_label_options;
    bool m_x_axis_label_options_isSet;
    bool m_x_axis_label_options_isValid;

    OAIScatterPlotConfiguration_XAxisDisplayOptions m_x_axis_display_options;
    bool m_x_axis_display_options_isSet;
    bool m_x_axis_display_options_isValid;

    OAIScatterPlotConfiguration_YAxisLabelOptions m_y_axis_label_options;
    bool m_y_axis_label_options_isSet;
    bool m_y_axis_label_options_isValid;

    OAIScatterPlotConfiguration_YAxisDisplayOptions m_y_axis_display_options;
    bool m_y_axis_display_options_isSet;
    bool m_y_axis_display_options_isValid;

    OAIBarChartConfiguration_Legend m_legend;
    bool m_legend_isSet;
    bool m_legend_isValid;

    OAIBarChartConfiguration_DataLabels m_data_labels;
    bool m_data_labels_isSet;
    bool m_data_labels_isValid;

    OAIComboChartConfiguration_Tooltip m_tooltip;
    bool m_tooltip_isSet;
    bool m_tooltip_isValid;

    OAIBarChartConfiguration_VisualPalette m_visual_palette;
    bool m_visual_palette_isSet;
    bool m_visual_palette_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScatterPlotConfiguration)

#endif // OAIScatterPlotConfiguration_H
