/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFolderSearchFilter.h
 *
 * A filter to use to search an Amazon QuickSight folder.
 */

#ifndef OAIFolderSearchFilter_H
#define OAIFolderSearchFilter_H

#include <QJsonObject>

#include "OAIFilterOperator.h"
#include "OAIFolderFilterAttribute.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFolderSearchFilter : public OAIObject {
public:
    OAIFolderSearchFilter();
    OAIFolderSearchFilter(QString json);
    ~OAIFolderSearchFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFilterOperator getROperator() const;
    void setROperator(const OAIFilterOperator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    OAIFolderFilterAttribute getName() const;
    void setName(const OAIFolderFilterAttribute &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFilterOperator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    OAIFolderFilterAttribute m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFolderSearchFilter)

#endif // OAIFolderSearchFilter_H
