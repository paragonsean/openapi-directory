/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWordCloudWordScaling.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWordCloudWordScaling::OAIWordCloudWordScaling(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWordCloudWordScaling::OAIWordCloudWordScaling() {
    this->initializeModel();
}

OAIWordCloudWordScaling::~OAIWordCloudWordScaling() {}

void OAIWordCloudWordScaling::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWordCloudWordScaling::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWordCloudWordScaling::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EMPHASIZE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWordCloudWordScaling::EMPHASIZE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NORMAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWordCloudWordScaling::NORMAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWordCloudWordScaling::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWordCloudWordScaling::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWordCloudWordScaling::EMPHASIZE:
            val = "EMPHASIZE";
            break;
        case eOAIWordCloudWordScaling::NORMAL:
            val = "NORMAL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWordCloudWordScaling::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWordCloudWordScaling::eOAIWordCloudWordScaling OAIWordCloudWordScaling::getValue() const {
    return m_value;
}

void OAIWordCloudWordScaling::setValue(const OAIWordCloudWordScaling::eOAIWordCloudWordScaling& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWordCloudWordScaling::isSet() const {
    
    return m_value_isSet;
}

bool OAIWordCloudWordScaling::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
