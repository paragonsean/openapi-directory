/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumericAxisOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumericAxisOptions::OAINumericAxisOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumericAxisOptions::OAINumericAxisOptions() {
    this->initializeModel();
}

OAINumericAxisOptions::~OAINumericAxisOptions() {}

void OAINumericAxisOptions::initializeModel() {

    m_scale_isSet = false;
    m_scale_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;
}

void OAINumericAxisOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumericAxisOptions::fromJsonObject(QJsonObject json) {

    m_scale_isValid = ::OpenAPI::fromJsonValue(m_scale, json[QString("Scale")]);
    m_scale_isSet = !json[QString("Scale")].isNull() && m_scale_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("Range")]);
    m_range_isSet = !json[QString("Range")].isNull() && m_range_isValid;
}

QString OAINumericAxisOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumericAxisOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_scale.isSet()) {
        obj.insert(QString("Scale"), ::OpenAPI::toJsonValue(m_scale));
    }
    if (m_range.isSet()) {
        obj.insert(QString("Range"), ::OpenAPI::toJsonValue(m_range));
    }
    return obj;
}

OAINumericAxisOptions_Scale OAINumericAxisOptions::getScale() const {
    return m_scale;
}
void OAINumericAxisOptions::setScale(const OAINumericAxisOptions_Scale &scale) {
    m_scale = scale;
    m_scale_isSet = true;
}

bool OAINumericAxisOptions::is_scale_Set() const{
    return m_scale_isSet;
}

bool OAINumericAxisOptions::is_scale_Valid() const{
    return m_scale_isValid;
}

OAINumericAxisOptions_Range OAINumericAxisOptions::getRange() const {
    return m_range;
}
void OAINumericAxisOptions::setRange(const OAINumericAxisOptions_Range &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAINumericAxisOptions::is_range_Set() const{
    return m_range_isSet;
}

bool OAINumericAxisOptions::is_range_Valid() const{
    return m_range_isValid;
}

bool OAINumericAxisOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scale.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumericAxisOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
