/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegerDefaultValues_DynamicValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegerDefaultValues_DynamicValue::OAIIntegerDefaultValues_DynamicValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegerDefaultValues_DynamicValue::OAIIntegerDefaultValues_DynamicValue() {
    this->initializeModel();
}

OAIIntegerDefaultValues_DynamicValue::~OAIIntegerDefaultValues_DynamicValue() {}

void OAIIntegerDefaultValues_DynamicValue::initializeModel() {

    m_user_name_column_isSet = false;
    m_user_name_column_isValid = false;

    m_group_name_column_isSet = false;
    m_group_name_column_isValid = false;

    m_default_value_column_isSet = false;
    m_default_value_column_isValid = false;
}

void OAIIntegerDefaultValues_DynamicValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegerDefaultValues_DynamicValue::fromJsonObject(QJsonObject json) {

    m_user_name_column_isValid = ::OpenAPI::fromJsonValue(m_user_name_column, json[QString("UserNameColumn")]);
    m_user_name_column_isSet = !json[QString("UserNameColumn")].isNull() && m_user_name_column_isValid;

    m_group_name_column_isValid = ::OpenAPI::fromJsonValue(m_group_name_column, json[QString("GroupNameColumn")]);
    m_group_name_column_isSet = !json[QString("GroupNameColumn")].isNull() && m_group_name_column_isValid;

    m_default_value_column_isValid = ::OpenAPI::fromJsonValue(m_default_value_column, json[QString("DefaultValueColumn")]);
    m_default_value_column_isSet = !json[QString("DefaultValueColumn")].isNull() && m_default_value_column_isValid;
}

QString OAIIntegerDefaultValues_DynamicValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegerDefaultValues_DynamicValue::asJsonObject() const {
    QJsonObject obj;
    if (m_user_name_column.isSet()) {
        obj.insert(QString("UserNameColumn"), ::OpenAPI::toJsonValue(m_user_name_column));
    }
    if (m_group_name_column.isSet()) {
        obj.insert(QString("GroupNameColumn"), ::OpenAPI::toJsonValue(m_group_name_column));
    }
    if (m_default_value_column.isSet()) {
        obj.insert(QString("DefaultValueColumn"), ::OpenAPI::toJsonValue(m_default_value_column));
    }
    return obj;
}

OAIDynamicDefaultValue_UserNameColumn OAIIntegerDefaultValues_DynamicValue::getUserNameColumn() const {
    return m_user_name_column;
}
void OAIIntegerDefaultValues_DynamicValue::setUserNameColumn(const OAIDynamicDefaultValue_UserNameColumn &user_name_column) {
    m_user_name_column = user_name_column;
    m_user_name_column_isSet = true;
}

bool OAIIntegerDefaultValues_DynamicValue::is_user_name_column_Set() const{
    return m_user_name_column_isSet;
}

bool OAIIntegerDefaultValues_DynamicValue::is_user_name_column_Valid() const{
    return m_user_name_column_isValid;
}

OAIDynamicDefaultValue_GroupNameColumn OAIIntegerDefaultValues_DynamicValue::getGroupNameColumn() const {
    return m_group_name_column;
}
void OAIIntegerDefaultValues_DynamicValue::setGroupNameColumn(const OAIDynamicDefaultValue_GroupNameColumn &group_name_column) {
    m_group_name_column = group_name_column;
    m_group_name_column_isSet = true;
}

bool OAIIntegerDefaultValues_DynamicValue::is_group_name_column_Set() const{
    return m_group_name_column_isSet;
}

bool OAIIntegerDefaultValues_DynamicValue::is_group_name_column_Valid() const{
    return m_group_name_column_isValid;
}

OAIDynamicDefaultValue_DefaultValueColumn OAIIntegerDefaultValues_DynamicValue::getDefaultValueColumn() const {
    return m_default_value_column;
}
void OAIIntegerDefaultValues_DynamicValue::setDefaultValueColumn(const OAIDynamicDefaultValue_DefaultValueColumn &default_value_column) {
    m_default_value_column = default_value_column;
    m_default_value_column_isSet = true;
}

bool OAIIntegerDefaultValues_DynamicValue::is_default_value_column_Set() const{
    return m_default_value_column_isSet;
}

bool OAIIntegerDefaultValues_DynamicValue::is_default_value_column_Valid() const{
    return m_default_value_column_isValid;
}

bool OAIIntegerDefaultValues_DynamicValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_column.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegerDefaultValues_DynamicValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_value_column_isValid && true;
}

} // namespace OpenAPI
