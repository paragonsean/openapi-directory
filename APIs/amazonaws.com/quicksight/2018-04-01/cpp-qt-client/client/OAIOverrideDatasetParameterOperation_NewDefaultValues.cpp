/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOverrideDatasetParameterOperation_NewDefaultValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOverrideDatasetParameterOperation_NewDefaultValues::OAIOverrideDatasetParameterOperation_NewDefaultValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOverrideDatasetParameterOperation_NewDefaultValues::OAIOverrideDatasetParameterOperation_NewDefaultValues() {
    this->initializeModel();
}

OAIOverrideDatasetParameterOperation_NewDefaultValues::~OAIOverrideDatasetParameterOperation_NewDefaultValues() {}

void OAIOverrideDatasetParameterOperation_NewDefaultValues::initializeModel() {

    m_string_static_values_isSet = false;
    m_string_static_values_isValid = false;

    m_decimal_static_values_isSet = false;
    m_decimal_static_values_isValid = false;

    m_date_time_static_values_isSet = false;
    m_date_time_static_values_isValid = false;

    m_integer_static_values_isSet = false;
    m_integer_static_values_isValid = false;
}

void OAIOverrideDatasetParameterOperation_NewDefaultValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOverrideDatasetParameterOperation_NewDefaultValues::fromJsonObject(QJsonObject json) {

    m_string_static_values_isValid = ::OpenAPI::fromJsonValue(m_string_static_values, json[QString("StringStaticValues")]);
    m_string_static_values_isSet = !json[QString("StringStaticValues")].isNull() && m_string_static_values_isValid;

    m_decimal_static_values_isValid = ::OpenAPI::fromJsonValue(m_decimal_static_values, json[QString("DecimalStaticValues")]);
    m_decimal_static_values_isSet = !json[QString("DecimalStaticValues")].isNull() && m_decimal_static_values_isValid;

    m_date_time_static_values_isValid = ::OpenAPI::fromJsonValue(m_date_time_static_values, json[QString("DateTimeStaticValues")]);
    m_date_time_static_values_isSet = !json[QString("DateTimeStaticValues")].isNull() && m_date_time_static_values_isValid;

    m_integer_static_values_isValid = ::OpenAPI::fromJsonValue(m_integer_static_values, json[QString("IntegerStaticValues")]);
    m_integer_static_values_isSet = !json[QString("IntegerStaticValues")].isNull() && m_integer_static_values_isValid;
}

QString OAIOverrideDatasetParameterOperation_NewDefaultValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOverrideDatasetParameterOperation_NewDefaultValues::asJsonObject() const {
    QJsonObject obj;
    if (m_string_static_values.isSet()) {
        obj.insert(QString("StringStaticValues"), ::OpenAPI::toJsonValue(m_string_static_values));
    }
    if (m_decimal_static_values.isSet()) {
        obj.insert(QString("DecimalStaticValues"), ::OpenAPI::toJsonValue(m_decimal_static_values));
    }
    if (m_date_time_static_values.isSet()) {
        obj.insert(QString("DateTimeStaticValues"), ::OpenAPI::toJsonValue(m_date_time_static_values));
    }
    if (m_integer_static_values.isSet()) {
        obj.insert(QString("IntegerStaticValues"), ::OpenAPI::toJsonValue(m_integer_static_values));
    }
    return obj;
}

QList OAIOverrideDatasetParameterOperation_NewDefaultValues::getStringStaticValues() const {
    return m_string_static_values;
}
void OAIOverrideDatasetParameterOperation_NewDefaultValues::setStringStaticValues(const QList &string_static_values) {
    m_string_static_values = string_static_values;
    m_string_static_values_isSet = true;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_string_static_values_Set() const{
    return m_string_static_values_isSet;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_string_static_values_Valid() const{
    return m_string_static_values_isValid;
}

QList OAIOverrideDatasetParameterOperation_NewDefaultValues::getDecimalStaticValues() const {
    return m_decimal_static_values;
}
void OAIOverrideDatasetParameterOperation_NewDefaultValues::setDecimalStaticValues(const QList &decimal_static_values) {
    m_decimal_static_values = decimal_static_values;
    m_decimal_static_values_isSet = true;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_decimal_static_values_Set() const{
    return m_decimal_static_values_isSet;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_decimal_static_values_Valid() const{
    return m_decimal_static_values_isValid;
}

QList OAIOverrideDatasetParameterOperation_NewDefaultValues::getDateTimeStaticValues() const {
    return m_date_time_static_values;
}
void OAIOverrideDatasetParameterOperation_NewDefaultValues::setDateTimeStaticValues(const QList &date_time_static_values) {
    m_date_time_static_values = date_time_static_values;
    m_date_time_static_values_isSet = true;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_date_time_static_values_Set() const{
    return m_date_time_static_values_isSet;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_date_time_static_values_Valid() const{
    return m_date_time_static_values_isValid;
}

QList OAIOverrideDatasetParameterOperation_NewDefaultValues::getIntegerStaticValues() const {
    return m_integer_static_values;
}
void OAIOverrideDatasetParameterOperation_NewDefaultValues::setIntegerStaticValues(const QList &integer_static_values) {
    m_integer_static_values = integer_static_values;
    m_integer_static_values_isSet = true;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_integer_static_values_Set() const{
    return m_integer_static_values_isSet;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::is_integer_static_values_Valid() const{
    return m_integer_static_values_isValid;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_string_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_decimal_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_time_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_static_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOverrideDatasetParameterOperation_NewDefaultValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
