/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDataSetRequest_RowLevelPermissionTagConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::OAICreateDataSetRequest_RowLevelPermissionTagConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::OAICreateDataSetRequest_RowLevelPermissionTagConfiguration() {
    this->initializeModel();
}

OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::~OAICreateDataSetRequest_RowLevelPermissionTagConfiguration() {}

void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_tag_rules_isSet = false;
    m_tag_rules_isValid = false;

    m_tag_rule_configurations_isSet = false;
    m_tag_rule_configurations_isValid = false;
}

void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_tag_rules_isValid = ::OpenAPI::fromJsonValue(m_tag_rules, json[QString("TagRules")]);
    m_tag_rules_isSet = !json[QString("TagRules")].isNull() && m_tag_rules_isValid;

    m_tag_rule_configurations_isValid = ::OpenAPI::fromJsonValue(m_tag_rule_configurations, json[QString("TagRuleConfigurations")]);
    m_tag_rule_configurations_isSet = !json[QString("TagRuleConfigurations")].isNull() && m_tag_rule_configurations_isValid;
}

QString OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tag_rules.isSet()) {
        obj.insert(QString("TagRules"), ::OpenAPI::toJsonValue(m_tag_rules));
    }
    if (m_tag_rule_configurations.isSet()) {
        obj.insert(QString("TagRuleConfigurations"), ::OpenAPI::toJsonValue(m_tag_rule_configurations));
    }
    return obj;
}

OAIStatus OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::getStatus() const {
    return m_status;
}
void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_status_Valid() const{
    return m_status_isValid;
}

QList OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::getTagRules() const {
    return m_tag_rules;
}
void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::setTagRules(const QList &tag_rules) {
    m_tag_rules = tag_rules;
    m_tag_rules_isSet = true;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_tag_rules_Set() const{
    return m_tag_rules_isSet;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_tag_rules_Valid() const{
    return m_tag_rules_isValid;
}

QList OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::getTagRuleConfigurations() const {
    return m_tag_rule_configurations;
}
void OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::setTagRuleConfigurations(const QList &tag_rule_configurations) {
    m_tag_rule_configurations = tag_rule_configurations;
    m_tag_rule_configurations_isSet = true;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_tag_rule_configurations_Set() const{
    return m_tag_rule_configurations_isSet;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::is_tag_rule_configurations_Valid() const{
    return m_tag_rule_configurations_isValid;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_rule_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDataSetRequest_RowLevelPermissionTagConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tag_rules_isValid && true;
}

} // namespace OpenAPI
