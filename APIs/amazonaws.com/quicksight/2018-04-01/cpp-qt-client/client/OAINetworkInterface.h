/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterface.h
 *
 * The structure that contains information about a network interface.
 */

#ifndef OAINetworkInterface_H
#define OAINetworkInterface_H

#include <QJsonObject>

#include "OAINetworkInterfaceStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkInterface : public OAIObject {
public:
    OAINetworkInterface();
    OAINetworkInterface(QString json);
    ~OAINetworkInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAINetworkInterfaceStatus getStatus() const;
    void setStatus(const OAINetworkInterfaceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getNetworkInterfaceId() const;
    void setNetworkInterfaceId(const QString &network_interface_id);
    bool is_network_interface_id_Set() const;
    bool is_network_interface_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAINetworkInterfaceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_network_interface_id;
    bool m_network_interface_id_isSet;
    bool m_network_interface_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterface)

#endif // OAINetworkInterface_H
