/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIAMPolicyAssignmentSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIAMPolicyAssignmentSummary::OAIIAMPolicyAssignmentSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIAMPolicyAssignmentSummary::OAIIAMPolicyAssignmentSummary() {
    this->initializeModel();
}

OAIIAMPolicyAssignmentSummary::~OAIIAMPolicyAssignmentSummary() {}

void OAIIAMPolicyAssignmentSummary::initializeModel() {

    m_assignment_name_isSet = false;
    m_assignment_name_isValid = false;

    m_assignment_status_isSet = false;
    m_assignment_status_isValid = false;
}

void OAIIAMPolicyAssignmentSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIAMPolicyAssignmentSummary::fromJsonObject(QJsonObject json) {

    m_assignment_name_isValid = ::OpenAPI::fromJsonValue(m_assignment_name, json[QString("AssignmentName")]);
    m_assignment_name_isSet = !json[QString("AssignmentName")].isNull() && m_assignment_name_isValid;

    m_assignment_status_isValid = ::OpenAPI::fromJsonValue(m_assignment_status, json[QString("AssignmentStatus")]);
    m_assignment_status_isSet = !json[QString("AssignmentStatus")].isNull() && m_assignment_status_isValid;
}

QString OAIIAMPolicyAssignmentSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIAMPolicyAssignmentSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment_name_isSet) {
        obj.insert(QString("AssignmentName"), ::OpenAPI::toJsonValue(m_assignment_name));
    }
    if (m_assignment_status.isSet()) {
        obj.insert(QString("AssignmentStatus"), ::OpenAPI::toJsonValue(m_assignment_status));
    }
    return obj;
}

QString OAIIAMPolicyAssignmentSummary::getAssignmentName() const {
    return m_assignment_name;
}
void OAIIAMPolicyAssignmentSummary::setAssignmentName(const QString &assignment_name) {
    m_assignment_name = assignment_name;
    m_assignment_name_isSet = true;
}

bool OAIIAMPolicyAssignmentSummary::is_assignment_name_Set() const{
    return m_assignment_name_isSet;
}

bool OAIIAMPolicyAssignmentSummary::is_assignment_name_Valid() const{
    return m_assignment_name_isValid;
}

OAIAssignmentStatus OAIIAMPolicyAssignmentSummary::getAssignmentStatus() const {
    return m_assignment_status;
}
void OAIIAMPolicyAssignmentSummary::setAssignmentStatus(const OAIAssignmentStatus &assignment_status) {
    m_assignment_status = assignment_status;
    m_assignment_status_isSet = true;
}

bool OAIIAMPolicyAssignmentSummary::is_assignment_status_Set() const{
    return m_assignment_status_isSet;
}

bool OAIIAMPolicyAssignmentSummary::is_assignment_status_Valid() const{
    return m_assignment_status_isValid;
}

bool OAIIAMPolicyAssignmentSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIAMPolicyAssignmentSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
