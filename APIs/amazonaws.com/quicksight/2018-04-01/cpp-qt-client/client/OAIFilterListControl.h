/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterListControl.h
 *
 * A control to display a list of buttons or boxes. This is used to select either a single value or multiple values.
 */

#ifndef OAIFilterListControl_H
#define OAIFilterListControl_H

#include <QJsonObject>

#include "OAIFilterListControl_CascadingControlConfiguration.h"
#include "OAIFilterListControl_DisplayOptions.h"
#include "OAIFilterListControl_SelectableValues.h"
#include "OAISheetControlListType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilterListControl_DisplayOptions;
class OAIFilterListControl_SelectableValues;
class OAIFilterListControl_CascadingControlConfiguration;

class OAIFilterListControl : public OAIObject {
public:
    OAIFilterListControl();
    OAIFilterListControl(QString json);
    ~OAIFilterListControl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterControlId() const;
    void setFilterControlId(const QString &filter_control_id);
    bool is_filter_control_id_Set() const;
    bool is_filter_control_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getSourceFilterId() const;
    void setSourceFilterId(const QString &source_filter_id);
    bool is_source_filter_id_Set() const;
    bool is_source_filter_id_Valid() const;

    OAIFilterListControl_DisplayOptions getDisplayOptions() const;
    void setDisplayOptions(const OAIFilterListControl_DisplayOptions &display_options);
    bool is_display_options_Set() const;
    bool is_display_options_Valid() const;

    OAISheetControlListType getType() const;
    void setType(const OAISheetControlListType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIFilterListControl_SelectableValues getSelectableValues() const;
    void setSelectableValues(const OAIFilterListControl_SelectableValues &selectable_values);
    bool is_selectable_values_Set() const;
    bool is_selectable_values_Valid() const;

    OAIFilterListControl_CascadingControlConfiguration getCascadingControlConfiguration() const;
    void setCascadingControlConfiguration(const OAIFilterListControl_CascadingControlConfiguration &cascading_control_configuration);
    bool is_cascading_control_configuration_Set() const;
    bool is_cascading_control_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_control_id;
    bool m_filter_control_id_isSet;
    bool m_filter_control_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_source_filter_id;
    bool m_source_filter_id_isSet;
    bool m_source_filter_id_isValid;

    OAIFilterListControl_DisplayOptions m_display_options;
    bool m_display_options_isSet;
    bool m_display_options_isValid;

    OAISheetControlListType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIFilterListControl_SelectableValues m_selectable_values;
    bool m_selectable_values_isSet;
    bool m_selectable_values_isValid;

    OAIFilterListControl_CascadingControlConfiguration m_cascading_control_configuration;
    bool m_cascading_control_configuration_isSet;
    bool m_cascading_control_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterListControl)

#endif // OAIFilterListControl_H
