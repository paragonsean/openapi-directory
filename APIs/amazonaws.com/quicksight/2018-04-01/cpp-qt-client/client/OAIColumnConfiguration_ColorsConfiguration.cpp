/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnConfiguration_ColorsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnConfiguration_ColorsConfiguration::OAIColumnConfiguration_ColorsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnConfiguration_ColorsConfiguration::OAIColumnConfiguration_ColorsConfiguration() {
    this->initializeModel();
}

OAIColumnConfiguration_ColorsConfiguration::~OAIColumnConfiguration_ColorsConfiguration() {}

void OAIColumnConfiguration_ColorsConfiguration::initializeModel() {

    m_custom_colors_isSet = false;
    m_custom_colors_isValid = false;
}

void OAIColumnConfiguration_ColorsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnConfiguration_ColorsConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_colors_isValid = ::OpenAPI::fromJsonValue(m_custom_colors, json[QString("CustomColors")]);
    m_custom_colors_isSet = !json[QString("CustomColors")].isNull() && m_custom_colors_isValid;
}

QString OAIColumnConfiguration_ColorsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnConfiguration_ColorsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_colors.isSet()) {
        obj.insert(QString("CustomColors"), ::OpenAPI::toJsonValue(m_custom_colors));
    }
    return obj;
}

QList OAIColumnConfiguration_ColorsConfiguration::getCustomColors() const {
    return m_custom_colors;
}
void OAIColumnConfiguration_ColorsConfiguration::setCustomColors(const QList &custom_colors) {
    m_custom_colors = custom_colors;
    m_custom_colors_isSet = true;
}

bool OAIColumnConfiguration_ColorsConfiguration::is_custom_colors_Set() const{
    return m_custom_colors_isSet;
}

bool OAIColumnConfiguration_ColorsConfiguration::is_custom_colors_Valid() const{
    return m_custom_colors_isValid;
}

bool OAIColumnConfiguration_ColorsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_colors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnConfiguration_ColorsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
