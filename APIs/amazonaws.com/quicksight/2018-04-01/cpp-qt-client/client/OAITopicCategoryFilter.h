/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopicCategoryFilter.h
 *
 * A structure that represents a category filter.
 */

#ifndef OAITopicCategoryFilter_H
#define OAITopicCategoryFilter_H

#include <QJsonObject>

#include "OAICategoryFilterFunction.h"
#include "OAICategoryFilterType.h"
#include "OAITopicCategoryFilter_Constant.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopicCategoryFilter_Constant;

class OAITopicCategoryFilter : public OAIObject {
public:
    OAITopicCategoryFilter();
    OAITopicCategoryFilter(QString json);
    ~OAITopicCategoryFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICategoryFilterFunction getCategoryFilterFunction() const;
    void setCategoryFilterFunction(const OAICategoryFilterFunction &category_filter_function);
    bool is_category_filter_function_Set() const;
    bool is_category_filter_function_Valid() const;

    OAICategoryFilterType getCategoryFilterType() const;
    void setCategoryFilterType(const OAICategoryFilterType &category_filter_type);
    bool is_category_filter_type_Set() const;
    bool is_category_filter_type_Valid() const;

    OAITopicCategoryFilter_Constant getConstant() const;
    void setConstant(const OAITopicCategoryFilter_Constant &constant);
    bool is_constant_Set() const;
    bool is_constant_Valid() const;

    bool getInverse() const;
    void setInverse(const bool &inverse);
    bool is_inverse_Set() const;
    bool is_inverse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICategoryFilterFunction m_category_filter_function;
    bool m_category_filter_function_isSet;
    bool m_category_filter_function_isValid;

    OAICategoryFilterType m_category_filter_type;
    bool m_category_filter_type_isSet;
    bool m_category_filter_type_isValid;

    OAITopicCategoryFilter_Constant m_constant;
    bool m_constant_isSet;
    bool m_constant_isValid;

    bool m_inverse;
    bool m_inverse_isSet;
    bool m_inverse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopicCategoryFilter)

#endif // OAITopicCategoryFilter_H
