/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogicalTable_Source.h
 *
 * 
 */

#ifndef OAILogicalTable_Source_H
#define OAILogicalTable_Source_H

#include <QJsonObject>

#include "OAILogicalTableSource_JoinInstruction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogicalTableSource_JoinInstruction;

class OAILogicalTable_Source : public OAIObject {
public:
    OAILogicalTable_Source();
    OAILogicalTable_Source(QString json);
    ~OAILogicalTable_Source() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogicalTableSource_JoinInstruction getJoinInstruction() const;
    void setJoinInstruction(const OAILogicalTableSource_JoinInstruction &join_instruction);
    bool is_join_instruction_Set() const;
    bool is_join_instruction_Valid() const;

    QString getPhysicalTableId() const;
    void setPhysicalTableId(const QString &physical_table_id);
    bool is_physical_table_id_Set() const;
    bool is_physical_table_id_Valid() const;

    QString getDataSetArn() const;
    void setDataSetArn(const QString &data_set_arn);
    bool is_data_set_arn_Set() const;
    bool is_data_set_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogicalTableSource_JoinInstruction m_join_instruction;
    bool m_join_instruction_isSet;
    bool m_join_instruction_isValid;

    QString m_physical_table_id;
    bool m_physical_table_id_isSet;
    bool m_physical_table_id_isValid;

    QString m_data_set_arn;
    bool m_data_set_arn_isSet;
    bool m_data_set_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogicalTable_Source)

#endif // OAILogicalTable_Source_H
