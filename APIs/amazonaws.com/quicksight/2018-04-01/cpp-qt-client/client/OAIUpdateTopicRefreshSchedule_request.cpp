/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTopicRefreshSchedule_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTopicRefreshSchedule_request::OAIUpdateTopicRefreshSchedule_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTopicRefreshSchedule_request::OAIUpdateTopicRefreshSchedule_request() {
    this->initializeModel();
}

OAIUpdateTopicRefreshSchedule_request::~OAIUpdateTopicRefreshSchedule_request() {}

void OAIUpdateTopicRefreshSchedule_request::initializeModel() {

    m_refresh_schedule_isSet = false;
    m_refresh_schedule_isValid = false;
}

void OAIUpdateTopicRefreshSchedule_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTopicRefreshSchedule_request::fromJsonObject(QJsonObject json) {

    m_refresh_schedule_isValid = ::OpenAPI::fromJsonValue(m_refresh_schedule, json[QString("RefreshSchedule")]);
    m_refresh_schedule_isSet = !json[QString("RefreshSchedule")].isNull() && m_refresh_schedule_isValid;
}

QString OAIUpdateTopicRefreshSchedule_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTopicRefreshSchedule_request::asJsonObject() const {
    QJsonObject obj;
    if (m_refresh_schedule.isSet()) {
        obj.insert(QString("RefreshSchedule"), ::OpenAPI::toJsonValue(m_refresh_schedule));
    }
    return obj;
}

OAICreateTopicRefreshSchedule_request_RefreshSchedule OAIUpdateTopicRefreshSchedule_request::getRefreshSchedule() const {
    return m_refresh_schedule;
}
void OAIUpdateTopicRefreshSchedule_request::setRefreshSchedule(const OAICreateTopicRefreshSchedule_request_RefreshSchedule &refresh_schedule) {
    m_refresh_schedule = refresh_schedule;
    m_refresh_schedule_isSet = true;
}

bool OAIUpdateTopicRefreshSchedule_request::is_refresh_schedule_Set() const{
    return m_refresh_schedule_isSet;
}

bool OAIUpdateTopicRefreshSchedule_request::is_refresh_schedule_Valid() const{
    return m_refresh_schedule_isValid;
}

bool OAIUpdateTopicRefreshSchedule_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refresh_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTopicRefreshSchedule_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_refresh_schedule_isValid && true;
}

} // namespace OpenAPI
