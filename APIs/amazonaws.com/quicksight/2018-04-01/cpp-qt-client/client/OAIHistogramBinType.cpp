/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistogramBinType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistogramBinType::OAIHistogramBinType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistogramBinType::OAIHistogramBinType() {
    this->initializeModel();
}

OAIHistogramBinType::~OAIHistogramBinType() {}

void OAIHistogramBinType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIHistogramBinType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIHistogramBinType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BIN_COUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHistogramBinType::COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BIN_WIDTH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHistogramBinType::WIDTH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIHistogramBinType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIHistogramBinType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIHistogramBinType::COUNT:
            val = "BIN_COUNT";
            break;
        case eOAIHistogramBinType::WIDTH:
            val = "BIN_WIDTH";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIHistogramBinType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIHistogramBinType::eOAIHistogramBinType OAIHistogramBinType::getValue() const {
    return m_value;
}

void OAIHistogramBinType::setValue(const OAIHistogramBinType::eOAIHistogramBinType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIHistogramBinType::isSet() const {
    
    return m_value_isSet;
}

bool OAIHistogramBinType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
