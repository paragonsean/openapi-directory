/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSetRefreshProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSetRefreshProperties::OAIDataSetRefreshProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSetRefreshProperties::OAIDataSetRefreshProperties() {
    this->initializeModel();
}

OAIDataSetRefreshProperties::~OAIDataSetRefreshProperties() {}

void OAIDataSetRefreshProperties::initializeModel() {

    m_refresh_configuration_isSet = false;
    m_refresh_configuration_isValid = false;
}

void OAIDataSetRefreshProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSetRefreshProperties::fromJsonObject(QJsonObject json) {

    m_refresh_configuration_isValid = ::OpenAPI::fromJsonValue(m_refresh_configuration, json[QString("RefreshConfiguration")]);
    m_refresh_configuration_isSet = !json[QString("RefreshConfiguration")].isNull() && m_refresh_configuration_isValid;
}

QString OAIDataSetRefreshProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSetRefreshProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_refresh_configuration.isSet()) {
        obj.insert(QString("RefreshConfiguration"), ::OpenAPI::toJsonValue(m_refresh_configuration));
    }
    return obj;
}

OAIPutDataSetRefreshProperties_request_DataSetRefreshProperties_RefreshConfiguration OAIDataSetRefreshProperties::getRefreshConfiguration() const {
    return m_refresh_configuration;
}
void OAIDataSetRefreshProperties::setRefreshConfiguration(const OAIPutDataSetRefreshProperties_request_DataSetRefreshProperties_RefreshConfiguration &refresh_configuration) {
    m_refresh_configuration = refresh_configuration;
    m_refresh_configuration_isSet = true;
}

bool OAIDataSetRefreshProperties::is_refresh_configuration_Set() const{
    return m_refresh_configuration_isSet;
}

bool OAIDataSetRefreshProperties::is_refresh_configuration_Valid() const{
    return m_refresh_configuration_isValid;
}

bool OAIDataSetRefreshProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refresh_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSetRefreshProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_refresh_configuration_isValid && true;
}

} // namespace OpenAPI
