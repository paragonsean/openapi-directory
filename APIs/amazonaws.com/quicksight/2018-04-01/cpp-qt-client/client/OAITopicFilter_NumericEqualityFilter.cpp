/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopicFilter_NumericEqualityFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopicFilter_NumericEqualityFilter::OAITopicFilter_NumericEqualityFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopicFilter_NumericEqualityFilter::OAITopicFilter_NumericEqualityFilter() {
    this->initializeModel();
}

OAITopicFilter_NumericEqualityFilter::~OAITopicFilter_NumericEqualityFilter() {}

void OAITopicFilter_NumericEqualityFilter::initializeModel() {

    m_constant_isSet = false;
    m_constant_isValid = false;

    m_aggregation_isSet = false;
    m_aggregation_isValid = false;
}

void OAITopicFilter_NumericEqualityFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopicFilter_NumericEqualityFilter::fromJsonObject(QJsonObject json) {

    m_constant_isValid = ::OpenAPI::fromJsonValue(m_constant, json[QString("Constant")]);
    m_constant_isSet = !json[QString("Constant")].isNull() && m_constant_isValid;

    m_aggregation_isValid = ::OpenAPI::fromJsonValue(m_aggregation, json[QString("Aggregation")]);
    m_aggregation_isSet = !json[QString("Aggregation")].isNull() && m_aggregation_isValid;
}

QString OAITopicFilter_NumericEqualityFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopicFilter_NumericEqualityFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_constant.isSet()) {
        obj.insert(QString("Constant"), ::OpenAPI::toJsonValue(m_constant));
    }
    if (m_aggregation.isSet()) {
        obj.insert(QString("Aggregation"), ::OpenAPI::toJsonValue(m_aggregation));
    }
    return obj;
}

OAITopicNumericEqualityFilter_Constant OAITopicFilter_NumericEqualityFilter::getConstant() const {
    return m_constant;
}
void OAITopicFilter_NumericEqualityFilter::setConstant(const OAITopicNumericEqualityFilter_Constant &constant) {
    m_constant = constant;
    m_constant_isSet = true;
}

bool OAITopicFilter_NumericEqualityFilter::is_constant_Set() const{
    return m_constant_isSet;
}

bool OAITopicFilter_NumericEqualityFilter::is_constant_Valid() const{
    return m_constant_isValid;
}

OAINamedFilterAggType OAITopicFilter_NumericEqualityFilter::getAggregation() const {
    return m_aggregation;
}
void OAITopicFilter_NumericEqualityFilter::setAggregation(const OAINamedFilterAggType &aggregation) {
    m_aggregation = aggregation;
    m_aggregation_isSet = true;
}

bool OAITopicFilter_NumericEqualityFilter::is_aggregation_Set() const{
    return m_aggregation_isSet;
}

bool OAITopicFilter_NumericEqualityFilter::is_aggregation_Valid() const{
    return m_aggregation_isValid;
}

bool OAITopicFilter_NumericEqualityFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constant.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopicFilter_NumericEqualityFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
