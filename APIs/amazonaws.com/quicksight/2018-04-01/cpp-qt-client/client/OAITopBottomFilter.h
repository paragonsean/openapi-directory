/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopBottomFilter.h
 *
 * A &lt;code&gt;TopBottomFilter&lt;/code&gt; filters values that are at the top or the bottom.
 */

#ifndef OAITopBottomFilter_H
#define OAITopBottomFilter_H

#include <QJsonObject>

#include "OAICategoryDrillDownFilter_Column.h"
#include "OAITimeGranularity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryDrillDownFilter_Column;

class OAITopBottomFilter : public OAIObject {
public:
    OAITopBottomFilter();
    OAITopBottomFilter(QString json);
    ~OAITopBottomFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterId() const;
    void setFilterId(const QString &filter_id);
    bool is_filter_id_Set() const;
    bool is_filter_id_Valid() const;

    OAICategoryDrillDownFilter_Column getColumn() const;
    void setColumn(const OAICategoryDrillDownFilter_Column &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QList getAggregationSortConfigurations() const;
    void setAggregationSortConfigurations(const QList &aggregation_sort_configurations);
    bool is_aggregation_sort_configurations_Set() const;
    bool is_aggregation_sort_configurations_Valid() const;

    OAITimeGranularity getTimeGranularity() const;
    void setTimeGranularity(const OAITimeGranularity &time_granularity);
    bool is_time_granularity_Set() const;
    bool is_time_granularity_Valid() const;

    QString getParameterName() const;
    void setParameterName(const QString &parameter_name);
    bool is_parameter_name_Set() const;
    bool is_parameter_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_id;
    bool m_filter_id_isSet;
    bool m_filter_id_isValid;

    OAICategoryDrillDownFilter_Column m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QList m_aggregation_sort_configurations;
    bool m_aggregation_sort_configurations_isSet;
    bool m_aggregation_sort_configurations_isValid;

    OAITimeGranularity m_time_granularity;
    bool m_time_granularity_isSet;
    bool m_time_granularity_isValid;

    QString m_parameter_name;
    bool m_parameter_name_isSet;
    bool m_parameter_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopBottomFilter)

#endif // OAITopBottomFilter_H
