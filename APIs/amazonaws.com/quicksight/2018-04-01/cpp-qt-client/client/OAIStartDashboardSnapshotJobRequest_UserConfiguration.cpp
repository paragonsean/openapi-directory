/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartDashboardSnapshotJobRequest_UserConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartDashboardSnapshotJobRequest_UserConfiguration::OAIStartDashboardSnapshotJobRequest_UserConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartDashboardSnapshotJobRequest_UserConfiguration::OAIStartDashboardSnapshotJobRequest_UserConfiguration() {
    this->initializeModel();
}

OAIStartDashboardSnapshotJobRequest_UserConfiguration::~OAIStartDashboardSnapshotJobRequest_UserConfiguration() {}

void OAIStartDashboardSnapshotJobRequest_UserConfiguration::initializeModel() {

    m_anonymous_users_isSet = false;
    m_anonymous_users_isValid = false;
}

void OAIStartDashboardSnapshotJobRequest_UserConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartDashboardSnapshotJobRequest_UserConfiguration::fromJsonObject(QJsonObject json) {

    m_anonymous_users_isValid = ::OpenAPI::fromJsonValue(m_anonymous_users, json[QString("AnonymousUsers")]);
    m_anonymous_users_isSet = !json[QString("AnonymousUsers")].isNull() && m_anonymous_users_isValid;
}

QString OAIStartDashboardSnapshotJobRequest_UserConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartDashboardSnapshotJobRequest_UserConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_anonymous_users.isSet()) {
        obj.insert(QString("AnonymousUsers"), ::OpenAPI::toJsonValue(m_anonymous_users));
    }
    return obj;
}

QList OAIStartDashboardSnapshotJobRequest_UserConfiguration::getAnonymousUsers() const {
    return m_anonymous_users;
}
void OAIStartDashboardSnapshotJobRequest_UserConfiguration::setAnonymousUsers(const QList &anonymous_users) {
    m_anonymous_users = anonymous_users;
    m_anonymous_users_isSet = true;
}

bool OAIStartDashboardSnapshotJobRequest_UserConfiguration::is_anonymous_users_Set() const{
    return m_anonymous_users_isSet;
}

bool OAIStartDashboardSnapshotJobRequest_UserConfiguration::is_anonymous_users_Valid() const{
    return m_anonymous_users_isValid;
}

bool OAIStartDashboardSnapshotJobRequest_UserConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anonymous_users.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartDashboardSnapshotJobRequest_UserConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
