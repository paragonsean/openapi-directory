/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefreshFrequency_RefreshOnDay.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefreshFrequency_RefreshOnDay::OAIRefreshFrequency_RefreshOnDay(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefreshFrequency_RefreshOnDay::OAIRefreshFrequency_RefreshOnDay() {
    this->initializeModel();
}

OAIRefreshFrequency_RefreshOnDay::~OAIRefreshFrequency_RefreshOnDay() {}

void OAIRefreshFrequency_RefreshOnDay::initializeModel() {

    m_day_of_week_isSet = false;
    m_day_of_week_isValid = false;

    m_day_of_month_isSet = false;
    m_day_of_month_isValid = false;
}

void OAIRefreshFrequency_RefreshOnDay::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefreshFrequency_RefreshOnDay::fromJsonObject(QJsonObject json) {

    m_day_of_week_isValid = ::OpenAPI::fromJsonValue(m_day_of_week, json[QString("DayOfWeek")]);
    m_day_of_week_isSet = !json[QString("DayOfWeek")].isNull() && m_day_of_week_isValid;

    m_day_of_month_isValid = ::OpenAPI::fromJsonValue(m_day_of_month, json[QString("DayOfMonth")]);
    m_day_of_month_isSet = !json[QString("DayOfMonth")].isNull() && m_day_of_month_isValid;
}

QString OAIRefreshFrequency_RefreshOnDay::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefreshFrequency_RefreshOnDay::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_week.isSet()) {
        obj.insert(QString("DayOfWeek"), ::OpenAPI::toJsonValue(m_day_of_week));
    }
    if (m_day_of_month_isSet) {
        obj.insert(QString("DayOfMonth"), ::OpenAPI::toJsonValue(m_day_of_month));
    }
    return obj;
}

OAIDayOfWeek OAIRefreshFrequency_RefreshOnDay::getDayOfWeek() const {
    return m_day_of_week;
}
void OAIRefreshFrequency_RefreshOnDay::setDayOfWeek(const OAIDayOfWeek &day_of_week) {
    m_day_of_week = day_of_week;
    m_day_of_week_isSet = true;
}

bool OAIRefreshFrequency_RefreshOnDay::is_day_of_week_Set() const{
    return m_day_of_week_isSet;
}

bool OAIRefreshFrequency_RefreshOnDay::is_day_of_week_Valid() const{
    return m_day_of_week_isValid;
}

QString OAIRefreshFrequency_RefreshOnDay::getDayOfMonth() const {
    return m_day_of_month;
}
void OAIRefreshFrequency_RefreshOnDay::setDayOfMonth(const QString &day_of_month) {
    m_day_of_month = day_of_month;
    m_day_of_month_isSet = true;
}

bool OAIRefreshFrequency_RefreshOnDay::is_day_of_month_Set() const{
    return m_day_of_month_isSet;
}

bool OAIRefreshFrequency_RefreshOnDay::is_day_of_month_Valid() const{
    return m_day_of_month_isValid;
}

bool OAIRefreshFrequency_RefreshOnDay::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_week.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_of_month_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefreshFrequency_RefreshOnDay::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
