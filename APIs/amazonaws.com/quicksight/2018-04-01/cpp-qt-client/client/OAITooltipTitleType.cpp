/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITooltipTitleType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITooltipTitleType::OAITooltipTitleType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITooltipTitleType::OAITooltipTitleType() {
    this->initializeModel();
}

OAITooltipTitleType::~OAITooltipTitleType() {}

void OAITooltipTitleType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITooltipTitleType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITooltipTitleType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITooltipTitleType::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRIMARY_VALUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITooltipTitleType::PRIMARY_VALUE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITooltipTitleType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITooltipTitleType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITooltipTitleType::NONE:
            val = "NONE";
            break;
        case eOAITooltipTitleType::PRIMARY_VALUE:
            val = "PRIMARY_VALUE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITooltipTitleType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITooltipTitleType::eOAITooltipTitleType OAITooltipTitleType::getValue() const {
    return m_value;
}

void OAITooltipTitleType::setValue(const OAITooltipTitleType::eOAITooltipTitleType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITooltipTitleType::isSet() const {
    
    return m_value_isSet;
}

bool OAITooltipTitleType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
