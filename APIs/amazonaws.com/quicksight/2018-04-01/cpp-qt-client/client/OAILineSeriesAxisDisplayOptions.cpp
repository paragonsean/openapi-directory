/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineSeriesAxisDisplayOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineSeriesAxisDisplayOptions::OAILineSeriesAxisDisplayOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineSeriesAxisDisplayOptions::OAILineSeriesAxisDisplayOptions() {
    this->initializeModel();
}

OAILineSeriesAxisDisplayOptions::~OAILineSeriesAxisDisplayOptions() {}

void OAILineSeriesAxisDisplayOptions::initializeModel() {

    m_axis_options_isSet = false;
    m_axis_options_isValid = false;

    m_missing_data_configurations_isSet = false;
    m_missing_data_configurations_isValid = false;
}

void OAILineSeriesAxisDisplayOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineSeriesAxisDisplayOptions::fromJsonObject(QJsonObject json) {

    m_axis_options_isValid = ::OpenAPI::fromJsonValue(m_axis_options, json[QString("AxisOptions")]);
    m_axis_options_isSet = !json[QString("AxisOptions")].isNull() && m_axis_options_isValid;

    m_missing_data_configurations_isValid = ::OpenAPI::fromJsonValue(m_missing_data_configurations, json[QString("MissingDataConfigurations")]);
    m_missing_data_configurations_isSet = !json[QString("MissingDataConfigurations")].isNull() && m_missing_data_configurations_isValid;
}

QString OAILineSeriesAxisDisplayOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineSeriesAxisDisplayOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_axis_options.isSet()) {
        obj.insert(QString("AxisOptions"), ::OpenAPI::toJsonValue(m_axis_options));
    }
    if (m_missing_data_configurations.isSet()) {
        obj.insert(QString("MissingDataConfigurations"), ::OpenAPI::toJsonValue(m_missing_data_configurations));
    }
    return obj;
}

OAILineSeriesAxisDisplayOptions_AxisOptions OAILineSeriesAxisDisplayOptions::getAxisOptions() const {
    return m_axis_options;
}
void OAILineSeriesAxisDisplayOptions::setAxisOptions(const OAILineSeriesAxisDisplayOptions_AxisOptions &axis_options) {
    m_axis_options = axis_options;
    m_axis_options_isSet = true;
}

bool OAILineSeriesAxisDisplayOptions::is_axis_options_Set() const{
    return m_axis_options_isSet;
}

bool OAILineSeriesAxisDisplayOptions::is_axis_options_Valid() const{
    return m_axis_options_isValid;
}

QList OAILineSeriesAxisDisplayOptions::getMissingDataConfigurations() const {
    return m_missing_data_configurations;
}
void OAILineSeriesAxisDisplayOptions::setMissingDataConfigurations(const QList &missing_data_configurations) {
    m_missing_data_configurations = missing_data_configurations;
    m_missing_data_configurations_isSet = true;
}

bool OAILineSeriesAxisDisplayOptions::is_missing_data_configurations_Set() const{
    return m_missing_data_configurations_isSet;
}

bool OAILineSeriesAxisDisplayOptions::is_missing_data_configurations_Valid() const{
    return m_missing_data_configurations_isValid;
}

bool OAILineSeriesAxisDisplayOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_axis_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_missing_data_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineSeriesAxisDisplayOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
