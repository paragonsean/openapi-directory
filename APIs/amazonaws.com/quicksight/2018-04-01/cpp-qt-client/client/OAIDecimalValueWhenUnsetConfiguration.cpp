/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalValueWhenUnsetConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalValueWhenUnsetConfiguration::OAIDecimalValueWhenUnsetConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalValueWhenUnsetConfiguration::OAIDecimalValueWhenUnsetConfiguration() {
    this->initializeModel();
}

OAIDecimalValueWhenUnsetConfiguration::~OAIDecimalValueWhenUnsetConfiguration() {}

void OAIDecimalValueWhenUnsetConfiguration::initializeModel() {

    m_value_when_unset_option_isSet = false;
    m_value_when_unset_option_isValid = false;

    m_custom_value_isSet = false;
    m_custom_value_isValid = false;
}

void OAIDecimalValueWhenUnsetConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalValueWhenUnsetConfiguration::fromJsonObject(QJsonObject json) {

    m_value_when_unset_option_isValid = ::OpenAPI::fromJsonValue(m_value_when_unset_option, json[QString("ValueWhenUnsetOption")]);
    m_value_when_unset_option_isSet = !json[QString("ValueWhenUnsetOption")].isNull() && m_value_when_unset_option_isValid;

    m_custom_value_isValid = ::OpenAPI::fromJsonValue(m_custom_value, json[QString("CustomValue")]);
    m_custom_value_isSet = !json[QString("CustomValue")].isNull() && m_custom_value_isValid;
}

QString OAIDecimalValueWhenUnsetConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalValueWhenUnsetConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_value_when_unset_option.isSet()) {
        obj.insert(QString("ValueWhenUnsetOption"), ::OpenAPI::toJsonValue(m_value_when_unset_option));
    }
    if (m_custom_value_isSet) {
        obj.insert(QString("CustomValue"), ::OpenAPI::toJsonValue(m_custom_value));
    }
    return obj;
}

OAIValueWhenUnsetOption OAIDecimalValueWhenUnsetConfiguration::getValueWhenUnsetOption() const {
    return m_value_when_unset_option;
}
void OAIDecimalValueWhenUnsetConfiguration::setValueWhenUnsetOption(const OAIValueWhenUnsetOption &value_when_unset_option) {
    m_value_when_unset_option = value_when_unset_option;
    m_value_when_unset_option_isSet = true;
}

bool OAIDecimalValueWhenUnsetConfiguration::is_value_when_unset_option_Set() const{
    return m_value_when_unset_option_isSet;
}

bool OAIDecimalValueWhenUnsetConfiguration::is_value_when_unset_option_Valid() const{
    return m_value_when_unset_option_isValid;
}

double OAIDecimalValueWhenUnsetConfiguration::getCustomValue() const {
    return m_custom_value;
}
void OAIDecimalValueWhenUnsetConfiguration::setCustomValue(const double &custom_value) {
    m_custom_value = custom_value;
    m_custom_value_isSet = true;
}

bool OAIDecimalValueWhenUnsetConfiguration::is_custom_value_Set() const{
    return m_custom_value_isSet;
}

bool OAIDecimalValueWhenUnsetConfiguration::is_custom_value_Valid() const{
    return m_custom_value_isValid;
}

bool OAIDecimalValueWhenUnsetConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_when_unset_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalValueWhenUnsetConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
