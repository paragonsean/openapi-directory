/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption() {
    this->initializeModel();
}

OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::~OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption() {}

void OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::initializeModel() {

    m_availability_status_isSet = false;
    m_availability_status_isValid = false;
}

void OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::fromJsonObject(QJsonObject json) {

    m_availability_status_isValid = ::OpenAPI::fromJsonValue(m_availability_status, json[QString("AvailabilityStatus")]);
    m_availability_status_isSet = !json[QString("AvailabilityStatus")].isNull() && m_availability_status_isValid;
}

QString OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_status.isSet()) {
        obj.insert(QString("AvailabilityStatus"), ::OpenAPI::toJsonValue(m_availability_status));
    }
    return obj;
}

OAIDashboardBehavior OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::getAvailabilityStatus() const {
    return m_availability_status;
}
void OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::setAvailabilityStatus(const OAIDashboardBehavior &availability_status) {
    m_availability_status = availability_status;
    m_availability_status_isSet = true;
}

bool OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::is_availability_status_Set() const{
    return m_availability_status_isSet;
}

bool OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::is_availability_status_Valid() const{
    return m_availability_status_isValid;
}

bool OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDashboard_request_DashboardPublishOptions_ExportToCSVOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
