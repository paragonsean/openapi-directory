/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterControl.h
 *
 * &lt;p&gt;The control of a filter that is used to interact with a dashboard or an analysis.&lt;/p&gt; &lt;p&gt;This is a union type structure. For this structure to be valid, only one of the attributes can be defined.&lt;/p&gt;
 */

#ifndef OAIFilterControl_H
#define OAIFilterControl_H

#include <QJsonObject>

#include "OAIFilterControl_DateTimePicker.h"
#include "OAIFilterControl_Dropdown.h"
#include "OAIFilterControl_List.h"
#include "OAIFilterControl_RelativeDateTime.h"
#include "OAIFilterControl_Slider.h"
#include "OAIFilterControl_TextArea.h"
#include "OAIFilterControl_TextField.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilterControl_DateTimePicker;
class OAIFilterControl_List;
class OAIFilterControl_Dropdown;
class OAIFilterControl_TextField;
class OAIFilterControl_TextArea;
class OAIFilterControl_Slider;
class OAIFilterControl_RelativeDateTime;

class OAIFilterControl : public OAIObject {
public:
    OAIFilterControl();
    OAIFilterControl(QString json);
    ~OAIFilterControl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFilterControl_DateTimePicker getDateTimePicker() const;
    void setDateTimePicker(const OAIFilterControl_DateTimePicker &date_time_picker);
    bool is_date_time_picker_Set() const;
    bool is_date_time_picker_Valid() const;

    OAIFilterControl_List getList() const;
    void setList(const OAIFilterControl_List &list);
    bool is_list_Set() const;
    bool is_list_Valid() const;

    OAIFilterControl_Dropdown getDropdown() const;
    void setDropdown(const OAIFilterControl_Dropdown &dropdown);
    bool is_dropdown_Set() const;
    bool is_dropdown_Valid() const;

    OAIFilterControl_TextField getTextField() const;
    void setTextField(const OAIFilterControl_TextField &text_field);
    bool is_text_field_Set() const;
    bool is_text_field_Valid() const;

    OAIFilterControl_TextArea getTextArea() const;
    void setTextArea(const OAIFilterControl_TextArea &text_area);
    bool is_text_area_Set() const;
    bool is_text_area_Valid() const;

    OAIFilterControl_Slider getSlider() const;
    void setSlider(const OAIFilterControl_Slider &slider);
    bool is_slider_Set() const;
    bool is_slider_Valid() const;

    OAIFilterControl_RelativeDateTime getRelativeDateTime() const;
    void setRelativeDateTime(const OAIFilterControl_RelativeDateTime &relative_date_time);
    bool is_relative_date_time_Set() const;
    bool is_relative_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFilterControl_DateTimePicker m_date_time_picker;
    bool m_date_time_picker_isSet;
    bool m_date_time_picker_isValid;

    OAIFilterControl_List m_list;
    bool m_list_isSet;
    bool m_list_isValid;

    OAIFilterControl_Dropdown m_dropdown;
    bool m_dropdown_isSet;
    bool m_dropdown_isValid;

    OAIFilterControl_TextField m_text_field;
    bool m_text_field_isSet;
    bool m_text_field_isValid;

    OAIFilterControl_TextArea m_text_area;
    bool m_text_area_isSet;
    bool m_text_area_isValid;

    OAIFilterControl_Slider m_slider;
    bool m_slider_isSet;
    bool m_slider_isValid;

    OAIFilterControl_RelativeDateTime m_relative_date_time;
    bool m_relative_date_time_isSet;
    bool m_relative_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterControl)

#endif // OAIFilterControl_H
