/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableInlineVisualization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableInlineVisualization::OAITableInlineVisualization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableInlineVisualization::OAITableInlineVisualization() {
    this->initializeModel();
}

OAITableInlineVisualization::~OAITableInlineVisualization() {}

void OAITableInlineVisualization::initializeModel() {

    m_data_bars_isSet = false;
    m_data_bars_isValid = false;
}

void OAITableInlineVisualization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableInlineVisualization::fromJsonObject(QJsonObject json) {

    m_data_bars_isValid = ::OpenAPI::fromJsonValue(m_data_bars, json[QString("DataBars")]);
    m_data_bars_isSet = !json[QString("DataBars")].isNull() && m_data_bars_isValid;
}

QString OAITableInlineVisualization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableInlineVisualization::asJsonObject() const {
    QJsonObject obj;
    if (m_data_bars.isSet()) {
        obj.insert(QString("DataBars"), ::OpenAPI::toJsonValue(m_data_bars));
    }
    return obj;
}

OAITableInlineVisualization_DataBars OAITableInlineVisualization::getDataBars() const {
    return m_data_bars;
}
void OAITableInlineVisualization::setDataBars(const OAITableInlineVisualization_DataBars &data_bars) {
    m_data_bars = data_bars;
    m_data_bars_isSet = true;
}

bool OAITableInlineVisualization::is_data_bars_Set() const{
    return m_data_bars_isSet;
}

bool OAITableInlineVisualization::is_data_bars_Valid() const{
    return m_data_bars_isValid;
}

bool OAITableInlineVisualization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_bars.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableInlineVisualization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
