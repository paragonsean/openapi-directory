/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheetControlInfoIconLabelOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheetControlInfoIconLabelOptions::OAISheetControlInfoIconLabelOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheetControlInfoIconLabelOptions::OAISheetControlInfoIconLabelOptions() {
    this->initializeModel();
}

OAISheetControlInfoIconLabelOptions::~OAISheetControlInfoIconLabelOptions() {}

void OAISheetControlInfoIconLabelOptions::initializeModel() {

    m_visibility_isSet = false;
    m_visibility_isValid = false;

    m_info_icon_text_isSet = false;
    m_info_icon_text_isValid = false;
}

void OAISheetControlInfoIconLabelOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISheetControlInfoIconLabelOptions::fromJsonObject(QJsonObject json) {

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("Visibility")]);
    m_visibility_isSet = !json[QString("Visibility")].isNull() && m_visibility_isValid;

    m_info_icon_text_isValid = ::OpenAPI::fromJsonValue(m_info_icon_text, json[QString("InfoIconText")]);
    m_info_icon_text_isSet = !json[QString("InfoIconText")].isNull() && m_info_icon_text_isValid;
}

QString OAISheetControlInfoIconLabelOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISheetControlInfoIconLabelOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_visibility.isSet()) {
        obj.insert(QString("Visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    if (m_info_icon_text_isSet) {
        obj.insert(QString("InfoIconText"), ::OpenAPI::toJsonValue(m_info_icon_text));
    }
    return obj;
}

OAIVisibility OAISheetControlInfoIconLabelOptions::getVisibility() const {
    return m_visibility;
}
void OAISheetControlInfoIconLabelOptions::setVisibility(const OAIVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAISheetControlInfoIconLabelOptions::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAISheetControlInfoIconLabelOptions::is_visibility_Valid() const{
    return m_visibility_isValid;
}

QString OAISheetControlInfoIconLabelOptions::getInfoIconText() const {
    return m_info_icon_text;
}
void OAISheetControlInfoIconLabelOptions::setInfoIconText(const QString &info_icon_text) {
    m_info_icon_text = info_icon_text;
    m_info_icon_text_isSet = true;
}

bool OAISheetControlInfoIconLabelOptions::is_info_icon_text_Set() const{
    return m_info_icon_text_isSet;
}

bool OAISheetControlInfoIconLabelOptions::is_info_icon_text_Valid() const{
    return m_info_icon_text_isValid;
}

bool OAISheetControlInfoIconLabelOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_info_icon_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISheetControlInfoIconLabelOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
