/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateTemplate_request_SourceEntity.h
 *
 * The source entity of the template.
 */

#ifndef OAIUpdateTemplate_request_SourceEntity_H
#define OAIUpdateTemplate_request_SourceEntity_H

#include <QJsonObject>

#include "OAIUpdateTemplate_request_SourceEntity_SourceAnalysis.h"
#include "OAIUpdateTemplate_request_SourceEntity_SourceTemplate.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateTemplate_request_SourceEntity_SourceAnalysis;
class OAIUpdateTemplate_request_SourceEntity_SourceTemplate;

class OAIUpdateTemplate_request_SourceEntity : public OAIObject {
public:
    OAIUpdateTemplate_request_SourceEntity();
    OAIUpdateTemplate_request_SourceEntity(QString json);
    ~OAIUpdateTemplate_request_SourceEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateTemplate_request_SourceEntity_SourceAnalysis getSourceAnalysis() const;
    void setSourceAnalysis(const OAIUpdateTemplate_request_SourceEntity_SourceAnalysis &source_analysis);
    bool is_source_analysis_Set() const;
    bool is_source_analysis_Valid() const;

    OAIUpdateTemplate_request_SourceEntity_SourceTemplate getSourceTemplate() const;
    void setSourceTemplate(const OAIUpdateTemplate_request_SourceEntity_SourceTemplate &source_template);
    bool is_source_template_Set() const;
    bool is_source_template_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateTemplate_request_SourceEntity_SourceAnalysis m_source_analysis;
    bool m_source_analysis_isSet;
    bool m_source_analysis_isValid;

    OAIUpdateTemplate_request_SourceEntity_SourceTemplate m_source_template;
    bool m_source_template_isSet;
    bool m_source_template_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateTemplate_request_SourceEntity)

#endif // OAIUpdateTemplate_request_SourceEntity_H
