/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAssetBundleExportJobsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAssetBundleExportJobsResponse::OAIListAssetBundleExportJobsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAssetBundleExportJobsResponse::OAIListAssetBundleExportJobsResponse() {
    this->initializeModel();
}

OAIListAssetBundleExportJobsResponse::~OAIListAssetBundleExportJobsResponse() {}

void OAIListAssetBundleExportJobsResponse::initializeModel() {

    m_asset_bundle_export_job_summary_list_isSet = false;
    m_asset_bundle_export_job_summary_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIListAssetBundleExportJobsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAssetBundleExportJobsResponse::fromJsonObject(QJsonObject json) {

    m_asset_bundle_export_job_summary_list_isValid = ::OpenAPI::fromJsonValue(m_asset_bundle_export_job_summary_list, json[QString("AssetBundleExportJobSummaryList")]);
    m_asset_bundle_export_job_summary_list_isSet = !json[QString("AssetBundleExportJobSummaryList")].isNull() && m_asset_bundle_export_job_summary_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIListAssetBundleExportJobsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAssetBundleExportJobsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_bundle_export_job_summary_list.isSet()) {
        obj.insert(QString("AssetBundleExportJobSummaryList"), ::OpenAPI::toJsonValue(m_asset_bundle_export_job_summary_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList OAIListAssetBundleExportJobsResponse::getAssetBundleExportJobSummaryList() const {
    return m_asset_bundle_export_job_summary_list;
}
void OAIListAssetBundleExportJobsResponse::setAssetBundleExportJobSummaryList(const QList &asset_bundle_export_job_summary_list) {
    m_asset_bundle_export_job_summary_list = asset_bundle_export_job_summary_list;
    m_asset_bundle_export_job_summary_list_isSet = true;
}

bool OAIListAssetBundleExportJobsResponse::is_asset_bundle_export_job_summary_list_Set() const{
    return m_asset_bundle_export_job_summary_list_isSet;
}

bool OAIListAssetBundleExportJobsResponse::is_asset_bundle_export_job_summary_list_Valid() const{
    return m_asset_bundle_export_job_summary_list_isValid;
}

QString OAIListAssetBundleExportJobsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAssetBundleExportJobsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAssetBundleExportJobsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAssetBundleExportJobsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QString OAIListAssetBundleExportJobsResponse::getRequestId() const {
    return m_request_id;
}
void OAIListAssetBundleExportJobsResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIListAssetBundleExportJobsResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIListAssetBundleExportJobsResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

qint32 OAIListAssetBundleExportJobsResponse::getStatus() const {
    return m_status;
}
void OAIListAssetBundleExportJobsResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIListAssetBundleExportJobsResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIListAssetBundleExportJobsResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIListAssetBundleExportJobsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_bundle_export_job_summary_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAssetBundleExportJobsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
