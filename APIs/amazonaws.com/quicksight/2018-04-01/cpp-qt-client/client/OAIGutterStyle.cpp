/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGutterStyle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGutterStyle::OAIGutterStyle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGutterStyle::OAIGutterStyle() {
    this->initializeModel();
}

OAIGutterStyle::~OAIGutterStyle() {}

void OAIGutterStyle::initializeModel() {

    m_show_isSet = false;
    m_show_isValid = false;
}

void OAIGutterStyle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGutterStyle::fromJsonObject(QJsonObject json) {

    m_show_isValid = ::OpenAPI::fromJsonValue(m_show, json[QString("Show")]);
    m_show_isSet = !json[QString("Show")].isNull() && m_show_isValid;
}

QString OAIGutterStyle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGutterStyle::asJsonObject() const {
    QJsonObject obj;
    if (m_show_isSet) {
        obj.insert(QString("Show"), ::OpenAPI::toJsonValue(m_show));
    }
    return obj;
}

bool OAIGutterStyle::getShow() const {
    return m_show;
}
void OAIGutterStyle::setShow(const bool &show) {
    m_show = show;
    m_show_isSet = true;
}

bool OAIGutterStyle::is_show_Set() const{
    return m_show_isSet;
}

bool OAIGutterStyle::is_show_Valid() const{
    return m_show_isValid;
}

bool OAIGutterStyle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_show_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGutterStyle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
