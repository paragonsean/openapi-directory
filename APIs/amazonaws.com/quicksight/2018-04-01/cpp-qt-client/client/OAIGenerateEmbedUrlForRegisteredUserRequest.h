/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGenerateEmbedUrlForRegisteredUserRequest.h
 *
 * 
 */

#ifndef OAIGenerateEmbedUrlForRegisteredUserRequest_H
#define OAIGenerateEmbedUrlForRegisteredUserRequest_H

#include <QJsonObject>

#include "OAIGenerateEmbedUrlForRegisteredUserRequest_ExperienceConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGenerateEmbedUrlForRegisteredUserRequest_ExperienceConfiguration;

class OAIGenerateEmbedUrlForRegisteredUserRequest : public OAIObject {
public:
    OAIGenerateEmbedUrlForRegisteredUserRequest();
    OAIGenerateEmbedUrlForRegisteredUserRequest(QString json);
    ~OAIGenerateEmbedUrlForRegisteredUserRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getSessionLifetimeInMinutes() const;
    void setSessionLifetimeInMinutes(const qint32 &session_lifetime_in_minutes);
    bool is_session_lifetime_in_minutes_Set() const;
    bool is_session_lifetime_in_minutes_Valid() const;

    QString getUserArn() const;
    void setUserArn(const QString &user_arn);
    bool is_user_arn_Set() const;
    bool is_user_arn_Valid() const;

    OAIGenerateEmbedUrlForRegisteredUserRequest_ExperienceConfiguration getExperienceConfiguration() const;
    void setExperienceConfiguration(const OAIGenerateEmbedUrlForRegisteredUserRequest_ExperienceConfiguration &experience_configuration);
    bool is_experience_configuration_Set() const;
    bool is_experience_configuration_Valid() const;

    QList getAllowedDomains() const;
    void setAllowedDomains(const QList &allowed_domains);
    bool is_allowed_domains_Set() const;
    bool is_allowed_domains_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_session_lifetime_in_minutes;
    bool m_session_lifetime_in_minutes_isSet;
    bool m_session_lifetime_in_minutes_isValid;

    QString m_user_arn;
    bool m_user_arn_isSet;
    bool m_user_arn_isValid;

    OAIGenerateEmbedUrlForRegisteredUserRequest_ExperienceConfiguration m_experience_configuration;
    bool m_experience_configuration_isSet;
    bool m_experience_configuration_isValid;

    QList m_allowed_domains;
    bool m_allowed_domains_isSet;
    bool m_allowed_domains_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGenerateEmbedUrlForRegisteredUserRequest)

#endif // OAIGenerateEmbedUrlForRegisteredUserRequest_H
