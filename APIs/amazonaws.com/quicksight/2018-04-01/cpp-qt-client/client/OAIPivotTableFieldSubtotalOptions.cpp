/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPivotTableFieldSubtotalOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPivotTableFieldSubtotalOptions::OAIPivotTableFieldSubtotalOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPivotTableFieldSubtotalOptions::OAIPivotTableFieldSubtotalOptions() {
    this->initializeModel();
}

OAIPivotTableFieldSubtotalOptions::~OAIPivotTableFieldSubtotalOptions() {}

void OAIPivotTableFieldSubtotalOptions::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;
}

void OAIPivotTableFieldSubtotalOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPivotTableFieldSubtotalOptions::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldId")]);
    m_field_id_isSet = !json[QString("FieldId")].isNull() && m_field_id_isValid;
}

QString OAIPivotTableFieldSubtotalOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPivotTableFieldSubtotalOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id_isSet) {
        obj.insert(QString("FieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    return obj;
}

QString OAIPivotTableFieldSubtotalOptions::getFieldId() const {
    return m_field_id;
}
void OAIPivotTableFieldSubtotalOptions::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIPivotTableFieldSubtotalOptions::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIPivotTableFieldSubtotalOptions::is_field_id_Valid() const{
    return m_field_id_isValid;
}

bool OAIPivotTableFieldSubtotalOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPivotTableFieldSubtotalOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
