/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionPageBreakConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionPageBreakConfiguration::OAISectionPageBreakConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionPageBreakConfiguration::OAISectionPageBreakConfiguration() {
    this->initializeModel();
}

OAISectionPageBreakConfiguration::~OAISectionPageBreakConfiguration() {}

void OAISectionPageBreakConfiguration::initializeModel() {

    m_after_isSet = false;
    m_after_isValid = false;
}

void OAISectionPageBreakConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionPageBreakConfiguration::fromJsonObject(QJsonObject json) {

    m_after_isValid = ::OpenAPI::fromJsonValue(m_after, json[QString("After")]);
    m_after_isSet = !json[QString("After")].isNull() && m_after_isValid;
}

QString OAISectionPageBreakConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionPageBreakConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_after.isSet()) {
        obj.insert(QString("After"), ::OpenAPI::toJsonValue(m_after));
    }
    return obj;
}

OAISectionPageBreakConfiguration_After OAISectionPageBreakConfiguration::getAfter() const {
    return m_after;
}
void OAISectionPageBreakConfiguration::setAfter(const OAISectionPageBreakConfiguration_After &after) {
    m_after = after;
    m_after_isSet = true;
}

bool OAISectionPageBreakConfiguration::is_after_Set() const{
    return m_after_isSet;
}

bool OAISectionPageBreakConfiguration::is_after_Valid() const{
    return m_after_isValid;
}

bool OAISectionPageBreakConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionPageBreakConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
