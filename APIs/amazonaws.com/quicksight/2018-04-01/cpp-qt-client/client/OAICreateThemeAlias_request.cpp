/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateThemeAlias_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateThemeAlias_request::OAICreateThemeAlias_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateThemeAlias_request::OAICreateThemeAlias_request() {
    this->initializeModel();
}

OAICreateThemeAlias_request::~OAICreateThemeAlias_request() {}

void OAICreateThemeAlias_request::initializeModel() {

    m_theme_version_number_isSet = false;
    m_theme_version_number_isValid = false;
}

void OAICreateThemeAlias_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateThemeAlias_request::fromJsonObject(QJsonObject json) {

    m_theme_version_number_isValid = ::OpenAPI::fromJsonValue(m_theme_version_number, json[QString("ThemeVersionNumber")]);
    m_theme_version_number_isSet = !json[QString("ThemeVersionNumber")].isNull() && m_theme_version_number_isValid;
}

QString OAICreateThemeAlias_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateThemeAlias_request::asJsonObject() const {
    QJsonObject obj;
    if (m_theme_version_number_isSet) {
        obj.insert(QString("ThemeVersionNumber"), ::OpenAPI::toJsonValue(m_theme_version_number));
    }
    return obj;
}

qint32 OAICreateThemeAlias_request::getThemeVersionNumber() const {
    return m_theme_version_number;
}
void OAICreateThemeAlias_request::setThemeVersionNumber(const qint32 &theme_version_number) {
    m_theme_version_number = theme_version_number;
    m_theme_version_number_isSet = true;
}

bool OAICreateThemeAlias_request::is_theme_version_number_Set() const{
    return m_theme_version_number_isSet;
}

bool OAICreateThemeAlias_request::is_theme_version_number_Valid() const{
    return m_theme_version_number_isValid;
}

bool OAICreateThemeAlias_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_theme_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateThemeAlias_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_theme_version_number_isValid && true;
}

} // namespace OpenAPI
