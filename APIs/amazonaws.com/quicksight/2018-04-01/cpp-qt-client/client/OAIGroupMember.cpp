/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupMember::OAIGroupMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupMember::OAIGroupMember() {
    this->initializeModel();
}

OAIGroupMember::~OAIGroupMember() {}

void OAIGroupMember::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_member_name_isSet = false;
    m_member_name_isValid = false;
}

void OAIGroupMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupMember::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_member_name_isValid = ::OpenAPI::fromJsonValue(m_member_name, json[QString("MemberName")]);
    m_member_name_isSet = !json[QString("MemberName")].isNull() && m_member_name_isValid;
}

QString OAIGroupMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupMember::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_member_name_isSet) {
        obj.insert(QString("MemberName"), ::OpenAPI::toJsonValue(m_member_name));
    }
    return obj;
}

QString OAIGroupMember::getArn() const {
    return m_arn;
}
void OAIGroupMember::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIGroupMember::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIGroupMember::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIGroupMember::getMemberName() const {
    return m_member_name;
}
void OAIGroupMember::setMemberName(const QString &member_name) {
    m_member_name = member_name;
    m_member_name_isSet = true;
}

bool OAIGroupMember::is_member_name_Set() const{
    return m_member_name_isSet;
}

bool OAIGroupMember::is_member_name_Valid() const{
    return m_member_name_isValid;
}

bool OAIGroupMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
