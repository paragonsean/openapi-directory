/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleExportFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleExportFormat::OAIAssetBundleExportFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleExportFormat::OAIAssetBundleExportFormat() {
    this->initializeModel();
}

OAIAssetBundleExportFormat::~OAIAssetBundleExportFormat() {}

void OAIAssetBundleExportFormat::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetBundleExportFormat::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetBundleExportFormat::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CLOUDFORMATION_JSON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportFormat::CLOUDFORMATION_JSON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUICKSIGHT_JSON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetBundleExportFormat::QUICKSIGHT_JSON;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetBundleExportFormat::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetBundleExportFormat::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetBundleExportFormat::CLOUDFORMATION_JSON:
            val = "CLOUDFORMATION_JSON";
            break;
        case eOAIAssetBundleExportFormat::QUICKSIGHT_JSON:
            val = "QUICKSIGHT_JSON";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetBundleExportFormat::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetBundleExportFormat::eOAIAssetBundleExportFormat OAIAssetBundleExportFormat::getValue() const {
    return m_value;
}

void OAIAssetBundleExportFormat::setValue(const OAIAssetBundleExportFormat::eOAIAssetBundleExportFormat& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetBundleExportFormat::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetBundleExportFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
