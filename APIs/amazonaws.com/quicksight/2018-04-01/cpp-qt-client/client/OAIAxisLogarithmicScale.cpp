/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAxisLogarithmicScale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAxisLogarithmicScale::OAIAxisLogarithmicScale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAxisLogarithmicScale::OAIAxisLogarithmicScale() {
    this->initializeModel();
}

OAIAxisLogarithmicScale::~OAIAxisLogarithmicScale() {}

void OAIAxisLogarithmicScale::initializeModel() {

    m_base_isSet = false;
    m_base_isValid = false;
}

void OAIAxisLogarithmicScale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAxisLogarithmicScale::fromJsonObject(QJsonObject json) {

    m_base_isValid = ::OpenAPI::fromJsonValue(m_base, json[QString("Base")]);
    m_base_isSet = !json[QString("Base")].isNull() && m_base_isValid;
}

QString OAIAxisLogarithmicScale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAxisLogarithmicScale::asJsonObject() const {
    QJsonObject obj;
    if (m_base_isSet) {
        obj.insert(QString("Base"), ::OpenAPI::toJsonValue(m_base));
    }
    return obj;
}

double OAIAxisLogarithmicScale::getBase() const {
    return m_base;
}
void OAIAxisLogarithmicScale::setBase(const double &base) {
    m_base = base;
    m_base_isSet = true;
}

bool OAIAxisLogarithmicScale::is_base_Set() const{
    return m_base_isSet;
}

bool OAIAxisLogarithmicScale::is_base_Valid() const{
    return m_base_isValid;
}

bool OAIAxisLogarithmicScale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAxisLogarithmicScale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
