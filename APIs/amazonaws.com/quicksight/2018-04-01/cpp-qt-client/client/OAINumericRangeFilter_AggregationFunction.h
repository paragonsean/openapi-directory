/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumericRangeFilter_AggregationFunction.h
 *
 * 
 */

#ifndef OAINumericRangeFilter_AggregationFunction_H
#define OAINumericRangeFilter_AggregationFunction_H

#include <QJsonObject>

#include "OAIAggregationFunction_AttributeAggregationFunction.h"
#include "OAIAggregationFunction_NumericalAggregationFunction.h"
#include "OAICategoricalAggregationFunction.h"
#include "OAIDateAggregationFunction.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAggregationFunction_NumericalAggregationFunction;
class OAIAggregationFunction_AttributeAggregationFunction;

class OAINumericRangeFilter_AggregationFunction : public OAIObject {
public:
    OAINumericRangeFilter_AggregationFunction();
    OAINumericRangeFilter_AggregationFunction(QString json);
    ~OAINumericRangeFilter_AggregationFunction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAggregationFunction_NumericalAggregationFunction getNumericalAggregationFunction() const;
    void setNumericalAggregationFunction(const OAIAggregationFunction_NumericalAggregationFunction &numerical_aggregation_function);
    bool is_numerical_aggregation_function_Set() const;
    bool is_numerical_aggregation_function_Valid() const;

    OAICategoricalAggregationFunction getCategoricalAggregationFunction() const;
    void setCategoricalAggregationFunction(const OAICategoricalAggregationFunction &categorical_aggregation_function);
    bool is_categorical_aggregation_function_Set() const;
    bool is_categorical_aggregation_function_Valid() const;

    OAIDateAggregationFunction getDateAggregationFunction() const;
    void setDateAggregationFunction(const OAIDateAggregationFunction &date_aggregation_function);
    bool is_date_aggregation_function_Set() const;
    bool is_date_aggregation_function_Valid() const;

    OAIAggregationFunction_AttributeAggregationFunction getAttributeAggregationFunction() const;
    void setAttributeAggregationFunction(const OAIAggregationFunction_AttributeAggregationFunction &attribute_aggregation_function);
    bool is_attribute_aggregation_function_Set() const;
    bool is_attribute_aggregation_function_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAggregationFunction_NumericalAggregationFunction m_numerical_aggregation_function;
    bool m_numerical_aggregation_function_isSet;
    bool m_numerical_aggregation_function_isValid;

    OAICategoricalAggregationFunction m_categorical_aggregation_function;
    bool m_categorical_aggregation_function_isSet;
    bool m_categorical_aggregation_function_isValid;

    OAIDateAggregationFunction m_date_aggregation_function;
    bool m_date_aggregation_function_isSet;
    bool m_date_aggregation_function_isValid;

    OAIAggregationFunction_AttributeAggregationFunction m_attribute_aggregation_function;
    bool m_attribute_aggregation_function_isSet;
    bool m_attribute_aggregation_function_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumericRangeFilter_AggregationFunction)

#endif // OAINumericRangeFilter_AggregationFunction_H
