/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterMarker_SimpleClusterMarker.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterMarker_SimpleClusterMarker::OAIClusterMarker_SimpleClusterMarker(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterMarker_SimpleClusterMarker::OAIClusterMarker_SimpleClusterMarker() {
    this->initializeModel();
}

OAIClusterMarker_SimpleClusterMarker::~OAIClusterMarker_SimpleClusterMarker() {}

void OAIClusterMarker_SimpleClusterMarker::initializeModel() {

    m_color_isSet = false;
    m_color_isValid = false;
}

void OAIClusterMarker_SimpleClusterMarker::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterMarker_SimpleClusterMarker::fromJsonObject(QJsonObject json) {

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("Color")]);
    m_color_isSet = !json[QString("Color")].isNull() && m_color_isValid;
}

QString OAIClusterMarker_SimpleClusterMarker::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterMarker_SimpleClusterMarker::asJsonObject() const {
    QJsonObject obj;
    if (m_color_isSet) {
        obj.insert(QString("Color"), ::OpenAPI::toJsonValue(m_color));
    }
    return obj;
}

QString OAIClusterMarker_SimpleClusterMarker::getColor() const {
    return m_color;
}
void OAIClusterMarker_SimpleClusterMarker::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIClusterMarker_SimpleClusterMarker::is_color_Set() const{
    return m_color_isSet;
}

bool OAIClusterMarker_SimpleClusterMarker::is_color_Valid() const{
    return m_color_isValid;
}

bool OAIClusterMarker_SimpleClusterMarker::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterMarker_SimpleClusterMarker::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
