/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldURLConfiguration_LinkConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldURLConfiguration_LinkConfiguration::OAITableFieldURLConfiguration_LinkConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldURLConfiguration_LinkConfiguration::OAITableFieldURLConfiguration_LinkConfiguration() {
    this->initializeModel();
}

OAITableFieldURLConfiguration_LinkConfiguration::~OAITableFieldURLConfiguration_LinkConfiguration() {}

void OAITableFieldURLConfiguration_LinkConfiguration::initializeModel() {

    m_target_isSet = false;
    m_target_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;
}

void OAITableFieldURLConfiguration_LinkConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldURLConfiguration_LinkConfiguration::fromJsonObject(QJsonObject json) {

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("Target")]);
    m_target_isSet = !json[QString("Target")].isNull() && m_target_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;
}

QString OAITableFieldURLConfiguration_LinkConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldURLConfiguration_LinkConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_target.isSet()) {
        obj.insert(QString("Target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_content.isSet()) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    return obj;
}

OAIURLTargetConfiguration OAITableFieldURLConfiguration_LinkConfiguration::getTarget() const {
    return m_target;
}
void OAITableFieldURLConfiguration_LinkConfiguration::setTarget(const OAIURLTargetConfiguration &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::is_target_Set() const{
    return m_target_isSet;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::is_target_Valid() const{
    return m_target_isValid;
}

OAITableFieldLinkConfiguration_Content OAITableFieldURLConfiguration_LinkConfiguration::getContent() const {
    return m_content;
}
void OAITableFieldURLConfiguration_LinkConfiguration::setContent(const OAITableFieldLinkConfiguration_Content &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::is_content_Set() const{
    return m_content_isSet;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::is_content_Valid() const{
    return m_content_isValid;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldURLConfiguration_LinkConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_isValid && m_content_isValid && true;
}

} // namespace OpenAPI
