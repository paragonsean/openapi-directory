/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhysicalTable_RelationalTable.h
 *
 * 
 */

#ifndef OAIPhysicalTable_RelationalTable_H
#define OAIPhysicalTable_RelationalTable_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhysicalTable_RelationalTable : public OAIObject {
public:
    OAIPhysicalTable_RelationalTable();
    OAIPhysicalTable_RelationalTable(QString json);
    ~OAIPhysicalTable_RelationalTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceArn() const;
    void setDataSourceArn(const QString &data_source_arn);
    bool is_data_source_arn_Set() const;
    bool is_data_source_arn_Valid() const;

    QString getCatalog() const;
    void setCatalog(const QString &catalog);
    bool is_catalog_Set() const;
    bool is_catalog_Valid() const;

    QString getSchema() const;
    void setSchema(const QString &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getInputColumns() const;
    void setInputColumns(const QList &input_columns);
    bool is_input_columns_Set() const;
    bool is_input_columns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_arn;
    bool m_data_source_arn_isSet;
    bool m_data_source_arn_isValid;

    QString m_catalog;
    bool m_catalog_isSet;
    bool m_catalog_isValid;

    QString m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_input_columns;
    bool m_input_columns_isSet;
    bool m_input_columns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhysicalTable_RelationalTable)

#endif // OAIPhysicalTable_RelationalTable_H
