/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumericalAggregationFunction_PercentileAggregation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumericalAggregationFunction_PercentileAggregation::OAINumericalAggregationFunction_PercentileAggregation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumericalAggregationFunction_PercentileAggregation::OAINumericalAggregationFunction_PercentileAggregation() {
    this->initializeModel();
}

OAINumericalAggregationFunction_PercentileAggregation::~OAINumericalAggregationFunction_PercentileAggregation() {}

void OAINumericalAggregationFunction_PercentileAggregation::initializeModel() {

    m_percentile_value_isSet = false;
    m_percentile_value_isValid = false;
}

void OAINumericalAggregationFunction_PercentileAggregation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumericalAggregationFunction_PercentileAggregation::fromJsonObject(QJsonObject json) {

    m_percentile_value_isValid = ::OpenAPI::fromJsonValue(m_percentile_value, json[QString("PercentileValue")]);
    m_percentile_value_isSet = !json[QString("PercentileValue")].isNull() && m_percentile_value_isValid;
}

QString OAINumericalAggregationFunction_PercentileAggregation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumericalAggregationFunction_PercentileAggregation::asJsonObject() const {
    QJsonObject obj;
    if (m_percentile_value_isSet) {
        obj.insert(QString("PercentileValue"), ::OpenAPI::toJsonValue(m_percentile_value));
    }
    return obj;
}

double OAINumericalAggregationFunction_PercentileAggregation::getPercentileValue() const {
    return m_percentile_value;
}
void OAINumericalAggregationFunction_PercentileAggregation::setPercentileValue(const double &percentile_value) {
    m_percentile_value = percentile_value;
    m_percentile_value_isSet = true;
}

bool OAINumericalAggregationFunction_PercentileAggregation::is_percentile_value_Set() const{
    return m_percentile_value_isSet;
}

bool OAINumericalAggregationFunction_PercentileAggregation::is_percentile_value_Valid() const{
    return m_percentile_value_isValid;
}

bool OAINumericalAggregationFunction_PercentileAggregation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_percentile_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumericalAggregationFunction_PercentileAggregation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
