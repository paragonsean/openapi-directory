/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeFormSectionLayoutConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeFormSectionLayoutConfiguration::OAIFreeFormSectionLayoutConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeFormSectionLayoutConfiguration::OAIFreeFormSectionLayoutConfiguration() {
    this->initializeModel();
}

OAIFreeFormSectionLayoutConfiguration::~OAIFreeFormSectionLayoutConfiguration() {}

void OAIFreeFormSectionLayoutConfiguration::initializeModel() {

    m_elements_isSet = false;
    m_elements_isValid = false;
}

void OAIFreeFormSectionLayoutConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeFormSectionLayoutConfiguration::fromJsonObject(QJsonObject json) {

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("Elements")]);
    m_elements_isSet = !json[QString("Elements")].isNull() && m_elements_isValid;
}

QString OAIFreeFormSectionLayoutConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeFormSectionLayoutConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_elements.isSet()) {
        obj.insert(QString("Elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    return obj;
}

QList OAIFreeFormSectionLayoutConfiguration::getElements() const {
    return m_elements;
}
void OAIFreeFormSectionLayoutConfiguration::setElements(const QList &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAIFreeFormSectionLayoutConfiguration::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAIFreeFormSectionLayoutConfiguration::is_elements_Valid() const{
    return m_elements_isValid;
}

bool OAIFreeFormSectionLayoutConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_elements.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeFormSectionLayoutConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_elements_isValid && true;
}

} // namespace OpenAPI
