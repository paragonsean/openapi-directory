/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableConfiguration_SortConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableConfiguration_SortConfiguration::OAITableConfiguration_SortConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableConfiguration_SortConfiguration::OAITableConfiguration_SortConfiguration() {
    this->initializeModel();
}

OAITableConfiguration_SortConfiguration::~OAITableConfiguration_SortConfiguration() {}

void OAITableConfiguration_SortConfiguration::initializeModel() {

    m_row_sort_isSet = false;
    m_row_sort_isValid = false;

    m_pagination_configuration_isSet = false;
    m_pagination_configuration_isValid = false;
}

void OAITableConfiguration_SortConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableConfiguration_SortConfiguration::fromJsonObject(QJsonObject json) {

    m_row_sort_isValid = ::OpenAPI::fromJsonValue(m_row_sort, json[QString("RowSort")]);
    m_row_sort_isSet = !json[QString("RowSort")].isNull() && m_row_sort_isValid;

    m_pagination_configuration_isValid = ::OpenAPI::fromJsonValue(m_pagination_configuration, json[QString("PaginationConfiguration")]);
    m_pagination_configuration_isSet = !json[QString("PaginationConfiguration")].isNull() && m_pagination_configuration_isValid;
}

QString OAITableConfiguration_SortConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableConfiguration_SortConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_row_sort.isSet()) {
        obj.insert(QString("RowSort"), ::OpenAPI::toJsonValue(m_row_sort));
    }
    if (m_pagination_configuration.isSet()) {
        obj.insert(QString("PaginationConfiguration"), ::OpenAPI::toJsonValue(m_pagination_configuration));
    }
    return obj;
}

QList OAITableConfiguration_SortConfiguration::getRowSort() const {
    return m_row_sort;
}
void OAITableConfiguration_SortConfiguration::setRowSort(const QList &row_sort) {
    m_row_sort = row_sort;
    m_row_sort_isSet = true;
}

bool OAITableConfiguration_SortConfiguration::is_row_sort_Set() const{
    return m_row_sort_isSet;
}

bool OAITableConfiguration_SortConfiguration::is_row_sort_Valid() const{
    return m_row_sort_isValid;
}

OAITableSortConfiguration_PaginationConfiguration OAITableConfiguration_SortConfiguration::getPaginationConfiguration() const {
    return m_pagination_configuration;
}
void OAITableConfiguration_SortConfiguration::setPaginationConfiguration(const OAITableSortConfiguration_PaginationConfiguration &pagination_configuration) {
    m_pagination_configuration = pagination_configuration;
    m_pagination_configuration_isSet = true;
}

bool OAITableConfiguration_SortConfiguration::is_pagination_configuration_Set() const{
    return m_pagination_configuration_isSet;
}

bool OAITableConfiguration_SortConfiguration::is_pagination_configuration_Valid() const{
    return m_pagination_configuration_isValid;
}

bool OAITableConfiguration_SortConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_sort.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pagination_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableConfiguration_SortConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
