/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetBundleExportJobSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetBundleExportJobSummary::OAIAssetBundleExportJobSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetBundleExportJobSummary::OAIAssetBundleExportJobSummary() {
    this->initializeModel();
}

OAIAssetBundleExportJobSummary::~OAIAssetBundleExportJobSummary() {}

void OAIAssetBundleExportJobSummary::initializeModel() {

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_asset_bundle_export_job_id_isSet = false;
    m_asset_bundle_export_job_id_isValid = false;

    m_include_all_dependencies_isSet = false;
    m_include_all_dependencies_isValid = false;

    m_export_format_isSet = false;
    m_export_format_isValid = false;
}

void OAIAssetBundleExportJobSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetBundleExportJobSummary::fromJsonObject(QJsonObject json) {

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_asset_bundle_export_job_id_isValid = ::OpenAPI::fromJsonValue(m_asset_bundle_export_job_id, json[QString("AssetBundleExportJobId")]);
    m_asset_bundle_export_job_id_isSet = !json[QString("AssetBundleExportJobId")].isNull() && m_asset_bundle_export_job_id_isValid;

    m_include_all_dependencies_isValid = ::OpenAPI::fromJsonValue(m_include_all_dependencies, json[QString("IncludeAllDependencies")]);
    m_include_all_dependencies_isSet = !json[QString("IncludeAllDependencies")].isNull() && m_include_all_dependencies_isValid;

    m_export_format_isValid = ::OpenAPI::fromJsonValue(m_export_format, json[QString("ExportFormat")]);
    m_export_format_isSet = !json[QString("ExportFormat")].isNull() && m_export_format_isValid;
}

QString OAIAssetBundleExportJobSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetBundleExportJobSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_asset_bundle_export_job_id_isSet) {
        obj.insert(QString("AssetBundleExportJobId"), ::OpenAPI::toJsonValue(m_asset_bundle_export_job_id));
    }
    if (m_include_all_dependencies_isSet) {
        obj.insert(QString("IncludeAllDependencies"), ::OpenAPI::toJsonValue(m_include_all_dependencies));
    }
    if (m_export_format.isSet()) {
        obj.insert(QString("ExportFormat"), ::OpenAPI::toJsonValue(m_export_format));
    }
    return obj;
}

OAIAssetBundleExportJobStatus OAIAssetBundleExportJobSummary::getJobStatus() const {
    return m_job_status;
}
void OAIAssetBundleExportJobSummary::setJobStatus(const OAIAssetBundleExportJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIAssetBundleExportJobSummary::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QString OAIAssetBundleExportJobSummary::getArn() const {
    return m_arn;
}
void OAIAssetBundleExportJobSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIAssetBundleExportJobSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIAssetBundleExportJobSummary::getCreatedTime() const {
    return m_created_time;
}
void OAIAssetBundleExportJobSummary::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIAssetBundleExportJobSummary::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIAssetBundleExportJobSummary::getAssetBundleExportJobId() const {
    return m_asset_bundle_export_job_id;
}
void OAIAssetBundleExportJobSummary::setAssetBundleExportJobId(const QString &asset_bundle_export_job_id) {
    m_asset_bundle_export_job_id = asset_bundle_export_job_id;
    m_asset_bundle_export_job_id_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_asset_bundle_export_job_id_Set() const{
    return m_asset_bundle_export_job_id_isSet;
}

bool OAIAssetBundleExportJobSummary::is_asset_bundle_export_job_id_Valid() const{
    return m_asset_bundle_export_job_id_isValid;
}

bool OAIAssetBundleExportJobSummary::getIncludeAllDependencies() const {
    return m_include_all_dependencies;
}
void OAIAssetBundleExportJobSummary::setIncludeAllDependencies(const bool &include_all_dependencies) {
    m_include_all_dependencies = include_all_dependencies;
    m_include_all_dependencies_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_include_all_dependencies_Set() const{
    return m_include_all_dependencies_isSet;
}

bool OAIAssetBundleExportJobSummary::is_include_all_dependencies_Valid() const{
    return m_include_all_dependencies_isValid;
}

OAIAssetBundleExportFormat OAIAssetBundleExportJobSummary::getExportFormat() const {
    return m_export_format;
}
void OAIAssetBundleExportJobSummary::setExportFormat(const OAIAssetBundleExportFormat &export_format) {
    m_export_format = export_format;
    m_export_format_isSet = true;
}

bool OAIAssetBundleExportJobSummary::is_export_format_Set() const{
    return m_export_format_isSet;
}

bool OAIAssetBundleExportJobSummary::is_export_format_Valid() const{
    return m_export_format_isValid;
}

bool OAIAssetBundleExportJobSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_bundle_export_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_all_dependencies_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_format.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetBundleExportJobSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
