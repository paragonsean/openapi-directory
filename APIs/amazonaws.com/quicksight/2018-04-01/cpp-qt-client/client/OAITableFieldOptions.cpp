/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableFieldOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableFieldOptions::OAITableFieldOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableFieldOptions::OAITableFieldOptions() {
    this->initializeModel();
}

OAITableFieldOptions::~OAITableFieldOptions() {}

void OAITableFieldOptions::initializeModel() {

    m_selected_field_options_isSet = false;
    m_selected_field_options_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;
}

void OAITableFieldOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableFieldOptions::fromJsonObject(QJsonObject json) {

    m_selected_field_options_isValid = ::OpenAPI::fromJsonValue(m_selected_field_options, json[QString("SelectedFieldOptions")]);
    m_selected_field_options_isSet = !json[QString("SelectedFieldOptions")].isNull() && m_selected_field_options_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("Order")]);
    m_order_isSet = !json[QString("Order")].isNull() && m_order_isValid;
}

QString OAITableFieldOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableFieldOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_selected_field_options.isSet()) {
        obj.insert(QString("SelectedFieldOptions"), ::OpenAPI::toJsonValue(m_selected_field_options));
    }
    if (m_order.isSet()) {
        obj.insert(QString("Order"), ::OpenAPI::toJsonValue(m_order));
    }
    return obj;
}

QList OAITableFieldOptions::getSelectedFieldOptions() const {
    return m_selected_field_options;
}
void OAITableFieldOptions::setSelectedFieldOptions(const QList &selected_field_options) {
    m_selected_field_options = selected_field_options;
    m_selected_field_options_isSet = true;
}

bool OAITableFieldOptions::is_selected_field_options_Set() const{
    return m_selected_field_options_isSet;
}

bool OAITableFieldOptions::is_selected_field_options_Valid() const{
    return m_selected_field_options_isValid;
}

QList OAITableFieldOptions::getOrder() const {
    return m_order;
}
void OAITableFieldOptions::setOrder(const QList &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAITableFieldOptions::is_order_Set() const{
    return m_order_isSet;
}

bool OAITableFieldOptions::is_order_Valid() const{
    return m_order_isValid;
}

bool OAITableFieldOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_selected_field_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableFieldOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
