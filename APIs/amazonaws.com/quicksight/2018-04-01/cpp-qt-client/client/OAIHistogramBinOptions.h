/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistogramBinOptions.h
 *
 * The options that determine the presentation of histogram bins.
 */

#ifndef OAIHistogramBinOptions_H
#define OAIHistogramBinOptions_H

#include <QJsonObject>

#include "OAIHistogramBinOptions_BinCount.h"
#include "OAIHistogramBinOptions_BinWidth.h"
#include "OAIHistogramBinType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHistogramBinOptions_BinCount;
class OAIHistogramBinOptions_BinWidth;

class OAIHistogramBinOptions : public OAIObject {
public:
    OAIHistogramBinOptions();
    OAIHistogramBinOptions(QString json);
    ~OAIHistogramBinOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHistogramBinType getSelectedBinType() const;
    void setSelectedBinType(const OAIHistogramBinType &selected_bin_type);
    bool is_selected_bin_type_Set() const;
    bool is_selected_bin_type_Valid() const;

    OAIHistogramBinOptions_BinCount getBinCount() const;
    void setBinCount(const OAIHistogramBinOptions_BinCount &bin_count);
    bool is_bin_count_Set() const;
    bool is_bin_count_Valid() const;

    OAIHistogramBinOptions_BinWidth getBinWidth() const;
    void setBinWidth(const OAIHistogramBinOptions_BinWidth &bin_width);
    bool is_bin_width_Set() const;
    bool is_bin_width_Valid() const;

    double getStartValue() const;
    void setStartValue(const double &start_value);
    bool is_start_value_Set() const;
    bool is_start_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHistogramBinType m_selected_bin_type;
    bool m_selected_bin_type_isSet;
    bool m_selected_bin_type_isValid;

    OAIHistogramBinOptions_BinCount m_bin_count;
    bool m_bin_count_isSet;
    bool m_bin_count_isValid;

    OAIHistogramBinOptions_BinWidth m_bin_width;
    bool m_bin_width_isSet;
    bool m_bin_width_isValid;

    double m_start_value;
    bool m_start_value_isSet;
    bool m_start_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistogramBinOptions)

#endif // OAIHistogramBinOptions_H
