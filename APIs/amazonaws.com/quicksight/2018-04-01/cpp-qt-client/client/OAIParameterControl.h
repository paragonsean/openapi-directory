/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterControl.h
 *
 * &lt;p&gt;The control of a parameter that users can interact with in a dashboard or an analysis.&lt;/p&gt; &lt;p&gt;This is a union type structure. For this structure to be valid, only one of the attributes can be defined.&lt;/p&gt;
 */

#ifndef OAIParameterControl_H
#define OAIParameterControl_H

#include <QJsonObject>

#include "OAIParameterControl_DateTimePicker.h"
#include "OAIParameterControl_Dropdown.h"
#include "OAIParameterControl_List.h"
#include "OAIParameterControl_Slider.h"
#include "OAIParameterControl_TextArea.h"
#include "OAIParameterControl_TextField.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterControl_DateTimePicker;
class OAIParameterControl_List;
class OAIParameterControl_Dropdown;
class OAIParameterControl_TextField;
class OAIParameterControl_TextArea;
class OAIParameterControl_Slider;

class OAIParameterControl : public OAIObject {
public:
    OAIParameterControl();
    OAIParameterControl(QString json);
    ~OAIParameterControl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIParameterControl_DateTimePicker getDateTimePicker() const;
    void setDateTimePicker(const OAIParameterControl_DateTimePicker &date_time_picker);
    bool is_date_time_picker_Set() const;
    bool is_date_time_picker_Valid() const;

    OAIParameterControl_List getList() const;
    void setList(const OAIParameterControl_List &list);
    bool is_list_Set() const;
    bool is_list_Valid() const;

    OAIParameterControl_Dropdown getDropdown() const;
    void setDropdown(const OAIParameterControl_Dropdown &dropdown);
    bool is_dropdown_Set() const;
    bool is_dropdown_Valid() const;

    OAIParameterControl_TextField getTextField() const;
    void setTextField(const OAIParameterControl_TextField &text_field);
    bool is_text_field_Set() const;
    bool is_text_field_Valid() const;

    OAIParameterControl_TextArea getTextArea() const;
    void setTextArea(const OAIParameterControl_TextArea &text_area);
    bool is_text_area_Set() const;
    bool is_text_area_Valid() const;

    OAIParameterControl_Slider getSlider() const;
    void setSlider(const OAIParameterControl_Slider &slider);
    bool is_slider_Set() const;
    bool is_slider_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIParameterControl_DateTimePicker m_date_time_picker;
    bool m_date_time_picker_isSet;
    bool m_date_time_picker_isValid;

    OAIParameterControl_List m_list;
    bool m_list_isSet;
    bool m_list_isValid;

    OAIParameterControl_Dropdown m_dropdown;
    bool m_dropdown_isSet;
    bool m_dropdown_isValid;

    OAIParameterControl_TextField m_text_field;
    bool m_text_field_isSet;
    bool m_text_field_isValid;

    OAIParameterControl_TextArea m_text_area;
    bool m_text_area_isSet;
    bool m_text_area_isValid;

    OAIParameterControl_Slider m_slider;
    bool m_slider_isSet;
    bool m_slider_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterControl)

#endif // OAIParameterControl_H
