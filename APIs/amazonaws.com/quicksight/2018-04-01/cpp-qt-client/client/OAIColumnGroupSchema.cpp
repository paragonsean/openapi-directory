/**
 * Amazon QuickSight
 * <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
 *
 * The version of the OpenAPI document: 2018-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnGroupSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnGroupSchema::OAIColumnGroupSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnGroupSchema::OAIColumnGroupSchema() {
    this->initializeModel();
}

OAIColumnGroupSchema::~OAIColumnGroupSchema() {}

void OAIColumnGroupSchema::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_column_group_column_schema_list_isSet = false;
    m_column_group_column_schema_list_isValid = false;
}

void OAIColumnGroupSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnGroupSchema::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_column_group_column_schema_list_isValid = ::OpenAPI::fromJsonValue(m_column_group_column_schema_list, json[QString("ColumnGroupColumnSchemaList")]);
    m_column_group_column_schema_list_isSet = !json[QString("ColumnGroupColumnSchemaList")].isNull() && m_column_group_column_schema_list_isValid;
}

QString OAIColumnGroupSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnGroupSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_column_group_column_schema_list.isSet()) {
        obj.insert(QString("ColumnGroupColumnSchemaList"), ::OpenAPI::toJsonValue(m_column_group_column_schema_list));
    }
    return obj;
}

QString OAIColumnGroupSchema::getName() const {
    return m_name;
}
void OAIColumnGroupSchema::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIColumnGroupSchema::is_name_Set() const{
    return m_name_isSet;
}

bool OAIColumnGroupSchema::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIColumnGroupSchema::getColumnGroupColumnSchemaList() const {
    return m_column_group_column_schema_list;
}
void OAIColumnGroupSchema::setColumnGroupColumnSchemaList(const QList &column_group_column_schema_list) {
    m_column_group_column_schema_list = column_group_column_schema_list;
    m_column_group_column_schema_list_isSet = true;
}

bool OAIColumnGroupSchema::is_column_group_column_schema_list_Set() const{
    return m_column_group_column_schema_list_isSet;
}

bool OAIColumnGroupSchema::is_column_group_column_schema_list_Valid() const{
    return m_column_group_column_schema_list_isValid;
}

bool OAIColumnGroupSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_group_column_schema_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnGroupSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
