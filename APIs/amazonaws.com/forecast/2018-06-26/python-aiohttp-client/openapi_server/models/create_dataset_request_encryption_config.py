# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateDatasetRequestEncryptionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_arn: str=None, kms_key_arn: str=None):
        """CreateDatasetRequestEncryptionConfig - a model defined in OpenAPI

        :param role_arn: The role_arn of this CreateDatasetRequestEncryptionConfig.
        :param kms_key_arn: The kms_key_arn of this CreateDatasetRequestEncryptionConfig.
        """
        self.openapi_types = {
            'role_arn': str,
            'kms_key_arn': str
        }

        self.attribute_map = {
            'role_arn': 'RoleArn',
            'kms_key_arn': 'KMSKeyArn'
        }

        self._role_arn = role_arn
        self._kms_key_arn = kms_key_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDatasetRequestEncryptionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDatasetRequest_EncryptionConfig of this CreateDatasetRequestEncryptionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateDatasetRequestEncryptionConfig.


        :return: The role_arn of this CreateDatasetRequestEncryptionConfig.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateDatasetRequestEncryptionConfig.


        :param role_arn: The role_arn of this CreateDatasetRequestEncryptionConfig.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def kms_key_arn(self):
        """Gets the kms_key_arn of this CreateDatasetRequestEncryptionConfig.


        :return: The kms_key_arn of this CreateDatasetRequestEncryptionConfig.
        :rtype: str
        """
        return self._kms_key_arn

    @kms_key_arn.setter
    def kms_key_arn(self, kms_key_arn):
        """Sets the kms_key_arn of this CreateDatasetRequestEncryptionConfig.


        :param kms_key_arn: The kms_key_arn of this CreateDatasetRequestEncryptionConfig.
        :type kms_key_arn: str
        """
        if kms_key_arn is None:
            raise ValueError("Invalid value for `kms_key_arn`, must not be `None`")

        self._kms_key_arn = kms_key_arn
