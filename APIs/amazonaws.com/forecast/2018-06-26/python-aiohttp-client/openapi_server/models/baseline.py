# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.baseline_predictor_baseline import BaselinePredictorBaseline
from openapi_server import util


class Baseline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predictor_baseline: BaselinePredictorBaseline=None):
        """Baseline - a model defined in OpenAPI

        :param predictor_baseline: The predictor_baseline of this Baseline.
        """
        self.openapi_types = {
            'predictor_baseline': BaselinePredictorBaseline
        }

        self.attribute_map = {
            'predictor_baseline': 'PredictorBaseline'
        }

        self._predictor_baseline = predictor_baseline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Baseline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Baseline of this Baseline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predictor_baseline(self):
        """Gets the predictor_baseline of this Baseline.


        :return: The predictor_baseline of this Baseline.
        :rtype: BaselinePredictorBaseline
        """
        return self._predictor_baseline

    @predictor_baseline.setter
    def predictor_baseline(self, predictor_baseline):
        """Sets the predictor_baseline of this Baseline.


        :param predictor_baseline: The predictor_baseline of this Baseline.
        :type predictor_baseline: BaselinePredictorBaseline
        """

        self._predictor_baseline = predictor_baseline
