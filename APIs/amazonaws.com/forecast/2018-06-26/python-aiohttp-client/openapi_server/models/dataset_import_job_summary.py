# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_import_job_summary_data_source import DatasetImportJobSummaryDataSource
from openapi_server.models.import_mode import ImportMode
from openapi_server import util


class DatasetImportJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_import_job_arn: str=None, dataset_import_job_name: str=None, data_source: DatasetImportJobSummaryDataSource=None, status: str=None, message: str=None, creation_time: datetime=None, last_modification_time: datetime=None, import_mode: ImportMode=None):
        """DatasetImportJobSummary - a model defined in OpenAPI

        :param dataset_import_job_arn: The dataset_import_job_arn of this DatasetImportJobSummary.
        :param dataset_import_job_name: The dataset_import_job_name of this DatasetImportJobSummary.
        :param data_source: The data_source of this DatasetImportJobSummary.
        :param status: The status of this DatasetImportJobSummary.
        :param message: The message of this DatasetImportJobSummary.
        :param creation_time: The creation_time of this DatasetImportJobSummary.
        :param last_modification_time: The last_modification_time of this DatasetImportJobSummary.
        :param import_mode: The import_mode of this DatasetImportJobSummary.
        """
        self.openapi_types = {
            'dataset_import_job_arn': str,
            'dataset_import_job_name': str,
            'data_source': DatasetImportJobSummaryDataSource,
            'status': str,
            'message': str,
            'creation_time': datetime,
            'last_modification_time': datetime,
            'import_mode': ImportMode
        }

        self.attribute_map = {
            'dataset_import_job_arn': 'DatasetImportJobArn',
            'dataset_import_job_name': 'DatasetImportJobName',
            'data_source': 'DataSource',
            'status': 'Status',
            'message': 'Message',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime',
            'import_mode': 'ImportMode'
        }

        self._dataset_import_job_arn = dataset_import_job_arn
        self._dataset_import_job_name = dataset_import_job_name
        self._data_source = data_source
        self._status = status
        self._message = message
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time
        self._import_mode = import_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetImportJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetImportJobSummary of this DatasetImportJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_import_job_arn(self):
        """Gets the dataset_import_job_arn of this DatasetImportJobSummary.


        :return: The dataset_import_job_arn of this DatasetImportJobSummary.
        :rtype: str
        """
        return self._dataset_import_job_arn

    @dataset_import_job_arn.setter
    def dataset_import_job_arn(self, dataset_import_job_arn):
        """Sets the dataset_import_job_arn of this DatasetImportJobSummary.


        :param dataset_import_job_arn: The dataset_import_job_arn of this DatasetImportJobSummary.
        :type dataset_import_job_arn: str
        """

        self._dataset_import_job_arn = dataset_import_job_arn

    @property
    def dataset_import_job_name(self):
        """Gets the dataset_import_job_name of this DatasetImportJobSummary.


        :return: The dataset_import_job_name of this DatasetImportJobSummary.
        :rtype: str
        """
        return self._dataset_import_job_name

    @dataset_import_job_name.setter
    def dataset_import_job_name(self, dataset_import_job_name):
        """Sets the dataset_import_job_name of this DatasetImportJobSummary.


        :param dataset_import_job_name: The dataset_import_job_name of this DatasetImportJobSummary.
        :type dataset_import_job_name: str
        """

        self._dataset_import_job_name = dataset_import_job_name

    @property
    def data_source(self):
        """Gets the data_source of this DatasetImportJobSummary.


        :return: The data_source of this DatasetImportJobSummary.
        :rtype: DatasetImportJobSummaryDataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this DatasetImportJobSummary.


        :param data_source: The data_source of this DatasetImportJobSummary.
        :type data_source: DatasetImportJobSummaryDataSource
        """

        self._data_source = data_source

    @property
    def status(self):
        """Gets the status of this DatasetImportJobSummary.


        :return: The status of this DatasetImportJobSummary.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DatasetImportJobSummary.


        :param status: The status of this DatasetImportJobSummary.
        :type status: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this DatasetImportJobSummary.


        :return: The message of this DatasetImportJobSummary.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DatasetImportJobSummary.


        :param message: The message of this DatasetImportJobSummary.
        :type message: str
        """

        self._message = message

    @property
    def creation_time(self):
        """Gets the creation_time of this DatasetImportJobSummary.


        :return: The creation_time of this DatasetImportJobSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DatasetImportJobSummary.


        :param creation_time: The creation_time of this DatasetImportJobSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this DatasetImportJobSummary.


        :return: The last_modification_time of this DatasetImportJobSummary.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this DatasetImportJobSummary.


        :param last_modification_time: The last_modification_time of this DatasetImportJobSummary.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time

    @property
    def import_mode(self):
        """Gets the import_mode of this DatasetImportJobSummary.


        :return: The import_mode of this DatasetImportJobSummary.
        :rtype: ImportMode
        """
        return self._import_mode

    @import_mode.setter
    def import_mode(self, import_mode):
        """Sets the import_mode of this DatasetImportJobSummary.


        :param import_mode: The import_mode of this DatasetImportJobSummary.
        :type import_mode: ImportMode
        """

        self._import_mode = import_mode
