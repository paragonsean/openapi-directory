# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitor_arn: str=None, status: str=None):
        """MonitorInfo - a model defined in OpenAPI

        :param monitor_arn: The monitor_arn of this MonitorInfo.
        :param status: The status of this MonitorInfo.
        """
        self.openapi_types = {
            'monitor_arn': str,
            'status': str
        }

        self.attribute_map = {
            'monitor_arn': 'MonitorArn',
            'status': 'Status'
        }

        self._monitor_arn = monitor_arn
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitorInfo of this MonitorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitor_arn(self):
        """Gets the monitor_arn of this MonitorInfo.


        :return: The monitor_arn of this MonitorInfo.
        :rtype: str
        """
        return self._monitor_arn

    @monitor_arn.setter
    def monitor_arn(self, monitor_arn):
        """Sets the monitor_arn of this MonitorInfo.


        :param monitor_arn: The monitor_arn of this MonitorInfo.
        :type monitor_arn: str
        """

        self._monitor_arn = monitor_arn

    @property
    def status(self):
        """Gets the status of this MonitorInfo.


        :return: The status of this MonitorInfo.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MonitorInfo.


        :param status: The status of this MonitorInfo.
        :type status: str
        """

        self._status = status
