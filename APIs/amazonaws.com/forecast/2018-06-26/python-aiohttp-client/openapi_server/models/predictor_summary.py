# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predictor_summary_reference_predictor_summary import PredictorSummaryReferencePredictorSummary
from openapi_server import util


class PredictorSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predictor_arn: str=None, predictor_name: str=None, dataset_group_arn: str=None, is_auto_predictor: bool=None, reference_predictor_summary: PredictorSummaryReferencePredictorSummary=None, status: str=None, message: str=None, creation_time: datetime=None, last_modification_time: datetime=None):
        """PredictorSummary - a model defined in OpenAPI

        :param predictor_arn: The predictor_arn of this PredictorSummary.
        :param predictor_name: The predictor_name of this PredictorSummary.
        :param dataset_group_arn: The dataset_group_arn of this PredictorSummary.
        :param is_auto_predictor: The is_auto_predictor of this PredictorSummary.
        :param reference_predictor_summary: The reference_predictor_summary of this PredictorSummary.
        :param status: The status of this PredictorSummary.
        :param message: The message of this PredictorSummary.
        :param creation_time: The creation_time of this PredictorSummary.
        :param last_modification_time: The last_modification_time of this PredictorSummary.
        """
        self.openapi_types = {
            'predictor_arn': str,
            'predictor_name': str,
            'dataset_group_arn': str,
            'is_auto_predictor': bool,
            'reference_predictor_summary': PredictorSummaryReferencePredictorSummary,
            'status': str,
            'message': str,
            'creation_time': datetime,
            'last_modification_time': datetime
        }

        self.attribute_map = {
            'predictor_arn': 'PredictorArn',
            'predictor_name': 'PredictorName',
            'dataset_group_arn': 'DatasetGroupArn',
            'is_auto_predictor': 'IsAutoPredictor',
            'reference_predictor_summary': 'ReferencePredictorSummary',
            'status': 'Status',
            'message': 'Message',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime'
        }

        self._predictor_arn = predictor_arn
        self._predictor_name = predictor_name
        self._dataset_group_arn = dataset_group_arn
        self._is_auto_predictor = is_auto_predictor
        self._reference_predictor_summary = reference_predictor_summary
        self._status = status
        self._message = message
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredictorSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredictorSummary of this PredictorSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predictor_arn(self):
        """Gets the predictor_arn of this PredictorSummary.


        :return: The predictor_arn of this PredictorSummary.
        :rtype: str
        """
        return self._predictor_arn

    @predictor_arn.setter
    def predictor_arn(self, predictor_arn):
        """Sets the predictor_arn of this PredictorSummary.


        :param predictor_arn: The predictor_arn of this PredictorSummary.
        :type predictor_arn: str
        """

        self._predictor_arn = predictor_arn

    @property
    def predictor_name(self):
        """Gets the predictor_name of this PredictorSummary.


        :return: The predictor_name of this PredictorSummary.
        :rtype: str
        """
        return self._predictor_name

    @predictor_name.setter
    def predictor_name(self, predictor_name):
        """Sets the predictor_name of this PredictorSummary.


        :param predictor_name: The predictor_name of this PredictorSummary.
        :type predictor_name: str
        """

        self._predictor_name = predictor_name

    @property
    def dataset_group_arn(self):
        """Gets the dataset_group_arn of this PredictorSummary.


        :return: The dataset_group_arn of this PredictorSummary.
        :rtype: str
        """
        return self._dataset_group_arn

    @dataset_group_arn.setter
    def dataset_group_arn(self, dataset_group_arn):
        """Sets the dataset_group_arn of this PredictorSummary.


        :param dataset_group_arn: The dataset_group_arn of this PredictorSummary.
        :type dataset_group_arn: str
        """

        self._dataset_group_arn = dataset_group_arn

    @property
    def is_auto_predictor(self):
        """Gets the is_auto_predictor of this PredictorSummary.


        :return: The is_auto_predictor of this PredictorSummary.
        :rtype: bool
        """
        return self._is_auto_predictor

    @is_auto_predictor.setter
    def is_auto_predictor(self, is_auto_predictor):
        """Sets the is_auto_predictor of this PredictorSummary.


        :param is_auto_predictor: The is_auto_predictor of this PredictorSummary.
        :type is_auto_predictor: bool
        """

        self._is_auto_predictor = is_auto_predictor

    @property
    def reference_predictor_summary(self):
        """Gets the reference_predictor_summary of this PredictorSummary.


        :return: The reference_predictor_summary of this PredictorSummary.
        :rtype: PredictorSummaryReferencePredictorSummary
        """
        return self._reference_predictor_summary

    @reference_predictor_summary.setter
    def reference_predictor_summary(self, reference_predictor_summary):
        """Sets the reference_predictor_summary of this PredictorSummary.


        :param reference_predictor_summary: The reference_predictor_summary of this PredictorSummary.
        :type reference_predictor_summary: PredictorSummaryReferencePredictorSummary
        """

        self._reference_predictor_summary = reference_predictor_summary

    @property
    def status(self):
        """Gets the status of this PredictorSummary.


        :return: The status of this PredictorSummary.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PredictorSummary.


        :param status: The status of this PredictorSummary.
        :type status: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this PredictorSummary.


        :return: The message of this PredictorSummary.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PredictorSummary.


        :param message: The message of this PredictorSummary.
        :type message: str
        """

        self._message = message

    @property
    def creation_time(self):
        """Gets the creation_time of this PredictorSummary.


        :return: The creation_time of this PredictorSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this PredictorSummary.


        :param creation_time: The creation_time of this PredictorSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this PredictorSummary.


        :return: The last_modification_time of this PredictorSummary.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this PredictorSummary.


        :param last_modification_time: The last_modification_time of this PredictorSummary.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time
