# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_type import DatasetType
from openapi_server.models.domain import Domain
from openapi_server import util


class DatasetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_arn: str=None, dataset_name: str=None, dataset_type: DatasetType=None, domain: Domain=None, creation_time: datetime=None, last_modification_time: datetime=None):
        """DatasetSummary - a model defined in OpenAPI

        :param dataset_arn: The dataset_arn of this DatasetSummary.
        :param dataset_name: The dataset_name of this DatasetSummary.
        :param dataset_type: The dataset_type of this DatasetSummary.
        :param domain: The domain of this DatasetSummary.
        :param creation_time: The creation_time of this DatasetSummary.
        :param last_modification_time: The last_modification_time of this DatasetSummary.
        """
        self.openapi_types = {
            'dataset_arn': str,
            'dataset_name': str,
            'dataset_type': DatasetType,
            'domain': Domain,
            'creation_time': datetime,
            'last_modification_time': datetime
        }

        self.attribute_map = {
            'dataset_arn': 'DatasetArn',
            'dataset_name': 'DatasetName',
            'dataset_type': 'DatasetType',
            'domain': 'Domain',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime'
        }

        self._dataset_arn = dataset_arn
        self._dataset_name = dataset_name
        self._dataset_type = dataset_type
        self._domain = domain
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetSummary of this DatasetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this DatasetSummary.


        :return: The dataset_arn of this DatasetSummary.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this DatasetSummary.


        :param dataset_arn: The dataset_arn of this DatasetSummary.
        :type dataset_arn: str
        """

        self._dataset_arn = dataset_arn

    @property
    def dataset_name(self):
        """Gets the dataset_name of this DatasetSummary.


        :return: The dataset_name of this DatasetSummary.
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this DatasetSummary.


        :param dataset_name: The dataset_name of this DatasetSummary.
        :type dataset_name: str
        """

        self._dataset_name = dataset_name

    @property
    def dataset_type(self):
        """Gets the dataset_type of this DatasetSummary.


        :return: The dataset_type of this DatasetSummary.
        :rtype: DatasetType
        """
        return self._dataset_type

    @dataset_type.setter
    def dataset_type(self, dataset_type):
        """Sets the dataset_type of this DatasetSummary.


        :param dataset_type: The dataset_type of this DatasetSummary.
        :type dataset_type: DatasetType
        """

        self._dataset_type = dataset_type

    @property
    def domain(self):
        """Gets the domain of this DatasetSummary.


        :return: The domain of this DatasetSummary.
        :rtype: Domain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DatasetSummary.


        :param domain: The domain of this DatasetSummary.
        :type domain: Domain
        """

        self._domain = domain

    @property
    def creation_time(self):
        """Gets the creation_time of this DatasetSummary.


        :return: The creation_time of this DatasetSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DatasetSummary.


        :param creation_time: The creation_time of this DatasetSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this DatasetSummary.


        :return: The last_modification_time of this DatasetSummary.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this DatasetSummary.


        :param last_modification_time: The last_modification_time of this DatasetSummary.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time
