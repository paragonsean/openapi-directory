# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_series_transformation_action import TimeSeriesTransformationAction
from openapi_server import util


class TimeSeriesTransformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: TimeSeriesTransformationAction=None, time_series_conditions: List=None):
        """TimeSeriesTransformation - a model defined in OpenAPI

        :param action: The action of this TimeSeriesTransformation.
        :param time_series_conditions: The time_series_conditions of this TimeSeriesTransformation.
        """
        self.openapi_types = {
            'action': TimeSeriesTransformationAction,
            'time_series_conditions': List
        }

        self.attribute_map = {
            'action': 'Action',
            'time_series_conditions': 'TimeSeriesConditions'
        }

        self._action = action
        self._time_series_conditions = time_series_conditions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeSeriesTransformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeSeriesTransformation of this TimeSeriesTransformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this TimeSeriesTransformation.


        :return: The action of this TimeSeriesTransformation.
        :rtype: TimeSeriesTransformationAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this TimeSeriesTransformation.


        :param action: The action of this TimeSeriesTransformation.
        :type action: TimeSeriesTransformationAction
        """

        self._action = action

    @property
    def time_series_conditions(self):
        """Gets the time_series_conditions of this TimeSeriesTransformation.


        :return: The time_series_conditions of this TimeSeriesTransformation.
        :rtype: List
        """
        return self._time_series_conditions

    @time_series_conditions.setter
    def time_series_conditions(self, time_series_conditions):
        """Sets the time_series_conditions of this TimeSeriesTransformation.


        :param time_series_conditions: The time_series_conditions of this TimeSeriesTransformation.
        :type time_series_conditions: List
        """

        self._time_series_conditions = time_series_conditions
