# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.featurization_method_name import FeaturizationMethodName
from openapi_server import util


class FeaturizationMethod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, featurization_method_name: FeaturizationMethodName=None, featurization_method_parameters: Dict=None):
        """FeaturizationMethod - a model defined in OpenAPI

        :param featurization_method_name: The featurization_method_name of this FeaturizationMethod.
        :param featurization_method_parameters: The featurization_method_parameters of this FeaturizationMethod.
        """
        self.openapi_types = {
            'featurization_method_name': FeaturizationMethodName,
            'featurization_method_parameters': Dict
        }

        self.attribute_map = {
            'featurization_method_name': 'FeaturizationMethodName',
            'featurization_method_parameters': 'FeaturizationMethodParameters'
        }

        self._featurization_method_name = featurization_method_name
        self._featurization_method_parameters = featurization_method_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeaturizationMethod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeaturizationMethod of this FeaturizationMethod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def featurization_method_name(self):
        """Gets the featurization_method_name of this FeaturizationMethod.


        :return: The featurization_method_name of this FeaturizationMethod.
        :rtype: FeaturizationMethodName
        """
        return self._featurization_method_name

    @featurization_method_name.setter
    def featurization_method_name(self, featurization_method_name):
        """Sets the featurization_method_name of this FeaturizationMethod.


        :param featurization_method_name: The featurization_method_name of this FeaturizationMethod.
        :type featurization_method_name: FeaturizationMethodName
        """
        if featurization_method_name is None:
            raise ValueError("Invalid value for `featurization_method_name`, must not be `None`")

        self._featurization_method_name = featurization_method_name

    @property
    def featurization_method_parameters(self):
        """Gets the featurization_method_parameters of this FeaturizationMethod.


        :return: The featurization_method_parameters of this FeaturizationMethod.
        :rtype: Dict
        """
        return self._featurization_method_parameters

    @featurization_method_parameters.setter
    def featurization_method_parameters(self, featurization_method_parameters):
        """Sets the featurization_method_parameters of this FeaturizationMethod.


        :param featurization_method_parameters: The featurization_method_parameters of this FeaturizationMethod.
        :type featurization_method_parameters: Dict
        """

        self._featurization_method_parameters = featurization_method_parameters
