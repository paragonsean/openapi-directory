# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_explainability_request_explainability_config import CreateExplainabilityRequestExplainabilityConfig
from openapi_server.models.data_source import DataSource
from openapi_server.models.model_schema import ModelSchema
from openapi_server import util


class CreateExplainabilityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explainability_name: str=None, resource_arn: str=None, explainability_config: CreateExplainabilityRequestExplainabilityConfig=None, data_source: DataSource=None, _schema: ModelSchema=None, enable_visualization: bool=None, start_date_time: str=None, end_date_time: str=None, tags: List=None):
        """CreateExplainabilityRequest - a model defined in OpenAPI

        :param explainability_name: The explainability_name of this CreateExplainabilityRequest.
        :param resource_arn: The resource_arn of this CreateExplainabilityRequest.
        :param explainability_config: The explainability_config of this CreateExplainabilityRequest.
        :param data_source: The data_source of this CreateExplainabilityRequest.
        :param _schema: The _schema of this CreateExplainabilityRequest.
        :param enable_visualization: The enable_visualization of this CreateExplainabilityRequest.
        :param start_date_time: The start_date_time of this CreateExplainabilityRequest.
        :param end_date_time: The end_date_time of this CreateExplainabilityRequest.
        :param tags: The tags of this CreateExplainabilityRequest.
        """
        self.openapi_types = {
            'explainability_name': str,
            'resource_arn': str,
            'explainability_config': CreateExplainabilityRequestExplainabilityConfig,
            'data_source': DataSource,
            '_schema': ModelSchema,
            'enable_visualization': bool,
            'start_date_time': str,
            'end_date_time': str,
            'tags': List
        }

        self.attribute_map = {
            'explainability_name': 'ExplainabilityName',
            'resource_arn': 'ResourceArn',
            'explainability_config': 'ExplainabilityConfig',
            'data_source': 'DataSource',
            '_schema': 'Schema',
            'enable_visualization': 'EnableVisualization',
            'start_date_time': 'StartDateTime',
            'end_date_time': 'EndDateTime',
            'tags': 'Tags'
        }

        self._explainability_name = explainability_name
        self._resource_arn = resource_arn
        self._explainability_config = explainability_config
        self._data_source = data_source
        self.__schema = _schema
        self._enable_visualization = enable_visualization
        self._start_date_time = start_date_time
        self._end_date_time = end_date_time
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateExplainabilityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateExplainabilityRequest of this CreateExplainabilityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explainability_name(self):
        """Gets the explainability_name of this CreateExplainabilityRequest.


        :return: The explainability_name of this CreateExplainabilityRequest.
        :rtype: str
        """
        return self._explainability_name

    @explainability_name.setter
    def explainability_name(self, explainability_name):
        """Sets the explainability_name of this CreateExplainabilityRequest.


        :param explainability_name: The explainability_name of this CreateExplainabilityRequest.
        :type explainability_name: str
        """
        if explainability_name is None:
            raise ValueError("Invalid value for `explainability_name`, must not be `None`")

        self._explainability_name = explainability_name

    @property
    def resource_arn(self):
        """Gets the resource_arn of this CreateExplainabilityRequest.


        :return: The resource_arn of this CreateExplainabilityRequest.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this CreateExplainabilityRequest.


        :param resource_arn: The resource_arn of this CreateExplainabilityRequest.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn

    @property
    def explainability_config(self):
        """Gets the explainability_config of this CreateExplainabilityRequest.


        :return: The explainability_config of this CreateExplainabilityRequest.
        :rtype: CreateExplainabilityRequestExplainabilityConfig
        """
        return self._explainability_config

    @explainability_config.setter
    def explainability_config(self, explainability_config):
        """Sets the explainability_config of this CreateExplainabilityRequest.


        :param explainability_config: The explainability_config of this CreateExplainabilityRequest.
        :type explainability_config: CreateExplainabilityRequestExplainabilityConfig
        """
        if explainability_config is None:
            raise ValueError("Invalid value for `explainability_config`, must not be `None`")

        self._explainability_config = explainability_config

    @property
    def data_source(self):
        """Gets the data_source of this CreateExplainabilityRequest.


        :return: The data_source of this CreateExplainabilityRequest.
        :rtype: DataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this CreateExplainabilityRequest.


        :param data_source: The data_source of this CreateExplainabilityRequest.
        :type data_source: DataSource
        """

        self._data_source = data_source

    @property
    def _schema(self):
        """Gets the _schema of this CreateExplainabilityRequest.


        :return: The _schema of this CreateExplainabilityRequest.
        :rtype: ModelSchema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this CreateExplainabilityRequest.


        :param _schema: The _schema of this CreateExplainabilityRequest.
        :type _schema: ModelSchema
        """

        self.__schema = _schema

    @property
    def enable_visualization(self):
        """Gets the enable_visualization of this CreateExplainabilityRequest.


        :return: The enable_visualization of this CreateExplainabilityRequest.
        :rtype: bool
        """
        return self._enable_visualization

    @enable_visualization.setter
    def enable_visualization(self, enable_visualization):
        """Sets the enable_visualization of this CreateExplainabilityRequest.


        :param enable_visualization: The enable_visualization of this CreateExplainabilityRequest.
        :type enable_visualization: bool
        """

        self._enable_visualization = enable_visualization

    @property
    def start_date_time(self):
        """Gets the start_date_time of this CreateExplainabilityRequest.


        :return: The start_date_time of this CreateExplainabilityRequest.
        :rtype: str
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this CreateExplainabilityRequest.


        :param start_date_time: The start_date_time of this CreateExplainabilityRequest.
        :type start_date_time: str
        """

        self._start_date_time = start_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this CreateExplainabilityRequest.


        :return: The end_date_time of this CreateExplainabilityRequest.
        :rtype: str
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this CreateExplainabilityRequest.


        :param end_date_time: The end_date_time of this CreateExplainabilityRequest.
        :type end_date_time: str
        """

        self._end_date_time = end_date_time

    @property
    def tags(self):
        """Gets the tags of this CreateExplainabilityRequest.


        :return: The tags of this CreateExplainabilityRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateExplainabilityRequest.


        :param tags: The tags of this CreateExplainabilityRequest.
        :type tags: List
        """

        self._tags = tags
