# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predictor_monitor_evaluation_monitor_data_source import PredictorMonitorEvaluationMonitorDataSource
from openapi_server.models.predictor_monitor_evaluation_predictor_event import PredictorMonitorEvaluationPredictorEvent
from openapi_server import util


class PredictorMonitorEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_arn: str=None, monitor_arn: str=None, evaluation_time: datetime=None, evaluation_state: str=None, window_start_datetime: datetime=None, window_end_datetime: datetime=None, predictor_event: PredictorMonitorEvaluationPredictorEvent=None, monitor_data_source: PredictorMonitorEvaluationMonitorDataSource=None, metric_results: List=None, num_items_evaluated: int=None, message: str=None):
        """PredictorMonitorEvaluation - a model defined in OpenAPI

        :param resource_arn: The resource_arn of this PredictorMonitorEvaluation.
        :param monitor_arn: The monitor_arn of this PredictorMonitorEvaluation.
        :param evaluation_time: The evaluation_time of this PredictorMonitorEvaluation.
        :param evaluation_state: The evaluation_state of this PredictorMonitorEvaluation.
        :param window_start_datetime: The window_start_datetime of this PredictorMonitorEvaluation.
        :param window_end_datetime: The window_end_datetime of this PredictorMonitorEvaluation.
        :param predictor_event: The predictor_event of this PredictorMonitorEvaluation.
        :param monitor_data_source: The monitor_data_source of this PredictorMonitorEvaluation.
        :param metric_results: The metric_results of this PredictorMonitorEvaluation.
        :param num_items_evaluated: The num_items_evaluated of this PredictorMonitorEvaluation.
        :param message: The message of this PredictorMonitorEvaluation.
        """
        self.openapi_types = {
            'resource_arn': str,
            'monitor_arn': str,
            'evaluation_time': datetime,
            'evaluation_state': str,
            'window_start_datetime': datetime,
            'window_end_datetime': datetime,
            'predictor_event': PredictorMonitorEvaluationPredictorEvent,
            'monitor_data_source': PredictorMonitorEvaluationMonitorDataSource,
            'metric_results': List,
            'num_items_evaluated': int,
            'message': str
        }

        self.attribute_map = {
            'resource_arn': 'ResourceArn',
            'monitor_arn': 'MonitorArn',
            'evaluation_time': 'EvaluationTime',
            'evaluation_state': 'EvaluationState',
            'window_start_datetime': 'WindowStartDatetime',
            'window_end_datetime': 'WindowEndDatetime',
            'predictor_event': 'PredictorEvent',
            'monitor_data_source': 'MonitorDataSource',
            'metric_results': 'MetricResults',
            'num_items_evaluated': 'NumItemsEvaluated',
            'message': 'Message'
        }

        self._resource_arn = resource_arn
        self._monitor_arn = monitor_arn
        self._evaluation_time = evaluation_time
        self._evaluation_state = evaluation_state
        self._window_start_datetime = window_start_datetime
        self._window_end_datetime = window_end_datetime
        self._predictor_event = predictor_event
        self._monitor_data_source = monitor_data_source
        self._metric_results = metric_results
        self._num_items_evaluated = num_items_evaluated
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredictorMonitorEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredictorMonitorEvaluation of this PredictorMonitorEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_arn(self):
        """Gets the resource_arn of this PredictorMonitorEvaluation.


        :return: The resource_arn of this PredictorMonitorEvaluation.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this PredictorMonitorEvaluation.


        :param resource_arn: The resource_arn of this PredictorMonitorEvaluation.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def monitor_arn(self):
        """Gets the monitor_arn of this PredictorMonitorEvaluation.


        :return: The monitor_arn of this PredictorMonitorEvaluation.
        :rtype: str
        """
        return self._monitor_arn

    @monitor_arn.setter
    def monitor_arn(self, monitor_arn):
        """Sets the monitor_arn of this PredictorMonitorEvaluation.


        :param monitor_arn: The monitor_arn of this PredictorMonitorEvaluation.
        :type monitor_arn: str
        """

        self._monitor_arn = monitor_arn

    @property
    def evaluation_time(self):
        """Gets the evaluation_time of this PredictorMonitorEvaluation.


        :return: The evaluation_time of this PredictorMonitorEvaluation.
        :rtype: datetime
        """
        return self._evaluation_time

    @evaluation_time.setter
    def evaluation_time(self, evaluation_time):
        """Sets the evaluation_time of this PredictorMonitorEvaluation.


        :param evaluation_time: The evaluation_time of this PredictorMonitorEvaluation.
        :type evaluation_time: datetime
        """

        self._evaluation_time = evaluation_time

    @property
    def evaluation_state(self):
        """Gets the evaluation_state of this PredictorMonitorEvaluation.


        :return: The evaluation_state of this PredictorMonitorEvaluation.
        :rtype: str
        """
        return self._evaluation_state

    @evaluation_state.setter
    def evaluation_state(self, evaluation_state):
        """Sets the evaluation_state of this PredictorMonitorEvaluation.


        :param evaluation_state: The evaluation_state of this PredictorMonitorEvaluation.
        :type evaluation_state: str
        """

        self._evaluation_state = evaluation_state

    @property
    def window_start_datetime(self):
        """Gets the window_start_datetime of this PredictorMonitorEvaluation.


        :return: The window_start_datetime of this PredictorMonitorEvaluation.
        :rtype: datetime
        """
        return self._window_start_datetime

    @window_start_datetime.setter
    def window_start_datetime(self, window_start_datetime):
        """Sets the window_start_datetime of this PredictorMonitorEvaluation.


        :param window_start_datetime: The window_start_datetime of this PredictorMonitorEvaluation.
        :type window_start_datetime: datetime
        """

        self._window_start_datetime = window_start_datetime

    @property
    def window_end_datetime(self):
        """Gets the window_end_datetime of this PredictorMonitorEvaluation.


        :return: The window_end_datetime of this PredictorMonitorEvaluation.
        :rtype: datetime
        """
        return self._window_end_datetime

    @window_end_datetime.setter
    def window_end_datetime(self, window_end_datetime):
        """Sets the window_end_datetime of this PredictorMonitorEvaluation.


        :param window_end_datetime: The window_end_datetime of this PredictorMonitorEvaluation.
        :type window_end_datetime: datetime
        """

        self._window_end_datetime = window_end_datetime

    @property
    def predictor_event(self):
        """Gets the predictor_event of this PredictorMonitorEvaluation.


        :return: The predictor_event of this PredictorMonitorEvaluation.
        :rtype: PredictorMonitorEvaluationPredictorEvent
        """
        return self._predictor_event

    @predictor_event.setter
    def predictor_event(self, predictor_event):
        """Sets the predictor_event of this PredictorMonitorEvaluation.


        :param predictor_event: The predictor_event of this PredictorMonitorEvaluation.
        :type predictor_event: PredictorMonitorEvaluationPredictorEvent
        """

        self._predictor_event = predictor_event

    @property
    def monitor_data_source(self):
        """Gets the monitor_data_source of this PredictorMonitorEvaluation.


        :return: The monitor_data_source of this PredictorMonitorEvaluation.
        :rtype: PredictorMonitorEvaluationMonitorDataSource
        """
        return self._monitor_data_source

    @monitor_data_source.setter
    def monitor_data_source(self, monitor_data_source):
        """Sets the monitor_data_source of this PredictorMonitorEvaluation.


        :param monitor_data_source: The monitor_data_source of this PredictorMonitorEvaluation.
        :type monitor_data_source: PredictorMonitorEvaluationMonitorDataSource
        """

        self._monitor_data_source = monitor_data_source

    @property
    def metric_results(self):
        """Gets the metric_results of this PredictorMonitorEvaluation.


        :return: The metric_results of this PredictorMonitorEvaluation.
        :rtype: List
        """
        return self._metric_results

    @metric_results.setter
    def metric_results(self, metric_results):
        """Sets the metric_results of this PredictorMonitorEvaluation.


        :param metric_results: The metric_results of this PredictorMonitorEvaluation.
        :type metric_results: List
        """

        self._metric_results = metric_results

    @property
    def num_items_evaluated(self):
        """Gets the num_items_evaluated of this PredictorMonitorEvaluation.


        :return: The num_items_evaluated of this PredictorMonitorEvaluation.
        :rtype: int
        """
        return self._num_items_evaluated

    @num_items_evaluated.setter
    def num_items_evaluated(self, num_items_evaluated):
        """Sets the num_items_evaluated of this PredictorMonitorEvaluation.


        :param num_items_evaluated: The num_items_evaluated of this PredictorMonitorEvaluation.
        :type num_items_evaluated: int
        """

        self._num_items_evaluated = num_items_evaluated

    @property
    def message(self):
        """Gets the message of this PredictorMonitorEvaluation.


        :return: The message of this PredictorMonitorEvaluation.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PredictorMonitorEvaluation.


        :param message: The message of this PredictorMonitorEvaluation.
        :type message: str
        """

        self._message = message
