# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_point_granularity import TimePointGranularity
from openapi_server.models.time_series_granularity import TimeSeriesGranularity
from openapi_server import util


class CreateExplainabilityRequestExplainabilityConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_series_granularity: TimeSeriesGranularity=None, time_point_granularity: TimePointGranularity=None):
        """CreateExplainabilityRequestExplainabilityConfig - a model defined in OpenAPI

        :param time_series_granularity: The time_series_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        :param time_point_granularity: The time_point_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        """
        self.openapi_types = {
            'time_series_granularity': TimeSeriesGranularity,
            'time_point_granularity': TimePointGranularity
        }

        self.attribute_map = {
            'time_series_granularity': 'TimeSeriesGranularity',
            'time_point_granularity': 'TimePointGranularity'
        }

        self._time_series_granularity = time_series_granularity
        self._time_point_granularity = time_point_granularity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateExplainabilityRequestExplainabilityConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateExplainabilityRequest_ExplainabilityConfig of this CreateExplainabilityRequestExplainabilityConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_series_granularity(self):
        """Gets the time_series_granularity of this CreateExplainabilityRequestExplainabilityConfig.


        :return: The time_series_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        :rtype: TimeSeriesGranularity
        """
        return self._time_series_granularity

    @time_series_granularity.setter
    def time_series_granularity(self, time_series_granularity):
        """Sets the time_series_granularity of this CreateExplainabilityRequestExplainabilityConfig.


        :param time_series_granularity: The time_series_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        :type time_series_granularity: TimeSeriesGranularity
        """
        if time_series_granularity is None:
            raise ValueError("Invalid value for `time_series_granularity`, must not be `None`")

        self._time_series_granularity = time_series_granularity

    @property
    def time_point_granularity(self):
        """Gets the time_point_granularity of this CreateExplainabilityRequestExplainabilityConfig.


        :return: The time_point_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        :rtype: TimePointGranularity
        """
        return self._time_point_granularity

    @time_point_granularity.setter
    def time_point_granularity(self, time_point_granularity):
        """Sets the time_point_granularity of this CreateExplainabilityRequestExplainabilityConfig.


        :param time_point_granularity: The time_point_granularity of this CreateExplainabilityRequestExplainabilityConfig.
        :type time_point_granularity: TimePointGranularity
        """
        if time_point_granularity is None:
            raise ValueError("Invalid value for `time_point_granularity`, must not be `None`")

        self._time_point_granularity = time_point_granularity
