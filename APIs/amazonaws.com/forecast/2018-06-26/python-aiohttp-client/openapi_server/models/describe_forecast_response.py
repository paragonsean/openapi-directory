# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_forecast_response_time_series_selector import DescribeForecastResponseTimeSeriesSelector
from openapi_server import util


class DescribeForecastResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast_arn: str=None, forecast_name: str=None, forecast_types: List=None, predictor_arn: str=None, dataset_group_arn: str=None, estimated_time_remaining_in_minutes: int=None, status: str=None, message: str=None, creation_time: datetime=None, last_modification_time: datetime=None, time_series_selector: DescribeForecastResponseTimeSeriesSelector=None):
        """DescribeForecastResponse - a model defined in OpenAPI

        :param forecast_arn: The forecast_arn of this DescribeForecastResponse.
        :param forecast_name: The forecast_name of this DescribeForecastResponse.
        :param forecast_types: The forecast_types of this DescribeForecastResponse.
        :param predictor_arn: The predictor_arn of this DescribeForecastResponse.
        :param dataset_group_arn: The dataset_group_arn of this DescribeForecastResponse.
        :param estimated_time_remaining_in_minutes: The estimated_time_remaining_in_minutes of this DescribeForecastResponse.
        :param status: The status of this DescribeForecastResponse.
        :param message: The message of this DescribeForecastResponse.
        :param creation_time: The creation_time of this DescribeForecastResponse.
        :param last_modification_time: The last_modification_time of this DescribeForecastResponse.
        :param time_series_selector: The time_series_selector of this DescribeForecastResponse.
        """
        self.openapi_types = {
            'forecast_arn': str,
            'forecast_name': str,
            'forecast_types': List,
            'predictor_arn': str,
            'dataset_group_arn': str,
            'estimated_time_remaining_in_minutes': int,
            'status': str,
            'message': str,
            'creation_time': datetime,
            'last_modification_time': datetime,
            'time_series_selector': DescribeForecastResponseTimeSeriesSelector
        }

        self.attribute_map = {
            'forecast_arn': 'ForecastArn',
            'forecast_name': 'ForecastName',
            'forecast_types': 'ForecastTypes',
            'predictor_arn': 'PredictorArn',
            'dataset_group_arn': 'DatasetGroupArn',
            'estimated_time_remaining_in_minutes': 'EstimatedTimeRemainingInMinutes',
            'status': 'Status',
            'message': 'Message',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime',
            'time_series_selector': 'TimeSeriesSelector'
        }

        self._forecast_arn = forecast_arn
        self._forecast_name = forecast_name
        self._forecast_types = forecast_types
        self._predictor_arn = predictor_arn
        self._dataset_group_arn = dataset_group_arn
        self._estimated_time_remaining_in_minutes = estimated_time_remaining_in_minutes
        self._status = status
        self._message = message
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time
        self._time_series_selector = time_series_selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeForecastResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeForecastResponse of this DescribeForecastResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast_arn(self):
        """Gets the forecast_arn of this DescribeForecastResponse.


        :return: The forecast_arn of this DescribeForecastResponse.
        :rtype: str
        """
        return self._forecast_arn

    @forecast_arn.setter
    def forecast_arn(self, forecast_arn):
        """Sets the forecast_arn of this DescribeForecastResponse.


        :param forecast_arn: The forecast_arn of this DescribeForecastResponse.
        :type forecast_arn: str
        """

        self._forecast_arn = forecast_arn

    @property
    def forecast_name(self):
        """Gets the forecast_name of this DescribeForecastResponse.


        :return: The forecast_name of this DescribeForecastResponse.
        :rtype: str
        """
        return self._forecast_name

    @forecast_name.setter
    def forecast_name(self, forecast_name):
        """Sets the forecast_name of this DescribeForecastResponse.


        :param forecast_name: The forecast_name of this DescribeForecastResponse.
        :type forecast_name: str
        """

        self._forecast_name = forecast_name

    @property
    def forecast_types(self):
        """Gets the forecast_types of this DescribeForecastResponse.


        :return: The forecast_types of this DescribeForecastResponse.
        :rtype: List
        """
        return self._forecast_types

    @forecast_types.setter
    def forecast_types(self, forecast_types):
        """Sets the forecast_types of this DescribeForecastResponse.


        :param forecast_types: The forecast_types of this DescribeForecastResponse.
        :type forecast_types: List
        """

        self._forecast_types = forecast_types

    @property
    def predictor_arn(self):
        """Gets the predictor_arn of this DescribeForecastResponse.


        :return: The predictor_arn of this DescribeForecastResponse.
        :rtype: str
        """
        return self._predictor_arn

    @predictor_arn.setter
    def predictor_arn(self, predictor_arn):
        """Sets the predictor_arn of this DescribeForecastResponse.


        :param predictor_arn: The predictor_arn of this DescribeForecastResponse.
        :type predictor_arn: str
        """

        self._predictor_arn = predictor_arn

    @property
    def dataset_group_arn(self):
        """Gets the dataset_group_arn of this DescribeForecastResponse.


        :return: The dataset_group_arn of this DescribeForecastResponse.
        :rtype: str
        """
        return self._dataset_group_arn

    @dataset_group_arn.setter
    def dataset_group_arn(self, dataset_group_arn):
        """Sets the dataset_group_arn of this DescribeForecastResponse.


        :param dataset_group_arn: The dataset_group_arn of this DescribeForecastResponse.
        :type dataset_group_arn: str
        """

        self._dataset_group_arn = dataset_group_arn

    @property
    def estimated_time_remaining_in_minutes(self):
        """Gets the estimated_time_remaining_in_minutes of this DescribeForecastResponse.


        :return: The estimated_time_remaining_in_minutes of this DescribeForecastResponse.
        :rtype: int
        """
        return self._estimated_time_remaining_in_minutes

    @estimated_time_remaining_in_minutes.setter
    def estimated_time_remaining_in_minutes(self, estimated_time_remaining_in_minutes):
        """Sets the estimated_time_remaining_in_minutes of this DescribeForecastResponse.


        :param estimated_time_remaining_in_minutes: The estimated_time_remaining_in_minutes of this DescribeForecastResponse.
        :type estimated_time_remaining_in_minutes: int
        """

        self._estimated_time_remaining_in_minutes = estimated_time_remaining_in_minutes

    @property
    def status(self):
        """Gets the status of this DescribeForecastResponse.


        :return: The status of this DescribeForecastResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeForecastResponse.


        :param status: The status of this DescribeForecastResponse.
        :type status: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this DescribeForecastResponse.


        :return: The message of this DescribeForecastResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DescribeForecastResponse.


        :param message: The message of this DescribeForecastResponse.
        :type message: str
        """

        self._message = message

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeForecastResponse.


        :return: The creation_time of this DescribeForecastResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeForecastResponse.


        :param creation_time: The creation_time of this DescribeForecastResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this DescribeForecastResponse.


        :return: The last_modification_time of this DescribeForecastResponse.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this DescribeForecastResponse.


        :param last_modification_time: The last_modification_time of this DescribeForecastResponse.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time

    @property
    def time_series_selector(self):
        """Gets the time_series_selector of this DescribeForecastResponse.


        :return: The time_series_selector of this DescribeForecastResponse.
        :rtype: DescribeForecastResponseTimeSeriesSelector
        """
        return self._time_series_selector

    @time_series_selector.setter
    def time_series_selector(self, time_series_selector):
        """Sets the time_series_selector of this DescribeForecastResponse.


        :param time_series_selector: The time_series_selector of this DescribeForecastResponse.
        :type time_series_selector: DescribeForecastResponseTimeSeriesSelector
        """

        self._time_series_selector = time_series_selector
