# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hyper_parameter_tuning_job_config_parameter_ranges import HyperParameterTuningJobConfigParameterRanges
from openapi_server import util


class HyperParameterTuningJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameter_ranges: HyperParameterTuningJobConfigParameterRanges=None):
        """HyperParameterTuningJobConfig - a model defined in OpenAPI

        :param parameter_ranges: The parameter_ranges of this HyperParameterTuningJobConfig.
        """
        self.openapi_types = {
            'parameter_ranges': HyperParameterTuningJobConfigParameterRanges
        }

        self.attribute_map = {
            'parameter_ranges': 'ParameterRanges'
        }

        self._parameter_ranges = parameter_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperParameterTuningJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperParameterTuningJobConfig of this HyperParameterTuningJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameter_ranges(self):
        """Gets the parameter_ranges of this HyperParameterTuningJobConfig.


        :return: The parameter_ranges of this HyperParameterTuningJobConfig.
        :rtype: HyperParameterTuningJobConfigParameterRanges
        """
        return self._parameter_ranges

    @parameter_ranges.setter
    def parameter_ranges(self, parameter_ranges):
        """Sets the parameter_ranges of this HyperParameterTuningJobConfig.


        :param parameter_ranges: The parameter_ranges of this HyperParameterTuningJobConfig.
        :type parameter_ranges: HyperParameterTuningJobConfigParameterRanges
        """

        self._parameter_ranges = parameter_ranges
