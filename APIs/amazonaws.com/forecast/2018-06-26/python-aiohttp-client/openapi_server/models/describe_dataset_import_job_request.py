# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeDatasetImportJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_import_job_arn: str=None):
        """DescribeDatasetImportJobRequest - a model defined in OpenAPI

        :param dataset_import_job_arn: The dataset_import_job_arn of this DescribeDatasetImportJobRequest.
        """
        self.openapi_types = {
            'dataset_import_job_arn': str
        }

        self.attribute_map = {
            'dataset_import_job_arn': 'DatasetImportJobArn'
        }

        self._dataset_import_job_arn = dataset_import_job_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDatasetImportJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDatasetImportJobRequest of this DescribeDatasetImportJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_import_job_arn(self):
        """Gets the dataset_import_job_arn of this DescribeDatasetImportJobRequest.


        :return: The dataset_import_job_arn of this DescribeDatasetImportJobRequest.
        :rtype: str
        """
        return self._dataset_import_job_arn

    @dataset_import_job_arn.setter
    def dataset_import_job_arn(self, dataset_import_job_arn):
        """Sets the dataset_import_job_arn of this DescribeDatasetImportJobRequest.


        :param dataset_import_job_arn: The dataset_import_job_arn of this DescribeDatasetImportJobRequest.
        :type dataset_import_job_arn: str
        """
        if dataset_import_job_arn is None:
            raise ValueError("Invalid value for `dataset_import_job_arn`, must not be `None`")

        self._dataset_import_job_arn = dataset_import_job_arn
