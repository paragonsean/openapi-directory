# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitorConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitor_name: str=None):
        """MonitorConfig - a model defined in OpenAPI

        :param monitor_name: The monitor_name of this MonitorConfig.
        """
        self.openapi_types = {
            'monitor_name': str
        }

        self.attribute_map = {
            'monitor_name': 'MonitorName'
        }

        self._monitor_name = monitor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitorConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitorConfig of this MonitorConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitor_name(self):
        """Gets the monitor_name of this MonitorConfig.


        :return: The monitor_name of this MonitorConfig.
        :rtype: str
        """
        return self._monitor_name

    @monitor_name.setter
    def monitor_name(self, monitor_name):
        """Sets the monitor_name of this MonitorConfig.


        :param monitor_name: The monitor_name of this MonitorConfig.
        :type monitor_name: str
        """
        if monitor_name is None:
            raise ValueError("Invalid value for `monitor_name`, must not be `None`")

        self._monitor_name = monitor_name
