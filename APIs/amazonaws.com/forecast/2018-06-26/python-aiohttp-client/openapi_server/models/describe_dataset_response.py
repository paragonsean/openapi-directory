# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_type import DatasetType
from openapi_server.models.describe_dataset_response_encryption_config import DescribeDatasetResponseEncryptionConfig
from openapi_server.models.describe_dataset_response_schema import DescribeDatasetResponseSchema
from openapi_server.models.domain import Domain
from openapi_server import util


class DescribeDatasetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_arn: str=None, dataset_name: str=None, domain: Domain=None, dataset_type: DatasetType=None, data_frequency: str=None, _schema: DescribeDatasetResponseSchema=None, encryption_config: DescribeDatasetResponseEncryptionConfig=None, status: str=None, creation_time: datetime=None, last_modification_time: datetime=None):
        """DescribeDatasetResponse - a model defined in OpenAPI

        :param dataset_arn: The dataset_arn of this DescribeDatasetResponse.
        :param dataset_name: The dataset_name of this DescribeDatasetResponse.
        :param domain: The domain of this DescribeDatasetResponse.
        :param dataset_type: The dataset_type of this DescribeDatasetResponse.
        :param data_frequency: The data_frequency of this DescribeDatasetResponse.
        :param _schema: The _schema of this DescribeDatasetResponse.
        :param encryption_config: The encryption_config of this DescribeDatasetResponse.
        :param status: The status of this DescribeDatasetResponse.
        :param creation_time: The creation_time of this DescribeDatasetResponse.
        :param last_modification_time: The last_modification_time of this DescribeDatasetResponse.
        """
        self.openapi_types = {
            'dataset_arn': str,
            'dataset_name': str,
            'domain': Domain,
            'dataset_type': DatasetType,
            'data_frequency': str,
            '_schema': DescribeDatasetResponseSchema,
            'encryption_config': DescribeDatasetResponseEncryptionConfig,
            'status': str,
            'creation_time': datetime,
            'last_modification_time': datetime
        }

        self.attribute_map = {
            'dataset_arn': 'DatasetArn',
            'dataset_name': 'DatasetName',
            'domain': 'Domain',
            'dataset_type': 'DatasetType',
            'data_frequency': 'DataFrequency',
            '_schema': 'Schema',
            'encryption_config': 'EncryptionConfig',
            'status': 'Status',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime'
        }

        self._dataset_arn = dataset_arn
        self._dataset_name = dataset_name
        self._domain = domain
        self._dataset_type = dataset_type
        self._data_frequency = data_frequency
        self.__schema = _schema
        self._encryption_config = encryption_config
        self._status = status
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDatasetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDatasetResponse of this DescribeDatasetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this DescribeDatasetResponse.


        :return: The dataset_arn of this DescribeDatasetResponse.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this DescribeDatasetResponse.


        :param dataset_arn: The dataset_arn of this DescribeDatasetResponse.
        :type dataset_arn: str
        """

        self._dataset_arn = dataset_arn

    @property
    def dataset_name(self):
        """Gets the dataset_name of this DescribeDatasetResponse.


        :return: The dataset_name of this DescribeDatasetResponse.
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this DescribeDatasetResponse.


        :param dataset_name: The dataset_name of this DescribeDatasetResponse.
        :type dataset_name: str
        """

        self._dataset_name = dataset_name

    @property
    def domain(self):
        """Gets the domain of this DescribeDatasetResponse.


        :return: The domain of this DescribeDatasetResponse.
        :rtype: Domain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DescribeDatasetResponse.


        :param domain: The domain of this DescribeDatasetResponse.
        :type domain: Domain
        """

        self._domain = domain

    @property
    def dataset_type(self):
        """Gets the dataset_type of this DescribeDatasetResponse.


        :return: The dataset_type of this DescribeDatasetResponse.
        :rtype: DatasetType
        """
        return self._dataset_type

    @dataset_type.setter
    def dataset_type(self, dataset_type):
        """Sets the dataset_type of this DescribeDatasetResponse.


        :param dataset_type: The dataset_type of this DescribeDatasetResponse.
        :type dataset_type: DatasetType
        """

        self._dataset_type = dataset_type

    @property
    def data_frequency(self):
        """Gets the data_frequency of this DescribeDatasetResponse.


        :return: The data_frequency of this DescribeDatasetResponse.
        :rtype: str
        """
        return self._data_frequency

    @data_frequency.setter
    def data_frequency(self, data_frequency):
        """Sets the data_frequency of this DescribeDatasetResponse.


        :param data_frequency: The data_frequency of this DescribeDatasetResponse.
        :type data_frequency: str
        """

        self._data_frequency = data_frequency

    @property
    def _schema(self):
        """Gets the _schema of this DescribeDatasetResponse.


        :return: The _schema of this DescribeDatasetResponse.
        :rtype: DescribeDatasetResponseSchema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this DescribeDatasetResponse.


        :param _schema: The _schema of this DescribeDatasetResponse.
        :type _schema: DescribeDatasetResponseSchema
        """

        self.__schema = _schema

    @property
    def encryption_config(self):
        """Gets the encryption_config of this DescribeDatasetResponse.


        :return: The encryption_config of this DescribeDatasetResponse.
        :rtype: DescribeDatasetResponseEncryptionConfig
        """
        return self._encryption_config

    @encryption_config.setter
    def encryption_config(self, encryption_config):
        """Sets the encryption_config of this DescribeDatasetResponse.


        :param encryption_config: The encryption_config of this DescribeDatasetResponse.
        :type encryption_config: DescribeDatasetResponseEncryptionConfig
        """

        self._encryption_config = encryption_config

    @property
    def status(self):
        """Gets the status of this DescribeDatasetResponse.


        :return: The status of this DescribeDatasetResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeDatasetResponse.


        :param status: The status of this DescribeDatasetResponse.
        :type status: str
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeDatasetResponse.


        :return: The creation_time of this DescribeDatasetResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeDatasetResponse.


        :param creation_time: The creation_time of this DescribeDatasetResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this DescribeDatasetResponse.


        :return: The last_modification_time of this DescribeDatasetResponse.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this DescribeDatasetResponse.


        :param last_modification_time: The last_modification_time of this DescribeDatasetResponse.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time
