# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Featurization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_name: str=None, featurization_pipeline: List=None):
        """Featurization - a model defined in OpenAPI

        :param attribute_name: The attribute_name of this Featurization.
        :param featurization_pipeline: The featurization_pipeline of this Featurization.
        """
        self.openapi_types = {
            'attribute_name': str,
            'featurization_pipeline': List
        }

        self.attribute_map = {
            'attribute_name': 'AttributeName',
            'featurization_pipeline': 'FeaturizationPipeline'
        }

        self._attribute_name = attribute_name
        self._featurization_pipeline = featurization_pipeline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Featurization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Featurization of this Featurization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_name(self):
        """Gets the attribute_name of this Featurization.


        :return: The attribute_name of this Featurization.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this Featurization.


        :param attribute_name: The attribute_name of this Featurization.
        :type attribute_name: str
        """
        if attribute_name is None:
            raise ValueError("Invalid value for `attribute_name`, must not be `None`")

        self._attribute_name = attribute_name

    @property
    def featurization_pipeline(self):
        """Gets the featurization_pipeline of this Featurization.


        :return: The featurization_pipeline of this Featurization.
        :rtype: List
        """
        return self._featurization_pipeline

    @featurization_pipeline.setter
    def featurization_pipeline(self, featurization_pipeline):
        """Sets the featurization_pipeline of this Featurization.


        :param featurization_pipeline: The featurization_pipeline of this Featurization.
        :type featurization_pipeline: List
        """

        self._featurization_pipeline = featurization_pipeline
