# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_dataset_import_job_response_data_source import DescribeDatasetImportJobResponseDataSource
from openapi_server.models.import_mode import ImportMode
from openapi_server import util


class DescribeDatasetImportJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_import_job_name: str=None, dataset_import_job_arn: str=None, dataset_arn: str=None, timestamp_format: str=None, time_zone: str=None, use_geolocation_for_time_zone: bool=None, geolocation_format: str=None, data_source: DescribeDatasetImportJobResponseDataSource=None, estimated_time_remaining_in_minutes: int=None, field_statistics: Dict=None, data_size: float=None, status: str=None, message: str=None, creation_time: datetime=None, last_modification_time: datetime=None, format: str=None, import_mode: ImportMode=None):
        """DescribeDatasetImportJobResponse - a model defined in OpenAPI

        :param dataset_import_job_name: The dataset_import_job_name of this DescribeDatasetImportJobResponse.
        :param dataset_import_job_arn: The dataset_import_job_arn of this DescribeDatasetImportJobResponse.
        :param dataset_arn: The dataset_arn of this DescribeDatasetImportJobResponse.
        :param timestamp_format: The timestamp_format of this DescribeDatasetImportJobResponse.
        :param time_zone: The time_zone of this DescribeDatasetImportJobResponse.
        :param use_geolocation_for_time_zone: The use_geolocation_for_time_zone of this DescribeDatasetImportJobResponse.
        :param geolocation_format: The geolocation_format of this DescribeDatasetImportJobResponse.
        :param data_source: The data_source of this DescribeDatasetImportJobResponse.
        :param estimated_time_remaining_in_minutes: The estimated_time_remaining_in_minutes of this DescribeDatasetImportJobResponse.
        :param field_statistics: The field_statistics of this DescribeDatasetImportJobResponse.
        :param data_size: The data_size of this DescribeDatasetImportJobResponse.
        :param status: The status of this DescribeDatasetImportJobResponse.
        :param message: The message of this DescribeDatasetImportJobResponse.
        :param creation_time: The creation_time of this DescribeDatasetImportJobResponse.
        :param last_modification_time: The last_modification_time of this DescribeDatasetImportJobResponse.
        :param format: The format of this DescribeDatasetImportJobResponse.
        :param import_mode: The import_mode of this DescribeDatasetImportJobResponse.
        """
        self.openapi_types = {
            'dataset_import_job_name': str,
            'dataset_import_job_arn': str,
            'dataset_arn': str,
            'timestamp_format': str,
            'time_zone': str,
            'use_geolocation_for_time_zone': bool,
            'geolocation_format': str,
            'data_source': DescribeDatasetImportJobResponseDataSource,
            'estimated_time_remaining_in_minutes': int,
            'field_statistics': Dict,
            'data_size': float,
            'status': str,
            'message': str,
            'creation_time': datetime,
            'last_modification_time': datetime,
            'format': str,
            'import_mode': ImportMode
        }

        self.attribute_map = {
            'dataset_import_job_name': 'DatasetImportJobName',
            'dataset_import_job_arn': 'DatasetImportJobArn',
            'dataset_arn': 'DatasetArn',
            'timestamp_format': 'TimestampFormat',
            'time_zone': 'TimeZone',
            'use_geolocation_for_time_zone': 'UseGeolocationForTimeZone',
            'geolocation_format': 'GeolocationFormat',
            'data_source': 'DataSource',
            'estimated_time_remaining_in_minutes': 'EstimatedTimeRemainingInMinutes',
            'field_statistics': 'FieldStatistics',
            'data_size': 'DataSize',
            'status': 'Status',
            'message': 'Message',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime',
            'format': 'Format',
            'import_mode': 'ImportMode'
        }

        self._dataset_import_job_name = dataset_import_job_name
        self._dataset_import_job_arn = dataset_import_job_arn
        self._dataset_arn = dataset_arn
        self._timestamp_format = timestamp_format
        self._time_zone = time_zone
        self._use_geolocation_for_time_zone = use_geolocation_for_time_zone
        self._geolocation_format = geolocation_format
        self._data_source = data_source
        self._estimated_time_remaining_in_minutes = estimated_time_remaining_in_minutes
        self._field_statistics = field_statistics
        self._data_size = data_size
        self._status = status
        self._message = message
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time
        self._format = format
        self._import_mode = import_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDatasetImportJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDatasetImportJobResponse of this DescribeDatasetImportJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_import_job_name(self):
        """Gets the dataset_import_job_name of this DescribeDatasetImportJobResponse.


        :return: The dataset_import_job_name of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._dataset_import_job_name

    @dataset_import_job_name.setter
    def dataset_import_job_name(self, dataset_import_job_name):
        """Sets the dataset_import_job_name of this DescribeDatasetImportJobResponse.


        :param dataset_import_job_name: The dataset_import_job_name of this DescribeDatasetImportJobResponse.
        :type dataset_import_job_name: str
        """

        self._dataset_import_job_name = dataset_import_job_name

    @property
    def dataset_import_job_arn(self):
        """Gets the dataset_import_job_arn of this DescribeDatasetImportJobResponse.


        :return: The dataset_import_job_arn of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._dataset_import_job_arn

    @dataset_import_job_arn.setter
    def dataset_import_job_arn(self, dataset_import_job_arn):
        """Sets the dataset_import_job_arn of this DescribeDatasetImportJobResponse.


        :param dataset_import_job_arn: The dataset_import_job_arn of this DescribeDatasetImportJobResponse.
        :type dataset_import_job_arn: str
        """

        self._dataset_import_job_arn = dataset_import_job_arn

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this DescribeDatasetImportJobResponse.


        :return: The dataset_arn of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this DescribeDatasetImportJobResponse.


        :param dataset_arn: The dataset_arn of this DescribeDatasetImportJobResponse.
        :type dataset_arn: str
        """

        self._dataset_arn = dataset_arn

    @property
    def timestamp_format(self):
        """Gets the timestamp_format of this DescribeDatasetImportJobResponse.


        :return: The timestamp_format of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._timestamp_format

    @timestamp_format.setter
    def timestamp_format(self, timestamp_format):
        """Sets the timestamp_format of this DescribeDatasetImportJobResponse.


        :param timestamp_format: The timestamp_format of this DescribeDatasetImportJobResponse.
        :type timestamp_format: str
        """

        self._timestamp_format = timestamp_format

    @property
    def time_zone(self):
        """Gets the time_zone of this DescribeDatasetImportJobResponse.


        :return: The time_zone of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this DescribeDatasetImportJobResponse.


        :param time_zone: The time_zone of this DescribeDatasetImportJobResponse.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def use_geolocation_for_time_zone(self):
        """Gets the use_geolocation_for_time_zone of this DescribeDatasetImportJobResponse.


        :return: The use_geolocation_for_time_zone of this DescribeDatasetImportJobResponse.
        :rtype: bool
        """
        return self._use_geolocation_for_time_zone

    @use_geolocation_for_time_zone.setter
    def use_geolocation_for_time_zone(self, use_geolocation_for_time_zone):
        """Sets the use_geolocation_for_time_zone of this DescribeDatasetImportJobResponse.


        :param use_geolocation_for_time_zone: The use_geolocation_for_time_zone of this DescribeDatasetImportJobResponse.
        :type use_geolocation_for_time_zone: bool
        """

        self._use_geolocation_for_time_zone = use_geolocation_for_time_zone

    @property
    def geolocation_format(self):
        """Gets the geolocation_format of this DescribeDatasetImportJobResponse.


        :return: The geolocation_format of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._geolocation_format

    @geolocation_format.setter
    def geolocation_format(self, geolocation_format):
        """Sets the geolocation_format of this DescribeDatasetImportJobResponse.


        :param geolocation_format: The geolocation_format of this DescribeDatasetImportJobResponse.
        :type geolocation_format: str
        """

        self._geolocation_format = geolocation_format

    @property
    def data_source(self):
        """Gets the data_source of this DescribeDatasetImportJobResponse.


        :return: The data_source of this DescribeDatasetImportJobResponse.
        :rtype: DescribeDatasetImportJobResponseDataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this DescribeDatasetImportJobResponse.


        :param data_source: The data_source of this DescribeDatasetImportJobResponse.
        :type data_source: DescribeDatasetImportJobResponseDataSource
        """

        self._data_source = data_source

    @property
    def estimated_time_remaining_in_minutes(self):
        """Gets the estimated_time_remaining_in_minutes of this DescribeDatasetImportJobResponse.


        :return: The estimated_time_remaining_in_minutes of this DescribeDatasetImportJobResponse.
        :rtype: int
        """
        return self._estimated_time_remaining_in_minutes

    @estimated_time_remaining_in_minutes.setter
    def estimated_time_remaining_in_minutes(self, estimated_time_remaining_in_minutes):
        """Sets the estimated_time_remaining_in_minutes of this DescribeDatasetImportJobResponse.


        :param estimated_time_remaining_in_minutes: The estimated_time_remaining_in_minutes of this DescribeDatasetImportJobResponse.
        :type estimated_time_remaining_in_minutes: int
        """

        self._estimated_time_remaining_in_minutes = estimated_time_remaining_in_minutes

    @property
    def field_statistics(self):
        """Gets the field_statistics of this DescribeDatasetImportJobResponse.


        :return: The field_statistics of this DescribeDatasetImportJobResponse.
        :rtype: Dict
        """
        return self._field_statistics

    @field_statistics.setter
    def field_statistics(self, field_statistics):
        """Sets the field_statistics of this DescribeDatasetImportJobResponse.


        :param field_statistics: The field_statistics of this DescribeDatasetImportJobResponse.
        :type field_statistics: Dict
        """

        self._field_statistics = field_statistics

    @property
    def data_size(self):
        """Gets the data_size of this DescribeDatasetImportJobResponse.


        :return: The data_size of this DescribeDatasetImportJobResponse.
        :rtype: float
        """
        return self._data_size

    @data_size.setter
    def data_size(self, data_size):
        """Sets the data_size of this DescribeDatasetImportJobResponse.


        :param data_size: The data_size of this DescribeDatasetImportJobResponse.
        :type data_size: float
        """

        self._data_size = data_size

    @property
    def status(self):
        """Gets the status of this DescribeDatasetImportJobResponse.


        :return: The status of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeDatasetImportJobResponse.


        :param status: The status of this DescribeDatasetImportJobResponse.
        :type status: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this DescribeDatasetImportJobResponse.


        :return: The message of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DescribeDatasetImportJobResponse.


        :param message: The message of this DescribeDatasetImportJobResponse.
        :type message: str
        """

        self._message = message

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeDatasetImportJobResponse.


        :return: The creation_time of this DescribeDatasetImportJobResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeDatasetImportJobResponse.


        :param creation_time: The creation_time of this DescribeDatasetImportJobResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this DescribeDatasetImportJobResponse.


        :return: The last_modification_time of this DescribeDatasetImportJobResponse.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this DescribeDatasetImportJobResponse.


        :param last_modification_time: The last_modification_time of this DescribeDatasetImportJobResponse.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time

    @property
    def format(self):
        """Gets the format of this DescribeDatasetImportJobResponse.


        :return: The format of this DescribeDatasetImportJobResponse.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this DescribeDatasetImportJobResponse.


        :param format: The format of this DescribeDatasetImportJobResponse.
        :type format: str
        """

        self._format = format

    @property
    def import_mode(self):
        """Gets the import_mode of this DescribeDatasetImportJobResponse.


        :return: The import_mode of this DescribeDatasetImportJobResponse.
        :rtype: ImportMode
        """
        return self._import_mode

    @import_mode.setter
    def import_mode(self, import_mode):
        """Sets the import_mode of this DescribeDatasetImportJobResponse.


        :param import_mode: The import_mode of this DescribeDatasetImportJobResponse.
        :type import_mode: ImportMode
        """

        self._import_mode = import_mode
