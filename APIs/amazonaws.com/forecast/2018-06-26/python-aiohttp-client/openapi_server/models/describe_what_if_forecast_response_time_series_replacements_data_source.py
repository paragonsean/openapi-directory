# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_schema import ModelSchema
from openapi_server.models.s3_config import S3Config
from openapi_server import util


class DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_config: S3Config=None, _schema: ModelSchema=None, format: str=None, timestamp_format: str=None):
        """DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource - a model defined in OpenAPI

        :param s3_config: The s3_config of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :param _schema: The _schema of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :param format: The format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :param timestamp_format: The timestamp_format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        """
        self.openapi_types = {
            's3_config': S3Config,
            '_schema': ModelSchema,
            'format': str,
            'timestamp_format': str
        }

        self.attribute_map = {
            's3_config': 'S3Config',
            '_schema': 'Schema',
            'format': 'Format',
            'timestamp_format': 'TimestampFormat'
        }

        self._s3_config = s3_config
        self.__schema = _schema
        self._format = format
        self._timestamp_format = timestamp_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWhatIfForecastResponse_TimeSeriesReplacementsDataSource of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_config(self):
        """Gets the s3_config of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :return: The s3_config of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :rtype: S3Config
        """
        return self._s3_config

    @s3_config.setter
    def s3_config(self, s3_config):
        """Sets the s3_config of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :param s3_config: The s3_config of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :type s3_config: S3Config
        """
        if s3_config is None:
            raise ValueError("Invalid value for `s3_config`, must not be `None`")

        self._s3_config = s3_config

    @property
    def _schema(self):
        """Gets the _schema of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :return: The _schema of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :rtype: ModelSchema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :param _schema: The _schema of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :type _schema: ModelSchema
        """
        if _schema is None:
            raise ValueError("Invalid value for `_schema`, must not be `None`")

        self.__schema = _schema

    @property
    def format(self):
        """Gets the format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :return: The format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :param format: The format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :type format: str
        """

        self._format = format

    @property
    def timestamp_format(self):
        """Gets the timestamp_format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :return: The timestamp_format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :rtype: str
        """
        return self._timestamp_format

    @timestamp_format.setter
    def timestamp_format(self, timestamp_format):
        """Sets the timestamp_format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.


        :param timestamp_format: The timestamp_format of this DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.
        :type timestamp_format: str
        """

        self._timestamp_format = timestamp_format
