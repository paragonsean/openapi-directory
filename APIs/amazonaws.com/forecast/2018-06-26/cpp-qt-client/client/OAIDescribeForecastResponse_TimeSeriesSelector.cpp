/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeForecastResponse_TimeSeriesSelector.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeForecastResponse_TimeSeriesSelector::OAIDescribeForecastResponse_TimeSeriesSelector(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeForecastResponse_TimeSeriesSelector::OAIDescribeForecastResponse_TimeSeriesSelector() {
    this->initializeModel();
}

OAIDescribeForecastResponse_TimeSeriesSelector::~OAIDescribeForecastResponse_TimeSeriesSelector() {}

void OAIDescribeForecastResponse_TimeSeriesSelector::initializeModel() {

    m_time_series_identifiers_isSet = false;
    m_time_series_identifiers_isValid = false;
}

void OAIDescribeForecastResponse_TimeSeriesSelector::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeForecastResponse_TimeSeriesSelector::fromJsonObject(QJsonObject json) {

    m_time_series_identifiers_isValid = ::OpenAPI::fromJsonValue(m_time_series_identifiers, json[QString("TimeSeriesIdentifiers")]);
    m_time_series_identifiers_isSet = !json[QString("TimeSeriesIdentifiers")].isNull() && m_time_series_identifiers_isValid;
}

QString OAIDescribeForecastResponse_TimeSeriesSelector::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeForecastResponse_TimeSeriesSelector::asJsonObject() const {
    QJsonObject obj;
    if (m_time_series_identifiers.isSet()) {
        obj.insert(QString("TimeSeriesIdentifiers"), ::OpenAPI::toJsonValue(m_time_series_identifiers));
    }
    return obj;
}

OAITimeSeriesSelector_TimeSeriesIdentifiers OAIDescribeForecastResponse_TimeSeriesSelector::getTimeSeriesIdentifiers() const {
    return m_time_series_identifiers;
}
void OAIDescribeForecastResponse_TimeSeriesSelector::setTimeSeriesIdentifiers(const OAITimeSeriesSelector_TimeSeriesIdentifiers &time_series_identifiers) {
    m_time_series_identifiers = time_series_identifiers;
    m_time_series_identifiers_isSet = true;
}

bool OAIDescribeForecastResponse_TimeSeriesSelector::is_time_series_identifiers_Set() const{
    return m_time_series_identifiers_isSet;
}

bool OAIDescribeForecastResponse_TimeSeriesSelector::is_time_series_identifiers_Valid() const{
    return m_time_series_identifiers_isValid;
}

bool OAIDescribeForecastResponse_TimeSeriesSelector::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_series_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeForecastResponse_TimeSeriesSelector::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
