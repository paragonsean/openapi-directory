/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAutoPredictorRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAutoPredictorRequest::OAIDescribeAutoPredictorRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAutoPredictorRequest::OAIDescribeAutoPredictorRequest() {
    this->initializeModel();
}

OAIDescribeAutoPredictorRequest::~OAIDescribeAutoPredictorRequest() {}

void OAIDescribeAutoPredictorRequest::initializeModel() {

    m_predictor_arn_isSet = false;
    m_predictor_arn_isValid = false;
}

void OAIDescribeAutoPredictorRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAutoPredictorRequest::fromJsonObject(QJsonObject json) {

    m_predictor_arn_isValid = ::OpenAPI::fromJsonValue(m_predictor_arn, json[QString("PredictorArn")]);
    m_predictor_arn_isSet = !json[QString("PredictorArn")].isNull() && m_predictor_arn_isValid;
}

QString OAIDescribeAutoPredictorRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAutoPredictorRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_predictor_arn_isSet) {
        obj.insert(QString("PredictorArn"), ::OpenAPI::toJsonValue(m_predictor_arn));
    }
    return obj;
}

QString OAIDescribeAutoPredictorRequest::getPredictorArn() const {
    return m_predictor_arn;
}
void OAIDescribeAutoPredictorRequest::setPredictorArn(const QString &predictor_arn) {
    m_predictor_arn = predictor_arn;
    m_predictor_arn_isSet = true;
}

bool OAIDescribeAutoPredictorRequest::is_predictor_arn_Set() const{
    return m_predictor_arn_isSet;
}

bool OAIDescribeAutoPredictorRequest::is_predictor_arn_Valid() const{
    return m_predictor_arn_isValid;
}

bool OAIDescribeAutoPredictorRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predictor_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAutoPredictorRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_predictor_arn_isValid && true;
}

} // namespace OpenAPI
