/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePredictorRequest.h
 *
 * 
 */

#ifndef OAICreatePredictorRequest_H
#define OAICreatePredictorRequest_H

#include <QJsonObject>

#include "OAIAutoMLOverrideStrategy.h"
#include "OAICreateDatasetRequest_EncryptionConfig.h"
#include "OAICreatePredictorRequest_EvaluationParameters.h"
#include "OAICreatePredictorRequest_FeaturizationConfig.h"
#include "OAICreatePredictorRequest_HPOConfig.h"
#include "OAICreatePredictorRequest_InputDataConfig.h"
#include "OAIOptimizationMetric.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreatePredictorRequest_EvaluationParameters;
class OAICreatePredictorRequest_HPOConfig;
class OAICreatePredictorRequest_InputDataConfig;
class OAICreatePredictorRequest_FeaturizationConfig;
class OAICreateDatasetRequest_EncryptionConfig;

class OAICreatePredictorRequest : public OAIObject {
public:
    OAICreatePredictorRequest();
    OAICreatePredictorRequest(QString json);
    ~OAICreatePredictorRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPredictorName() const;
    void setPredictorName(const QString &predictor_name);
    bool is_predictor_name_Set() const;
    bool is_predictor_name_Valid() const;

    QString getAlgorithmArn() const;
    void setAlgorithmArn(const QString &algorithm_arn);
    bool is_algorithm_arn_Set() const;
    bool is_algorithm_arn_Valid() const;

    qint32 getForecastHorizon() const;
    void setForecastHorizon(const qint32 &forecast_horizon);
    bool is_forecast_horizon_Set() const;
    bool is_forecast_horizon_Valid() const;

    QList getForecastTypes() const;
    void setForecastTypes(const QList &forecast_types);
    bool is_forecast_types_Set() const;
    bool is_forecast_types_Valid() const;

    bool getPerformAutoMl() const;
    void setPerformAutoMl(const bool &perform_auto_ml);
    bool is_perform_auto_ml_Set() const;
    bool is_perform_auto_ml_Valid() const;

    OAIAutoMLOverrideStrategy getAutoMlOverrideStrategy() const;
    void setAutoMlOverrideStrategy(const OAIAutoMLOverrideStrategy &auto_ml_override_strategy);
    bool is_auto_ml_override_strategy_Set() const;
    bool is_auto_ml_override_strategy_Valid() const;

    bool getPerformHpo() const;
    void setPerformHpo(const bool &perform_hpo);
    bool is_perform_hpo_Set() const;
    bool is_perform_hpo_Valid() const;

    QMap getTrainingParameters() const;
    void setTrainingParameters(const QMap &training_parameters);
    bool is_training_parameters_Set() const;
    bool is_training_parameters_Valid() const;

    OAICreatePredictorRequest_EvaluationParameters getEvaluationParameters() const;
    void setEvaluationParameters(const OAICreatePredictorRequest_EvaluationParameters &evaluation_parameters);
    bool is_evaluation_parameters_Set() const;
    bool is_evaluation_parameters_Valid() const;

    OAICreatePredictorRequest_HPOConfig getHpoConfig() const;
    void setHpoConfig(const OAICreatePredictorRequest_HPOConfig &hpo_config);
    bool is_hpo_config_Set() const;
    bool is_hpo_config_Valid() const;

    OAICreatePredictorRequest_InputDataConfig getInputDataConfig() const;
    void setInputDataConfig(const OAICreatePredictorRequest_InputDataConfig &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAICreatePredictorRequest_FeaturizationConfig getFeaturizationConfig() const;
    void setFeaturizationConfig(const OAICreatePredictorRequest_FeaturizationConfig &featurization_config);
    bool is_featurization_config_Set() const;
    bool is_featurization_config_Valid() const;

    OAICreateDatasetRequest_EncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAICreateDatasetRequest_EncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIOptimizationMetric getOptimizationMetric() const;
    void setOptimizationMetric(const OAIOptimizationMetric &optimization_metric);
    bool is_optimization_metric_Set() const;
    bool is_optimization_metric_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_predictor_name;
    bool m_predictor_name_isSet;
    bool m_predictor_name_isValid;

    QString m_algorithm_arn;
    bool m_algorithm_arn_isSet;
    bool m_algorithm_arn_isValid;

    qint32 m_forecast_horizon;
    bool m_forecast_horizon_isSet;
    bool m_forecast_horizon_isValid;

    QList m_forecast_types;
    bool m_forecast_types_isSet;
    bool m_forecast_types_isValid;

    bool m_perform_auto_ml;
    bool m_perform_auto_ml_isSet;
    bool m_perform_auto_ml_isValid;

    OAIAutoMLOverrideStrategy m_auto_ml_override_strategy;
    bool m_auto_ml_override_strategy_isSet;
    bool m_auto_ml_override_strategy_isValid;

    bool m_perform_hpo;
    bool m_perform_hpo_isSet;
    bool m_perform_hpo_isValid;

    QMap m_training_parameters;
    bool m_training_parameters_isSet;
    bool m_training_parameters_isValid;

    OAICreatePredictorRequest_EvaluationParameters m_evaluation_parameters;
    bool m_evaluation_parameters_isSet;
    bool m_evaluation_parameters_isValid;

    OAICreatePredictorRequest_HPOConfig m_hpo_config;
    bool m_hpo_config_isSet;
    bool m_hpo_config_isValid;

    OAICreatePredictorRequest_InputDataConfig m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAICreatePredictorRequest_FeaturizationConfig m_featurization_config;
    bool m_featurization_config_isSet;
    bool m_featurization_config_isValid;

    OAICreateDatasetRequest_EncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIOptimizationMetric m_optimization_metric;
    bool m_optimization_metric_isSet;
    bool m_optimization_metric_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePredictorRequest)

#endif // OAICreatePredictorRequest_H
