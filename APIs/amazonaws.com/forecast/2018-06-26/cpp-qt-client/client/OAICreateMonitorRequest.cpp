/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMonitorRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMonitorRequest::OAICreateMonitorRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMonitorRequest::OAICreateMonitorRequest() {
    this->initializeModel();
}

OAICreateMonitorRequest::~OAICreateMonitorRequest() {}

void OAICreateMonitorRequest::initializeModel() {

    m_monitor_name_isSet = false;
    m_monitor_name_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateMonitorRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMonitorRequest::fromJsonObject(QJsonObject json) {

    m_monitor_name_isValid = ::OpenAPI::fromJsonValue(m_monitor_name, json[QString("MonitorName")]);
    m_monitor_name_isSet = !json[QString("MonitorName")].isNull() && m_monitor_name_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateMonitorRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMonitorRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_monitor_name_isSet) {
        obj.insert(QString("MonitorName"), ::OpenAPI::toJsonValue(m_monitor_name));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateMonitorRequest::getMonitorName() const {
    return m_monitor_name;
}
void OAICreateMonitorRequest::setMonitorName(const QString &monitor_name) {
    m_monitor_name = monitor_name;
    m_monitor_name_isSet = true;
}

bool OAICreateMonitorRequest::is_monitor_name_Set() const{
    return m_monitor_name_isSet;
}

bool OAICreateMonitorRequest::is_monitor_name_Valid() const{
    return m_monitor_name_isValid;
}

QString OAICreateMonitorRequest::getResourceArn() const {
    return m_resource_arn;
}
void OAICreateMonitorRequest::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAICreateMonitorRequest::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAICreateMonitorRequest::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QList OAICreateMonitorRequest::getTags() const {
    return m_tags;
}
void OAICreateMonitorRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateMonitorRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateMonitorRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateMonitorRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitor_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMonitorRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitor_name_isValid && m_resource_arn_isValid && true;
}

} // namespace OpenAPI
