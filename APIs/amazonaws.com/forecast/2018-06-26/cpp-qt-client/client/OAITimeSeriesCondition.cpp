/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesCondition::OAITimeSeriesCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesCondition::OAITimeSeriesCondition() {
    this->initializeModel();
}

OAITimeSeriesCondition::~OAITimeSeriesCondition() {}

void OAITimeSeriesCondition::initializeModel() {

    m_attribute_name_isSet = false;
    m_attribute_name_isValid = false;

    m_attribute_value_isSet = false;
    m_attribute_value_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;
}

void OAITimeSeriesCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesCondition::fromJsonObject(QJsonObject json) {

    m_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_name, json[QString("AttributeName")]);
    m_attribute_name_isSet = !json[QString("AttributeName")].isNull() && m_attribute_name_isValid;

    m_attribute_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_value, json[QString("AttributeValue")]);
    m_attribute_value_isSet = !json[QString("AttributeValue")].isNull() && m_attribute_value_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("Condition")]);
    m_condition_isSet = !json[QString("Condition")].isNull() && m_condition_isValid;
}

QString OAITimeSeriesCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_name_isSet) {
        obj.insert(QString("AttributeName"), ::OpenAPI::toJsonValue(m_attribute_name));
    }
    if (m_attribute_value_isSet) {
        obj.insert(QString("AttributeValue"), ::OpenAPI::toJsonValue(m_attribute_value));
    }
    if (m_condition.isSet()) {
        obj.insert(QString("Condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    return obj;
}

QString OAITimeSeriesCondition::getAttributeName() const {
    return m_attribute_name;
}
void OAITimeSeriesCondition::setAttributeName(const QString &attribute_name) {
    m_attribute_name = attribute_name;
    m_attribute_name_isSet = true;
}

bool OAITimeSeriesCondition::is_attribute_name_Set() const{
    return m_attribute_name_isSet;
}

bool OAITimeSeriesCondition::is_attribute_name_Valid() const{
    return m_attribute_name_isValid;
}

QString OAITimeSeriesCondition::getAttributeValue() const {
    return m_attribute_value;
}
void OAITimeSeriesCondition::setAttributeValue(const QString &attribute_value) {
    m_attribute_value = attribute_value;
    m_attribute_value_isSet = true;
}

bool OAITimeSeriesCondition::is_attribute_value_Set() const{
    return m_attribute_value_isSet;
}

bool OAITimeSeriesCondition::is_attribute_value_Valid() const{
    return m_attribute_value_isValid;
}

OAICondition OAITimeSeriesCondition::getCondition() const {
    return m_condition;
}
void OAITimeSeriesCondition::setCondition(const OAICondition &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAITimeSeriesCondition::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAITimeSeriesCondition::is_condition_Valid() const{
    return m_condition_isValid;
}

bool OAITimeSeriesCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_name_isValid && m_attribute_value_isValid && m_condition_isValid && true;
}

} // namespace OpenAPI
