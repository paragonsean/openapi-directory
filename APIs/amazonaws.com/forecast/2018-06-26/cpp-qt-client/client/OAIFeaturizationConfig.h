/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeaturizationConfig.h
 *
 * &lt;note&gt; &lt;p&gt;This object belongs to the &lt;a&gt;CreatePredictor&lt;/a&gt; operation. If you created your predictor with &lt;a&gt;CreateAutoPredictor&lt;/a&gt;, see &lt;a&gt;AttributeConfig&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;In a &lt;a&gt;CreatePredictor&lt;/a&gt; operation, the specified algorithm trains a model using the specified dataset group. You can optionally tell the operation to modify data fields prior to training a model. These modifications are referred to as &lt;i&gt;featurization&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You define featurization using the &lt;code&gt;FeaturizationConfig&lt;/code&gt; object. You specify an array of transformations, one for each field that you want to featurize. You then include the &lt;code&gt;FeaturizationConfig&lt;/code&gt; object in your &lt;code&gt;CreatePredictor&lt;/code&gt; request. Amazon Forecast applies the featurization to the &lt;code&gt;TARGET_TIME_SERIES&lt;/code&gt; and &lt;code&gt;RELATED_TIME_SERIES&lt;/code&gt; datasets before model training.&lt;/p&gt; &lt;p&gt;You can create multiple featurization configurations. For example, you might call the &lt;code&gt;CreatePredictor&lt;/code&gt; operation twice by specifying different featurization configurations.&lt;/p&gt;
 */

#ifndef OAIFeaturizationConfig_H
#define OAIFeaturizationConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeaturizationConfig : public OAIObject {
public:
    OAIFeaturizationConfig();
    OAIFeaturizationConfig(QString json);
    ~OAIFeaturizationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getForecastFrequency() const;
    void setForecastFrequency(const QString &forecast_frequency);
    bool is_forecast_frequency_Set() const;
    bool is_forecast_frequency_Valid() const;

    QList getForecastDimensions() const;
    void setForecastDimensions(const QList &forecast_dimensions);
    bool is_forecast_dimensions_Set() const;
    bool is_forecast_dimensions_Valid() const;

    QList getFeaturizations() const;
    void setFeaturizations(const QList &featurizations);
    bool is_featurizations_Set() const;
    bool is_featurizations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_forecast_frequency;
    bool m_forecast_frequency_isSet;
    bool m_forecast_frequency_isValid;

    QList m_forecast_dimensions;
    bool m_forecast_dimensions_isSet;
    bool m_forecast_dimensions_isValid;

    QList m_featurizations;
    bool m_featurizations_isSet;
    bool m_featurizations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeaturizationConfig)

#endif // OAIFeaturizationConfig_H
