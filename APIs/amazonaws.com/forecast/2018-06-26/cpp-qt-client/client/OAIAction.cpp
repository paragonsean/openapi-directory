/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAction::OAIAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAction::OAIAction() {
    this->initializeModel();
}

OAIAction::~OAIAction() {}

void OAIAction::initializeModel() {

    m_attribute_name_isSet = false;
    m_attribute_name_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAction::fromJsonObject(QJsonObject json) {

    m_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_name, json[QString("AttributeName")]);
    m_attribute_name_isSet = !json[QString("AttributeName")].isNull() && m_attribute_name_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("Operation")]);
    m_operation_isSet = !json[QString("Operation")].isNull() && m_operation_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAction::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_name_isSet) {
        obj.insert(QString("AttributeName"), ::OpenAPI::toJsonValue(m_attribute_name));
    }
    if (m_operation.isSet()) {
        obj.insert(QString("Operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIAction::getAttributeName() const {
    return m_attribute_name;
}
void OAIAction::setAttributeName(const QString &attribute_name) {
    m_attribute_name = attribute_name;
    m_attribute_name_isSet = true;
}

bool OAIAction::is_attribute_name_Set() const{
    return m_attribute_name_isSet;
}

bool OAIAction::is_attribute_name_Valid() const{
    return m_attribute_name_isValid;
}

OAIOperation OAIAction::getOperation() const {
    return m_operation;
}
void OAIAction::setOperation(const OAIOperation &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIAction::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIAction::is_operation_Valid() const{
    return m_operation_isValid;
}

double OAIAction::getValue() const {
    return m_value;
}
void OAIAction::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAction::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAction::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_name_isValid && m_operation_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
