/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateForecastExportJobRequest_Destination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateForecastExportJobRequest_Destination::OAICreateForecastExportJobRequest_Destination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateForecastExportJobRequest_Destination::OAICreateForecastExportJobRequest_Destination() {
    this->initializeModel();
}

OAICreateForecastExportJobRequest_Destination::~OAICreateForecastExportJobRequest_Destination() {}

void OAICreateForecastExportJobRequest_Destination::initializeModel() {

    m_s3_config_isSet = false;
    m_s3_config_isValid = false;
}

void OAICreateForecastExportJobRequest_Destination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateForecastExportJobRequest_Destination::fromJsonObject(QJsonObject json) {

    m_s3_config_isValid = ::OpenAPI::fromJsonValue(m_s3_config, json[QString("S3Config")]);
    m_s3_config_isSet = !json[QString("S3Config")].isNull() && m_s3_config_isValid;
}

QString OAICreateForecastExportJobRequest_Destination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateForecastExportJobRequest_Destination::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_config.isSet()) {
        obj.insert(QString("S3Config"), ::OpenAPI::toJsonValue(m_s3_config));
    }
    return obj;
}

OAIDataDestination_S3Config OAICreateForecastExportJobRequest_Destination::getS3Config() const {
    return m_s3_config;
}
void OAICreateForecastExportJobRequest_Destination::setS3Config(const OAIDataDestination_S3Config &s3_config) {
    m_s3_config = s3_config;
    m_s3_config_isSet = true;
}

bool OAICreateForecastExportJobRequest_Destination::is_s3_config_Set() const{
    return m_s3_config_isSet;
}

bool OAICreateForecastExportJobRequest_Destination::is_s3_config_Valid() const{
    return m_s3_config_isValid;
}

bool OAICreateForecastExportJobRequest_Destination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateForecastExportJobRequest_Destination::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s3_config_isValid && true;
}

} // namespace OpenAPI
