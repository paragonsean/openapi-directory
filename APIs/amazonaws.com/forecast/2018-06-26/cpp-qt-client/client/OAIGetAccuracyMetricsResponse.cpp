/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAccuracyMetricsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAccuracyMetricsResponse::OAIGetAccuracyMetricsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAccuracyMetricsResponse::OAIGetAccuracyMetricsResponse() {
    this->initializeModel();
}

OAIGetAccuracyMetricsResponse::~OAIGetAccuracyMetricsResponse() {}

void OAIGetAccuracyMetricsResponse::initializeModel() {

    m_predictor_evaluation_results_isSet = false;
    m_predictor_evaluation_results_isValid = false;

    m_is_auto_predictor_isSet = false;
    m_is_auto_predictor_isValid = false;

    m_auto_ml_override_strategy_isSet = false;
    m_auto_ml_override_strategy_isValid = false;

    m_optimization_metric_isSet = false;
    m_optimization_metric_isValid = false;
}

void OAIGetAccuracyMetricsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAccuracyMetricsResponse::fromJsonObject(QJsonObject json) {

    m_predictor_evaluation_results_isValid = ::OpenAPI::fromJsonValue(m_predictor_evaluation_results, json[QString("PredictorEvaluationResults")]);
    m_predictor_evaluation_results_isSet = !json[QString("PredictorEvaluationResults")].isNull() && m_predictor_evaluation_results_isValid;

    m_is_auto_predictor_isValid = ::OpenAPI::fromJsonValue(m_is_auto_predictor, json[QString("IsAutoPredictor")]);
    m_is_auto_predictor_isSet = !json[QString("IsAutoPredictor")].isNull() && m_is_auto_predictor_isValid;

    m_auto_ml_override_strategy_isValid = ::OpenAPI::fromJsonValue(m_auto_ml_override_strategy, json[QString("AutoMLOverrideStrategy")]);
    m_auto_ml_override_strategy_isSet = !json[QString("AutoMLOverrideStrategy")].isNull() && m_auto_ml_override_strategy_isValid;

    m_optimization_metric_isValid = ::OpenAPI::fromJsonValue(m_optimization_metric, json[QString("OptimizationMetric")]);
    m_optimization_metric_isSet = !json[QString("OptimizationMetric")].isNull() && m_optimization_metric_isValid;
}

QString OAIGetAccuracyMetricsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAccuracyMetricsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_predictor_evaluation_results.isSet()) {
        obj.insert(QString("PredictorEvaluationResults"), ::OpenAPI::toJsonValue(m_predictor_evaluation_results));
    }
    if (m_is_auto_predictor_isSet) {
        obj.insert(QString("IsAutoPredictor"), ::OpenAPI::toJsonValue(m_is_auto_predictor));
    }
    if (m_auto_ml_override_strategy.isSet()) {
        obj.insert(QString("AutoMLOverrideStrategy"), ::OpenAPI::toJsonValue(m_auto_ml_override_strategy));
    }
    if (m_optimization_metric.isSet()) {
        obj.insert(QString("OptimizationMetric"), ::OpenAPI::toJsonValue(m_optimization_metric));
    }
    return obj;
}

QList OAIGetAccuracyMetricsResponse::getPredictorEvaluationResults() const {
    return m_predictor_evaluation_results;
}
void OAIGetAccuracyMetricsResponse::setPredictorEvaluationResults(const QList &predictor_evaluation_results) {
    m_predictor_evaluation_results = predictor_evaluation_results;
    m_predictor_evaluation_results_isSet = true;
}

bool OAIGetAccuracyMetricsResponse::is_predictor_evaluation_results_Set() const{
    return m_predictor_evaluation_results_isSet;
}

bool OAIGetAccuracyMetricsResponse::is_predictor_evaluation_results_Valid() const{
    return m_predictor_evaluation_results_isValid;
}

bool OAIGetAccuracyMetricsResponse::getIsAutoPredictor() const {
    return m_is_auto_predictor;
}
void OAIGetAccuracyMetricsResponse::setIsAutoPredictor(const bool &is_auto_predictor) {
    m_is_auto_predictor = is_auto_predictor;
    m_is_auto_predictor_isSet = true;
}

bool OAIGetAccuracyMetricsResponse::is_is_auto_predictor_Set() const{
    return m_is_auto_predictor_isSet;
}

bool OAIGetAccuracyMetricsResponse::is_is_auto_predictor_Valid() const{
    return m_is_auto_predictor_isValid;
}

OAIAutoMLOverrideStrategy OAIGetAccuracyMetricsResponse::getAutoMlOverrideStrategy() const {
    return m_auto_ml_override_strategy;
}
void OAIGetAccuracyMetricsResponse::setAutoMlOverrideStrategy(const OAIAutoMLOverrideStrategy &auto_ml_override_strategy) {
    m_auto_ml_override_strategy = auto_ml_override_strategy;
    m_auto_ml_override_strategy_isSet = true;
}

bool OAIGetAccuracyMetricsResponse::is_auto_ml_override_strategy_Set() const{
    return m_auto_ml_override_strategy_isSet;
}

bool OAIGetAccuracyMetricsResponse::is_auto_ml_override_strategy_Valid() const{
    return m_auto_ml_override_strategy_isValid;
}

OAIOptimizationMetric OAIGetAccuracyMetricsResponse::getOptimizationMetric() const {
    return m_optimization_metric;
}
void OAIGetAccuracyMetricsResponse::setOptimizationMetric(const OAIOptimizationMetric &optimization_metric) {
    m_optimization_metric = optimization_metric;
    m_optimization_metric_isSet = true;
}

bool OAIGetAccuracyMetricsResponse::is_optimization_metric_Set() const{
    return m_optimization_metric_isSet;
}

bool OAIGetAccuracyMetricsResponse::is_optimization_metric_Valid() const{
    return m_optimization_metric_isValid;
}

bool OAIGetAccuracyMetricsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predictor_evaluation_results.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_auto_predictor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_ml_override_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimization_metric.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAccuracyMetricsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
