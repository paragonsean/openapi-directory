/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDatasetRequest.h
 *
 * 
 */

#ifndef OAICreateDatasetRequest_H
#define OAICreateDatasetRequest_H

#include <QJsonObject>

#include "OAICreateDatasetRequest_EncryptionConfig.h"
#include "OAICreateDatasetRequest_Schema.h"
#include "OAIDatasetType.h"
#include "OAIDomain.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDatasetRequest_Schema;
class OAICreateDatasetRequest_EncryptionConfig;

class OAICreateDatasetRequest : public OAIObject {
public:
    OAICreateDatasetRequest();
    OAICreateDatasetRequest(QString json);
    ~OAICreateDatasetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    OAIDomain getDomain() const;
    void setDomain(const OAIDomain &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIDatasetType getDatasetType() const;
    void setDatasetType(const OAIDatasetType &dataset_type);
    bool is_dataset_type_Set() const;
    bool is_dataset_type_Valid() const;

    QString getDataFrequency() const;
    void setDataFrequency(const QString &data_frequency);
    bool is_data_frequency_Set() const;
    bool is_data_frequency_Valid() const;

    OAICreateDatasetRequest_Schema getSchema() const;
    void setSchema(const OAICreateDatasetRequest_Schema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    OAICreateDatasetRequest_EncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAICreateDatasetRequest_EncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    OAIDomain m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIDatasetType m_dataset_type;
    bool m_dataset_type_isSet;
    bool m_dataset_type_isValid;

    QString m_data_frequency;
    bool m_data_frequency_isSet;
    bool m_data_frequency_isValid;

    OAICreateDatasetRequest_Schema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    OAICreateDatasetRequest_EncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDatasetRequest)

#endif // OAICreateDatasetRequest_H
