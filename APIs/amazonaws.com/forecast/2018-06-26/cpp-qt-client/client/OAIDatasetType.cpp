/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatasetType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatasetType::OAIDatasetType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatasetType::OAIDatasetType() {
    this->initializeModel();
}

OAIDatasetType::~OAIDatasetType() {}

void OAIDatasetType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDatasetType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDatasetType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TARGET_TIME_SERIES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatasetType::TARGET_TIME_SERIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RELATED_TIME_SERIES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatasetType::RELATED_TIME_SERIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ITEM_METADATA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatasetType::ITEM_METADATA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDatasetType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDatasetType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDatasetType::TARGET_TIME_SERIES:
            val = "TARGET_TIME_SERIES";
            break;
        case eOAIDatasetType::RELATED_TIME_SERIES:
            val = "RELATED_TIME_SERIES";
            break;
        case eOAIDatasetType::ITEM_METADATA:
            val = "ITEM_METADATA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDatasetType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDatasetType::eOAIDatasetType OAIDatasetType::getValue() const {
    return m_value;
}

void OAIDatasetType::setValue(const OAIDatasetType::eOAIDatasetType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDatasetType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDatasetType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
