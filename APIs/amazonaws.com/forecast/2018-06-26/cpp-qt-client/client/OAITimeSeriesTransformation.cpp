/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesTransformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesTransformation::OAITimeSeriesTransformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesTransformation::OAITimeSeriesTransformation() {
    this->initializeModel();
}

OAITimeSeriesTransformation::~OAITimeSeriesTransformation() {}

void OAITimeSeriesTransformation::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_time_series_conditions_isSet = false;
    m_time_series_conditions_isValid = false;
}

void OAITimeSeriesTransformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesTransformation::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("Action")]);
    m_action_isSet = !json[QString("Action")].isNull() && m_action_isValid;

    m_time_series_conditions_isValid = ::OpenAPI::fromJsonValue(m_time_series_conditions, json[QString("TimeSeriesConditions")]);
    m_time_series_conditions_isSet = !json[QString("TimeSeriesConditions")].isNull() && m_time_series_conditions_isValid;
}

QString OAITimeSeriesTransformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesTransformation::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("Action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_time_series_conditions.isSet()) {
        obj.insert(QString("TimeSeriesConditions"), ::OpenAPI::toJsonValue(m_time_series_conditions));
    }
    return obj;
}

OAITimeSeriesTransformation_Action OAITimeSeriesTransformation::getAction() const {
    return m_action;
}
void OAITimeSeriesTransformation::setAction(const OAITimeSeriesTransformation_Action &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAITimeSeriesTransformation::is_action_Set() const{
    return m_action_isSet;
}

bool OAITimeSeriesTransformation::is_action_Valid() const{
    return m_action_isValid;
}

QList OAITimeSeriesTransformation::getTimeSeriesConditions() const {
    return m_time_series_conditions;
}
void OAITimeSeriesTransformation::setTimeSeriesConditions(const QList &time_series_conditions) {
    m_time_series_conditions = time_series_conditions;
    m_time_series_conditions_isSet = true;
}

bool OAITimeSeriesTransformation::is_time_series_conditions_Set() const{
    return m_time_series_conditions_isSet;
}

bool OAITimeSeriesTransformation::is_time_series_conditions_Valid() const{
    return m_time_series_conditions_isValid;
}

bool OAITimeSeriesTransformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesTransformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
