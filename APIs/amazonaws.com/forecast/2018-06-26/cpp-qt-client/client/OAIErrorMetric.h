/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorMetric.h
 *
 *  Provides detailed error metrics to evaluate the performance of a predictor. This object is part of the &lt;a&gt;Metrics&lt;/a&gt; object. 
 */

#ifndef OAIErrorMetric_H
#define OAIErrorMetric_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIErrorMetric : public OAIObject {
public:
    OAIErrorMetric();
    OAIErrorMetric(QString json);
    ~OAIErrorMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getForecastType() const;
    void setForecastType(const QString &forecast_type);
    bool is_forecast_type_Set() const;
    bool is_forecast_type_Valid() const;

    double getWape() const;
    void setWape(const double &wape);
    bool is_wape_Set() const;
    bool is_wape_Valid() const;

    double getRmse() const;
    void setRmse(const double &rmse);
    bool is_rmse_Set() const;
    bool is_rmse_Valid() const;

    double getMase() const;
    void setMase(const double &mase);
    bool is_mase_Set() const;
    bool is_mase_Valid() const;

    double getMape() const;
    void setMape(const double &mape);
    bool is_mape_Set() const;
    bool is_mape_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_forecast_type;
    bool m_forecast_type_isSet;
    bool m_forecast_type_isValid;

    double m_wape;
    bool m_wape_isSet;
    bool m_wape_isValid;

    double m_rmse;
    bool m_rmse_isSet;
    bool m_rmse_isValid;

    double m_mase;
    bool m_mase_isSet;
    bool m_mase_isValid;

    double m_mape;
    bool m_mape_isSet;
    bool m_mape_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorMetric)

#endif // OAIErrorMetric_H
