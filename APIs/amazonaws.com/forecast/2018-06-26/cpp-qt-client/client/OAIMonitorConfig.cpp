/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonitorConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonitorConfig::OAIMonitorConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonitorConfig::OAIMonitorConfig() {
    this->initializeModel();
}

OAIMonitorConfig::~OAIMonitorConfig() {}

void OAIMonitorConfig::initializeModel() {

    m_monitor_name_isSet = false;
    m_monitor_name_isValid = false;
}

void OAIMonitorConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonitorConfig::fromJsonObject(QJsonObject json) {

    m_monitor_name_isValid = ::OpenAPI::fromJsonValue(m_monitor_name, json[QString("MonitorName")]);
    m_monitor_name_isSet = !json[QString("MonitorName")].isNull() && m_monitor_name_isValid;
}

QString OAIMonitorConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonitorConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_monitor_name_isSet) {
        obj.insert(QString("MonitorName"), ::OpenAPI::toJsonValue(m_monitor_name));
    }
    return obj;
}

QString OAIMonitorConfig::getMonitorName() const {
    return m_monitor_name;
}
void OAIMonitorConfig::setMonitorName(const QString &monitor_name) {
    m_monitor_name = monitor_name;
    m_monitor_name_isSet = true;
}

bool OAIMonitorConfig::is_monitor_name_Set() const{
    return m_monitor_name_isSet;
}

bool OAIMonitorConfig::is_monitor_name_Valid() const{
    return m_monitor_name_isValid;
}

bool OAIMonitorConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitor_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonitorConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitor_name_isValid && true;
}

} // namespace OpenAPI
