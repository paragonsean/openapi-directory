/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWhatIfForecastExportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWhatIfForecastExportRequest::OAICreateWhatIfForecastExportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWhatIfForecastExportRequest::OAICreateWhatIfForecastExportRequest() {
    this->initializeModel();
}

OAICreateWhatIfForecastExportRequest::~OAICreateWhatIfForecastExportRequest() {}

void OAICreateWhatIfForecastExportRequest::initializeModel() {

    m_what_if_forecast_export_name_isSet = false;
    m_what_if_forecast_export_name_isValid = false;

    m_what_if_forecast_arns_isSet = false;
    m_what_if_forecast_arns_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;
}

void OAICreateWhatIfForecastExportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWhatIfForecastExportRequest::fromJsonObject(QJsonObject json) {

    m_what_if_forecast_export_name_isValid = ::OpenAPI::fromJsonValue(m_what_if_forecast_export_name, json[QString("WhatIfForecastExportName")]);
    m_what_if_forecast_export_name_isSet = !json[QString("WhatIfForecastExportName")].isNull() && m_what_if_forecast_export_name_isValid;

    m_what_if_forecast_arns_isValid = ::OpenAPI::fromJsonValue(m_what_if_forecast_arns, json[QString("WhatIfForecastArns")]);
    m_what_if_forecast_arns_isSet = !json[QString("WhatIfForecastArns")].isNull() && m_what_if_forecast_arns_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("Format")]);
    m_format_isSet = !json[QString("Format")].isNull() && m_format_isValid;
}

QString OAICreateWhatIfForecastExportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWhatIfForecastExportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_what_if_forecast_export_name_isSet) {
        obj.insert(QString("WhatIfForecastExportName"), ::OpenAPI::toJsonValue(m_what_if_forecast_export_name));
    }
    if (m_what_if_forecast_arns.isSet()) {
        obj.insert(QString("WhatIfForecastArns"), ::OpenAPI::toJsonValue(m_what_if_forecast_arns));
    }
    if (m_destination.isSet()) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_format_isSet) {
        obj.insert(QString("Format"), ::OpenAPI::toJsonValue(m_format));
    }
    return obj;
}

QString OAICreateWhatIfForecastExportRequest::getWhatIfForecastExportName() const {
    return m_what_if_forecast_export_name;
}
void OAICreateWhatIfForecastExportRequest::setWhatIfForecastExportName(const QString &what_if_forecast_export_name) {
    m_what_if_forecast_export_name = what_if_forecast_export_name;
    m_what_if_forecast_export_name_isSet = true;
}

bool OAICreateWhatIfForecastExportRequest::is_what_if_forecast_export_name_Set() const{
    return m_what_if_forecast_export_name_isSet;
}

bool OAICreateWhatIfForecastExportRequest::is_what_if_forecast_export_name_Valid() const{
    return m_what_if_forecast_export_name_isValid;
}

QList OAICreateWhatIfForecastExportRequest::getWhatIfForecastArns() const {
    return m_what_if_forecast_arns;
}
void OAICreateWhatIfForecastExportRequest::setWhatIfForecastArns(const QList &what_if_forecast_arns) {
    m_what_if_forecast_arns = what_if_forecast_arns;
    m_what_if_forecast_arns_isSet = true;
}

bool OAICreateWhatIfForecastExportRequest::is_what_if_forecast_arns_Set() const{
    return m_what_if_forecast_arns_isSet;
}

bool OAICreateWhatIfForecastExportRequest::is_what_if_forecast_arns_Valid() const{
    return m_what_if_forecast_arns_isValid;
}

OAICreateForecastExportJobRequest_Destination OAICreateWhatIfForecastExportRequest::getDestination() const {
    return m_destination;
}
void OAICreateWhatIfForecastExportRequest::setDestination(const OAICreateForecastExportJobRequest_Destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAICreateWhatIfForecastExportRequest::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAICreateWhatIfForecastExportRequest::is_destination_Valid() const{
    return m_destination_isValid;
}

QList OAICreateWhatIfForecastExportRequest::getTags() const {
    return m_tags;
}
void OAICreateWhatIfForecastExportRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateWhatIfForecastExportRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateWhatIfForecastExportRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAICreateWhatIfForecastExportRequest::getFormat() const {
    return m_format;
}
void OAICreateWhatIfForecastExportRequest::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAICreateWhatIfForecastExportRequest::is_format_Set() const{
    return m_format_isSet;
}

bool OAICreateWhatIfForecastExportRequest::is_format_Valid() const{
    return m_format_isValid;
}

bool OAICreateWhatIfForecastExportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_what_if_forecast_export_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_what_if_forecast_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWhatIfForecastExportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_what_if_forecast_export_name_isValid && m_what_if_forecast_arns_isValid && m_destination_isValid && true;
}

} // namespace OpenAPI
