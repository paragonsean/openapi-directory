/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeWhatIfAnalysisResponse.h
 *
 * 
 */

#ifndef OAIDescribeWhatIfAnalysisResponse_H
#define OAIDescribeWhatIfAnalysisResponse_H

#include <QJsonObject>

#include "OAITimeSeriesSelector.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeSeriesSelector;

class OAIDescribeWhatIfAnalysisResponse : public OAIObject {
public:
    OAIDescribeWhatIfAnalysisResponse();
    OAIDescribeWhatIfAnalysisResponse(QString json);
    ~OAIDescribeWhatIfAnalysisResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWhatIfAnalysisName() const;
    void setWhatIfAnalysisName(const QString &what_if_analysis_name);
    bool is_what_if_analysis_name_Set() const;
    bool is_what_if_analysis_name_Valid() const;

    QString getWhatIfAnalysisArn() const;
    void setWhatIfAnalysisArn(const QString &what_if_analysis_arn);
    bool is_what_if_analysis_arn_Set() const;
    bool is_what_if_analysis_arn_Valid() const;

    QString getForecastArn() const;
    void setForecastArn(const QString &forecast_arn);
    bool is_forecast_arn_Set() const;
    bool is_forecast_arn_Valid() const;

    qint32 getEstimatedTimeRemainingInMinutes() const;
    void setEstimatedTimeRemainingInMinutes(const qint32 &estimated_time_remaining_in_minutes);
    bool is_estimated_time_remaining_in_minutes_Set() const;
    bool is_estimated_time_remaining_in_minutes_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastModificationTime() const;
    void setLastModificationTime(const QDateTime &last_modification_time);
    bool is_last_modification_time_Set() const;
    bool is_last_modification_time_Valid() const;

    OAITimeSeriesSelector getTimeSeriesSelector() const;
    void setTimeSeriesSelector(const OAITimeSeriesSelector &time_series_selector);
    bool is_time_series_selector_Set() const;
    bool is_time_series_selector_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_what_if_analysis_name;
    bool m_what_if_analysis_name_isSet;
    bool m_what_if_analysis_name_isValid;

    QString m_what_if_analysis_arn;
    bool m_what_if_analysis_arn_isSet;
    bool m_what_if_analysis_arn_isValid;

    QString m_forecast_arn;
    bool m_forecast_arn_isSet;
    bool m_forecast_arn_isValid;

    qint32 m_estimated_time_remaining_in_minutes;
    bool m_estimated_time_remaining_in_minutes_isSet;
    bool m_estimated_time_remaining_in_minutes_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_modification_time;
    bool m_last_modification_time_isSet;
    bool m_last_modification_time_isValid;

    OAITimeSeriesSelector m_time_series_selector;
    bool m_time_series_selector_isSet;
    bool m_time_series_selector_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeWhatIfAnalysisResponse)

#endif // OAIDescribeWhatIfAnalysisResponse_H
