/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricResult::OAIMetricResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricResult::OAIMetricResult() {
    this->initializeModel();
}

OAIMetricResult::~OAIMetricResult() {}

void OAIMetricResult::initializeModel() {

    m_metric_name_isSet = false;
    m_metric_name_isValid = false;

    m_metric_value_isSet = false;
    m_metric_value_isValid = false;
}

void OAIMetricResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetricResult::fromJsonObject(QJsonObject json) {

    m_metric_name_isValid = ::OpenAPI::fromJsonValue(m_metric_name, json[QString("MetricName")]);
    m_metric_name_isSet = !json[QString("MetricName")].isNull() && m_metric_name_isValid;

    m_metric_value_isValid = ::OpenAPI::fromJsonValue(m_metric_value, json[QString("MetricValue")]);
    m_metric_value_isSet = !json[QString("MetricValue")].isNull() && m_metric_value_isValid;
}

QString OAIMetricResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetricResult::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_name_isSet) {
        obj.insert(QString("MetricName"), ::OpenAPI::toJsonValue(m_metric_name));
    }
    if (m_metric_value_isSet) {
        obj.insert(QString("MetricValue"), ::OpenAPI::toJsonValue(m_metric_value));
    }
    return obj;
}

QString OAIMetricResult::getMetricName() const {
    return m_metric_name;
}
void OAIMetricResult::setMetricName(const QString &metric_name) {
    m_metric_name = metric_name;
    m_metric_name_isSet = true;
}

bool OAIMetricResult::is_metric_name_Set() const{
    return m_metric_name_isSet;
}

bool OAIMetricResult::is_metric_name_Valid() const{
    return m_metric_name_isValid;
}

double OAIMetricResult::getMetricValue() const {
    return m_metric_value;
}
void OAIMetricResult::setMetricValue(const double &metric_value) {
    m_metric_value = metric_value;
    m_metric_value_isSet = true;
}

bool OAIMetricResult::is_metric_value_Set() const{
    return m_metric_value_isSet;
}

bool OAIMetricResult::is_metric_value_Valid() const{
    return m_metric_value_isValid;
}

bool OAIMetricResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetricResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
