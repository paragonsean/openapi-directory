/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDatasetImportJobResponse.h
 *
 * 
 */

#ifndef OAIDescribeDatasetImportJobResponse_H
#define OAIDescribeDatasetImportJobResponse_H

#include <QJsonObject>

#include "OAIDescribeDatasetImportJobResponse_DataSource.h"
#include "OAIImportMode.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeDatasetImportJobResponse_DataSource;

class OAIDescribeDatasetImportJobResponse : public OAIObject {
public:
    OAIDescribeDatasetImportJobResponse();
    OAIDescribeDatasetImportJobResponse(QString json);
    ~OAIDescribeDatasetImportJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatasetImportJobName() const;
    void setDatasetImportJobName(const QString &dataset_import_job_name);
    bool is_dataset_import_job_name_Set() const;
    bool is_dataset_import_job_name_Valid() const;

    QString getDatasetImportJobArn() const;
    void setDatasetImportJobArn(const QString &dataset_import_job_arn);
    bool is_dataset_import_job_arn_Set() const;
    bool is_dataset_import_job_arn_Valid() const;

    QString getDatasetArn() const;
    void setDatasetArn(const QString &dataset_arn);
    bool is_dataset_arn_Set() const;
    bool is_dataset_arn_Valid() const;

    QString getTimestampFormat() const;
    void setTimestampFormat(const QString &timestamp_format);
    bool is_timestamp_format_Set() const;
    bool is_timestamp_format_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    bool getUseGeolocationForTimeZone() const;
    void setUseGeolocationForTimeZone(const bool &use_geolocation_for_time_zone);
    bool is_use_geolocation_for_time_zone_Set() const;
    bool is_use_geolocation_for_time_zone_Valid() const;

    QString getGeolocationFormat() const;
    void setGeolocationFormat(const QString &geolocation_format);
    bool is_geolocation_format_Set() const;
    bool is_geolocation_format_Valid() const;

    OAIDescribeDatasetImportJobResponse_DataSource getDataSource() const;
    void setDataSource(const OAIDescribeDatasetImportJobResponse_DataSource &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    qint32 getEstimatedTimeRemainingInMinutes() const;
    void setEstimatedTimeRemainingInMinutes(const qint32 &estimated_time_remaining_in_minutes);
    bool is_estimated_time_remaining_in_minutes_Set() const;
    bool is_estimated_time_remaining_in_minutes_Valid() const;

    QMap getFieldStatistics() const;
    void setFieldStatistics(const QMap &field_statistics);
    bool is_field_statistics_Set() const;
    bool is_field_statistics_Valid() const;

    double getDataSize() const;
    void setDataSize(const double &data_size);
    bool is_data_size_Set() const;
    bool is_data_size_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastModificationTime() const;
    void setLastModificationTime(const QDateTime &last_modification_time);
    bool is_last_modification_time_Set() const;
    bool is_last_modification_time_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    OAIImportMode getImportMode() const;
    void setImportMode(const OAIImportMode &import_mode);
    bool is_import_mode_Set() const;
    bool is_import_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset_import_job_name;
    bool m_dataset_import_job_name_isSet;
    bool m_dataset_import_job_name_isValid;

    QString m_dataset_import_job_arn;
    bool m_dataset_import_job_arn_isSet;
    bool m_dataset_import_job_arn_isValid;

    QString m_dataset_arn;
    bool m_dataset_arn_isSet;
    bool m_dataset_arn_isValid;

    QString m_timestamp_format;
    bool m_timestamp_format_isSet;
    bool m_timestamp_format_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    bool m_use_geolocation_for_time_zone;
    bool m_use_geolocation_for_time_zone_isSet;
    bool m_use_geolocation_for_time_zone_isValid;

    QString m_geolocation_format;
    bool m_geolocation_format_isSet;
    bool m_geolocation_format_isValid;

    OAIDescribeDatasetImportJobResponse_DataSource m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    qint32 m_estimated_time_remaining_in_minutes;
    bool m_estimated_time_remaining_in_minutes_isSet;
    bool m_estimated_time_remaining_in_minutes_isValid;

    QMap m_field_statistics;
    bool m_field_statistics_isSet;
    bool m_field_statistics_isValid;

    double m_data_size;
    bool m_data_size_isSet;
    bool m_data_size_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_modification_time;
    bool m_last_modification_time_isSet;
    bool m_last_modification_time_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    OAIImportMode m_import_mode;
    bool m_import_mode_isSet;
    bool m_import_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDatasetImportJobResponse)

#endif // OAIDescribeDatasetImportJobResponse_H
