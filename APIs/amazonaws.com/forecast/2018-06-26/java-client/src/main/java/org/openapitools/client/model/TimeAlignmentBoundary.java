/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DayOfWeek;
import org.openapitools.client.model.Month;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;The time boundary Forecast uses to align and aggregate your data to match your forecast frequency. Provide the unit of time and the time boundary as a key value pair. If you don&#39;t provide a time boundary, Forecast uses a set of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#default-time-boundaries\&quot;&gt;Default Time Boundaries&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;For more information about aggregation, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html\&quot;&gt;Data Aggregation for Different Forecast Frequencies&lt;/a&gt;. For more information setting a custom time boundary, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#specifying-time-boundary\&quot;&gt;Specifying a Time Boundary&lt;/a&gt;. &lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:07.923995-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TimeAlignmentBoundary {
  public static final String SERIALIZED_NAME_MONTH = "Month";
  @SerializedName(SERIALIZED_NAME_MONTH)
  private Month month;

  public static final String SERIALIZED_NAME_DAY_OF_MONTH = "DayOfMonth";
  @SerializedName(SERIALIZED_NAME_DAY_OF_MONTH)
  private Integer dayOfMonth;

  public static final String SERIALIZED_NAME_DAY_OF_WEEK = "DayOfWeek";
  @SerializedName(SERIALIZED_NAME_DAY_OF_WEEK)
  private DayOfWeek dayOfWeek;

  public static final String SERIALIZED_NAME_HOUR = "Hour";
  @SerializedName(SERIALIZED_NAME_HOUR)
  private Integer hour;

  public TimeAlignmentBoundary() {
  }

  public TimeAlignmentBoundary month(Month month) {
    this.month = month;
    return this;
  }

  /**
   * Get month
   * @return month
   */
  @javax.annotation.Nullable
  public Month getMonth() {
    return month;
  }

  public void setMonth(Month month) {
    this.month = month;
  }


  public TimeAlignmentBoundary dayOfMonth(Integer dayOfMonth) {
    this.dayOfMonth = dayOfMonth;
    return this;
  }

  /**
   * Get dayOfMonth
   * @return dayOfMonth
   */
  @javax.annotation.Nullable
  public Integer getDayOfMonth() {
    return dayOfMonth;
  }

  public void setDayOfMonth(Integer dayOfMonth) {
    this.dayOfMonth = dayOfMonth;
  }


  public TimeAlignmentBoundary dayOfWeek(DayOfWeek dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
    return this;
  }

  /**
   * Get dayOfWeek
   * @return dayOfWeek
   */
  @javax.annotation.Nullable
  public DayOfWeek getDayOfWeek() {
    return dayOfWeek;
  }

  public void setDayOfWeek(DayOfWeek dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }


  public TimeAlignmentBoundary hour(Integer hour) {
    this.hour = hour;
    return this;
  }

  /**
   * Get hour
   * @return hour
   */
  @javax.annotation.Nullable
  public Integer getHour() {
    return hour;
  }

  public void setHour(Integer hour) {
    this.hour = hour;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeAlignmentBoundary timeAlignmentBoundary = (TimeAlignmentBoundary) o;
    return Objects.equals(this.month, timeAlignmentBoundary.month) &&
        Objects.equals(this.dayOfMonth, timeAlignmentBoundary.dayOfMonth) &&
        Objects.equals(this.dayOfWeek, timeAlignmentBoundary.dayOfWeek) &&
        Objects.equals(this.hour, timeAlignmentBoundary.hour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, dayOfMonth, dayOfWeek, hour);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeAlignmentBoundary {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    dayOfMonth: ").append(toIndentedString(dayOfMonth)).append("\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("    hour: ").append(toIndentedString(hour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Month");
    openapiFields.add("DayOfMonth");
    openapiFields.add("DayOfWeek");
    openapiFields.add("Hour");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TimeAlignmentBoundary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TimeAlignmentBoundary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TimeAlignmentBoundary is not found in the empty JSON string", TimeAlignmentBoundary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TimeAlignmentBoundary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TimeAlignmentBoundary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Month`
      if (jsonObj.get("Month") != null && !jsonObj.get("Month").isJsonNull()) {
        Month.validateJsonElement(jsonObj.get("Month"));
      }
      // validate the optional field `DayOfMonth`
      if (jsonObj.get("DayOfMonth") != null && !jsonObj.get("DayOfMonth").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DayOfMonth"));
      }
      // validate the optional field `DayOfWeek`
      if (jsonObj.get("DayOfWeek") != null && !jsonObj.get("DayOfWeek").isJsonNull()) {
        DayOfWeek.validateJsonElement(jsonObj.get("DayOfWeek"));
      }
      // validate the optional field `Hour`
      if (jsonObj.get("Hour") != null && !jsonObj.get("Hour").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Hour"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TimeAlignmentBoundary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TimeAlignmentBoundary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TimeAlignmentBoundary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TimeAlignmentBoundary.class));

       return (TypeAdapter<T>) new TypeAdapter<TimeAlignmentBoundary>() {
           @Override
           public void write(JsonWriter out, TimeAlignmentBoundary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TimeAlignmentBoundary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TimeAlignmentBoundary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TimeAlignmentBoundary
   * @throws IOException if the JSON string is invalid with respect to TimeAlignmentBoundary
   */
  public static TimeAlignmentBoundary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TimeAlignmentBoundary.class);
  }

  /**
   * Convert an instance of TimeAlignmentBoundary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

