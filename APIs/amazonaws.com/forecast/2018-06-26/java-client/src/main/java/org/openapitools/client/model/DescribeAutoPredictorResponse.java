/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAutoPredictorRequestDataConfig;
import org.openapitools.client.model.DescribeAutoPredictorResponseExplainabilityInfo;
import org.openapitools.client.model.DescribeAutoPredictorResponseMonitorInfo;
import org.openapitools.client.model.DescribeAutoPredictorResponseReferencePredictorSummary;
import org.openapitools.client.model.DescribeAutoPredictorResponseTimeAlignmentBoundary;
import org.openapitools.client.model.EncryptionConfig;
import org.openapitools.client.model.OptimizationMetric;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAutoPredictorResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:07.923995-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAutoPredictorResponse {
  public static final String SERIALIZED_NAME_PREDICTOR_ARN = "PredictorArn";
  @SerializedName(SERIALIZED_NAME_PREDICTOR_ARN)
  private String predictorArn;

  public static final String SERIALIZED_NAME_PREDICTOR_NAME = "PredictorName";
  @SerializedName(SERIALIZED_NAME_PREDICTOR_NAME)
  private String predictorName;

  public static final String SERIALIZED_NAME_FORECAST_HORIZON = "ForecastHorizon";
  @SerializedName(SERIALIZED_NAME_FORECAST_HORIZON)
  private Integer forecastHorizon;

  public static final String SERIALIZED_NAME_FORECAST_TYPES = "ForecastTypes";
  @SerializedName(SERIALIZED_NAME_FORECAST_TYPES)
  private List forecastTypes;

  public static final String SERIALIZED_NAME_FORECAST_FREQUENCY = "ForecastFrequency";
  @SerializedName(SERIALIZED_NAME_FORECAST_FREQUENCY)
  private String forecastFrequency;

  public static final String SERIALIZED_NAME_FORECAST_DIMENSIONS = "ForecastDimensions";
  @SerializedName(SERIALIZED_NAME_FORECAST_DIMENSIONS)
  private List forecastDimensions;

  public static final String SERIALIZED_NAME_DATASET_IMPORT_JOB_ARNS = "DatasetImportJobArns";
  @SerializedName(SERIALIZED_NAME_DATASET_IMPORT_JOB_ARNS)
  private List datasetImportJobArns;

  public static final String SERIALIZED_NAME_DATA_CONFIG = "DataConfig";
  @SerializedName(SERIALIZED_NAME_DATA_CONFIG)
  private CreateAutoPredictorRequestDataConfig dataConfig;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIG = "EncryptionConfig";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIG)
  private EncryptionConfig encryptionConfig;

  public static final String SERIALIZED_NAME_REFERENCE_PREDICTOR_SUMMARY = "ReferencePredictorSummary";
  @SerializedName(SERIALIZED_NAME_REFERENCE_PREDICTOR_SUMMARY)
  private DescribeAutoPredictorResponseReferencePredictorSummary referencePredictorSummary;

  public static final String SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_IN_MINUTES = "EstimatedTimeRemainingInMinutes";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_IN_MINUTES)
  private Integer estimatedTimeRemainingInMinutes;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFICATION_TIME = "LastModificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFICATION_TIME)
  private OffsetDateTime lastModificationTime;

  public static final String SERIALIZED_NAME_OPTIMIZATION_METRIC = "OptimizationMetric";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION_METRIC)
  private OptimizationMetric optimizationMetric;

  public static final String SERIALIZED_NAME_EXPLAINABILITY_INFO = "ExplainabilityInfo";
  @SerializedName(SERIALIZED_NAME_EXPLAINABILITY_INFO)
  private DescribeAutoPredictorResponseExplainabilityInfo explainabilityInfo;

  public static final String SERIALIZED_NAME_MONITOR_INFO = "MonitorInfo";
  @SerializedName(SERIALIZED_NAME_MONITOR_INFO)
  private DescribeAutoPredictorResponseMonitorInfo monitorInfo;

  public static final String SERIALIZED_NAME_TIME_ALIGNMENT_BOUNDARY = "TimeAlignmentBoundary";
  @SerializedName(SERIALIZED_NAME_TIME_ALIGNMENT_BOUNDARY)
  private DescribeAutoPredictorResponseTimeAlignmentBoundary timeAlignmentBoundary;

  public DescribeAutoPredictorResponse() {
  }

  public DescribeAutoPredictorResponse predictorArn(String predictorArn) {
    this.predictorArn = predictorArn;
    return this;
  }

  /**
   * Get predictorArn
   * @return predictorArn
   */
  @javax.annotation.Nullable
  public String getPredictorArn() {
    return predictorArn;
  }

  public void setPredictorArn(String predictorArn) {
    this.predictorArn = predictorArn;
  }


  public DescribeAutoPredictorResponse predictorName(String predictorName) {
    this.predictorName = predictorName;
    return this;
  }

  /**
   * Get predictorName
   * @return predictorName
   */
  @javax.annotation.Nullable
  public String getPredictorName() {
    return predictorName;
  }

  public void setPredictorName(String predictorName) {
    this.predictorName = predictorName;
  }


  public DescribeAutoPredictorResponse forecastHorizon(Integer forecastHorizon) {
    this.forecastHorizon = forecastHorizon;
    return this;
  }

  /**
   * Get forecastHorizon
   * @return forecastHorizon
   */
  @javax.annotation.Nullable
  public Integer getForecastHorizon() {
    return forecastHorizon;
  }

  public void setForecastHorizon(Integer forecastHorizon) {
    this.forecastHorizon = forecastHorizon;
  }


  public DescribeAutoPredictorResponse forecastTypes(List forecastTypes) {
    this.forecastTypes = forecastTypes;
    return this;
  }

  /**
   * Get forecastTypes
   * @return forecastTypes
   */
  @javax.annotation.Nullable
  public List getForecastTypes() {
    return forecastTypes;
  }

  public void setForecastTypes(List forecastTypes) {
    this.forecastTypes = forecastTypes;
  }


  public DescribeAutoPredictorResponse forecastFrequency(String forecastFrequency) {
    this.forecastFrequency = forecastFrequency;
    return this;
  }

  /**
   * Get forecastFrequency
   * @return forecastFrequency
   */
  @javax.annotation.Nullable
  public String getForecastFrequency() {
    return forecastFrequency;
  }

  public void setForecastFrequency(String forecastFrequency) {
    this.forecastFrequency = forecastFrequency;
  }


  public DescribeAutoPredictorResponse forecastDimensions(List forecastDimensions) {
    this.forecastDimensions = forecastDimensions;
    return this;
  }

  /**
   * Get forecastDimensions
   * @return forecastDimensions
   */
  @javax.annotation.Nullable
  public List getForecastDimensions() {
    return forecastDimensions;
  }

  public void setForecastDimensions(List forecastDimensions) {
    this.forecastDimensions = forecastDimensions;
  }


  public DescribeAutoPredictorResponse datasetImportJobArns(List datasetImportJobArns) {
    this.datasetImportJobArns = datasetImportJobArns;
    return this;
  }

  /**
   * Get datasetImportJobArns
   * @return datasetImportJobArns
   */
  @javax.annotation.Nullable
  public List getDatasetImportJobArns() {
    return datasetImportJobArns;
  }

  public void setDatasetImportJobArns(List datasetImportJobArns) {
    this.datasetImportJobArns = datasetImportJobArns;
  }


  public DescribeAutoPredictorResponse dataConfig(CreateAutoPredictorRequestDataConfig dataConfig) {
    this.dataConfig = dataConfig;
    return this;
  }

  /**
   * Get dataConfig
   * @return dataConfig
   */
  @javax.annotation.Nullable
  public CreateAutoPredictorRequestDataConfig getDataConfig() {
    return dataConfig;
  }

  public void setDataConfig(CreateAutoPredictorRequestDataConfig dataConfig) {
    this.dataConfig = dataConfig;
  }


  public DescribeAutoPredictorResponse encryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * Get encryptionConfig
   * @return encryptionConfig
   */
  @javax.annotation.Nullable
  public EncryptionConfig getEncryptionConfig() {
    return encryptionConfig;
  }

  public void setEncryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
  }


  public DescribeAutoPredictorResponse referencePredictorSummary(DescribeAutoPredictorResponseReferencePredictorSummary referencePredictorSummary) {
    this.referencePredictorSummary = referencePredictorSummary;
    return this;
  }

  /**
   * Get referencePredictorSummary
   * @return referencePredictorSummary
   */
  @javax.annotation.Nullable
  public DescribeAutoPredictorResponseReferencePredictorSummary getReferencePredictorSummary() {
    return referencePredictorSummary;
  }

  public void setReferencePredictorSummary(DescribeAutoPredictorResponseReferencePredictorSummary referencePredictorSummary) {
    this.referencePredictorSummary = referencePredictorSummary;
  }


  public DescribeAutoPredictorResponse estimatedTimeRemainingInMinutes(Integer estimatedTimeRemainingInMinutes) {
    this.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes;
    return this;
  }

  /**
   * Get estimatedTimeRemainingInMinutes
   * @return estimatedTimeRemainingInMinutes
   */
  @javax.annotation.Nullable
  public Integer getEstimatedTimeRemainingInMinutes() {
    return estimatedTimeRemainingInMinutes;
  }

  public void setEstimatedTimeRemainingInMinutes(Integer estimatedTimeRemainingInMinutes) {
    this.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes;
  }


  public DescribeAutoPredictorResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DescribeAutoPredictorResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public DescribeAutoPredictorResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAutoPredictorResponse lastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
    return this;
  }

  /**
   * Get lastModificationTime
   * @return lastModificationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModificationTime() {
    return lastModificationTime;
  }

  public void setLastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
  }


  public DescribeAutoPredictorResponse optimizationMetric(OptimizationMetric optimizationMetric) {
    this.optimizationMetric = optimizationMetric;
    return this;
  }

  /**
   * Get optimizationMetric
   * @return optimizationMetric
   */
  @javax.annotation.Nullable
  public OptimizationMetric getOptimizationMetric() {
    return optimizationMetric;
  }

  public void setOptimizationMetric(OptimizationMetric optimizationMetric) {
    this.optimizationMetric = optimizationMetric;
  }


  public DescribeAutoPredictorResponse explainabilityInfo(DescribeAutoPredictorResponseExplainabilityInfo explainabilityInfo) {
    this.explainabilityInfo = explainabilityInfo;
    return this;
  }

  /**
   * Get explainabilityInfo
   * @return explainabilityInfo
   */
  @javax.annotation.Nullable
  public DescribeAutoPredictorResponseExplainabilityInfo getExplainabilityInfo() {
    return explainabilityInfo;
  }

  public void setExplainabilityInfo(DescribeAutoPredictorResponseExplainabilityInfo explainabilityInfo) {
    this.explainabilityInfo = explainabilityInfo;
  }


  public DescribeAutoPredictorResponse monitorInfo(DescribeAutoPredictorResponseMonitorInfo monitorInfo) {
    this.monitorInfo = monitorInfo;
    return this;
  }

  /**
   * Get monitorInfo
   * @return monitorInfo
   */
  @javax.annotation.Nullable
  public DescribeAutoPredictorResponseMonitorInfo getMonitorInfo() {
    return monitorInfo;
  }

  public void setMonitorInfo(DescribeAutoPredictorResponseMonitorInfo monitorInfo) {
    this.monitorInfo = monitorInfo;
  }


  public DescribeAutoPredictorResponse timeAlignmentBoundary(DescribeAutoPredictorResponseTimeAlignmentBoundary timeAlignmentBoundary) {
    this.timeAlignmentBoundary = timeAlignmentBoundary;
    return this;
  }

  /**
   * Get timeAlignmentBoundary
   * @return timeAlignmentBoundary
   */
  @javax.annotation.Nullable
  public DescribeAutoPredictorResponseTimeAlignmentBoundary getTimeAlignmentBoundary() {
    return timeAlignmentBoundary;
  }

  public void setTimeAlignmentBoundary(DescribeAutoPredictorResponseTimeAlignmentBoundary timeAlignmentBoundary) {
    this.timeAlignmentBoundary = timeAlignmentBoundary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAutoPredictorResponse describeAutoPredictorResponse = (DescribeAutoPredictorResponse) o;
    return Objects.equals(this.predictorArn, describeAutoPredictorResponse.predictorArn) &&
        Objects.equals(this.predictorName, describeAutoPredictorResponse.predictorName) &&
        Objects.equals(this.forecastHorizon, describeAutoPredictorResponse.forecastHorizon) &&
        Objects.equals(this.forecastTypes, describeAutoPredictorResponse.forecastTypes) &&
        Objects.equals(this.forecastFrequency, describeAutoPredictorResponse.forecastFrequency) &&
        Objects.equals(this.forecastDimensions, describeAutoPredictorResponse.forecastDimensions) &&
        Objects.equals(this.datasetImportJobArns, describeAutoPredictorResponse.datasetImportJobArns) &&
        Objects.equals(this.dataConfig, describeAutoPredictorResponse.dataConfig) &&
        Objects.equals(this.encryptionConfig, describeAutoPredictorResponse.encryptionConfig) &&
        Objects.equals(this.referencePredictorSummary, describeAutoPredictorResponse.referencePredictorSummary) &&
        Objects.equals(this.estimatedTimeRemainingInMinutes, describeAutoPredictorResponse.estimatedTimeRemainingInMinutes) &&
        Objects.equals(this.status, describeAutoPredictorResponse.status) &&
        Objects.equals(this.message, describeAutoPredictorResponse.message) &&
        Objects.equals(this.creationTime, describeAutoPredictorResponse.creationTime) &&
        Objects.equals(this.lastModificationTime, describeAutoPredictorResponse.lastModificationTime) &&
        Objects.equals(this.optimizationMetric, describeAutoPredictorResponse.optimizationMetric) &&
        Objects.equals(this.explainabilityInfo, describeAutoPredictorResponse.explainabilityInfo) &&
        Objects.equals(this.monitorInfo, describeAutoPredictorResponse.monitorInfo) &&
        Objects.equals(this.timeAlignmentBoundary, describeAutoPredictorResponse.timeAlignmentBoundary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(predictorArn, predictorName, forecastHorizon, forecastTypes, forecastFrequency, forecastDimensions, datasetImportJobArns, dataConfig, encryptionConfig, referencePredictorSummary, estimatedTimeRemainingInMinutes, status, message, creationTime, lastModificationTime, optimizationMetric, explainabilityInfo, monitorInfo, timeAlignmentBoundary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAutoPredictorResponse {\n");
    sb.append("    predictorArn: ").append(toIndentedString(predictorArn)).append("\n");
    sb.append("    predictorName: ").append(toIndentedString(predictorName)).append("\n");
    sb.append("    forecastHorizon: ").append(toIndentedString(forecastHorizon)).append("\n");
    sb.append("    forecastTypes: ").append(toIndentedString(forecastTypes)).append("\n");
    sb.append("    forecastFrequency: ").append(toIndentedString(forecastFrequency)).append("\n");
    sb.append("    forecastDimensions: ").append(toIndentedString(forecastDimensions)).append("\n");
    sb.append("    datasetImportJobArns: ").append(toIndentedString(datasetImportJobArns)).append("\n");
    sb.append("    dataConfig: ").append(toIndentedString(dataConfig)).append("\n");
    sb.append("    encryptionConfig: ").append(toIndentedString(encryptionConfig)).append("\n");
    sb.append("    referencePredictorSummary: ").append(toIndentedString(referencePredictorSummary)).append("\n");
    sb.append("    estimatedTimeRemainingInMinutes: ").append(toIndentedString(estimatedTimeRemainingInMinutes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModificationTime: ").append(toIndentedString(lastModificationTime)).append("\n");
    sb.append("    optimizationMetric: ").append(toIndentedString(optimizationMetric)).append("\n");
    sb.append("    explainabilityInfo: ").append(toIndentedString(explainabilityInfo)).append("\n");
    sb.append("    monitorInfo: ").append(toIndentedString(monitorInfo)).append("\n");
    sb.append("    timeAlignmentBoundary: ").append(toIndentedString(timeAlignmentBoundary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PredictorArn");
    openapiFields.add("PredictorName");
    openapiFields.add("ForecastHorizon");
    openapiFields.add("ForecastTypes");
    openapiFields.add("ForecastFrequency");
    openapiFields.add("ForecastDimensions");
    openapiFields.add("DatasetImportJobArns");
    openapiFields.add("DataConfig");
    openapiFields.add("EncryptionConfig");
    openapiFields.add("ReferencePredictorSummary");
    openapiFields.add("EstimatedTimeRemainingInMinutes");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModificationTime");
    openapiFields.add("OptimizationMetric");
    openapiFields.add("ExplainabilityInfo");
    openapiFields.add("MonitorInfo");
    openapiFields.add("TimeAlignmentBoundary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAutoPredictorResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAutoPredictorResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAutoPredictorResponse is not found in the empty JSON string", DescribeAutoPredictorResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAutoPredictorResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAutoPredictorResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PredictorArn`
      if (jsonObj.get("PredictorArn") != null && !jsonObj.get("PredictorArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PredictorArn"));
      }
      // validate the optional field `PredictorName`
      if (jsonObj.get("PredictorName") != null && !jsonObj.get("PredictorName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PredictorName"));
      }
      // validate the optional field `ForecastHorizon`
      if (jsonObj.get("ForecastHorizon") != null && !jsonObj.get("ForecastHorizon").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ForecastHorizon"));
      }
      // validate the optional field `ForecastTypes`
      if (jsonObj.get("ForecastTypes") != null && !jsonObj.get("ForecastTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ForecastTypes"));
      }
      // validate the optional field `ForecastFrequency`
      if (jsonObj.get("ForecastFrequency") != null && !jsonObj.get("ForecastFrequency").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ForecastFrequency"));
      }
      // validate the optional field `ForecastDimensions`
      if (jsonObj.get("ForecastDimensions") != null && !jsonObj.get("ForecastDimensions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ForecastDimensions"));
      }
      // validate the optional field `DatasetImportJobArns`
      if (jsonObj.get("DatasetImportJobArns") != null && !jsonObj.get("DatasetImportJobArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DatasetImportJobArns"));
      }
      // validate the optional field `DataConfig`
      if (jsonObj.get("DataConfig") != null && !jsonObj.get("DataConfig").isJsonNull()) {
        CreateAutoPredictorRequestDataConfig.validateJsonElement(jsonObj.get("DataConfig"));
      }
      // validate the optional field `EncryptionConfig`
      if (jsonObj.get("EncryptionConfig") != null && !jsonObj.get("EncryptionConfig").isJsonNull()) {
        EncryptionConfig.validateJsonElement(jsonObj.get("EncryptionConfig"));
      }
      // validate the optional field `ReferencePredictorSummary`
      if (jsonObj.get("ReferencePredictorSummary") != null && !jsonObj.get("ReferencePredictorSummary").isJsonNull()) {
        DescribeAutoPredictorResponseReferencePredictorSummary.validateJsonElement(jsonObj.get("ReferencePredictorSummary"));
      }
      // validate the optional field `EstimatedTimeRemainingInMinutes`
      if (jsonObj.get("EstimatedTimeRemainingInMinutes") != null && !jsonObj.get("EstimatedTimeRemainingInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedTimeRemainingInMinutes"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModificationTime`
      if (jsonObj.get("LastModificationTime") != null && !jsonObj.get("LastModificationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModificationTime"));
      }
      // validate the optional field `OptimizationMetric`
      if (jsonObj.get("OptimizationMetric") != null && !jsonObj.get("OptimizationMetric").isJsonNull()) {
        OptimizationMetric.validateJsonElement(jsonObj.get("OptimizationMetric"));
      }
      // validate the optional field `ExplainabilityInfo`
      if (jsonObj.get("ExplainabilityInfo") != null && !jsonObj.get("ExplainabilityInfo").isJsonNull()) {
        DescribeAutoPredictorResponseExplainabilityInfo.validateJsonElement(jsonObj.get("ExplainabilityInfo"));
      }
      // validate the optional field `MonitorInfo`
      if (jsonObj.get("MonitorInfo") != null && !jsonObj.get("MonitorInfo").isJsonNull()) {
        DescribeAutoPredictorResponseMonitorInfo.validateJsonElement(jsonObj.get("MonitorInfo"));
      }
      // validate the optional field `TimeAlignmentBoundary`
      if (jsonObj.get("TimeAlignmentBoundary") != null && !jsonObj.get("TimeAlignmentBoundary").isJsonNull()) {
        DescribeAutoPredictorResponseTimeAlignmentBoundary.validateJsonElement(jsonObj.get("TimeAlignmentBoundary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAutoPredictorResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAutoPredictorResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAutoPredictorResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAutoPredictorResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAutoPredictorResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAutoPredictorResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAutoPredictorResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAutoPredictorResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAutoPredictorResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAutoPredictorResponse
   */
  public static DescribeAutoPredictorResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAutoPredictorResponse.class);
  }

  /**
   * Convert an instance of DescribeAutoPredictorResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

