/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeMonitorResponseBaseline;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeMonitorResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:07.923995-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeMonitorResponse {
  public static final String SERIALIZED_NAME_MONITOR_NAME = "MonitorName";
  @SerializedName(SERIALIZED_NAME_MONITOR_NAME)
  private String monitorName;

  public static final String SERIALIZED_NAME_MONITOR_ARN = "MonitorArn";
  @SerializedName(SERIALIZED_NAME_MONITOR_ARN)
  private String monitorArn;

  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_LAST_EVALUATION_TIME = "LastEvaluationTime";
  @SerializedName(SERIALIZED_NAME_LAST_EVALUATION_TIME)
  private OffsetDateTime lastEvaluationTime;

  public static final String SERIALIZED_NAME_LAST_EVALUATION_STATE = "LastEvaluationState";
  @SerializedName(SERIALIZED_NAME_LAST_EVALUATION_STATE)
  private String lastEvaluationState;

  public static final String SERIALIZED_NAME_BASELINE = "Baseline";
  @SerializedName(SERIALIZED_NAME_BASELINE)
  private DescribeMonitorResponseBaseline baseline;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFICATION_TIME = "LastModificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFICATION_TIME)
  private OffsetDateTime lastModificationTime;

  public static final String SERIALIZED_NAME_ESTIMATED_EVALUATION_TIME_REMAINING_IN_MINUTES = "EstimatedEvaluationTimeRemainingInMinutes";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_EVALUATION_TIME_REMAINING_IN_MINUTES)
  private Integer estimatedEvaluationTimeRemainingInMinutes;

  public DescribeMonitorResponse() {
  }

  public DescribeMonitorResponse monitorName(String monitorName) {
    this.monitorName = monitorName;
    return this;
  }

  /**
   * Get monitorName
   * @return monitorName
   */
  @javax.annotation.Nullable
  public String getMonitorName() {
    return monitorName;
  }

  public void setMonitorName(String monitorName) {
    this.monitorName = monitorName;
  }


  public DescribeMonitorResponse monitorArn(String monitorArn) {
    this.monitorArn = monitorArn;
    return this;
  }

  /**
   * Get monitorArn
   * @return monitorArn
   */
  @javax.annotation.Nullable
  public String getMonitorArn() {
    return monitorArn;
  }

  public void setMonitorArn(String monitorArn) {
    this.monitorArn = monitorArn;
  }


  public DescribeMonitorResponse resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * Get resourceArn
   * @return resourceArn
   */
  @javax.annotation.Nullable
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public DescribeMonitorResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DescribeMonitorResponse lastEvaluationTime(OffsetDateTime lastEvaluationTime) {
    this.lastEvaluationTime = lastEvaluationTime;
    return this;
  }

  /**
   * Get lastEvaluationTime
   * @return lastEvaluationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastEvaluationTime() {
    return lastEvaluationTime;
  }

  public void setLastEvaluationTime(OffsetDateTime lastEvaluationTime) {
    this.lastEvaluationTime = lastEvaluationTime;
  }


  public DescribeMonitorResponse lastEvaluationState(String lastEvaluationState) {
    this.lastEvaluationState = lastEvaluationState;
    return this;
  }

  /**
   * Get lastEvaluationState
   * @return lastEvaluationState
   */
  @javax.annotation.Nullable
  public String getLastEvaluationState() {
    return lastEvaluationState;
  }

  public void setLastEvaluationState(String lastEvaluationState) {
    this.lastEvaluationState = lastEvaluationState;
  }


  public DescribeMonitorResponse baseline(DescribeMonitorResponseBaseline baseline) {
    this.baseline = baseline;
    return this;
  }

  /**
   * Get baseline
   * @return baseline
   */
  @javax.annotation.Nullable
  public DescribeMonitorResponseBaseline getBaseline() {
    return baseline;
  }

  public void setBaseline(DescribeMonitorResponseBaseline baseline) {
    this.baseline = baseline;
  }


  public DescribeMonitorResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public DescribeMonitorResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeMonitorResponse lastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
    return this;
  }

  /**
   * Get lastModificationTime
   * @return lastModificationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModificationTime() {
    return lastModificationTime;
  }

  public void setLastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
  }


  public DescribeMonitorResponse estimatedEvaluationTimeRemainingInMinutes(Integer estimatedEvaluationTimeRemainingInMinutes) {
    this.estimatedEvaluationTimeRemainingInMinutes = estimatedEvaluationTimeRemainingInMinutes;
    return this;
  }

  /**
   * Get estimatedEvaluationTimeRemainingInMinutes
   * @return estimatedEvaluationTimeRemainingInMinutes
   */
  @javax.annotation.Nullable
  public Integer getEstimatedEvaluationTimeRemainingInMinutes() {
    return estimatedEvaluationTimeRemainingInMinutes;
  }

  public void setEstimatedEvaluationTimeRemainingInMinutes(Integer estimatedEvaluationTimeRemainingInMinutes) {
    this.estimatedEvaluationTimeRemainingInMinutes = estimatedEvaluationTimeRemainingInMinutes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMonitorResponse describeMonitorResponse = (DescribeMonitorResponse) o;
    return Objects.equals(this.monitorName, describeMonitorResponse.monitorName) &&
        Objects.equals(this.monitorArn, describeMonitorResponse.monitorArn) &&
        Objects.equals(this.resourceArn, describeMonitorResponse.resourceArn) &&
        Objects.equals(this.status, describeMonitorResponse.status) &&
        Objects.equals(this.lastEvaluationTime, describeMonitorResponse.lastEvaluationTime) &&
        Objects.equals(this.lastEvaluationState, describeMonitorResponse.lastEvaluationState) &&
        Objects.equals(this.baseline, describeMonitorResponse.baseline) &&
        Objects.equals(this.message, describeMonitorResponse.message) &&
        Objects.equals(this.creationTime, describeMonitorResponse.creationTime) &&
        Objects.equals(this.lastModificationTime, describeMonitorResponse.lastModificationTime) &&
        Objects.equals(this.estimatedEvaluationTimeRemainingInMinutes, describeMonitorResponse.estimatedEvaluationTimeRemainingInMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(monitorName, monitorArn, resourceArn, status, lastEvaluationTime, lastEvaluationState, baseline, message, creationTime, lastModificationTime, estimatedEvaluationTimeRemainingInMinutes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMonitorResponse {\n");
    sb.append("    monitorName: ").append(toIndentedString(monitorName)).append("\n");
    sb.append("    monitorArn: ").append(toIndentedString(monitorArn)).append("\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastEvaluationTime: ").append(toIndentedString(lastEvaluationTime)).append("\n");
    sb.append("    lastEvaluationState: ").append(toIndentedString(lastEvaluationState)).append("\n");
    sb.append("    baseline: ").append(toIndentedString(baseline)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModificationTime: ").append(toIndentedString(lastModificationTime)).append("\n");
    sb.append("    estimatedEvaluationTimeRemainingInMinutes: ").append(toIndentedString(estimatedEvaluationTimeRemainingInMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MonitorName");
    openapiFields.add("MonitorArn");
    openapiFields.add("ResourceArn");
    openapiFields.add("Status");
    openapiFields.add("LastEvaluationTime");
    openapiFields.add("LastEvaluationState");
    openapiFields.add("Baseline");
    openapiFields.add("Message");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModificationTime");
    openapiFields.add("EstimatedEvaluationTimeRemainingInMinutes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeMonitorResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeMonitorResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeMonitorResponse is not found in the empty JSON string", DescribeMonitorResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeMonitorResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeMonitorResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MonitorName`
      if (jsonObj.get("MonitorName") != null && !jsonObj.get("MonitorName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitorName"));
      }
      // validate the optional field `MonitorArn`
      if (jsonObj.get("MonitorArn") != null && !jsonObj.get("MonitorArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitorArn"));
      }
      // validate the optional field `ResourceArn`
      if (jsonObj.get("ResourceArn") != null && !jsonObj.get("ResourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LastEvaluationTime`
      if (jsonObj.get("LastEvaluationTime") != null && !jsonObj.get("LastEvaluationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastEvaluationTime"));
      }
      // validate the optional field `LastEvaluationState`
      if (jsonObj.get("LastEvaluationState") != null && !jsonObj.get("LastEvaluationState").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastEvaluationState"));
      }
      // validate the optional field `Baseline`
      if (jsonObj.get("Baseline") != null && !jsonObj.get("Baseline").isJsonNull()) {
        DescribeMonitorResponseBaseline.validateJsonElement(jsonObj.get("Baseline"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModificationTime`
      if (jsonObj.get("LastModificationTime") != null && !jsonObj.get("LastModificationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModificationTime"));
      }
      // validate the optional field `EstimatedEvaluationTimeRemainingInMinutes`
      if (jsonObj.get("EstimatedEvaluationTimeRemainingInMinutes") != null && !jsonObj.get("EstimatedEvaluationTimeRemainingInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedEvaluationTimeRemainingInMinutes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeMonitorResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeMonitorResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeMonitorResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeMonitorResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeMonitorResponse>() {
           @Override
           public void write(JsonWriter out, DescribeMonitorResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeMonitorResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeMonitorResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeMonitorResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeMonitorResponse
   */
  public static DescribeMonitorResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeMonitorResponse.class);
  }

  /**
   * Convert an instance of DescribeMonitorResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

