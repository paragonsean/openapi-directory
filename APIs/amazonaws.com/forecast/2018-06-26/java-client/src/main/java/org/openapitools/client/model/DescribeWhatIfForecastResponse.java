/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeWhatIfForecastResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:07.923995-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeWhatIfForecastResponse {
  public static final String SERIALIZED_NAME_WHAT_IF_FORECAST_NAME = "WhatIfForecastName";
  @SerializedName(SERIALIZED_NAME_WHAT_IF_FORECAST_NAME)
  private String whatIfForecastName;

  public static final String SERIALIZED_NAME_WHAT_IF_FORECAST_ARN = "WhatIfForecastArn";
  @SerializedName(SERIALIZED_NAME_WHAT_IF_FORECAST_ARN)
  private String whatIfForecastArn;

  public static final String SERIALIZED_NAME_WHAT_IF_ANALYSIS_ARN = "WhatIfAnalysisArn";
  @SerializedName(SERIALIZED_NAME_WHAT_IF_ANALYSIS_ARN)
  private String whatIfAnalysisArn;

  public static final String SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_IN_MINUTES = "EstimatedTimeRemainingInMinutes";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_IN_MINUTES)
  private Integer estimatedTimeRemainingInMinutes;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFICATION_TIME = "LastModificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFICATION_TIME)
  private OffsetDateTime lastModificationTime;

  public static final String SERIALIZED_NAME_TIME_SERIES_TRANSFORMATIONS = "TimeSeriesTransformations";
  @SerializedName(SERIALIZED_NAME_TIME_SERIES_TRANSFORMATIONS)
  private List timeSeriesTransformations;

  public static final String SERIALIZED_NAME_TIME_SERIES_REPLACEMENTS_DATA_SOURCE = "TimeSeriesReplacementsDataSource";
  @SerializedName(SERIALIZED_NAME_TIME_SERIES_REPLACEMENTS_DATA_SOURCE)
  private DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource timeSeriesReplacementsDataSource;

  public static final String SERIALIZED_NAME_FORECAST_TYPES = "ForecastTypes";
  @SerializedName(SERIALIZED_NAME_FORECAST_TYPES)
  private List forecastTypes;

  public DescribeWhatIfForecastResponse() {
  }

  public DescribeWhatIfForecastResponse whatIfForecastName(String whatIfForecastName) {
    this.whatIfForecastName = whatIfForecastName;
    return this;
  }

  /**
   * Get whatIfForecastName
   * @return whatIfForecastName
   */
  @javax.annotation.Nullable
  public String getWhatIfForecastName() {
    return whatIfForecastName;
  }

  public void setWhatIfForecastName(String whatIfForecastName) {
    this.whatIfForecastName = whatIfForecastName;
  }


  public DescribeWhatIfForecastResponse whatIfForecastArn(String whatIfForecastArn) {
    this.whatIfForecastArn = whatIfForecastArn;
    return this;
  }

  /**
   * Get whatIfForecastArn
   * @return whatIfForecastArn
   */
  @javax.annotation.Nullable
  public String getWhatIfForecastArn() {
    return whatIfForecastArn;
  }

  public void setWhatIfForecastArn(String whatIfForecastArn) {
    this.whatIfForecastArn = whatIfForecastArn;
  }


  public DescribeWhatIfForecastResponse whatIfAnalysisArn(String whatIfAnalysisArn) {
    this.whatIfAnalysisArn = whatIfAnalysisArn;
    return this;
  }

  /**
   * Get whatIfAnalysisArn
   * @return whatIfAnalysisArn
   */
  @javax.annotation.Nullable
  public String getWhatIfAnalysisArn() {
    return whatIfAnalysisArn;
  }

  public void setWhatIfAnalysisArn(String whatIfAnalysisArn) {
    this.whatIfAnalysisArn = whatIfAnalysisArn;
  }


  public DescribeWhatIfForecastResponse estimatedTimeRemainingInMinutes(Integer estimatedTimeRemainingInMinutes) {
    this.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes;
    return this;
  }

  /**
   * Get estimatedTimeRemainingInMinutes
   * @return estimatedTimeRemainingInMinutes
   */
  @javax.annotation.Nullable
  public Integer getEstimatedTimeRemainingInMinutes() {
    return estimatedTimeRemainingInMinutes;
  }

  public void setEstimatedTimeRemainingInMinutes(Integer estimatedTimeRemainingInMinutes) {
    this.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes;
  }


  public DescribeWhatIfForecastResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DescribeWhatIfForecastResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public DescribeWhatIfForecastResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeWhatIfForecastResponse lastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
    return this;
  }

  /**
   * Get lastModificationTime
   * @return lastModificationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModificationTime() {
    return lastModificationTime;
  }

  public void setLastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
  }


  public DescribeWhatIfForecastResponse timeSeriesTransformations(List timeSeriesTransformations) {
    this.timeSeriesTransformations = timeSeriesTransformations;
    return this;
  }

  /**
   * Get timeSeriesTransformations
   * @return timeSeriesTransformations
   */
  @javax.annotation.Nullable
  public List getTimeSeriesTransformations() {
    return timeSeriesTransformations;
  }

  public void setTimeSeriesTransformations(List timeSeriesTransformations) {
    this.timeSeriesTransformations = timeSeriesTransformations;
  }


  public DescribeWhatIfForecastResponse timeSeriesReplacementsDataSource(DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource timeSeriesReplacementsDataSource) {
    this.timeSeriesReplacementsDataSource = timeSeriesReplacementsDataSource;
    return this;
  }

  /**
   * Get timeSeriesReplacementsDataSource
   * @return timeSeriesReplacementsDataSource
   */
  @javax.annotation.Nullable
  public DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource getTimeSeriesReplacementsDataSource() {
    return timeSeriesReplacementsDataSource;
  }

  public void setTimeSeriesReplacementsDataSource(DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource timeSeriesReplacementsDataSource) {
    this.timeSeriesReplacementsDataSource = timeSeriesReplacementsDataSource;
  }


  public DescribeWhatIfForecastResponse forecastTypes(List forecastTypes) {
    this.forecastTypes = forecastTypes;
    return this;
  }

  /**
   * Get forecastTypes
   * @return forecastTypes
   */
  @javax.annotation.Nullable
  public List getForecastTypes() {
    return forecastTypes;
  }

  public void setForecastTypes(List forecastTypes) {
    this.forecastTypes = forecastTypes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeWhatIfForecastResponse describeWhatIfForecastResponse = (DescribeWhatIfForecastResponse) o;
    return Objects.equals(this.whatIfForecastName, describeWhatIfForecastResponse.whatIfForecastName) &&
        Objects.equals(this.whatIfForecastArn, describeWhatIfForecastResponse.whatIfForecastArn) &&
        Objects.equals(this.whatIfAnalysisArn, describeWhatIfForecastResponse.whatIfAnalysisArn) &&
        Objects.equals(this.estimatedTimeRemainingInMinutes, describeWhatIfForecastResponse.estimatedTimeRemainingInMinutes) &&
        Objects.equals(this.status, describeWhatIfForecastResponse.status) &&
        Objects.equals(this.message, describeWhatIfForecastResponse.message) &&
        Objects.equals(this.creationTime, describeWhatIfForecastResponse.creationTime) &&
        Objects.equals(this.lastModificationTime, describeWhatIfForecastResponse.lastModificationTime) &&
        Objects.equals(this.timeSeriesTransformations, describeWhatIfForecastResponse.timeSeriesTransformations) &&
        Objects.equals(this.timeSeriesReplacementsDataSource, describeWhatIfForecastResponse.timeSeriesReplacementsDataSource) &&
        Objects.equals(this.forecastTypes, describeWhatIfForecastResponse.forecastTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(whatIfForecastName, whatIfForecastArn, whatIfAnalysisArn, estimatedTimeRemainingInMinutes, status, message, creationTime, lastModificationTime, timeSeriesTransformations, timeSeriesReplacementsDataSource, forecastTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeWhatIfForecastResponse {\n");
    sb.append("    whatIfForecastName: ").append(toIndentedString(whatIfForecastName)).append("\n");
    sb.append("    whatIfForecastArn: ").append(toIndentedString(whatIfForecastArn)).append("\n");
    sb.append("    whatIfAnalysisArn: ").append(toIndentedString(whatIfAnalysisArn)).append("\n");
    sb.append("    estimatedTimeRemainingInMinutes: ").append(toIndentedString(estimatedTimeRemainingInMinutes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModificationTime: ").append(toIndentedString(lastModificationTime)).append("\n");
    sb.append("    timeSeriesTransformations: ").append(toIndentedString(timeSeriesTransformations)).append("\n");
    sb.append("    timeSeriesReplacementsDataSource: ").append(toIndentedString(timeSeriesReplacementsDataSource)).append("\n");
    sb.append("    forecastTypes: ").append(toIndentedString(forecastTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WhatIfForecastName");
    openapiFields.add("WhatIfForecastArn");
    openapiFields.add("WhatIfAnalysisArn");
    openapiFields.add("EstimatedTimeRemainingInMinutes");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModificationTime");
    openapiFields.add("TimeSeriesTransformations");
    openapiFields.add("TimeSeriesReplacementsDataSource");
    openapiFields.add("ForecastTypes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeWhatIfForecastResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeWhatIfForecastResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeWhatIfForecastResponse is not found in the empty JSON string", DescribeWhatIfForecastResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeWhatIfForecastResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeWhatIfForecastResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `WhatIfForecastName`
      if (jsonObj.get("WhatIfForecastName") != null && !jsonObj.get("WhatIfForecastName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WhatIfForecastName"));
      }
      // validate the optional field `WhatIfForecastArn`
      if (jsonObj.get("WhatIfForecastArn") != null && !jsonObj.get("WhatIfForecastArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WhatIfForecastArn"));
      }
      // validate the optional field `WhatIfAnalysisArn`
      if (jsonObj.get("WhatIfAnalysisArn") != null && !jsonObj.get("WhatIfAnalysisArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WhatIfAnalysisArn"));
      }
      // validate the optional field `EstimatedTimeRemainingInMinutes`
      if (jsonObj.get("EstimatedTimeRemainingInMinutes") != null && !jsonObj.get("EstimatedTimeRemainingInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedTimeRemainingInMinutes"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModificationTime`
      if (jsonObj.get("LastModificationTime") != null && !jsonObj.get("LastModificationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModificationTime"));
      }
      // validate the optional field `TimeSeriesTransformations`
      if (jsonObj.get("TimeSeriesTransformations") != null && !jsonObj.get("TimeSeriesTransformations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TimeSeriesTransformations"));
      }
      // validate the optional field `TimeSeriesReplacementsDataSource`
      if (jsonObj.get("TimeSeriesReplacementsDataSource") != null && !jsonObj.get("TimeSeriesReplacementsDataSource").isJsonNull()) {
        DescribeWhatIfForecastResponseTimeSeriesReplacementsDataSource.validateJsonElement(jsonObj.get("TimeSeriesReplacementsDataSource"));
      }
      // validate the optional field `ForecastTypes`
      if (jsonObj.get("ForecastTypes") != null && !jsonObj.get("ForecastTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ForecastTypes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeWhatIfForecastResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeWhatIfForecastResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeWhatIfForecastResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeWhatIfForecastResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeWhatIfForecastResponse>() {
           @Override
           public void write(JsonWriter out, DescribeWhatIfForecastResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeWhatIfForecastResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeWhatIfForecastResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeWhatIfForecastResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeWhatIfForecastResponse
   */
  public static DescribeWhatIfForecastResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeWhatIfForecastResponse.class);
  }

  /**
   * Convert an instance of DescribeWhatIfForecastResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

