/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PredictorSummaryReferencePredictorSummary;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides a summary of the predictor properties that are used in the &lt;a&gt;ListPredictors&lt;/a&gt; operation. To get the complete set of properties, call the &lt;a&gt;DescribePredictor&lt;/a&gt; operation, and provide the listed &lt;code&gt;PredictorArn&lt;/code&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:07.923995-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PredictorSummary {
  public static final String SERIALIZED_NAME_PREDICTOR_ARN = "PredictorArn";
  @SerializedName(SERIALIZED_NAME_PREDICTOR_ARN)
  private String predictorArn;

  public static final String SERIALIZED_NAME_PREDICTOR_NAME = "PredictorName";
  @SerializedName(SERIALIZED_NAME_PREDICTOR_NAME)
  private String predictorName;

  public static final String SERIALIZED_NAME_DATASET_GROUP_ARN = "DatasetGroupArn";
  @SerializedName(SERIALIZED_NAME_DATASET_GROUP_ARN)
  private String datasetGroupArn;

  public static final String SERIALIZED_NAME_IS_AUTO_PREDICTOR = "IsAutoPredictor";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_PREDICTOR)
  private Boolean isAutoPredictor;

  public static final String SERIALIZED_NAME_REFERENCE_PREDICTOR_SUMMARY = "ReferencePredictorSummary";
  @SerializedName(SERIALIZED_NAME_REFERENCE_PREDICTOR_SUMMARY)
  private PredictorSummaryReferencePredictorSummary referencePredictorSummary;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFICATION_TIME = "LastModificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFICATION_TIME)
  private OffsetDateTime lastModificationTime;

  public PredictorSummary() {
  }

  public PredictorSummary predictorArn(String predictorArn) {
    this.predictorArn = predictorArn;
    return this;
  }

  /**
   * Get predictorArn
   * @return predictorArn
   */
  @javax.annotation.Nullable
  public String getPredictorArn() {
    return predictorArn;
  }

  public void setPredictorArn(String predictorArn) {
    this.predictorArn = predictorArn;
  }


  public PredictorSummary predictorName(String predictorName) {
    this.predictorName = predictorName;
    return this;
  }

  /**
   * Get predictorName
   * @return predictorName
   */
  @javax.annotation.Nullable
  public String getPredictorName() {
    return predictorName;
  }

  public void setPredictorName(String predictorName) {
    this.predictorName = predictorName;
  }


  public PredictorSummary datasetGroupArn(String datasetGroupArn) {
    this.datasetGroupArn = datasetGroupArn;
    return this;
  }

  /**
   * Get datasetGroupArn
   * @return datasetGroupArn
   */
  @javax.annotation.Nullable
  public String getDatasetGroupArn() {
    return datasetGroupArn;
  }

  public void setDatasetGroupArn(String datasetGroupArn) {
    this.datasetGroupArn = datasetGroupArn;
  }


  public PredictorSummary isAutoPredictor(Boolean isAutoPredictor) {
    this.isAutoPredictor = isAutoPredictor;
    return this;
  }

  /**
   * Get isAutoPredictor
   * @return isAutoPredictor
   */
  @javax.annotation.Nullable
  public Boolean getIsAutoPredictor() {
    return isAutoPredictor;
  }

  public void setIsAutoPredictor(Boolean isAutoPredictor) {
    this.isAutoPredictor = isAutoPredictor;
  }


  public PredictorSummary referencePredictorSummary(PredictorSummaryReferencePredictorSummary referencePredictorSummary) {
    this.referencePredictorSummary = referencePredictorSummary;
    return this;
  }

  /**
   * Get referencePredictorSummary
   * @return referencePredictorSummary
   */
  @javax.annotation.Nullable
  public PredictorSummaryReferencePredictorSummary getReferencePredictorSummary() {
    return referencePredictorSummary;
  }

  public void setReferencePredictorSummary(PredictorSummaryReferencePredictorSummary referencePredictorSummary) {
    this.referencePredictorSummary = referencePredictorSummary;
  }


  public PredictorSummary status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public PredictorSummary message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public PredictorSummary creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public PredictorSummary lastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
    return this;
  }

  /**
   * Get lastModificationTime
   * @return lastModificationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModificationTime() {
    return lastModificationTime;
  }

  public void setLastModificationTime(OffsetDateTime lastModificationTime) {
    this.lastModificationTime = lastModificationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PredictorSummary predictorSummary = (PredictorSummary) o;
    return Objects.equals(this.predictorArn, predictorSummary.predictorArn) &&
        Objects.equals(this.predictorName, predictorSummary.predictorName) &&
        Objects.equals(this.datasetGroupArn, predictorSummary.datasetGroupArn) &&
        Objects.equals(this.isAutoPredictor, predictorSummary.isAutoPredictor) &&
        Objects.equals(this.referencePredictorSummary, predictorSummary.referencePredictorSummary) &&
        Objects.equals(this.status, predictorSummary.status) &&
        Objects.equals(this.message, predictorSummary.message) &&
        Objects.equals(this.creationTime, predictorSummary.creationTime) &&
        Objects.equals(this.lastModificationTime, predictorSummary.lastModificationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(predictorArn, predictorName, datasetGroupArn, isAutoPredictor, referencePredictorSummary, status, message, creationTime, lastModificationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PredictorSummary {\n");
    sb.append("    predictorArn: ").append(toIndentedString(predictorArn)).append("\n");
    sb.append("    predictorName: ").append(toIndentedString(predictorName)).append("\n");
    sb.append("    datasetGroupArn: ").append(toIndentedString(datasetGroupArn)).append("\n");
    sb.append("    isAutoPredictor: ").append(toIndentedString(isAutoPredictor)).append("\n");
    sb.append("    referencePredictorSummary: ").append(toIndentedString(referencePredictorSummary)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModificationTime: ").append(toIndentedString(lastModificationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PredictorArn");
    openapiFields.add("PredictorName");
    openapiFields.add("DatasetGroupArn");
    openapiFields.add("IsAutoPredictor");
    openapiFields.add("ReferencePredictorSummary");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModificationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PredictorSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PredictorSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PredictorSummary is not found in the empty JSON string", PredictorSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PredictorSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PredictorSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PredictorArn`
      if (jsonObj.get("PredictorArn") != null && !jsonObj.get("PredictorArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PredictorArn"));
      }
      // validate the optional field `PredictorName`
      if (jsonObj.get("PredictorName") != null && !jsonObj.get("PredictorName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PredictorName"));
      }
      // validate the optional field `DatasetGroupArn`
      if (jsonObj.get("DatasetGroupArn") != null && !jsonObj.get("DatasetGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatasetGroupArn"));
      }
      // validate the optional field `IsAutoPredictor`
      if (jsonObj.get("IsAutoPredictor") != null && !jsonObj.get("IsAutoPredictor").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsAutoPredictor"));
      }
      // validate the optional field `ReferencePredictorSummary`
      if (jsonObj.get("ReferencePredictorSummary") != null && !jsonObj.get("ReferencePredictorSummary").isJsonNull()) {
        PredictorSummaryReferencePredictorSummary.validateJsonElement(jsonObj.get("ReferencePredictorSummary"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModificationTime`
      if (jsonObj.get("LastModificationTime") != null && !jsonObj.get("LastModificationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModificationTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PredictorSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PredictorSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PredictorSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PredictorSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<PredictorSummary>() {
           @Override
           public void write(JsonWriter out, PredictorSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PredictorSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PredictorSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PredictorSummary
   * @throws IOException if the JSON string is invalid with respect to PredictorSummary
   */
  public static PredictorSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PredictorSummary.class);
  }

  /**
   * Convert an instance of PredictorSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

