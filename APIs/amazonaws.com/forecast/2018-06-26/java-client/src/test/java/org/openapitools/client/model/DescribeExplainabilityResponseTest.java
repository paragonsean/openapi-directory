/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateExplainabilityRequestExplainabilityConfig;
import org.openapitools.client.model.DataSource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeExplainabilityResponse
 */
public class DescribeExplainabilityResponseTest {
    private final DescribeExplainabilityResponse model = new DescribeExplainabilityResponse();

    /**
     * Model tests for DescribeExplainabilityResponse
     */
    @Test
    public void testDescribeExplainabilityResponse() {
        // TODO: test DescribeExplainabilityResponse
    }

    /**
     * Test the property 'explainabilityArn'
     */
    @Test
    public void explainabilityArnTest() {
        // TODO: test explainabilityArn
    }

    /**
     * Test the property 'explainabilityName'
     */
    @Test
    public void explainabilityNameTest() {
        // TODO: test explainabilityName
    }

    /**
     * Test the property 'resourceArn'
     */
    @Test
    public void resourceArnTest() {
        // TODO: test resourceArn
    }

    /**
     * Test the property 'explainabilityConfig'
     */
    @Test
    public void explainabilityConfigTest() {
        // TODO: test explainabilityConfig
    }

    /**
     * Test the property 'enableVisualization'
     */
    @Test
    public void enableVisualizationTest() {
        // TODO: test enableVisualization
    }

    /**
     * Test the property 'dataSource'
     */
    @Test
    public void dataSourceTest() {
        // TODO: test dataSource
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'startDateTime'
     */
    @Test
    public void startDateTimeTest() {
        // TODO: test startDateTime
    }

    /**
     * Test the property 'endDateTime'
     */
    @Test
    public void endDateTimeTest() {
        // TODO: test endDateTime
    }

    /**
     * Test the property 'estimatedTimeRemainingInMinutes'
     */
    @Test
    public void estimatedTimeRemainingInMinutesTest() {
        // TODO: test estimatedTimeRemainingInMinutes
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'lastModificationTime'
     */
    @Test
    public void lastModificationTimeTest() {
        // TODO: test lastModificationTime
    }

}
