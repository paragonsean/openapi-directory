/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateDatasetImportJobRequestDataSource;
import org.openapitools.client.model.ImportMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateDatasetImportJobRequest
 */
public class CreateDatasetImportJobRequestTest {
    private final CreateDatasetImportJobRequest model = new CreateDatasetImportJobRequest();

    /**
     * Model tests for CreateDatasetImportJobRequest
     */
    @Test
    public void testCreateDatasetImportJobRequest() {
        // TODO: test CreateDatasetImportJobRequest
    }

    /**
     * Test the property 'datasetImportJobName'
     */
    @Test
    public void datasetImportJobNameTest() {
        // TODO: test datasetImportJobName
    }

    /**
     * Test the property 'datasetArn'
     */
    @Test
    public void datasetArnTest() {
        // TODO: test datasetArn
    }

    /**
     * Test the property 'dataSource'
     */
    @Test
    public void dataSourceTest() {
        // TODO: test dataSource
    }

    /**
     * Test the property 'timestampFormat'
     */
    @Test
    public void timestampFormatTest() {
        // TODO: test timestampFormat
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'useGeolocationForTimeZone'
     */
    @Test
    public void useGeolocationForTimeZoneTest() {
        // TODO: test useGeolocationForTimeZone
    }

    /**
     * Test the property 'geolocationFormat'
     */
    @Test
    public void geolocationFormatTest() {
        // TODO: test geolocationFormat
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'importMode'
     */
    @Test
    public void importModeTest() {
        // TODO: test importMode
    }

}
