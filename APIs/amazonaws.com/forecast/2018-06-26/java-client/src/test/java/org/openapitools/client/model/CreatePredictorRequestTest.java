/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AutoMLOverrideStrategy;
import org.openapitools.client.model.CreateDatasetRequestEncryptionConfig;
import org.openapitools.client.model.CreatePredictorRequestEvaluationParameters;
import org.openapitools.client.model.CreatePredictorRequestFeaturizationConfig;
import org.openapitools.client.model.CreatePredictorRequestHPOConfig;
import org.openapitools.client.model.CreatePredictorRequestInputDataConfig;
import org.openapitools.client.model.OptimizationMetric;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreatePredictorRequest
 */
public class CreatePredictorRequestTest {
    private final CreatePredictorRequest model = new CreatePredictorRequest();

    /**
     * Model tests for CreatePredictorRequest
     */
    @Test
    public void testCreatePredictorRequest() {
        // TODO: test CreatePredictorRequest
    }

    /**
     * Test the property 'predictorName'
     */
    @Test
    public void predictorNameTest() {
        // TODO: test predictorName
    }

    /**
     * Test the property 'algorithmArn'
     */
    @Test
    public void algorithmArnTest() {
        // TODO: test algorithmArn
    }

    /**
     * Test the property 'forecastHorizon'
     */
    @Test
    public void forecastHorizonTest() {
        // TODO: test forecastHorizon
    }

    /**
     * Test the property 'forecastTypes'
     */
    @Test
    public void forecastTypesTest() {
        // TODO: test forecastTypes
    }

    /**
     * Test the property 'performAutoML'
     */
    @Test
    public void performAutoMLTest() {
        // TODO: test performAutoML
    }

    /**
     * Test the property 'autoMLOverrideStrategy'
     */
    @Test
    public void autoMLOverrideStrategyTest() {
        // TODO: test autoMLOverrideStrategy
    }

    /**
     * Test the property 'performHPO'
     */
    @Test
    public void performHPOTest() {
        // TODO: test performHPO
    }

    /**
     * Test the property 'trainingParameters'
     */
    @Test
    public void trainingParametersTest() {
        // TODO: test trainingParameters
    }

    /**
     * Test the property 'evaluationParameters'
     */
    @Test
    public void evaluationParametersTest() {
        // TODO: test evaluationParameters
    }

    /**
     * Test the property 'hpOConfig'
     */
    @Test
    public void hpOConfigTest() {
        // TODO: test hpOConfig
    }

    /**
     * Test the property 'inputDataConfig'
     */
    @Test
    public void inputDataConfigTest() {
        // TODO: test inputDataConfig
    }

    /**
     * Test the property 'featurizationConfig'
     */
    @Test
    public void featurizationConfigTest() {
        // TODO: test featurizationConfig
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'optimizationMetric'
     */
    @Test
    public void optimizationMetricTest() {
        // TODO: test optimizationMetric
    }

}
