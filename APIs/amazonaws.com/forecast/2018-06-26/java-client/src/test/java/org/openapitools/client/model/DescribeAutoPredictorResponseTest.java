/*
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAutoPredictorRequestDataConfig;
import org.openapitools.client.model.DescribeAutoPredictorResponseExplainabilityInfo;
import org.openapitools.client.model.DescribeAutoPredictorResponseMonitorInfo;
import org.openapitools.client.model.DescribeAutoPredictorResponseReferencePredictorSummary;
import org.openapitools.client.model.DescribeAutoPredictorResponseTimeAlignmentBoundary;
import org.openapitools.client.model.EncryptionConfig;
import org.openapitools.client.model.OptimizationMetric;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeAutoPredictorResponse
 */
public class DescribeAutoPredictorResponseTest {
    private final DescribeAutoPredictorResponse model = new DescribeAutoPredictorResponse();

    /**
     * Model tests for DescribeAutoPredictorResponse
     */
    @Test
    public void testDescribeAutoPredictorResponse() {
        // TODO: test DescribeAutoPredictorResponse
    }

    /**
     * Test the property 'predictorArn'
     */
    @Test
    public void predictorArnTest() {
        // TODO: test predictorArn
    }

    /**
     * Test the property 'predictorName'
     */
    @Test
    public void predictorNameTest() {
        // TODO: test predictorName
    }

    /**
     * Test the property 'forecastHorizon'
     */
    @Test
    public void forecastHorizonTest() {
        // TODO: test forecastHorizon
    }

    /**
     * Test the property 'forecastTypes'
     */
    @Test
    public void forecastTypesTest() {
        // TODO: test forecastTypes
    }

    /**
     * Test the property 'forecastFrequency'
     */
    @Test
    public void forecastFrequencyTest() {
        // TODO: test forecastFrequency
    }

    /**
     * Test the property 'forecastDimensions'
     */
    @Test
    public void forecastDimensionsTest() {
        // TODO: test forecastDimensions
    }

    /**
     * Test the property 'datasetImportJobArns'
     */
    @Test
    public void datasetImportJobArnsTest() {
        // TODO: test datasetImportJobArns
    }

    /**
     * Test the property 'dataConfig'
     */
    @Test
    public void dataConfigTest() {
        // TODO: test dataConfig
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'referencePredictorSummary'
     */
    @Test
    public void referencePredictorSummaryTest() {
        // TODO: test referencePredictorSummary
    }

    /**
     * Test the property 'estimatedTimeRemainingInMinutes'
     */
    @Test
    public void estimatedTimeRemainingInMinutesTest() {
        // TODO: test estimatedTimeRemainingInMinutes
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'lastModificationTime'
     */
    @Test
    public void lastModificationTimeTest() {
        // TODO: test lastModificationTime
    }

    /**
     * Test the property 'optimizationMetric'
     */
    @Test
    public void optimizationMetricTest() {
        // TODO: test optimizationMetric
    }

    /**
     * Test the property 'explainabilityInfo'
     */
    @Test
    public void explainabilityInfoTest() {
        // TODO: test explainabilityInfo
    }

    /**
     * Test the property 'monitorInfo'
     */
    @Test
    public void monitorInfoTest() {
        // TODO: test monitorInfo
    }

    /**
     * Test the property 'timeAlignmentBoundary'
     */
    @Test
    public void timeAlignmentBoundaryTest() {
        // TODO: test timeAlignmentBoundary
    }

}
