openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Provides APIs for creating and managing Amazon Forecast resources.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Forecast Service
  version: 2018-06-26
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: forecast
  x-aws-signingName: forecast
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/forecast-2018-06-26.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/forecast/
servers:
- description: The Amazon Forecast Service multi-region endpoint
  url: "http://forecast.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Forecast Service multi-region endpoint
  url: "https://forecast.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Forecast Service endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://forecast.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Forecast Service endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://forecast.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AmazonForecast.CreateAutoPredictor:
    post:
      description: "<p>Creates an Amazon Forecast predictor.</p> <p>Amazon Forecast\
        \ creates predictors with AutoPredictor, which involves applying the optimal\
        \ combination of algorithms to each time series in your datasets. You can\
        \ use <a>CreateAutoPredictor</a> to create new predictors or upgrade/retrain\
        \ existing predictors.</p> <p> <b>Creating new predictors</b> </p> <p>The\
        \ following parameters are required when creating a new predictor:</p> <ul>\
        \ <li> <p> <code>PredictorName</code> - A unique name for the predictor.</p>\
        \ </li> <li> <p> <code>DatasetGroupArn</code> - The ARN of the dataset group\
        \ used to train the predictor.</p> </li> <li> <p> <code>ForecastFrequency</code>\
        \ - The granularity of your forecasts (hourly, daily, weekly, etc).</p> </li>\
        \ <li> <p> <code>ForecastHorizon</code> - The number of time-steps that the\
        \ model predicts. The forecast horizon is also called the prediction length.</p>\
        \ </li> </ul> <p>When creating a new predictor, do not specify a value for\
        \ <code>ReferencePredictorArn</code>.</p> <p> <b>Upgrading and retraining\
        \ predictors</b> </p> <p>The following parameters are required when retraining\
        \ or upgrading a predictor:</p> <ul> <li> <p> <code>PredictorName</code> -\
        \ A unique name for the predictor.</p> </li> <li> <p> <code>ReferencePredictorArn</code>\
        \ - The ARN of the predictor to retrain or upgrade.</p> </li> </ul> <p>When\
        \ upgrading or retraining a predictor, only specify values for the <code>ReferencePredictorArn</code>\
        \ and <code>PredictorName</code>. </p>"
      operationId: CreateAutoPredictor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateAutoPredictor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutoPredictorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAutoPredictorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateDataset:
    post:
      description: "<p>Creates an Amazon Forecast dataset. The information about the\
        \ dataset that you provide helps Forecast understand how to consume the data\
        \ for model training. This includes the following:</p> <ul> <li> <p> <i> <code>DataFrequency</code>\
        \ </i> - How frequently your historical time-series data is collected.</p>\
        \ </li> <li> <p> <i> <code>Domain</code> </i> and <i> <code>DatasetType</code>\
        \ </i> - Each dataset has an associated dataset domain and a type within the\
        \ domain. Amazon Forecast provides a list of predefined domains and types\
        \ within each domain. For each unique dataset domain and type within the domain,\
        \ Amazon Forecast requires your data to include a minimum set of predefined\
        \ fields.</p> </li> <li> <p> <i> <code>Schema</code> </i> - A schema specifies\
        \ the fields in the dataset, including the field name and data type.</p> </li>\
        \ </ul> <p>After creating a dataset, you import your training data into it\
        \ and add the dataset to a dataset group. You use the dataset group to create\
        \ a predictor. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html\"\
        >Importing datasets</a>.</p> <p>To get a list of all your datasets, use the\
        \ <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasets.html\"\
        >ListDatasets</a> operation.</p> <p>For example Forecast datasets, see the\
        \ <a href=\"https://github.com/aws-samples/amazon-forecast-samples\">Amazon\
        \ Forecast Sample GitHub repository</a>.</p> <note> <p>The <code>Status</code>\
        \ of a dataset must be <code>ACTIVE</code> before you can import training\
        \ data. Use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> operation to get the status.</p> </note>"
      operationId: CreateDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateDatasetGroup:
    post:
      description: "<p>Creates a dataset group, which holds a collection of related\
        \ datasets. You can add datasets to the dataset group when you create the\
        \ dataset group, or later by using the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html\"\
        >UpdateDatasetGroup</a> operation.</p> <p>After creating a dataset group and\
        \ adding datasets, you use the dataset group when you create a predictor.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html\"\
        >Dataset groups</a>.</p> <p>To get a list of all your datasets groups, use\
        \ the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetGroups.html\"\
        >ListDatasetGroups</a> operation.</p> <note> <p>The <code>Status</code> of\
        \ a dataset group must be <code>ACTIVE</code> before you can use the dataset\
        \ group to create a predictor. To get the status, use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> operation.</p> </note>"
      operationId: CreateDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateDatasetImportJob:
    post:
      description: "<p>Imports your training data to an Amazon Forecast dataset. You\
        \ provide the location of your training data in an Amazon Simple Storage Service\
        \ (Amazon S3) bucket and the Amazon Resource Name (ARN) of the dataset that\
        \ you want to import the data to.</p> <p>You must specify a <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DataSource.html\"\
        >DataSource</a> object that includes an Identity and Access Management (IAM)\
        \ role that Amazon Forecast can assume to access the data, as Amazon Forecast\
        \ makes a copy of your data and processes it in an internal Amazon Web Services\
        \ system. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/aws-forecast-iam-roles.html\"\
        >Set up permissions</a>.</p> <p>The training data must be in CSV or Parquet\
        \ format. The delimiter must be a comma (,).</p> <p>You can specify the path\
        \ to a specific file, the S3 bucket, or to a folder in the S3 bucket. For\
        \ the latter two cases, Amazon Forecast imports all files up to the limit\
        \ of 10,000 files.</p> <p>Because dataset imports are not aggregated, your\
        \ most recent dataset import is the one that is used when training a predictor\
        \ or generating a forecast. Make sure that your most recent dataset import\
        \ contains all of the data you want to model off of, and not just the new\
        \ data collected since the previous import.</p> <p>To get a list of all your\
        \ dataset import jobs, filtered by specified criteria, use the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetImportJobs.html\"\
        >ListDatasetImportJobs</a> operation.</p>"
      operationId: CreateDatasetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateDatasetImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateExplainability:
    post:
      description: "<note> <p>Explainability is only available for Forecasts and Predictors\
        \ generated from an AutoPredictor (<a>CreateAutoPredictor</a>)</p> </note>\
        \ <p>Creates an Amazon Forecast Explainability.</p> <p>Explainability helps\
        \ you better understand how the attributes in your datasets impact forecast.\
        \ Amazon Forecast uses a metric called Impact scores to quantify the relative\
        \ impact of each attribute and determine whether they increase or decrease\
        \ forecast values.</p> <p>To enable Forecast Explainability, your predictor\
        \ must include at least one of the following: related time series, item metadata,\
        \ or additional datasets like Holidays and the Weather Index.</p> <p>CreateExplainability\
        \ accepts either a Predictor ARN or Forecast ARN. To receive aggregated Impact\
        \ scores for all time series and time points in your datasets, provide a Predictor\
        \ ARN. To receive Impact scores for specific time series and time points,\
        \ provide a Forecast ARN.</p> <p> <b>CreateExplainability with a Predictor\
        \ ARN</b> </p> <note> <p>You can only have one Explainability resource per\
        \ predictor. If you already enabled <code>ExplainPredictor</code> in <a>CreateAutoPredictor</a>,\
        \ that predictor already has an Explainability resource.</p> </note> <p>The\
        \ following parameters are required when providing a Predictor ARN:</p> <ul>\
        \ <li> <p> <code>ExplainabilityName</code> - A unique name for the Explainability.</p>\
        \ </li> <li> <p> <code>ResourceArn</code> - The Arn of the predictor.</p>\
        \ </li> <li> <p> <code>TimePointGranularity</code> - Must be set to “ALL”\
        .</p> </li> <li> <p> <code>TimeSeriesGranularity</code> - Must be set to “\
        ALL”.</p> </li> </ul> <p>Do not specify a value for the following parameters:</p>\
        \ <ul> <li> <p> <code>DataSource</code> - Only valid when TimeSeriesGranularity\
        \ is “SPECIFIC”.</p> </li> <li> <p> <code>Schema</code> - Only valid when\
        \ TimeSeriesGranularity is “SPECIFIC”.</p> </li> <li> <p> <code>StartDateTime</code>\
        \ - Only valid when TimePointGranularity is “SPECIFIC”.</p> </li> <li> <p>\
        \ <code>EndDateTime</code> - Only valid when TimePointGranularity is “SPECIFIC”\
        .</p> </li> </ul> <p> <b>CreateExplainability with a Forecast ARN</b> </p>\
        \ <note> <p>You can specify a maximum of 50 time series and 500 time points.</p>\
        \ </note> <p>The following parameters are required when providing a Predictor\
        \ ARN:</p> <ul> <li> <p> <code>ExplainabilityName</code> - A unique name for\
        \ the Explainability.</p> </li> <li> <p> <code>ResourceArn</code> - The Arn\
        \ of the forecast.</p> </li> <li> <p> <code>TimePointGranularity</code> -\
        \ Either “ALL” or “SPECIFIC”.</p> </li> <li> <p> <code>TimeSeriesGranularity</code>\
        \ - Either “ALL” or “SPECIFIC”.</p> </li> </ul> <p>If you set TimeSeriesGranularity\
        \ to “SPECIFIC”, you must also provide the following:</p> <ul> <li> <p> <code>DataSource</code>\
        \ - The S3 location of the CSV file specifying your time series.</p> </li>\
        \ <li> <p> <code>Schema</code> - The Schema defines the attributes and attribute\
        \ types listed in the Data Source.</p> </li> </ul> <p>If you set TimePointGranularity\
        \ to “SPECIFIC”, you must also provide the following:</p> <ul> <li> <p> <code>StartDateTime</code>\
        \ - The first timestamp in the range of time points.</p> </li> <li> <p> <code>EndDateTime</code>\
        \ - The last timestamp in the range of time points.</p> </li> </ul>"
      operationId: CreateExplainability
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateExplainability
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExplainabilityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExplainabilityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateExplainabilityExport:
    post:
      description: "<p>Exports an Explainability resource created by the <a>CreateExplainability</a>\
        \ operation. Exported files are exported to an Amazon Simple Storage Service\
        \ (Amazon S3) bucket.</p> <p>You must specify a <a>DataDestination</a> object\
        \ that includes an Amazon S3 bucket and an Identity and Access Management\
        \ (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket.\
        \ For more information, see <a>aws-forecast-iam-roles</a>.</p> <note> <p>The\
        \ <code>Status</code> of the export job must be <code>ACTIVE</code> before\
        \ you can access the export in your Amazon S3 bucket. To get the status, use\
        \ the <a>DescribeExplainabilityExport</a> operation.</p> </note>"
      operationId: CreateExplainabilityExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateExplainabilityExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExplainabilityExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExplainabilityExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateForecast:
    post:
      description: "<p>Creates a forecast for each item in the <code>TARGET_TIME_SERIES</code>\
        \ dataset that was used to train the predictor. This is known as inference.\
        \ To retrieve the forecast for a single item at low latency, use the operation.\
        \ To export the complete forecast into your Amazon Simple Storage Service\
        \ (Amazon S3) bucket, use the <a>CreateForecastExportJob</a> operation.</p>\
        \ <p>The range of the forecast is determined by the <code>ForecastHorizon</code>\
        \ value, which you specify in the <a>CreatePredictor</a> request. When you\
        \ query a forecast, you can request a specific date range within the forecast.</p>\
        \ <p>To get a list of all your forecasts, use the <a>ListForecasts</a> operation.</p>\
        \ <note> <p>The forecasts generated by Amazon Forecast are in the same time\
        \ zone as the dataset that was used to create the predictor.</p> </note> <p>For\
        \ more information, see <a>howitworks-forecast</a>.</p> <note> <p>The <code>Status</code>\
        \ of the forecast must be <code>ACTIVE</code> before you can query or export\
        \ the forecast. Use the <a>DescribeForecast</a> operation to get the status.</p>\
        \ </note> <p>By default, a forecast includes predictions for every item (<code>item_id</code>)\
        \ in the dataset group that was used to train the predictor. However, you\
        \ can use the <code>TimeSeriesSelector</code> object to generate a forecast\
        \ on a subset of time series. Forecast creation is skipped for any time series\
        \ that you specify that are not in the input dataset. The forecast export\
        \ file will not contain these time series or their forecasted values.</p>"
      operationId: CreateForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateForecastExportJob:
    post:
      description: "<p>Exports a forecast created by the <a>CreateForecast</a> operation\
        \ to your Amazon Simple Storage Service (Amazon S3) bucket. The forecast file\
        \ name will match the following conventions:</p> <p>&lt;ForecastExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;</p>\
        \ <p>where the &lt;ExportTimestamp&gt; component is in Java SimpleDateFormat\
        \ (yyyy-MM-ddTHH-mm-ssZ).</p> <p>You must specify a <a>DataDestination</a>\
        \ object that includes an Identity and Access Management (IAM) role that Amazon\
        \ Forecast can assume to access the Amazon S3 bucket. For more information,\
        \ see <a>aws-forecast-iam-roles</a>.</p> <p>For more information, see <a>howitworks-forecast</a>.</p>\
        \ <p>To get a list of all your forecast export jobs, use the <a>ListForecastExportJobs</a>\
        \ operation.</p> <note> <p>The <code>Status</code> of the forecast export\
        \ job must be <code>ACTIVE</code> before you can access the forecast in your\
        \ Amazon S3 bucket. To get the status, use the <a>DescribeForecastExportJob</a>\
        \ operation.</p> </note>"
      operationId: CreateForecastExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateForecastExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForecastExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateForecastExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateMonitor:
    post:
      description: "Creates a predictor monitor resource for an existing auto predictor.\
        \ Predictor monitoring allows you to see how your predictor's performance\
        \ changes over time. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring.html\"\
        >Predictor Monitoring</a>. "
      operationId: CreateMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreatePredictor:
    post:
      description: "<note> <p> This operation creates a legacy predictor that does\
        \ not include all the predictor functionalities provided by Amazon Forecast.\
        \ To create a predictor that is compatible with all aspects of Forecast, use\
        \ <a>CreateAutoPredictor</a>.</p> </note> <p>Creates an Amazon Forecast predictor.</p>\
        \ <p>In the request, provide a dataset group and either specify an algorithm\
        \ or let Amazon Forecast choose an algorithm for you using AutoML. If you\
        \ specify an algorithm, you also can override algorithm-specific hyperparameters.</p>\
        \ <p>Amazon Forecast uses the algorithm to train a predictor using the latest\
        \ version of the datasets in the specified dataset group. You can then generate\
        \ a forecast using the <a>CreateForecast</a> operation.</p> <p> To see the\
        \ evaluation metrics, use the <a>GetAccuracyMetrics</a> operation. </p> <p>You\
        \ can specify a featurization configuration to fill and aggregate the data\
        \ fields in the <code>TARGET_TIME_SERIES</code> dataset to improve model training.\
        \ For more information, see <a>FeaturizationConfig</a>.</p> <p>For RELATED_TIME_SERIES\
        \ datasets, <code>CreatePredictor</code> verifies that the <code>DataFrequency</code>\
        \ specified when the dataset was created matches the <code>ForecastFrequency</code>.\
        \ TARGET_TIME_SERIES datasets don't have this restriction. Amazon Forecast\
        \ also verifies the delimiter and timestamp format. For more information,\
        \ see <a>howitworks-datasets-groups</a>.</p> <p>By default, predictors are\
        \ trained and evaluated at the 0.1 (P10), 0.5 (P50), and 0.9 (P90) quantiles.\
        \ You can choose custom forecast types to train and evaluate your predictor\
        \ by setting the <code>ForecastTypes</code>. </p> <p> <b>AutoML</b> </p> <p>If\
        \ you want Amazon Forecast to evaluate each algorithm and choose the one that\
        \ minimizes the <code>objective function</code>, set <code>PerformAutoML</code>\
        \ to <code>true</code>. The <code>objective function</code> is defined as\
        \ the mean of the weighted losses over the forecast types. By default, these\
        \ are the p10, p50, and p90 quantile losses. For more information, see <a>EvaluationResult</a>.</p>\
        \ <p>When AutoML is enabled, the following properties are disallowed:</p>\
        \ <ul> <li> <p> <code>AlgorithmArn</code> </p> </li> <li> <p> <code>HPOConfig</code>\
        \ </p> </li> <li> <p> <code>PerformHPO</code> </p> </li> <li> <p> <code>TrainingParameters</code>\
        \ </p> </li> </ul> <p>To get a list of all of your predictors, use the <a>ListPredictors</a>\
        \ operation.</p> <note> <p>Before you can use the predictor to create a forecast,\
        \ the <code>Status</code> of the predictor must be <code>ACTIVE</code>, signifying\
        \ that training has completed. To get the status, use the <a>DescribePredictor</a>\
        \ operation.</p> </note>"
      operationId: CreatePredictor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreatePredictor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePredictorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePredictorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreatePredictorBacktestExportJob:
    post:
      description: "<p>Exports backtest forecasts and accuracy metrics generated by\
        \ the <a>CreateAutoPredictor</a> or <a>CreatePredictor</a> operations. Two\
        \ folders containing CSV or Parquet files are exported to your specified S3\
        \ bucket.</p> <p> The export file names will match the following conventions:</p>\
        \ <p> <code>&lt;ExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;.csv</code>\
        \ </p> <p>The &lt;ExportTimestamp&gt; component is in Java SimpleDate format\
        \ (yyyy-MM-ddTHH-mm-ssZ).</p> <p>You must specify a <a>DataDestination</a>\
        \ object that includes an Amazon S3 bucket and an Identity and Access Management\
        \ (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket.\
        \ For more information, see <a>aws-forecast-iam-roles</a>.</p> <note> <p>The\
        \ <code>Status</code> of the export job must be <code>ACTIVE</code> before\
        \ you can access the export in your Amazon S3 bucket. To get the status, use\
        \ the <a>DescribePredictorBacktestExportJob</a> operation.</p> </note>"
      operationId: CreatePredictorBacktestExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreatePredictorBacktestExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePredictorBacktestExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePredictorBacktestExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateWhatIfAnalysis:
    post:
      description: "<p>What-if analysis is a scenario modeling technique where you\
        \ make a hypothetical change to a time series and compare the forecasts generated\
        \ by these changes against the baseline, unchanged time series. It is important\
        \ to remember that the purpose of a what-if analysis is to understand how\
        \ a forecast can change given different modifications to the baseline time\
        \ series.</p> <p>For example, imagine you are a clothing retailer who is considering\
        \ an end of season sale to clear space for new styles. After creating a baseline\
        \ forecast, you can use a what-if analysis to investigate how different sales\
        \ tactics might affect your goals.</p> <p>You could create a scenario where\
        \ everything is given a 25% markdown, and another where everything is given\
        \ a fixed dollar markdown. You could create a scenario where the sale lasts\
        \ for one week and another where the sale lasts for one month. With a what-if\
        \ analysis, you can compare many different scenarios against each other.</p>\
        \ <p>Note that a what-if analysis is meant to display what the forecasting\
        \ model has learned and how it will behave in the scenarios that you are evaluating.\
        \ Do not blindly use the results of the what-if analysis to make business\
        \ decisions. For instance, forecasts might not be accurate for novel scenarios\
        \ where there is no reference available to determine whether a forecast is\
        \ good.</p> <p>The <a>TimeSeriesSelector</a> object defines the items that\
        \ you want in the what-if analysis.</p>"
      operationId: CreateWhatIfAnalysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateWhatIfAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWhatIfAnalysisRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWhatIfAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateWhatIfForecast:
    post:
      description: 'A what-if forecast is a forecast that is created from a modified
        version of the baseline forecast. Each what-if forecast incorporates either
        a replacement dataset or a set of transformations to the original dataset. '
      operationId: CreateWhatIfForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateWhatIfForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWhatIfForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWhatIfForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.CreateWhatIfForecastExport:
    post:
      description: "<p>Exports a forecast created by the <a>CreateWhatIfForecast</a>\
        \ operation to your Amazon Simple Storage Service (Amazon S3) bucket. The\
        \ forecast file name will match the following conventions:</p> <p> <code>≈\
        &lt;ForecastExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;</code>\
        \ </p> <p>The &lt;ExportTimestamp&gt; component is in Java SimpleDateFormat\
        \ (yyyy-MM-ddTHH-mm-ssZ).</p> <p>You must specify a <a>DataDestination</a>\
        \ object that includes an Identity and Access Management (IAM) role that Amazon\
        \ Forecast can assume to access the Amazon S3 bucket. For more information,\
        \ see <a>aws-forecast-iam-roles</a>.</p> <p>For more information, see <a>howitworks-forecast</a>.</p>\
        \ <p>To get a list of all your what-if forecast export jobs, use the <a>ListWhatIfForecastExports</a>\
        \ operation.</p> <note> <p>The <code>Status</code> of the forecast export\
        \ job must be <code>ACTIVE</code> before you can access the forecast in your\
        \ Amazon S3 bucket. To get the status, use the <a>DescribeWhatIfForecastExport</a>\
        \ operation.</p> </note>"
      operationId: CreateWhatIfForecastExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.CreateWhatIfForecastExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWhatIfForecastExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWhatIfForecastExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteDataset:
    post:
      description: "<p>Deletes an Amazon Forecast dataset that was created using the\
        \ <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a> operation. You can only delete datasets that have a status\
        \ of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status\
        \ use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> operation.</p> <note> <p>Forecast does not automatically\
        \ update any dataset groups that contain the deleted dataset. In order to\
        \ update the dataset group, use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html\"\
        >UpdateDatasetGroup</a> operation, omitting the deleted dataset's ARN.</p>\
        \ </note>"
      operationId: DeleteDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteDatasetGroup:
    post:
      description: "<p>Deletes a dataset group created using the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a> operation. You can only delete dataset groups that\
        \ have a status of <code>ACTIVE</code>, <code>CREATE_FAILED</code>, or <code>UPDATE_FAILED</code>.\
        \ To get the status, use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> operation.</p> <p>This operation deletes only the\
        \ dataset group, not the datasets in the group.</p>"
      operationId: DeleteDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetGroupRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteDatasetImportJob:
    post:
      description: "Deletes a dataset import job created using the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a> operation. You can delete only dataset import\
        \ jobs that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.\
        \ To get the status, use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a> operation."
      operationId: DeleteDatasetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteDatasetImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetImportJobRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteExplainability:
    post:
      description: "<p>Deletes an Explainability resource.</p> <p>You can delete only\
        \ predictor that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.\
        \ To get the status, use the <a>DescribeExplainability</a> operation.</p>"
      operationId: DeleteExplainability
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteExplainability
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExplainabilityRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteExplainabilityExport:
    post:
      description: Deletes an Explainability export.
      operationId: DeleteExplainabilityExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteExplainabilityExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExplainabilityExportRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteForecast:
    post:
      description: "<p>Deletes a forecast created using the <a>CreateForecast</a>\
        \ operation. You can delete only forecasts that have a status of <code>ACTIVE</code>\
        \ or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeForecast</a>\
        \ operation.</p> <p>You can't delete a forecast while it is being exported.\
        \ After a forecast is deleted, you can no longer query the forecast.</p>"
      operationId: DeleteForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteForecastRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteForecastExportJob:
    post:
      description: "Deletes a forecast export job created using the <a>CreateForecastExportJob</a>\
        \ operation. You can delete only export jobs that have a status of <code>ACTIVE</code>\
        \ or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeForecastExportJob</a>\
        \ operation."
      operationId: DeleteForecastExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteForecastExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteForecastExportJobRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteMonitor:
    post:
      description: "Deletes a monitor resource. You can only delete a monitor resource\
        \ with a status of <code>ACTIVE</code>, <code>ACTIVE_STOPPED</code>, <code>CREATE_FAILED</code>,\
        \ or <code>CREATE_STOPPED</code>."
      operationId: DeleteMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMonitorRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeletePredictor:
    post:
      description: "Deletes a predictor created using the <a>DescribePredictor</a>\
        \ or <a>CreatePredictor</a> operations. You can delete only predictor that\
        \ have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get\
        \ the status, use the <a>DescribePredictor</a> operation."
      operationId: DeletePredictor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeletePredictor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePredictorRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeletePredictorBacktestExportJob:
    post:
      description: Deletes a predictor backtest export job.
      operationId: DeletePredictorBacktestExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeletePredictorBacktestExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePredictorBacktestExportJobRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteResourceTree:
    post:
      description: "<p>Deletes an entire resource tree. This operation will delete\
        \ the parent resource and its child resources.</p> <p>Child resources are\
        \ resources that were created from another resource. For example, when a forecast\
        \ is generated from a predictor, the forecast is the child resource and the\
        \ predictor is the parent resource.</p> <p>Amazon Forecast resources possess\
        \ the following parent-child resource hierarchies:</p> <ul> <li> <p> <b>Dataset</b>:\
        \ dataset import jobs</p> </li> <li> <p> <b>Dataset Group</b>: predictors,\
        \ predictor backtest export jobs, forecasts, forecast export jobs</p> </li>\
        \ <li> <p> <b>Predictor</b>: predictor backtest export jobs, forecasts, forecast\
        \ export jobs</p> </li> <li> <p> <b>Forecast</b>: forecast export jobs</p>\
        \ </li> </ul> <note> <p> <code>DeleteResourceTree</code> will only delete\
        \ Amazon Forecast resources, and will not delete datasets or exported files\
        \ stored in Amazon S3. </p> </note>"
      operationId: DeleteResourceTree
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteResourceTree
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceTreeRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteWhatIfAnalysis:
    post:
      description: "<p>Deletes a what-if analysis created using the <a>CreateWhatIfAnalysis</a>\
        \ operation. You can delete only what-if analyses that have a status of <code>ACTIVE</code>\
        \ or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeWhatIfAnalysis</a>\
        \ operation. </p> <p>You can't delete a what-if analysis while any of its\
        \ forecasts are being exported.</p>"
      operationId: DeleteWhatIfAnalysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteWhatIfAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWhatIfAnalysisRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteWhatIfForecast:
    post:
      description: "<p>Deletes a what-if forecast created using the <a>CreateWhatIfForecast</a>\
        \ operation. You can delete only what-if forecasts that have a status of <code>ACTIVE</code>\
        \ or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeWhatIfForecast</a>\
        \ operation. </p> <p>You can't delete a what-if forecast while it is being\
        \ exported. After a what-if forecast is deleted, you can no longer query the\
        \ what-if analysis.</p>"
      operationId: DeleteWhatIfForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteWhatIfForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWhatIfForecastRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DeleteWhatIfForecastExport:
    post:
      description: "Deletes a what-if forecast export created using the <a>CreateWhatIfForecastExport</a>\
        \ operation. You can delete only what-if forecast exports that have a status\
        \ of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status,\
        \ use the <a>DescribeWhatIfForecastExport</a> operation. "
      operationId: DeleteWhatIfForecastExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DeleteWhatIfForecastExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWhatIfForecastExportRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeAutoPredictor:
    post:
      description: Describes a predictor created using the CreateAutoPredictor operation.
      operationId: DescribeAutoPredictor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeAutoPredictor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutoPredictorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutoPredictorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeDataset:
    post:
      description: "<p>Describes an Amazon Forecast dataset created using the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\">CreateDataset</a>\
        \ operation.</p> <p>In addition to listing the parameters specified in the\
        \ <code>CreateDataset</code> request, this operation includes the following\
        \ dataset properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li>\
        \ <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code>\
        \ </p> </li> </ul>"
      operationId: DescribeDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeDatasetGroup:
    post:
      description: "<p>Describes a dataset group created using the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a> operation.</p> <p>In addition to listing the parameters\
        \ provided in the <code>CreateDatasetGroup</code> request, this operation\
        \ includes the following properties:</p> <ul> <li> <p> <code>DatasetArns</code>\
        \ - The datasets belonging to the group.</p> </li> <li> <p> <code>CreationTime</code>\
        \ </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> </ul>"
      operationId: DescribeDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeDatasetImportJob:
    post:
      description: "<p>Describes a dataset import job created using the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a> operation.</p> <p>In addition to listing the parameters\
        \ provided in the <code>CreateDatasetImportJob</code> request, this operation\
        \ includes the following properties:</p> <ul> <li> <p> <code>CreationTime</code>\
        \ </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>\
        \ <code>DataSize</code> </p> </li> <li> <p> <code>FieldStatistics</code> </p>\
        \ </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code>\
        \ - If an error occurred, information about the error.</p> </li> </ul>"
      operationId: DescribeDatasetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeDatasetImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeExplainability:
    post:
      description: Describes an Explainability resource created using the <a>CreateExplainability</a>
        operation.
      operationId: DescribeExplainability
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeExplainability
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExplainabilityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExplainabilityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeExplainabilityExport:
    post:
      description: Describes an Explainability export created using the <a>CreateExplainabilityExport</a>
        operation.
      operationId: DescribeExplainabilityExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeExplainabilityExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExplainabilityExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExplainabilityExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeForecast:
    post:
      description: "<p>Describes a forecast created using the <a>CreateForecast</a>\
        \ operation.</p> <p>In addition to listing the properties provided in the\
        \ <code>CreateForecast</code> request, this operation lists the following\
        \ properties:</p> <ul> <li> <p> <code>DatasetGroupArn</code> - The dataset\
        \ group that provided the training data.</p> </li> <li> <p> <code>CreationTime</code>\
        \ </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error\
        \ occurred, information about the error.</p> </li> </ul>"
      operationId: DescribeForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeForecastExportJob:
    post:
      description: "<p>Describes a forecast export job created using the <a>CreateForecastExportJob</a>\
        \ operation.</p> <p>In addition to listing the properties provided by the\
        \ user in the <code>CreateForecastExportJob</code> request, this operation\
        \ lists the following properties:</p> <ul> <li> <p> <code>CreationTime</code>\
        \ </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error\
        \ occurred, information about the error.</p> </li> </ul>"
      operationId: DescribeForecastExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeForecastExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeForecastExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeForecastExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeMonitor:
    post:
      description: "<p>Describes a monitor resource. In addition to listing the properties\
        \ provided in the <a>CreateMonitor</a> request, this operation lists the following\
        \ properties:</p> <ul> <li> <p> <code>Baseline</code> </p> </li> <li> <p>\
        \ <code>CreationTime</code> </p> </li> <li> <p> <code>LastEvaluationTime</code>\
        \ </p> </li> <li> <p> <code>LastEvaluationState</code> </p> </li> <li> <p>\
        \ <code>LastModificationTime</code> </p> </li> <li> <p> <code>Message</code>\
        \ </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>"
      operationId: DescribeMonitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeMonitor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribePredictor:
    post:
      description: "<note> <p> This operation is only valid for legacy predictors\
        \ created with CreatePredictor. If you are not using a legacy predictor, use\
        \ <a>DescribeAutoPredictor</a>.</p> </note> <p>Describes a predictor created\
        \ using the <a>CreatePredictor</a> operation.</p> <p>In addition to listing\
        \ the properties provided in the <code>CreatePredictor</code> request, this\
        \ operation lists the following properties:</p> <ul> <li> <p> <code>DatasetImportJobArns</code>\
        \ - The dataset import jobs used to import training data.</p> </li> <li> <p>\
        \ <code>AutoMLAlgorithmArns</code> - If AutoML is performed, the algorithms\
        \ that were evaluated.</p> </li> <li> <p> <code>CreationTime</code> </p> </li>\
        \ <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code>\
        \ </p> </li> <li> <p> <code>Message</code> - If an error occurred, information\
        \ about the error.</p> </li> </ul>"
      operationId: DescribePredictor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribePredictor
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePredictorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePredictorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribePredictorBacktestExportJob:
    post:
      description: "<p>Describes a predictor backtest export job created using the\
        \ <a>CreatePredictorBacktestExportJob</a> operation.</p> <p>In addition to\
        \ listing the properties provided by the user in the <code>CreatePredictorBacktestExportJob</code>\
        \ request, this operation lists the following properties:</p> <ul> <li> <p>\
        \ <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code>\
        \ </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code>\
        \ (if an error occurred)</p> </li> </ul>"
      operationId: DescribePredictorBacktestExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribePredictorBacktestExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePredictorBacktestExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePredictorBacktestExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeWhatIfAnalysis:
    post:
      description: "<p>Describes the what-if analysis created using the <a>CreateWhatIfAnalysis</a>\
        \ operation.</p> <p>In addition to listing the properties provided in the\
        \ <code>CreateWhatIfAnalysis</code> request, this operation lists the following\
        \ properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li> <li>\
        \ <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Message</code>\
        \ - If an error occurred, information about the error.</p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> </ul>"
      operationId: DescribeWhatIfAnalysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeWhatIfAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWhatIfAnalysisRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWhatIfAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeWhatIfForecast:
    post:
      description: "<p>Describes the what-if forecast created using the <a>CreateWhatIfForecast</a>\
        \ operation.</p> <p>In addition to listing the properties provided in the\
        \ <code>CreateWhatIfForecast</code> request, this operation lists the following\
        \ properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li> <li>\
        \ <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Message</code>\
        \ - If an error occurred, information about the error.</p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> </ul>"
      operationId: DescribeWhatIfForecast
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeWhatIfForecast
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWhatIfForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWhatIfForecastResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.DescribeWhatIfForecastExport:
    post:
      description: "<p>Describes the what-if forecast export created using the <a>CreateWhatIfForecastExport</a>\
        \ operation.</p> <p>In addition to listing the properties provided in the\
        \ <code>CreateWhatIfForecastExport</code> request, this operation lists the\
        \ following properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li>\
        \ <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Message</code>\
        \ - If an error occurred, information about the error.</p> </li> <li> <p>\
        \ <code>Status</code> </p> </li> </ul>"
      operationId: DescribeWhatIfForecastExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.DescribeWhatIfForecastExport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWhatIfForecastExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWhatIfForecastExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.GetAccuracyMetrics:
    post:
      description: "<p>Provides metrics on the accuracy of the models that were trained\
        \ by the <a>CreatePredictor</a> operation. Use metrics to see how well the\
        \ model performed and to decide whether to use the predictor to generate a\
        \ forecast. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/metrics.html\"\
        >Predictor Metrics</a>.</p> <p>This operation generates metrics for each backtest\
        \ window that was evaluated. The number of backtest windows (<code>NumberOfBacktestWindows</code>)\
        \ is specified using the <a>EvaluationParameters</a> object, which is optionally\
        \ included in the <code>CreatePredictor</code> request. If <code>NumberOfBacktestWindows</code>\
        \ isn't specified, the number defaults to one.</p> <p>The parameters of the\
        \ <code>filling</code> method determine which items contribute to the metrics.\
        \ If you want all items to contribute, specify <code>zero</code>. If you want\
        \ only those items that have complete data in the range being evaluated to\
        \ contribute, specify <code>nan</code>. For more information, see <a>FeaturizationMethod</a>.</p>\
        \ <note> <p>Before you can get accuracy metrics, the <code>Status</code> of\
        \ the predictor must be <code>ACTIVE</code>, signifying that training has\
        \ completed. To get the status, use the <a>DescribePredictor</a> operation.</p>\
        \ </note>"
      operationId: GetAccuracyMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.GetAccuracyMetrics
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccuracyMetricsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccuracyMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListDatasetGroups:
    post:
      description: "Returns a list of dataset groups created using the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a> operation. For each dataset group, this operation\
        \ returns a summary of its properties, including its Amazon Resource Name\
        \ (ARN). You can retrieve the complete set of properties by using the dataset\
        \ group ARN with the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> operation."
      operationId: ListDatasetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListDatasetGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListDatasetImportJobs:
    post:
      description: "Returns a list of dataset import jobs created using the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a> operation. For each import job, this operation\
        \ returns a summary of its properties, including its Amazon Resource Name\
        \ (ARN). You can retrieve the complete set of properties by using the ARN\
        \ with the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a> operation. You can filter the list by providing\
        \ an array of <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_Filter.html\"\
        >Filter</a> objects."
      operationId: ListDatasetImportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListDatasetImportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetImportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListDatasets:
    post:
      description: "Returns a list of datasets created using the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a> operation. For each dataset, a summary of its properties,\
        \ including its Amazon Resource Name (ARN), is returned. To retrieve the complete\
        \ set of properties, use the ARN with the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> operation."
      operationId: ListDatasets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListDatasets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListExplainabilities:
    post:
      description: "<p>Returns a list of Explainability resources created using the\
        \ <a>CreateExplainability</a> operation. This operation returns a summary\
        \ for each Explainability. You can filter the list using an array of <a>Filter</a>\
        \ objects.</p> <p>To retrieve the complete set of properties for a particular\
        \ Explainability resource, use the ARN with the <a>DescribeExplainability</a>\
        \ operation.</p>"
      operationId: ListExplainabilities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListExplainabilities
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExplainabilitiesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExplainabilitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListExplainabilityExports:
    post:
      description: "<p>Returns a list of Explainability exports created using the\
        \ <a>CreateExplainabilityExport</a> operation. This operation returns a summary\
        \ for each Explainability export. You can filter the list using an array of\
        \ <a>Filter</a> objects.</p> <p>To retrieve the complete set of properties\
        \ for a particular Explainability export, use the ARN with the <a>DescribeExplainability</a>\
        \ operation.</p>"
      operationId: ListExplainabilityExports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListExplainabilityExports
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExplainabilityExportsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExplainabilityExportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListForecastExportJobs:
    post:
      description: "Returns a list of forecast export jobs created using the <a>CreateForecastExportJob</a>\
        \ operation. For each forecast export job, this operation returns a summary\
        \ of its properties, including its Amazon Resource Name (ARN). To retrieve\
        \ the complete set of properties, use the ARN with the <a>DescribeForecastExportJob</a>\
        \ operation. You can filter the list using an array of <a>Filter</a> objects."
      operationId: ListForecastExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListForecastExportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListForecastExportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListForecastExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListForecasts:
    post:
      description: "Returns a list of forecasts created using the <a>CreateForecast</a>\
        \ operation. For each forecast, this operation returns a summary of its properties,\
        \ including its Amazon Resource Name (ARN). To retrieve the complete set of\
        \ properties, specify the ARN with the <a>DescribeForecast</a> operation.\
        \ You can filter the list using an array of <a>Filter</a> objects."
      operationId: ListForecasts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListForecasts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListForecastsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListForecastsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListMonitorEvaluations:
    post:
      description: <p>Returns a list of the monitoring evaluation results and predictor
        events collected by the monitor resource during different windows of time.</p>
        <p>For information about monitoring see <a>predictor-monitoring</a>. For more
        information about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing
        Monitoring Results</a>.</p>
      operationId: ListMonitorEvaluations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListMonitorEvaluations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitorEvaluationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitorEvaluationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListMonitors:
    post:
      description: "Returns a list of monitors created with the <a>CreateMonitor</a>\
        \ operation and <a>CreateAutoPredictor</a> operation. For each monitor resource,\
        \ this operation returns of a summary of its properties, including its Amazon\
        \ Resource Name (ARN). You can retrieve a complete set of properties of a\
        \ monitor resource by specify the monitor's ARN in the <a>DescribeMonitor</a>\
        \ operation."
      operationId: ListMonitors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListMonitors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListPredictorBacktestExportJobs:
    post:
      description: "<p>Returns a list of predictor backtest export jobs created using\
        \ the <a>CreatePredictorBacktestExportJob</a> operation. This operation returns\
        \ a summary for each backtest export job. You can filter the list using an\
        \ array of <a>Filter</a> objects.</p> <p>To retrieve the complete set of properties\
        \ for a particular backtest export job, use the ARN with the <a>DescribePredictorBacktestExportJob</a>\
        \ operation.</p>"
      operationId: ListPredictorBacktestExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListPredictorBacktestExportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPredictorBacktestExportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPredictorBacktestExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListPredictors:
    post:
      description: "<p>Returns a list of predictors created using the <a>CreateAutoPredictor</a>\
        \ or <a>CreatePredictor</a> operations. For each predictor, this operation\
        \ returns a summary of its properties, including its Amazon Resource Name\
        \ (ARN). </p> <p>You can retrieve the complete set of properties by using\
        \ the ARN with the <a>DescribeAutoPredictor</a> and <a>DescribePredictor</a>\
        \ operations. You can filter the list using an array of <a>Filter</a> objects.</p>"
      operationId: ListPredictors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListPredictors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPredictorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPredictorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListTagsForResource:
    post:
      description: Lists the tags for an Amazon Forecast resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListWhatIfAnalyses:
    post:
      description: "Returns a list of what-if analyses created using the <a>CreateWhatIfAnalysis</a>\
        \ operation. For each what-if analysis, this operation returns a summary of\
        \ its properties, including its Amazon Resource Name (ARN). You can retrieve\
        \ the complete set of properties by using the what-if analysis ARN with the\
        \ <a>DescribeWhatIfAnalysis</a> operation."
      operationId: ListWhatIfAnalyses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListWhatIfAnalyses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWhatIfAnalysesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWhatIfAnalysesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListWhatIfForecastExports:
    post:
      description: "Returns a list of what-if forecast exports created using the <a>CreateWhatIfForecastExport</a>\
        \ operation. For each what-if forecast export, this operation returns a summary\
        \ of its properties, including its Amazon Resource Name (ARN). You can retrieve\
        \ the complete set of properties by using the what-if forecast export ARN\
        \ with the <a>DescribeWhatIfForecastExport</a> operation."
      operationId: ListWhatIfForecastExports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListWhatIfForecastExports
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWhatIfForecastExportsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWhatIfForecastExportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ListWhatIfForecasts:
    post:
      description: "Returns a list of what-if forecasts created using the <a>CreateWhatIfForecast</a>\
        \ operation. For each what-if forecast, this operation returns a summary of\
        \ its properties, including its Amazon Resource Name (ARN). You can retrieve\
        \ the complete set of properties by using the what-if forecast ARN with the\
        \ <a>DescribeWhatIfForecast</a> operation."
      operationId: ListWhatIfForecasts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ListWhatIfForecasts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWhatIfForecastsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWhatIfForecastsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.ResumeResource:
    post:
      description: Resumes a stopped monitor resource.
      operationId: ResumeResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.ResumeResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeResourceRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.StopResource:
    post:
      description: "<p>Stops a resource.</p> <p>The resource undergoes the following\
        \ states: <code>CREATE_STOPPING</code> and <code>CREATE_STOPPED</code>. You\
        \ cannot resume a resource once it has been stopped.</p> <p>This operation\
        \ can be applied to the following resources (and their corresponding child\
        \ resources):</p> <ul> <li> <p>Dataset Import Job</p> </li> <li> <p>Predictor\
        \ Job</p> </li> <li> <p>Forecast Job</p> </li> <li> <p>Forecast Export Job</p>\
        \ </li> <li> <p>Predictor Backtest Export Job</p> </li> <li> <p>Explainability\
        \ Job</p> </li> <li> <p>Explainability Export Job</p> </li> </ul>"
      operationId: StopResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.StopResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopResourceRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.TagResource:
    post:
      description: "Associates the specified tags to a resource with the specified\
        \ <code>resourceArn</code>. If existing tags on a resource are not specified\
        \ in the request parameters, they are not changed. When a resource is deleted,\
        \ the tags associated with that resource are also deleted."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.UntagResource:
    post:
      description: Deletes the specified tags from a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonForecast.UpdateDatasetGroup:
    post:
      description: <p>Replaces the datasets in a dataset group with the specified
        datasets.</p> <note> <p>The <code>Status</code> of the dataset group must
        be <code>ACTIVE</code> before you can use the dataset group to create a predictor.
        Use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html">DescribeDatasetGroup</a>
        operation to get the status.</p> </note>
      operationId: UpdateDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonForecast.UpdateDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatasetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAutoPredictorResponse:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor.
      type: object
    CreateAutoPredictorRequest:
      example:
        OptimizationMetric: ""
        PredictorName: ""
        ForecastDimensions: ""
        ForecastHorizon: ""
        ForecastFrequency: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
        TimeAlignmentBoundary:
          Month: ""
          DayOfWeek: ""
          Hour: ""
          DayOfMonth: ""
        ForecastTypes: ""
        DataConfig:
          DatasetGroupArn: ""
          AdditionalDatasets: ""
          AttributeConfigs: ""
        ExplainPredictor: ""
        ReferencePredictorArn: ""
        Tags: ""
        MonitorConfig:
          MonitorName: ""
      properties:
        PredictorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A unique name for the predictor
        ForecastHorizon:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The number of time-steps that the model predicts. The\
              \ forecast horizon is also called the prediction length.</p> <p>The\
              \ maximum forecast horizon is the lesser of 500 time-steps or 1/4 of\
              \ the TARGET_TIME_SERIES dataset length. If you are retraining an existing\
              \ AutoPredictor, then the maximum forecast horizon is the lesser of\
              \ 500 time-steps or 1/3 of the TARGET_TIME_SERIES dataset length.</p>\
              \ <p>If you are upgrading to an AutoPredictor or retraining an existing\
              \ AutoPredictor, you cannot update the forecast horizon parameter. You\
              \ can meet this requirement by providing longer time-series in the dataset.</p>"
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "The forecast types used to train a predictor. You can specify\
              \ up to five forecast types. Forecast types can be quantiles from 0.01\
              \ to 0.99, by increments of 0.01 or higher. You can also specify the\
              \ mean forecast with <code>mean</code>."
        ForecastDimensions:
          allOf:
          - $ref: '#/components/schemas/ForecastDimensions'
          - description: "<p>An array of dimension (field) names that specify how\
              \ to group the generated forecast.</p> <p>For example, if you are generating\
              \ forecasts for item sales across all your stores, and your dataset\
              \ contains a <code>store_id</code> field, you would specify <code>store_id</code>\
              \ as a dimension to group sales forecasts for each store.</p>"
        ForecastFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "<p>The frequency of predictions in a forecast.</p> <p>Valid\
              \ intervals are an integer followed by Y (Year), M (Month), W (Week),\
              \ D (Day), H (Hour), and min (Minute). For example, \"1D\" indicates\
              \ every day and \"15min\" indicates every 15 minutes. You cannot specify\
              \ a value that would overlap with the next larger frequency. That means,\
              \ for example, you cannot specify a frequency of 60 minutes, because\
              \ that is equivalent to 1 hour. The valid values for each frequency\
              \ are the following:</p> <ul> <li> <p>Minute - 1-59</p> </li> <li> <p>Hour\
              \ - 1-23</p> </li> <li> <p>Day - 1-6</p> </li> <li> <p>Week - 1-4</p>\
              \ </li> <li> <p>Month - 1-11</p> </li> <li> <p>Year - 1</p> </li> </ul>\
              \ <p>Thus, if you want every other week forecasts, specify \"2W\". Or,\
              \ if you want quarterly forecasts, you specify \"3M\".</p> <p>The frequency\
              \ must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</p>\
              \ <p>When a RELATED_TIME_SERIES dataset is provided, the frequency must\
              \ be equal to the RELATED_TIME_SERIES dataset frequency.</p>"
        DataConfig:
          $ref: '#/components/schemas/CreateAutoPredictorRequest_DataConfig'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
        ReferencePredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the predictor to retrain or upgrade. This\
              \ parameter is only used when retraining or upgrading a predictor. When\
              \ creating a new predictor, do not specify a value for this parameter.</p>\
              \ <p>When upgrading or retraining a predictor, only specify values for\
              \ the <code>ReferencePredictorArn</code> and <code>PredictorName</code>.\
              \ The value for <code>PredictorName</code> must be a unique predictor\
              \ name.</p>"
        OptimizationMetric:
          allOf:
          - $ref: '#/components/schemas/OptimizationMetric'
          - description: The accuracy metric used to optimize the predictor.
        ExplainPredictor:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Create an Explainability resource for the predictor.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>Optional metadata to help you categorize and organize\
              \ your predictors. Each tag consists of a key and an optional value,\
              \ both of which you define. Tag keys and values are case sensitive.</p>\
              \ <p>The following restrictions apply to tags:</p> <ul> <li> <p>For\
              \ each resource, each tag key must be unique and each tag key must have\
              \ one value.</p> </li> <li> <p>Maximum number of tags per resource:\
              \ 50.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in\
              \ UTF-8.</p> </li> <li> <p>Maximum value length: 256 Unicode characters\
              \ in UTF-8.</p> </li> <li> <p>Accepted characters: all letters and numbers,\
              \ spaces representable in UTF-8, and + - = . _ : / @. If your tagging\
              \ schema is used across other services and resources, the character\
              \ restrictions of those services also apply. </p> </li> <li> <p>Key\
              \ prefixes cannot include any upper or lowercase combination of <code>aws:</code>\
              \ or <code>AWS:</code>. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit. You cannot edit or delete\
              \ tag keys with this prefix.</p> </li> </ul>"
        MonitorConfig:
          $ref: '#/components/schemas/CreateAutoPredictorRequest_MonitorConfig'
        TimeAlignmentBoundary:
          $ref: '#/components/schemas/CreateAutoPredictorRequest_TimeAlignmentBoundary'
      required:
      - PredictorName
      title: CreateAutoPredictorRequest
      type: object
    InvalidInputException: {}
    ResourceAlreadyExistsException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    LimitExceededException: {}
    CreateDatasetResponse:
      example:
        DatasetArn: ""
      properties:
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
      type: object
    CreateDatasetRequest:
      example:
        DataFrequency: ""
        DatasetName: ""
        Schema:
          Attributes: ""
        DatasetType: ""
        Domain: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
        Tags: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the dataset.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: "<p>The domain associated with the dataset. When you add\
              \ a dataset to a dataset group, this value and the value specified for\
              \ the <code>Domain</code> parameter of the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html\"\
              >CreateDatasetGroup</a> operation must match.</p> <p>The <code>Domain</code>\
              \ and <code>DatasetType</code> that you choose determine the fields\
              \ that must be present in the training data that you import to the dataset.\
              \ For example, if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code>\
              \ as the <code>DatasetType</code>, Amazon Forecast requires <code>item_id</code>,\
              \ <code>timestamp</code>, and <code>demand</code> fields to be present\
              \ in your data. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html\"\
              >Importing datasets</a>.</p>"
        DatasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: The dataset type. Valid values depend on the chosen <code>Domain</code>.
        DataFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "<p>The frequency of data collection. This parameter is required\
              \ for RELATED_TIME_SERIES datasets.</p> <p>Valid intervals are an integer\
              \ followed by Y (Year), M (Month), W (Week), D (Day), H (Hour), and\
              \ min (Minute). For example, \"1D\" indicates every day and \"15min\"\
              \ indicates every 15 minutes. You cannot specify a value that would\
              \ overlap with the next larger frequency. That means, for example, you\
              \ cannot specify a frequency of 60 minutes, because that is equivalent\
              \ to 1 hour. The valid values for each frequency are the following:</p>\
              \ <ul> <li> <p>Minute - 1-59</p> </li> <li> <p>Hour - 1-23</p> </li>\
              \ <li> <p>Day - 1-6</p> </li> <li> <p>Week - 1-4</p> </li> <li> <p>Month\
              \ - 1-11</p> </li> <li> <p>Year - 1</p> </li> </ul> <p>Thus, if you\
              \ want every other week forecasts, specify \"2W\". Or, if you want quarterly\
              \ forecasts, you specify \"3M\".</p>"
        Schema:
          $ref: '#/components/schemas/CreateDatasetRequest_Schema'
        EncryptionConfig:
          $ref: '#/components/schemas/CreateDatasetRequest_EncryptionConfig'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the dataset to\
              \ help you categorize and organize them. Each tag consists of a key\
              \ and an optional value, both of which you define.</p> <p>The following\
              \ basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number\
              \ of tags per resource - 50.</p> </li> <li> <p>For each resource, each\
              \ tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
      required:
      - DatasetName
      - DatasetType
      - Domain
      - Schema
      title: CreateDatasetRequest
      type: object
    CreateDatasetGroupResponse:
      example:
        DatasetGroupArn: ""
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
      type: object
    CreateDatasetGroupRequest:
      example:
        DatasetArns: ""
        DatasetGroupName: ""
        Domain: ""
        Tags: ""
      properties:
        DatasetGroupName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the dataset group.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: "<p>The domain associated with the dataset group. When you\
              \ add a dataset to a dataset group, this value and the value specified\
              \ for the <code>Domain</code> parameter of the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\"\
              >CreateDataset</a> operation must match.</p> <p>The <code>Domain</code>\
              \ and <code>DatasetType</code> that you choose determine the fields\
              \ that must be present in training data that you import to a dataset.\
              \ For example, if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code>\
              \ as the <code>DatasetType</code>, Amazon Forecast requires that <code>item_id</code>,\
              \ <code>timestamp</code>, and <code>demand</code> fields are present\
              \ in your data. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html\"\
              >Dataset groups</a>.</p>"
        DatasetArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: An array of Amazon Resource Names (ARNs) of the datasets
              that you want to include in the dataset group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the dataset group\
              \ to help you categorize and organize them. Each tag consists of a key\
              \ and an optional value, both of which you define.</p> <p>The following\
              \ basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number\
              \ of tags per resource - 50.</p> </li> <li> <p>For each resource, each\
              \ tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
      required:
      - DatasetGroupName
      - Domain
      title: CreateDatasetGroupRequest
      type: object
    CreateDatasetImportJobResponse:
      example:
        DatasetImportJobArn: ""
      properties:
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job.
      type: object
    CreateDatasetImportJobRequest:
      example:
        DatasetArn: ""
        TimeZone: ""
        UseGeolocationForTimeZone: ""
        Format: ""
        ImportMode: ""
        DatasetImportJobName: ""
        GeolocationFormat: ""
        TimestampFormat: ""
        Tags: ""
        DataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
      properties:
        DatasetImportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name for the dataset import job. We recommend including\
              \ the current timestamp in the name, for example, <code>20190721DatasetImport</code>.\
              \ This can help you avoid getting a <code>ResourceAlreadyExistsException</code>\
              \ exception."
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Amazon Forecast dataset
              that you want to import data to.
        DataSource:
          $ref: '#/components/schemas/CreateDatasetImportJobRequest_DataSource'
        TimestampFormat:
          allOf:
          - $ref: '#/components/schemas/TimestampFormat'
          - description: "<p>The format of timestamps in the dataset. The format that\
              \ you specify depends on the <code>DataFrequency</code> specified when\
              \ the dataset was created. The following formats are supported</p> <ul>\
              \ <li> <p>\"yyyy-MM-dd\"</p> <p>For the following data frequencies:\
              \ Y, M, W, and D</p> </li> <li> <p>\"yyyy-MM-dd HH:mm:ss\"</p> <p>For\
              \ the following data frequencies: H, 30min, 15min, and 1min; and optionally,\
              \ for: Y, M, W, and D</p> </li> </ul> <p>If the format isn't specified,\
              \ Amazon Forecast expects the format to be \"yyyy-MM-dd HH:mm:ss\".</p>"
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          - description: "<p>A single time zone for every item in your dataset. This\
              \ option is ideal for datasets with all timestamps within a single time\
              \ zone, or if all timestamps are normalized to a single time zone. </p>\
              \ <p>Refer to the <a href=\"http://joda-time.sourceforge.net/timezones.html\"\
              >Joda-Time API</a> for a complete list of valid time zone names.</p>"
        UseGeolocationForTimeZone:
          allOf:
          - $ref: '#/components/schemas/UseGeolocationForTimeZone'
          - description: Automatically derive time zone information from the geolocation
              attribute. This option is ideal for datasets that contain timestamps
              in multiple time zones and those timestamps are expressed in local time.
        GeolocationFormat:
          allOf:
          - $ref: '#/components/schemas/GeolocationFormat'
          - description: "<p>The format of the geolocation attribute. The geolocation\
              \ attribute can be formatted in one of two ways:</p> <ul> <li> <p> <code>LAT_LONG</code>\
              \ - the latitude and longitude in decimal format (Example: 47.61_-122.33).</p>\
              \ </li> <li> <p> <code>CC_POSTALCODE</code> (US Only) - the country\
              \ code (US), followed by the 5-digit ZIP code (Example: US_98121).</p>\
              \ </li> </ul>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the dataset import\
              \ job to help you categorize and organize them. Each tag consists of\
              \ a key and an optional value, both of which you define.</p> <p>The\
              \ following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum\
              \ number of tags per resource - 50.</p> </li> <li> <p>For each resource,\
              \ each tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the imported data, CSV or PARQUET. The default\
              \ value is CSV."
        ImportMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: Specifies whether the dataset import job is a <code>FULL</code>
              or <code>INCREMENTAL</code> import. A <code>FULL</code> dataset import
              replaces all of the existing data with the newly imported data. An <code>INCREMENTAL</code>
              import appends the imported data to the existing data.
      required:
      - DataSource
      - DatasetArn
      - DatasetImportJobName
      title: CreateDatasetImportJobRequest
      type: object
    CreateExplainabilityResponse:
      example:
        ExplainabilityArn: ""
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability.
      type: object
    CreateExplainabilityRequest:
      example:
        ResourceArn: ""
        StartDateTime: ""
        EndDateTime: ""
        Schema:
          Attributes: ""
        EnableVisualization: ""
        ExplainabilityName: ""
        ExplainabilityConfig:
          TimeSeriesGranularity: ""
          TimePointGranularity: ""
        Tags: ""
        DataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
      properties:
        ExplainabilityName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A unique name for the Explainability.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Predictor or Forecast
              used to create the Explainability.
        ExplainabilityConfig:
          $ref: '#/components/schemas/CreateExplainabilityRequest_ExplainabilityConfig'
        DataSource:
          $ref: '#/components/schemas/DataSource'
        Schema:
          $ref: '#/components/schemas/Schema'
        EnableVisualization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Create an Explainability visualization that is viewable within
              the Amazon Web Services console.
        StartDateTime:
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          - description: "<p>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>,\
              \ define the first point for the Explainability.</p> <p>Use the following\
              \ timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</p>"
        EndDateTime:
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          - description: "<p>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>,\
              \ define the last time point for the Explainability.</p> <p>Use the\
              \ following timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>Optional metadata to help you categorize and organize\
              \ your resources. Each tag consists of a key and an optional value,\
              \ both of which you define. Tag keys and values are case sensitive.</p>\
              \ <p>The following restrictions apply to tags:</p> <ul> <li> <p>For\
              \ each resource, each tag key must be unique and each tag key must have\
              \ one value.</p> </li> <li> <p>Maximum number of tags per resource:\
              \ 50.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in\
              \ UTF-8.</p> </li> <li> <p>Maximum value length: 256 Unicode characters\
              \ in UTF-8.</p> </li> <li> <p>Accepted characters: all letters and numbers,\
              \ spaces representable in UTF-8, and + - = . _ : / @. If your tagging\
              \ schema is used across other services and resources, the character\
              \ restrictions of those services also apply. </p> </li> <li> <p>Key\
              \ prefixes cannot include any upper or lowercase combination of <code>aws:</code>\
              \ or <code>AWS:</code>. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit. You cannot edit or delete\
              \ tag keys with this prefix.</p> </li> </ul>"
      required:
      - ExplainabilityConfig
      - ExplainabilityName
      - ResourceArn
      title: CreateExplainabilityRequest
      type: object
    CreateExplainabilityExportResponse:
      example:
        ExplainabilityExportArn: ""
      properties:
        ExplainabilityExportArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the export.
      type: object
    CreateExplainabilityExportRequest:
      example:
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        ExplainabilityArn: ""
        Format: ""
        ExplainabilityExportName: ""
        Tags: ""
      properties:
        ExplainabilityExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A unique name for the Explainability export.
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability to export.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>Optional metadata to help you categorize and organize\
              \ your resources. Each tag consists of a key and an optional value,\
              \ both of which you define. Tag keys and values are case sensitive.</p>\
              \ <p>The following restrictions apply to tags:</p> <ul> <li> <p>For\
              \ each resource, each tag key must be unique and each tag key must have\
              \ one value.</p> </li> <li> <p>Maximum number of tags per resource:\
              \ 50.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in\
              \ UTF-8.</p> </li> <li> <p>Maximum value length: 256 Unicode characters\
              \ in UTF-8.</p> </li> <li> <p>Accepted characters: all letters and numbers,\
              \ spaces representable in UTF-8, and + - = . _ : / @. If your tagging\
              \ schema is used across other services and resources, the character\
              \ restrictions of those services also apply. </p> </li> <li> <p>Key\
              \ prefixes cannot include any upper or lowercase combination of <code>aws:</code>\
              \ or <code>AWS:</code>. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit. You cannot edit or delete\
              \ tag keys with this prefix.</p> </li> </ul>"
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      required:
      - Destination
      - ExplainabilityArn
      - ExplainabilityExportName
      title: CreateExplainabilityExportRequest
      type: object
    CreateForecastResponse:
      example:
        ForecastArn: ""
      properties:
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast.
      type: object
    CreateForecastRequest:
      example:
        ForecastName: ""
        TimeSeriesSelector:
          TimeSeriesIdentifiers:
            Format: ""
            Schema:
              Attributes: ""
            DataSource:
              S3Config:
                Path: ""
                KMSKeyArn: ""
                RoleArn: ""
        ForecastTypes: ""
        PredictorArn: ""
        Tags: ""
      properties:
        ForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the forecast.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor to use to
              generate the forecast.
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "<p>The quantiles at which probabilistic forecasts are generated.\
              \ <b>You can currently specify up to 5 quantiles per forecast</b>. Accepted\
              \ values include <code>0.01 to 0.99</code> (increments of .01 only)\
              \ and <code>mean</code>. The mean forecast is different from the median\
              \ (0.50) when the distribution is not symmetric (for example, Beta and\
              \ Negative Binomial). </p> <p>The default quantiles are the quantiles\
              \ you specified during predictor creation. If you didn't specify quantiles,\
              \ the default values are <code>[\"0.1\", \"0.5\", \"0.9\"]</code>. </p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the forecast\
              \ to help you categorize and organize them. Each tag consists of a key\
              \ and an optional value, both of which you define.</p> <p>The following\
              \ basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number\
              \ of tags per resource - 50.</p> </li> <li> <p>For each resource, each\
              \ tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
        TimeSeriesSelector:
          $ref: '#/components/schemas/CreateForecastRequest_TimeSeriesSelector'
      required:
      - ForecastName
      - PredictorArn
      title: CreateForecastRequest
      type: object
    CreateForecastExportJobResponse:
      example:
        ForecastExportJobArn: ""
      properties:
        ForecastExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the export job.
      type: object
    CreateForecastExportJobRequest:
      example:
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        ForecastArn: ""
        ForecastExportJobName: ""
        Tags: ""
      properties:
        ForecastExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the forecast export job.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast that you want
              to export.
        Destination:
          $ref: '#/components/schemas/CreateForecastExportJobRequest_Destination'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the forecast\
              \ export job to help you categorize and organize them. Each tag consists\
              \ of a key and an optional value, both of which you define.</p> <p>The\
              \ following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum\
              \ number of tags per resource - 50.</p> </li> <li> <p>For each resource,\
              \ each tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET. The default\
              \ value is CSV."
      required:
      - Destination
      - ForecastArn
      - ForecastExportJobName
      title: CreateForecastExportJobRequest
      type: object
    CreateMonitorResponse:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource.
      type: object
    CreateMonitorRequest:
      example:
        ResourceArn: ""
        MonitorName: ""
        Tags: ""
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the monitor resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor to monitor.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
              to apply to the monitor resource.
      required:
      - MonitorName
      - ResourceArn
      title: CreateMonitorRequest
      type: object
    CreatePredictorResponse:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor.
      type: object
    CreatePredictorRequest:
      example:
        OptimizationMetric: ""
        PredictorName: ""
        PerformAutoML: ""
        HPOConfig:
          ParameterRanges:
            CategoricalParameterRanges: ""
            IntegerParameterRanges: ""
            ContinuousParameterRanges: ""
        ForecastHorizon: ""
        InputDataConfig:
          DatasetGroupArn: ""
          SupplementaryFeatures: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
        AutoMLOverrideStrategy: ""
        AlgorithmArn: ""
        PerformHPO: ""
        EvaluationParameters:
          NumberOfBacktestWindows: ""
          BackTestWindowOffset: ""
        ForecastTypes: ""
        FeaturizationConfig:
          Featurizations: ""
          ForecastDimensions: ""
          ForecastFrequency: ""
        TrainingParameters: ""
        Tags: ""
      properties:
        PredictorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the predictor.
        AlgorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: <p>The Amazon Resource Name (ARN) of the algorithm to use
              for model training. Required if <code>PerformAutoML</code> is not set
              to <code>true</code>.</p> <p class="title"> <b>Supported algorithms:</b>
              </p> <ul> <li> <p> <code>arn:aws:forecast:::algorithm/ARIMA</code> </p>
              </li> <li> <p> <code>arn:aws:forecast:::algorithm/CNN-QR</code> </p>
              </li> <li> <p> <code>arn:aws:forecast:::algorithm/Deep_AR_Plus</code>
              </p> </li> <li> <p> <code>arn:aws:forecast:::algorithm/ETS</code> </p>
              </li> <li> <p> <code>arn:aws:forecast:::algorithm/NPTS</code> </p> </li>
              <li> <p> <code>arn:aws:forecast:::algorithm/Prophet</code> </p> </li>
              </ul>
        ForecastHorizon:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>Specifies the number of time-steps that the model is\
              \ trained to predict. The forecast horizon is also called the prediction\
              \ length.</p> <p>For example, if you configure a dataset for daily data\
              \ collection (using the <code>DataFrequency</code> parameter of the\
              \ <a>CreateDataset</a> operation) and set the forecast horizon to 10,\
              \ the model returns predictions for 10 days.</p> <p>The maximum forecast\
              \ horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES\
              \ dataset length.</p>"
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "<p>Specifies the forecast types used to train a predictor.\
              \ You can specify up to five forecast types. Forecast types can be quantiles\
              \ from 0.01 to 0.99, by increments of 0.01 or higher. You can also specify\
              \ the mean forecast with <code>mean</code>. </p> <p>The default value\
              \ is <code>[\"0.10\", \"0.50\", \"0.9\"]</code>.</p>"
        PerformAutoML:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Whether to perform AutoML. When Amazon Forecast performs\
              \ AutoML, it evaluates the algorithms it provides and chooses the best\
              \ algorithm and configuration for your training dataset.</p> <p>The\
              \ default value is <code>false</code>. In this case, you are required\
              \ to specify an algorithm.</p> <p>Set <code>PerformAutoML</code> to\
              \ <code>true</code> to have Amazon Forecast perform AutoML. This is\
              \ a good option if you aren't sure which algorithm is suitable for your\
              \ training data. In this case, <code>PerformHPO</code> must be false.</p>"
        AutoMLOverrideStrategy:
          allOf:
          - $ref: '#/components/schemas/AutoMLOverrideStrategy'
          - description: "<note> <p> The <code>LatencyOptimized</code> AutoML override\
              \ strategy is only available in private beta. Contact Amazon Web Services\
              \ Support or your account manager to learn more about access privileges.\
              \ </p> </note> <p>Used to overide the default AutoML strategy, which\
              \ is to optimize predictor accuracy. To apply an AutoML strategy that\
              \ minimizes training time, use <code>LatencyOptimized</code>.</p> <p>This\
              \ parameter is only valid for predictors trained using AutoML.</p>"
        PerformHPO:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Whether to perform hyperparameter optimization (HPO).\
              \ HPO finds optimal hyperparameter values for your training data. The\
              \ process of performing HPO is known as running a hyperparameter tuning\
              \ job.</p> <p>The default value is <code>false</code>. In this case,\
              \ Amazon Forecast uses default hyperparameter values from the chosen\
              \ algorithm.</p> <p>To override the default values, set <code>PerformHPO</code>\
              \ to <code>true</code> and, optionally, supply the <a>HyperParameterTuningJobConfig</a>\
              \ object. The tuning job specifies a metric to optimize, which hyperparameters\
              \ participate in tuning, and the valid range for each tunable hyperparameter.\
              \ In this case, you are required to specify an algorithm and <code>PerformAutoML</code>\
              \ must be false.</p> <p>The following algorithms support HPO:</p> <ul>\
              \ <li> <p>DeepAR+</p> </li> <li> <p>CNN-QR</p> </li> </ul>"
        TrainingParameters:
          allOf:
          - $ref: '#/components/schemas/TrainingParameters'
          - description: "The hyperparameters to override for model training. The\
              \ hyperparameters that you can override are listed in the individual\
              \ algorithms. For the list of supported algorithms, see <a>aws-forecast-choosing-recipes</a>."
        EvaluationParameters:
          $ref: '#/components/schemas/CreatePredictorRequest_EvaluationParameters'
        HPOConfig:
          $ref: '#/components/schemas/CreatePredictorRequest_HPOConfig'
        InputDataConfig:
          $ref: '#/components/schemas/CreatePredictorRequest_InputDataConfig'
        FeaturizationConfig:
          $ref: '#/components/schemas/CreatePredictorRequest_FeaturizationConfig'
        EncryptionConfig:
          $ref: '#/components/schemas/CreateDatasetRequest_EncryptionConfig'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The optional metadata that you apply to the predictor\
              \ to help you categorize and organize them. Each tag consists of a key\
              \ and an optional value, both of which you define.</p> <p>The following\
              \ basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number\
              \ of tags per resource - 50.</p> </li> <li> <p>For each resource, each\
              \ tag key must be unique, and each tag key can have only one value.</p>\
              \ </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p>\
              \ </li> <li> <p>If your tagging schema is used across multiple services\
              \ and resources, remember that other services may have restrictions\
              \ on allowed characters. Generally allowed characters are: letters,\
              \ numbers, and spaces representable in UTF-8, and the following characters:\
              \ + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p>\
              \ </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or\
              \ any upper or lowercase combination of such as a prefix for keys as\
              \ it is reserved for Amazon Web Services use. You cannot edit or delete\
              \ tag keys with this prefix. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, then Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit.</p> </li> </ul>"
        OptimizationMetric:
          allOf:
          - $ref: '#/components/schemas/OptimizationMetric'
          - description: The accuracy metric used to optimize the predictor.
      required:
      - FeaturizationConfig
      - ForecastHorizon
      - InputDataConfig
      - PredictorName
      title: CreatePredictorRequest
      type: object
    CreatePredictorBacktestExportJobResponse:
      example:
        PredictorBacktestExportJobArn: ""
      properties:
        PredictorBacktestExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor backtest
              export job that you want to export.
      type: object
    CreatePredictorBacktestExportJobRequest:
      example:
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        PredictorArn: ""
        PredictorBacktestExportJobName: ""
        Tags: ""
      properties:
        PredictorBacktestExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the backtest export job.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor that you
              want to export.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>Optional metadata to help you categorize and organize\
              \ your backtests. Each tag consists of a key and an optional value,\
              \ both of which you define. Tag keys and values are case sensitive.</p>\
              \ <p>The following restrictions apply to tags:</p> <ul> <li> <p>For\
              \ each resource, each tag key must be unique and each tag key must have\
              \ one value.</p> </li> <li> <p>Maximum number of tags per resource:\
              \ 50.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in\
              \ UTF-8.</p> </li> <li> <p>Maximum value length: 256 Unicode characters\
              \ in UTF-8.</p> </li> <li> <p>Accepted characters: all letters and numbers,\
              \ spaces representable in UTF-8, and + - = . _ : / @. If your tagging\
              \ schema is used across other services and resources, the character\
              \ restrictions of those services also apply. </p> </li> <li> <p>Key\
              \ prefixes cannot include any upper or lowercase combination of <code>aws:</code>\
              \ or <code>AWS:</code>. Values can have this prefix. If a tag value\
              \ has <code>aws</code> as its prefix but the key does not, Forecast\
              \ considers it to be a user tag and will count against the limit of\
              \ 50 tags. Tags with only the key prefix of <code>aws</code> do not\
              \ count against your tags per resource limit. You cannot edit or delete\
              \ tag keys with this prefix.</p> </li> </ul>"
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET. The default\
              \ value is CSV."
      required:
      - Destination
      - PredictorArn
      - PredictorBacktestExportJobName
      title: CreatePredictorBacktestExportJobRequest
      type: object
    CreateWhatIfAnalysisResponse:
      example:
        WhatIfAnalysisArn: ""
      properties:
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis.
      type: object
    CreateWhatIfAnalysisRequest:
      example:
        TimeSeriesSelector:
          TimeSeriesIdentifiers:
            Format: ""
            Schema:
              Attributes: ""
            DataSource:
              S3Config:
                Path: ""
                KMSKeyArn: ""
                RoleArn: ""
        WhatIfAnalysisName: ""
        ForecastArn: ""
        Tags: ""
      properties:
        WhatIfAnalysisName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if analysis. Each name must be unique.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the baseline forecast.
        TimeSeriesSelector:
          $ref: '#/components/schemas/CreateWhatIfAnalysisRequest_TimeSeriesSelector'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
              to apply to the what if forecast.
      required:
      - ForecastArn
      - WhatIfAnalysisName
      title: CreateWhatIfAnalysisRequest
      type: object
    CreateWhatIfForecastResponse:
      example:
        WhatIfForecastArn: ""
      properties:
        WhatIfForecastArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast.
      type: object
    CreateWhatIfForecastRequest:
      example:
        WhatIfForecastName: ""
        TimeSeriesTransformations: ""
        TimeSeriesReplacementsDataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
          Format: ""
          Schema:
            Attributes: ""
          TimestampFormat: ""
        WhatIfAnalysisArn: ""
        Tags: ""
      properties:
        WhatIfForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if forecast. Names must be unique within
              each what-if analysis.
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis.
        TimeSeriesTransformations:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesTransformations'
          - description: "The transformations that are applied to the baseline time\
              \ series. Each transformation contains an action and a set of conditions.\
              \ An action is applied only when all conditions are met. If no conditions\
              \ are provided, the action is applied to all items."
        TimeSeriesReplacementsDataSource:
          $ref: '#/components/schemas/CreateWhatIfForecastRequest_TimeSeriesReplacementsDataSource'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
              to apply to the what if forecast.
      required:
      - WhatIfAnalysisArn
      - WhatIfForecastName
      title: CreateWhatIfForecastRequest
      type: object
    CreateWhatIfForecastExportResponse:
      example:
        WhatIfForecastExportArn: ""
      properties:
        WhatIfForecastExportArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast.
      type: object
    CreateWhatIfForecastExportRequest:
      example:
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        WhatIfForecastExportName: ""
        WhatIfForecastArns: ""
        Tags: ""
      properties:
        WhatIfForecastExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if forecast to export.
        WhatIfForecastArns:
          allOf:
          - $ref: '#/components/schemas/WhatIfForecastArnListForExport'
          - description: The list of what-if forecast Amazon Resource Names (ARNs)
              to export.
        Destination:
          $ref: '#/components/schemas/CreateForecastExportJobRequest_Destination'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
              to apply to the what if forecast.
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      required:
      - Destination
      - WhatIfForecastArns
      - WhatIfForecastExportName
      title: CreateWhatIfForecastExportRequest
      type: object
    DeleteDatasetRequest:
      example:
        DatasetArn: ""
      properties:
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to delete.
      required:
      - DatasetArn
      title: DeleteDatasetRequest
      type: object
    DeleteDatasetGroupRequest:
      example:
        DatasetGroupArn: ""
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group to delete.
      required:
      - DatasetGroupArn
      title: DeleteDatasetGroupRequest
      type: object
    DeleteDatasetImportJobRequest:
      example:
        DatasetImportJobArn: ""
      properties:
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job
              to delete.
      required:
      - DatasetImportJobArn
      title: DeleteDatasetImportJobRequest
      type: object
    DeleteExplainabilityRequest:
      example:
        ExplainabilityArn: ""
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability resource
              to delete.
      required:
      - ExplainabilityArn
      title: DeleteExplainabilityRequest
      type: object
    DeleteExplainabilityExportRequest:
      example:
        ExplainabilityExportArn: ""
      properties:
        ExplainabilityExportArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the Explainability export
              to delete. '
      required:
      - ExplainabilityExportArn
      title: DeleteExplainabilityExportRequest
      type: object
    DeleteForecastRequest:
      example:
        ForecastArn: ""
      properties:
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast to delete.
      required:
      - ForecastArn
      title: DeleteForecastRequest
      type: object
    DeleteForecastExportJobRequest:
      example:
        ForecastExportJobArn: ""
      properties:
        ForecastExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast export job
              to delete.
      required:
      - ForecastExportJobArn
      title: DeleteForecastExportJobRequest
      type: object
    DeleteMonitorRequest:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource to
              delete.
      required:
      - MonitorArn
      title: DeleteMonitorRequest
      type: object
    DeletePredictorRequest:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor to delete.
      required:
      - PredictorArn
      title: DeletePredictorRequest
      type: object
    DeletePredictorBacktestExportJobRequest:
      example:
        PredictorBacktestExportJobArn: ""
      properties:
        PredictorBacktestExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor backtest
              export job to delete.
      required:
      - PredictorBacktestExportJobArn
      title: DeletePredictorBacktestExportJobRequest
      type: object
    DeleteResourceTreeRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the parent resource to
              delete. All child resources of the parent resource will also be deleted.
      required:
      - ResourceArn
      title: DeleteResourceTreeRequest
      type: object
    DeleteWhatIfAnalysisRequest:
      example:
        WhatIfAnalysisArn: ""
      properties:
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis that
              you want to delete.
      required:
      - WhatIfAnalysisArn
      title: DeleteWhatIfAnalysisRequest
      type: object
    DeleteWhatIfForecastRequest:
      example:
        WhatIfForecastArn: ""
      properties:
        WhatIfForecastArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast that
              you want to delete.
      required:
      - WhatIfForecastArn
      title: DeleteWhatIfForecastRequest
      type: object
    DeleteWhatIfForecastExportRequest:
      example:
        WhatIfForecastExportArn: ""
      properties:
        WhatIfForecastExportArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast export
              that you want to delete.
      required:
      - WhatIfForecastExportArn
      title: DeleteWhatIfForecastExportRequest
      type: object
    DescribeAutoPredictorResponse:
      example:
        Status: ""
        LastModificationTime: ""
        OptimizationMetric: ""
        PredictorName: ""
        ReferencePredictorSummary:
          State: ""
          Arn: ""
        MonitorInfo:
          Status: ""
          MonitorArn: ""
        Message: ""
        ForecastDimensions: ""
        ForecastHorizon: ""
        DatasetImportJobArns: ""
        EstimatedTimeRemainingInMinutes: ""
        ForecastFrequency: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
        ExplainabilityInfo:
          Status: ""
          ExplainabilityArn: ""
        TimeAlignmentBoundary:
          Month: ""
          DayOfWeek: ""
          Hour: ""
          DayOfMonth: ""
        ForecastTypes: ""
        DataConfig:
          DatasetGroupArn: ""
          AdditionalDatasets: ""
          AttributeConfigs: ""
        PredictorArn: ""
        CreationTime: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor
        PredictorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the predictor.
        ForecastHorizon:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of time-steps that the model predicts. The forecast
              horizon is also called the prediction length.
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "The forecast types used during predictor training. Default\
              \ value is [\"0.1\",\"0.5\",\"0.9\"]."
        ForecastFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "<p>The frequency of predictions in a forecast.</p> <p>Valid\
              \ intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min\
              \ (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes),\
              \ and 1min (1 minute). For example, \"Y\" indicates every year and \"\
              5min\" indicates every five minutes.</p>"
        ForecastDimensions:
          allOf:
          - $ref: '#/components/schemas/ForecastDimensions'
          - description: An array of dimension (field) names that specify the attributes
              used to group your time series.
        DatasetImportJobArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: An array of the ARNs of the dataset import jobs used to import
              training data for the predictor.
        DataConfig:
          $ref: '#/components/schemas/CreateAutoPredictorRequest_DataConfig'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
        ReferencePredictorSummary:
          $ref: '#/components/schemas/DescribeAutoPredictorResponse_ReferencePredictorSummary'
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated time remaining in minutes for the predictor
              training job to complete.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the predictor. States include: </p> <ul>\
              \ <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "In the event of an error, a message detailing the cause\
              \ of the error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the CreateAutoPredictor request.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        OptimizationMetric:
          allOf:
          - $ref: '#/components/schemas/OptimizationMetric'
          - description: The accuracy metric used to optimize the predictor.
        ExplainabilityInfo:
          $ref: '#/components/schemas/DescribeAutoPredictorResponse_ExplainabilityInfo'
        MonitorInfo:
          $ref: '#/components/schemas/DescribeAutoPredictorResponse_MonitorInfo'
        TimeAlignmentBoundary:
          $ref: '#/components/schemas/DescribeAutoPredictorResponse_TimeAlignmentBoundary'
      type: object
    DescribeAutoPredictorRequest:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor.
      required:
      - PredictorArn
      title: DescribeAutoPredictorRequest
      type: object
    DescribeDatasetResponse:
      example:
        Status: ""
        LastModificationTime: ""
        DatasetArn: ""
        DataFrequency: ""
        DatasetName: ""
        Schema:
          Attributes: ""
        CreationTime: ""
        DatasetType: ""
        Domain: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
      properties:
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain associated with the dataset.
        DatasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: The dataset type.
        DataFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "<p>The frequency of data collection.</p> <p>Valid intervals\
              \ are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes),\
              \ 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min\
              \ (1 minute). For example, \"M\" indicates every month and \"30min\"\
              \ indicates every 30 minutes.</p>"
        Schema:
          $ref: '#/components/schemas/DescribeDatasetResponse_Schema'
        EncryptionConfig:
          $ref: '#/components/schemas/DescribeDatasetResponse_EncryptionConfig'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the dataset. States include:</p> <ul> <li>\
              \ <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>,\
              \ <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>\
              \ </ul> <p>The <code>UPDATE</code> states apply while data is imported\
              \ to the dataset from a call to the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
              >CreateDatasetImportJob</a> operation and reflect the status of the\
              \ dataset import job. For example, when the import job status is <code>CREATE_IN_PROGRESS</code>,\
              \ the status of the dataset is <code>UPDATE_IN_PROGRESS</code>.</p>\
              \ <note> <p>The <code>Status</code> of the dataset must be <code>ACTIVE</code>\
              \ before you can import training data.</p> </note>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When you create a dataset, <code>LastModificationTime</code>\
              \ is the same as <code>CreationTime</code>. While data is being imported\
              \ to the dataset, <code>LastModificationTime</code> is the current time\
              \ of the <code>DescribeDataset</code> call. After a <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
              >CreateDatasetImportJob</a> operation has finished, <code>LastModificationTime</code>\
              \ is when the import job completed or failed."
      type: object
    DescribeDatasetRequest:
      example:
        DatasetArn: ""
      properties:
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
      required:
      - DatasetArn
      title: DescribeDatasetRequest
      type: object
    DescribeDatasetGroupResponse:
      example:
        Status: ""
        LastModificationTime: ""
        DatasetArns: ""
        DatasetGroupName: ""
        DatasetGroupArn: ""
        CreationTime: ""
        Domain: ""
      properties:
        DatasetGroupName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset group.
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group.
        DatasetArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: An array of Amazon Resource Names (ARNs) of the datasets
              contained in the dataset group.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain associated with the dataset group.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the dataset group. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>,\
              \ <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>\
              \ </ul> <p>The <code>UPDATE</code> states apply when you call the <a\
              \ href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html\"\
              >UpdateDatasetGroup</a> operation.</p> <note> <p>The <code>Status</code>\
              \ of the dataset group must be <code>ACTIVE</code> before you can use\
              \ the dataset group to create a predictor.</p> </note>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset group was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the dataset group was created or last updated from\
              \ a call to the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html\"\
              >UpdateDatasetGroup</a> operation. While the dataset group is being\
              \ updated, <code>LastModificationTime</code> is the current time of\
              \ the <code>DescribeDatasetGroup</code> call."
      type: object
    DescribeDatasetGroupRequest:
      example:
        DatasetGroupArn: ""
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
      required:
      - DatasetGroupArn
      title: DescribeDatasetGroupRequest
      type: object
    DescribeDatasetImportJobResponse:
      example:
        Status: ""
        LastModificationTime: ""
        FieldStatistics: ""
        Message: ""
        DatasetImportJobName: ""
        DatasetImportJobArn: ""
        GeolocationFormat: ""
        TimestampFormat: ""
        EstimatedTimeRemainingInMinutes: ""
        DataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        DatasetArn: ""
        TimeZone: ""
        UseGeolocationForTimeZone: ""
        Format: ""
        ImportMode: ""
        DataSize: ""
        CreationTime: ""
      properties:
        DatasetImportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset import job.
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset import job.
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset that the training
              data was imported to.
        TimestampFormat:
          allOf:
          - $ref: '#/components/schemas/TimestampFormat'
          - description: "<p>The format of timestamps in the dataset. The format that\
              \ you specify depends on the <code>DataFrequency</code> specified when\
              \ the dataset was created. The following formats are supported</p> <ul>\
              \ <li> <p>\"yyyy-MM-dd\"</p> <p>For the following data frequencies:\
              \ Y, M, W, and D</p> </li> <li> <p>\"yyyy-MM-dd HH:mm:ss\"</p> <p>For\
              \ the following data frequencies: H, 30min, 15min, and 1min; and optionally,\
              \ for: Y, M, W, and D</p> </li> </ul>"
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          - description: The single time zone applied to every item in the dataset
        UseGeolocationForTimeZone:
          allOf:
          - $ref: '#/components/schemas/UseGeolocationForTimeZone'
          - description: Whether <code>TimeZone</code> is automatically derived from
              the geolocation attribute.
        GeolocationFormat:
          allOf:
          - $ref: '#/components/schemas/GeolocationFormat'
          - description: The format of the geolocation attribute. Valid Values:<code>"LAT_LONG"</code>
              and <code>"CC_POSTALCODE"</code>.
        DataSource:
          $ref: '#/components/schemas/DescribeDatasetImportJobResponse_DataSource'
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated time remaining in minutes for the dataset import
              job to complete.
        FieldStatistics:
          allOf:
          - $ref: '#/components/schemas/FieldStatistics'
          - description: Statistical information about each field in the input data.
        DataSize:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The size of the dataset in gigabytes (GB) after the import
              job has finished.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the dataset import job. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>CREATE_STOPPING</code>,\
              \ <code>CREATE_STOPPED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset import job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the imported data, CSV or PARQUET."
        ImportMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: "The import mode of the dataset import job, FULL or INCREMENTAL."
      type: object
    DescribeDatasetImportJobRequest:
      example:
        DatasetImportJobArn: ""
      properties:
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job.
      required:
      - DatasetImportJobArn
      title: DescribeDatasetImportJobRequest
      type: object
    DescribeExplainabilityResponse:
      example:
        Status: ""
        LastModificationTime: ""
        ExplainabilityArn: ""
        Message: ""
        EnableVisualization: ""
        Schema:
          Attributes: ""
        ExplainabilityName: ""
        EstimatedTimeRemainingInMinutes: ""
        DataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        ResourceArn: ""
        StartDateTime: ""
        EndDateTime: ""
        CreationTime: ""
        ExplainabilityConfig:
          TimeSeriesGranularity: ""
          TimePointGranularity: ""
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability.
        ExplainabilityName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the Explainability.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Predictor or Forecast
              used to create the Explainability resource.
        ExplainabilityConfig:
          $ref: '#/components/schemas/CreateExplainabilityRequest_ExplainabilityConfig'
        EnableVisualization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the visualization was enabled for the Explainability
              resource.
        DataSource:
          $ref: '#/components/schemas/DataSource'
        Schema:
          $ref: '#/components/schemas/Schema'
        StartDateTime:
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          - description: "If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>,\
              \ the first time point in the Explainability."
        EndDateTime:
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          - description: "If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>,\
              \ the last time point in the Explainability."
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated time remaining in minutes for the <a>CreateExplainability</a>
              job to complete.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If an error occurred, a message about the error."
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the Explainability resource. States include:\
              \ </p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the Explainability resource was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    DescribeExplainabilityRequest:
      example:
        ExplainabilityArn: ""
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explaianability to
              describe.
      required:
      - ExplainabilityArn
      title: DescribeExplainabilityRequest
      type: object
    DescribeExplainabilityExportResponse:
      example:
        Status: ""
        LastModificationTime: ""
        ExplainabilityExportArn: ""
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        ExplainabilityArn: ""
        Format: ""
        Message: ""
        ExplainabilityExportName: ""
        CreationTime: ""
      properties:
        ExplainabilityExportArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability export.
        ExplainabilityExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the Explainability export.
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability export.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Information about any errors that occurred during the export.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the Explainability export. States include:\
              \ </p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the Explainability export was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      type: object
    DescribeExplainabilityExportRequest:
      example:
        ExplainabilityExportArn: ""
      properties:
        ExplainabilityExportArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability export.
      required:
      - ExplainabilityExportArn
      title: DescribeExplainabilityExportRequest
      type: object
    DescribeForecastResponse:
      example:
        ForecastName: ""
        Status: ""
        LastModificationTime: ""
        TimeSeriesSelector:
          TimeSeriesIdentifiers:
            Format: ""
            Schema:
              Attributes: ""
            DataSource:
              S3Config:
                Path: ""
                KMSKeyArn: ""
                RoleArn: ""
        Message: ""
        ForecastTypes: ""
        PredictorArn: ""
        DatasetGroupArn: ""
        ForecastArn: ""
        CreationTime: ""
        EstimatedTimeRemainingInMinutes: ""
      properties:
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The forecast ARN as specified in the request.
        ForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the forecast.
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: The quantiles at which probabilistic forecasts were generated.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the predictor used to generate the forecast.
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group that provided the data used
              to train the predictor.
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated time remaining in minutes for the forecast
              job to complete.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the forecast. States include:</p> <ul>\
              \ <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the forecast must be <code>ACTIVE</code> before you can query or\
              \ export the forecast.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the forecast creation task was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        TimeSeriesSelector:
          $ref: '#/components/schemas/DescribeForecastResponse_TimeSeriesSelector'
      type: object
    DescribeForecastRequest:
      example:
        ForecastArn: ""
      properties:
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast.
      required:
      - ForecastArn
      title: DescribeForecastRequest
      type: object
    DescribeForecastExportJobResponse:
      example:
        Status: ""
        LastModificationTime: ""
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        Message: ""
        ForecastArn: ""
        CreationTime: ""
        ForecastExportJobArn: ""
        ForecastExportJobName: ""
      properties:
        ForecastExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the forecast export job.
        ForecastExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the forecast export job.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the exported forecast.
        Destination:
          $ref: '#/components/schemas/DescribeForecastExportJobResponse_Destination'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If an error occurred, an informational message about the\
              \ error."
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the forecast export job. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the forecast export job must be <code>ACTIVE</code> before you\
              \ can access the forecast in your S3 bucket.</p> </note>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the forecast export job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      type: object
    DescribeForecastExportJobRequest:
      example:
        ForecastExportJobArn: ""
      properties:
        ForecastExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast export job.
      required:
      - ForecastExportJobArn
      title: DescribeForecastExportJobRequest
      type: object
    DescribeMonitorResponse:
      example:
        Status: ""
        LastModificationTime: ""
        EstimatedEvaluationTimeRemainingInMinutes: ""
        ResourceArn: ""
        LastEvaluationTime: ""
        Message: ""
        MonitorArn: ""
        MonitorName: ""
        CreationTime: ""
        Baseline:
          PredictorBaseline:
            BaselineMetrics: ""
        LastEvaluationState: ""
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the monitor.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource described.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the auto predictor being
              monitored.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the monitor resource.
        LastEvaluationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the latest evaluation completed by the monitor.
        LastEvaluationState:
          allOf:
          - $ref: '#/components/schemas/EvaluationState'
          - description: The state of the monitor's latest evaluation.
        Baseline:
          $ref: '#/components/schemas/DescribeMonitorResponse_Baseline'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "An error message, if any, for the monitor."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp for when the monitor resource was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the latest modification to the monitor.
        EstimatedEvaluationTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated number of minutes remaining before the monitor
              resource finishes its current evaluation.
      type: object
    DescribeMonitorRequest:
      example:
        MonitorArn: ""
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource to
              describe.
      required:
      - MonitorArn
      title: DescribeMonitorRequest
      type: object
    DescribePredictorResponse:
      example:
        Status: ""
        LastModificationTime: ""
        OptimizationMetric: ""
        PredictorName: ""
        PerformAutoML: ""
        HPOConfig:
          ParameterRanges:
            CategoricalParameterRanges: ""
            IntegerParameterRanges: ""
            ContinuousParameterRanges: ""
        Message: ""
        ForecastHorizon: ""
        DatasetImportJobArns: ""
        EstimatedTimeRemainingInMinutes: ""
        InputDataConfig:
          DatasetGroupArn: ""
          SupplementaryFeatures: ""
        EncryptionConfig:
          KMSKeyArn: ""
          RoleArn: ""
        PredictorExecutionDetails:
          PredictorExecutions: ""
        AutoMLOverrideStrategy: ""
        AlgorithmArn: ""
        PerformHPO: ""
        EvaluationParameters:
          NumberOfBacktestWindows: ""
          BackTestWindowOffset: ""
        ForecastTypes: ""
        PredictorArn: ""
        FeaturizationConfig:
          Featurizations: ""
          ForecastDimensions: ""
          ForecastFrequency: ""
        TrainingParameters: ""
        AutoMLAlgorithmArns: ""
        CreationTime: ""
        IsAutoPredictor: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The ARN of the predictor.
        PredictorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the predictor.
        AlgorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the algorithm used for
              model training.
        AutoMLAlgorithmArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: "When <code>PerformAutoML</code> is specified, the ARN of\
              \ the chosen algorithm."
        ForecastHorizon:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of time-steps of the forecast. The forecast horizon
              is also called the prediction length.
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "The forecast types used during predictor training. Default\
              \ value is <code>[\"0.1\",\"0.5\",\"0.9\"]</code> "
        PerformAutoML:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the predictor is set to perform AutoML.
        AutoMLOverrideStrategy:
          allOf:
          - $ref: '#/components/schemas/AutoMLOverrideStrategy'
          - description: "<note> <p> The <code>LatencyOptimized</code> AutoML override\
              \ strategy is only available in private beta. Contact Amazon Web Services\
              \ Support or your account manager to learn more about access privileges.\
              \ </p> </note> <p>The AutoML strategy used to train the predictor. Unless\
              \ <code>LatencyOptimized</code> is specified, the AutoML strategy optimizes\
              \ predictor accuracy.</p> <p>This parameter is only valid for predictors\
              \ trained using AutoML.</p>"
        PerformHPO:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the predictor is set to perform hyperparameter optimization
              (HPO).
        TrainingParameters:
          allOf:
          - $ref: '#/components/schemas/TrainingParameters'
          - description: "The default training parameters or overrides selected during\
              \ model training. When running AutoML or choosing HPO with CNN-QR or\
              \ DeepAR+, the optimized values for the chosen hyperparameters are returned.\
              \ For more information, see <a>aws-forecast-choosing-recipes</a>."
        EvaluationParameters:
          $ref: '#/components/schemas/CreatePredictorRequest_EvaluationParameters'
        HPOConfig:
          $ref: '#/components/schemas/DescribePredictorResponse_HPOConfig'
        InputDataConfig:
          $ref: '#/components/schemas/CreatePredictorRequest_InputDataConfig'
        FeaturizationConfig:
          $ref: '#/components/schemas/CreatePredictorRequest_FeaturizationConfig'
        EncryptionConfig:
          $ref: '#/components/schemas/CreateDatasetRequest_EncryptionConfig'
        PredictorExecutionDetails:
          $ref: '#/components/schemas/DescribePredictorResponse_PredictorExecutionDetails'
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The estimated time remaining in minutes for the predictor
              training job to complete.
        IsAutoPredictor:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the predictor was created with <a>CreateAutoPredictor</a>.
        DatasetImportJobArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: An array of the ARNs of the dataset import jobs used to import
              training data for the predictor.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the predictor. States include:</p> <ul>\
              \ <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>CREATE_STOPPING</code>,\
              \ <code>CREATE_STOPPED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the predictor must be <code>ACTIVE</code> before you can use the\
              \ predictor to create a forecast.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the model training task was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        OptimizationMetric:
          allOf:
          - $ref: '#/components/schemas/OptimizationMetric'
          - description: The accuracy metric used to optimize the predictor.
      type: object
    DescribePredictorRequest:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor that you
              want information about.
      required:
      - PredictorArn
      title: DescribePredictorRequest
      type: object
    DescribePredictorBacktestExportJobResponse:
      example:
        Status: ""
        LastModificationTime: ""
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        Message: ""
        PredictorArn: ""
        PredictorBacktestExportJobArn: ""
        CreationTime: ""
        PredictorBacktestExportJobName: ""
      properties:
        PredictorBacktestExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor backtest
              export job.
        PredictorBacktestExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the predictor backtest export job.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Information about any errors that may have occurred during
              the backtest export.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the predictor backtest export job. States\
              \ include: </p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p>\
              \ <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code>\
              \ </p> </li> <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the predictor backtest export job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      type: object
    DescribePredictorBacktestExportJobRequest:
      example:
        PredictorBacktestExportJobArn: ""
      properties:
        PredictorBacktestExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor backtest
              export job.
      required:
      - PredictorBacktestExportJobArn
      title: DescribePredictorBacktestExportJobRequest
      type: object
    DescribeWhatIfAnalysisResponse:
      example:
        Status: ""
        LastModificationTime: ""
        TimeSeriesSelector:
          TimeSeriesIdentifiers:
            Format: ""
            Schema:
              Attributes: ""
            DataSource:
              S3Config:
                Path: ""
                KMSKeyArn: ""
                RoleArn: ""
        Message: ""
        WhatIfAnalysisName: ""
        ForecastArn: ""
        CreationTime: ""
        EstimatedTimeRemainingInMinutes: ""
        WhatIfAnalysisArn: ""
      properties:
        WhatIfAnalysisName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if analysis.
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast.
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The approximate time remaining to complete the what-if analysis,\
              \ in minutes."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the what-if analysis. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if analysis must be <code>ACTIVE</code> before you can\
              \ access the analysis.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if analysis was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        TimeSeriesSelector:
          $ref: '#/components/schemas/TimeSeriesSelector'
      type: object
    DescribeWhatIfAnalysisRequest:
      example:
        WhatIfAnalysisArn: ""
      properties:
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis that
              you are interested in.
      required:
      - WhatIfAnalysisArn
      title: DescribeWhatIfAnalysisRequest
      type: object
    DescribeWhatIfForecastResponse:
      example:
        Status: ""
        LastModificationTime: ""
        Message: ""
        ForecastTypes: ""
        WhatIfForecastName: ""
        CreationTime: ""
        TimeSeriesTransformations: ""
        EstimatedTimeRemainingInMinutes: ""
        TimeSeriesReplacementsDataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
          Format: ""
          Schema:
            Attributes: ""
          TimestampFormat: ""
        WhatIfAnalysisArn: ""
        WhatIfForecastArn: ""
      properties:
        WhatIfForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if forecast.
        WhatIfForecastArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast.
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis that
              contains this forecast.
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The approximate time remaining to complete the what-if forecast,\
              \ in minutes."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the what-if forecast. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if forecast must be <code>ACTIVE</code> before you can\
              \ access the forecast.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if forecast was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        TimeSeriesTransformations:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesTransformations'
          - description: An array of <code>Action</code> and <code>TimeSeriesConditions</code>
              elements that describe what transformations were applied to which time
              series.
        TimeSeriesReplacementsDataSource:
          $ref: '#/components/schemas/DescribeWhatIfForecastResponse_TimeSeriesReplacementsDataSource'
        ForecastTypes:
          allOf:
          - $ref: '#/components/schemas/ForecastTypes'
          - description: "The quantiles at which probabilistic forecasts are generated.\
              \ You can specify up to five quantiles per what-if forecast in the <a>CreateWhatIfForecast</a>\
              \ operation. If you didn't specify quantiles, the default values are\
              \ <code>[\"0.1\", \"0.5\", \"0.9\"]</code>. "
      type: object
    DescribeWhatIfForecastRequest:
      example:
        WhatIfForecastArn: ""
      properties:
        WhatIfForecastArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast that
              you are interested in.
      required:
      - WhatIfForecastArn
      title: DescribeWhatIfForecastRequest
      type: object
    DescribeWhatIfForecastExportResponse:
      example:
        Status: ""
        LastModificationTime: ""
        Destination:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
        Format: ""
        Message: ""
        CreationTime: ""
        WhatIfForecastExportArn: ""
        WhatIfForecastExportName: ""
        WhatIfForecastArns: ""
        EstimatedTimeRemainingInMinutes: ""
      properties:
        WhatIfForecastExportArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast export.
        WhatIfForecastExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if forecast export.
        WhatIfForecastArns:
          allOf:
          - $ref: '#/components/schemas/LongArnList'
          - description: An array of Amazon Resource Names (ARNs) that represent all
              of the what-if forecasts exported in this resource.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If an error occurred, an informational message about the\
              \ error."
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the what-if forecast. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if forecast export must be <code>ACTIVE</code> before\
              \ you can access the forecast export.</p> </note>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if forecast export was created.
        EstimatedTimeRemainingInMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The approximate time remaining to complete the what-if forecast\
              \ export, in minutes."
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the exported data, CSV or PARQUET."
      type: object
    DescribeWhatIfForecastExportRequest:
      example:
        WhatIfForecastExportArn: ""
      properties:
        WhatIfForecastExportArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast export
              that you are interested in.
      required:
      - WhatIfForecastExportArn
      title: DescribeWhatIfForecastExportRequest
      type: object
    GetAccuracyMetricsResponse:
      example:
        OptimizationMetric: ""
        IsAutoPredictor: ""
        PredictorEvaluationResults: ""
        AutoMLOverrideStrategy: ""
      properties:
        PredictorEvaluationResults:
          allOf:
          - $ref: '#/components/schemas/PredictorEvaluationResults'
          - description: An array of results from evaluating the predictor.
        IsAutoPredictor:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the predictor was created with <a>CreateAutoPredictor</a>.
        AutoMLOverrideStrategy:
          allOf:
          - $ref: '#/components/schemas/AutoMLOverrideStrategy'
          - description: "<note> <p> The <code>LatencyOptimized</code> AutoML override\
              \ strategy is only available in private beta. Contact Amazon Web Services\
              \ Support or your account manager to learn more about access privileges.\
              \ </p> </note> <p>The AutoML strategy used to train the predictor. Unless\
              \ <code>LatencyOptimized</code> is specified, the AutoML strategy optimizes\
              \ predictor accuracy.</p> <p>This parameter is only valid for predictors\
              \ trained using AutoML.</p>"
        OptimizationMetric:
          allOf:
          - $ref: '#/components/schemas/OptimizationMetric'
          - description: The accuracy metric used to optimize the predictor.
      type: object
    GetAccuracyMetricsRequest:
      example:
        PredictorArn: ""
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor to get metrics
              for.
      required:
      - PredictorArn
      title: GetAccuracyMetricsRequest
      type: object
    ListDatasetGroupsResponse:
      example:
        DatasetGroups: ""
        NextToken: ""
      properties:
        DatasetGroups:
          allOf:
          - $ref: '#/components/schemas/DatasetGroups'
          - description: An array of objects that summarize each dataset group's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListDatasetGroupsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
      title: ListDatasetGroupsRequest
      type: object
    InvalidNextTokenException: {}
    ListDatasetImportJobsResponse:
      example:
        DatasetImportJobs: ""
        NextToken: ""
      properties:
        DatasetImportJobs:
          allOf:
          - $ref: '#/components/schemas/DatasetImportJobs'
          - description: An array of objects that summarize each dataset import job's
              properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListDatasetImportJobsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the datasets that match the statement from the list, respectively.\
              \ The match statement consists of a key and a value.</p> <p> <b>Filter\
              \ properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition\
              \ to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the datasets that match the statement, specify <code>IS</code>.\
              \ To exclude matching datasets, specify <code>IS_NOT</code>.</p> </li>\
              \ <li> <p> <code>Key</code> - The name of the parameter to filter on.\
              \ Valid values are <code>DatasetArn</code> and <code>Status</code>.</p>\
              \ </li> <li> <p> <code>Value</code> - The value to match.</p> </li>\
              \ </ul> <p>For example, to list all dataset import jobs whose status\
              \ is ACTIVE, you specify the following filter:</p> <p> <code>\"Filters\"\
              : [ { \"Condition\": \"IS\", \"Key\": \"Status\", \"Value\": \"ACTIVE\"\
              \ } ]</code> </p>"
      title: ListDatasetImportJobsRequest
      type: object
    ListDatasetsResponse:
      example:
        Datasets: ""
        NextToken: ""
      properties:
        Datasets:
          allOf:
          - $ref: '#/components/schemas/Datasets'
          - description: An array of objects that summarize each dataset's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListDatasetsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
      title: ListDatasetsRequest
      type: object
    ListExplainabilitiesResponse:
      example:
        NextToken: ""
        Explainabilities: ""
      properties:
        Explainabilities:
          allOf:
          - $ref: '#/components/schemas/Explainabilities'
          - description: An array of objects that summarize the properties of each
              Explainability resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns this token if the response is truncated. To retrieve\
              \ the next set of results, use the token in the next request."
      type: object
    ListExplainabilitiesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a NextToken. To retrieve the next set of results,\
              \ use the token in the next request. Tokens expire after 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items returned in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the resources that match the statement from the list. The match statement\
              \ consists of a key and a value.</p> <p> <b>Filter properties</b> </p>\
              \ <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid\
              \ values are <code>IS</code> and <code>IS_NOT</code>.</p> </li> <li>\
              \ <p> <code>Key</code> - The name of the parameter to filter on. Valid\
              \ values are <code>ResourceArn</code> and <code>Status</code>.</p> </li>\
              \ <li> <p> <code>Value</code> - The value to match.</p> </li> </ul>"
      title: ListExplainabilitiesRequest
      type: object
    ListExplainabilityExportsResponse:
      example:
        NextToken: ""
        ExplainabilityExports: ""
      properties:
        ExplainabilityExports:
          allOf:
          - $ref: '#/components/schemas/ExplainabilityExports'
          - description: An array of objects that summarize the properties of each
              Explainability export.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns this token if the response is truncated. To retrieve\
              \ the next set of results, use the token in the next request."
      type: object
    ListExplainabilityExportsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a NextToken. To retrieve the next set of results,\
              \ use the token in the next request. Tokens expire after 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ resources that match the statement from the list. The match statement\
              \ consists of a key and a value.</p> <p> <b>Filter properties</b> </p>\
              \ <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid\
              \ values are <code>IS</code> and <code>IS_NOT</code>.</p> </li> <li>\
              \ <p> <code>Key</code> - The name of the parameter to filter on. Valid\
              \ values are <code>ResourceArn</code> and <code>Status</code>.</p> </li>\
              \ <li> <p> <code>Value</code> - The value to match.</p> </li> </ul>"
      title: ListExplainabilityExportsRequest
      type: object
    ListForecastExportJobsResponse:
      example:
        NextToken: ""
        ForecastExportJobs: ""
      properties:
        ForecastExportJobs:
          allOf:
          - $ref: '#/components/schemas/ForecastExportJobs'
          - description: An array of objects that summarize each export job's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListForecastExportJobsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the forecast export jobs that match the statement from the list, respectively.\
              \ The match statement consists of a key and a value.</p> <p> <b>Filter\
              \ properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition\
              \ to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the forecast export jobs that match the statement, specify\
              \ <code>IS</code>. To exclude matching forecast export jobs, specify\
              \ <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name\
              \ of the parameter to filter on. Valid values are <code>ForecastArn</code>\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul> <p>For example, to list all jobs that\
              \ export a forecast named <i>electricityforecast</i>, specify the following\
              \ filter:</p> <p> <code>\"Filters\": [ { \"Condition\": \"IS\", \"Key\"\
              : \"ForecastArn\", \"Value\": \"arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityforecast\"\
              \ } ]</code> </p>"
      title: ListForecastExportJobsRequest
      type: object
    ListForecastsResponse:
      example:
        Forecasts: ""
        NextToken: ""
      properties:
        Forecasts:
          allOf:
          - $ref: '#/components/schemas/Forecasts'
          - description: An array of objects that summarize each forecast's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListForecastsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the forecasts that match the statement from the list, respectively.\
              \ The match statement consists of a key and a value.</p> <p> <b>Filter\
              \ properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition\
              \ to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the forecasts that match the statement, specify <code>IS</code>.\
              \ To exclude matching forecasts, specify <code>IS_NOT</code>.</p> </li>\
              \ <li> <p> <code>Key</code> - The name of the parameter to filter on.\
              \ Valid values are <code>DatasetGroupArn</code>, <code>PredictorArn</code>,\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul> <p>For example, to list all forecasts\
              \ whose status is not ACTIVE, you would specify:</p> <p> <code>\"Filters\"\
              : [ { \"Condition\": \"IS_NOT\", \"Key\": \"Status\", \"Value\": \"\
              ACTIVE\" } ]</code> </p>"
      title: ListForecastsRequest
      type: object
    ListMonitorEvaluationsResponse:
      example:
        NextToken: ""
        PredictorMonitorEvaluations: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request. Tokens expire after 24 hours."
        PredictorMonitorEvaluations:
          allOf:
          - $ref: '#/components/schemas/PredictorMonitorEvaluations'
          - description: <p>The monitoring results and predictor events collected
              by the monitor resource during different windows of time.</p> <p>For
              information about monitoring see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing
              Monitoring Results</a>. For more information about retrieving monitoring
              results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing
              Monitoring Results</a>.</p>
      type: object
    ListMonitorEvaluationsRequest:
      example:
        Filters: ""
        NextToken: ""
        MonitorArn: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of monitoring results to return.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource to
              get results from.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the resources that match the statement from the list. The match statement\
              \ consists of a key and a value.</p> <p> <b>Filter properties</b> </p>\
              \ <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid\
              \ values are <code>IS</code> and <code>IS_NOT</code>.</p> </li> <li>\
              \ <p> <code>Key</code> - The name of the parameter to filter on. The\
              \ only valid value is <code>EvaluationState</code>.</p> </li> <li> <p>\
              \ <code>Value</code> - The value to match. Valid values are only <code>SUCCESS</code>\
              \ or <code>FAILURE</code>.</p> </li> </ul> <p>For example, to list only\
              \ successful monitor evaluations, you would specify:</p> <p> <code>\"\
              Filters\": [ { \"Condition\": \"IS\", \"Key\": \"EvaluationState\",\
              \ \"Value\": \"SUCCESS\" } ]</code> </p>"
      required:
      - MonitorArn
      title: ListMonitorEvaluationsRequest
      type: object
    ListMonitorsResponse:
      example:
        NextToken: ""
        Monitors: ""
      properties:
        Monitors:
          allOf:
          - $ref: '#/components/schemas/Monitors'
          - description: An array of objects that summarize each monitor's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListMonitorsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of monitors to include in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the resources that match the statement from the list. The match statement\
              \ consists of a key and a value.</p> <p> <b>Filter properties</b> </p>\
              \ <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid\
              \ values are <code>IS</code> and <code>IS_NOT</code>.</p> </li> <li>\
              \ <p> <code>Key</code> - The name of the parameter to filter on. The\
              \ only valid value is <code>Status</code>.</p> </li> <li> <p> <code>Value</code>\
              \ - The value to match.</p> </li> </ul> <p>For example, to list all\
              \ monitors who's status is ACTIVE, you would specify:</p> <p> <code>\"\
              Filters\": [ { \"Condition\": \"IS\", \"Key\": \"Status\", \"Value\"\
              : \"ACTIVE\" } ]</code> </p>"
      title: ListMonitorsRequest
      type: object
    ListPredictorBacktestExportJobsResponse:
      example:
        PredictorBacktestExportJobs: ""
        NextToken: ""
      properties:
        PredictorBacktestExportJobs:
          allOf:
          - $ref: '#/components/schemas/PredictorBacktestExportJobs'
          - description: An array of objects that summarize the properties of each
              predictor backtest export job.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns this token if the response is truncated. To retrieve\
              \ the next set of results, use the token in the next request."
      type: object
    ListPredictorBacktestExportJobsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a NextToken. To retrieve the next set of results,\
              \ use the token in the next request. Tokens expire after 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the predictor backtest export jobs that match the statement from the\
              \ list. The match statement consists of a key and a value.</p> <p> <b>Filter\
              \ properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition\
              \ to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the predictor backtest export jobs that match the statement,\
              \ specify <code>IS</code>. To exclude matching predictor backtest export\
              \ jobs, specify <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code>\
              \ - The name of the parameter to filter on. Valid values are <code>PredictorArn</code>\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul>"
      title: ListPredictorBacktestExportJobsRequest
      type: object
    ListPredictorsResponse:
      example:
        NextToken: ""
        Predictors: ""
      properties:
        Predictors:
          allOf:
          - $ref: '#/components/schemas/Predictors'
          - description: An array of objects that summarize each predictor's properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Amazon Forecast returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ request."
      type: object
    ListPredictorsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the predictors that match the statement from the list, respectively.\
              \ The match statement consists of a key and a value.</p> <p> <b>Filter\
              \ properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition\
              \ to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the predictors that match the statement, specify <code>IS</code>.\
              \ To exclude matching predictors, specify <code>IS_NOT</code>.</p> </li>\
              \ <li> <p> <code>Key</code> - The name of the parameter to filter on.\
              \ Valid values are <code>DatasetGroupArn</code> and <code>Status</code>.</p>\
              \ </li> <li> <p> <code>Value</code> - The value to match.</p> </li>\
              \ </ul> <p>For example, to list all predictors whose status is ACTIVE,\
              \ you would specify:</p> <p> <code>\"Filters\": [ { \"Condition\": \"\
              IS\", \"Key\": \"Status\", \"Value\": \"ACTIVE\" } ]</code> </p>"
      title: ListPredictorsRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags for the resource.
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) that identifies the resource
              for which to list the tags. '
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListWhatIfAnalysesResponse:
      example:
        NextToken: ""
        WhatIfAnalyses: ""
      properties:
        WhatIfAnalyses:
          allOf:
          - $ref: '#/components/schemas/WhatIfAnalyses'
          - description: An array of <code>WhatIfAnalysisSummary</code> objects that
              describe the matched analyses.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Forecast returns this token.\
              \ To retrieve the next set of results, use the token in the next request."
      type: object
    ListWhatIfAnalysesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the what-if analysis jobs that match the statement from the list,\
              \ respectively. The match statement consists of a key and a value.</p>\
              \ <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code>\
              \ - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the what-if analysis jobs that match the statement, specify\
              \ <code>IS</code>. To exclude matching what-if analysis jobs, specify\
              \ <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name\
              \ of the parameter to filter on. Valid values are <code>WhatIfAnalysisArn</code>\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul> <p>For example, to list all jobs that\
              \ export a forecast named <i>electricityWhatIf</i>, specify the following\
              \ filter:</p> <p> <code>\"Filters\": [ { \"Condition\": \"IS\", \"Key\"\
              : \"WhatIfAnalysisArn\", \"Value\": \"arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWhatIf\"\
              \ } ]</code> </p>"
      title: ListWhatIfAnalysesRequest
      type: object
    ListWhatIfForecastExportsResponse:
      example:
        NextToken: ""
        WhatIfForecastExports: ""
      properties:
        WhatIfForecastExports:
          allOf:
          - $ref: '#/components/schemas/WhatIfForecastExports'
          - description: An array of <code>WhatIfForecastExports</code> objects that
              describe the matched forecast exports.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, Forecast returns this token.\
              \ To retrieve the next set of results, use the token in the next request."
      type: object
    ListWhatIfForecastExportsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next&#x2028; request. Tokens expire\
              \ after 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the what-if forecast export jobs that match the statement from the\
              \ list, respectively. The match statement consists of a key and a value.</p>\
              \ <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code>\
              \ - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the forecast export jobs that match the statement, specify\
              \ <code>IS</code>. To exclude matching forecast export jobs, specify\
              \ <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name\
              \ of the parameter to filter on. Valid values are <code>WhatIfForecastExportArn</code>\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul> <p>For example, to list all jobs that\
              \ export a forecast named <i>electricityWIFExport</i>, specify the following\
              \ filter:</p> <p> <code>\"Filters\": [ { \"Condition\": \"IS\", \"Key\"\
              : \"WhatIfForecastExportArn\", \"Value\": \"arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWIFExport\"\
              \ } ]</code> </p>"
      title: ListWhatIfForecastExportsRequest
      type: object
    ListWhatIfForecastsResponse:
      example:
        WhatIfForecasts: ""
        NextToken: ""
      properties:
        WhatIfForecasts:
          allOf:
          - $ref: '#/components/schemas/WhatIfForecasts'
          - description: An array of <code>WhatIfForecasts</code> objects that describe
              the matched forecasts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next&#x2028; request. Tokens expire\
              \ after 24 hours."
      type: object
    ListWhatIfForecastsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next&#x2028; request. Tokens expire\
              \ after 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An array of filters. For each filter, you provide a condition\
              \ and a match statement. The condition is either <code>IS</code> or\
              \ <code>IS_NOT</code>, which specifies whether to include or exclude\
              \ the what-if forecast export jobs that match the statement from the\
              \ list, respectively. The match statement consists of a key and a value.</p>\
              \ <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code>\
              \ - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>.\
              \ To include the forecast export jobs that match the statement, specify\
              \ <code>IS</code>. To exclude matching forecast export jobs, specify\
              \ <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name\
              \ of the parameter to filter on. Valid values are <code>WhatIfForecastArn</code>\
              \ and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The\
              \ value to match.</p> </li> </ul> <p>For example, to list all jobs that\
              \ export a forecast named <i>electricityWhatIfForecast</i>, specify\
              \ the following filter:</p> <p> <code>\"Filters\": [ { \"Condition\"\
              : \"IS\", \"Key\": \"WhatIfForecastArn\", \"Value\": \"arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWhatIfForecast\"\
              \ } ]</code> </p>"
      title: ListWhatIfForecastsRequest
      type: object
    ResumeResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource to
              resume.
      required:
      - ResourceArn
      title: ResumeResourceRequest
      type: object
    StopResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) that identifies the resource\
              \ to stop. The supported ARNs are <code>DatasetImportJobArn</code>,\
              \ <code>PredictorArn</code>, <code>PredictorBacktestExportJobArn</code>,\
              \ <code>ForecastArn</code>, <code>ForecastExportJobArn</code>, <code>ExplainabilityArn</code>,\
              \ and <code>ExplainabilityExportArn</code>. "
      required:
      - ResourceArn
      title: StopResourceRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) that identifies the resource
              for which to list the tags. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to add to the resource. A tag is an array of\
              \ key-value pairs.</p> <p>The following basic restrictions apply to\
              \ tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p>\
              \ </li> <li> <p>For each resource, each tag key must be unique, and\
              \ each tag key can have only one value.</p> </li> <li> <p>Maximum key\
              \ length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum\
              \ value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If\
              \ your tagging schema is used across multiple services and resources,\
              \ remember that other services may have restrictions on allowed characters.\
              \ Generally allowed characters are: letters, numbers, and spaces representable\
              \ in UTF-8, and the following characters: + - = . _ : / @.</p> </li>\
              \ <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do\
              \ not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase\
              \ combination of such as a prefix for keys as it is reserved for Amazon\
              \ Web Services use. You cannot edit or delete tag keys with this prefix.\
              \ Values can have this prefix. If a tag value has <code>aws</code> as\
              \ its prefix but the key does not, then Forecast considers it to be\
              \ a user tag and will count against the limit of 50 tags. Tags with\
              \ only the key prefix of <code>aws</code> do not count against your\
              \ tags per resource limit.</p> </li> </ul>"
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) that identifies the resource
              for which to list the tags. '
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: The keys of the tags to be removed.
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateDatasetGroupResponse:
      properties: {}
      type: object
    UpdateDatasetGroupRequest:
      example:
        DatasetArns: ""
        DatasetGroupArn: ""
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group.
        DatasetArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: An array of the Amazon Resource Names (ARNs) of the datasets
              to add to the dataset group.
      required:
      - DatasetArns
      - DatasetGroupArn
      title: UpdateDatasetGroupRequest
      type: object
    Name:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9_]*"
      type: string
    Operation:
      enum:
      - ADD
      - SUBTRACT
      - MULTIPLY
      - DIVIDE
      type: string
    Double:
      format: double
      type: number
    Action:
      description: "Defines the modifications that you are making to an attribute\
        \ for a what-if forecast. For example, you can use this operation to create\
        \ a what-if forecast that investigates a 10% off sale on all shoes. To do\
        \ this, you specify <code>\"AttributeName\": \"shoes\"</code>, <code>\"Operation\"\
        : \"MULTIPLY\"</code>, and <code>\"Value\": \"0.90\"</code>. Pair this operation\
        \ with the <a>TimeSeriesCondition</a> operation within the <a>CreateWhatIfForecastRequest$TimeSeriesTransformations</a>\
        \ operation to define a subset of attribute items that are modified."
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The related time series that you are modifying. This value
              is case insensitive.
        Operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          - description: <p>The operation that is applied to the provided attribute.
              Operations include:</p> <ul> <li> <p> <code>ADD</code> - adds <code>Value</code>
              to all rows of <code>AttributeName</code>.</p> </li> <li> <p> <code>SUBTRACT</code>
              - subtracts <code>Value</code> from all rows of <code>AttributeName</code>.</p>
              </li> <li> <p> <code>MULTIPLY</code> - multiplies all rows of <code>AttributeName</code>
              by <code>Value</code>.</p> </li> <li> <p> <code>DIVIDE</code> - divides
              all rows of <code>AttributeName</code> by <code>Value</code>.</p> </li>
              </ul>
        Value:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value that is applied for the chosen <code>Operation</code>.
      required:
      - AttributeName
      - Operation
      - Value
      type: object
    Configuration:
      additionalProperties:
        $ref: '#/components/schemas/Values'
      type: object
    AdditionalDataset:
      description: "<p>Describes an additional dataset. This object is part of the\
        \ <a>DataConfig</a> object. Forecast supports the Weather Index and Holidays\
        \ additional datasets.</p> <p> <b>Weather Index</b> </p> <p>The Amazon Forecast\
        \ Weather Index is a built-in dataset that incorporates historical and projected\
        \ weather information into your model. The Weather Index supplements your\
        \ datasets with over two years of historical weather data and up to 14 days\
        \ of projected weather data. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/weather.html\"\
        >Amazon Forecast Weather Index</a>.</p> <p> <b>Holidays</b> </p> <p>Holidays\
        \ is a built-in dataset that incorporates national holiday information into\
        \ your model. It provides native support for the holiday calendars of 66 countries.\
        \ To view the holiday calendars, refer to the <a href=\"http://jollyday.sourceforge.net/data.html\"\
        >Jollyday</a> library. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/holidays.html\"\
        >Holidays Featurization</a>.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name of the additional dataset. Valid names: <code>\"\
              holiday\"</code> and <code>\"weather\"</code>."
        Configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          - description: "<p> <b>Weather Index</b> </p> <p>To enable the Weather Index,\
              \ do not specify a value for <code>Configuration</code>.</p> <p> <b>Holidays</b>\
              \ </p> <p> <b>Holidays</b> </p> <p>To enable Holidays, set <code>CountryCode</code>\
              \ to one of the following two-letter country codes:</p> <ul> <li> <p>\"\
              AL\" - ALBANIA</p> </li> <li> <p>\"AR\" - ARGENTINA</p> </li> <li> <p>\"\
              AT\" - AUSTRIA</p> </li> <li> <p>\"AU\" - AUSTRALIA</p> </li> <li> <p>\"\
              BA\" - BOSNIA HERZEGOVINA</p> </li> <li> <p>\"BE\" - BELGIUM</p> </li>\
              \ <li> <p>\"BG\" - BULGARIA</p> </li> <li> <p>\"BO\" - BOLIVIA</p> </li>\
              \ <li> <p>\"BR\" - BRAZIL</p> </li> <li> <p>\"BY\" - BELARUS</p> </li>\
              \ <li> <p>\"CA\" - CANADA</p> </li> <li> <p>\"CL\" - CHILE</p> </li>\
              \ <li> <p>\"CO\" - COLOMBIA</p> </li> <li> <p>\"CR\" - COSTA RICA</p>\
              \ </li> <li> <p>\"HR\" - CROATIA</p> </li> <li> <p>\"CZ\" - CZECH REPUBLIC</p>\
              \ </li> <li> <p>\"DK\" - DENMARK</p> </li> <li> <p>\"EC\" - ECUADOR</p>\
              \ </li> <li> <p>\"EE\" - ESTONIA</p> </li> <li> <p>\"ET\" - ETHIOPIA</p>\
              \ </li> <li> <p>\"FI\" - FINLAND</p> </li> <li> <p>\"FR\" - FRANCE</p>\
              \ </li> <li> <p>\"DE\" - GERMANY</p> </li> <li> <p>\"GR\" - GREECE</p>\
              \ </li> <li> <p>\"HU\" - HUNGARY</p> </li> <li> <p>\"IS\" - ICELAND</p>\
              \ </li> <li> <p>\"IN\" - INDIA</p> </li> <li> <p>\"IE\" - IRELAND</p>\
              \ </li> <li> <p>\"IT\" - ITALY</p> </li> <li> <p>\"JP\" - JAPAN</p>\
              \ </li> <li> <p>\"KZ\" - KAZAKHSTAN</p> </li> <li> <p>\"KR\" - KOREA</p>\
              \ </li> <li> <p>\"LV\" - LATVIA</p> </li> <li> <p>\"LI\" - LIECHTENSTEIN</p>\
              \ </li> <li> <p>\"LT\" - LITHUANIA</p> </li> <li> <p>\"LU\" - LUXEMBOURG</p>\
              \ </li> <li> <p>\"MK\" - MACEDONIA</p> </li> <li> <p>\"MT\" - MALTA</p>\
              \ </li> <li> <p>\"MX\" - MEXICO</p> </li> <li> <p>\"MD\" - MOLDOVA</p>\
              \ </li> <li> <p>\"ME\" - MONTENEGRO</p> </li> <li> <p>\"NL\" - NETHERLANDS</p>\
              \ </li> <li> <p>\"NZ\" - NEW ZEALAND</p> </li> <li> <p>\"NI\" - NICARAGUA</p>\
              \ </li> <li> <p>\"NG\" - NIGERIA</p> </li> <li> <p>\"NO\" - NORWAY</p>\
              \ </li> <li> <p>\"PA\" - PANAMA</p> </li> <li> <p>\"PY\" - PARAGUAY</p>\
              \ </li> <li> <p>\"PE\" - PERU</p> </li> <li> <p>\"PL\" - POLAND</p>\
              \ </li> <li> <p>\"PT\" - PORTUGAL</p> </li> <li> <p>\"RO\" - ROMANIA</p>\
              \ </li> <li> <p>\"RU\" - RUSSIA</p> </li> <li> <p>\"RS\" - SERBIA</p>\
              \ </li> <li> <p>\"SK\" - SLOVAKIA</p> </li> <li> <p>\"SI\" - SLOVENIA</p>\
              \ </li> <li> <p>\"ZA\" - SOUTH AFRICA</p> </li> <li> <p>\"ES\" - SPAIN</p>\
              \ </li> <li> <p>\"SE\" - SWEDEN</p> </li> <li> <p>\"CH\" - SWITZERLAND</p>\
              \ </li> <li> <p>\"UA\" - UKRAINE</p> </li> <li> <p>\"AE\" - UNITED ARAB\
              \ EMIRATES</p> </li> <li> <p>\"US\" - UNITED STATES</p> </li> <li> <p>\"\
              UK\" - UNITED KINGDOM</p> </li> <li> <p>\"UY\" - URUGUAY</p> </li> <li>\
              \ <p>\"VE\" - VENEZUELA</p> </li> </ul>"
      required:
      - Name
      type: object
    AdditionalDatasets:
      items:
        $ref: '#/components/schemas/AdditionalDataset'
      maxItems: 2
      minItems: 1
      type: array
    Arn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):forecast:.*:.*:.+"
      type: string
    ArnList:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    Transformations:
      additionalProperties:
        $ref: '#/components/schemas/Value'
      maxProperties: 20
      minProperties: 1
      type: object
    AttributeConfig:
      description: "<p>Provides information about the method used to transform attributes.</p>\
        \ <p>The following is an example using the RETAIL domain:</p> <p> <code>{</code>\
        \ </p> <p> <code>\"AttributeName\": \"demand\",</code> </p> <p> <code>\"Transformations\"\
        : {\"aggregation\": \"sum\", \"middlefill\": \"zero\", \"backfill\": \"zero\"\
        }</code> </p> <p> <code>}</code> </p>"
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name of the attribute as specified in the schema. Amazon\
              \ Forecast supports the target field of the target time series and the\
              \ related time series datasets. For example, for the RETAIL domain,\
              \ the target is <code>demand</code>."
        Transformations:
          allOf:
          - $ref: '#/components/schemas/Transformations'
          - description: "<p>The method parameters (key-value pairs), which are a\
              \ map of override parameters. Specify these parameters to override the\
              \ default values. Related Time Series attributes do not accept aggregation\
              \ parameters.</p> <p>The following list shows the parameters and their\
              \ valid values for the \"filling\" featurization method for a <b>Target\
              \ Time Series</b> dataset. Default values are bolded.</p> <ul> <li>\
              \ <p> <code>aggregation</code>: <b>sum</b>, <code>avg</code>, <code>first</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>frontfill</code>:\
              \ <b>none</b> </p> </li> <li> <p> <code>middlefill</code>: <b>zero</b>,\
              \ <code>nan</code> (not a number), <code>value</code>, <code>median</code>,\
              \ <code>mean</code>, <code>min</code>, <code>max</code> </p> </li> <li>\
              \ <p> <code>backfill</code>: <b>zero</b>, <code>nan</code>, <code>value</code>,\
              \ <code>median</code>, <code>mean</code>, <code>min</code>, <code>max</code>\
              \ </p> </li> </ul> <p>The following list shows the parameters and their\
              \ valid values for a <b>Related Time Series</b> featurization method\
              \ (there are no defaults):</p> <ul> <li> <p> <code>middlefill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>backfill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>futurefill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> </ul> <p>To set a filling\
              \ method to a specific value, set the fill parameter to <code>value</code>\
              \ and define the value in a corresponding <code>_value</code> parameter.\
              \ For example, to set backfilling to a value of 2, include the following:\
              \ <code>\"backfill\": \"value\"</code> and <code>\"backfill_value\"\
              :\"2\"</code>. </p>"
      required:
      - AttributeName
      - Transformations
      type: object
    AttributeConfigs:
      items:
        $ref: '#/components/schemas/AttributeConfig'
      maxItems: 50
      minItems: 1
      type: array
    AttributeType:
      enum:
      - string
      - integer
      - float
      - timestamp
      - geolocation
      type: string
    AttributeValue:
      maxLength: 256
      pattern: .+
      type: string
    AutoMLOverrideStrategy:
      enum:
      - LatencyOptimized
      - AccuracyOptimized
      type: string
    PredictorBaseline:
      description: Metrics you can use as a baseline for comparison purposes. Use
        these metrics when you interpret monitoring results for an auto predictor.
      properties:
        BaselineMetrics:
          allOf:
          - $ref: '#/components/schemas/BaselineMetrics'
          - description: The initial <a href="https://docs.aws.amazon.com/forecast/latest/dg/metrics.html">accuracy
              metrics</a> for the predictor. Use these metrics as a baseline for comparison
              purposes as you use your predictor and the metrics change.
      type: object
    Baseline:
      description: Metrics you can use as a baseline for comparison purposes. Use
        these metrics when you interpret monitoring results for an auto predictor.
      properties:
        PredictorBaseline:
          $ref: '#/components/schemas/Baseline_PredictorBaseline'
      type: object
    BaselineMetric:
      description: An individual metric that you can use for comparison as you evaluate
        your monitoring results.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the metric.
        Value:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value for the metric.
      type: object
    BaselineMetrics:
      items:
        $ref: '#/components/schemas/BaselineMetric'
      type: array
    Boolean:
      type: boolean
    Values:
      items:
        $ref: '#/components/schemas/Value'
      maxItems: 20
      minItems: 1
      type: array
    CategoricalParameterRange:
      description: Specifies a categorical hyperparameter and it's range of tunable
        values. This object is part of the <a>ParameterRanges</a> object.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the categorical hyperparameter to tune.
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: A list of the tunable categories for the hyperparameter.
      required:
      - Name
      - Values
      type: object
    CategoricalParameterRanges:
      items:
        $ref: '#/components/schemas/CategoricalParameterRange'
      maxItems: 20
      minItems: 1
      type: array
    Condition:
      enum:
      - EQUALS
      - NOT_EQUALS
      - LESS_THAN
      - GREATER_THAN
      type: string
    ScalingType:
      enum:
      - Auto
      - Linear
      - Logarithmic
      - ReverseLogarithmic
      type: string
    ContinuousParameterRange:
      description: Specifies a continuous hyperparameter and it's range of tunable
        values. This object is part of the <a>ParameterRanges</a> object.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the hyperparameter to tune.
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The maximum tunable value of the hyperparameter.
        MinValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The minimum tunable value of the hyperparameter.
        ScalingType:
          allOf:
          - $ref: '#/components/schemas/ScalingType'
          - description: "<p>The scale that hyperparameter tuning uses to search the\
              \ hyperparameter range. Valid values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon\
              \ Forecast hyperparameter tuning chooses the best scale for the hyperparameter.</p>\
              \ </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values\
              \ in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt>\
              \ <dd> <p>Hyperparameter tuning searches the values in the hyperparameter\
              \ range by using a logarithmic scale.</p> <p>Logarithmic scaling works\
              \ only for ranges that have values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt>\
              \ <dd> <p>hyperparameter tuning searches the values in the hyperparameter\
              \ range by using a reverse logarithmic scale.</p> <p>Reverse logarithmic\
              \ scaling works only for ranges that are entirely within the range 0\
              \ &lt;= x &lt; 1.0.</p> </dd> </dl> <p>For information about choosing\
              \ a hyperparameter scale, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type\"\
              >Hyperparameter Scaling</a>. One of the following values:</p>"
      required:
      - MaxValue
      - MinValue
      - Name
      type: object
    ContinuousParameterRanges:
      items:
        $ref: '#/components/schemas/ContinuousParameterRange'
      maxItems: 20
      minItems: 1
      type: array
    Integer:
      type: integer
    ForecastTypes:
      items:
        $ref: '#/components/schemas/ForecastType'
      maxItems: 20
      minItems: 1
      type: array
    ForecastDimensions:
      items:
        $ref: '#/components/schemas/Name'
      maxItems: 10
      minItems: 1
      type: array
    Frequency:
      maxLength: 5
      minLength: 1
      pattern: ^Y|M|W|D|H|30min|15min|10min|5min|1min$
      type: string
    DataConfig:
      description: The data configuration for your dataset group and any additional
        datasets.
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group used to train the predictor.
        AttributeConfigs:
          allOf:
          - $ref: '#/components/schemas/AttributeConfigs'
          - description: Aggregation and filling options for attributes in your dataset
              group.
        AdditionalDatasets:
          allOf:
          - $ref: '#/components/schemas/AdditionalDatasets'
          - description: Additional built-in datasets like Holidays and the Weather
              Index.
      required:
      - DatasetGroupArn
      type: object
    EncryptionConfig:
      description: An Key Management Service (KMS) key and an Identity and Access
        Management (IAM) role that Amazon Forecast can assume to access the key. You
        can specify this optional object in the <a>CreateDataset</a> and <a>CreatePredictor</a>
        requests.
      example:
        KMSKeyArn: ""
        RoleArn: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the IAM role that Amazon Forecast can assume\
              \ to access the KMS key.</p> <p>Passing a role across Amazon Web Services\
              \ accounts is not allowed. If you pass a role that isn't in your account,\
              \ you get an <code>InvalidInputException</code> error.</p>"
        KMSKeyArn:
          allOf:
          - $ref: '#/components/schemas/KMSKeyArn'
          - description: The Amazon Resource Name (ARN) of the KMS key.
      required:
      - KMSKeyArn
      - RoleArn
      type: object
    OptimizationMetric:
      enum:
      - WAPE
      - RMSE
      - AverageWeightedQuantileLoss
      - MASE
      - MAPE
      type: string
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    MonitorConfig:
      description: The configuration details for the predictor monitor.
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the monitor resource.
      required:
      - MonitorName
      type: object
    TimeAlignmentBoundary:
      description: "<p>The time boundary Forecast uses to align and aggregate your\
        \ data to match your forecast frequency. Provide the unit of time and the\
        \ time boundary as a key value pair. If you don't provide a time boundary,\
        \ Forecast uses a set of <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#default-time-boundaries\"\
        >Default Time Boundaries</a>. </p> <p>For more information about aggregation,\
        \ see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html\"\
        >Data Aggregation for Different Forecast Frequencies</a>. For more information\
        \ setting a custom time boundary, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#specifying-time-boundary\"\
        >Specifying a Time Boundary</a>. </p>"
      properties:
        Month:
          allOf:
          - $ref: '#/components/schemas/Month'
          - description: The month to use for time alignment during aggregation. The
              month must be in uppercase.
        DayOfMonth:
          allOf:
          - $ref: '#/components/schemas/DayOfMonth'
          - description: The day of the month to use for time alignment during aggregation.
        DayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: The day of week to use for time alignment during aggregation.
              The day must be in uppercase.
        Hour:
          allOf:
          - $ref: '#/components/schemas/Hour'
          - description: The hour of day to use for time alignment during aggregation.
      type: object
    Domain:
      enum:
      - RETAIL
      - CUSTOM
      - INVENTORY_PLANNING
      - EC2_CAPACITY
      - WORK_FORCE
      - WEB_TRAFFIC
      - METRICS
      type: string
    DataSource:
      description: "The source of your data, an Identity and Access Management (IAM)\
        \ role that allows Amazon Forecast to access the data and, optionally, an\
        \ Key Management Service (KMS) key."
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
      properties:
        S3Config:
          $ref: '#/components/schemas/DataSource_S3Config'
      required:
      - S3Config
      type: object
    TimestampFormat:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\-\\:\\.\\,\\'\\s]+$"
      type: string
    TimeZone:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\/\\+\\-\\_]+$"
      type: string
    UseGeolocationForTimeZone:
      type: boolean
    GeolocationFormat:
      maxLength: 256
      pattern: "^[a-zA-Z0-9_]+$"
      type: string
    Format:
      maxLength: 7
      pattern: ^CSV|PARQUET$
      type: string
    ImportMode:
      enum:
      - FULL
      - INCREMENTAL
      type: string
    DatasetType:
      enum:
      - TARGET_TIME_SERIES
      - RELATED_TIME_SERIES
      - ITEM_METADATA
      type: string
    Schema:
      description: Defines the fields of a dataset.
      example:
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/SchemaAttributes'
          - description: An array of attributes specifying the name and type of each
              field in a dataset.
      type: object
    DataDestination:
      description: "The destination for an export job. Provide an S3 path, an Identity\
        \ and Access Management (IAM) role that allows Amazon Forecast to access the\
        \ location, and an Key Management Service (KMS) key (optional). "
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
      properties:
        S3Config:
          $ref: '#/components/schemas/DataDestination_S3Config'
      required:
      - S3Config
      type: object
    ExplainabilityConfig:
      description: "<p>The ExplainabilityConfig data type defines the number of time\
        \ series and time points included in <a>CreateExplainability</a>.</p> <p>If\
        \ you provide a predictor ARN for <code>ResourceArn</code>, you must set both\
        \ <code>TimePointGranularity</code> and <code>TimeSeriesGranularity</code>\
        \ to “ALL”. When creating Predictor Explainability, Amazon Forecast considers\
        \ all time series and time points.</p> <p>If you provide a forecast ARN for\
        \ <code>ResourceArn</code>, you can set <code>TimePointGranularity</code>\
        \ and <code>TimeSeriesGranularity</code> to either “ALL” or “Specific”.</p>"
      properties:
        TimeSeriesGranularity:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesGranularity'
          - description: "<p>To create an Explainability for all time series in your\
              \ datasets, use <code>ALL</code>. To create an Explainability for specific\
              \ time series in your datasets, use <code>SPECIFIC</code>.</p> <p>Specify\
              \ time series by uploading a CSV or Parquet file to an Amazon S3 bucket\
              \ and set the location within the <a>DataDestination</a> data type.</p>"
        TimePointGranularity:
          allOf:
          - $ref: '#/components/schemas/TimePointGranularity'
          - description: "<p>To create an Explainability for all time points in your\
              \ forecast horizon, use <code>ALL</code>. To create an Explainability\
              \ for specific time points in your forecast horizon, use <code>SPECIFIC</code>.</p>\
              \ <p>Specify time points with the <code>StartDateTime</code> and <code>EndDateTime</code>\
              \ parameters within the <a>CreateExplainability</a> operation.</p>"
      required:
      - TimePointGranularity
      - TimeSeriesGranularity
      type: object
    LocalDateTime:
      maxLength: 19
      pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
      type: string
    TimeSeriesSelector:
      description: <p>Defines the set of time series that are used to create the forecasts
        in a <code>TimeSeriesIdentifiers</code> object.</p> <p>The <code>TimeSeriesIdentifiers</code>
        object needs the following information:</p> <ul> <li> <p> <code>DataSource</code>
        </p> </li> <li> <p> <code>Format</code> </p> </li> <li> <p> <code>Schema</code>
        </p> </li> </ul>
      example:
        TimeSeriesIdentifiers:
          Format: ""
          Schema:
            Attributes: ""
          DataSource:
            S3Config:
              Path: ""
              KMSKeyArn: ""
              RoleArn: ""
      properties:
        TimeSeriesIdentifiers:
          $ref: '#/components/schemas/TimeSeriesSelector_TimeSeriesIdentifiers'
      type: object
    TrainingParameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 100
      minProperties: 0
      type: object
    EvaluationParameters:
      description: "Parameters that define how to split a dataset into training data\
        \ and testing data, and the number of iterations to perform. These parameters\
        \ are specified in the predefined algorithms but you can override them in\
        \ the <a>CreatePredictor</a> request."
      properties:
        NumberOfBacktestWindows:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of times to split the input data. The default
              is 1. Valid values are 1 through 5.
        BackTestWindowOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: <p>The point from the end of the dataset where you want to
              split the data for model training and testing (evaluation). Specify
              the value as the number of data points. The default is the value of
              the forecast horizon. <code>BackTestWindowOffset</code> can be used
              to mimic a past virtual forecast start date. This value must be greater
              than or equal to the forecast horizon and less than half of the TARGET_TIME_SERIES
              dataset length.</p> <p> <code>ForecastHorizon</code> &lt;= <code>BackTestWindowOffset</code>
              &lt; 1/2 * TARGET_TIME_SERIES dataset length</p>
      type: object
    HyperParameterTuningJobConfig:
      description: "<p>Configuration information for a hyperparameter tuning job.\
        \ You specify this object in the <a>CreatePredictor</a> request.</p> <p>A\
        \ <i>hyperparameter</i> is a parameter that governs the model training process.\
        \ You set hyperparameters before training starts, unlike model parameters,\
        \ which are determined during training. The values of the hyperparameters\
        \ effect which values are chosen for the model parameters.</p> <p>In a <i>hyperparameter\
        \ tuning job</i>, Amazon Forecast chooses the set of hyperparameter values\
        \ that optimize a specified metric. Forecast accomplishes this by running\
        \ many training jobs over a range of hyperparameter values. The optimum set\
        \ of values depends on the algorithm, the training data, and the specified\
        \ metric objective.</p>"
      properties:
        ParameterRanges:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig_ParameterRanges'
      type: object
    InputDataConfig:
      description: "<note> <p>This object belongs to the <a>CreatePredictor</a> operation.\
        \ If you created your predictor with <a>CreateAutoPredictor</a>, see <a>DataConfig</a>.</p>\
        \ </note> <p>The data used to train a predictor. The data includes a dataset\
        \ group and any supplementary features. You specify this object in the <a>CreatePredictor</a>\
        \ request.</p>"
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        SupplementaryFeatures:
          allOf:
          - $ref: '#/components/schemas/SupplementaryFeatures'
          - description: An array of supplementary features. The only supported feature
              is a holiday calendar.
      required:
      - DatasetGroupArn
      type: object
    FeaturizationConfig:
      description: "<note> <p>This object belongs to the <a>CreatePredictor</a> operation.\
        \ If you created your predictor with <a>CreateAutoPredictor</a>, see <a>AttributeConfig</a>.</p>\
        \ </note> <p>In a <a>CreatePredictor</a> operation, the specified algorithm\
        \ trains a model using the specified dataset group. You can optionally tell\
        \ the operation to modify data fields prior to training a model. These modifications\
        \ are referred to as <i>featurization</i>.</p> <p>You define featurization\
        \ using the <code>FeaturizationConfig</code> object. You specify an array\
        \ of transformations, one for each field that you want to featurize. You then\
        \ include the <code>FeaturizationConfig</code> object in your <code>CreatePredictor</code>\
        \ request. Amazon Forecast applies the featurization to the <code>TARGET_TIME_SERIES</code>\
        \ and <code>RELATED_TIME_SERIES</code> datasets before model training.</p>\
        \ <p>You can create multiple featurization configurations. For example, you\
        \ might call the <code>CreatePredictor</code> operation twice by specifying\
        \ different featurization configurations.</p>"
      properties:
        ForecastFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: "<p>The frequency of predictions in a forecast.</p> <p>Valid\
              \ intervals are an integer followed by Y (Year), M (Month), W (Week),\
              \ D (Day), H (Hour), and min (Minute). For example, \"1D\" indicates\
              \ every day and \"15min\" indicates every 15 minutes. You cannot specify\
              \ a value that would overlap with the next larger frequency. That means,\
              \ for example, you cannot specify a frequency of 60 minutes, because\
              \ that is equivalent to 1 hour. The valid values for each frequency\
              \ are the following:</p> <ul> <li> <p>Minute - 1-59</p> </li> <li> <p>Hour\
              \ - 1-23</p> </li> <li> <p>Day - 1-6</p> </li> <li> <p>Week - 1-4</p>\
              \ </li> <li> <p>Month - 1-11</p> </li> <li> <p>Year - 1</p> </li> </ul>\
              \ <p>Thus, if you want every other week forecasts, specify \"2W\". Or,\
              \ if you want quarterly forecasts, you specify \"3M\".</p> <p>The frequency\
              \ must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</p>\
              \ <p>When a RELATED_TIME_SERIES dataset is provided, the frequency must\
              \ be equal to the TARGET_TIME_SERIES dataset frequency.</p>"
        ForecastDimensions:
          allOf:
          - $ref: '#/components/schemas/ForecastDimensions'
          - description: "<p>An array of dimension (field) names that specify how\
              \ to group the generated forecast.</p> <p>For example, suppose that\
              \ you are generating a forecast for item sales across all of your stores,\
              \ and your dataset contains a <code>store_id</code> field. If you want\
              \ the sales forecast for each item by store, you would specify <code>store_id</code>\
              \ as the dimension.</p> <p>All forecast dimensions specified in the\
              \ <code>TARGET_TIME_SERIES</code> dataset don't need to be specified\
              \ in the <code>CreatePredictor</code> request. All forecast dimensions\
              \ specified in the <code>RELATED_TIME_SERIES</code> dataset must be\
              \ specified in the <code>CreatePredictor</code> request.</p>"
        Featurizations:
          allOf:
          - $ref: '#/components/schemas/Featurizations'
          - description: An array of featurization (transformation) information for
              the fields of a dataset.
      required:
      - ForecastFrequency
      type: object
    WhatIfForecastArnListForExport:
      items:
        $ref: '#/components/schemas/LongArn'
      maxItems: 50
      minItems: 1
      type: array
    LongArn:
      maxLength: 300
      pattern: "arn:([a-z\\d-]+):forecast:.*:.*:.+"
      type: string
    TimeSeriesTransformations:
      items:
        $ref: '#/components/schemas/TimeSeriesTransformation'
      maxItems: 30
      minItems: 0
      type: array
    TimeSeriesReplacementsDataSource:
      description: A replacement dataset is a modified version of the baseline related
        time series that contains only the values that you want to include in a what-if
        forecast. The replacement dataset must contain the forecast dimensions and
        item identifiers in the baseline related time series as well as at least 1
        changed time series. This dataset is merged with the baseline related time
        series to create a transformed dataset that is used for the what-if forecast.
      properties:
        S3Config:
          $ref: '#/components/schemas/S3Config'
        Schema:
          $ref: '#/components/schemas/Schema'
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the replacement data, CSV or PARQUET."
        TimestampFormat:
          allOf:
          - $ref: '#/components/schemas/TimestampFormat'
          - description: The timestamp format of the replacement data.
      required:
      - S3Config
      - Schema
      type: object
    S3Config:
      description: "The path to the file(s) in an Amazon Simple Storage Service (Amazon\
        \ S3) bucket, and an Identity and Access Management (IAM) role that Amazon\
        \ Forecast can assume to access the file(s). Optionally, includes an Key Management\
        \ Service (KMS) key. This object is part of the <a>DataSource</a> object that\
        \ is submitted in the <a>CreateDatasetImportJob</a> request, and part of the\
        \ <a>DataDestination</a> object."
      example:
        Path: ""
        KMSKeyArn: ""
        RoleArn: ""
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: The path to an Amazon Simple Storage Service (Amazon S3)
              bucket or file(s) in an Amazon S3 bucket.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the Identity and Access Management (IAM) role\
              \ that Amazon Forecast can assume to access the Amazon S3 bucket or\
              \ files. If you provide a value for the <code>KMSKeyArn</code> key,\
              \ the role must allow access to the key.</p> <p>Passing a role across\
              \ Amazon Web Services accounts is not allowed. If you pass a role that\
              \ isn't in your account, you get an <code>InvalidInputException</code>\
              \ error.</p>"
        KMSKeyArn:
          allOf:
          - $ref: '#/components/schemas/KMSKeyArn'
          - description: The Amazon Resource Name (ARN) of an Key Management Service
              (KMS) key.
      required:
      - Path
      - RoleArn
      type: object
    Timestamp:
      format: date-time
      type: string
    DatasetGroupSummary:
      description: "Provides a summary of the dataset group properties used in the\
        \ <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetGroups.html\"\
        >ListDatasetGroups</a> operation. To get the complete set of properties, call\
        \ the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> operation, and provide the <code>DatasetGroupArn</code>."
      properties:
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        DatasetGroupName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset group.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset group was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the dataset group was created or last updated from\
              \ a call to the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html\"\
              >UpdateDatasetGroup</a> operation. While the dataset group is being\
              \ updated, <code>LastModificationTime</code> is the current time of\
              \ the <code>ListDatasetGroups</code> call."
      type: object
    DatasetGroups:
      items:
        $ref: '#/components/schemas/DatasetGroupSummary'
      type: array
    Status:
      maxLength: 256
      type: string
    ErrorMessage:
      type: string
    DatasetImportJobSummary:
      description: "Provides a summary of the dataset import job properties used in\
        \ the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetImportJobs.html\"\
        >ListDatasetImportJobs</a> operation. To get the complete set of properties,\
        \ call the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a> operation, and provide the <code>DatasetImportJobArn</code>."
      properties:
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job.
        DatasetImportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset import job.
        DataSource:
          $ref: '#/components/schemas/DatasetImportJobSummary_DataSource'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the dataset import job. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>CREATE_STOPPING</code>,\
              \ <code>CREATE_STOPPED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset import job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
        ImportMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: "The import mode of the dataset import job, FULL or INCREMENTAL."
      type: object
    DatasetImportJobs:
      items:
        $ref: '#/components/schemas/DatasetImportJobSummary'
      type: array
    DatasetSummary:
      description: "Provides a summary of the dataset properties used in the <a href=\"\
        https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasets.html\">ListDatasets</a>\
        \ operation. To get the complete set of properties, call the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> operation, and provide the <code>DatasetArn</code>."
      properties:
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset.
        DatasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: The dataset type.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain associated with the dataset.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When you create a dataset, <code>LastModificationTime</code>\
              \ is the same as <code>CreationTime</code>. While data is being imported\
              \ to the dataset, <code>LastModificationTime</code> is the current time\
              \ of the <code>ListDatasets</code> call. After a <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html\"\
              >CreateDatasetImportJob</a> operation has finished, <code>LastModificationTime</code>\
              \ is when the import job completed or failed."
      type: object
    Datasets:
      items:
        $ref: '#/components/schemas/DatasetSummary'
      type: array
    DayOfMonth:
      maximum: 28
      minimum: 1
      type: integer
    DayOfWeek:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    ReferencePredictorSummary:
      description: Provides a summary of the reference predictor used when retraining
        or upgrading a predictor.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the reference predictor.
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Whether the reference predictor is <code>Active</code> or
              <code>Deleted</code>.
      type: object
    Long:
      type: integer
    Message:
      type: string
    ExplainabilityInfo:
      description: Provides information about the Explainability resource.
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the Explainability. States include: </p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
      type: object
    MonitorInfo:
      description: Provides information about the monitor resource.
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the monitor. States include:</p> <ul> <li>\
              \ <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>ACTIVE_STOPPING</code>,\
              \ <code>ACTIVE_STOPPED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code>\
              \ </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>,\
              \ <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>,\
              \ <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>\
              \ </ul>"
      type: object
    FieldStatistics:
      additionalProperties:
        $ref: '#/components/schemas/Statistics'
      type: object
    String:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\_]+$"
      type: string
    EvaluationState:
      maxLength: 256
      type: string
    PredictorExecutionDetails:
      description: "Contains details on the backtests performed to evaluate the accuracy\
        \ of the predictor. The tests are returned in descending order of accuracy,\
        \ with the most accurate backtest appearing first. You specify the number\
        \ of backtests to perform when you call the operation."
      properties:
        PredictorExecutions:
          allOf:
          - $ref: '#/components/schemas/PredictorExecutions'
          - description: An array of the backtests performed to evaluate the accuracy
              of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code>
              from the object determines the number of windows in the array.
      type: object
    LongArnList:
      items:
        $ref: '#/components/schemas/LongArn'
      type: array
    Detail:
      maxLength: 256
      type: string
    KMSKeyArn:
      maxLength: 256
      pattern: arn:aws:kms:.*:key/.*
      type: string
    ForecastType:
      maxLength: 4
      minLength: 2
      pattern: (^0?\.\d\d?$|^mean$)
      type: string
    ErrorMetric:
      description: ' Provides detailed error metrics to evaluate the performance of
        a predictor. This object is part of the <a>Metrics</a> object. '
      properties:
        ForecastType:
          allOf:
          - $ref: '#/components/schemas/ForecastType'
          - description: " The Forecast type used to compute WAPE, MAPE, MASE, and\
              \ RMSE. "
        WAPE:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: ' The weighted absolute percentage error (WAPE). '
        RMSE:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: ' The root-mean-square error (RMSE). '
        MASE:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The Mean Absolute Scaled Error (MASE)
        MAPE:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The Mean Absolute Percentage Error (MAPE)
      type: object
    ErrorMetrics:
      items:
        $ref: '#/components/schemas/ErrorMetric'
      type: array
    TestWindows:
      items:
        $ref: '#/components/schemas/WindowSummary'
      type: array
    EvaluationResult:
      description: The results of evaluating an algorithm. Returned as part of the
        <a>GetAccuracyMetrics</a> response.
      properties:
        AlgorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the algorithm that was
              evaluated.
        TestWindows:
          allOf:
          - $ref: '#/components/schemas/TestWindows'
          - description: The array of test windows used for evaluating the algorithm.
              The <code>NumberOfBacktestWindows</code> from the <a>EvaluationParameters</a>
              object determines the number of windows in the array.
      type: object
    EvaluationType:
      enum:
      - SUMMARY
      - COMPUTED
      type: string
    ExplainabilitySummary:
      description: "Provides a summary of the Explainability properties used in the\
        \ <a>ListExplainabilities</a> operation. To get a complete set of properties,\
        \ call the <a>DescribeExplainability</a> operation, and provide the listed\
        \ <code>ExplainabilityArn</code>."
      properties:
        ExplainabilityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability.
        ExplainabilityName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the Explainability.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Predictor or Forecast
              used to create the Explainability.
        ExplainabilityConfig:
          $ref: '#/components/schemas/CreateExplainabilityRequest_ExplainabilityConfig'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the Explainability. States include: </p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Information about any errors that may have occurred during
              the Explainability creation process.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the Explainability was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    Explainabilities:
      items:
        $ref: '#/components/schemas/ExplainabilitySummary'
      type: array
    TimeSeriesGranularity:
      enum:
      - ALL
      - SPECIFIC
      type: string
    TimePointGranularity:
      enum:
      - ALL
      - SPECIFIC
      type: string
    ExplainabilityExportSummary:
      description: "Provides a summary of the Explainability export properties used\
        \ in the <a>ListExplainabilityExports</a> operation. To get a complete set\
        \ of properties, call the <a>DescribeExplainabilityExport</a> operation, and\
        \ provide the <code>ExplainabilityExportArn</code>."
      properties:
        ExplainabilityExportArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Explainability export.
        ExplainabilityExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the Explainability export
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the Explainability export. States include:\
              \ </p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: Information about any errors that may have occurred during
              the Explainability export.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the Explainability was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    ExplainabilityExports:
      items:
        $ref: '#/components/schemas/ExplainabilityExportSummary'
      type: array
    FeaturizationPipeline:
      items:
        $ref: '#/components/schemas/FeaturizationMethod'
      maxItems: 1
      minItems: 1
      type: array
    Featurization:
      description: "<note> <p>This object belongs to the <a>CreatePredictor</a> operation.\
        \ If you created your predictor with <a>CreateAutoPredictor</a>, see <a>AttributeConfig</a>.</p>\
        \ </note> <p>Provides featurization (transformation) information for a dataset\
        \ field. This object is part of the <a>FeaturizationConfig</a> object.</p>\
        \ <p>For example:</p> <p> <code>{</code> </p> <p> <code>\"AttributeName\"\
        : \"demand\",</code> </p> <p> <code>FeaturizationPipeline [ {</code> </p>\
        \ <p> <code>\"FeaturizationMethodName\": \"filling\",</code> </p> <p> <code>\"\
        FeaturizationMethodParameters\": {\"aggregation\": \"avg\", \"backfill\":\
        \ \"nan\"}</code> </p> <p> <code>} ]</code> </p> <p> <code>}</code> </p>"
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name of the schema attribute that specifies the data\
              \ field to be featurized. Amazon Forecast supports the target field\
              \ of the <code>TARGET_TIME_SERIES</code> and the <code>RELATED_TIME_SERIES</code>\
              \ datasets. For example, for the <code>RETAIL</code> domain, the target\
              \ is <code>demand</code>, and for the <code>CUSTOM</code> domain, the\
              \ target is <code>target_value</code>. For more information, see <a>howitworks-missing-values</a>."
        FeaturizationPipeline:
          allOf:
          - $ref: '#/components/schemas/FeaturizationPipeline'
          - description: An array of one <code>FeaturizationMethod</code> object that
              specifies the feature transformation method.
      required:
      - AttributeName
      type: object
    Featurizations:
      items:
        $ref: '#/components/schemas/Featurization'
      maxItems: 50
      minItems: 1
      type: array
    FeaturizationMethodName:
      enum:
      - filling
      type: string
    FeaturizationMethodParameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 20
      minProperties: 1
      type: object
    FeaturizationMethod:
      description: "<p>Provides information about the method that featurizes (transforms)\
        \ a dataset field. The method is part of the <code>FeaturizationPipeline</code>\
        \ of the <a>Featurization</a> object. </p> <p>The following is an example\
        \ of how you specify a <code>FeaturizationMethod</code> object.</p> <p> <code>{</code>\
        \ </p> <p> <code>\"FeaturizationMethodName\": \"filling\",</code> </p> <p>\
        \ <code>\"FeaturizationMethodParameters\": {\"aggregation\": \"sum\", \"middlefill\"\
        : \"zero\", \"backfill\": \"zero\"}</code> </p> <p> <code>}</code> </p>"
      properties:
        FeaturizationMethodName:
          allOf:
          - $ref: '#/components/schemas/FeaturizationMethodName'
          - description: The name of the method. The "filling" method is the only
              supported method.
        FeaturizationMethodParameters:
          allOf:
          - $ref: '#/components/schemas/FeaturizationMethodParameters'
          - description: "<p>The method parameters (key-value pairs), which are a\
              \ map of override parameters. Specify these parameters to override the\
              \ default values. Related Time Series attributes do not accept aggregation\
              \ parameters.</p> <p>The following list shows the parameters and their\
              \ valid values for the \"filling\" featurization method for a <b>Target\
              \ Time Series</b> dataset. Bold signifies the default value.</p> <ul>\
              \ <li> <p> <code>aggregation</code>: <b>sum</b>, <code>avg</code>, <code>first</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>frontfill</code>:\
              \ <b>none</b> </p> </li> <li> <p> <code>middlefill</code>: <b>zero</b>,\
              \ <code>nan</code> (not a number), <code>value</code>, <code>median</code>,\
              \ <code>mean</code>, <code>min</code>, <code>max</code> </p> </li> <li>\
              \ <p> <code>backfill</code>: <b>zero</b>, <code>nan</code>, <code>value</code>,\
              \ <code>median</code>, <code>mean</code>, <code>min</code>, <code>max</code>\
              \ </p> </li> </ul> <p>The following list shows the parameters and their\
              \ valid values for a <b>Related Time Series</b> featurization method\
              \ (there are no defaults):</p> <ul> <li> <p> <code>middlefill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>backfill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>futurefill</code>:\
              \ <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>,\
              \ <code>min</code>, <code>max</code> </p> </li> </ul> <p>To set a filling\
              \ method to a specific value, set the fill parameter to <code>value</code>\
              \ and define the value in a corresponding <code>_value</code> parameter.\
              \ For example, to set backfilling to a value of 2, include the following:\
              \ <code>\"backfill\": \"value\"</code> and <code>\"backfill_value\"\
              :\"2\"</code>. </p>"
      required:
      - FeaturizationMethodName
      type: object
    ParameterValue:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\-\\_\\.\\/\\[\\]\\,\\\"\\\\\\s]+$"
      type: string
    Statistics:
      description: Provides statistics for each data field imported into to an Amazon
        Forecast dataset with the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html">CreateDatasetImportJob</a>
        operation.
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of values in the field. If the response value\
              \ is -1, refer to <code>CountLong</code>."
        CountDistinct:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of distinct values in the field. If the response\
              \ value is -1, refer to <code>CountDistinctLong</code>."
        CountNull:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of null values in the field. If the response\
              \ value is -1, refer to <code>CountNullLong</code>."
        CountNan:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of NAN (not a number) values in the field. If\
              \ the response value is -1, refer to <code>CountNanLong</code>."
        Min:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "For a numeric field, the minimum value in the field."
        Max:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "For a numeric field, the maximum value in the field."
        Avg:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "For a numeric field, the average value in the field."
        Stddev:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "For a numeric field, the standard deviation."
        CountLong:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of values in the field. <code>CountLong</code>\
              \ is used instead of <code>Count</code> if the value is greater than\
              \ 2,147,483,647."
        CountDistinctLong:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of distinct values in the field. <code>CountDistinctLong</code>\
              \ is used instead of <code>CountDistinct</code> if the value is greater\
              \ than 2,147,483,647."
        CountNullLong:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of null values in the field. <code>CountNullLong</code>\
              \ is used instead of <code>CountNull</code> if the value is greater\
              \ than 2,147,483,647."
        CountNanLong:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of NAN (not a number) values in the field. <code>CountNanLong</code>\
              \ is used instead of <code>CountNan</code> if the value is greater than\
              \ 2,147,483,647."
      type: object
    FilterConditionString:
      enum:
      - IS
      - IS_NOT
      type: string
    Filter:
      description: "Describes a filter for choosing a subset of objects. Each filter\
        \ consists of a condition and a match statement. The condition is either <code>IS</code>\
        \ or <code>IS_NOT</code>, which specifies whether to include or exclude the\
        \ objects that match the statement, respectively. The match statement consists\
        \ of a key and a value."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter to filter on.
        Value:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The value to match.
        Condition:
          allOf:
          - $ref: '#/components/schemas/FilterConditionString'
          - description: "The condition to apply. To include the objects that match\
              \ the statement, specify <code>IS</code>. To exclude matching objects,\
              \ specify <code>IS_NOT</code>."
      required:
      - Condition
      - Key
      - Value
      type: object
    Filters:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    ForecastExportJobSummary:
      description: "Provides a summary of the forecast export job properties used\
        \ in the <a>ListForecastExportJobs</a> operation. To get the complete set\
        \ of properties, call the <a>DescribeForecastExportJob</a> operation, and\
        \ provide the listed <code>ForecastExportJobArn</code>."
      properties:
        ForecastExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast export job.
        ForecastExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the forecast export job.
        Destination:
          $ref: '#/components/schemas/DescribeForecastExportJobResponse_Destination'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the forecast export job. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the forecast export job must be <code>ACTIVE</code> before you\
              \ can access the forecast in your S3 bucket.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the forecast export job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    ForecastExportJobs:
      items:
        $ref: '#/components/schemas/ForecastExportJobSummary'
      type: array
    ForecastSummary:
      description: "Provides a summary of the forecast properties used in the <a>ListForecasts</a>\
        \ operation. To get the complete set of properties, call the <a>DescribeForecast</a>\
        \ operation, and provide the <code>ForecastArn</code> that is listed in the\
        \ summary."
      properties:
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the forecast.
        ForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the forecast.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the predictor used to generate the forecast.
        CreatedUsingAutoPredictor:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the Forecast was created from an AutoPredictor.
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              provided the data used to train the predictor.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the forecast. States include:</p> <ul>\
              \ <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the forecast must be <code>ACTIVE</code> before you can query or\
              \ export the forecast.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the forecast creation task was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    Forecasts:
      items:
        $ref: '#/components/schemas/ForecastSummary'
      type: array
    PredictorEvaluationResults:
      items:
        $ref: '#/components/schemas/EvaluationResult'
      type: array
    Hour:
      maximum: 23
      minimum: 0
      type: integer
    ParameterRanges:
      description: "Specifies the categorical, continuous, and integer hyperparameters,\
        \ and their ranges of tunable values. The range of tunable values determines\
        \ which values that a hyperparameter tuning job can choose for the specified\
        \ hyperparameter. This object is part of the <a>HyperParameterTuningJobConfig</a>\
        \ object."
      properties:
        CategoricalParameterRanges:
          allOf:
          - $ref: '#/components/schemas/CategoricalParameterRanges'
          - description: Specifies the tunable range for each categorical hyperparameter.
        ContinuousParameterRanges:
          allOf:
          - $ref: '#/components/schemas/ContinuousParameterRanges'
          - description: Specifies the tunable range for each continuous hyperparameter.
        IntegerParameterRanges:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterRanges'
          - description: Specifies the tunable range for each integer hyperparameter.
      type: object
    SupplementaryFeatures:
      items:
        $ref: '#/components/schemas/SupplementaryFeature'
      maxItems: 2
      minItems: 1
      type: array
    IntegerParameterRange:
      description: Specifies an integer hyperparameter and it's range of tunable values.
        This object is part of the <a>ParameterRanges</a> object.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the hyperparameter to tune.
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum tunable value of the hyperparameter.
        MinValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The minimum tunable value of the hyperparameter.
        ScalingType:
          allOf:
          - $ref: '#/components/schemas/ScalingType'
          - description: "<p>The scale that hyperparameter tuning uses to search the\
              \ hyperparameter range. Valid values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon\
              \ Forecast hyperparameter tuning chooses the best scale for the hyperparameter.</p>\
              \ </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values\
              \ in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt>\
              \ <dd> <p>Hyperparameter tuning searches the values in the hyperparameter\
              \ range by using a logarithmic scale.</p> <p>Logarithmic scaling works\
              \ only for ranges that have values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt>\
              \ <dd> <p>Not supported for <code>IntegerParameterRange</code>.</p>\
              \ <p>Reverse logarithmic scaling works only for ranges that are entirely\
              \ within the range 0 &lt;= x &lt; 1.0.</p> </dd> </dl> <p>For information\
              \ about choosing a hyperparameter scale, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type\"\
              >Hyperparameter Scaling</a>. One of the following values:</p>"
      required:
      - MaxValue
      - MinValue
      - Name
      type: object
    IntegerParameterRanges:
      items:
        $ref: '#/components/schemas/IntegerParameterRange'
      maxItems: 20
      minItems: 1
      type: array
    NextToken:
      maxLength: 3000
      minLength: 1
      pattern: .+
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    PredictorMonitorEvaluations:
      items:
        $ref: '#/components/schemas/PredictorMonitorEvaluation'
      type: array
    Monitors:
      items:
        $ref: '#/components/schemas/MonitorSummary'
      type: array
    PredictorBacktestExportJobs:
      items:
        $ref: '#/components/schemas/PredictorBacktestExportJobSummary'
      type: array
    Predictors:
      items:
        $ref: '#/components/schemas/PredictorSummary'
      type: array
    WhatIfAnalyses:
      items:
        $ref: '#/components/schemas/WhatIfAnalysisSummary'
      type: array
    WhatIfForecastExports:
      items:
        $ref: '#/components/schemas/WhatIfForecastExportSummary'
      type: array
    WhatIfForecasts:
      items:
        $ref: '#/components/schemas/WhatIfForecastSummary'
      type: array
    MetricName:
      maxLength: 256
      type: string
    MetricResult:
      description: <p>An individual metric Forecast calculated when monitoring predictor
        usage. You can compare the value for this metric to the metric's value in
        the <a>Baseline</a> to see how your predictor's performance is changing.</p>
        <p>For more information about metrics generated by Forecast see <a href="https://docs.aws.amazon.com/forecast/latest/dg/metrics.html">Evaluating
        Predictor Accuracy</a> </p>
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the metric.
        MetricValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value for the metric.
      type: object
    MetricResults:
      items:
        $ref: '#/components/schemas/MetricResult'
      type: array
    WeightedQuantileLosses:
      items:
        $ref: '#/components/schemas/WeightedQuantileLoss'
      type: array
    Metrics:
      description: Provides metrics that are used to evaluate the performance of a
        predictor. This object is part of the <a>WindowSummary</a> object.
      properties:
        RMSE:
          allOf:
          - $ref: '#/components/schemas/Double'
          - deprecated: true
            description: "The root-mean-square error (RMSE).This property is deprecated,\
              \ please refer to ErrorMetrics for both RMSE and WAPE"
        WeightedQuantileLosses:
          allOf:
          - $ref: '#/components/schemas/WeightedQuantileLosses'
          - description: An array of weighted quantile losses. Quantiles divide a
              probability distribution into regions of equal probability. The distribution
              in this case is the loss function.
        ErrorMetrics:
          allOf:
          - $ref: '#/components/schemas/ErrorMetrics'
          - description: " Provides detailed error metrics for each forecast type.\
              \ Metrics include root-mean square-error (RMSE), mean absolute percentage\
              \ error (MAPE), mean absolute scaled error (MASE), and weighted average\
              \ percentage error (WAPE). "
        AverageWeightedQuantileLoss:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The average value of all weighted quantile losses.
      type: object
    MonitorDataSource:
      description: The source of the data the monitor used during the evaluation.
      properties:
        DatasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job
              used to import the data that initiated the monitor evaluation.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the forecast the monitor
              used during the evaluation.
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor resource
              you are monitoring.
      type: object
    MonitorSummary:
      description: "Provides a summary of the monitor properties used in the <a>ListMonitors</a>\
        \ operation. To get a complete set of properties, call the <a>DescribeMonitor</a>\
        \ operation, and provide the listed <code>MonitorArn</code>."
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource.
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the monitor resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor being monitored.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the monitor. States include:</p> <ul> <li>\
              \ <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>ACTIVE_STOPPING</code>,\
              \ <code>ACTIVE_STOPPED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code>\
              \ </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>,\
              \ <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>,\
              \ <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>\
              \ </ul>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the monitor resource was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the monitor resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>STOPPED</code> - When
              the resource stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the monitor creation finished or failed.</p> </li> </ul>
      type: object
    Month:
      enum:
      - JANUARY
      - FEBRUARY
      - MARCH
      - APRIL
      - MAY
      - JUNE
      - JULY
      - AUGUST
      - SEPTEMBER
      - OCTOBER
      - NOVEMBER
      - DECEMBER
      type: string
    ParameterKey:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\-\\_\\.\\/\\[\\]\\,\\\\]+$"
      type: string
    PredictorBacktestExportJobSummary:
      description: "Provides a summary of the predictor backtest export job properties\
        \ used in the <a>ListPredictorBacktestExportJobs</a> operation. To get a complete\
        \ set of properties, call the <a>DescribePredictorBacktestExportJob</a> operation,\
        \ and provide the listed <code>PredictorBacktestExportJobArn</code>."
      properties:
        PredictorBacktestExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the predictor backtest
              export job.
        PredictorBacktestExportJobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the predictor backtest export job.
        Destination:
          $ref: '#/components/schemas/DataDestination'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the predictor backtest export job. States\
              \ include: </p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p>\
              \ <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code>\
              \ </p> </li> <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: Information about any errors that may have occurred during
              the backtest export.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the predictor backtest export job was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    PredictorEvent:
      description: "Provides details about a predictor event, such as a retraining."
      properties:
        Detail:
          allOf:
          - $ref: '#/components/schemas/Detail'
          - description: "The type of event. For example, <code>Retrain</code>. A\
              \ retraining event denotes the timepoint when a predictor was retrained.\
              \ Any monitor results from before the <code>Datetime</code> are from\
              \ the previous predictor. Any new metrics are for the newly retrained\
              \ predictor."
        Datetime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp for when the event occurred.
      type: object
    TestWindowDetails:
      items:
        $ref: '#/components/schemas/TestWindowSummary'
      type: array
    PredictorExecution:
      description: The algorithm used to perform a backtest and the status of those
        tests.
      properties:
        AlgorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the algorithm used to test the predictor.
        TestWindows:
          allOf:
          - $ref: '#/components/schemas/TestWindowDetails'
          - description: An array of test windows used to evaluate the algorithm.
              The <code>NumberOfBacktestWindows</code> from the object determines
              the number of windows in the array.
      type: object
    PredictorExecutions:
      items:
        $ref: '#/components/schemas/PredictorExecution'
      maxItems: 5
      minItems: 1
      type: array
    PredictorMonitorEvaluation:
      description: Describes the results of a monitor evaluation.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource to monitor.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the monitor resource.
        EvaluationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The timestamp that indicates when the monitor evaluation
              was started. '
        EvaluationState:
          allOf:
          - $ref: '#/components/schemas/EvaluationState'
          - description: The status of the monitor evaluation. The state can be <code>SUCCESS</code>
              or <code>FAILURE</code>.
        WindowStartDatetime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp that indicates the start of the window that
              is used for monitor evaluation.
        WindowEndDatetime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp that indicates the end of the window that is
              used for monitor evaluation.
        PredictorEvent:
          $ref: '#/components/schemas/PredictorMonitorEvaluation_PredictorEvent'
        MonitorDataSource:
          $ref: '#/components/schemas/PredictorMonitorEvaluation_MonitorDataSource'
        MetricResults:
          allOf:
          - $ref: '#/components/schemas/MetricResults'
          - description: A list of metrics Forecast calculated when monitoring a predictor.
              You can compare the value for each metric in the list to the metric's
              value in the <a>Baseline</a> to see how your predictor's performance
              is changing.
        NumItemsEvaluated:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of items considered during the evaluation.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Information about any errors that may have occurred during
              the monitor evaluation.
      type: object
    PredictorSummary:
      description: "Provides a summary of the predictor properties that are used in\
        \ the <a>ListPredictors</a> operation. To get the complete set of properties,\
        \ call the <a>DescribePredictor</a> operation, and provide the listed <code>PredictorArn</code>."
      properties:
        PredictorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the predictor.
        PredictorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the predictor.
        DatasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              contains the data used to train the predictor.
        IsAutoPredictor:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether AutoPredictor was used to create the predictor.
        ReferencePredictorSummary:
          $ref: '#/components/schemas/PredictorSummary_ReferencePredictorSummary'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the predictor. States include:</p> <ul>\
              \ <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>CREATE_STOPPING</code>,\
              \ <code>CREATE_STOPPED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the predictor must be <code>ACTIVE</code> before you can use the\
              \ predictor to create a forecast.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the model training task was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    State:
      enum:
      - Active
      - Deleted
      type: string
    S3Path:
      maxLength: 4096
      minLength: 7
      pattern: "^s3://[a-z0-9].+$"
      type: string
    SchemaAttributes:
      items:
        $ref: '#/components/schemas/SchemaAttribute'
      maxItems: 100
      minItems: 1
      type: array
    SchemaAttribute:
      description: "An attribute of a schema, which defines a dataset field. A schema\
        \ attribute is required for every field in a dataset. The <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_Schema.html\"\
        >Schema</a> object contains an array of <code>SchemaAttribute</code> objects."
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset field.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/AttributeType'
          - description: "<p>The data type of the field.</p> <p>For a related time\
              \ series dataset, other than date, item_id, and forecast dimensions\
              \ attributes, all attributes should be of numerical type (integer/float).</p>"
      type: object
    Value:
      maxLength: 256
      pattern: "^[a-zA-Z0-9\\_\\-]+$"
      type: string
    SupplementaryFeature:
      description: "<note> <p>This object belongs to the <a>CreatePredictor</a> operation.\
        \ If you created your predictor with <a>CreateAutoPredictor</a>, see <a>AdditionalDataset</a>.</p>\
        \ </note> <p>Describes a supplementary feature of a dataset group. This object\
        \ is part of the <a>InputDataConfig</a> object. Forecast supports the Weather\
        \ Index and Holidays built-in featurizations.</p> <p> <b>Weather Index</b>\
        \ </p> <p>The Amazon Forecast Weather Index is a built-in featurization that\
        \ incorporates historical and projected weather information into your model.\
        \ The Weather Index supplements your datasets with over two years of historical\
        \ weather data and up to 14 days of projected weather data. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/weather.html\"\
        >Amazon Forecast Weather Index</a>.</p> <p> <b>Holidays</b> </p> <p>Holidays\
        \ is a built-in featurization that incorporates a feature-engineered dataset\
        \ of national holiday information into your model. It provides native support\
        \ for the holiday calendars of 66 countries. To view the holiday calendars,\
        \ refer to the <a href=\"http://jollyday.sourceforge.net/data.html\">Jollyday</a>\
        \ library. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/holidays.html\"\
        >Holidays Featurization</a>.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name of the feature. Valid values: <code>\"holiday\"\
              </code> and <code>\"weather\"</code>."
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          - description: "<p> <b>Weather Index</b> </p> <p>To enable the Weather Index,\
              \ set the value to <code>\"true\"</code> </p> <p> <b>Holidays</b> </p>\
              \ <p>To enable Holidays, specify a country with one of the following\
              \ two-letter country codes:</p> <ul> <li> <p>\"AL\" - ALBANIA</p> </li>\
              \ <li> <p>\"AR\" - ARGENTINA</p> </li> <li> <p>\"AT\" - AUSTRIA</p>\
              \ </li> <li> <p>\"AU\" - AUSTRALIA</p> </li> <li> <p>\"BA\" - BOSNIA\
              \ HERZEGOVINA</p> </li> <li> <p>\"BE\" - BELGIUM</p> </li> <li> <p>\"\
              BG\" - BULGARIA</p> </li> <li> <p>\"BO\" - BOLIVIA</p> </li> <li> <p>\"\
              BR\" - BRAZIL</p> </li> <li> <p>\"BY\" - BELARUS</p> </li> <li> <p>\"\
              CA\" - CANADA</p> </li> <li> <p>\"CL\" - CHILE</p> </li> <li> <p>\"\
              CO\" - COLOMBIA</p> </li> <li> <p>\"CR\" - COSTA RICA</p> </li> <li>\
              \ <p>\"HR\" - CROATIA</p> </li> <li> <p>\"CZ\" - CZECH REPUBLIC</p>\
              \ </li> <li> <p>\"DK\" - DENMARK</p> </li> <li> <p>\"EC\" - ECUADOR</p>\
              \ </li> <li> <p>\"EE\" - ESTONIA</p> </li> <li> <p>\"ET\" - ETHIOPIA</p>\
              \ </li> <li> <p>\"FI\" - FINLAND</p> </li> <li> <p>\"FR\" - FRANCE</p>\
              \ </li> <li> <p>\"DE\" - GERMANY</p> </li> <li> <p>\"GR\" - GREECE</p>\
              \ </li> <li> <p>\"HU\" - HUNGARY</p> </li> <li> <p>\"IS\" - ICELAND</p>\
              \ </li> <li> <p>\"IN\" - INDIA</p> </li> <li> <p>\"IE\" - IRELAND</p>\
              \ </li> <li> <p>\"IT\" - ITALY</p> </li> <li> <p>\"JP\" - JAPAN</p>\
              \ </li> <li> <p>\"KZ\" - KAZAKHSTAN</p> </li> <li> <p>\"KR\" - KOREA</p>\
              \ </li> <li> <p>\"LV\" - LATVIA</p> </li> <li> <p>\"LI\" - LIECHTENSTEIN</p>\
              \ </li> <li> <p>\"LT\" - LITHUANIA</p> </li> <li> <p>\"LU\" - LUXEMBOURG</p>\
              \ </li> <li> <p>\"MK\" - MACEDONIA</p> </li> <li> <p>\"MT\" - MALTA</p>\
              \ </li> <li> <p>\"MX\" - MEXICO</p> </li> <li> <p>\"MD\" - MOLDOVA</p>\
              \ </li> <li> <p>\"ME\" - MONTENEGRO</p> </li> <li> <p>\"NL\" - NETHERLANDS</p>\
              \ </li> <li> <p>\"NZ\" - NEW ZEALAND</p> </li> <li> <p>\"NI\" - NICARAGUA</p>\
              \ </li> <li> <p>\"NG\" - NIGERIA</p> </li> <li> <p>\"NO\" - NORWAY</p>\
              \ </li> <li> <p>\"PA\" - PANAMA</p> </li> <li> <p>\"PY\" - PARAGUAY</p>\
              \ </li> <li> <p>\"PE\" - PERU</p> </li> <li> <p>\"PL\" - POLAND</p>\
              \ </li> <li> <p>\"PT\" - PORTUGAL</p> </li> <li> <p>\"RO\" - ROMANIA</p>\
              \ </li> <li> <p>\"RU\" - RUSSIA</p> </li> <li> <p>\"RS\" - SERBIA</p>\
              \ </li> <li> <p>\"SK\" - SLOVAKIA</p> </li> <li> <p>\"SI\" - SLOVENIA</p>\
              \ </li> <li> <p>\"ZA\" - SOUTH AFRICA</p> </li> <li> <p>\"ES\" - SPAIN</p>\
              \ </li> <li> <p>\"SE\" - SWEDEN</p> </li> <li> <p>\"CH\" - SWITZERLAND</p>\
              \ </li> <li> <p>\"UA\" - UKRAINE</p> </li> <li> <p>\"AE\" - UNITED ARAB\
              \ EMIRATES</p> </li> <li> <p>\"US\" - UNITED STATES</p> </li> <li> <p>\"\
              UK\" - UNITED KINGDOM</p> </li> <li> <p>\"UY\" - URUGUAY</p> </li> <li>\
              \ <p>\"VE\" - VENEZUELA</p> </li> </ul>"
      required:
      - Name
      - Value
      type: object
    TagKey:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagValue:
      format: password
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: "<p>The optional metadata that you apply to a resource to help\
        \ you categorize and organize them. Each tag consists of a key and an optional\
        \ value, both of which you define.</p> <p>The following basic restrictions\
        \ apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p>\
        \ </li> <li> <p>For each resource, each tag key must be unique, and each tag\
        \ key can have only one value.</p> </li> <li> <p>Maximum key length - 128\
        \ Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256\
        \ Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is\
        \ used across multiple services and resources, remember that other services\
        \ may have restrictions on allowed characters. Generally allowed characters\
        \ are: letters, numbers, and spaces representable in UTF-8, and the following\
        \ characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case\
        \ sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>,\
        \ or any upper or lowercase combination of such as a prefix for keys as it\
        \ is reserved for Amazon Web Services use. You cannot edit or delete tag keys\
        \ with this prefix. Values can have this prefix. If a tag value has <code>aws</code>\
        \ as its prefix but the key does not, then Forecast considers it to be a user\
        \ tag and will count against the limit of 50 tags. Tags with only the key\
        \ prefix of <code>aws</code> do not count against your tags per resource limit.</p>\
        \ </li> </ul>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that makes up a tag. A <code>key</code>
              is a general label that acts like a category for more specific tag values.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The optional part of a key-value pair that makes up a tag.
              A <code>value</code> acts as a descriptor within a tag category (key).
      required:
      - Key
      - Value
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TestWindowSummary:
      description: "The status, start time, and end time of a backtest, as well as\
        \ a failure reason if applicable."
      properties:
        TestWindowStart:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the test began.
        TestWindowEnd:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the test ended.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the test. Possible status values are:</p>
              <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              </p> </li> <li> <p> <code>CREATE_FAILED</code> </p> </li> </ul>
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If the test failed, the reason why it failed."
      type: object
    WindowSummary:
      description: <p>The metrics for a time range within the evaluation portion of
        a dataset. This object is part of the <a>EvaluationResult</a> object.</p>
        <p>The <code>TestWindowStart</code> and <code>TestWindowEnd</code> parameters
        are determined by the <code>BackTestWindowOffset</code> parameter of the <a>EvaluationParameters</a>
        object.</p>
      properties:
        TestWindowStart:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp that defines the start of the window.
        TestWindowEnd:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp that defines the end of the window.
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of data points within the window.
        EvaluationType:
          allOf:
          - $ref: '#/components/schemas/EvaluationType'
          - description: <p>The type of evaluation.</p> <ul> <li> <p> <code>SUMMARY</code>
              - The average metrics across all windows.</p> </li> <li> <p> <code>COMPUTED</code>
              - The metrics for the specified window.</p> </li> </ul>
        Metrics:
          $ref: '#/components/schemas/WindowSummary_Metrics'
      type: object
    TimeSeriesCondition:
      description: "Creates a subset of items within an attribute that are modified.\
        \ For example, you can use this operation to create a subset of items that\
        \ cost $5 or less. To do this, you specify <code>\"AttributeName\": \"price\"\
        </code>, <code>\"AttributeValue\": \"5\"</code>, and <code>\"Condition\":\
        \ \"LESS_THAN\"</code>. Pair this operation with the <a>Action</a> operation\
        \ within the <a>CreateWhatIfForecastRequest$TimeSeriesTransformations</a>\
        \ operation to define how the attribute is modified."
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The item_id, dimension name, IM name, or timestamp that\
              \ you are modifying."
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/AttributeValue'
          - description: The value that is applied for the chosen <code>Condition</code>.
        Condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: "The condition to apply. Valid values are <code>EQUALS</code>,\
              \ <code>NOT_EQUALS</code>, <code>LESS_THAN</code> and <code>GREATER_THAN</code>."
      required:
      - AttributeName
      - AttributeValue
      - Condition
      type: object
    TimeSeriesConditions:
      items:
        $ref: '#/components/schemas/TimeSeriesCondition'
      maxItems: 10
      minItems: 0
      type: array
    TimeSeriesIdentifiers:
      description: Details about the import file that contains the time series for
        which you want to create forecasts.
      properties:
        DataSource:
          $ref: '#/components/schemas/DataSource'
        Schema:
          $ref: '#/components/schemas/Schema'
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the data, either CSV or PARQUET."
      type: object
    TimeSeriesTransformation:
      description: "A transformation function is a pair of operations that select\
        \ and modify the rows in a related time series. You select the rows that you\
        \ want with a condition operation and you modify the rows with a transformation\
        \ operation. All conditions are joined with an AND operation, meaning that\
        \ all conditions must be true for the transformation to be applied. Transformations\
        \ are applied in the order that they are listed."
      properties:
        Action:
          $ref: '#/components/schemas/TimeSeriesTransformation_Action'
        TimeSeriesConditions:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesConditions'
          - description: An array of conditions that define which members of the related
              time series are transformed.
      type: object
    WeightedQuantileLoss:
      description: The weighted loss value for a quantile. This object is part of
        the <a>Metrics</a> object.
      properties:
        Quantile:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "The quantile. Quantiles divide a probability distribution\
              \ into regions of equal probability. For example, if the distribution\
              \ was divided into 5 regions of equal probability, the quantiles would\
              \ be 0.2, 0.4, 0.6, and 0.8."
        LossValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "The difference between the predicted value and the actual\
              \ value over the quantile, weighted (normalized) by dividing by the\
              \ sum over all quantiles."
      type: object
    WhatIfAnalysisSummary:
      description: "Provides a summary of the what-if analysis properties used in\
        \ the <a>ListWhatIfAnalyses</a> operation. To get the complete set of properties,\
        \ call the <a>DescribeWhatIfAnalysis</a> operation, and provide the <code>WhatIfAnalysisArn</code>\
        \ that is listed in the summary."
      properties:
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis.
        WhatIfAnalysisName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if analysis.
        ForecastArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the baseline forecast that
              is being used in this what-if analysis.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the what-if analysis. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if analysis must be <code>ACTIVE</code> before you can\
              \ access the analysis.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if analysis was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    WhatIfForecastExportSummary:
      description: "Provides a summary of the what-if forecast export properties used\
        \ in the <a>ListWhatIfForecastExports</a> operation. To get the complete set\
        \ of properties, call the <a>DescribeWhatIfForecastExport</a> operation, and\
        \ provide the <code>WhatIfForecastExportArn</code> that is listed in the summary."
      properties:
        WhatIfForecastExportArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast export.
        WhatIfForecastArns:
          allOf:
          - $ref: '#/components/schemas/WhatIfForecastArnListForExport'
          - description: An array of Amazon Resource Names (ARNs) that define the
              what-if forecasts included in the export.
        WhatIfForecastExportName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The what-if forecast export name.
        Destination:
          $ref: '#/components/schemas/DescribeForecastExportJobResponse_Destination'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the what-if forecast export. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if analysis must be <code>ACTIVE</code> before you can\
              \ access the analysis.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if forecast export was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    WhatIfForecastSummary:
      description: "Provides a summary of the what-if forecast properties used in\
        \ the <a>ListWhatIfForecasts</a> operation. To get the complete set of properties,\
        \ call the <a>DescribeWhatIfForecast</a> operation, and provide the <code>WhatIfForecastArn</code>\
        \ that is listed in the summary."
      properties:
        WhatIfForecastArn:
          allOf:
          - $ref: '#/components/schemas/LongArn'
          - description: The Amazon Resource Name (ARN) of the what-if forecast.
        WhatIfForecastName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the what-if forecast.
        WhatIfAnalysisArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the what-if analysis that
              contains this what-if forecast.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "<p>The status of the what-if forecast. States include:</p>\
              \ <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>,\
              \ <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>\
              \ <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>\
              \ </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,\
              \ <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code>\
              \ of the what-if analysis must be <code>ACTIVE</code> before you can\
              \ access the analysis.</p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If an error occurred, an informational message about the\
              \ error."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the what-if forecast was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The last time the resource was modified. The timestamp
              depends on the status of the job:</p> <ul> <li> <p> <code>CREATE_PENDING</code>
              - The <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPING</code>
              - The current timestamp.</p> </li> <li> <p> <code>CREATE_STOPPED</code>
              - When the job stopped.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code>
              - When the job finished or failed.</p> </li> </ul>
      type: object
    CreateAutoPredictorRequest_DataConfig:
      allOf:
      - $ref: '#/components/schemas/DataConfig'
      - description: The data configuration for your dataset group and any additional
          datasets.
      example:
        DatasetGroupArn: ""
        AdditionalDatasets: ""
        AttributeConfigs: ""
    CreateAutoPredictorRequest_MonitorConfig:
      allOf:
      - $ref: '#/components/schemas/MonitorConfig'
      - description: "<p>The configuration details for predictor monitoring. Provide\
          \ a name for the monitor resource to enable predictor monitoring.</p> <p>Predictor\
          \ monitoring allows you to see how your predictor's performance changes\
          \ over time. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring.html\"\
          >Predictor Monitoring</a>.</p>"
      example:
        MonitorName: ""
    CreateAutoPredictorRequest_TimeAlignmentBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeAlignmentBoundary'
      - description: "The time boundary Forecast uses to align and aggregate any data\
          \ that doesn't align with your forecast frequency. Provide the unit of time\
          \ and the time boundary as a key value pair. For more information on specifying\
          \ a time boundary, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#specifying-time-boundary\"\
          >Specifying a Time Boundary</a>. If you don't provide a time boundary, Forecast\
          \ uses a set of <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#default-time-boundaries\"\
          >Default Time Boundaries</a>."
      example:
        Month: ""
        DayOfWeek: ""
        Hour: ""
        DayOfMonth: ""
    CreateDatasetRequest_Schema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - description: "The schema for the dataset. The schema attributes and their\
          \ order must match the fields in your data. The dataset <code>Domain</code>\
          \ and <code>DatasetType</code> that you choose determine the minimum required\
          \ fields in your training data. For information about the required fields\
          \ for a specific dataset domain and type, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/howitworks-domains-ds-types.html\"\
          >Dataset Domains and Dataset Types</a>."
      example:
        Attributes: ""
    CreateDatasetRequest_EncryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: An Key Management Service (KMS) key and the Identity and Access
          Management (IAM) role that Amazon Forecast can assume to access the key.
      example:
        KMSKeyArn: ""
        RoleArn: ""
    CreateDatasetImportJobRequest_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: "<p>The location of the training data to import and an Identity\
          \ and Access Management (IAM) role that Amazon Forecast can assume to access\
          \ the data. The training data must be stored in an Amazon S3 bucket.</p>\
          \ <p>If encryption is used, <code>DataSource</code> must include an Key\
          \ Management Service (KMS) key and the IAM role must allow Amazon Forecast\
          \ permission to access the key. The KMS key and IAM role must match those\
          \ specified in the <code>EncryptionConfig</code> parameter of the <a href=\"\
          https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\"\
          >CreateDataset</a> operation.</p>"
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
    CreateExplainabilityRequest_ExplainabilityConfig:
      allOf:
      - $ref: '#/components/schemas/ExplainabilityConfig'
      - description: The configuration settings that define the granularity of time
          series and time points for the Explainability.
      example:
        TimeSeriesGranularity: ""
        TimePointGranularity: ""
    CreateForecastRequest_TimeSeriesSelector:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesSelector'
      - description: <p>Defines the set of time series that are used to create the
          forecasts in a <code>TimeSeriesIdentifiers</code> object.</p> <p>The <code>TimeSeriesIdentifiers</code>
          object needs the following information:</p> <ul> <li> <p> <code>DataSource</code>
          </p> </li> <li> <p> <code>Format</code> </p> </li> <li> <p> <code>Schema</code>
          </p> </li> </ul>
      example:
        TimeSeriesIdentifiers:
          Format: ""
          Schema:
            Attributes: ""
          DataSource:
            S3Config:
              Path: ""
              KMSKeyArn: ""
              RoleArn: ""
    CreateForecastExportJobRequest_Destination:
      allOf:
      - $ref: '#/components/schemas/DataDestination'
      - description: "<p>The location where you want to save the forecast and an Identity\
          \ and Access Management (IAM) role that Amazon Forecast can assume to access\
          \ the location. The forecast must be exported to an Amazon S3 bucket.</p>\
          \ <p>If encryption is used, <code>Destination</code> must include an Key\
          \ Management Service (KMS) key. The IAM role must allow Amazon Forecast\
          \ permission to access the key.</p>"
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
    CreatePredictorRequest_EvaluationParameters:
      allOf:
      - $ref: '#/components/schemas/EvaluationParameters'
      - description: Used to override the default evaluation parameters of the specified
          algorithm. Amazon Forecast evaluates a predictor by splitting a dataset
          into training data and testing data. The evaluation parameters define how
          to perform the split and the number of iterations.
      example:
        NumberOfBacktestWindows: ""
        BackTestWindowOffset: ""
    CreatePredictorRequest_HPOConfig:
      allOf:
      - $ref: '#/components/schemas/HyperParameterTuningJobConfig'
      - description: "<p>Provides hyperparameter override values for the algorithm.\
          \ If you don't provide this parameter, Amazon Forecast uses default values.\
          \ The individual algorithms specify which hyperparameters support hyperparameter\
          \ optimization (HPO). For more information, see <a>aws-forecast-choosing-recipes</a>.</p>\
          \ <p>If you included the <code>HPOConfig</code> object, you must set <code>PerformHPO</code>\
          \ to true.</p>"
      example:
        ParameterRanges:
          CategoricalParameterRanges: ""
          IntegerParameterRanges: ""
          ContinuousParameterRanges: ""
    CreatePredictorRequest_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: Describes the dataset group that contains the data to use to
          train the predictor.
      example:
        DatasetGroupArn: ""
        SupplementaryFeatures: ""
    CreatePredictorRequest_FeaturizationConfig:
      allOf:
      - $ref: '#/components/schemas/FeaturizationConfig'
      - description: The featurization configuration.
      example:
        Featurizations: ""
        ForecastDimensions: ""
        ForecastFrequency: ""
    CreateWhatIfAnalysisRequest_TimeSeriesSelector:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesSelector'
      - description: <p>Defines the set of time series that are used in the what-if
          analysis with a <code>TimeSeriesIdentifiers</code> object. What-if analyses
          are performed only for the time series in this object.</p> <p>The <code>TimeSeriesIdentifiers</code>
          object needs the following information:</p> <ul> <li> <p> <code>DataSource</code>
          </p> </li> <li> <p> <code>Format</code> </p> </li> <li> <p> <code>Schema</code>
          </p> </li> </ul>
      example:
        TimeSeriesIdentifiers:
          Format: ""
          Schema:
            Attributes: ""
          DataSource:
            S3Config:
              Path: ""
              KMSKeyArn: ""
              RoleArn: ""
    CreateWhatIfForecastRequest_TimeSeriesReplacementsDataSource:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesReplacementsDataSource'
      - description: "<p>The replacement time series dataset, which contains the rows\
          \ that you want to change in the related time series dataset. A replacement\
          \ time series does not need to contain all rows that are in the baseline\
          \ related time series. Include only the rows (measure-dimension combinations)\
          \ that you want to include in the what-if forecast.</p> <p>This dataset\
          \ is merged with the original time series to create a transformed dataset\
          \ that is used for the what-if analysis.</p> <p>This dataset should contain\
          \ the items to modify (such as item_id or workforce_type), any relevant\
          \ dimensions, the timestamp column, and at least one of the related time\
          \ series columns. This file should not contain duplicate timestamps for\
          \ the same time series.</p> <p>Timestamps and item_ids not included in this\
          \ dataset are not included in the what-if analysis. </p>"
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
        Format: ""
        Schema:
          Attributes: ""
        TimestampFormat: ""
    DescribeAutoPredictorResponse_ReferencePredictorSummary:
      allOf:
      - $ref: '#/components/schemas/ReferencePredictorSummary'
      - description: The ARN and state of the reference predictor. This parameter
          is only valid for retrained or upgraded predictors.
      example:
        State: ""
        Arn: ""
    DescribeAutoPredictorResponse_ExplainabilityInfo:
      allOf:
      - $ref: '#/components/schemas/ExplainabilityInfo'
      - description: Provides the status and ARN of the Predictor Explainability.
      example:
        Status: ""
        ExplainabilityArn: ""
    DescribeAutoPredictorResponse_MonitorInfo:
      allOf:
      - $ref: '#/components/schemas/MonitorInfo'
      - description: A object with the Amazon Resource Name (ARN) and status of the
          monitor resource.
      example:
        Status: ""
        MonitorArn: ""
    DescribeAutoPredictorResponse_TimeAlignmentBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeAlignmentBoundary'
      - description: The time boundary Forecast uses when aggregating data.
      example:
        Month: ""
        DayOfWeek: ""
        Hour: ""
        DayOfMonth: ""
    DescribeDatasetResponse_Schema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - description: An array of <code>SchemaAttribute</code> objects that specify
          the dataset fields. Each <code>SchemaAttribute</code> specifies the name
          and data type of a field.
      example:
        Attributes: ""
    DescribeDatasetResponse_EncryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: The Key Management Service (KMS) key and the Identity and Access
          Management (IAM) role that Amazon Forecast can assume to access the key.
      example:
        KMSKeyArn: ""
        RoleArn: ""
    DescribeDatasetImportJobResponse_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: "<p>The location of the training data to import and an Identity\
          \ and Access Management (IAM) role that Amazon Forecast can assume to access\
          \ the data.</p> <p>If encryption is used, <code>DataSource</code> includes\
          \ an Key Management Service (KMS) key.</p>"
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
    DescribeForecastResponse_TimeSeriesSelector:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesSelector'
      - description: The time series to include in the forecast.
      example:
        TimeSeriesIdentifiers:
          Format: ""
          Schema:
            Attributes: ""
          DataSource:
            S3Config:
              Path: ""
              KMSKeyArn: ""
              RoleArn: ""
    DescribeForecastExportJobResponse_Destination:
      allOf:
      - $ref: '#/components/schemas/DataDestination'
      - description: The path to the Amazon Simple Storage Service (Amazon S3) bucket
          where the forecast is exported.
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
    DescribeMonitorResponse_Baseline:
      allOf:
      - $ref: '#/components/schemas/Baseline'
      - description: Metrics you can use as a baseline for comparison purposes. Use
          these values you interpret monitoring results for an auto predictor.
      example:
        PredictorBaseline:
          BaselineMetrics: ""
    DescribePredictorResponse_HPOConfig:
      allOf:
      - $ref: '#/components/schemas/HyperParameterTuningJobConfig'
      - description: The hyperparameter override values for the algorithm.
      example:
        ParameterRanges:
          CategoricalParameterRanges: ""
          IntegerParameterRanges: ""
          ContinuousParameterRanges: ""
    DescribePredictorResponse_PredictorExecutionDetails:
      allOf:
      - $ref: '#/components/schemas/PredictorExecutionDetails'
      - description: Details on the the status and results of the backtests performed
          to evaluate the accuracy of the predictor. You specify the number of backtests
          to perform when you call the operation.
      example:
        PredictorExecutions: ""
    DescribeWhatIfForecastResponse_TimeSeriesReplacementsDataSource:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesReplacementsDataSource'
      - description: "An array of <code>S3Config</code>, <code>Schema</code>, and\
          \ <code>Format</code> elements that describe the replacement time series."
      example:
        S3Config:
          Path: ""
          KMSKeyArn: ""
          RoleArn: ""
        Format: ""
        Schema:
          Attributes: ""
        TimestampFormat: ""
    Baseline_PredictorBaseline:
      allOf:
      - $ref: '#/components/schemas/PredictorBaseline'
      - description: The initial <a href="https://docs.aws.amazon.com/forecast/latest/dg/metrics.html">accuracy
          metrics</a> for the predictor you are monitoring. Use these metrics as a
          baseline for comparison purposes as you use your predictor and the metrics
          change.
      example:
        BaselineMetrics: ""
    DataSource_S3Config:
      allOf:
      - $ref: '#/components/schemas/S3Config'
      - description: The path to the data stored in an Amazon Simple Storage Service
          (Amazon S3) bucket along with the credentials to access the data.
      example:
        Path: ""
        KMSKeyArn: ""
        RoleArn: ""
    DataDestination_S3Config:
      allOf:
      - $ref: '#/components/schemas/S3Config'
      - description: The path to an Amazon Simple Storage Service (Amazon S3) bucket
          along with the credentials to access the bucket.
      example:
        Path: ""
        KMSKeyArn: ""
        RoleArn: ""
    TimeSeriesSelector_TimeSeriesIdentifiers:
      allOf:
      - $ref: '#/components/schemas/TimeSeriesIdentifiers'
      - description: Details about the import file that contains the time series for
          which you want to create forecasts.
      example:
        Format: ""
        Schema:
          Attributes: ""
        DataSource:
          S3Config:
            Path: ""
            KMSKeyArn: ""
            RoleArn: ""
    HyperParameterTuningJobConfig_ParameterRanges:
      allOf:
      - $ref: '#/components/schemas/ParameterRanges'
      - description: Specifies the ranges of valid values for the hyperparameters.
      example:
        CategoricalParameterRanges: ""
        IntegerParameterRanges: ""
        ContinuousParameterRanges: ""
    DatasetImportJobSummary_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: "<p>The location of the training data to import and an Identity\
          \ and Access Management (IAM) role that Amazon Forecast can assume to access\
          \ the data. The training data must be stored in an Amazon S3 bucket.</p>\
          \ <p>If encryption is used, <code>DataSource</code> includes an Key Management\
          \ Service (KMS) key.</p>"
    PredictorMonitorEvaluation_PredictorEvent:
      allOf:
      - $ref: '#/components/schemas/PredictorEvent'
      - description: "Provides details about a predictor event, such as a retraining."
    PredictorMonitorEvaluation_MonitorDataSource:
      allOf:
      - $ref: '#/components/schemas/MonitorDataSource'
      - description: The source of the data the monitor resource used during the evaluation.
    PredictorSummary_ReferencePredictorSummary:
      allOf:
      - $ref: '#/components/schemas/ReferencePredictorSummary'
      - description: A summary of the reference predictor used if the predictor was
          retrained or upgraded.
    WindowSummary_Metrics:
      allOf:
      - $ref: '#/components/schemas/Metrics'
      - description: Provides metrics used to evaluate the performance of a predictor.
    TimeSeriesTransformation_Action:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: An array of actions that define a time series and how it is transformed.
          These transformations create a new time series that is used for the what-if
          analysis.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

