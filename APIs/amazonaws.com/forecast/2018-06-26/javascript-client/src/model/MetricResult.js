/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricResult model module.
 * @module model/MetricResult
 * @version 2018-06-26
 */
class MetricResult {
    /**
     * Constructs a new <code>MetricResult</code>.
     * &lt;p&gt;An individual metric Forecast calculated when monitoring predictor usage. You can compare the value for this metric to the metric&#39;s value in the &lt;a&gt;Baseline&lt;/a&gt; to see how your predictor&#39;s performance is changing.&lt;/p&gt; &lt;p&gt;For more information about metrics generated by Forecast see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/metrics.html\&quot;&gt;Evaluating Predictor Accuracy&lt;/a&gt; &lt;/p&gt;
     * @alias module:model/MetricResult
     */
    constructor() { 
        
        MetricResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricResult} obj Optional instance to populate.
     * @return {module:model/MetricResult} The populated <code>MetricResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricResult();

            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], 'String');
            }
            if (data.hasOwnProperty('MetricValue')) {
                obj['MetricValue'] = ApiClient.convertToType(data['MetricValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          String.validateJSON(data['MetricName']);
        }
        // validate the optional field `MetricValue`
        if (data['MetricValue']) { // data not null
          Number.validateJSON(data['MetricValue']);
        }

        return true;
    }


}



/**
 * @member {String} MetricName
 */
MetricResult.prototype['MetricName'] = undefined;

/**
 * @member {Number} MetricValue
 */
MetricResult.prototype['MetricValue'] = undefined;






export default MetricResult;

