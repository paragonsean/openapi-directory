/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAutoPredictorRequestDataConfig from './CreateAutoPredictorRequestDataConfig';
import DescribeAutoPredictorResponseExplainabilityInfo from './DescribeAutoPredictorResponseExplainabilityInfo';
import DescribeAutoPredictorResponseMonitorInfo from './DescribeAutoPredictorResponseMonitorInfo';
import DescribeAutoPredictorResponseReferencePredictorSummary from './DescribeAutoPredictorResponseReferencePredictorSummary';
import DescribeAutoPredictorResponseTimeAlignmentBoundary from './DescribeAutoPredictorResponseTimeAlignmentBoundary';
import EncryptionConfig from './EncryptionConfig';
import OptimizationMetric from './OptimizationMetric';

/**
 * The DescribeAutoPredictorResponse model module.
 * @module model/DescribeAutoPredictorResponse
 * @version 2018-06-26
 */
class DescribeAutoPredictorResponse {
    /**
     * Constructs a new <code>DescribeAutoPredictorResponse</code>.
     * @alias module:model/DescribeAutoPredictorResponse
     */
    constructor() { 
        
        DescribeAutoPredictorResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeAutoPredictorResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeAutoPredictorResponse} obj Optional instance to populate.
     * @return {module:model/DescribeAutoPredictorResponse} The populated <code>DescribeAutoPredictorResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeAutoPredictorResponse();

            if (data.hasOwnProperty('PredictorArn')) {
                obj['PredictorArn'] = ApiClient.convertToType(data['PredictorArn'], 'String');
            }
            if (data.hasOwnProperty('PredictorName')) {
                obj['PredictorName'] = ApiClient.convertToType(data['PredictorName'], 'String');
            }
            if (data.hasOwnProperty('ForecastHorizon')) {
                obj['ForecastHorizon'] = ApiClient.convertToType(data['ForecastHorizon'], 'Number');
            }
            if (data.hasOwnProperty('ForecastTypes')) {
                obj['ForecastTypes'] = ApiClient.convertToType(data['ForecastTypes'], Array);
            }
            if (data.hasOwnProperty('ForecastFrequency')) {
                obj['ForecastFrequency'] = ApiClient.convertToType(data['ForecastFrequency'], 'String');
            }
            if (data.hasOwnProperty('ForecastDimensions')) {
                obj['ForecastDimensions'] = ApiClient.convertToType(data['ForecastDimensions'], Array);
            }
            if (data.hasOwnProperty('DatasetImportJobArns')) {
                obj['DatasetImportJobArns'] = ApiClient.convertToType(data['DatasetImportJobArns'], Array);
            }
            if (data.hasOwnProperty('DataConfig')) {
                obj['DataConfig'] = CreateAutoPredictorRequestDataConfig.constructFromObject(data['DataConfig']);
            }
            if (data.hasOwnProperty('EncryptionConfig')) {
                obj['EncryptionConfig'] = EncryptionConfig.constructFromObject(data['EncryptionConfig']);
            }
            if (data.hasOwnProperty('ReferencePredictorSummary')) {
                obj['ReferencePredictorSummary'] = DescribeAutoPredictorResponseReferencePredictorSummary.constructFromObject(data['ReferencePredictorSummary']);
            }
            if (data.hasOwnProperty('EstimatedTimeRemainingInMinutes')) {
                obj['EstimatedTimeRemainingInMinutes'] = ApiClient.convertToType(data['EstimatedTimeRemainingInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModificationTime')) {
                obj['LastModificationTime'] = ApiClient.convertToType(data['LastModificationTime'], 'Date');
            }
            if (data.hasOwnProperty('OptimizationMetric')) {
                obj['OptimizationMetric'] = ApiClient.convertToType(data['OptimizationMetric'], OptimizationMetric);
            }
            if (data.hasOwnProperty('ExplainabilityInfo')) {
                obj['ExplainabilityInfo'] = DescribeAutoPredictorResponseExplainabilityInfo.constructFromObject(data['ExplainabilityInfo']);
            }
            if (data.hasOwnProperty('MonitorInfo')) {
                obj['MonitorInfo'] = DescribeAutoPredictorResponseMonitorInfo.constructFromObject(data['MonitorInfo']);
            }
            if (data.hasOwnProperty('TimeAlignmentBoundary')) {
                obj['TimeAlignmentBoundary'] = DescribeAutoPredictorResponseTimeAlignmentBoundary.constructFromObject(data['TimeAlignmentBoundary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeAutoPredictorResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeAutoPredictorResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PredictorArn`
        if (data['PredictorArn']) { // data not null
          String.validateJSON(data['PredictorArn']);
        }
        // validate the optional field `PredictorName`
        if (data['PredictorName']) { // data not null
          String.validateJSON(data['PredictorName']);
        }
        // validate the optional field `ForecastHorizon`
        if (data['ForecastHorizon']) { // data not null
          Number.validateJSON(data['ForecastHorizon']);
        }
        // validate the optional field `ForecastTypes`
        if (data['ForecastTypes']) { // data not null
          Array.validateJSON(data['ForecastTypes']);
        }
        // validate the optional field `ForecastFrequency`
        if (data['ForecastFrequency']) { // data not null
          String.validateJSON(data['ForecastFrequency']);
        }
        // validate the optional field `ForecastDimensions`
        if (data['ForecastDimensions']) { // data not null
          Array.validateJSON(data['ForecastDimensions']);
        }
        // validate the optional field `DatasetImportJobArns`
        if (data['DatasetImportJobArns']) { // data not null
          Array.validateJSON(data['DatasetImportJobArns']);
        }
        // validate the optional field `DataConfig`
        if (data['DataConfig']) { // data not null
          CreateAutoPredictorRequestDataConfig.validateJSON(data['DataConfig']);
        }
        // validate the optional field `EncryptionConfig`
        if (data['EncryptionConfig']) { // data not null
          EncryptionConfig.validateJSON(data['EncryptionConfig']);
        }
        // validate the optional field `ReferencePredictorSummary`
        if (data['ReferencePredictorSummary']) { // data not null
          DescribeAutoPredictorResponseReferencePredictorSummary.validateJSON(data['ReferencePredictorSummary']);
        }
        // validate the optional field `EstimatedTimeRemainingInMinutes`
        if (data['EstimatedTimeRemainingInMinutes']) { // data not null
          Number.validateJSON(data['EstimatedTimeRemainingInMinutes']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModificationTime`
        if (data['LastModificationTime']) { // data not null
          Date.validateJSON(data['LastModificationTime']);
        }
        // validate the optional field `OptimizationMetric`
        if (data['OptimizationMetric']) { // data not null
          OptimizationMetric.validateJSON(data['OptimizationMetric']);
        }
        // validate the optional field `ExplainabilityInfo`
        if (data['ExplainabilityInfo']) { // data not null
          DescribeAutoPredictorResponseExplainabilityInfo.validateJSON(data['ExplainabilityInfo']);
        }
        // validate the optional field `MonitorInfo`
        if (data['MonitorInfo']) { // data not null
          DescribeAutoPredictorResponseMonitorInfo.validateJSON(data['MonitorInfo']);
        }
        // validate the optional field `TimeAlignmentBoundary`
        if (data['TimeAlignmentBoundary']) { // data not null
          DescribeAutoPredictorResponseTimeAlignmentBoundary.validateJSON(data['TimeAlignmentBoundary']);
        }

        return true;
    }


}



/**
 * @member {String} PredictorArn
 */
DescribeAutoPredictorResponse.prototype['PredictorArn'] = undefined;

/**
 * @member {String} PredictorName
 */
DescribeAutoPredictorResponse.prototype['PredictorName'] = undefined;

/**
 * @member {Number} ForecastHorizon
 */
DescribeAutoPredictorResponse.prototype['ForecastHorizon'] = undefined;

/**
 * @member {Array} ForecastTypes
 */
DescribeAutoPredictorResponse.prototype['ForecastTypes'] = undefined;

/**
 * @member {String} ForecastFrequency
 */
DescribeAutoPredictorResponse.prototype['ForecastFrequency'] = undefined;

/**
 * @member {Array} ForecastDimensions
 */
DescribeAutoPredictorResponse.prototype['ForecastDimensions'] = undefined;

/**
 * @member {Array} DatasetImportJobArns
 */
DescribeAutoPredictorResponse.prototype['DatasetImportJobArns'] = undefined;

/**
 * @member {module:model/CreateAutoPredictorRequestDataConfig} DataConfig
 */
DescribeAutoPredictorResponse.prototype['DataConfig'] = undefined;

/**
 * @member {module:model/EncryptionConfig} EncryptionConfig
 */
DescribeAutoPredictorResponse.prototype['EncryptionConfig'] = undefined;

/**
 * @member {module:model/DescribeAutoPredictorResponseReferencePredictorSummary} ReferencePredictorSummary
 */
DescribeAutoPredictorResponse.prototype['ReferencePredictorSummary'] = undefined;

/**
 * @member {Number} EstimatedTimeRemainingInMinutes
 */
DescribeAutoPredictorResponse.prototype['EstimatedTimeRemainingInMinutes'] = undefined;

/**
 * @member {String} Status
 */
DescribeAutoPredictorResponse.prototype['Status'] = undefined;

/**
 * @member {String} Message
 */
DescribeAutoPredictorResponse.prototype['Message'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeAutoPredictorResponse.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModificationTime
 */
DescribeAutoPredictorResponse.prototype['LastModificationTime'] = undefined;

/**
 * @member {module:model/OptimizationMetric} OptimizationMetric
 */
DescribeAutoPredictorResponse.prototype['OptimizationMetric'] = undefined;

/**
 * @member {module:model/DescribeAutoPredictorResponseExplainabilityInfo} ExplainabilityInfo
 */
DescribeAutoPredictorResponse.prototype['ExplainabilityInfo'] = undefined;

/**
 * @member {module:model/DescribeAutoPredictorResponseMonitorInfo} MonitorInfo
 */
DescribeAutoPredictorResponse.prototype['MonitorInfo'] = undefined;

/**
 * @member {module:model/DescribeAutoPredictorResponseTimeAlignmentBoundary} TimeAlignmentBoundary
 */
DescribeAutoPredictorResponse.prototype['TimeAlignmentBoundary'] = undefined;






export default DescribeAutoPredictorResponse;

