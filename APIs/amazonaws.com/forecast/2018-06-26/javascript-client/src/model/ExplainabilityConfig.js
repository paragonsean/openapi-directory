/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimePointGranularity from './TimePointGranularity';
import TimeSeriesGranularity from './TimeSeriesGranularity';

/**
 * The ExplainabilityConfig model module.
 * @module model/ExplainabilityConfig
 * @version 2018-06-26
 */
class ExplainabilityConfig {
    /**
     * Constructs a new <code>ExplainabilityConfig</code>.
     * &lt;p&gt;The ExplainabilityConfig data type defines the number of time series and time points included in &lt;a&gt;CreateExplainability&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you provide a predictor ARN for &lt;code&gt;ResourceArn&lt;/code&gt;, you must set both &lt;code&gt;TimePointGranularity&lt;/code&gt; and &lt;code&gt;TimeSeriesGranularity&lt;/code&gt; to “ALL”. When creating Predictor Explainability, Amazon Forecast considers all time series and time points.&lt;/p&gt; &lt;p&gt;If you provide a forecast ARN for &lt;code&gt;ResourceArn&lt;/code&gt;, you can set &lt;code&gt;TimePointGranularity&lt;/code&gt; and &lt;code&gt;TimeSeriesGranularity&lt;/code&gt; to either “ALL” or “Specific”.&lt;/p&gt;
     * @alias module:model/ExplainabilityConfig
     * @param timeSeriesGranularity {module:model/TimeSeriesGranularity} 
     * @param timePointGranularity {module:model/TimePointGranularity} 
     */
    constructor(timeSeriesGranularity, timePointGranularity) { 
        
        ExplainabilityConfig.initialize(this, timeSeriesGranularity, timePointGranularity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timeSeriesGranularity, timePointGranularity) { 
        obj['TimeSeriesGranularity'] = timeSeriesGranularity;
        obj['TimePointGranularity'] = timePointGranularity;
    }

    /**
     * Constructs a <code>ExplainabilityConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExplainabilityConfig} obj Optional instance to populate.
     * @return {module:model/ExplainabilityConfig} The populated <code>ExplainabilityConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExplainabilityConfig();

            if (data.hasOwnProperty('TimeSeriesGranularity')) {
                obj['TimeSeriesGranularity'] = ApiClient.convertToType(data['TimeSeriesGranularity'], TimeSeriesGranularity);
            }
            if (data.hasOwnProperty('TimePointGranularity')) {
                obj['TimePointGranularity'] = ApiClient.convertToType(data['TimePointGranularity'], TimePointGranularity);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExplainabilityConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExplainabilityConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExplainabilityConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TimeSeriesGranularity`
        if (data['TimeSeriesGranularity']) { // data not null
          TimeSeriesGranularity.validateJSON(data['TimeSeriesGranularity']);
        }
        // validate the optional field `TimePointGranularity`
        if (data['TimePointGranularity']) { // data not null
          TimePointGranularity.validateJSON(data['TimePointGranularity']);
        }

        return true;
    }


}

ExplainabilityConfig.RequiredProperties = ["TimeSeriesGranularity", "TimePointGranularity"];

/**
 * @member {module:model/TimeSeriesGranularity} TimeSeriesGranularity
 */
ExplainabilityConfig.prototype['TimeSeriesGranularity'] = undefined;

/**
 * @member {module:model/TimePointGranularity} TimePointGranularity
 */
ExplainabilityConfig.prototype['TimePointGranularity'] = undefined;






export default ExplainabilityConfig;

