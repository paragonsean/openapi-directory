/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Condition from './Condition';

/**
 * The TimeSeriesCondition model module.
 * @module model/TimeSeriesCondition
 * @version 2018-06-26
 */
class TimeSeriesCondition {
    /**
     * Constructs a new <code>TimeSeriesCondition</code>.
     * Creates a subset of items within an attribute that are modified. For example, you can use this operation to create a subset of items that cost $5 or less. To do this, you specify &lt;code&gt;\&quot;AttributeName\&quot;: \&quot;price\&quot;&lt;/code&gt;, &lt;code&gt;\&quot;AttributeValue\&quot;: \&quot;5\&quot;&lt;/code&gt;, and &lt;code&gt;\&quot;Condition\&quot;: \&quot;LESS_THAN\&quot;&lt;/code&gt;. Pair this operation with the &lt;a&gt;Action&lt;/a&gt; operation within the &lt;a&gt;CreateWhatIfForecastRequest$TimeSeriesTransformations&lt;/a&gt; operation to define how the attribute is modified.
     * @alias module:model/TimeSeriesCondition
     * @param attributeName {String} 
     * @param attributeValue {String} 
     * @param condition {module:model/Condition} 
     */
    constructor(attributeName, attributeValue, condition) { 
        
        TimeSeriesCondition.initialize(this, attributeName, attributeValue, condition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeName, attributeValue, condition) { 
        obj['AttributeName'] = attributeName;
        obj['AttributeValue'] = attributeValue;
        obj['Condition'] = condition;
    }

    /**
     * Constructs a <code>TimeSeriesCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesCondition} obj Optional instance to populate.
     * @return {module:model/TimeSeriesCondition} The populated <code>TimeSeriesCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesCondition();

            if (data.hasOwnProperty('AttributeName')) {
                obj['AttributeName'] = ApiClient.convertToType(data['AttributeName'], 'String');
            }
            if (data.hasOwnProperty('AttributeValue')) {
                obj['AttributeValue'] = ApiClient.convertToType(data['AttributeValue'], 'String');
            }
            if (data.hasOwnProperty('Condition')) {
                obj['Condition'] = ApiClient.convertToType(data['Condition'], Condition);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesCondition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeSeriesCondition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AttributeName`
        if (data['AttributeName']) { // data not null
          String.validateJSON(data['AttributeName']);
        }
        // validate the optional field `AttributeValue`
        if (data['AttributeValue']) { // data not null
          String.validateJSON(data['AttributeValue']);
        }
        // validate the optional field `Condition`
        if (data['Condition']) { // data not null
          Condition.validateJSON(data['Condition']);
        }

        return true;
    }


}

TimeSeriesCondition.RequiredProperties = ["AttributeName", "AttributeValue", "Condition"];

/**
 * @member {String} AttributeName
 */
TimeSeriesCondition.prototype['AttributeName'] = undefined;

/**
 * @member {String} AttributeValue
 */
TimeSeriesCondition.prototype['AttributeValue'] = undefined;

/**
 * @member {module:model/Condition} Condition
 */
TimeSeriesCondition.prototype['Condition'] = undefined;






export default TimeSeriesCondition;

