/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PredictorEvent model module.
 * @module model/PredictorEvent
 * @version 2018-06-26
 */
class PredictorEvent {
    /**
     * Constructs a new <code>PredictorEvent</code>.
     * Provides details about a predictor event, such as a retraining.
     * @alias module:model/PredictorEvent
     */
    constructor() { 
        
        PredictorEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictorEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictorEvent} obj Optional instance to populate.
     * @return {module:model/PredictorEvent} The populated <code>PredictorEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictorEvent();

            if (data.hasOwnProperty('Detail')) {
                obj['Detail'] = ApiClient.convertToType(data['Detail'], 'String');
            }
            if (data.hasOwnProperty('Datetime')) {
                obj['Datetime'] = ApiClient.convertToType(data['Datetime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictorEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictorEvent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Detail`
        if (data['Detail']) { // data not null
          String.validateJSON(data['Detail']);
        }
        // validate the optional field `Datetime`
        if (data['Datetime']) { // data not null
          Date.validateJSON(data['Datetime']);
        }

        return true;
    }


}



/**
 * @member {String} Detail
 */
PredictorEvent.prototype['Detail'] = undefined;

/**
 * @member {Date} Datetime
 */
PredictorEvent.prototype['Datetime'] = undefined;






export default PredictorEvent;

