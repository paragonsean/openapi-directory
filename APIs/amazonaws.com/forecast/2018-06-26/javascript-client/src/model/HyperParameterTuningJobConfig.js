/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HyperParameterTuningJobConfigParameterRanges from './HyperParameterTuningJobConfigParameterRanges';

/**
 * The HyperParameterTuningJobConfig model module.
 * @module model/HyperParameterTuningJobConfig
 * @version 2018-06-26
 */
class HyperParameterTuningJobConfig {
    /**
     * Constructs a new <code>HyperParameterTuningJobConfig</code>.
     * &lt;p&gt;Configuration information for a hyperparameter tuning job. You specify this object in the &lt;a&gt;CreatePredictor&lt;/a&gt; request.&lt;/p&gt; &lt;p&gt;A &lt;i&gt;hyperparameter&lt;/i&gt; is a parameter that governs the model training process. You set hyperparameters before training starts, unlike model parameters, which are determined during training. The values of the hyperparameters effect which values are chosen for the model parameters.&lt;/p&gt; &lt;p&gt;In a &lt;i&gt;hyperparameter tuning job&lt;/i&gt;, Amazon Forecast chooses the set of hyperparameter values that optimize a specified metric. Forecast accomplishes this by running many training jobs over a range of hyperparameter values. The optimum set of values depends on the algorithm, the training data, and the specified metric objective.&lt;/p&gt;
     * @alias module:model/HyperParameterTuningJobConfig
     */
    constructor() { 
        
        HyperParameterTuningJobConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HyperParameterTuningJobConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperParameterTuningJobConfig} obj Optional instance to populate.
     * @return {module:model/HyperParameterTuningJobConfig} The populated <code>HyperParameterTuningJobConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperParameterTuningJobConfig();

            if (data.hasOwnProperty('ParameterRanges')) {
                obj['ParameterRanges'] = HyperParameterTuningJobConfigParameterRanges.constructFromObject(data['ParameterRanges']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperParameterTuningJobConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperParameterTuningJobConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ParameterRanges`
        if (data['ParameterRanges']) { // data not null
          HyperParameterTuningJobConfigParameterRanges.validateJSON(data['ParameterRanges']);
        }

        return true;
    }


}



/**
 * @member {module:model/HyperParameterTuningJobConfigParameterRanges} ParameterRanges
 */
HyperParameterTuningJobConfig.prototype['ParameterRanges'] = undefined;






export default HyperParameterTuningJobConfig;

