/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeForecastResponseTimeSeriesSelector from './DescribeForecastResponseTimeSeriesSelector';

/**
 * The DescribeForecastResponse model module.
 * @module model/DescribeForecastResponse
 * @version 2018-06-26
 */
class DescribeForecastResponse {
    /**
     * Constructs a new <code>DescribeForecastResponse</code>.
     * @alias module:model/DescribeForecastResponse
     */
    constructor() { 
        
        DescribeForecastResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeForecastResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeForecastResponse} obj Optional instance to populate.
     * @return {module:model/DescribeForecastResponse} The populated <code>DescribeForecastResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeForecastResponse();

            if (data.hasOwnProperty('ForecastArn')) {
                obj['ForecastArn'] = ApiClient.convertToType(data['ForecastArn'], 'String');
            }
            if (data.hasOwnProperty('ForecastName')) {
                obj['ForecastName'] = ApiClient.convertToType(data['ForecastName'], 'String');
            }
            if (data.hasOwnProperty('ForecastTypes')) {
                obj['ForecastTypes'] = ApiClient.convertToType(data['ForecastTypes'], Array);
            }
            if (data.hasOwnProperty('PredictorArn')) {
                obj['PredictorArn'] = ApiClient.convertToType(data['PredictorArn'], 'String');
            }
            if (data.hasOwnProperty('DatasetGroupArn')) {
                obj['DatasetGroupArn'] = ApiClient.convertToType(data['DatasetGroupArn'], 'String');
            }
            if (data.hasOwnProperty('EstimatedTimeRemainingInMinutes')) {
                obj['EstimatedTimeRemainingInMinutes'] = ApiClient.convertToType(data['EstimatedTimeRemainingInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModificationTime')) {
                obj['LastModificationTime'] = ApiClient.convertToType(data['LastModificationTime'], 'Date');
            }
            if (data.hasOwnProperty('TimeSeriesSelector')) {
                obj['TimeSeriesSelector'] = DescribeForecastResponseTimeSeriesSelector.constructFromObject(data['TimeSeriesSelector']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeForecastResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeForecastResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ForecastArn`
        if (data['ForecastArn']) { // data not null
          String.validateJSON(data['ForecastArn']);
        }
        // validate the optional field `ForecastName`
        if (data['ForecastName']) { // data not null
          String.validateJSON(data['ForecastName']);
        }
        // validate the optional field `ForecastTypes`
        if (data['ForecastTypes']) { // data not null
          Array.validateJSON(data['ForecastTypes']);
        }
        // validate the optional field `PredictorArn`
        if (data['PredictorArn']) { // data not null
          String.validateJSON(data['PredictorArn']);
        }
        // validate the optional field `DatasetGroupArn`
        if (data['DatasetGroupArn']) { // data not null
          String.validateJSON(data['DatasetGroupArn']);
        }
        // validate the optional field `EstimatedTimeRemainingInMinutes`
        if (data['EstimatedTimeRemainingInMinutes']) { // data not null
          Number.validateJSON(data['EstimatedTimeRemainingInMinutes']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModificationTime`
        if (data['LastModificationTime']) { // data not null
          Date.validateJSON(data['LastModificationTime']);
        }
        // validate the optional field `TimeSeriesSelector`
        if (data['TimeSeriesSelector']) { // data not null
          DescribeForecastResponseTimeSeriesSelector.validateJSON(data['TimeSeriesSelector']);
        }

        return true;
    }


}



/**
 * @member {String} ForecastArn
 */
DescribeForecastResponse.prototype['ForecastArn'] = undefined;

/**
 * @member {String} ForecastName
 */
DescribeForecastResponse.prototype['ForecastName'] = undefined;

/**
 * @member {Array} ForecastTypes
 */
DescribeForecastResponse.prototype['ForecastTypes'] = undefined;

/**
 * @member {String} PredictorArn
 */
DescribeForecastResponse.prototype['PredictorArn'] = undefined;

/**
 * @member {String} DatasetGroupArn
 */
DescribeForecastResponse.prototype['DatasetGroupArn'] = undefined;

/**
 * @member {Number} EstimatedTimeRemainingInMinutes
 */
DescribeForecastResponse.prototype['EstimatedTimeRemainingInMinutes'] = undefined;

/**
 * @member {String} Status
 */
DescribeForecastResponse.prototype['Status'] = undefined;

/**
 * @member {String} Message
 */
DescribeForecastResponse.prototype['Message'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeForecastResponse.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModificationTime
 */
DescribeForecastResponse.prototype['LastModificationTime'] = undefined;

/**
 * @member {module:model/DescribeForecastResponseTimeSeriesSelector} TimeSeriesSelector
 */
DescribeForecastResponse.prototype['TimeSeriesSelector'] = undefined;






export default DescribeForecastResponse;

