/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeaturizationMethodName from './FeaturizationMethodName';

/**
 * The FeaturizationMethod model module.
 * @module model/FeaturizationMethod
 * @version 2018-06-26
 */
class FeaturizationMethod {
    /**
     * Constructs a new <code>FeaturizationMethod</code>.
     * &lt;p&gt;Provides information about the method that featurizes (transforms) a dataset field. The method is part of the &lt;code&gt;FeaturizationPipeline&lt;/code&gt; of the &lt;a&gt;Featurization&lt;/a&gt; object. &lt;/p&gt; &lt;p&gt;The following is an example of how you specify a &lt;code&gt;FeaturizationMethod&lt;/code&gt; object.&lt;/p&gt; &lt;p&gt; &lt;code&gt;{&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;FeaturizationMethodName\&quot;: \&quot;filling\&quot;,&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;FeaturizationMethodParameters\&quot;: {\&quot;aggregation\&quot;: \&quot;sum\&quot;, \&quot;middlefill\&quot;: \&quot;zero\&quot;, \&quot;backfill\&quot;: \&quot;zero\&quot;}&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;}&lt;/code&gt; &lt;/p&gt;
     * @alias module:model/FeaturizationMethod
     * @param featurizationMethodName {module:model/FeaturizationMethodName} 
     */
    constructor(featurizationMethodName) { 
        
        FeaturizationMethod.initialize(this, featurizationMethodName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, featurizationMethodName) { 
        obj['FeaturizationMethodName'] = featurizationMethodName;
    }

    /**
     * Constructs a <code>FeaturizationMethod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeaturizationMethod} obj Optional instance to populate.
     * @return {module:model/FeaturizationMethod} The populated <code>FeaturizationMethod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeaturizationMethod();

            if (data.hasOwnProperty('FeaturizationMethodName')) {
                obj['FeaturizationMethodName'] = ApiClient.convertToType(data['FeaturizationMethodName'], FeaturizationMethodName);
            }
            if (data.hasOwnProperty('FeaturizationMethodParameters')) {
                obj['FeaturizationMethodParameters'] = ApiClient.convertToType(data['FeaturizationMethodParameters'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeaturizationMethod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeaturizationMethod</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FeaturizationMethod.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FeaturizationMethodName`
        if (data['FeaturizationMethodName']) { // data not null
          FeaturizationMethodName.validateJSON(data['FeaturizationMethodName']);
        }
        // validate the optional field `FeaturizationMethodParameters`
        if (data['FeaturizationMethodParameters']) { // data not null
          Object.validateJSON(data['FeaturizationMethodParameters']);
        }

        return true;
    }


}

FeaturizationMethod.RequiredProperties = ["FeaturizationMethodName"];

/**
 * @member {module:model/FeaturizationMethodName} FeaturizationMethodName
 */
FeaturizationMethod.prototype['FeaturizationMethodName'] = undefined;

/**
 * @member {Object} FeaturizationMethodParameters
 */
FeaturizationMethod.prototype['FeaturizationMethodParameters'] = undefined;






export default FeaturizationMethod;

