/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalDataset model module.
 * @module model/AdditionalDataset
 * @version 2018-06-26
 */
class AdditionalDataset {
    /**
     * Constructs a new <code>AdditionalDataset</code>.
     * &lt;p&gt;Describes an additional dataset. This object is part of the &lt;a&gt;DataConfig&lt;/a&gt; object. Forecast supports the Weather Index and Holidays additional datasets.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Weather Index&lt;/b&gt; &lt;/p&gt; &lt;p&gt;The Amazon Forecast Weather Index is a built-in dataset that incorporates historical and projected weather information into your model. The Weather Index supplements your datasets with over two years of historical weather data and up to 14 days of projected weather data. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/weather.html\&quot;&gt;Amazon Forecast Weather Index&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Holidays&lt;/b&gt; &lt;/p&gt; &lt;p&gt;Holidays is a built-in dataset that incorporates national holiday information into your model. It provides native support for the holiday calendars of 66 countries. To view the holiday calendars, refer to the &lt;a href&#x3D;\&quot;http://jollyday.sourceforge.net/data.html\&quot;&gt;Jollyday&lt;/a&gt; library. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/holidays.html\&quot;&gt;Holidays Featurization&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/AdditionalDataset
     * @param name {String} 
     */
    constructor(name) { 
        
        AdditionalDataset.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>AdditionalDataset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalDataset} obj Optional instance to populate.
     * @return {module:model/AdditionalDataset} The populated <code>AdditionalDataset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalDataset();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Configuration')) {
                obj['Configuration'] = ApiClient.convertToType(data['Configuration'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalDataset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalDataset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdditionalDataset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Configuration`
        if (data['Configuration']) { // data not null
          Object.validateJSON(data['Configuration']);
        }

        return true;
    }


}

AdditionalDataset.RequiredProperties = ["Name"];

/**
 * @member {String} Name
 */
AdditionalDataset.prototype['Name'] = undefined;

/**
 * @member {Object} Configuration
 */
AdditionalDataset.prototype['Configuration'] = undefined;






export default AdditionalDataset;

