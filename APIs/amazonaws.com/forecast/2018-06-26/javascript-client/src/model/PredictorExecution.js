/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PredictorExecution model module.
 * @module model/PredictorExecution
 * @version 2018-06-26
 */
class PredictorExecution {
    /**
     * Constructs a new <code>PredictorExecution</code>.
     * The algorithm used to perform a backtest and the status of those tests.
     * @alias module:model/PredictorExecution
     */
    constructor() { 
        
        PredictorExecution.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictorExecution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictorExecution} obj Optional instance to populate.
     * @return {module:model/PredictorExecution} The populated <code>PredictorExecution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictorExecution();

            if (data.hasOwnProperty('AlgorithmArn')) {
                obj['AlgorithmArn'] = ApiClient.convertToType(data['AlgorithmArn'], 'String');
            }
            if (data.hasOwnProperty('TestWindows')) {
                obj['TestWindows'] = ApiClient.convertToType(data['TestWindows'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictorExecution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictorExecution</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AlgorithmArn`
        if (data['AlgorithmArn']) { // data not null
          String.validateJSON(data['AlgorithmArn']);
        }
        // validate the optional field `TestWindows`
        if (data['TestWindows']) { // data not null
          Array.validateJSON(data['TestWindows']);
        }

        return true;
    }


}



/**
 * @member {String} AlgorithmArn
 */
PredictorExecution.prototype['AlgorithmArn'] = undefined;

/**
 * @member {Array} TestWindows
 */
PredictorExecution.prototype['TestWindows'] = undefined;






export default PredictorExecution;

