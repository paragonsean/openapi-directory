/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Featurization model module.
 * @module model/Featurization
 * @version 2018-06-26
 */
class Featurization {
    /**
     * Constructs a new <code>Featurization</code>.
     * &lt;note&gt; &lt;p&gt;This object belongs to the &lt;a&gt;CreatePredictor&lt;/a&gt; operation. If you created your predictor with &lt;a&gt;CreateAutoPredictor&lt;/a&gt;, see &lt;a&gt;AttributeConfig&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Provides featurization (transformation) information for a dataset field. This object is part of the &lt;a&gt;FeaturizationConfig&lt;/a&gt; object.&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;p&gt; &lt;code&gt;{&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;AttributeName\&quot;: \&quot;demand\&quot;,&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;FeaturizationPipeline [ {&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;FeaturizationMethodName\&quot;: \&quot;filling\&quot;,&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;FeaturizationMethodParameters\&quot;: {\&quot;aggregation\&quot;: \&quot;avg\&quot;, \&quot;backfill\&quot;: \&quot;nan\&quot;}&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;} ]&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;}&lt;/code&gt; &lt;/p&gt;
     * @alias module:model/Featurization
     * @param attributeName {String} 
     */
    constructor(attributeName) { 
        
        Featurization.initialize(this, attributeName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeName) { 
        obj['AttributeName'] = attributeName;
    }

    /**
     * Constructs a <code>Featurization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Featurization} obj Optional instance to populate.
     * @return {module:model/Featurization} The populated <code>Featurization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Featurization();

            if (data.hasOwnProperty('AttributeName')) {
                obj['AttributeName'] = ApiClient.convertToType(data['AttributeName'], 'String');
            }
            if (data.hasOwnProperty('FeaturizationPipeline')) {
                obj['FeaturizationPipeline'] = ApiClient.convertToType(data['FeaturizationPipeline'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Featurization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Featurization</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Featurization.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AttributeName`
        if (data['AttributeName']) { // data not null
          String.validateJSON(data['AttributeName']);
        }
        // validate the optional field `FeaturizationPipeline`
        if (data['FeaturizationPipeline']) { // data not null
          Array.validateJSON(data['FeaturizationPipeline']);
        }

        return true;
    }


}

Featurization.RequiredProperties = ["AttributeName"];

/**
 * @member {String} AttributeName
 */
Featurization.prototype['AttributeName'] = undefined;

/**
 * @member {Array} FeaturizationPipeline
 */
Featurization.prototype['FeaturizationPipeline'] = undefined;






export default Featurization;

