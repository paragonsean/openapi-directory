/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EvaluationType from './EvaluationType';
import WindowSummaryMetrics from './WindowSummaryMetrics';

/**
 * The WindowSummary model module.
 * @module model/WindowSummary
 * @version 2018-06-26
 */
class WindowSummary {
    /**
     * Constructs a new <code>WindowSummary</code>.
     * &lt;p&gt;The metrics for a time range within the evaluation portion of a dataset. This object is part of the &lt;a&gt;EvaluationResult&lt;/a&gt; object.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;TestWindowStart&lt;/code&gt; and &lt;code&gt;TestWindowEnd&lt;/code&gt; parameters are determined by the &lt;code&gt;BackTestWindowOffset&lt;/code&gt; parameter of the &lt;a&gt;EvaluationParameters&lt;/a&gt; object.&lt;/p&gt;
     * @alias module:model/WindowSummary
     */
    constructor() { 
        
        WindowSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WindowSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WindowSummary} obj Optional instance to populate.
     * @return {module:model/WindowSummary} The populated <code>WindowSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WindowSummary();

            if (data.hasOwnProperty('TestWindowStart')) {
                obj['TestWindowStart'] = ApiClient.convertToType(data['TestWindowStart'], 'Date');
            }
            if (data.hasOwnProperty('TestWindowEnd')) {
                obj['TestWindowEnd'] = ApiClient.convertToType(data['TestWindowEnd'], 'Date');
            }
            if (data.hasOwnProperty('ItemCount')) {
                obj['ItemCount'] = ApiClient.convertToType(data['ItemCount'], 'Number');
            }
            if (data.hasOwnProperty('EvaluationType')) {
                obj['EvaluationType'] = ApiClient.convertToType(data['EvaluationType'], EvaluationType);
            }
            if (data.hasOwnProperty('Metrics')) {
                obj['Metrics'] = WindowSummaryMetrics.constructFromObject(data['Metrics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WindowSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WindowSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TestWindowStart`
        if (data['TestWindowStart']) { // data not null
          Date.validateJSON(data['TestWindowStart']);
        }
        // validate the optional field `TestWindowEnd`
        if (data['TestWindowEnd']) { // data not null
          Date.validateJSON(data['TestWindowEnd']);
        }
        // validate the optional field `ItemCount`
        if (data['ItemCount']) { // data not null
          Number.validateJSON(data['ItemCount']);
        }
        // validate the optional field `EvaluationType`
        if (data['EvaluationType']) { // data not null
          EvaluationType.validateJSON(data['EvaluationType']);
        }
        // validate the optional field `Metrics`
        if (data['Metrics']) { // data not null
          WindowSummaryMetrics.validateJSON(data['Metrics']);
        }

        return true;
    }


}



/**
 * @member {Date} TestWindowStart
 */
WindowSummary.prototype['TestWindowStart'] = undefined;

/**
 * @member {Date} TestWindowEnd
 */
WindowSummary.prototype['TestWindowEnd'] = undefined;

/**
 * @member {Number} ItemCount
 */
WindowSummary.prototype['ItemCount'] = undefined;

/**
 * @member {module:model/EvaluationType} EvaluationType
 */
WindowSummary.prototype['EvaluationType'] = undefined;

/**
 * @member {module:model/WindowSummaryMetrics} Metrics
 */
WindowSummary.prototype['Metrics'] = undefined;






export default WindowSummary;

