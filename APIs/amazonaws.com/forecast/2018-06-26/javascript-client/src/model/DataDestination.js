/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataDestinationS3Config from './DataDestinationS3Config';

/**
 * The DataDestination model module.
 * @module model/DataDestination
 * @version 2018-06-26
 */
class DataDestination {
    /**
     * Constructs a new <code>DataDestination</code>.
     * The destination for an export job. Provide an S3 path, an Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an Key Management Service (KMS) key (optional). 
     * @alias module:model/DataDestination
     * @param s3Config {module:model/DataDestinationS3Config} 
     */
    constructor(s3Config) { 
        
        DataDestination.initialize(this, s3Config);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3Config) { 
        obj['S3Config'] = s3Config;
    }

    /**
     * Constructs a <code>DataDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataDestination} obj Optional instance to populate.
     * @return {module:model/DataDestination} The populated <code>DataDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataDestination();

            if (data.hasOwnProperty('S3Config')) {
                obj['S3Config'] = DataDestinationS3Config.constructFromObject(data['S3Config']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `S3Config`
        if (data['S3Config']) { // data not null
          DataDestinationS3Config.validateJSON(data['S3Config']);
        }

        return true;
    }


}

DataDestination.RequiredProperties = ["S3Config"];

/**
 * @member {module:model/DataDestinationS3Config} S3Config
 */
DataDestination.prototype['S3Config'] = undefined;






export default DataDestination;

