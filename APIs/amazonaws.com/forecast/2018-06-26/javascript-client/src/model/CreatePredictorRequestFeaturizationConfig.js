/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeaturizationConfig from './FeaturizationConfig';

/**
 * The CreatePredictorRequestFeaturizationConfig model module.
 * @module model/CreatePredictorRequestFeaturizationConfig
 * @version 2018-06-26
 */
class CreatePredictorRequestFeaturizationConfig {
    /**
     * Constructs a new <code>CreatePredictorRequestFeaturizationConfig</code>.
     * @alias module:model/CreatePredictorRequestFeaturizationConfig
     * @implements module:model/FeaturizationConfig
     * @param forecastFrequency {String} 
     */
    constructor(forecastFrequency) { 
        FeaturizationConfig.initialize(this, forecastFrequency);
        CreatePredictorRequestFeaturizationConfig.initialize(this, forecastFrequency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, forecastFrequency) { 
        obj['ForecastFrequency'] = forecastFrequency;
    }

    /**
     * Constructs a <code>CreatePredictorRequestFeaturizationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePredictorRequestFeaturizationConfig} obj Optional instance to populate.
     * @return {module:model/CreatePredictorRequestFeaturizationConfig} The populated <code>CreatePredictorRequestFeaturizationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePredictorRequestFeaturizationConfig();
            FeaturizationConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('ForecastFrequency')) {
                obj['ForecastFrequency'] = ApiClient.convertToType(data['ForecastFrequency'], 'String');
            }
            if (data.hasOwnProperty('ForecastDimensions')) {
                obj['ForecastDimensions'] = ApiClient.convertToType(data['ForecastDimensions'], Array);
            }
            if (data.hasOwnProperty('Featurizations')) {
                obj['Featurizations'] = ApiClient.convertToType(data['Featurizations'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePredictorRequestFeaturizationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePredictorRequestFeaturizationConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePredictorRequestFeaturizationConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ForecastFrequency`
        if (data['ForecastFrequency']) { // data not null
          String.validateJSON(data['ForecastFrequency']);
        }
        // validate the optional field `ForecastDimensions`
        if (data['ForecastDimensions']) { // data not null
          Array.validateJSON(data['ForecastDimensions']);
        }
        // validate the optional field `Featurizations`
        if (data['Featurizations']) { // data not null
          Array.validateJSON(data['Featurizations']);
        }

        return true;
    }


}

CreatePredictorRequestFeaturizationConfig.RequiredProperties = ["ForecastFrequency"];

/**
 * @member {String} ForecastFrequency
 */
CreatePredictorRequestFeaturizationConfig.prototype['ForecastFrequency'] = undefined;

/**
 * @member {Array} ForecastDimensions
 */
CreatePredictorRequestFeaturizationConfig.prototype['ForecastDimensions'] = undefined;

/**
 * @member {Array} Featurizations
 */
CreatePredictorRequestFeaturizationConfig.prototype['Featurizations'] = undefined;


// Implement FeaturizationConfig interface:
/**
 * @member {String} ForecastFrequency
 */
FeaturizationConfig.prototype['ForecastFrequency'] = undefined;
/**
 * @member {Array} ForecastDimensions
 */
FeaturizationConfig.prototype['ForecastDimensions'] = undefined;
/**
 * @member {Array} Featurizations
 */
FeaturizationConfig.prototype['Featurizations'] = undefined;




export default CreatePredictorRequestFeaturizationConfig;

