/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateExplainabilityRequestExplainabilityConfig from './CreateExplainabilityRequestExplainabilityConfig';
import DataSource from './DataSource';
import Schema from './Schema';

/**
 * The CreateExplainabilityRequest model module.
 * @module model/CreateExplainabilityRequest
 * @version 2018-06-26
 */
class CreateExplainabilityRequest {
    /**
     * Constructs a new <code>CreateExplainabilityRequest</code>.
     * @alias module:model/CreateExplainabilityRequest
     * @param explainabilityName {String} 
     * @param resourceArn {String} 
     * @param explainabilityConfig {module:model/CreateExplainabilityRequestExplainabilityConfig} 
     */
    constructor(explainabilityName, resourceArn, explainabilityConfig) { 
        
        CreateExplainabilityRequest.initialize(this, explainabilityName, resourceArn, explainabilityConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, explainabilityName, resourceArn, explainabilityConfig) { 
        obj['ExplainabilityName'] = explainabilityName;
        obj['ResourceArn'] = resourceArn;
        obj['ExplainabilityConfig'] = explainabilityConfig;
    }

    /**
     * Constructs a <code>CreateExplainabilityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateExplainabilityRequest} obj Optional instance to populate.
     * @return {module:model/CreateExplainabilityRequest} The populated <code>CreateExplainabilityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateExplainabilityRequest();

            if (data.hasOwnProperty('ExplainabilityName')) {
                obj['ExplainabilityName'] = ApiClient.convertToType(data['ExplainabilityName'], 'String');
            }
            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
            if (data.hasOwnProperty('ExplainabilityConfig')) {
                obj['ExplainabilityConfig'] = CreateExplainabilityRequestExplainabilityConfig.constructFromObject(data['ExplainabilityConfig']);
            }
            if (data.hasOwnProperty('DataSource')) {
                obj['DataSource'] = DataSource.constructFromObject(data['DataSource']);
            }
            if (data.hasOwnProperty('Schema')) {
                obj['Schema'] = Schema.constructFromObject(data['Schema']);
            }
            if (data.hasOwnProperty('EnableVisualization')) {
                obj['EnableVisualization'] = ApiClient.convertToType(data['EnableVisualization'], 'Boolean');
            }
            if (data.hasOwnProperty('StartDateTime')) {
                obj['StartDateTime'] = ApiClient.convertToType(data['StartDateTime'], 'String');
            }
            if (data.hasOwnProperty('EndDateTime')) {
                obj['EndDateTime'] = ApiClient.convertToType(data['EndDateTime'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateExplainabilityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateExplainabilityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateExplainabilityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ExplainabilityName`
        if (data['ExplainabilityName']) { // data not null
          String.validateJSON(data['ExplainabilityName']);
        }
        // validate the optional field `ResourceArn`
        if (data['ResourceArn']) { // data not null
          String.validateJSON(data['ResourceArn']);
        }
        // validate the optional field `ExplainabilityConfig`
        if (data['ExplainabilityConfig']) { // data not null
          CreateExplainabilityRequestExplainabilityConfig.validateJSON(data['ExplainabilityConfig']);
        }
        // validate the optional field `DataSource`
        if (data['DataSource']) { // data not null
          DataSource.validateJSON(data['DataSource']);
        }
        // validate the optional field `Schema`
        if (data['Schema']) { // data not null
          Schema.validateJSON(data['Schema']);
        }
        // validate the optional field `EnableVisualization`
        if (data['EnableVisualization']) { // data not null
          Boolean.validateJSON(data['EnableVisualization']);
        }
        // validate the optional field `StartDateTime`
        if (data['StartDateTime']) { // data not null
          String.validateJSON(data['StartDateTime']);
        }
        // validate the optional field `EndDateTime`
        if (data['EndDateTime']) { // data not null
          String.validateJSON(data['EndDateTime']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateExplainabilityRequest.RequiredProperties = ["ExplainabilityName", "ResourceArn", "ExplainabilityConfig"];

/**
 * @member {String} ExplainabilityName
 */
CreateExplainabilityRequest.prototype['ExplainabilityName'] = undefined;

/**
 * @member {String} ResourceArn
 */
CreateExplainabilityRequest.prototype['ResourceArn'] = undefined;

/**
 * @member {module:model/CreateExplainabilityRequestExplainabilityConfig} ExplainabilityConfig
 */
CreateExplainabilityRequest.prototype['ExplainabilityConfig'] = undefined;

/**
 * @member {module:model/DataSource} DataSource
 */
CreateExplainabilityRequest.prototype['DataSource'] = undefined;

/**
 * @member {module:model/Schema} Schema
 */
CreateExplainabilityRequest.prototype['Schema'] = undefined;

/**
 * @member {Boolean} EnableVisualization
 */
CreateExplainabilityRequest.prototype['EnableVisualization'] = undefined;

/**
 * @member {String} StartDateTime
 */
CreateExplainabilityRequest.prototype['StartDateTime'] = undefined;

/**
 * @member {String} EndDateTime
 */
CreateExplainabilityRequest.prototype['EndDateTime'] = undefined;

/**
 * @member {Array} Tags
 */
CreateExplainabilityRequest.prototype['Tags'] = undefined;






export default CreateExplainabilityRequest;

