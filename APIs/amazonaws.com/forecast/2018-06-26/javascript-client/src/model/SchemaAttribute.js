/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributeType from './AttributeType';

/**
 * The SchemaAttribute model module.
 * @module model/SchemaAttribute
 * @version 2018-06-26
 */
class SchemaAttribute {
    /**
     * Constructs a new <code>SchemaAttribute</code>.
     * An attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/forecast/latest/dg/API_Schema.html\&quot;&gt;Schema&lt;/a&gt; object contains an array of &lt;code&gt;SchemaAttribute&lt;/code&gt; objects.
     * @alias module:model/SchemaAttribute
     */
    constructor() { 
        
        SchemaAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SchemaAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SchemaAttribute} obj Optional instance to populate.
     * @return {module:model/SchemaAttribute} The populated <code>SchemaAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SchemaAttribute();

            if (data.hasOwnProperty('AttributeName')) {
                obj['AttributeName'] = ApiClient.convertToType(data['AttributeName'], 'String');
            }
            if (data.hasOwnProperty('AttributeType')) {
                obj['AttributeType'] = ApiClient.convertToType(data['AttributeType'], AttributeType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SchemaAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SchemaAttribute</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AttributeName`
        if (data['AttributeName']) { // data not null
          String.validateJSON(data['AttributeName']);
        }
        // validate the optional field `AttributeType`
        if (data['AttributeType']) { // data not null
          AttributeType.validateJSON(data['AttributeType']);
        }

        return true;
    }


}



/**
 * @member {String} AttributeName
 */
SchemaAttribute.prototype['AttributeName'] = undefined;

/**
 * @member {module:model/AttributeType} AttributeType
 */
SchemaAttribute.prototype['AttributeType'] = undefined;






export default SchemaAttribute;

