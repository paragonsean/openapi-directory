/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PredictorMonitorEvaluationMonitorDataSource from './PredictorMonitorEvaluationMonitorDataSource';
import PredictorMonitorEvaluationPredictorEvent from './PredictorMonitorEvaluationPredictorEvent';

/**
 * The PredictorMonitorEvaluation model module.
 * @module model/PredictorMonitorEvaluation
 * @version 2018-06-26
 */
class PredictorMonitorEvaluation {
    /**
     * Constructs a new <code>PredictorMonitorEvaluation</code>.
     * Describes the results of a monitor evaluation.
     * @alias module:model/PredictorMonitorEvaluation
     */
    constructor() { 
        
        PredictorMonitorEvaluation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictorMonitorEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictorMonitorEvaluation} obj Optional instance to populate.
     * @return {module:model/PredictorMonitorEvaluation} The populated <code>PredictorMonitorEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictorMonitorEvaluation();

            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
            if (data.hasOwnProperty('MonitorArn')) {
                obj['MonitorArn'] = ApiClient.convertToType(data['MonitorArn'], 'String');
            }
            if (data.hasOwnProperty('EvaluationTime')) {
                obj['EvaluationTime'] = ApiClient.convertToType(data['EvaluationTime'], 'Date');
            }
            if (data.hasOwnProperty('EvaluationState')) {
                obj['EvaluationState'] = ApiClient.convertToType(data['EvaluationState'], 'String');
            }
            if (data.hasOwnProperty('WindowStartDatetime')) {
                obj['WindowStartDatetime'] = ApiClient.convertToType(data['WindowStartDatetime'], 'Date');
            }
            if (data.hasOwnProperty('WindowEndDatetime')) {
                obj['WindowEndDatetime'] = ApiClient.convertToType(data['WindowEndDatetime'], 'Date');
            }
            if (data.hasOwnProperty('PredictorEvent')) {
                obj['PredictorEvent'] = PredictorMonitorEvaluationPredictorEvent.constructFromObject(data['PredictorEvent']);
            }
            if (data.hasOwnProperty('MonitorDataSource')) {
                obj['MonitorDataSource'] = PredictorMonitorEvaluationMonitorDataSource.constructFromObject(data['MonitorDataSource']);
            }
            if (data.hasOwnProperty('MetricResults')) {
                obj['MetricResults'] = ApiClient.convertToType(data['MetricResults'], Array);
            }
            if (data.hasOwnProperty('NumItemsEvaluated')) {
                obj['NumItemsEvaluated'] = ApiClient.convertToType(data['NumItemsEvaluated'], 'Number');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictorMonitorEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictorMonitorEvaluation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ResourceArn`
        if (data['ResourceArn']) { // data not null
          String.validateJSON(data['ResourceArn']);
        }
        // validate the optional field `MonitorArn`
        if (data['MonitorArn']) { // data not null
          String.validateJSON(data['MonitorArn']);
        }
        // validate the optional field `EvaluationTime`
        if (data['EvaluationTime']) { // data not null
          Date.validateJSON(data['EvaluationTime']);
        }
        // validate the optional field `EvaluationState`
        if (data['EvaluationState']) { // data not null
          String.validateJSON(data['EvaluationState']);
        }
        // validate the optional field `WindowStartDatetime`
        if (data['WindowStartDatetime']) { // data not null
          Date.validateJSON(data['WindowStartDatetime']);
        }
        // validate the optional field `WindowEndDatetime`
        if (data['WindowEndDatetime']) { // data not null
          Date.validateJSON(data['WindowEndDatetime']);
        }
        // validate the optional field `PredictorEvent`
        if (data['PredictorEvent']) { // data not null
          PredictorMonitorEvaluationPredictorEvent.validateJSON(data['PredictorEvent']);
        }
        // validate the optional field `MonitorDataSource`
        if (data['MonitorDataSource']) { // data not null
          PredictorMonitorEvaluationMonitorDataSource.validateJSON(data['MonitorDataSource']);
        }
        // validate the optional field `MetricResults`
        if (data['MetricResults']) { // data not null
          Array.validateJSON(data['MetricResults']);
        }
        // validate the optional field `NumItemsEvaluated`
        if (data['NumItemsEvaluated']) { // data not null
          Number.validateJSON(data['NumItemsEvaluated']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }

        return true;
    }


}



/**
 * @member {String} ResourceArn
 */
PredictorMonitorEvaluation.prototype['ResourceArn'] = undefined;

/**
 * @member {String} MonitorArn
 */
PredictorMonitorEvaluation.prototype['MonitorArn'] = undefined;

/**
 * @member {Date} EvaluationTime
 */
PredictorMonitorEvaluation.prototype['EvaluationTime'] = undefined;

/**
 * @member {String} EvaluationState
 */
PredictorMonitorEvaluation.prototype['EvaluationState'] = undefined;

/**
 * @member {Date} WindowStartDatetime
 */
PredictorMonitorEvaluation.prototype['WindowStartDatetime'] = undefined;

/**
 * @member {Date} WindowEndDatetime
 */
PredictorMonitorEvaluation.prototype['WindowEndDatetime'] = undefined;

/**
 * @member {module:model/PredictorMonitorEvaluationPredictorEvent} PredictorEvent
 */
PredictorMonitorEvaluation.prototype['PredictorEvent'] = undefined;

/**
 * @member {module:model/PredictorMonitorEvaluationMonitorDataSource} MonitorDataSource
 */
PredictorMonitorEvaluation.prototype['MonitorDataSource'] = undefined;

/**
 * @member {Array} MetricResults
 */
PredictorMonitorEvaluation.prototype['MetricResults'] = undefined;

/**
 * @member {Number} NumItemsEvaluated
 */
PredictorMonitorEvaluation.prototype['NumItemsEvaluated'] = undefined;

/**
 * @member {String} Message
 */
PredictorMonitorEvaluation.prototype['Message'] = undefined;






export default PredictorMonitorEvaluation;

