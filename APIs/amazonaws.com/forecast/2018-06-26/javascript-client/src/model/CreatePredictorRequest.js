/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoMLOverrideStrategy from './AutoMLOverrideStrategy';
import CreateDatasetRequestEncryptionConfig from './CreateDatasetRequestEncryptionConfig';
import CreatePredictorRequestEvaluationParameters from './CreatePredictorRequestEvaluationParameters';
import CreatePredictorRequestFeaturizationConfig from './CreatePredictorRequestFeaturizationConfig';
import CreatePredictorRequestHPOConfig from './CreatePredictorRequestHPOConfig';
import CreatePredictorRequestInputDataConfig from './CreatePredictorRequestInputDataConfig';
import OptimizationMetric from './OptimizationMetric';

/**
 * The CreatePredictorRequest model module.
 * @module model/CreatePredictorRequest
 * @version 2018-06-26
 */
class CreatePredictorRequest {
    /**
     * Constructs a new <code>CreatePredictorRequest</code>.
     * @alias module:model/CreatePredictorRequest
     * @param predictorName {String} 
     * @param forecastHorizon {Number} 
     * @param inputDataConfig {module:model/CreatePredictorRequestInputDataConfig} 
     * @param featurizationConfig {module:model/CreatePredictorRequestFeaturizationConfig} 
     */
    constructor(predictorName, forecastHorizon, inputDataConfig, featurizationConfig) { 
        
        CreatePredictorRequest.initialize(this, predictorName, forecastHorizon, inputDataConfig, featurizationConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, predictorName, forecastHorizon, inputDataConfig, featurizationConfig) { 
        obj['PredictorName'] = predictorName;
        obj['ForecastHorizon'] = forecastHorizon;
        obj['InputDataConfig'] = inputDataConfig;
        obj['FeaturizationConfig'] = featurizationConfig;
    }

    /**
     * Constructs a <code>CreatePredictorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePredictorRequest} obj Optional instance to populate.
     * @return {module:model/CreatePredictorRequest} The populated <code>CreatePredictorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePredictorRequest();

            if (data.hasOwnProperty('PredictorName')) {
                obj['PredictorName'] = ApiClient.convertToType(data['PredictorName'], 'String');
            }
            if (data.hasOwnProperty('AlgorithmArn')) {
                obj['AlgorithmArn'] = ApiClient.convertToType(data['AlgorithmArn'], 'String');
            }
            if (data.hasOwnProperty('ForecastHorizon')) {
                obj['ForecastHorizon'] = ApiClient.convertToType(data['ForecastHorizon'], 'Number');
            }
            if (data.hasOwnProperty('ForecastTypes')) {
                obj['ForecastTypes'] = ApiClient.convertToType(data['ForecastTypes'], Array);
            }
            if (data.hasOwnProperty('PerformAutoML')) {
                obj['PerformAutoML'] = ApiClient.convertToType(data['PerformAutoML'], 'Boolean');
            }
            if (data.hasOwnProperty('AutoMLOverrideStrategy')) {
                obj['AutoMLOverrideStrategy'] = ApiClient.convertToType(data['AutoMLOverrideStrategy'], AutoMLOverrideStrategy);
            }
            if (data.hasOwnProperty('PerformHPO')) {
                obj['PerformHPO'] = ApiClient.convertToType(data['PerformHPO'], 'Boolean');
            }
            if (data.hasOwnProperty('TrainingParameters')) {
                obj['TrainingParameters'] = ApiClient.convertToType(data['TrainingParameters'], Object);
            }
            if (data.hasOwnProperty('EvaluationParameters')) {
                obj['EvaluationParameters'] = CreatePredictorRequestEvaluationParameters.constructFromObject(data['EvaluationParameters']);
            }
            if (data.hasOwnProperty('HPOConfig')) {
                obj['HPOConfig'] = CreatePredictorRequestHPOConfig.constructFromObject(data['HPOConfig']);
            }
            if (data.hasOwnProperty('InputDataConfig')) {
                obj['InputDataConfig'] = CreatePredictorRequestInputDataConfig.constructFromObject(data['InputDataConfig']);
            }
            if (data.hasOwnProperty('FeaturizationConfig')) {
                obj['FeaturizationConfig'] = CreatePredictorRequestFeaturizationConfig.constructFromObject(data['FeaturizationConfig']);
            }
            if (data.hasOwnProperty('EncryptionConfig')) {
                obj['EncryptionConfig'] = CreateDatasetRequestEncryptionConfig.constructFromObject(data['EncryptionConfig']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('OptimizationMetric')) {
                obj['OptimizationMetric'] = ApiClient.convertToType(data['OptimizationMetric'], OptimizationMetric);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePredictorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePredictorRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePredictorRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PredictorName`
        if (data['PredictorName']) { // data not null
          String.validateJSON(data['PredictorName']);
        }
        // validate the optional field `AlgorithmArn`
        if (data['AlgorithmArn']) { // data not null
          String.validateJSON(data['AlgorithmArn']);
        }
        // validate the optional field `ForecastHorizon`
        if (data['ForecastHorizon']) { // data not null
          Number.validateJSON(data['ForecastHorizon']);
        }
        // validate the optional field `ForecastTypes`
        if (data['ForecastTypes']) { // data not null
          Array.validateJSON(data['ForecastTypes']);
        }
        // validate the optional field `PerformAutoML`
        if (data['PerformAutoML']) { // data not null
          Boolean.validateJSON(data['PerformAutoML']);
        }
        // validate the optional field `AutoMLOverrideStrategy`
        if (data['AutoMLOverrideStrategy']) { // data not null
          AutoMLOverrideStrategy.validateJSON(data['AutoMLOverrideStrategy']);
        }
        // validate the optional field `PerformHPO`
        if (data['PerformHPO']) { // data not null
          Boolean.validateJSON(data['PerformHPO']);
        }
        // validate the optional field `TrainingParameters`
        if (data['TrainingParameters']) { // data not null
          Object.validateJSON(data['TrainingParameters']);
        }
        // validate the optional field `EvaluationParameters`
        if (data['EvaluationParameters']) { // data not null
          CreatePredictorRequestEvaluationParameters.validateJSON(data['EvaluationParameters']);
        }
        // validate the optional field `HPOConfig`
        if (data['HPOConfig']) { // data not null
          CreatePredictorRequestHPOConfig.validateJSON(data['HPOConfig']);
        }
        // validate the optional field `InputDataConfig`
        if (data['InputDataConfig']) { // data not null
          CreatePredictorRequestInputDataConfig.validateJSON(data['InputDataConfig']);
        }
        // validate the optional field `FeaturizationConfig`
        if (data['FeaturizationConfig']) { // data not null
          CreatePredictorRequestFeaturizationConfig.validateJSON(data['FeaturizationConfig']);
        }
        // validate the optional field `EncryptionConfig`
        if (data['EncryptionConfig']) { // data not null
          CreateDatasetRequestEncryptionConfig.validateJSON(data['EncryptionConfig']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `OptimizationMetric`
        if (data['OptimizationMetric']) { // data not null
          OptimizationMetric.validateJSON(data['OptimizationMetric']);
        }

        return true;
    }


}

CreatePredictorRequest.RequiredProperties = ["PredictorName", "ForecastHorizon", "InputDataConfig", "FeaturizationConfig"];

/**
 * @member {String} PredictorName
 */
CreatePredictorRequest.prototype['PredictorName'] = undefined;

/**
 * @member {String} AlgorithmArn
 */
CreatePredictorRequest.prototype['AlgorithmArn'] = undefined;

/**
 * @member {Number} ForecastHorizon
 */
CreatePredictorRequest.prototype['ForecastHorizon'] = undefined;

/**
 * @member {Array} ForecastTypes
 */
CreatePredictorRequest.prototype['ForecastTypes'] = undefined;

/**
 * @member {Boolean} PerformAutoML
 */
CreatePredictorRequest.prototype['PerformAutoML'] = undefined;

/**
 * @member {module:model/AutoMLOverrideStrategy} AutoMLOverrideStrategy
 */
CreatePredictorRequest.prototype['AutoMLOverrideStrategy'] = undefined;

/**
 * @member {Boolean} PerformHPO
 */
CreatePredictorRequest.prototype['PerformHPO'] = undefined;

/**
 * @member {Object} TrainingParameters
 */
CreatePredictorRequest.prototype['TrainingParameters'] = undefined;

/**
 * @member {module:model/CreatePredictorRequestEvaluationParameters} EvaluationParameters
 */
CreatePredictorRequest.prototype['EvaluationParameters'] = undefined;

/**
 * @member {module:model/CreatePredictorRequestHPOConfig} HPOConfig
 */
CreatePredictorRequest.prototype['HPOConfig'] = undefined;

/**
 * @member {module:model/CreatePredictorRequestInputDataConfig} InputDataConfig
 */
CreatePredictorRequest.prototype['InputDataConfig'] = undefined;

/**
 * @member {module:model/CreatePredictorRequestFeaturizationConfig} FeaturizationConfig
 */
CreatePredictorRequest.prototype['FeaturizationConfig'] = undefined;

/**
 * @member {module:model/CreateDatasetRequestEncryptionConfig} EncryptionConfig
 */
CreatePredictorRequest.prototype['EncryptionConfig'] = undefined;

/**
 * @member {Array} Tags
 */
CreatePredictorRequest.prototype['Tags'] = undefined;

/**
 * @member {module:model/OptimizationMetric} OptimizationMetric
 */
CreatePredictorRequest.prototype['OptimizationMetric'] = undefined;






export default CreatePredictorRequest;

