/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EvaluationParameters model module.
 * @module model/EvaluationParameters
 * @version 2018-06-26
 */
class EvaluationParameters {
    /**
     * Constructs a new <code>EvaluationParameters</code>.
     * Parameters that define how to split a dataset into training data and testing data, and the number of iterations to perform. These parameters are specified in the predefined algorithms but you can override them in the &lt;a&gt;CreatePredictor&lt;/a&gt; request.
     * @alias module:model/EvaluationParameters
     */
    constructor() { 
        
        EvaluationParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EvaluationParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EvaluationParameters} obj Optional instance to populate.
     * @return {module:model/EvaluationParameters} The populated <code>EvaluationParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EvaluationParameters();

            if (data.hasOwnProperty('NumberOfBacktestWindows')) {
                obj['NumberOfBacktestWindows'] = ApiClient.convertToType(data['NumberOfBacktestWindows'], 'Number');
            }
            if (data.hasOwnProperty('BackTestWindowOffset')) {
                obj['BackTestWindowOffset'] = ApiClient.convertToType(data['BackTestWindowOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EvaluationParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EvaluationParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `NumberOfBacktestWindows`
        if (data['NumberOfBacktestWindows']) { // data not null
          Number.validateJSON(data['NumberOfBacktestWindows']);
        }
        // validate the optional field `BackTestWindowOffset`
        if (data['BackTestWindowOffset']) { // data not null
          Number.validateJSON(data['BackTestWindowOffset']);
        }

        return true;
    }


}



/**
 * @member {Number} NumberOfBacktestWindows
 */
EvaluationParameters.prototype['NumberOfBacktestWindows'] = undefined;

/**
 * @member {Number} BackTestWindowOffset
 */
EvaluationParameters.prototype['BackTestWindowOffset'] = undefined;






export default EvaluationParameters;

