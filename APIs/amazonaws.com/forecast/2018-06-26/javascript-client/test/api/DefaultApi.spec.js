/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonForecastService);
  }
}(this, function(expect, AmazonForecastService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonForecastService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createAutoPredictor', function() {
      it('should call createAutoPredictor successfully', function(done) {
        //uncomment below and update the code to test createAutoPredictor
        //instance.createAutoPredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataset', function() {
      it('should call createDataset successfully', function(done) {
        //uncomment below and update the code to test createDataset
        //instance.createDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDatasetGroup', function() {
      it('should call createDatasetGroup successfully', function(done) {
        //uncomment below and update the code to test createDatasetGroup
        //instance.createDatasetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDatasetImportJob', function() {
      it('should call createDatasetImportJob successfully', function(done) {
        //uncomment below and update the code to test createDatasetImportJob
        //instance.createDatasetImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExplainability', function() {
      it('should call createExplainability successfully', function(done) {
        //uncomment below and update the code to test createExplainability
        //instance.createExplainability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExplainabilityExport', function() {
      it('should call createExplainabilityExport successfully', function(done) {
        //uncomment below and update the code to test createExplainabilityExport
        //instance.createExplainabilityExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createForecast', function() {
      it('should call createForecast successfully', function(done) {
        //uncomment below and update the code to test createForecast
        //instance.createForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createForecastExportJob', function() {
      it('should call createForecastExportJob successfully', function(done) {
        //uncomment below and update the code to test createForecastExportJob
        //instance.createForecastExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMonitor', function() {
      it('should call createMonitor successfully', function(done) {
        //uncomment below and update the code to test createMonitor
        //instance.createMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPredictor', function() {
      it('should call createPredictor successfully', function(done) {
        //uncomment below and update the code to test createPredictor
        //instance.createPredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPredictorBacktestExportJob', function() {
      it('should call createPredictorBacktestExportJob successfully', function(done) {
        //uncomment below and update the code to test createPredictorBacktestExportJob
        //instance.createPredictorBacktestExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWhatIfAnalysis', function() {
      it('should call createWhatIfAnalysis successfully', function(done) {
        //uncomment below and update the code to test createWhatIfAnalysis
        //instance.createWhatIfAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWhatIfForecast', function() {
      it('should call createWhatIfForecast successfully', function(done) {
        //uncomment below and update the code to test createWhatIfForecast
        //instance.createWhatIfForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWhatIfForecastExport', function() {
      it('should call createWhatIfForecastExport successfully', function(done) {
        //uncomment below and update the code to test createWhatIfForecastExport
        //instance.createWhatIfForecastExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataset', function() {
      it('should call deleteDataset successfully', function(done) {
        //uncomment below and update the code to test deleteDataset
        //instance.deleteDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDatasetGroup', function() {
      it('should call deleteDatasetGroup successfully', function(done) {
        //uncomment below and update the code to test deleteDatasetGroup
        //instance.deleteDatasetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDatasetImportJob', function() {
      it('should call deleteDatasetImportJob successfully', function(done) {
        //uncomment below and update the code to test deleteDatasetImportJob
        //instance.deleteDatasetImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExplainability', function() {
      it('should call deleteExplainability successfully', function(done) {
        //uncomment below and update the code to test deleteExplainability
        //instance.deleteExplainability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExplainabilityExport', function() {
      it('should call deleteExplainabilityExport successfully', function(done) {
        //uncomment below and update the code to test deleteExplainabilityExport
        //instance.deleteExplainabilityExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteForecast', function() {
      it('should call deleteForecast successfully', function(done) {
        //uncomment below and update the code to test deleteForecast
        //instance.deleteForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteForecastExportJob', function() {
      it('should call deleteForecastExportJob successfully', function(done) {
        //uncomment below and update the code to test deleteForecastExportJob
        //instance.deleteForecastExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMonitor', function() {
      it('should call deleteMonitor successfully', function(done) {
        //uncomment below and update the code to test deleteMonitor
        //instance.deleteMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePredictor', function() {
      it('should call deletePredictor successfully', function(done) {
        //uncomment below and update the code to test deletePredictor
        //instance.deletePredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePredictorBacktestExportJob', function() {
      it('should call deletePredictorBacktestExportJob successfully', function(done) {
        //uncomment below and update the code to test deletePredictorBacktestExportJob
        //instance.deletePredictorBacktestExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourceTree', function() {
      it('should call deleteResourceTree successfully', function(done) {
        //uncomment below and update the code to test deleteResourceTree
        //instance.deleteResourceTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWhatIfAnalysis', function() {
      it('should call deleteWhatIfAnalysis successfully', function(done) {
        //uncomment below and update the code to test deleteWhatIfAnalysis
        //instance.deleteWhatIfAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWhatIfForecast', function() {
      it('should call deleteWhatIfForecast successfully', function(done) {
        //uncomment below and update the code to test deleteWhatIfForecast
        //instance.deleteWhatIfForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWhatIfForecastExport', function() {
      it('should call deleteWhatIfForecastExport successfully', function(done) {
        //uncomment below and update the code to test deleteWhatIfForecastExport
        //instance.deleteWhatIfForecastExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAutoPredictor', function() {
      it('should call describeAutoPredictor successfully', function(done) {
        //uncomment below and update the code to test describeAutoPredictor
        //instance.describeAutoPredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDataset', function() {
      it('should call describeDataset successfully', function(done) {
        //uncomment below and update the code to test describeDataset
        //instance.describeDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDatasetGroup', function() {
      it('should call describeDatasetGroup successfully', function(done) {
        //uncomment below and update the code to test describeDatasetGroup
        //instance.describeDatasetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDatasetImportJob', function() {
      it('should call describeDatasetImportJob successfully', function(done) {
        //uncomment below and update the code to test describeDatasetImportJob
        //instance.describeDatasetImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeExplainability', function() {
      it('should call describeExplainability successfully', function(done) {
        //uncomment below and update the code to test describeExplainability
        //instance.describeExplainability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeExplainabilityExport', function() {
      it('should call describeExplainabilityExport successfully', function(done) {
        //uncomment below and update the code to test describeExplainabilityExport
        //instance.describeExplainabilityExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeForecast', function() {
      it('should call describeForecast successfully', function(done) {
        //uncomment below and update the code to test describeForecast
        //instance.describeForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeForecastExportJob', function() {
      it('should call describeForecastExportJob successfully', function(done) {
        //uncomment below and update the code to test describeForecastExportJob
        //instance.describeForecastExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeMonitor', function() {
      it('should call describeMonitor successfully', function(done) {
        //uncomment below and update the code to test describeMonitor
        //instance.describeMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePredictor', function() {
      it('should call describePredictor successfully', function(done) {
        //uncomment below and update the code to test describePredictor
        //instance.describePredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePredictorBacktestExportJob', function() {
      it('should call describePredictorBacktestExportJob successfully', function(done) {
        //uncomment below and update the code to test describePredictorBacktestExportJob
        //instance.describePredictorBacktestExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeWhatIfAnalysis', function() {
      it('should call describeWhatIfAnalysis successfully', function(done) {
        //uncomment below and update the code to test describeWhatIfAnalysis
        //instance.describeWhatIfAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeWhatIfForecast', function() {
      it('should call describeWhatIfForecast successfully', function(done) {
        //uncomment below and update the code to test describeWhatIfForecast
        //instance.describeWhatIfForecast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeWhatIfForecastExport', function() {
      it('should call describeWhatIfForecastExport successfully', function(done) {
        //uncomment below and update the code to test describeWhatIfForecastExport
        //instance.describeWhatIfForecastExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccuracyMetrics', function() {
      it('should call getAccuracyMetrics successfully', function(done) {
        //uncomment below and update the code to test getAccuracyMetrics
        //instance.getAccuracyMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatasetGroups', function() {
      it('should call listDatasetGroups successfully', function(done) {
        //uncomment below and update the code to test listDatasetGroups
        //instance.listDatasetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatasetImportJobs', function() {
      it('should call listDatasetImportJobs successfully', function(done) {
        //uncomment below and update the code to test listDatasetImportJobs
        //instance.listDatasetImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatasets', function() {
      it('should call listDatasets successfully', function(done) {
        //uncomment below and update the code to test listDatasets
        //instance.listDatasets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExplainabilities', function() {
      it('should call listExplainabilities successfully', function(done) {
        //uncomment below and update the code to test listExplainabilities
        //instance.listExplainabilities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExplainabilityExports', function() {
      it('should call listExplainabilityExports successfully', function(done) {
        //uncomment below and update the code to test listExplainabilityExports
        //instance.listExplainabilityExports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listForecastExportJobs', function() {
      it('should call listForecastExportJobs successfully', function(done) {
        //uncomment below and update the code to test listForecastExportJobs
        //instance.listForecastExportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listForecasts', function() {
      it('should call listForecasts successfully', function(done) {
        //uncomment below and update the code to test listForecasts
        //instance.listForecasts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitorEvaluations', function() {
      it('should call listMonitorEvaluations successfully', function(done) {
        //uncomment below and update the code to test listMonitorEvaluations
        //instance.listMonitorEvaluations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitors', function() {
      it('should call listMonitors successfully', function(done) {
        //uncomment below and update the code to test listMonitors
        //instance.listMonitors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPredictorBacktestExportJobs', function() {
      it('should call listPredictorBacktestExportJobs successfully', function(done) {
        //uncomment below and update the code to test listPredictorBacktestExportJobs
        //instance.listPredictorBacktestExportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPredictors', function() {
      it('should call listPredictors successfully', function(done) {
        //uncomment below and update the code to test listPredictors
        //instance.listPredictors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWhatIfAnalyses', function() {
      it('should call listWhatIfAnalyses successfully', function(done) {
        //uncomment below and update the code to test listWhatIfAnalyses
        //instance.listWhatIfAnalyses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWhatIfForecastExports', function() {
      it('should call listWhatIfForecastExports successfully', function(done) {
        //uncomment below and update the code to test listWhatIfForecastExports
        //instance.listWhatIfForecastExports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWhatIfForecasts', function() {
      it('should call listWhatIfForecasts successfully', function(done) {
        //uncomment below and update the code to test listWhatIfForecasts
        //instance.listWhatIfForecasts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resumeResource', function() {
      it('should call resumeResource successfully', function(done) {
        //uncomment below and update the code to test resumeResource
        //instance.resumeResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopResource', function() {
      it('should call stopResource successfully', function(done) {
        //uncomment below and update the code to test stopResource
        //instance.stopResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDatasetGroup', function() {
      it('should call updateDatasetGroup successfully', function(done) {
        //uncomment below and update the code to test updateDatasetGroup
        //instance.updateDatasetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
