/**
 * Amazon Forecast Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonForecastService);
  }
}(this, function(expect, AmazonForecastService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeWhatIfAnalysisResponse', function() {
    it('should create an instance of DescribeWhatIfAnalysisResponse', function() {
      // uncomment below and update the code to test DescribeWhatIfAnalysisResponse
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be.a(AmazonForecastService.DescribeWhatIfAnalysisResponse);
    });

    it('should have the property whatIfAnalysisName (base name: "WhatIfAnalysisName")', function() {
      // uncomment below and update the code to test the property whatIfAnalysisName
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property whatIfAnalysisArn (base name: "WhatIfAnalysisArn")', function() {
      // uncomment below and update the code to test the property whatIfAnalysisArn
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property forecastArn (base name: "ForecastArn")', function() {
      // uncomment below and update the code to test the property forecastArn
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property estimatedTimeRemainingInMinutes (base name: "EstimatedTimeRemainingInMinutes")', function() {
      // uncomment below and update the code to test the property estimatedTimeRemainingInMinutes
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "Message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "CreationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastModificationTime (base name: "LastModificationTime")', function() {
      // uncomment below and update the code to test the property lastModificationTime
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesSelector (base name: "TimeSeriesSelector")', function() {
      // uncomment below and update the code to test the property timeSeriesSelector
      //var instance = new AmazonForecastService.DescribeWhatIfAnalysisResponse();
      //expect(instance).to.be();
    });

  });

}));
