/**
 * AWSMarketplace Metering
 * <fullname>AWS Marketplace Metering Service</fullname> <p>This reference provides descriptions of the low-level AWS Marketplace Metering Service API.</p> <p>AWS Marketplace sellers can use this API to submit usage data for custom usage dimensions.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/marketplace/latest/userguide/iam-user-policy-for-aws-marketplace-actions.html\">AWS Marketplace metering and entitlement API permissions</a> in the <i>AWS Marketplace Seller Guide.</i> </p> <p> <b>Submitting Metering Records</b> </p> <ul> <li> <p> <i>MeterUsage</i> - Submits the metering record for an AWS Marketplace product. <code>MeterUsage</code> is called from an EC2 instance or a container running on EKS or ECS.</p> </li> <li> <p> <i>BatchMeterUsage</i> - Submits the metering record for a set of customers. <code>BatchMeterUsage</code> is called from a software-as-a-service (SaaS) application.</p> </li> </ul> <p> <b>Accepting New Customers</b> </p> <ul> <li> <p> <i>ResolveCustomer</i> - Called by a SaaS application during the registration process. When a buyer visits your website during the registration process, the buyer submits a Registration Token through the browser. The Registration Token is resolved through this API to obtain a <code>CustomerIdentifier</code> along with the <code>CustomerAWSAccountId</code> and <code>ProductCode</code>.</p> </li> </ul> <p> <b>Entitlement and Metering for Paid Container Products</b> </p> <ul> <li> <p>Paid container software products sold through AWS Marketplace must integrate with the AWS Marketplace Metering Service and call the <code>RegisterUsage</code> operation for software entitlement and metering. Free and BYOL products for Amazon ECS or Amazon EKS aren't required to call <code>RegisterUsage</code>, but you can do so if you want to receive usage data in your seller reports. For more information on using the <code>RegisterUsage</code> operation, see <a href=\"https://docs.aws.amazon.com/marketplace/latest/userguide/container-based-products.html\">Container-Based Products</a>. </p> </li> </ul> <p> <code>BatchMeterUsage</code> API calls are captured by AWS CloudTrail. You can use Cloudtrail to verify that the SaaS metering records that you sent are accurate by searching for records with the <code>eventName</code> of <code>BatchMeterUsage</code>. You can also use CloudTrail to audit records over time. For more information, see the <i> <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html\">AWS CloudTrail User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResolveCustomerResult model module.
 * @module model/ResolveCustomerResult
 * @version 2016-01-14
 */
class ResolveCustomerResult {
    /**
     * Constructs a new <code>ResolveCustomerResult</code>.
     * The result of the &lt;code&gt;ResolveCustomer&lt;/code&gt; operation. Contains the &lt;code&gt;CustomerIdentifier&lt;/code&gt; along with the &lt;code&gt;CustomerAWSAccountId&lt;/code&gt; and &lt;code&gt;ProductCode&lt;/code&gt;.
     * @alias module:model/ResolveCustomerResult
     */
    constructor() { 
        
        ResolveCustomerResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResolveCustomerResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResolveCustomerResult} obj Optional instance to populate.
     * @return {module:model/ResolveCustomerResult} The populated <code>ResolveCustomerResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResolveCustomerResult();

            if (data.hasOwnProperty('CustomerIdentifier')) {
                obj['CustomerIdentifier'] = ApiClient.convertToType(data['CustomerIdentifier'], 'String');
            }
            if (data.hasOwnProperty('ProductCode')) {
                obj['ProductCode'] = ApiClient.convertToType(data['ProductCode'], 'String');
            }
            if (data.hasOwnProperty('CustomerAWSAccountId')) {
                obj['CustomerAWSAccountId'] = ApiClient.convertToType(data['CustomerAWSAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResolveCustomerResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResolveCustomerResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CustomerIdentifier`
        if (data['CustomerIdentifier']) { // data not null
          String.validateJSON(data['CustomerIdentifier']);
        }
        // validate the optional field `ProductCode`
        if (data['ProductCode']) { // data not null
          String.validateJSON(data['ProductCode']);
        }
        // validate the optional field `CustomerAWSAccountId`
        if (data['CustomerAWSAccountId']) { // data not null
          String.validateJSON(data['CustomerAWSAccountId']);
        }

        return true;
    }


}



/**
 * @member {String} CustomerIdentifier
 */
ResolveCustomerResult.prototype['CustomerIdentifier'] = undefined;

/**
 * @member {String} ProductCode
 */
ResolveCustomerResult.prototype['ProductCode'] = undefined;

/**
 * @member {String} CustomerAWSAccountId
 */
ResolveCustomerResult.prototype['CustomerAWSAccountId'] = undefined;






export default ResolveCustomerResult;

