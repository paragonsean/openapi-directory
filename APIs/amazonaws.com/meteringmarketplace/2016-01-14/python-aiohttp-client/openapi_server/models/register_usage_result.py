# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterUsageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_key_rotation_timestamp: datetime=None, signature: str=None):
        """RegisterUsageResult - a model defined in OpenAPI

        :param public_key_rotation_timestamp: The public_key_rotation_timestamp of this RegisterUsageResult.
        :param signature: The signature of this RegisterUsageResult.
        """
        self.openapi_types = {
            'public_key_rotation_timestamp': datetime,
            'signature': str
        }

        self.attribute_map = {
            'public_key_rotation_timestamp': 'PublicKeyRotationTimestamp',
            'signature': 'Signature'
        }

        self._public_key_rotation_timestamp = public_key_rotation_timestamp
        self._signature = signature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterUsageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterUsageResult of this RegisterUsageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_key_rotation_timestamp(self):
        """Gets the public_key_rotation_timestamp of this RegisterUsageResult.


        :return: The public_key_rotation_timestamp of this RegisterUsageResult.
        :rtype: datetime
        """
        return self._public_key_rotation_timestamp

    @public_key_rotation_timestamp.setter
    def public_key_rotation_timestamp(self, public_key_rotation_timestamp):
        """Sets the public_key_rotation_timestamp of this RegisterUsageResult.


        :param public_key_rotation_timestamp: The public_key_rotation_timestamp of this RegisterUsageResult.
        :type public_key_rotation_timestamp: datetime
        """

        self._public_key_rotation_timestamp = public_key_rotation_timestamp

    @property
    def signature(self):
        """Gets the signature of this RegisterUsageResult.


        :return: The signature of this RegisterUsageResult.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this RegisterUsageResult.


        :param signature: The signature of this RegisterUsageResult.
        :type signature: str
        """

        self._signature = signature
