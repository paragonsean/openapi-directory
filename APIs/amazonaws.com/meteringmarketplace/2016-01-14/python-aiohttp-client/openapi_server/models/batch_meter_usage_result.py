# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchMeterUsageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List=None, unprocessed_records: List=None):
        """BatchMeterUsageResult - a model defined in OpenAPI

        :param results: The results of this BatchMeterUsageResult.
        :param unprocessed_records: The unprocessed_records of this BatchMeterUsageResult.
        """
        self.openapi_types = {
            'results': List,
            'unprocessed_records': List
        }

        self.attribute_map = {
            'results': 'Results',
            'unprocessed_records': 'UnprocessedRecords'
        }

        self._results = results
        self._unprocessed_records = unprocessed_records

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchMeterUsageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchMeterUsageResult of this BatchMeterUsageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this BatchMeterUsageResult.


        :return: The results of this BatchMeterUsageResult.
        :rtype: List
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this BatchMeterUsageResult.


        :param results: The results of this BatchMeterUsageResult.
        :type results: List
        """

        self._results = results

    @property
    def unprocessed_records(self):
        """Gets the unprocessed_records of this BatchMeterUsageResult.


        :return: The unprocessed_records of this BatchMeterUsageResult.
        :rtype: List
        """
        return self._unprocessed_records

    @unprocessed_records.setter
    def unprocessed_records(self, unprocessed_records):
        """Sets the unprocessed_records of this BatchMeterUsageResult.


        :param unprocessed_records: The unprocessed_records of this BatchMeterUsageResult.
        :type unprocessed_records: List
        """

        self._unprocessed_records = unprocessed_records
