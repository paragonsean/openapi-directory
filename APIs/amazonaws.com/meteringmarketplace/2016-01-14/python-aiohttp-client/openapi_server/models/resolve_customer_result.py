# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResolveCustomerResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_identifier: str=None, product_code: str=None, customer_aws_account_id: str=None):
        """ResolveCustomerResult - a model defined in OpenAPI

        :param customer_identifier: The customer_identifier of this ResolveCustomerResult.
        :param product_code: The product_code of this ResolveCustomerResult.
        :param customer_aws_account_id: The customer_aws_account_id of this ResolveCustomerResult.
        """
        self.openapi_types = {
            'customer_identifier': str,
            'product_code': str,
            'customer_aws_account_id': str
        }

        self.attribute_map = {
            'customer_identifier': 'CustomerIdentifier',
            'product_code': 'ProductCode',
            'customer_aws_account_id': 'CustomerAWSAccountId'
        }

        self._customer_identifier = customer_identifier
        self._product_code = product_code
        self._customer_aws_account_id = customer_aws_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResolveCustomerResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResolveCustomerResult of this ResolveCustomerResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_identifier(self):
        """Gets the customer_identifier of this ResolveCustomerResult.


        :return: The customer_identifier of this ResolveCustomerResult.
        :rtype: str
        """
        return self._customer_identifier

    @customer_identifier.setter
    def customer_identifier(self, customer_identifier):
        """Sets the customer_identifier of this ResolveCustomerResult.


        :param customer_identifier: The customer_identifier of this ResolveCustomerResult.
        :type customer_identifier: str
        """

        self._customer_identifier = customer_identifier

    @property
    def product_code(self):
        """Gets the product_code of this ResolveCustomerResult.


        :return: The product_code of this ResolveCustomerResult.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this ResolveCustomerResult.


        :param product_code: The product_code of this ResolveCustomerResult.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def customer_aws_account_id(self):
        """Gets the customer_aws_account_id of this ResolveCustomerResult.


        :return: The customer_aws_account_id of this ResolveCustomerResult.
        :rtype: str
        """
        return self._customer_aws_account_id

    @customer_aws_account_id.setter
    def customer_aws_account_id(self, customer_aws_account_id):
        """Sets the customer_aws_account_id of this ResolveCustomerResult.


        :param customer_aws_account_id: The customer_aws_account_id of this ResolveCustomerResult.
        :type customer_aws_account_id: str
        """

        self._customer_aws_account_id = customer_aws_account_id
