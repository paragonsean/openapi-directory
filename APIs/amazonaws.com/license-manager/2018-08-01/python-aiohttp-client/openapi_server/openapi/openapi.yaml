openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: License Manager makes it easier to manage licenses from software vendors
    across multiple Amazon Web Services accounts and on-premises servers.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS License Manager
  version: 2018-08-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: license-manager
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/license-manager/
servers:
- description: The AWS License Manager multi-region endpoint
  url: "http://license-manager.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS License Manager multi-region endpoint
  url: "https://license-manager.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  url: "http://license-manager.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  url: "https://license-manager.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSLicenseManager.AcceptGrant:
    post:
      description: Accepts the specified grant.
      operationId: accept_grant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.AcceptGrant
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptGrantRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptGrantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CheckInLicense:
    post:
      description: Checks in the specified license. Check in a license when it is
        no longer in use.
      operationId: check_in_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CheckInLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CheckoutBorrowLicense:
    post:
      description: Checks out the specified license for offline use.
      operationId: checkout_borrow_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CheckoutBorrowLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutBorrowLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutBorrowLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoEntitlementsAllowedException'
          description: NoEntitlementsAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotAllowedException'
          description: EntitlementNotAllowedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'
          description: UnsupportedDigitalSignatureMethodException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CheckoutLicense:
    post:
      description: "<p>Checks out the specified license.</p> <note> <p>If the account\
        \ that created the license is the same that is performing the check out, you\
        \ must specify the account as the beneficiary.</p> </note>"
      operationId: checkout_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CheckoutLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoEntitlementsAllowedException'
          description: NoEntitlementsAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'
          description: UnsupportedDigitalSignatureMethodException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateGrant:
    post:
      description: "Creates a grant for the specified license. A grant shares the\
        \ use of license entitlements with a specific Amazon Web Services account,\
        \ an organization, or an organizational unit (OU). For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/granted-licenses.html\"\
        >Granted licenses in License Manager</a> in the <i>License Manager User Guide</i>."
      operationId: create_grant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateGrant
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGrantRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGrantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateGrantVersion:
    post:
      description: "Creates a new version of the specified grant. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/granted-licenses.html\"\
        >Granted licenses in License Manager</a> in the <i>License Manager User Guide</i>."
      operationId: create_grant_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateGrantVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGrantVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGrantVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateLicense:
    post:
      description: Creates a license.
      operationId: create_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration:
    post:
      description: "<p>Creates a license configuration.</p> <p>A license configuration\
        \ is an abstraction of a customer license agreement that can be consumed and\
        \ enforced by License Manager. Components include specifications for the license\
        \ type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared\
        \ tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity\
        \ to host (how long a license must be associated with a host), and the number\
        \ of licenses purchased and used.</p>"
      operationId: create_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseConversionTaskForResource:
    post:
      description: Creates a new license conversion task.
      operationId: create_license_conversion_task_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateLicenseConversionTaskForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseConversionTaskForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseConversionTaskForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseManagerReportGenerator:
    post:
      description: Creates a report generator.
      operationId: create_license_manager_report_generator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateLicenseManagerReportGenerator
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseVersion:
    post:
      description: Creates a new version of the specified license.
      operationId: create_license_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateLicenseVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.CreateToken:
    post:
      description: "<p>Creates a long-lived token.</p> <p>A refresh token is a JWT\
        \ token used to get an access token. With an access token, you can call AssumeRoleWithWebIdentity\
        \ to get role credentials that you can use to call License Manager to manage\
        \ the specified license.</p>"
      operationId: create_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.CreateToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.DeleteGrant:
    post:
      description: Deletes the specified grant.
      operationId: delete_grant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.DeleteGrant
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGrantRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGrantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.DeleteLicense:
    post:
      description: Deletes the specified license.
      operationId: delete_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.DeleteLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration:
    post:
      description: <p>Deletes the specified license configuration.</p> <p>You cannot
        delete a license configuration that is in use.</p>
      operationId: delete_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.DeleteLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseManagerReportGenerator:
    post:
      description: "<p>Deletes the specified report generator.</p> <p>This action\
        \ deletes the report generator, which stops it from generating future reports.\
        \ The action cannot be reversed. It has no effect on the previous reports\
        \ from this generator.</p>"
      operationId: delete_license_manager_report_generator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.DeleteLicenseManagerReportGenerator
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.DeleteToken:
    post:
      description: Deletes the specified token. Must be called in the license home
        Region.
      operationId: delete_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.DeleteToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
          description: RedirectException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ExtendLicenseConsumption:
    post:
      description: Extends the expiration date for license consumption.
      operationId: extend_license_consumption
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ExtendLicenseConsumption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendLicenseConsumptionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendLicenseConsumptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetAccessToken:
    post:
      description: Gets a temporary access token to use with AssumeRoleWithWebIdentity.
        Access tokens are valid for one hour.
      operationId: get_access_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetAccessToken
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessTokenRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetGrant:
    post:
      description: Gets detailed information about the specified grant.
      operationId: get_grant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetGrant
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGrantRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGrantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetLicense:
    post:
      description: Gets detailed information about the specified license.
      operationId: get_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetLicense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration:
    post:
      description: Gets detailed information about the specified license configuration.
      operationId: get_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetLicenseConversionTask:
    post:
      description: Gets information about the specified license type conversion task.
      operationId: get_license_conversion_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetLicenseConversionTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseConversionTaskRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseConversionTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetLicenseManagerReportGenerator:
    post:
      description: Gets information about the specified report generator.
      operationId: get_license_manager_report_generator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetLicenseManagerReportGenerator
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseManagerReportGeneratorRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseManagerReportGeneratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetLicenseUsage:
    post:
      description: Gets detailed information about the usage of the specified license.
      operationId: get_license_usage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetLicenseUsage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseUsageRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseUsageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.GetServiceSettings:
    post:
      description: Gets the License Manager settings for the current Region.
      operationId: get_service_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.GetServiceSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration:
    post:
      description: "<p>Lists the resource associations for the specified license configuration.</p>\
        \ <p>Resource associations need not consume licenses from a license configuration.\
        \ For example, an AMI or a stopped instance might not consume a license (depending\
        \ on the license rules).</p>"
      operationId: list_associations_for_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListAssociationsForLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
          description: FilterLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListDistributedGrants:
    post:
      description: Lists the grants distributed for the specified license.
      operationId: list_distributed_grants
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListDistributedGrants
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDistributedGrantsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDistributedGrantsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListFailuresForLicenseConfigurationOperations:
    post:
      description: Lists the license configuration operations that failed.
      operationId: list_failures_for_license_configuration_operations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListFailuresForLicenseConfigurationOperations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations:
    post:
      description: Lists the license configurations for your account.
      operationId: list_license_configurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenseConfigurations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseConfigurationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
          description: FilterLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenseConversionTasks:
    post:
      description: Lists the license type conversion tasks for your account.
      operationId: list_license_conversion_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenseConversionTasks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseConversionTasksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseConversionTasksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenseManagerReportGenerators:
    post:
      description: Lists the report generators for your account.
      operationId: list_license_manager_report_generators
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenseManagerReportGenerators
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource:
    post:
      description: Describes the license configurations for the specified resource.
      operationId: list_license_specifications_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenseSpecificationsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseSpecificationsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseSpecificationsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenseVersions:
    post:
      description: Lists all versions of the specified license.
      operationId: list_license_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenseVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseVersionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListLicenses:
    post:
      description: Lists the licenses for your account.
      operationId: list_licenses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListLicenses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicensesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicensesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListReceivedGrants:
    post:
      description: "Lists grants that are received. Received grants are grants created\
        \ while specifying the recipient as this Amazon Web Services account, your\
        \ organization, or an organizational unit (OU) to which this member account\
        \ belongs."
      operationId: list_received_grants
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListReceivedGrants
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedGrantsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedGrantsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListReceivedGrantsForOrganization:
    post:
      description: Lists the grants received for all accounts in the organization.
      operationId: list_received_grants_for_organization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListReceivedGrantsForOrganization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedGrantsForOrganizationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedGrantsForOrganizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListReceivedLicenses:
    post:
      description: Lists received licenses.
      operationId: list_received_licenses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListReceivedLicenses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedLicensesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedLicensesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListReceivedLicensesForOrganization:
    post:
      description: Lists the licenses received for all accounts in the organization.
      operationId: list_received_licenses_for_organization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListReceivedLicensesForOrganization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedLicensesForOrganizationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedLicensesForOrganizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListResourceInventory:
    post:
      description: Lists resources managed using Systems Manager inventory.
      operationId: list_resource_inventory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListResourceInventory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceInventoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceInventoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
          description: FilterLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
          description: FailedDependencyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListTagsForResource:
    post:
      description: Lists the tags for the specified license configuration.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListTokens:
    post:
      description: Lists your tokens.
      operationId: list_tokens
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListTokens
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTokensRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration:
    post:
      description: "Lists all license usage records for a license configuration, displaying\
        \ license consumption details by resource at a selected point in time. Use\
        \ this action to audit the current license consumption for any license inventory\
        \ and configuration."
      operationId: list_usage_for_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.ListUsageForLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsageForLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsageForLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
          description: FilterLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.RejectGrant:
    post:
      description: Rejects the specified grant.
      operationId: reject_grant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.RejectGrant
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectGrantRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectGrantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.TagResource:
    post:
      description: Adds the specified tags to the specified license configuration.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.UntagResource:
    post:
      description: Removes the specified tags from the specified license configuration.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration:
    post:
      description: Modifies the attributes of an existing license configuration.
      operationId: update_license_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.UpdateLicenseConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseConfigurationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseManagerReportGenerator:
    post:
      description: "<p>Updates a report generator.</p> <p>After you make changes to\
        \ a report generator, it starts generating new reports within 60 minutes of\
        \ being updated.</p>"
      operationId: update_license_manager_report_generator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.UpdateLicenseManagerReportGenerator
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource:
    post:
      description: "<p>Adds or removes the specified license configurations for the\
        \ specified Amazon Web Services resource.</p> <p>You can update the license\
        \ specifications of AMIs, instances, and hosts. You cannot update the license\
        \ specifications for launch templates and CloudFormation templates, as they\
        \ send license configurations to the operation that creates the resource.</p>"
      operationId: update_license_specifications_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.UpdateLicenseSpecificationsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
          description: InvalidResourceStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseUsageException'
          description: LicenseUsageException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings:
    post:
      description: Updates License Manager settings for the current Region.
      operationId: update_service_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLicenseManager.UpdateServiceSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
          description: ServerInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
          description: AuthorizationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
          description: RateLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcceptGrantResponse:
      example:
        Status: ""
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Grant ARN.
          title: GrantArn
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
      title: AcceptGrantResponse
      type: object
    AcceptGrantRequest:
      example:
        GrantArn: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
      required:
      - GrantArn
      title: AcceptGrantRequest
      type: object
    ValidationException: {}
    InvalidParameterValueException: {}
    AuthorizationException: {}
    AccessDeniedException: {}
    RateLimitExceededException: {}
    ResourceLimitExceededException: {}
    ServerInternalException: {}
    CheckInLicenseResponse:
      properties: {}
      type: object
    CheckInLicenseRequest:
      example:
        LicenseConsumptionToken: ""
        Beneficiary: ""
      properties:
        LicenseConsumptionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License consumption token.
          title: LicenseConsumptionToken
        Beneficiary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License beneficiary.
          title: Beneficiary
      required:
      - LicenseConsumptionToken
      title: CheckInLicenseRequest
      type: object
    ResourceNotFoundException: {}
    ConflictException: {}
    CheckoutBorrowLicenseResponse:
      example:
        SignedToken: ""
        EntitlementsAllowed: ""
        IssuedAt: ""
        LicenseConsumptionToken: ""
        CheckoutMetadata: ""
        NodeId: ""
        Expiration: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        LicenseConsumptionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License consumption token.
          title: LicenseConsumptionToken
        EntitlementsAllowed:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataList'
          - description: Allowed license entitlements.
          title: EntitlementsAllowed
        NodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Node ID.
          title: NodeId
        SignedToken:
          allOf:
          - $ref: '#/components/schemas/SignedToken'
          - description: Signed token.
          title: SignedToken
        IssuedAt:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date and time at which the license checkout is issued.
          title: IssuedAt
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date and time at which the license checkout expires.
          title: Expiration
        CheckoutMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Information about constraints.
          title: CheckoutMetadata
      title: CheckoutBorrowLicenseResponse
      type: object
    CheckoutBorrowLicenseRequest:
      example:
        CheckoutMetadata: ""
        Entitlements: ""
        DigitalSignatureMethod: ""
        NodeId: ""
        ClientToken: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license. The license must
              use the borrow consumption configuration.
          title: LicenseArn
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataList'
          - description: License entitlements. Partial checkouts are not supported.
          title: Entitlements
        DigitalSignatureMethod:
          allOf:
          - $ref: '#/components/schemas/DigitalSignatureMethod'
          - description: "Digital signature method. The possible value is JSON Web\
              \ Signature (JWS) algorithm PS384. For more information, see <a href=\"\
              https://tools.ietf.org/html/rfc7518#section-3.5\">RFC 7518 Digital Signature\
              \ with RSASSA-PSS</a>."
          title: DigitalSignatureMethod
        NodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Node ID.
          title: NodeId
        CheckoutMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Information about constraints.
          title: CheckoutMetadata
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
      required:
      - ClientToken
      - DigitalSignatureMethod
      - Entitlements
      - LicenseArn
      title: CheckoutBorrowLicenseRequest
      type: object
    NoEntitlementsAllowedException: {}
    EntitlementNotAllowedException: {}
    UnsupportedDigitalSignatureMethodException: {}
    RedirectException: {}
    CheckoutLicenseResponse:
      example:
        SignedToken: ""
        EntitlementsAllowed: ""
        IssuedAt: ""
        LicenseConsumptionToken: ""
        NodeId: ""
        Expiration: ""
        CheckoutType: ""
        LicenseArn: ""
      properties:
        CheckoutType:
          allOf:
          - $ref: '#/components/schemas/CheckoutType'
          - description: Checkout type.
          title: CheckoutType
        LicenseConsumptionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License consumption token.
          title: LicenseConsumptionToken
        EntitlementsAllowed:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataList'
          - description: Allowed license entitlements.
          title: EntitlementsAllowed
        SignedToken:
          allOf:
          - $ref: '#/components/schemas/SignedToken'
          - description: Signed token.
          title: SignedToken
        NodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Node ID.
          title: NodeId
        IssuedAt:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date and time at which the license checkout is issued.
          title: IssuedAt
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date and time at which the license checkout expires.
          title: Expiration
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the checkout license.
          title: LicenseArn
      title: CheckoutLicenseResponse
      type: object
    CheckoutLicenseRequest:
      example:
        ProductSKU: ""
        Entitlements: ""
        NodeId: ""
        CheckoutType: ""
        KeyFingerprint: ""
        ClientToken: ""
        Beneficiary: ""
      properties:
        ProductSKU:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product SKU.
          title: ProductSKU
        CheckoutType:
          allOf:
          - $ref: '#/components/schemas/CheckoutType'
          - description: Checkout type.
          title: CheckoutType
        KeyFingerprint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Key fingerprint identifying the license.
          title: KeyFingerprint
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataList'
          - description: License entitlements.
          title: Entitlements
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        Beneficiary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License beneficiary.
          title: Beneficiary
        NodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Node ID.
          title: NodeId
      required:
      - CheckoutType
      - ClientToken
      - Entitlements
      - KeyFingerprint
      - ProductSKU
      title: CheckoutLicenseRequest
      type: object
    CreateGrantResponse:
      example:
        Status: ""
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Grant ARN.
          title: GrantArn
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
      title: CreateGrantResponse
      type: object
    CreateGrantRequest:
      example:
        Principals: ""
        HomeRegion: ""
        AllowedOperations: ""
        ClientToken: ""
        LicenseArn: ""
        GrantName: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        GrantName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant name.
          title: GrantName
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        Principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnList'
          - description: "<p>The grant principals. You can specify one of the following\
              \ as an Amazon Resource Name (ARN):</p> <ul> <li> <p>An Amazon Web Services\
              \ account, which includes only the account specified.</p> </li> </ul>\
              \ <ul> <li> <p>An organizational unit (OU), which includes all accounts\
              \ in the OU.</p> </li> </ul> <ul> <li> <p>An organization, which will\
              \ include all accounts across your organization.</p> </li> </ul>"
          title: Principals
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region of the grant.
          title: HomeRegion
        AllowedOperations:
          allOf:
          - $ref: '#/components/schemas/AllowedOperationList'
          - description: Allowed operations for the grant.
          title: AllowedOperations
      required:
      - AllowedOperations
      - ClientToken
      - GrantName
      - HomeRegion
      - LicenseArn
      - Principals
      title: CreateGrantRequest
      type: object
    CreateGrantVersionResponse:
      example:
        Status: ""
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Grant ARN.
          title: GrantArn
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: New version of the grant.
          title: Version
      title: CreateGrantVersionResponse
      type: object
    CreateGrantVersionRequest:
      example:
        Status: ""
        Options:
          ActivationOverrideBehavior: ""
        GrantArn: ""
        StatusReason: ""
        AllowedOperations: ""
        SourceVersion: ""
        ClientToken: ""
        GrantName: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
        GrantName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant name.
          title: GrantName
        AllowedOperations:
          allOf:
          - $ref: '#/components/schemas/AllowedOperationList'
          - description: Allowed operations for the grant.
          title: AllowedOperations
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReasonMessage'
          - description: Grant status reason.
          title: StatusReason
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Current version of the grant.
          title: SourceVersion
        Options:
          $ref: '#/components/schemas/CreateGrantVersionRequest_Options'
      required:
      - ClientToken
      - GrantArn
      title: CreateGrantVersionRequest
      type: object
    CreateLicenseResponse:
      example:
        Status: ""
        Version: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseStatus'
          - description: License status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License version.
          title: Version
      title: CreateLicenseResponse
      type: object
    CreateLicenseRequest:
      example:
        ProductSKU: ""
        Validity:
          Begin: ""
          End: ""
        ConsumptionConfiguration:
          BorrowConfiguration:
            AllowEarlyCheckIn: ""
            MaxTimeToLiveInMinutes: ""
          RenewType: ""
          ProvisionalConfiguration:
            MaxTimeToLiveInMinutes: ""
        ProductName: ""
        Issuer:
          SignKey: ""
          Name: ""
        HomeRegion: ""
        Entitlements: ""
        LicenseMetadata: ""
        ClientToken: ""
        LicenseName: ""
        Beneficiary: ""
      properties:
        LicenseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License name.
          title: LicenseName
        ProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product name.
          title: ProductName
        ProductSKU:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product SKU.
          title: ProductSKU
        Issuer:
          $ref: '#/components/schemas/CreateLicenseRequest_Issuer'
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region for the license.
          title: HomeRegion
        Validity:
          $ref: '#/components/schemas/CreateLicenseRequest_Validity'
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementList'
          - description: License entitlements.
          title: Entitlements
        Beneficiary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License beneficiary.
          title: Beneficiary
        ConsumptionConfiguration:
          $ref: '#/components/schemas/CreateLicenseRequest_ConsumptionConfiguration'
        LicenseMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Information about the license.
          title: LicenseMetadata
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
      required:
      - Beneficiary
      - ClientToken
      - ConsumptionConfiguration
      - Entitlements
      - HomeRegion
      - Issuer
      - LicenseName
      - ProductName
      - ProductSKU
      - Validity
      title: CreateLicenseRequest
      type: object
    CreateLicenseConfigurationResponse:
      example:
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
      title: CreateLicenseConfigurationResponse
      type: object
    CreateLicenseConfigurationRequest:
      example:
        LicenseCount: ""
        Description: ""
        DisassociateWhenNotFound: ""
        LicenseRules: ""
        ProductInformationList: ""
        LicenseCountHardLimit: ""
        LicenseCountingType: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the license configuration.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the license configuration.
          title: Description
        LicenseCountingType:
          allOf:
          - $ref: '#/components/schemas/LicenseCountingType'
          - description: Dimension used to track the license inventory.
          title: LicenseCountingType
        LicenseCount:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of licenses managed by the license configuration.
          title: LicenseCount
        LicenseCountHardLimit:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Indicates whether hard or soft license enforcement is used.
              Exceeding a hard limit blocks the launch of new instances.
          title: LicenseCountHardLimit
        LicenseRules:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: "<p>License rules. The syntax is #name=value (for example,\
              \ #allowedTenancy=EC2-DedicatedHost). The available rules vary by dimension,\
              \ as follows.</p> <ul> <li> <p> <code>Cores</code> dimension: <code>allowedTenancy</code>\
              \ | <code>licenseAffinityToHost</code> | <code>maximumCores</code> |\
              \ <code>minimumCores</code> </p> </li> <li> <p> <code>Instances</code>\
              \ dimension: <code>allowedTenancy</code> | <code>maximumCores</code>\
              \ | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code>\
              \ | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li>\
              \ <li> <p> <code>Sockets</code> dimension: <code>allowedTenancy</code>\
              \ | <code>licenseAffinityToHost</code> | <code>maximumSockets</code>\
              \ | <code>minimumSockets</code> </p> </li> <li> <p> <code>vCPUs</code>\
              \ dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code>\
              \ | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li>\
              \ </ul> <p>The unit for <code>licenseAffinityToHost</code> is days and\
              \ the range is 1 to 180. The possible values for <code>allowedTenancy</code>\
              \ are <code>EC2-Default</code>, <code>EC2-DedicatedHost</code>, and\
              \ <code>EC2-DedicatedInstance</code>. The possible values for <code>honorVcpuOptimization</code>\
              \ are <code>True</code> and <code>False</code>.</p>"
          title: LicenseRules
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags to add to the license configuration.
          title: Tags
        DisassociateWhenNotFound:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: "When true, disassociates a resource when software is uninstalled."
          title: DisassociateWhenNotFound
        ProductInformationList:
          allOf:
          - $ref: '#/components/schemas/ProductInformationList'
          - description: Product information.
          title: ProductInformationList
      required:
      - LicenseCountingType
      - Name
      title: CreateLicenseConfigurationRequest
      type: object
    CreateLicenseConversionTaskForResourceResponse:
      example:
        LicenseConversionTaskId: ""
      properties:
        LicenseConversionTaskId:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskId'
          - description: The ID of the created license type conversion task.
          title: LicenseConversionTaskId
      title: CreateLicenseConversionTaskForResourceResponse
      type: object
    CreateLicenseConversionTaskForResourceRequest:
      example:
        SourceLicenseContext:
          UsageOperation: ""
        ResourceArn: ""
        DestinationLicenseContext:
          UsageOperation: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the resource you are converting
              the license type for.
          title: ResourceArn
        SourceLicenseContext:
          $ref: '#/components/schemas/CreateLicenseConversionTaskForResourceRequest_SourceLicenseContext'
        DestinationLicenseContext:
          $ref: '#/components/schemas/CreateLicenseConversionTaskForResourceRequest_DestinationLicenseContext'
      required:
      - DestinationLicenseContext
      - ResourceArn
      - SourceLicenseContext
      title: CreateLicenseConversionTaskForResourceRequest
      type: object
    CreateLicenseManagerReportGeneratorResponse:
      example:
        LicenseManagerReportGeneratorArn: ""
      properties:
        LicenseManagerReportGeneratorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the new report generator.
          title: LicenseManagerReportGeneratorArn
      title: CreateLicenseManagerReportGeneratorResponse
      type: object
    CreateLicenseManagerReportGeneratorRequest:
      example:
        Type: ""
        Description: ""
        ClientToken: ""
        ReportContext:
          licenseConfigurationArns: ""
        ReportFrequency:
          period: ""
          value: ""
        Tags: ""
        ReportGeneratorName: ""
      properties:
        ReportGeneratorName:
          allOf:
          - $ref: '#/components/schemas/ReportGeneratorName'
          - description: Name of the report generator.
          title: ReportGeneratorName
        Type:
          allOf:
          - $ref: '#/components/schemas/ReportTypeList'
          - description: <p>Type of reports to generate. The following report types
              an be generated:</p> <ul> <li> <p>License configuration report - Reports
              the number and details of consumed licenses for a license configuration.</p>
              </li> <li> <p>Resource report - Reports the tracked licenses and resource
              consumption for a license configuration.</p> </li> </ul>
          title: Type
        ReportContext:
          $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorRequest_ReportContext'
        ReportFrequency:
          $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorRequest_ReportFrequency'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the report generator.
          title: Description
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags to add to the report generator.
          title: Tags
      required:
      - ClientToken
      - ReportContext
      - ReportFrequency
      - ReportGeneratorName
      - Type
      title: CreateLicenseManagerReportGeneratorRequest
      type: object
    CreateLicenseVersionResponse:
      example:
        Status: ""
        Version: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: License ARN.
          title: LicenseArn
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: New version of the license.
          title: Version
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseStatus'
          - description: License status.
          title: Status
      title: CreateLicenseVersionResponse
      type: object
    CreateLicenseVersionRequest:
      example:
        Status: ""
        Validity:
          Begin: ""
          End: ""
        ConsumptionConfiguration:
          BorrowConfiguration:
            AllowEarlyCheckIn: ""
            MaxTimeToLiveInMinutes: ""
          RenewType: ""
          ProvisionalConfiguration:
            MaxTimeToLiveInMinutes: ""
        ProductName: ""
        Issuer:
          SignKey: ""
          Name: ""
        HomeRegion: ""
        LicenseMetadata: ""
        Entitlements: ""
        SourceVersion: ""
        ClientToken: ""
        LicenseArn: ""
        LicenseName: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        LicenseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License name.
          title: LicenseName
        ProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product name.
          title: ProductName
        Issuer:
          $ref: '#/components/schemas/CreateLicenseRequest_Issuer'
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region of the license.
          title: HomeRegion
        Validity:
          $ref: '#/components/schemas/CreateLicenseRequest_Validity'
        LicenseMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Information about the license.
          title: LicenseMetadata
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementList'
          - description: License entitlements.
          title: Entitlements
        ConsumptionConfiguration:
          $ref: '#/components/schemas/CreateLicenseRequest_ConsumptionConfiguration'
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseStatus'
          - description: License status.
          title: Status
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Current version of the license.
          title: SourceVersion
      required:
      - ClientToken
      - ConsumptionConfiguration
      - Entitlements
      - HomeRegion
      - Issuer
      - LicenseArn
      - LicenseName
      - ProductName
      - Status
      - Validity
      title: CreateLicenseVersionRequest
      type: object
    CreateTokenResponse:
      example:
        TokenType: ""
        Token: ""
        TokenId: ""
      properties:
        TokenId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token ID.
          title: TokenId
        TokenType:
          allOf:
          - $ref: '#/components/schemas/TokenType'
          - description: Token type.
          title: TokenType
        Token:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: "Refresh token, encoded as a JWT token."
          title: Token
      title: CreateTokenResponse
      type: object
    CreateTokenRequest:
      example:
        RoleArns: ""
        ExpirationInDays: ""
        TokenProperties: ""
        ClientToken: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license. The ARN is mapped
              to the aud claim of the JWT token.
          title: LicenseArn
        RoleArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Name (ARN) of the IAM roles to embed in the
              token. License Manager does not check whether the roles are in use.
          title: RoleArns
        ExpirationInDays:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "Token expiration, in days, counted from token creation.\
              \ The default is 365 days."
          title: ExpirationInDays
        TokenProperties:
          allOf:
          - $ref: '#/components/schemas/MaxSize3StringList'
          - description: Data specified by the caller to be included in the JWT token.
              The data is mapped to the amr claim of the JWT token.
          title: TokenProperties
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Idempotency token, valid for 10 minutes."
          title: ClientToken
      required:
      - ClientToken
      - LicenseArn
      title: CreateTokenRequest
      type: object
    DeleteGrantResponse:
      example:
        Status: ""
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Grant ARN.
          title: GrantArn
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
      title: DeleteGrantResponse
      type: object
    DeleteGrantRequest:
      example:
        GrantArn: ""
        Version: ""
        StatusReason: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReasonMessage'
          - description: The Status reason for the delete request.
          title: StatusReason
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Current version of the grant.
          title: Version
      required:
      - GrantArn
      - Version
      title: DeleteGrantRequest
      type: object
    DeleteLicenseResponse:
      example:
        Status: ""
        DeletionDate: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseDeletionStatus'
          - description: License status.
          title: Status
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date when the license is deleted.
          title: DeletionDate
      title: DeleteLicenseResponse
      type: object
    DeleteLicenseRequest:
      example:
        SourceVersion: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Current version of the license.
          title: SourceVersion
      required:
      - LicenseArn
      - SourceVersion
      title: DeleteLicenseRequest
      type: object
    DeleteLicenseConfigurationResponse:
      properties: {}
      type: object
    DeleteLicenseConfigurationRequest:
      example:
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the license configuration.
          title: LicenseConfigurationArn
      required:
      - LicenseConfigurationArn
      title: DeleteLicenseConfigurationRequest
      type: object
    DeleteLicenseManagerReportGeneratorResponse:
      properties: {}
      type: object
    DeleteLicenseManagerReportGeneratorRequest:
      example:
        LicenseManagerReportGeneratorArn: ""
      properties:
        LicenseManagerReportGeneratorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the report generator to be
              deleted.
          title: LicenseManagerReportGeneratorArn
      required:
      - LicenseManagerReportGeneratorArn
      title: DeleteLicenseManagerReportGeneratorRequest
      type: object
    DeleteTokenResponse:
      properties: {}
      type: object
    DeleteTokenRequest:
      example:
        TokenId: ""
      properties:
        TokenId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token ID.
          title: TokenId
      required:
      - TokenId
      title: DeleteTokenRequest
      type: object
    ExtendLicenseConsumptionResponse:
      example:
        LicenseConsumptionToken: ""
        Expiration: ""
      properties:
        LicenseConsumptionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License consumption token.
          title: LicenseConsumptionToken
        Expiration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Date and time at which the license consumption expires.
          title: Expiration
      title: ExtendLicenseConsumptionResponse
      type: object
    ExtendLicenseConsumptionRequest:
      example:
        LicenseConsumptionToken: ""
        DryRun: ""
      properties:
        LicenseConsumptionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License consumption token.
          title: LicenseConsumptionToken
        DryRun:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Checks whether you have the required permissions for the\
              \ action, without actually making the request. Provides an error response\
              \ if you do not have the required permissions."
          title: DryRun
      required:
      - LicenseConsumptionToken
      title: ExtendLicenseConsumptionRequest
      type: object
    GetAccessTokenResponse:
      example:
        AccessToken: ""
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: Temporary access token.
          title: AccessToken
      title: GetAccessTokenResponse
      type: object
    GetAccessTokenRequest:
      example:
        Token: ""
        TokenProperties: ""
      properties:
        Token:
          allOf:
          - $ref: '#/components/schemas/TokenString'
          - description: "Refresh token, encoded as a JWT token."
          title: Token
        TokenProperties:
          allOf:
          - $ref: '#/components/schemas/MaxSize3StringList'
          - description: Token properties to validate against those present in the
              JWT token.
          title: TokenProperties
      required:
      - Token
      title: GetAccessTokenRequest
      type: object
    GetGrantResponse:
      example:
        Grant:
          Options:
            ActivationOverrideBehavior: ""
          GrantArn: ""
          HomeRegion: ""
          Version: ""
          GranteePrincipalArn: ""
          StatusReason: ""
          GrantStatus: ""
          GrantedOperations: ""
          ParentArn: ""
          LicenseArn: ""
          GrantName: ""
      properties:
        Grant:
          $ref: '#/components/schemas/GetGrantResponse_Grant'
      title: GetGrantResponse
      type: object
    GetGrantRequest:
      example:
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
      required:
      - GrantArn
      title: GetGrantRequest
      type: object
    GetLicenseResponse:
      example:
        License:
          ProductSKU: ""
          Status: ""
          ConsumptionConfiguration:
            BorrowConfiguration:
              AllowEarlyCheckIn: ""
              MaxTimeToLiveInMinutes: ""
            RenewType: ""
            ProvisionalConfiguration:
              MaxTimeToLiveInMinutes: ""
          ProductName: ""
          Issuer:
            SignKey: ""
            KeyFingerprint: ""
            Name: ""
          HomeRegion: ""
          CreateTime: ""
          Validity:
            Begin: ""
            End: ""
          Version: ""
          Entitlements: ""
          LicenseMetadata: ""
          LicenseArn: ""
          LicenseName: ""
          Beneficiary: ""
      properties:
        License:
          $ref: '#/components/schemas/GetLicenseResponse_License'
      title: GetLicenseResponse
      type: object
    GetLicenseRequest:
      example:
        Version: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License version.
          title: Version
      required:
      - LicenseArn
      title: GetLicenseRequest
      type: object
    GetLicenseConfigurationResponse:
      example:
        Status: ""
        ConsumedLicenseSummaryList: ""
        ConsumedLicenses: ""
        Description: ""
        DisassociateWhenNotFound: ""
        LicenseRules: ""
        LicenseCountHardLimit: ""
        LicenseCountingType: ""
        Name: ""
        LicenseCount: ""
        LicenseConfigurationId: ""
        ProductInformationList: ""
        LicenseConfigurationArn: ""
        AutomatedDiscoveryInformation:
          LastRunTime: ""
        OwnerAccountId: ""
        ManagedResourceSummaryList: ""
        Tags: ""
      properties:
        LicenseConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Unique ID for the license configuration.
          title: LicenseConfigurationId
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the license configuration.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the license configuration.
          title: Description
        LicenseCountingType:
          allOf:
          - $ref: '#/components/schemas/LicenseCountingType'
          - description: Dimension for which the licenses are counted.
          title: LicenseCountingType
        LicenseRules:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: License rules.
          title: LicenseRules
        LicenseCount:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of available licenses.
          title: LicenseCount
        LicenseCountHardLimit:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Sets the number of available licenses as a hard limit.
          title: LicenseCountHardLimit
        ConsumedLicenses:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of licenses assigned to resources.
          title: ConsumedLicenses
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License configuration status.
          title: Status
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Account ID of the owner of the license configuration.
          title: OwnerAccountId
        ConsumedLicenseSummaryList:
          allOf:
          - $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          - description: Summaries of the licenses consumed by resources.
          title: ConsumedLicenseSummaryList
        ManagedResourceSummaryList:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceSummaryList'
          - description: Summaries of the managed resources.
          title: ManagedResourceSummaryList
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags for the license configuration.
          title: Tags
        ProductInformationList:
          allOf:
          - $ref: '#/components/schemas/ProductInformationList'
          - description: Product information.
          title: ProductInformationList
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/GetLicenseConfigurationResponse_AutomatedDiscoveryInformation'
        DisassociateWhenNotFound:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: "When true, disassociates a resource when software is uninstalled."
          title: DisassociateWhenNotFound
      title: GetLicenseConfigurationResponse
      type: object
    GetLicenseConfigurationRequest:
      example:
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
      required:
      - LicenseConfigurationArn
      title: GetLicenseConfigurationRequest
      type: object
    GetLicenseConversionTaskResponse:
      example:
        SourceLicenseContext:
          UsageOperation: ""
        Status: ""
        LicenseConversionTime: ""
        ResourceArn: ""
        EndTime: ""
        DestinationLicenseContext:
          UsageOperation: ""
        StartTime: ""
        LicenseConversionTaskId: ""
        StatusMessage: ""
      properties:
        LicenseConversionTaskId:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskId'
          - description: ID of the license type conversion task.
          title: LicenseConversionTaskId
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Names (ARN) of the resources the license
              conversion task is associated with.
          title: ResourceArn
        SourceLicenseContext:
          $ref: '#/components/schemas/GetLicenseConversionTaskResponse_SourceLicenseContext'
        DestinationLicenseContext:
          $ref: '#/components/schemas/GetLicenseConversionTaskResponse_DestinationLicenseContext'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the conversion task.
          title: StatusMessage
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskStatus'
          - description: Status of the license type conversion task.
          title: Status
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Time at which the license type conversion task was started
              .
          title: StartTime
        LicenseConversionTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Amount of time to complete the license type conversion.
          title: LicenseConversionTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Time at which the license type conversion task was completed.
          title: EndTime
      title: GetLicenseConversionTaskResponse
      type: object
    GetLicenseConversionTaskRequest:
      example:
        LicenseConversionTaskId: ""
      properties:
        LicenseConversionTaskId:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskId'
          - description: ID of the license type conversion task to retrieve information
              on.
          title: LicenseConversionTaskId
      required:
      - LicenseConversionTaskId
      title: GetLicenseConversionTaskRequest
      type: object
    GetLicenseManagerReportGeneratorResponse:
      example:
        ReportGenerator:
          Description: ""
          LastReportGenerationTime: ""
          ReportCreatorAccount: ""
          CreateTime: ""
          LastRunStatus: ""
          ReportFrequency:
            period: ""
            value: ""
          S3Location:
            bucket: ""
            keyPrefix: ""
          ReportGeneratorName: ""
          LicenseManagerReportGeneratorArn: ""
          LastRunFailureReason: ""
          ReportContext:
            licenseConfigurationArns: ""
          ReportType: ""
          Tags: ""
      properties:
        ReportGenerator:
          $ref: '#/components/schemas/GetLicenseManagerReportGeneratorResponse_ReportGenerator'
      title: GetLicenseManagerReportGeneratorResponse
      type: object
    GetLicenseManagerReportGeneratorRequest:
      example:
        LicenseManagerReportGeneratorArn: ""
      properties:
        LicenseManagerReportGeneratorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the report generator.
          title: LicenseManagerReportGeneratorArn
      required:
      - LicenseManagerReportGeneratorArn
      title: GetLicenseManagerReportGeneratorRequest
      type: object
    GetLicenseUsageResponse:
      example:
        LicenseUsage:
          EntitlementUsages: ""
      properties:
        LicenseUsage:
          $ref: '#/components/schemas/GetLicenseUsageResponse_LicenseUsage'
      title: GetLicenseUsageResponse
      type: object
    GetLicenseUsageRequest:
      example:
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
      required:
      - LicenseArn
      title: GetLicenseUsageRequest
      type: object
    GetServiceSettingsResponse:
      example:
        LicenseManagerResourceShareArn: ""
        S3BucketArn: ""
        EnableCrossAccountsDiscovery: ""
        SnsTopicArn: ""
        OrganizationConfiguration:
          EnableIntegration: ""
      properties:
        S3BucketArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Regional S3 bucket path for storing reports, license trail\
              \ event data, discovery data, and so on."
          title: S3BucketArn
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: SNS topic configured to receive notifications from License
              Manager.
          title: SnsTopicArn
        OrganizationConfiguration:
          $ref: '#/components/schemas/GetServiceSettingsResponse_OrganizationConfiguration'
        EnableCrossAccountsDiscovery:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Indicates whether cross-account discovery is enabled.
          title: EnableCrossAccountsDiscovery
        LicenseManagerResourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the resource share. The License
              Manager management account provides member accounts with access to this
              share.
          title: LicenseManagerResourceShareArn
      title: GetServiceSettingsResponse
      type: object
    GetServiceSettingsRequest:
      properties: {}
      title: GetServiceSettingsRequest
      type: object
    ListAssociationsForLicenseConfigurationResponse:
      example:
        LicenseConfigurationAssociations: ""
        NextToken: ""
      properties:
        LicenseConfigurationAssociations:
          allOf:
          - $ref: '#/components/schemas/LicenseConfigurationAssociations'
          - description: Information about the associations for the license configuration.
          title: LicenseConfigurationAssociations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListAssociationsForLicenseConfigurationResponse
      type: object
    ListAssociationsForLicenseConfigurationRequest:
      example:
        NextToken: ""
        MaxResults: ""
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of a license configuration.
          title: LicenseConfigurationArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      required:
      - LicenseConfigurationArn
      title: ListAssociationsForLicenseConfigurationRequest
      type: object
    FilterLimitExceededException: {}
    ListDistributedGrantsResponse:
      example:
        NextToken: ""
        Grants: ""
      properties:
        Grants:
          allOf:
          - $ref: '#/components/schemas/GrantList'
          - description: Distributed grant details.
          title: Grants
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListDistributedGrantsResponse
      type: object
    ListDistributedGrantsRequest:
      example:
        Filters: ""
        NextToken: ""
        GrantArns: ""
        MaxResults: ""
      properties:
        GrantArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Names (ARNs) of the grants.
          title: GrantArns
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>LicenseArn</code> </p> </li> <li>
              <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranteePrincipalARN</code>
              </p> </li> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>LicenseIssuerName</code>
              </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListDistributedGrantsRequest
      type: object
    ListFailuresForLicenseConfigurationOperationsResponse:
      example:
        NextToken: ""
        LicenseOperationFailureList: ""
      properties:
        LicenseOperationFailureList:
          allOf:
          - $ref: '#/components/schemas/LicenseOperationFailureList'
          - description: License configuration operations that failed.
          title: LicenseOperationFailureList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListFailuresForLicenseConfigurationOperationsResponse
      type: object
    ListFailuresForLicenseConfigurationOperationsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name of the license configuration.
          title: LicenseConfigurationArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      required:
      - LicenseConfigurationArn
      title: ListFailuresForLicenseConfigurationOperationsRequest
      type: object
    ListLicenseConfigurationsResponse:
      example:
        NextToken: ""
        LicenseConfigurations: ""
      properties:
        LicenseConfigurations:
          allOf:
          - $ref: '#/components/schemas/LicenseConfigurations'
          - description: Information about the license configurations.
          title: LicenseConfigurations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicenseConfigurationsResponse
      type: object
    ListLicenseConfigurationsRequest:
      example:
        Filters: ""
        LicenseConfigurationArns: ""
        NextToken: ""
        MaxResults: ""
      properties:
        LicenseConfigurationArns:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Amazon Resource Names (ARN) of the license configurations.
          title: LicenseConfigurationArns
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: <p>Filters to scope the results. The following filters and
              logical operators are supported:</p> <ul> <li> <p> <code>licenseCountingType</code>
              - The dimension for which licenses are counted. Possible values are
              <code>vCPU</code> | <code>Instance</code> | <code>Core</code> | <code>Socket</code>.
              Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p>
              </li> <li> <p> <code>enforceLicenseCount</code> - A Boolean value that
              indicates whether hard license enforcement is used. Logical operators
              are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p>
              <code>usagelimitExceeded</code> - A Boolean value that indicates whether
              the available licenses have been exceeded. Logical operators are <code>EQUALS</code>
              | <code>NOT_EQUALS</code>.</p> </li> </ul>
          title: Filters
      title: ListLicenseConfigurationsRequest
      type: object
    ListLicenseConversionTasksResponse:
      example:
        NextToken: ""
        LicenseConversionTasks: ""
      properties:
        LicenseConversionTasks:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTasks'
          - description: Information about the license configuration tasks for your
              account.
          title: LicenseConversionTasks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicenseConversionTasksResponse
      type: object
    ListLicenseConversionTasksRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: ' Filters to scope the results. Valid filters are <code>ResourceArns</code>
              and <code>Status</code>. '
          title: Filters
      title: ListLicenseConversionTasksRequest
      type: object
    ListLicenseManagerReportGeneratorsResponse:
      example:
        NextToken: ""
        ReportGenerators: ""
      properties:
        ReportGenerators:
          allOf:
          - $ref: '#/components/schemas/ReportGeneratorList'
          - description: A report generator that creates periodic reports about your
              license configurations.
          title: ReportGenerators
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicenseManagerReportGeneratorsResponse
      type: object
    ListLicenseManagerReportGeneratorsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "<p>Filters to scope the results. The following filters are\
              \ supported: </p> <ul> <li> <p> <code>LicenseConfigurationArn</code>\
              \ </p> </li> </ul>"
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListLicenseManagerReportGeneratorsRequest
      type: object
    ListLicenseSpecificationsForResourceResponse:
      example:
        LicenseSpecifications: ""
        NextToken: ""
      properties:
        LicenseSpecifications:
          allOf:
          - $ref: '#/components/schemas/LicenseSpecifications'
          - description: License configurations associated with a resource.
          title: LicenseSpecifications
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicenseSpecificationsForResourceResponse
      type: object
    ListLicenseSpecificationsForResourceRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of a resource that has an associated
              license configuration.
          title: ResourceArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      required:
      - ResourceArn
      title: ListLicenseSpecificationsForResourceRequest
      type: object
    ListLicenseVersionsResponse:
      example:
        NextToken: ""
        Licenses: ""
      properties:
        Licenses:
          allOf:
          - $ref: '#/components/schemas/LicenseList'
          - description: License details.
          title: Licenses
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicenseVersionsResponse
      type: object
    ListLicenseVersionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      required:
      - LicenseArn
      title: ListLicenseVersionsRequest
      type: object
    ListLicensesResponse:
      example:
        NextToken: ""
        Licenses: ""
      properties:
        Licenses:
          allOf:
          - $ref: '#/components/schemas/LicenseList'
          - description: License details.
          title: Licenses
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListLicensesResponse
      type: object
    ListLicensesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        LicenseArns: ""
      properties:
        LicenseArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Names (ARNs) of the licenses.
          title: LicenseArns
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>Beneficiary</code> </p> </li> <li>
              <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>Fingerprint</code>
              </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListLicensesRequest
      type: object
    ListReceivedGrantsResponse:
      example:
        NextToken: ""
        Grants: ""
      properties:
        Grants:
          allOf:
          - $ref: '#/components/schemas/GrantList'
          - description: Received grant details.
          title: Grants
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListReceivedGrantsResponse
      type: object
    ListReceivedGrantsRequest:
      example:
        Filters: ""
        NextToken: ""
        GrantArns: ""
        MaxResults: ""
      properties:
        GrantArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Names (ARNs) of the grants.
          title: GrantArns
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li>
              <p> <code>LicenseIssuerName</code> </p> </li> <li> <p> <code>LicenseArn</code>
              </p> </li> <li> <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranterAccountId</code>
              </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListReceivedGrantsRequest
      type: object
    ListReceivedGrantsForOrganizationResponse:
      example:
        NextToken: ""
        Grants: ""
      properties:
        Grants:
          allOf:
          - $ref: '#/components/schemas/GrantList'
          - description: Lists the grants the organization has received.
          title: Grants
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListReceivedGrantsForOrganizationResponse
      type: object
    ListReceivedGrantsForOrganizationRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        LicenseArn: ""
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the received license.
          title: LicenseArn
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>ParentArn</code> </p> </li> <li>
              <p> <code>GranteePrincipalArn</code> </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      required:
      - LicenseArn
      title: ListReceivedGrantsForOrganizationRequest
      type: object
    ListReceivedLicensesResponse:
      example:
        NextToken: ""
        Licenses: ""
      properties:
        Licenses:
          allOf:
          - $ref: '#/components/schemas/GrantedLicenseList'
          - description: Received license details.
          title: Licenses
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListReceivedLicensesResponse
      type: object
    ListReceivedLicensesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        LicenseArns: ""
      properties:
        LicenseArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Names (ARNs) of the licenses.
          title: LicenseArns
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li>
              <p> <code>Status</code> </p> </li> <li> <p> <code>Fingerprint</code>
              </p> </li> <li> <p> <code>IssuerName</code> </p> </li> <li> <p> <code>Beneficiary</code>
              </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListReceivedLicensesRequest
      type: object
    ListReceivedLicensesForOrganizationResponse:
      example:
        NextToken: ""
        Licenses: ""
      properties:
        Licenses:
          allOf:
          - $ref: '#/components/schemas/GrantedLicenseList'
          - description: Lists the licenses the organization has received.
          title: Licenses
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListReceivedLicensesForOrganizationResponse
      type: object
    ListReceivedLicensesForOrganizationRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filters are
              supported:</p> <ul> <li> <p> <code>Beneficiary</code> </p> </li> <li>
              <p> <code>ProductSKU</code> </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListReceivedLicensesForOrganizationRequest
      type: object
    ListResourceInventoryResponse:
      example:
        NextToken: ""
        ResourceInventoryList: ""
      properties:
        ResourceInventoryList:
          allOf:
          - $ref: '#/components/schemas/ResourceInventoryList'
          - description: Information about the resources.
          title: ResourceInventoryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListResourceInventoryResponse
      type: object
    ListResourceInventoryRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterList'
          - description: <p>Filters to scope the results. The following filters and
              logical operators are supported:</p> <ul> <li> <p> <code>account_id</code>
              - The ID of the Amazon Web Services account that owns the resource.
              Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p>
              </li> <li> <p> <code>application_name</code> - The name of the application.
              Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p>
              </li> <li> <p> <code>license_included</code> - The type of license included.
              Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
              Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code>
              | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p>
              </li> <li> <p> <code>platform</code> - The platform of the resource.
              Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p>
              </li> <li> <p> <code>resource_id</code> - The ID of the resource. Logical
              operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li>
              <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of
              a tag assigned to the resource. Logical operators are <code>EQUALS</code>
              (single account) or <code>EQUALS</code> | <code>NOT_EQUALS</code> (cross
              account).</p> </li> </ul>
          title: Filters
      title: ListResourceInventoryRequest
      type: object
    FailedDependencyException: {}
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Information about the tags.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListTokensResponse:
      example:
        NextToken: ""
        Tokens: ""
      properties:
        Tokens:
          allOf:
          - $ref: '#/components/schemas/TokenList'
          - description: Received token details.
          title: Tokens
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListTokensResponse
      type: object
    ListTokensRequest:
      example:
        TokenIds: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        TokenIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Token IDs.
          title: TokenIds
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>Filters to scope the results. The following filter is
              supported:</p> <ul> <li> <p> <code>LicenseArns</code> </p> </li> </ul>
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
      title: ListTokensRequest
      type: object
    ListUsageForLicenseConfigurationResponse:
      example:
        LicenseConfigurationUsageList: ""
        NextToken: ""
      properties:
        LicenseConfigurationUsageList:
          allOf:
          - $ref: '#/components/schemas/LicenseConfigurationUsageList'
          - description: Information about the license configurations.
          title: LicenseConfigurationUsageList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
      title: ListUsageForLicenseConfigurationResponse
      type: object
    ListUsageForLicenseConfigurationRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        LicenseConfigurationArn: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: Maximum number of results to return in a single call.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token for the next set of results.
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: <p>Filters to scope the results. The following filters and
              logical operators are supported:</p> <ul> <li> <p> <code>resourceArn</code>
              - The ARN of the license configuration resource. Logical operators are
              <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceType</code>
              - The resource type (<code>EC2_INSTANCE</code> | <code>EC2_HOST</code>
              | <code>EC2_AMI</code> | <code>SYSTEMS_MANAGER_MANAGED_INSTANCE</code>).
              Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p>
              </li> <li> <p> <code>resourceAccount</code> - The ID of the account
              that owns the resource. Logical operators are <code>EQUALS</code> |
              <code>NOT_EQUALS</code>.</p> </li> </ul>
          title: Filters
      required:
      - LicenseConfigurationArn
      title: ListUsageForLicenseConfigurationRequest
      type: object
    RejectGrantResponse:
      example:
        Status: ""
        GrantArn: ""
        Version: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Grant ARN.
          title: GrantArn
        Status:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: Status
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
      title: RejectGrantResponse
      type: object
    RejectGrantRequest:
      example:
        GrantArn: ""
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
      required:
      - GrantArn
      title: RejectGrantRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: One or more tags.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: Keys identifying the tags to remove.
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateLicenseConfigurationResponse:
      properties: {}
      type: object
    UpdateLicenseConfigurationRequest:
      example:
        LicenseConfigurationStatus: ""
        LicenseCount: ""
        Description: ""
        DisassociateWhenNotFound: ""
        LicenseRules: ""
        ProductInformationList: ""
        LicenseCountHardLimit: ""
        LicenseConfigurationArn: ""
        Name: ""
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
        LicenseConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/LicenseConfigurationStatus'
          - description: New status of the license configuration.
          title: LicenseConfigurationStatus
        LicenseRules:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: New license rule. The only rule that you can add after you
              create a license configuration is licenseAffinityToHost.
          title: LicenseRules
        LicenseCount:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: New number of licenses managed by the license configuration.
          title: LicenseCount
        LicenseCountHardLimit:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: New hard limit of the number of available licenses.
          title: LicenseCountHardLimit
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: New name of the license configuration.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: New description of the license configuration.
          title: Description
        ProductInformationList:
          allOf:
          - $ref: '#/components/schemas/ProductInformationList'
          - description: New product information.
          title: ProductInformationList
        DisassociateWhenNotFound:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: "When true, disassociates a resource when software is uninstalled."
          title: DisassociateWhenNotFound
      required:
      - LicenseConfigurationArn
      title: UpdateLicenseConfigurationRequest
      type: object
    UpdateLicenseManagerReportGeneratorResponse:
      properties: {}
      type: object
    UpdateLicenseManagerReportGeneratorRequest:
      example:
        Type: ""
        LicenseManagerReportGeneratorArn: ""
        Description: ""
        ClientToken: ""
        ReportContext:
          licenseConfigurationArns: ""
        ReportFrequency:
          period: ""
          value: ""
        ReportGeneratorName: ""
      properties:
        LicenseManagerReportGeneratorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the report generator to update.
          title: LicenseManagerReportGeneratorArn
        ReportGeneratorName:
          allOf:
          - $ref: '#/components/schemas/ReportGeneratorName'
          - description: Name of the report generator.
          title: ReportGeneratorName
        Type:
          allOf:
          - $ref: '#/components/schemas/ReportTypeList'
          - description: <p>Type of reports to generate. The following report types
              are supported:</p> <ul> <li> <p>License configuration report - Reports
              the number and details of consumed licenses for a license configuration.</p>
              </li> <li> <p>Resource report - Reports the tracked licenses and resource
              consumption for a license configuration.</p> </li> </ul>
          title: Type
        ReportContext:
          $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorRequest_ReportContext'
        ReportFrequency:
          $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorRequest_ReportFrequency'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: ClientToken
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the report generator.
          title: Description
      required:
      - ClientToken
      - LicenseManagerReportGeneratorArn
      - ReportContext
      - ReportFrequency
      - ReportGeneratorName
      - Type
      title: UpdateLicenseManagerReportGeneratorRequest
      type: object
    UpdateLicenseSpecificationsForResourceResponse:
      properties: {}
      type: object
    UpdateLicenseSpecificationsForResourceRequest:
      example:
        ResourceArn: ""
        AddLicenseSpecifications: ""
        RemoveLicenseSpecifications: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the Amazon Web Services resource.
          title: ResourceArn
        AddLicenseSpecifications:
          allOf:
          - $ref: '#/components/schemas/LicenseSpecifications'
          - description: ARNs of the license configurations to add.
          title: AddLicenseSpecifications
        RemoveLicenseSpecifications:
          allOf:
          - $ref: '#/components/schemas/LicenseSpecifications'
          - description: ARNs of the license configurations to remove.
          title: RemoveLicenseSpecifications
      required:
      - ResourceArn
      title: UpdateLicenseSpecificationsForResourceRequest
      type: object
    InvalidResourceStateException: {}
    LicenseUsageException: {}
    UpdateServiceSettingsResponse:
      properties: {}
      type: object
    UpdateServiceSettingsRequest:
      example:
        S3BucketArn: ""
        EnableCrossAccountsDiscovery: ""
        SnsTopicArn: ""
        OrganizationConfiguration:
          EnableIntegration: ""
      properties:
        S3BucketArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the Amazon S3 bucket where
              the License Manager information is stored.
          title: S3BucketArn
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the Amazon SNS topic used for
              License Manager alerts.
          title: SnsTopicArn
        OrganizationConfiguration:
          $ref: '#/components/schemas/UpdateServiceSettingsRequest_OrganizationConfiguration'
        EnableCrossAccountsDiscovery:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Activates cross-account discovery.
          title: EnableCrossAccountsDiscovery
      title: UpdateServiceSettingsRequest
      type: object
    Arn:
      maxLength: 2048
      pattern: "^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
      title: Arn
      type: string
    GrantStatus:
      enum:
      - PENDING_WORKFLOW
      - PENDING_ACCEPT
      - REJECTED
      - ACTIVE
      - FAILED_WORKFLOW
      - DELETED
      - PENDING_DELETE
      - DISABLED
      - WORKFLOW_COMPLETED
      title: GrantStatus
      type: string
    String:
      title: String
      type: string
    ActivationOverrideBehavior:
      enum:
      - DISTRIBUTED_GRANTS_ONLY
      - ALL_GRANTS_PERMITTED_BY_ISSUER
      title: ActivationOverrideBehavior
      type: string
    AllowedOperation:
      enum:
      - CreateGrant
      - CheckoutLicense
      - CheckoutBorrowLicense
      - CheckInLicense
      - ExtendConsumptionLicense
      - ListPurchasedLicenses
      - CreateToken
      title: AllowedOperation
      type: string
    AllowedOperationList:
      items:
        $ref: '#/components/schemas/AllowedOperation'
      maxItems: 7
      minItems: 1
      type: array
    ArnList:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    DateTime:
      format: date-time
      type: string
    AutomatedDiscoveryInformation:
      description: Describes automated discovery.
      properties:
        LastRunTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Time that automated discovery last ran.
          title: LastRunTime
      title: AutomatedDiscoveryInformation
      type: object
    Boolean:
      type: boolean
    BoxBoolean:
      type: boolean
    BoxInteger:
      type: integer
    BorrowConfiguration:
      description: Details about a borrow configuration.
      properties:
        AllowEarlyCheckIn:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Indicates whether early check-ins are allowed.
          title: AllowEarlyCheckIn
        MaxTimeToLiveInMinutes:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: "Maximum time for the borrow configuration, in minutes."
          title: MaxTimeToLiveInMinutes
      required:
      - AllowEarlyCheckIn
      - MaxTimeToLiveInMinutes
      title: BorrowConfiguration
      type: object
    BoxLong:
      type: integer
    EntitlementDataList:
      items:
        $ref: '#/components/schemas/EntitlementData'
      type: array
    DigitalSignatureMethod:
      enum:
      - JWT_PS384
      title: DigitalSignatureMethod
      type: string
    MetadataList:
      items:
        $ref: '#/components/schemas/Metadata'
      type: array
    ClientToken:
      maxLength: 2048
      pattern: \S+
      type: string
    SignedToken:
      minLength: 4096
      type: string
    ISO8601DateTime:
      maxLength: 50
      pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\\
        .[0-9]+)?(Z|[+-](?:2[ 0-3]|[0-1][0-9]):[0-5][0-9])+$"
      type: string
    CheckoutType:
      enum:
      - PROVISIONAL
      - PERPETUAL
      title: CheckoutType
      type: string
    ClientRequestToken:
      maxLength: 36
      minLength: 1
      type: string
    ResourceType:
      enum:
      - EC2_INSTANCE
      - EC2_HOST
      - EC2_AMI
      - RDS
      - SYSTEMS_MANAGER_MANAGED_INSTANCE
      title: ResourceType
      type: string
    ConsumedLicenseSummary:
      description: Details about license consumption.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Resource type of the resource consuming a license.
          title: ResourceType
        ConsumedLicenses:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of licenses consumed by the resource.
          title: ConsumedLicenses
      title: ConsumedLicenseSummary
      type: object
    ConsumedLicenseSummaryList:
      items:
        $ref: '#/components/schemas/ConsumedLicenseSummary'
      type: array
    RenewType:
      enum:
      - None
      - Weekly
      - Monthly
      title: RenewType
      type: string
    ProvisionalConfiguration:
      description: Details about a provisional configuration.
      properties:
        MaxTimeToLiveInMinutes:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          - description: "Maximum time for the provisional configuration, in minutes."
          title: MaxTimeToLiveInMinutes
      required:
      - MaxTimeToLiveInMinutes
      title: ProvisionalConfiguration
      type: object
    ConsumptionConfiguration:
      description: Details about a consumption configuration.
      properties:
        RenewType:
          allOf:
          - $ref: '#/components/schemas/RenewType'
          - description: Renewal frequency.
          title: RenewType
        ProvisionalConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration_ProvisionalConfiguration'
        BorrowConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration_BorrowConfiguration'
      title: ConsumptionConfiguration
      type: object
    PrincipalArnList:
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 1
      minItems: 1
      type: array
    StatusReasonMessage:
      maxLength: 400
      pattern: "[\\s\\S]+"
      type: string
    Options:
      description: "The options you can specify when you create a new version of a\
        \ grant, such as activation override behavior. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/granted-licenses.html\"\
        >Granted licenses in License Manager</a> in the <i>License Manager User Guide</i>."
      properties:
        ActivationOverrideBehavior:
          allOf:
          - $ref: '#/components/schemas/ActivationOverrideBehavior'
          - description: "<p>An activation option for your grant that determines the\
              \ behavior of activating a grant. Activation options can only be used\
              \ with granted licenses sourced from the Amazon Web Services Marketplace.\
              \ Additionally, the operation must specify the value of <code>ACTIVE</code>\
              \ for the <code>Status</code> parameter.</p> <ul> <li> <p>As a license\
              \ administrator, you can optionally specify an <code>ActivationOverrideBehavior</code>\
              \ when activating a grant.</p> </li> <li> <p>As a grantor, you can optionally\
              \ specify an <code>ActivationOverrideBehavior</code> when you activate\
              \ a grant for a grantee account in your organization.</p> </li> <li>\
              \ <p>As a grantee, if the grantor creating the distributed grant doesn’\
              t specify an <code>ActivationOverrideBehavior</code>, you can optionally\
              \ specify one when you are activating the grant.</p> </li> </ul> <dl>\
              \ <dt>DISTRIBUTED_GRANTS_ONLY</dt> <dd> <p>Use this value to activate\
              \ a grant without replacing any member account’s active grants for the\
              \ same product.</p> </dd> <dt>ALL_GRANTS_PERMITTED_BY_ISSUER</dt> <dd>\
              \ <p>Use this value to activate a grant and disable other active grants\
              \ in any member accounts for the same product. This action will also\
              \ replace their previously activated grants with this activated grant.</p>\
              \ </dd> </dl>"
          title: ActivationOverrideBehavior
      title: Options
      type: object
    LicenseCountingType:
      enum:
      - vCPU
      - Instance
      - Core
      - Socket
      title: LicenseCountingType
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    ProductInformationList:
      items:
        $ref: '#/components/schemas/ProductInformation'
      type: array
    LicenseConversionContext:
      description: Information about a license type conversion task.
      properties:
        UsageOperation:
          allOf:
          - $ref: '#/components/schemas/UsageOperation'
          - description: "The Usage operation value that corresponds to the license\
              \ type you are converting your resource from. For more information about\
              \ which platforms correspond to which usage operation values see <a\
              \ href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html#billing-info\"\
              >Sample data: usage operation by platform </a> "
          title: UsageOperation
      title: LicenseConversionContext
      type: object
    LicenseConversionTaskId:
      maxLength: 50
      pattern: "^lct-[a-zA-Z0-9]*"
      type: string
    ReportGeneratorName:
      maxLength: 100
      minLength: 1
      type: string
    ReportTypeList:
      items:
        $ref: '#/components/schemas/ReportType'
      type: array
    ReportContext:
      description: Details of the license configuration that this generator reports
        on.
      properties:
        licenseConfigurationArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Name (ARN) of the license configuration that
              this generator reports on.
          title: licenseConfigurationArns
      required:
      - licenseConfigurationArns
      title: ReportContext
      type: object
    ReportFrequency:
      description: Details about how frequently reports are generated.
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Number of times within the frequency period that a report
              is generated. The only supported value is <code>1</code>.
          title: value
        period:
          allOf:
          - $ref: '#/components/schemas/ReportFrequencyType'
          - description: "Time period between each report. The period can be daily,\
              \ weekly, or monthly."
          title: period
      title: ReportFrequency
      type: object
    Issuer:
      description: Details about the issuer of a license.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Issuer name.
          title: Name
        SignKey:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Asymmetric KMS key from Key Management Service. The KMS\
              \ key must have a key usage of sign and verify, and support the RSASSA-PSS\
              \ SHA-256 signing algorithm."
          title: SignKey
      required:
      - Name
      title: Issuer
      type: object
    DatetimeRange:
      description: "Describes a time range, in ISO8601-UTC format."
      properties:
        Begin:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Start of the time range.
          title: Begin
        End:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: End of the time range.
          title: End
      required:
      - Begin
      title: DatetimeRange
      type: object
    EntitlementList:
      items:
        $ref: '#/components/schemas/Entitlement'
      type: array
    LicenseStatus:
      enum:
      - AVAILABLE
      - PENDING_AVAILABLE
      - DEACTIVATED
      - SUSPENDED
      - EXPIRED
      - PENDING_DELETE
      - DELETED
      title: LicenseStatus
      type: string
    Integer:
      type: integer
    MaxSize3StringList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 3
      type: array
    TokenType:
      enum:
      - REFRESH_TOKEN
      title: TokenType
      type: string
    TokenString:
      maxLength: 4096
      pattern: \S+
      type: string
    LicenseDeletionStatus:
      enum:
      - PENDING_DELETE
      - DELETED
      title: LicenseDeletionStatus
      type: string
    Long:
      type: integer
    EntitlementUnit:
      enum:
      - Count
      - None
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      title: EntitlementUnit
      type: string
    Entitlement:
      description: Describes a resource entitled for use with a license.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Entitlement name.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Entitlement resource. Use only if the unit is None.
          title: Value
        MaxCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Maximum entitlement count. Use if the unit is not None.
          title: MaxCount
        Overage:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Indicates whether overages are allowed.
          title: Overage
        Unit:
          allOf:
          - $ref: '#/components/schemas/EntitlementUnit'
          - description: Entitlement unit.
          title: Unit
        AllowCheckIn:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Indicates whether check-ins are allowed.
          title: AllowCheckIn
      required:
      - Name
      - Unit
      title: Entitlement
      type: object
    EntitlementDataUnit:
      enum:
      - Count
      - None
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      title: EntitlementDataUnit
      type: string
    EntitlementData:
      description: Data associated with an entitlement resource.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Entitlement data name.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Entitlement data value.
          title: Value
        Unit:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataUnit'
          - description: Entitlement data unit.
          title: Unit
      required:
      - Name
      - Unit
      title: EntitlementData
      type: object
    EntitlementUsage:
      description: Usage associated with an entitlement resource.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Entitlement usage name.
          title: Name
        ConsumedValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Resource usage consumed.
          title: ConsumedValue
        MaxCount:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Maximum entitlement usage count.
          title: MaxCount
        Unit:
          allOf:
          - $ref: '#/components/schemas/EntitlementDataUnit'
          - description: Entitlement usage unit.
          title: Unit
      required:
      - ConsumedValue
      - Name
      - Unit
      title: EntitlementUsage
      type: object
    EntitlementUsageList:
      items:
        $ref: '#/components/schemas/EntitlementUsage'
      type: array
    FilterName:
      type: string
    FilterValues:
      items:
        $ref: '#/components/schemas/FilterValue'
      type: array
    Filter:
      description: "A filter name and value pair that is used to return more specific\
        \ results from a describe operation. Filters can be used to match a set of\
        \ resources by specific criteria, such as tags, attributes, or IDs."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: Name of the filter. Filter names are case-sensitive.
          title: Name
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "The value of the filter, which is case-sensitive. You can\
              \ only specify one value for the filter."
          title: Values
      title: Filter
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    FilterValue:
      title: FilterValue
      type: string
    Filters:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    Grant:
      description: Describes a grant.
      properties:
        GrantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the grant.
          title: GrantArn
        GrantName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant name.
          title: GrantName
        ParentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Parent ARN.
          title: ParentArn
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: License ARN.
          title: LicenseArn
        GranteePrincipalArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The grantee principal ARN.
          title: GranteePrincipalArn
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region of the grant.
          title: HomeRegion
        GrantStatus:
          allOf:
          - $ref: '#/components/schemas/GrantStatus'
          - description: Grant status.
          title: GrantStatus
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReasonMessage'
          - description: Grant status reason.
          title: StatusReason
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Grant version.
          title: Version
        GrantedOperations:
          allOf:
          - $ref: '#/components/schemas/AllowedOperationList'
          - description: Granted operations.
          title: GrantedOperations
        Options:
          $ref: '#/components/schemas/CreateGrantVersionRequest_Options'
      required:
      - GrantArn
      - GrantName
      - GrantStatus
      - GrantedOperations
      - GranteePrincipalArn
      - HomeRegion
      - LicenseArn
      - ParentArn
      - Version
      title: Grant
      type: object
    ManagedResourceSummaryList:
      items:
        $ref: '#/components/schemas/ManagedResourceSummary'
      type: array
    LicenseConversionTaskStatus:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: LicenseConversionTaskStatus
      type: string
    ReportGenerator:
      description: Describe the details of a report generator.
      properties:
        ReportGeneratorName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the report generator.
          title: ReportGeneratorName
        ReportType:
          allOf:
          - $ref: '#/components/schemas/ReportTypeList'
          - description: Type of reports that are generated.
          title: ReportType
        ReportContext:
          $ref: '#/components/schemas/ReportGenerator_ReportContext'
        ReportFrequency:
          $ref: '#/components/schemas/ReportGenerator_ReportFrequency'
        LicenseManagerReportGeneratorArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the report generator.
          title: LicenseManagerReportGeneratorArn
        LastRunStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Status of the last report generation attempt.
          title: LastRunStatus
        LastRunFailureReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Failure message for the last report generation attempt.
          title: LastRunFailureReason
        LastReportGenerationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Time the last report was generated at.
          title: LastReportGenerationTime
        ReportCreatorAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Web Services account ID used to create the report
              generator.
          title: ReportCreatorAccount
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the report generator.
          title: Description
        S3Location:
          $ref: '#/components/schemas/ReportGenerator_S3Location'
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Time the report was created.
          title: CreateTime
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags associated with the report generator.
          title: Tags
      title: ReportGenerator
      type: object
    License:
      description: Software license that is managed in License Manager.
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        LicenseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License name.
          title: LicenseName
        ProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product name.
          title: ProductName
        ProductSKU:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product SKU.
          title: ProductSKU
        Issuer:
          $ref: '#/components/schemas/License_Issuer'
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region of the license.
          title: HomeRegion
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseStatus'
          - description: License status.
          title: Status
        Validity:
          $ref: '#/components/schemas/CreateLicenseRequest_Validity'
        Beneficiary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License beneficiary.
          title: Beneficiary
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementList'
          - description: License entitlements.
          title: Entitlements
        ConsumptionConfiguration:
          $ref: '#/components/schemas/License_ConsumptionConfiguration'
        LicenseMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: License metadata.
          title: LicenseMetadata
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: License creation time.
          title: CreateTime
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License version.
          title: Version
      title: License
      type: object
    LicenseUsage:
      description: Describes the entitlement usage associated with a license.
      properties:
        EntitlementUsages:
          allOf:
          - $ref: '#/components/schemas/EntitlementUsageList'
          - description: License entitlement usages.
          title: EntitlementUsages
      title: LicenseUsage
      type: object
    OrganizationConfiguration:
      description: Configuration information for Organizations.
      properties:
        EnableIntegration:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables Organizations integration.
          title: EnableIntegration
      required:
      - EnableIntegration
      title: OrganizationConfiguration
      type: object
    GrantList:
      items:
        $ref: '#/components/schemas/Grant'
      type: array
    IssuerDetails:
      description: Details associated with the issuer of a license.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Issuer name.
          title: Name
        SignKey:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Asymmetric KMS key from Key Management Service. The KMS\
              \ key must have a key usage of sign and verify, and support the RSASSA-PSS\
              \ SHA-256 signing algorithm."
          title: SignKey
        KeyFingerprint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Issuer key fingerprint.
          title: KeyFingerprint
      title: IssuerDetails
      type: object
    ReceivedMetadata:
      description: Metadata associated with received licenses and grants.
      properties:
        ReceivedStatus:
          allOf:
          - $ref: '#/components/schemas/ReceivedStatus'
          - description: Received status.
          title: ReceivedStatus
        ReceivedStatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReasonMessage'
          - description: Received status reason.
          title: ReceivedStatusReason
        AllowedOperations:
          allOf:
          - $ref: '#/components/schemas/AllowedOperationList'
          - description: Allowed operations.
          title: AllowedOperations
      title: ReceivedMetadata
      type: object
    GrantedLicense:
      description: Describes a license that is granted to a grantee.
      properties:
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        LicenseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License name.
          title: LicenseName
        ProductName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product name.
          title: ProductName
        ProductSKU:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Product SKU.
          title: ProductSKU
        Issuer:
          $ref: '#/components/schemas/GrantedLicense_Issuer'
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Home Region of the granted license.
          title: HomeRegion
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseStatus'
          - description: Granted license status.
          title: Status
        Validity:
          $ref: '#/components/schemas/GrantedLicense_Validity'
        Beneficiary:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Granted license beneficiary.
          title: Beneficiary
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementList'
          - description: License entitlements.
          title: Entitlements
        ConsumptionConfiguration:
          $ref: '#/components/schemas/License_ConsumptionConfiguration'
        LicenseMetadata:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Granted license metadata.
          title: LicenseMetadata
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: Creation time of the granted license.
          title: CreateTime
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Version of the granted license.
          title: Version
        ReceivedMetadata:
          $ref: '#/components/schemas/GrantedLicense_ReceivedMetadata'
      title: GrantedLicense
      type: object
    GrantedLicenseList:
      items:
        $ref: '#/components/schemas/GrantedLicense'
      type: array
    InventoryFilterCondition:
      enum:
      - EQUALS
      - NOT_EQUALS
      - BEGINS_WITH
      - CONTAINS
      title: InventoryFilterCondition
      type: string
    InventoryFilter:
      description: An inventory filter.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the filter.
          title: Name
        Condition:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterCondition'
          - description: Condition of the filter.
          title: Condition
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Value of the filter.
          title: Value
      required:
      - Condition
      - Name
      title: InventoryFilter
      type: object
    InventoryFilterList:
      items:
        $ref: '#/components/schemas/InventoryFilter'
      type: array
    LicenseConfiguration:
      description: "A license configuration is an abstraction of a customer license\
        \ agreement that can be consumed and enforced by License Manager. Components\
        \ include specifications for the license type (licensing by instance, socket,\
        \ CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated\
        \ Host, or all of these), host affinity (how long a VM must be associated\
        \ with a host), and the number of licenses purchased and used."
      properties:
        LicenseConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Unique ID of the license configuration.
          title: LicenseConfigurationId
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the license configuration.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Description of the license configuration.
          title: Description
        LicenseCountingType:
          allOf:
          - $ref: '#/components/schemas/LicenseCountingType'
          - description: Dimension to use to track the license inventory.
          title: LicenseCountingType
        LicenseRules:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: License rules.
          title: LicenseRules
        LicenseCount:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of licenses managed by the license configuration.
          title: LicenseCount
        LicenseCountHardLimit:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: Number of available licenses as a hard limit.
          title: LicenseCountHardLimit
        DisassociateWhenNotFound:
          allOf:
          - $ref: '#/components/schemas/BoxBoolean'
          - description: "When true, disassociates a resource when software is uninstalled."
          title: DisassociateWhenNotFound
        ConsumedLicenses:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: 'Number of licenses consumed. '
          title: ConsumedLicenses
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Status of the license configuration.
          title: Status
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Account ID of the license configuration's owner.
          title: OwnerAccountId
        ConsumedLicenseSummaryList:
          allOf:
          - $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          - description: Summaries for licenses consumed by various resources.
          title: ConsumedLicenseSummaryList
        ManagedResourceSummaryList:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceSummaryList'
          - description: Summaries for managed resources.
          title: ManagedResourceSummaryList
        ProductInformationList:
          allOf:
          - $ref: '#/components/schemas/ProductInformationList'
          - description: Product information.
          title: ProductInformationList
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/GetLicenseConfigurationResponse_AutomatedDiscoveryInformation'
      title: LicenseConfiguration
      type: object
    LicenseConfigurationAssociation:
      description: Describes an association with a license configuration.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Type of server resource.
          title: ResourceType
        ResourceOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the Amazon Web Services account that owns the resource
              consuming licenses.
          title: ResourceOwnerId
        AssociationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Time when the license configuration was associated with the
              resource.
          title: AssociationTime
        AmiAssociationScope:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Scope of AMI associations. The possible value is <code>cross-account</code>.
          title: AmiAssociationScope
      title: LicenseConfigurationAssociation
      type: object
    LicenseConfigurationAssociations:
      items:
        $ref: '#/components/schemas/LicenseConfigurationAssociation'
      type: array
    LicenseConfigurationStatus:
      enum:
      - AVAILABLE
      - DISABLED
      title: LicenseConfigurationStatus
      type: string
    LicenseConfigurationUsage:
      description: Details about the usage of a resource associated with a license
        configuration.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Type of resource.
          title: ResourceType
        ResourceStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Status of the resource.
          title: ResourceStatus
        ResourceOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the account that owns the resource.
          title: ResourceOwnerId
        AssociationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Time when the license configuration was initially associated
              with the resource.
          title: AssociationTime
        ConsumedLicenses:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of licenses consumed by the resource.
          title: ConsumedLicenses
      title: LicenseConfigurationUsage
      type: object
    LicenseConfigurationUsageList:
      items:
        $ref: '#/components/schemas/LicenseConfigurationUsage'
      type: array
    LicenseConfigurations:
      items:
        $ref: '#/components/schemas/LicenseConfiguration'
      type: array
    UsageOperation:
      maxLength: 50
      type: string
    LicenseConversionTask:
      description: Information about a license type conversion task.
      properties:
        LicenseConversionTaskId:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskId'
          - description: The ID of the license type conversion task.
          title: LicenseConversionTaskId
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource associated
              with the license type conversion task.
          title: ResourceArn
        SourceLicenseContext:
          $ref: '#/components/schemas/LicenseConversionTask_SourceLicenseContext'
        DestinationLicenseContext:
          $ref: '#/components/schemas/LicenseConversionTask_DestinationLicenseContext'
        Status:
          allOf:
          - $ref: '#/components/schemas/LicenseConversionTaskStatus'
          - description: The status of the conversion task.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the conversion task.
          title: StatusMessage
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the conversion task was started at.
          title: StartTime
        LicenseConversionTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the usage operation value of the resource was changed.
          title: LicenseConversionTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the conversion task was completed.
          title: EndTime
      title: LicenseConversionTask
      type: object
    LicenseConversionTasks:
      items:
        $ref: '#/components/schemas/LicenseConversionTask'
      type: array
    LicenseList:
      items:
        $ref: '#/components/schemas/License'
      type: array
    LicenseOperationFailure:
      description: Describes the failure of a license operation.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Resource type.
          title: ResourceType
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Error message.
          title: ErrorMessage
        FailureTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Failure time.
          title: FailureTime
        OperationName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the operation.
          title: OperationName
        ResourceOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the Amazon Web Services account that owns the resource.
          title: ResourceOwnerId
        OperationRequestedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The requester is "License Manager Automated Discovery".
          title: OperationRequestedBy
        MetadataList:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: Reserved.
          title: MetadataList
      title: LicenseOperationFailure
      type: object
    LicenseOperationFailureList:
      items:
        $ref: '#/components/schemas/LicenseOperationFailure'
      type: array
    LicenseSpecification:
      description: Details for associating a license configuration with a resource.
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license configuration.
          title: LicenseConfigurationArn
        AmiAssociationScope:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Scope of AMI associations. The possible value is <code>cross-account</code>.
          title: AmiAssociationScope
      required:
      - LicenseConfigurationArn
      title: LicenseSpecification
      type: object
    LicenseSpecifications:
      items:
        $ref: '#/components/schemas/LicenseSpecification'
      type: array
    MaxSize100:
      maximum: 100
      minimum: 1
      type: integer
    ReportGeneratorList:
      items:
        $ref: '#/components/schemas/ReportGenerator'
      type: array
    ResourceInventoryList:
      items:
        $ref: '#/components/schemas/ResourceInventory'
      type: array
    TokenList:
      items:
        $ref: '#/components/schemas/TokenData'
      type: array
    ManagedResourceSummary:
      description: Summary information about a managed resource.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Type of resource associated with a license.
          title: ResourceType
        AssociationCount:
          allOf:
          - $ref: '#/components/schemas/BoxLong'
          - description: Number of resources associated with licenses.
          title: AssociationCount
      title: ManagedResourceSummary
      type: object
    Metadata:
      description: Describes key/value pairs.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key name.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value.
          title: Value
      title: Metadata
      type: object
    ProductInformationFilterList:
      items:
        $ref: '#/components/schemas/ProductInformationFilter'
      type: array
    ProductInformation:
      description: Describes product information for a license configuration.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Resource type. The possible values are <code>SSM_MANAGED</code>
              | <code>RDS</code>.
          title: ResourceType
        ProductInformationFilterList:
          allOf:
          - $ref: '#/components/schemas/ProductInformationFilterList'
          - description: "<p>A Product information filter consists of a <code>ProductInformationFilterComparator</code>\
              \ which is a logical operator, a <code>ProductInformationFilterName</code>\
              \ which specifies the type of filter being declared, and a <code>ProductInformationFilterValue</code>\
              \ that specifies the value to filter on. </p> <p>Accepted values for\
              \ <code>ProductInformationFilterName</code> are listed here along with\
              \ descriptions and valid options for <code>ProductInformationFilterComparator</code>.\
              \ </p> <p>The following filters and are supported when the resource\
              \ type is <code>SSM_MANAGED</code>:</p> <ul> <li> <p> <code>Application\
              \ Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p>\
              \ </li> <li> <p> <code>Application Publisher</code> - The publisher\
              \ of the application. Logical operator is <code>EQUALS</code>.</p> </li>\
              \ <li> <p> <code>Application Version</code> - The version of the application.\
              \ Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform\
              \ Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p>\
              \ </li> <li> <p> <code>Platform Type</code> - The platform type. Logical\
              \ operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Tag:key</code>\
              \ - The key of a tag attached to an Amazon Web Services resource you\
              \ wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.\
              \ The key for your tag must be appended to <code>Tag:</code> following\
              \ the example: <code>Tag:name-of-your-key</code>. <code>ProductInformationFilterValue</code>\
              \ is optional if you are not using values for the key. </p> </li> <li>\
              \ <p> <code>AccountId</code> - The 12-digit ID of an Amazon Web Services\
              \ account you wish to exclude from automated discovery. Logical operator\
              \ is <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>License Included</code>\
              \ - The type of license included. Logical operators are <code>EQUALS</code>\
              \ and <code>NOT_EQUALS</code>. Possible values are: <code>sql-server-enterprise</code>\
              \ | <code>sql-server-standard</code> | <code>sql-server-web</code> |\
              \ <code>windows-server-datacenter</code>.</p> </li> </ul> <p>The following\
              \ filters and logical operators are supported when the resource type\
              \ is <code>RDS</code>:</p> <ul> <li> <p> <code>Engine Edition</code>\
              \ - The edition of the database engine. Logical operator is <code>EQUALS</code>.\
              \ Possible values are: <code>oracle-ee</code> | <code>oracle-se</code>\
              \ | <code>oracle-se1</code> | <code>oracle-se2</code>.</p> </li> <li>\
              \ <p> <code>License Pack</code> - The license pack. Logical operator\
              \ is <code>EQUALS</code>. Possible values are: <code>data guard</code>\
              \ | <code>diagnostic pack sqlt</code> | <code>tuning pack sqlt</code>\
              \ | <code>ols</code> | <code>olap</code>.</p> </li> </ul>"
          title: ProductInformationFilterList
      required:
      - ProductInformationFilterList
      - ResourceType
      title: ProductInformation
      type: object
    ProductInformationFilter:
      description: Describes product information filters.
      properties:
        ProductInformationFilterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Filter name.
          title: ProductInformationFilterName
        ProductInformationFilterValue:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Filter value.
          title: ProductInformationFilterValue
        ProductInformationFilterComparator:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Logical operator.
          title: ProductInformationFilterComparator
      required:
      - ProductInformationFilterComparator
      - ProductInformationFilterName
      title: ProductInformationFilter
      type: object
    ReceivedStatus:
      enum:
      - PENDING_WORKFLOW
      - PENDING_ACCEPT
      - REJECTED
      - ACTIVE
      - FAILED_WORKFLOW
      - DELETED
      - DISABLED
      - WORKFLOW_COMPLETED
      title: ReceivedStatus
      type: string
    ReportFrequencyType:
      enum:
      - DAY
      - WEEK
      - MONTH
      title: ReportFrequencyType
      type: string
    S3Location:
      description: Details of the S3 bucket that report generator reports are published
        to.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the S3 bucket reports are published to.
          title: bucket
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Prefix of the S3 bucket reports are published to.
          title: keyPrefix
      title: S3Location
      type: object
    ReportType:
      enum:
      - LicenseConfigurationSummaryReport
      - LicenseConfigurationUsageReport
      title: ReportType
      type: string
    ResourceInventory:
      description: Details about a resource.
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the resource.
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Type of resource.
          title: ResourceType
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        Platform:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Platform of the resource.
          title: Platform
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Platform version of the resource in the inventory.
          title: PlatformVersion
        ResourceOwningAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ID of the account that owns the resource.
          title: ResourceOwningAccountId
      title: ResourceInventory
      type: object
    Tag:
      description: Details about a tag for a license configuration.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Tag key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Tag value.
          title: Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TokenData:
      description: Describes a token.
      properties:
        TokenId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token ID.
          title: TokenId
        TokenType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Type of token generated. The supported value is <code>REFRESH_TOKEN</code>.
          title: TokenType
        LicenseArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the license.
          title: LicenseArn
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DateTime'
          - description: "Token expiration time, in ISO8601-UTC format."
          title: ExpirationTime
        TokenProperties:
          allOf:
          - $ref: '#/components/schemas/MaxSize3StringList'
          - description: Data specified by the caller.
          title: TokenProperties
        RoleArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Amazon Resource Names (ARN) of the roles included in the
              token.
          title: RoleArns
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Token status. The possible values are <code>AVAILABLE</code>
              and <code>DELETED</code>.
          title: Status
      title: TokenData
      type: object
    CreateGrantVersionRequest_Options:
      allOf:
      - $ref: '#/components/schemas/Options'
      - description: The options specified for the grant.
      example:
        ActivationOverrideBehavior: ""
      title: CreateGrantVersionRequest_Options
    CreateLicenseRequest_Issuer:
      allOf:
      - $ref: '#/components/schemas/Issuer'
      - description: License issuer.
      example:
        SignKey: ""
        Name: ""
      title: CreateLicenseRequest_Issuer
    CreateLicenseRequest_Validity:
      allOf:
      - $ref: '#/components/schemas/DatetimeRange'
      - description: "Date and time range during which the license is valid, in ISO8601-UTC\
          \ format."
      example:
        Begin: ""
        End: ""
      title: CreateLicenseRequest_Validity
    CreateLicenseRequest_ConsumptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ConsumptionConfiguration'
      - description: Configuration for consumption of the license. Choose a provisional
          configuration for workloads running with continuous connectivity. Choose
          a borrow configuration for workloads with offline usage.
      example:
        BorrowConfiguration:
          AllowEarlyCheckIn: ""
          MaxTimeToLiveInMinutes: ""
        RenewType: ""
        ProvisionalConfiguration:
          MaxTimeToLiveInMinutes: ""
      title: CreateLicenseRequest_ConsumptionConfiguration
    CreateLicenseConversionTaskForResourceRequest_SourceLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: "Information that identifies the license type you are converting\
          \ from. For the structure of the source license, see <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli\"\
          >Convert a license type using the CLI </a> in the <i>License Manager User\
          \ Guide</i>."
      example:
        UsageOperation: ""
      title: CreateLicenseConversionTaskForResourceRequest_SourceLicenseContext
    CreateLicenseConversionTaskForResourceRequest_DestinationLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: "Information that identifies the license type you are converting\
          \ to. For the structure of the destination license, see <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli\"\
          >Convert a license type using the CLI </a> in the <i>License Manager User\
          \ Guide</i>."
      example:
        UsageOperation: ""
      title: CreateLicenseConversionTaskForResourceRequest_DestinationLicenseContext
    CreateLicenseManagerReportGeneratorRequest_ReportContext:
      allOf:
      - $ref: '#/components/schemas/ReportContext'
      - description: Defines the type of license configuration the report generator
          tracks.
      example:
        licenseConfigurationArns: ""
      title: CreateLicenseManagerReportGeneratorRequest_ReportContext
    CreateLicenseManagerReportGeneratorRequest_ReportFrequency:
      allOf:
      - $ref: '#/components/schemas/ReportFrequency'
      - description: "Frequency by which reports are generated. Reports can be generated\
          \ daily, monthly, or weekly."
      example:
        period: ""
        value: ""
      title: CreateLicenseManagerReportGeneratorRequest_ReportFrequency
    GetGrantResponse_Grant:
      allOf:
      - $ref: '#/components/schemas/Grant'
      - description: Grant details.
      example:
        Options:
          ActivationOverrideBehavior: ""
        GrantArn: ""
        HomeRegion: ""
        Version: ""
        GranteePrincipalArn: ""
        StatusReason: ""
        GrantStatus: ""
        GrantedOperations: ""
        ParentArn: ""
        LicenseArn: ""
        GrantName: ""
      title: GetGrantResponse_Grant
    GetLicenseResponse_License:
      allOf:
      - $ref: '#/components/schemas/License'
      - description: License details.
      example:
        ProductSKU: ""
        Status: ""
        ConsumptionConfiguration:
          BorrowConfiguration:
            AllowEarlyCheckIn: ""
            MaxTimeToLiveInMinutes: ""
          RenewType: ""
          ProvisionalConfiguration:
            MaxTimeToLiveInMinutes: ""
        ProductName: ""
        Issuer:
          SignKey: ""
          KeyFingerprint: ""
          Name: ""
        HomeRegion: ""
        CreateTime: ""
        Validity:
          Begin: ""
          End: ""
        Version: ""
        Entitlements: ""
        LicenseMetadata: ""
        LicenseArn: ""
        LicenseName: ""
        Beneficiary: ""
      title: GetLicenseResponse_License
    GetLicenseConfigurationResponse_AutomatedDiscoveryInformation:
      allOf:
      - $ref: '#/components/schemas/AutomatedDiscoveryInformation'
      - description: Automated discovery information.
      example:
        LastRunTime: ""
      title: GetLicenseConfigurationResponse_AutomatedDiscoveryInformation
    GetLicenseConversionTaskResponse_SourceLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: Information about the license type converted from.
      example:
        UsageOperation: ""
      title: GetLicenseConversionTaskResponse_SourceLicenseContext
    GetLicenseConversionTaskResponse_DestinationLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: Information about the license type converted to.
      example:
        UsageOperation: ""
      title: GetLicenseConversionTaskResponse_DestinationLicenseContext
    GetLicenseManagerReportGeneratorResponse_ReportGenerator:
      allOf:
      - $ref: '#/components/schemas/ReportGenerator'
      - description: A report generator that creates periodic reports about your license
          configurations.
      example:
        Description: ""
        LastReportGenerationTime: ""
        ReportCreatorAccount: ""
        CreateTime: ""
        LastRunStatus: ""
        ReportFrequency:
          period: ""
          value: ""
        S3Location:
          bucket: ""
          keyPrefix: ""
        ReportGeneratorName: ""
        LicenseManagerReportGeneratorArn: ""
        LastRunFailureReason: ""
        ReportContext:
          licenseConfigurationArns: ""
        ReportType: ""
        Tags: ""
      title: GetLicenseManagerReportGeneratorResponse_ReportGenerator
    GetLicenseUsageResponse_LicenseUsage:
      allOf:
      - $ref: '#/components/schemas/LicenseUsage'
      - description: License usage details.
      example:
        EntitlementUsages: ""
      title: GetLicenseUsageResponse_LicenseUsage
    GetServiceSettingsResponse_OrganizationConfiguration:
      allOf:
      - $ref: '#/components/schemas/OrganizationConfiguration'
      - description: Indicates whether Organizations is integrated with License Manager
          for cross-account discovery.
      example:
        EnableIntegration: ""
      title: GetServiceSettingsResponse_OrganizationConfiguration
    UpdateLicenseManagerReportGeneratorRequest_ReportContext:
      allOf:
      - $ref: '#/components/schemas/ReportContext'
      - description: The report context.
      example:
        licenseConfigurationArns: ""
      title: UpdateLicenseManagerReportGeneratorRequest_ReportContext
    UpdateLicenseManagerReportGeneratorRequest_ReportFrequency:
      allOf:
      - $ref: '#/components/schemas/ReportFrequency'
      - description: Frequency by which reports are generated.
      example:
        period: ""
        value: ""
      title: UpdateLicenseManagerReportGeneratorRequest_ReportFrequency
    UpdateServiceSettingsRequest_OrganizationConfiguration:
      allOf:
      - $ref: '#/components/schemas/OrganizationConfiguration'
      - description: Enables integration with Organizations for cross-account discovery.
      example:
        EnableIntegration: ""
      title: UpdateServiceSettingsRequest_OrganizationConfiguration
    ConsumptionConfiguration_ProvisionalConfiguration:
      allOf:
      - $ref: '#/components/schemas/ProvisionalConfiguration'
      - description: Details about a provisional configuration.
      example:
        MaxTimeToLiveInMinutes: ""
      title: ConsumptionConfiguration_ProvisionalConfiguration
    ConsumptionConfiguration_BorrowConfiguration:
      allOf:
      - $ref: '#/components/schemas/BorrowConfiguration'
      - description: Details about a borrow configuration.
      example:
        AllowEarlyCheckIn: ""
        MaxTimeToLiveInMinutes: ""
      title: ConsumptionConfiguration_BorrowConfiguration
    ReportGenerator_ReportContext:
      allOf:
      - $ref: '#/components/schemas/ReportContext'
      - description: License configuration type for this generator.
      example:
        licenseConfigurationArns: ""
      title: ReportGenerator_ReportContext
    ReportGenerator_ReportFrequency:
      allOf:
      - $ref: '#/components/schemas/ReportFrequency'
      - description: Details about how frequently reports are generated.
      example:
        period: ""
        value: ""
      title: ReportGenerator_ReportFrequency
    ReportGenerator_S3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: Details of the S3 bucket that report generator reports are published
          to.
      example:
        bucket: ""
        keyPrefix: ""
      title: ReportGenerator_S3Location
    License_Issuer:
      allOf:
      - $ref: '#/components/schemas/IssuerDetails'
      - description: License issuer.
      example:
        SignKey: ""
        KeyFingerprint: ""
        Name: ""
      title: License_Issuer
    License_ConsumptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ConsumptionConfiguration'
      - description: Configuration for consumption of the license.
      example:
        BorrowConfiguration:
          AllowEarlyCheckIn: ""
          MaxTimeToLiveInMinutes: ""
        RenewType: ""
        ProvisionalConfiguration:
          MaxTimeToLiveInMinutes: ""
      title: License_ConsumptionConfiguration
    GrantedLicense_Issuer:
      allOf:
      - $ref: '#/components/schemas/IssuerDetails'
      - description: Granted license issuer.
      title: GrantedLicense_Issuer
    GrantedLicense_Validity:
      allOf:
      - $ref: '#/components/schemas/DatetimeRange'
      - description: "Date and time range during which the granted license is valid,\
          \ in ISO8601-UTC format."
      title: GrantedLicense_Validity
    GrantedLicense_ReceivedMetadata:
      allOf:
      - $ref: '#/components/schemas/ReceivedMetadata'
      - description: Granted license received metadata.
      title: GrantedLicense_ReceivedMetadata
    LicenseConversionTask_SourceLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: Information about the license type this conversion task converted
          from.
      title: LicenseConversionTask_SourceLicenseContext
    LicenseConversionTask_DestinationLicenseContext:
      allOf:
      - $ref: '#/components/schemas/LicenseConversionContext'
      - description: Information about the license type this conversion task converted
          to.
      title: LicenseConversionTask_DestinationLicenseContext
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
