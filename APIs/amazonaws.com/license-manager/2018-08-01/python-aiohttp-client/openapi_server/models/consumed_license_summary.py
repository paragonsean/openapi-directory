# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_type import ResourceType
from openapi_server import util


class ConsumedLicenseSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: ResourceType=None, consumed_licenses: int=None):
        """ConsumedLicenseSummary - a model defined in OpenAPI

        :param resource_type: The resource_type of this ConsumedLicenseSummary.
        :param consumed_licenses: The consumed_licenses of this ConsumedLicenseSummary.
        """
        self.openapi_types = {
            'resource_type': ResourceType,
            'consumed_licenses': int
        }

        self.attribute_map = {
            'resource_type': 'ResourceType',
            'consumed_licenses': 'ConsumedLicenses'
        }

        self._resource_type = resource_type
        self._consumed_licenses = consumed_licenses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsumedLicenseSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsumedLicenseSummary of this ConsumedLicenseSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this ConsumedLicenseSummary.


        :return: The resource_type of this ConsumedLicenseSummary.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ConsumedLicenseSummary.


        :param resource_type: The resource_type of this ConsumedLicenseSummary.
        :type resource_type: ResourceType
        """

        self._resource_type = resource_type

    @property
    def consumed_licenses(self):
        """Gets the consumed_licenses of this ConsumedLicenseSummary.


        :return: The consumed_licenses of this ConsumedLicenseSummary.
        :rtype: int
        """
        return self._consumed_licenses

    @consumed_licenses.setter
    def consumed_licenses(self, consumed_licenses):
        """Sets the consumed_licenses of this ConsumedLicenseSummary.


        :param consumed_licenses: The consumed_licenses of this ConsumedLicenseSummary.
        :type consumed_licenses: int
        """

        self._consumed_licenses = consumed_licenses
