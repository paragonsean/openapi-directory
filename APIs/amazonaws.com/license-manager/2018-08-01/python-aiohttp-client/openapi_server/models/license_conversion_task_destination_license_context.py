# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LicenseConversionTaskDestinationLicenseContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, usage_operation: str=None):
        """LicenseConversionTaskDestinationLicenseContext - a model defined in OpenAPI

        :param usage_operation: The usage_operation of this LicenseConversionTaskDestinationLicenseContext.
        """
        self.openapi_types = {
            'usage_operation': str
        }

        self.attribute_map = {
            'usage_operation': 'UsageOperation'
        }

        self._usage_operation = usage_operation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LicenseConversionTaskDestinationLicenseContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LicenseConversionTask_DestinationLicenseContext of this LicenseConversionTaskDestinationLicenseContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usage_operation(self):
        """Gets the usage_operation of this LicenseConversionTaskDestinationLicenseContext.


        :return: The usage_operation of this LicenseConversionTaskDestinationLicenseContext.
        :rtype: str
        """
        return self._usage_operation

    @usage_operation.setter
    def usage_operation(self, usage_operation):
        """Sets the usage_operation of this LicenseConversionTaskDestinationLicenseContext.


        :param usage_operation: The usage_operation of this LicenseConversionTaskDestinationLicenseContext.
        :type usage_operation: str
        """

        self._usage_operation = usage_operation
