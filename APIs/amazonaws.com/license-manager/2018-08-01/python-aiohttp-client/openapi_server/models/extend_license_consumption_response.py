# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtendLicenseConsumptionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_consumption_token: str=None, expiration: str=None):
        """ExtendLicenseConsumptionResponse - a model defined in OpenAPI

        :param license_consumption_token: The license_consumption_token of this ExtendLicenseConsumptionResponse.
        :param expiration: The expiration of this ExtendLicenseConsumptionResponse.
        """
        self.openapi_types = {
            'license_consumption_token': str,
            'expiration': str
        }

        self.attribute_map = {
            'license_consumption_token': 'LicenseConsumptionToken',
            'expiration': 'Expiration'
        }

        self._license_consumption_token = license_consumption_token
        self._expiration = expiration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendLicenseConsumptionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendLicenseConsumptionResponse of this ExtendLicenseConsumptionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_consumption_token(self):
        """Gets the license_consumption_token of this ExtendLicenseConsumptionResponse.


        :return: The license_consumption_token of this ExtendLicenseConsumptionResponse.
        :rtype: str
        """
        return self._license_consumption_token

    @license_consumption_token.setter
    def license_consumption_token(self, license_consumption_token):
        """Sets the license_consumption_token of this ExtendLicenseConsumptionResponse.


        :param license_consumption_token: The license_consumption_token of this ExtendLicenseConsumptionResponse.
        :type license_consumption_token: str
        """

        self._license_consumption_token = license_consumption_token

    @property
    def expiration(self):
        """Gets the expiration of this ExtendLicenseConsumptionResponse.


        :return: The expiration of this ExtendLicenseConsumptionResponse.
        :rtype: str
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this ExtendLicenseConsumptionResponse.


        :param expiration: The expiration of this ExtendLicenseConsumptionResponse.
        :type expiration: str
        """

        self._expiration = expiration
