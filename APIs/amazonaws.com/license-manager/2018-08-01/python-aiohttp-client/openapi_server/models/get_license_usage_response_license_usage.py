# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetLicenseUsageResponseLicenseUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement_usages: List=None):
        """GetLicenseUsageResponseLicenseUsage - a model defined in OpenAPI

        :param entitlement_usages: The entitlement_usages of this GetLicenseUsageResponseLicenseUsage.
        """
        self.openapi_types = {
            'entitlement_usages': List
        }

        self.attribute_map = {
            'entitlement_usages': 'EntitlementUsages'
        }

        self._entitlement_usages = entitlement_usages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLicenseUsageResponseLicenseUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetLicenseUsageResponse_LicenseUsage of this GetLicenseUsageResponseLicenseUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement_usages(self):
        """Gets the entitlement_usages of this GetLicenseUsageResponseLicenseUsage.


        :return: The entitlement_usages of this GetLicenseUsageResponseLicenseUsage.
        :rtype: List
        """
        return self._entitlement_usages

    @entitlement_usages.setter
    def entitlement_usages(self, entitlement_usages):
        """Sets the entitlement_usages of this GetLicenseUsageResponseLicenseUsage.


        :param entitlement_usages: The entitlement_usages of this GetLicenseUsageResponseLicenseUsage.
        :type entitlement_usages: List
        """

        self._entitlement_usages = entitlement_usages
