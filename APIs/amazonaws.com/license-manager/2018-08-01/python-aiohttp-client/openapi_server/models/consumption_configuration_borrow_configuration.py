# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsumptionConfigurationBorrowConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_early_check_in: bool=None, max_time_to_live_in_minutes: int=None):
        """ConsumptionConfigurationBorrowConfiguration - a model defined in OpenAPI

        :param allow_early_check_in: The allow_early_check_in of this ConsumptionConfigurationBorrowConfiguration.
        :param max_time_to_live_in_minutes: The max_time_to_live_in_minutes of this ConsumptionConfigurationBorrowConfiguration.
        """
        self.openapi_types = {
            'allow_early_check_in': bool,
            'max_time_to_live_in_minutes': int
        }

        self.attribute_map = {
            'allow_early_check_in': 'AllowEarlyCheckIn',
            'max_time_to_live_in_minutes': 'MaxTimeToLiveInMinutes'
        }

        self._allow_early_check_in = allow_early_check_in
        self._max_time_to_live_in_minutes = max_time_to_live_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsumptionConfigurationBorrowConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsumptionConfiguration_BorrowConfiguration of this ConsumptionConfigurationBorrowConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_early_check_in(self):
        """Gets the allow_early_check_in of this ConsumptionConfigurationBorrowConfiguration.


        :return: The allow_early_check_in of this ConsumptionConfigurationBorrowConfiguration.
        :rtype: bool
        """
        return self._allow_early_check_in

    @allow_early_check_in.setter
    def allow_early_check_in(self, allow_early_check_in):
        """Sets the allow_early_check_in of this ConsumptionConfigurationBorrowConfiguration.


        :param allow_early_check_in: The allow_early_check_in of this ConsumptionConfigurationBorrowConfiguration.
        :type allow_early_check_in: bool
        """
        if allow_early_check_in is None:
            raise ValueError("Invalid value for `allow_early_check_in`, must not be `None`")

        self._allow_early_check_in = allow_early_check_in

    @property
    def max_time_to_live_in_minutes(self):
        """Gets the max_time_to_live_in_minutes of this ConsumptionConfigurationBorrowConfiguration.


        :return: The max_time_to_live_in_minutes of this ConsumptionConfigurationBorrowConfiguration.
        :rtype: int
        """
        return self._max_time_to_live_in_minutes

    @max_time_to_live_in_minutes.setter
    def max_time_to_live_in_minutes(self, max_time_to_live_in_minutes):
        """Sets the max_time_to_live_in_minutes of this ConsumptionConfigurationBorrowConfiguration.


        :param max_time_to_live_in_minutes: The max_time_to_live_in_minutes of this ConsumptionConfigurationBorrowConfiguration.
        :type max_time_to_live_in_minutes: int
        """
        if max_time_to_live_in_minutes is None:
            raise ValueError("Invalid value for `max_time_to_live_in_minutes`, must not be `None`")

        self._max_time_to_live_in_minutes = max_time_to_live_in_minutes
