# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_type import ResourceType
from openapi_server import util


class ResourceInventory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, resource_type: ResourceType=None, resource_arn: str=None, platform: str=None, platform_version: str=None, resource_owning_account_id: str=None):
        """ResourceInventory - a model defined in OpenAPI

        :param resource_id: The resource_id of this ResourceInventory.
        :param resource_type: The resource_type of this ResourceInventory.
        :param resource_arn: The resource_arn of this ResourceInventory.
        :param platform: The platform of this ResourceInventory.
        :param platform_version: The platform_version of this ResourceInventory.
        :param resource_owning_account_id: The resource_owning_account_id of this ResourceInventory.
        """
        self.openapi_types = {
            'resource_id': str,
            'resource_type': ResourceType,
            'resource_arn': str,
            'platform': str,
            'platform_version': str,
            'resource_owning_account_id': str
        }

        self.attribute_map = {
            'resource_id': 'ResourceId',
            'resource_type': 'ResourceType',
            'resource_arn': 'ResourceArn',
            'platform': 'Platform',
            'platform_version': 'PlatformVersion',
            'resource_owning_account_id': 'ResourceOwningAccountId'
        }

        self._resource_id = resource_id
        self._resource_type = resource_type
        self._resource_arn = resource_arn
        self._platform = platform
        self._platform_version = platform_version
        self._resource_owning_account_id = resource_owning_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceInventory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceInventory of this ResourceInventory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self):
        """Gets the resource_id of this ResourceInventory.


        :return: The resource_id of this ResourceInventory.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ResourceInventory.


        :param resource_id: The resource_id of this ResourceInventory.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this ResourceInventory.


        :return: The resource_type of this ResourceInventory.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ResourceInventory.


        :param resource_type: The resource_type of this ResourceInventory.
        :type resource_type: ResourceType
        """

        self._resource_type = resource_type

    @property
    def resource_arn(self):
        """Gets the resource_arn of this ResourceInventory.


        :return: The resource_arn of this ResourceInventory.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this ResourceInventory.


        :param resource_arn: The resource_arn of this ResourceInventory.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def platform(self):
        """Gets the platform of this ResourceInventory.


        :return: The platform of this ResourceInventory.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this ResourceInventory.


        :param platform: The platform of this ResourceInventory.
        :type platform: str
        """

        self._platform = platform

    @property
    def platform_version(self):
        """Gets the platform_version of this ResourceInventory.


        :return: The platform_version of this ResourceInventory.
        :rtype: str
        """
        return self._platform_version

    @platform_version.setter
    def platform_version(self, platform_version):
        """Sets the platform_version of this ResourceInventory.


        :param platform_version: The platform_version of this ResourceInventory.
        :type platform_version: str
        """

        self._platform_version = platform_version

    @property
    def resource_owning_account_id(self):
        """Gets the resource_owning_account_id of this ResourceInventory.


        :return: The resource_owning_account_id of this ResourceInventory.
        :rtype: str
        """
        return self._resource_owning_account_id

    @resource_owning_account_id.setter
    def resource_owning_account_id(self, resource_owning_account_id):
        """Sets the resource_owning_account_id of this ResourceInventory.


        :param resource_owning_account_id: The resource_owning_account_id of this ResourceInventory.
        :type resource_owning_account_id: str
        """

        self._resource_owning_account_id = resource_owning_account_id
