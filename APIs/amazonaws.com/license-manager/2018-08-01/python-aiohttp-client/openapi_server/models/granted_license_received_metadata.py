# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.received_status import ReceivedStatus
from openapi_server import util


class GrantedLicenseReceivedMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, received_status: ReceivedStatus=None, received_status_reason: str=None, allowed_operations: List=None):
        """GrantedLicenseReceivedMetadata - a model defined in OpenAPI

        :param received_status: The received_status of this GrantedLicenseReceivedMetadata.
        :param received_status_reason: The received_status_reason of this GrantedLicenseReceivedMetadata.
        :param allowed_operations: The allowed_operations of this GrantedLicenseReceivedMetadata.
        """
        self.openapi_types = {
            'received_status': ReceivedStatus,
            'received_status_reason': str,
            'allowed_operations': List
        }

        self.attribute_map = {
            'received_status': 'ReceivedStatus',
            'received_status_reason': 'ReceivedStatusReason',
            'allowed_operations': 'AllowedOperations'
        }

        self._received_status = received_status
        self._received_status_reason = received_status_reason
        self._allowed_operations = allowed_operations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GrantedLicenseReceivedMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GrantedLicense_ReceivedMetadata of this GrantedLicenseReceivedMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def received_status(self):
        """Gets the received_status of this GrantedLicenseReceivedMetadata.


        :return: The received_status of this GrantedLicenseReceivedMetadata.
        :rtype: ReceivedStatus
        """
        return self._received_status

    @received_status.setter
    def received_status(self, received_status):
        """Sets the received_status of this GrantedLicenseReceivedMetadata.


        :param received_status: The received_status of this GrantedLicenseReceivedMetadata.
        :type received_status: ReceivedStatus
        """

        self._received_status = received_status

    @property
    def received_status_reason(self):
        """Gets the received_status_reason of this GrantedLicenseReceivedMetadata.


        :return: The received_status_reason of this GrantedLicenseReceivedMetadata.
        :rtype: str
        """
        return self._received_status_reason

    @received_status_reason.setter
    def received_status_reason(self, received_status_reason):
        """Sets the received_status_reason of this GrantedLicenseReceivedMetadata.


        :param received_status_reason: The received_status_reason of this GrantedLicenseReceivedMetadata.
        :type received_status_reason: str
        """

        self._received_status_reason = received_status_reason

    @property
    def allowed_operations(self):
        """Gets the allowed_operations of this GrantedLicenseReceivedMetadata.


        :return: The allowed_operations of this GrantedLicenseReceivedMetadata.
        :rtype: List
        """
        return self._allowed_operations

    @allowed_operations.setter
    def allowed_operations(self, allowed_operations):
        """Sets the allowed_operations of this GrantedLicenseReceivedMetadata.


        :param allowed_operations: The allowed_operations of this GrantedLicenseReceivedMetadata.
        :type allowed_operations: List
        """

        self._allowed_operations = allowed_operations
