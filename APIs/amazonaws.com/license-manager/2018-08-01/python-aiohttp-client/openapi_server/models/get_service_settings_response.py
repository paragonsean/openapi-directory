# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_service_settings_response_organization_configuration import GetServiceSettingsResponseOrganizationConfiguration
from openapi_server import util


class GetServiceSettingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_bucket_arn: str=None, sns_topic_arn: str=None, organization_configuration: GetServiceSettingsResponseOrganizationConfiguration=None, enable_cross_accounts_discovery: bool=None, license_manager_resource_share_arn: str=None):
        """GetServiceSettingsResponse - a model defined in OpenAPI

        :param s3_bucket_arn: The s3_bucket_arn of this GetServiceSettingsResponse.
        :param sns_topic_arn: The sns_topic_arn of this GetServiceSettingsResponse.
        :param organization_configuration: The organization_configuration of this GetServiceSettingsResponse.
        :param enable_cross_accounts_discovery: The enable_cross_accounts_discovery of this GetServiceSettingsResponse.
        :param license_manager_resource_share_arn: The license_manager_resource_share_arn of this GetServiceSettingsResponse.
        """
        self.openapi_types = {
            's3_bucket_arn': str,
            'sns_topic_arn': str,
            'organization_configuration': GetServiceSettingsResponseOrganizationConfiguration,
            'enable_cross_accounts_discovery': bool,
            'license_manager_resource_share_arn': str
        }

        self.attribute_map = {
            's3_bucket_arn': 'S3BucketArn',
            'sns_topic_arn': 'SnsTopicArn',
            'organization_configuration': 'OrganizationConfiguration',
            'enable_cross_accounts_discovery': 'EnableCrossAccountsDiscovery',
            'license_manager_resource_share_arn': 'LicenseManagerResourceShareArn'
        }

        self._s3_bucket_arn = s3_bucket_arn
        self._sns_topic_arn = sns_topic_arn
        self._organization_configuration = organization_configuration
        self._enable_cross_accounts_discovery = enable_cross_accounts_discovery
        self._license_manager_resource_share_arn = license_manager_resource_share_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetServiceSettingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetServiceSettingsResponse of this GetServiceSettingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_bucket_arn(self):
        """Gets the s3_bucket_arn of this GetServiceSettingsResponse.


        :return: The s3_bucket_arn of this GetServiceSettingsResponse.
        :rtype: str
        """
        return self._s3_bucket_arn

    @s3_bucket_arn.setter
    def s3_bucket_arn(self, s3_bucket_arn):
        """Sets the s3_bucket_arn of this GetServiceSettingsResponse.


        :param s3_bucket_arn: The s3_bucket_arn of this GetServiceSettingsResponse.
        :type s3_bucket_arn: str
        """

        self._s3_bucket_arn = s3_bucket_arn

    @property
    def sns_topic_arn(self):
        """Gets the sns_topic_arn of this GetServiceSettingsResponse.


        :return: The sns_topic_arn of this GetServiceSettingsResponse.
        :rtype: str
        """
        return self._sns_topic_arn

    @sns_topic_arn.setter
    def sns_topic_arn(self, sns_topic_arn):
        """Sets the sns_topic_arn of this GetServiceSettingsResponse.


        :param sns_topic_arn: The sns_topic_arn of this GetServiceSettingsResponse.
        :type sns_topic_arn: str
        """

        self._sns_topic_arn = sns_topic_arn

    @property
    def organization_configuration(self):
        """Gets the organization_configuration of this GetServiceSettingsResponse.


        :return: The organization_configuration of this GetServiceSettingsResponse.
        :rtype: GetServiceSettingsResponseOrganizationConfiguration
        """
        return self._organization_configuration

    @organization_configuration.setter
    def organization_configuration(self, organization_configuration):
        """Sets the organization_configuration of this GetServiceSettingsResponse.


        :param organization_configuration: The organization_configuration of this GetServiceSettingsResponse.
        :type organization_configuration: GetServiceSettingsResponseOrganizationConfiguration
        """

        self._organization_configuration = organization_configuration

    @property
    def enable_cross_accounts_discovery(self):
        """Gets the enable_cross_accounts_discovery of this GetServiceSettingsResponse.


        :return: The enable_cross_accounts_discovery of this GetServiceSettingsResponse.
        :rtype: bool
        """
        return self._enable_cross_accounts_discovery

    @enable_cross_accounts_discovery.setter
    def enable_cross_accounts_discovery(self, enable_cross_accounts_discovery):
        """Sets the enable_cross_accounts_discovery of this GetServiceSettingsResponse.


        :param enable_cross_accounts_discovery: The enable_cross_accounts_discovery of this GetServiceSettingsResponse.
        :type enable_cross_accounts_discovery: bool
        """

        self._enable_cross_accounts_discovery = enable_cross_accounts_discovery

    @property
    def license_manager_resource_share_arn(self):
        """Gets the license_manager_resource_share_arn of this GetServiceSettingsResponse.


        :return: The license_manager_resource_share_arn of this GetServiceSettingsResponse.
        :rtype: str
        """
        return self._license_manager_resource_share_arn

    @license_manager_resource_share_arn.setter
    def license_manager_resource_share_arn(self, license_manager_resource_share_arn):
        """Sets the license_manager_resource_share_arn of this GetServiceSettingsResponse.


        :param license_manager_resource_share_arn: The license_manager_resource_share_arn of this GetServiceSettingsResponse.
        :type license_manager_resource_share_arn: str
        """

        self._license_manager_resource_share_arn = license_manager_resource_share_arn
