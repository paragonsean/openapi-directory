# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckoutBorrowLicenseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_arn: str=None, license_consumption_token: str=None, entitlements_allowed: List=None, node_id: str=None, signed_token: str=None, issued_at: str=None, expiration: str=None, checkout_metadata: List=None):
        """CheckoutBorrowLicenseResponse - a model defined in OpenAPI

        :param license_arn: The license_arn of this CheckoutBorrowLicenseResponse.
        :param license_consumption_token: The license_consumption_token of this CheckoutBorrowLicenseResponse.
        :param entitlements_allowed: The entitlements_allowed of this CheckoutBorrowLicenseResponse.
        :param node_id: The node_id of this CheckoutBorrowLicenseResponse.
        :param signed_token: The signed_token of this CheckoutBorrowLicenseResponse.
        :param issued_at: The issued_at of this CheckoutBorrowLicenseResponse.
        :param expiration: The expiration of this CheckoutBorrowLicenseResponse.
        :param checkout_metadata: The checkout_metadata of this CheckoutBorrowLicenseResponse.
        """
        self.openapi_types = {
            'license_arn': str,
            'license_consumption_token': str,
            'entitlements_allowed': List,
            'node_id': str,
            'signed_token': str,
            'issued_at': str,
            'expiration': str,
            'checkout_metadata': List
        }

        self.attribute_map = {
            'license_arn': 'LicenseArn',
            'license_consumption_token': 'LicenseConsumptionToken',
            'entitlements_allowed': 'EntitlementsAllowed',
            'node_id': 'NodeId',
            'signed_token': 'SignedToken',
            'issued_at': 'IssuedAt',
            'expiration': 'Expiration',
            'checkout_metadata': 'CheckoutMetadata'
        }

        self._license_arn = license_arn
        self._license_consumption_token = license_consumption_token
        self._entitlements_allowed = entitlements_allowed
        self._node_id = node_id
        self._signed_token = signed_token
        self._issued_at = issued_at
        self._expiration = expiration
        self._checkout_metadata = checkout_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckoutBorrowLicenseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckoutBorrowLicenseResponse of this CheckoutBorrowLicenseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_arn(self):
        """Gets the license_arn of this CheckoutBorrowLicenseResponse.


        :return: The license_arn of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._license_arn

    @license_arn.setter
    def license_arn(self, license_arn):
        """Sets the license_arn of this CheckoutBorrowLicenseResponse.


        :param license_arn: The license_arn of this CheckoutBorrowLicenseResponse.
        :type license_arn: str
        """

        self._license_arn = license_arn

    @property
    def license_consumption_token(self):
        """Gets the license_consumption_token of this CheckoutBorrowLicenseResponse.


        :return: The license_consumption_token of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._license_consumption_token

    @license_consumption_token.setter
    def license_consumption_token(self, license_consumption_token):
        """Sets the license_consumption_token of this CheckoutBorrowLicenseResponse.


        :param license_consumption_token: The license_consumption_token of this CheckoutBorrowLicenseResponse.
        :type license_consumption_token: str
        """

        self._license_consumption_token = license_consumption_token

    @property
    def entitlements_allowed(self):
        """Gets the entitlements_allowed of this CheckoutBorrowLicenseResponse.


        :return: The entitlements_allowed of this CheckoutBorrowLicenseResponse.
        :rtype: List
        """
        return self._entitlements_allowed

    @entitlements_allowed.setter
    def entitlements_allowed(self, entitlements_allowed):
        """Sets the entitlements_allowed of this CheckoutBorrowLicenseResponse.


        :param entitlements_allowed: The entitlements_allowed of this CheckoutBorrowLicenseResponse.
        :type entitlements_allowed: List
        """

        self._entitlements_allowed = entitlements_allowed

    @property
    def node_id(self):
        """Gets the node_id of this CheckoutBorrowLicenseResponse.


        :return: The node_id of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this CheckoutBorrowLicenseResponse.


        :param node_id: The node_id of this CheckoutBorrowLicenseResponse.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def signed_token(self):
        """Gets the signed_token of this CheckoutBorrowLicenseResponse.


        :return: The signed_token of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._signed_token

    @signed_token.setter
    def signed_token(self, signed_token):
        """Sets the signed_token of this CheckoutBorrowLicenseResponse.


        :param signed_token: The signed_token of this CheckoutBorrowLicenseResponse.
        :type signed_token: str
        """

        self._signed_token = signed_token

    @property
    def issued_at(self):
        """Gets the issued_at of this CheckoutBorrowLicenseResponse.


        :return: The issued_at of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._issued_at

    @issued_at.setter
    def issued_at(self, issued_at):
        """Sets the issued_at of this CheckoutBorrowLicenseResponse.


        :param issued_at: The issued_at of this CheckoutBorrowLicenseResponse.
        :type issued_at: str
        """

        self._issued_at = issued_at

    @property
    def expiration(self):
        """Gets the expiration of this CheckoutBorrowLicenseResponse.


        :return: The expiration of this CheckoutBorrowLicenseResponse.
        :rtype: str
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this CheckoutBorrowLicenseResponse.


        :param expiration: The expiration of this CheckoutBorrowLicenseResponse.
        :type expiration: str
        """

        self._expiration = expiration

    @property
    def checkout_metadata(self):
        """Gets the checkout_metadata of this CheckoutBorrowLicenseResponse.


        :return: The checkout_metadata of this CheckoutBorrowLicenseResponse.
        :rtype: List
        """
        return self._checkout_metadata

    @checkout_metadata.setter
    def checkout_metadata(self, checkout_metadata):
        """Sets the checkout_metadata of this CheckoutBorrowLicenseResponse.


        :param checkout_metadata: The checkout_metadata of this CheckoutBorrowLicenseResponse.
        :type checkout_metadata: List
        """

        self._checkout_metadata = checkout_metadata
