# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_license_conversion_task_response_destination_license_context import GetLicenseConversionTaskResponseDestinationLicenseContext
from openapi_server.models.get_license_conversion_task_response_source_license_context import GetLicenseConversionTaskResponseSourceLicenseContext
from openapi_server.models.license_conversion_task_status import LicenseConversionTaskStatus
from openapi_server import util


class GetLicenseConversionTaskResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_conversion_task_id: str=None, resource_arn: str=None, source_license_context: GetLicenseConversionTaskResponseSourceLicenseContext=None, destination_license_context: GetLicenseConversionTaskResponseDestinationLicenseContext=None, status_message: str=None, status: LicenseConversionTaskStatus=None, start_time: datetime=None, license_conversion_time: datetime=None, end_time: datetime=None):
        """GetLicenseConversionTaskResponse - a model defined in OpenAPI

        :param license_conversion_task_id: The license_conversion_task_id of this GetLicenseConversionTaskResponse.
        :param resource_arn: The resource_arn of this GetLicenseConversionTaskResponse.
        :param source_license_context: The source_license_context of this GetLicenseConversionTaskResponse.
        :param destination_license_context: The destination_license_context of this GetLicenseConversionTaskResponse.
        :param status_message: The status_message of this GetLicenseConversionTaskResponse.
        :param status: The status of this GetLicenseConversionTaskResponse.
        :param start_time: The start_time of this GetLicenseConversionTaskResponse.
        :param license_conversion_time: The license_conversion_time of this GetLicenseConversionTaskResponse.
        :param end_time: The end_time of this GetLicenseConversionTaskResponse.
        """
        self.openapi_types = {
            'license_conversion_task_id': str,
            'resource_arn': str,
            'source_license_context': GetLicenseConversionTaskResponseSourceLicenseContext,
            'destination_license_context': GetLicenseConversionTaskResponseDestinationLicenseContext,
            'status_message': str,
            'status': LicenseConversionTaskStatus,
            'start_time': datetime,
            'license_conversion_time': datetime,
            'end_time': datetime
        }

        self.attribute_map = {
            'license_conversion_task_id': 'LicenseConversionTaskId',
            'resource_arn': 'ResourceArn',
            'source_license_context': 'SourceLicenseContext',
            'destination_license_context': 'DestinationLicenseContext',
            'status_message': 'StatusMessage',
            'status': 'Status',
            'start_time': 'StartTime',
            'license_conversion_time': 'LicenseConversionTime',
            'end_time': 'EndTime'
        }

        self._license_conversion_task_id = license_conversion_task_id
        self._resource_arn = resource_arn
        self._source_license_context = source_license_context
        self._destination_license_context = destination_license_context
        self._status_message = status_message
        self._status = status
        self._start_time = start_time
        self._license_conversion_time = license_conversion_time
        self._end_time = end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLicenseConversionTaskResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetLicenseConversionTaskResponse of this GetLicenseConversionTaskResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_conversion_task_id(self):
        """Gets the license_conversion_task_id of this GetLicenseConversionTaskResponse.


        :return: The license_conversion_task_id of this GetLicenseConversionTaskResponse.
        :rtype: str
        """
        return self._license_conversion_task_id

    @license_conversion_task_id.setter
    def license_conversion_task_id(self, license_conversion_task_id):
        """Sets the license_conversion_task_id of this GetLicenseConversionTaskResponse.


        :param license_conversion_task_id: The license_conversion_task_id of this GetLicenseConversionTaskResponse.
        :type license_conversion_task_id: str
        """

        self._license_conversion_task_id = license_conversion_task_id

    @property
    def resource_arn(self):
        """Gets the resource_arn of this GetLicenseConversionTaskResponse.


        :return: The resource_arn of this GetLicenseConversionTaskResponse.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this GetLicenseConversionTaskResponse.


        :param resource_arn: The resource_arn of this GetLicenseConversionTaskResponse.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def source_license_context(self):
        """Gets the source_license_context of this GetLicenseConversionTaskResponse.


        :return: The source_license_context of this GetLicenseConversionTaskResponse.
        :rtype: GetLicenseConversionTaskResponseSourceLicenseContext
        """
        return self._source_license_context

    @source_license_context.setter
    def source_license_context(self, source_license_context):
        """Sets the source_license_context of this GetLicenseConversionTaskResponse.


        :param source_license_context: The source_license_context of this GetLicenseConversionTaskResponse.
        :type source_license_context: GetLicenseConversionTaskResponseSourceLicenseContext
        """

        self._source_license_context = source_license_context

    @property
    def destination_license_context(self):
        """Gets the destination_license_context of this GetLicenseConversionTaskResponse.


        :return: The destination_license_context of this GetLicenseConversionTaskResponse.
        :rtype: GetLicenseConversionTaskResponseDestinationLicenseContext
        """
        return self._destination_license_context

    @destination_license_context.setter
    def destination_license_context(self, destination_license_context):
        """Sets the destination_license_context of this GetLicenseConversionTaskResponse.


        :param destination_license_context: The destination_license_context of this GetLicenseConversionTaskResponse.
        :type destination_license_context: GetLicenseConversionTaskResponseDestinationLicenseContext
        """

        self._destination_license_context = destination_license_context

    @property
    def status_message(self):
        """Gets the status_message of this GetLicenseConversionTaskResponse.


        :return: The status_message of this GetLicenseConversionTaskResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetLicenseConversionTaskResponse.


        :param status_message: The status_message of this GetLicenseConversionTaskResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def status(self):
        """Gets the status of this GetLicenseConversionTaskResponse.


        :return: The status of this GetLicenseConversionTaskResponse.
        :rtype: LicenseConversionTaskStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetLicenseConversionTaskResponse.


        :param status: The status of this GetLicenseConversionTaskResponse.
        :type status: LicenseConversionTaskStatus
        """

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this GetLicenseConversionTaskResponse.


        :return: The start_time of this GetLicenseConversionTaskResponse.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GetLicenseConversionTaskResponse.


        :param start_time: The start_time of this GetLicenseConversionTaskResponse.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def license_conversion_time(self):
        """Gets the license_conversion_time of this GetLicenseConversionTaskResponse.


        :return: The license_conversion_time of this GetLicenseConversionTaskResponse.
        :rtype: datetime
        """
        return self._license_conversion_time

    @license_conversion_time.setter
    def license_conversion_time(self, license_conversion_time):
        """Sets the license_conversion_time of this GetLicenseConversionTaskResponse.


        :param license_conversion_time: The license_conversion_time of this GetLicenseConversionTaskResponse.
        :type license_conversion_time: datetime
        """

        self._license_conversion_time = license_conversion_time

    @property
    def end_time(self):
        """Gets the end_time of this GetLicenseConversionTaskResponse.


        :return: The end_time of this GetLicenseConversionTaskResponse.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GetLicenseConversionTaskResponse.


        :param end_time: The end_time of this GetLicenseConversionTaskResponse.
        :type end_time: datetime
        """

        self._end_time = end_time
