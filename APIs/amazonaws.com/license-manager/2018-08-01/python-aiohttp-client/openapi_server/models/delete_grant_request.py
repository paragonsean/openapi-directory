# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteGrantRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grant_arn: str=None, status_reason: str=None, version: str=None):
        """DeleteGrantRequest - a model defined in OpenAPI

        :param grant_arn: The grant_arn of this DeleteGrantRequest.
        :param status_reason: The status_reason of this DeleteGrantRequest.
        :param version: The version of this DeleteGrantRequest.
        """
        self.openapi_types = {
            'grant_arn': str,
            'status_reason': str,
            'version': str
        }

        self.attribute_map = {
            'grant_arn': 'GrantArn',
            'status_reason': 'StatusReason',
            'version': 'Version'
        }

        self._grant_arn = grant_arn
        self._status_reason = status_reason
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteGrantRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteGrantRequest of this DeleteGrantRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grant_arn(self):
        """Gets the grant_arn of this DeleteGrantRequest.


        :return: The grant_arn of this DeleteGrantRequest.
        :rtype: str
        """
        return self._grant_arn

    @grant_arn.setter
    def grant_arn(self, grant_arn):
        """Sets the grant_arn of this DeleteGrantRequest.


        :param grant_arn: The grant_arn of this DeleteGrantRequest.
        :type grant_arn: str
        """
        if grant_arn is None:
            raise ValueError("Invalid value for `grant_arn`, must not be `None`")

        self._grant_arn = grant_arn

    @property
    def status_reason(self):
        """Gets the status_reason of this DeleteGrantRequest.


        :return: The status_reason of this DeleteGrantRequest.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this DeleteGrantRequest.


        :param status_reason: The status_reason of this DeleteGrantRequest.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def version(self):
        """Gets the version of this DeleteGrantRequest.


        :return: The version of this DeleteGrantRequest.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeleteGrantRequest.


        :param version: The version of this DeleteGrantRequest.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
