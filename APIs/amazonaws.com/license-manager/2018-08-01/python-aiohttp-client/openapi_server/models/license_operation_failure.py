# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_type import ResourceType
from openapi_server import util


class LicenseOperationFailure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_arn: str=None, resource_type: ResourceType=None, error_message: str=None, failure_time: datetime=None, operation_name: str=None, resource_owner_id: str=None, operation_requested_by: str=None, metadata_list: List=None):
        """LicenseOperationFailure - a model defined in OpenAPI

        :param resource_arn: The resource_arn of this LicenseOperationFailure.
        :param resource_type: The resource_type of this LicenseOperationFailure.
        :param error_message: The error_message of this LicenseOperationFailure.
        :param failure_time: The failure_time of this LicenseOperationFailure.
        :param operation_name: The operation_name of this LicenseOperationFailure.
        :param resource_owner_id: The resource_owner_id of this LicenseOperationFailure.
        :param operation_requested_by: The operation_requested_by of this LicenseOperationFailure.
        :param metadata_list: The metadata_list of this LicenseOperationFailure.
        """
        self.openapi_types = {
            'resource_arn': str,
            'resource_type': ResourceType,
            'error_message': str,
            'failure_time': datetime,
            'operation_name': str,
            'resource_owner_id': str,
            'operation_requested_by': str,
            'metadata_list': List
        }

        self.attribute_map = {
            'resource_arn': 'ResourceArn',
            'resource_type': 'ResourceType',
            'error_message': 'ErrorMessage',
            'failure_time': 'FailureTime',
            'operation_name': 'OperationName',
            'resource_owner_id': 'ResourceOwnerId',
            'operation_requested_by': 'OperationRequestedBy',
            'metadata_list': 'MetadataList'
        }

        self._resource_arn = resource_arn
        self._resource_type = resource_type
        self._error_message = error_message
        self._failure_time = failure_time
        self._operation_name = operation_name
        self._resource_owner_id = resource_owner_id
        self._operation_requested_by = operation_requested_by
        self._metadata_list = metadata_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LicenseOperationFailure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LicenseOperationFailure of this LicenseOperationFailure.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_arn(self):
        """Gets the resource_arn of this LicenseOperationFailure.


        :return: The resource_arn of this LicenseOperationFailure.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this LicenseOperationFailure.


        :param resource_arn: The resource_arn of this LicenseOperationFailure.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def resource_type(self):
        """Gets the resource_type of this LicenseOperationFailure.


        :return: The resource_type of this LicenseOperationFailure.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this LicenseOperationFailure.


        :param resource_type: The resource_type of this LicenseOperationFailure.
        :type resource_type: ResourceType
        """

        self._resource_type = resource_type

    @property
    def error_message(self):
        """Gets the error_message of this LicenseOperationFailure.


        :return: The error_message of this LicenseOperationFailure.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this LicenseOperationFailure.


        :param error_message: The error_message of this LicenseOperationFailure.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def failure_time(self):
        """Gets the failure_time of this LicenseOperationFailure.


        :return: The failure_time of this LicenseOperationFailure.
        :rtype: datetime
        """
        return self._failure_time

    @failure_time.setter
    def failure_time(self, failure_time):
        """Sets the failure_time of this LicenseOperationFailure.


        :param failure_time: The failure_time of this LicenseOperationFailure.
        :type failure_time: datetime
        """

        self._failure_time = failure_time

    @property
    def operation_name(self):
        """Gets the operation_name of this LicenseOperationFailure.


        :return: The operation_name of this LicenseOperationFailure.
        :rtype: str
        """
        return self._operation_name

    @operation_name.setter
    def operation_name(self, operation_name):
        """Sets the operation_name of this LicenseOperationFailure.


        :param operation_name: The operation_name of this LicenseOperationFailure.
        :type operation_name: str
        """

        self._operation_name = operation_name

    @property
    def resource_owner_id(self):
        """Gets the resource_owner_id of this LicenseOperationFailure.


        :return: The resource_owner_id of this LicenseOperationFailure.
        :rtype: str
        """
        return self._resource_owner_id

    @resource_owner_id.setter
    def resource_owner_id(self, resource_owner_id):
        """Sets the resource_owner_id of this LicenseOperationFailure.


        :param resource_owner_id: The resource_owner_id of this LicenseOperationFailure.
        :type resource_owner_id: str
        """

        self._resource_owner_id = resource_owner_id

    @property
    def operation_requested_by(self):
        """Gets the operation_requested_by of this LicenseOperationFailure.


        :return: The operation_requested_by of this LicenseOperationFailure.
        :rtype: str
        """
        return self._operation_requested_by

    @operation_requested_by.setter
    def operation_requested_by(self, operation_requested_by):
        """Sets the operation_requested_by of this LicenseOperationFailure.


        :param operation_requested_by: The operation_requested_by of this LicenseOperationFailure.
        :type operation_requested_by: str
        """

        self._operation_requested_by = operation_requested_by

    @property
    def metadata_list(self):
        """Gets the metadata_list of this LicenseOperationFailure.


        :return: The metadata_list of this LicenseOperationFailure.
        :rtype: List
        """
        return self._metadata_list

    @metadata_list.setter
    def metadata_list(self, metadata_list):
        """Sets the metadata_list of this LicenseOperationFailure.


        :param metadata_list: The metadata_list of this LicenseOperationFailure.
        :type metadata_list: List
        """

        self._metadata_list = metadata_list
