# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_license_configuration_response_automated_discovery_information import GetLicenseConfigurationResponseAutomatedDiscoveryInformation
from openapi_server.models.license_counting_type import LicenseCountingType
from openapi_server import util


class GetLicenseConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_configuration_id: str=None, license_configuration_arn: str=None, name: str=None, description: str=None, license_counting_type: LicenseCountingType=None, license_rules: List=None, license_count: int=None, license_count_hard_limit: bool=None, consumed_licenses: int=None, status: str=None, owner_account_id: str=None, consumed_license_summary_list: List=None, managed_resource_summary_list: List=None, tags: List=None, product_information_list: List=None, automated_discovery_information: GetLicenseConfigurationResponseAutomatedDiscoveryInformation=None, disassociate_when_not_found: bool=None):
        """GetLicenseConfigurationResponse - a model defined in OpenAPI

        :param license_configuration_id: The license_configuration_id of this GetLicenseConfigurationResponse.
        :param license_configuration_arn: The license_configuration_arn of this GetLicenseConfigurationResponse.
        :param name: The name of this GetLicenseConfigurationResponse.
        :param description: The description of this GetLicenseConfigurationResponse.
        :param license_counting_type: The license_counting_type of this GetLicenseConfigurationResponse.
        :param license_rules: The license_rules of this GetLicenseConfigurationResponse.
        :param license_count: The license_count of this GetLicenseConfigurationResponse.
        :param license_count_hard_limit: The license_count_hard_limit of this GetLicenseConfigurationResponse.
        :param consumed_licenses: The consumed_licenses of this GetLicenseConfigurationResponse.
        :param status: The status of this GetLicenseConfigurationResponse.
        :param owner_account_id: The owner_account_id of this GetLicenseConfigurationResponse.
        :param consumed_license_summary_list: The consumed_license_summary_list of this GetLicenseConfigurationResponse.
        :param managed_resource_summary_list: The managed_resource_summary_list of this GetLicenseConfigurationResponse.
        :param tags: The tags of this GetLicenseConfigurationResponse.
        :param product_information_list: The product_information_list of this GetLicenseConfigurationResponse.
        :param automated_discovery_information: The automated_discovery_information of this GetLicenseConfigurationResponse.
        :param disassociate_when_not_found: The disassociate_when_not_found of this GetLicenseConfigurationResponse.
        """
        self.openapi_types = {
            'license_configuration_id': str,
            'license_configuration_arn': str,
            'name': str,
            'description': str,
            'license_counting_type': LicenseCountingType,
            'license_rules': List,
            'license_count': int,
            'license_count_hard_limit': bool,
            'consumed_licenses': int,
            'status': str,
            'owner_account_id': str,
            'consumed_license_summary_list': List,
            'managed_resource_summary_list': List,
            'tags': List,
            'product_information_list': List,
            'automated_discovery_information': GetLicenseConfigurationResponseAutomatedDiscoveryInformation,
            'disassociate_when_not_found': bool
        }

        self.attribute_map = {
            'license_configuration_id': 'LicenseConfigurationId',
            'license_configuration_arn': 'LicenseConfigurationArn',
            'name': 'Name',
            'description': 'Description',
            'license_counting_type': 'LicenseCountingType',
            'license_rules': 'LicenseRules',
            'license_count': 'LicenseCount',
            'license_count_hard_limit': 'LicenseCountHardLimit',
            'consumed_licenses': 'ConsumedLicenses',
            'status': 'Status',
            'owner_account_id': 'OwnerAccountId',
            'consumed_license_summary_list': 'ConsumedLicenseSummaryList',
            'managed_resource_summary_list': 'ManagedResourceSummaryList',
            'tags': 'Tags',
            'product_information_list': 'ProductInformationList',
            'automated_discovery_information': 'AutomatedDiscoveryInformation',
            'disassociate_when_not_found': 'DisassociateWhenNotFound'
        }

        self._license_configuration_id = license_configuration_id
        self._license_configuration_arn = license_configuration_arn
        self._name = name
        self._description = description
        self._license_counting_type = license_counting_type
        self._license_rules = license_rules
        self._license_count = license_count
        self._license_count_hard_limit = license_count_hard_limit
        self._consumed_licenses = consumed_licenses
        self._status = status
        self._owner_account_id = owner_account_id
        self._consumed_license_summary_list = consumed_license_summary_list
        self._managed_resource_summary_list = managed_resource_summary_list
        self._tags = tags
        self._product_information_list = product_information_list
        self._automated_discovery_information = automated_discovery_information
        self._disassociate_when_not_found = disassociate_when_not_found

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLicenseConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetLicenseConfigurationResponse of this GetLicenseConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_configuration_id(self):
        """Gets the license_configuration_id of this GetLicenseConfigurationResponse.


        :return: The license_configuration_id of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._license_configuration_id

    @license_configuration_id.setter
    def license_configuration_id(self, license_configuration_id):
        """Sets the license_configuration_id of this GetLicenseConfigurationResponse.


        :param license_configuration_id: The license_configuration_id of this GetLicenseConfigurationResponse.
        :type license_configuration_id: str
        """

        self._license_configuration_id = license_configuration_id

    @property
    def license_configuration_arn(self):
        """Gets the license_configuration_arn of this GetLicenseConfigurationResponse.


        :return: The license_configuration_arn of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._license_configuration_arn

    @license_configuration_arn.setter
    def license_configuration_arn(self, license_configuration_arn):
        """Sets the license_configuration_arn of this GetLicenseConfigurationResponse.


        :param license_configuration_arn: The license_configuration_arn of this GetLicenseConfigurationResponse.
        :type license_configuration_arn: str
        """

        self._license_configuration_arn = license_configuration_arn

    @property
    def name(self):
        """Gets the name of this GetLicenseConfigurationResponse.


        :return: The name of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetLicenseConfigurationResponse.


        :param name: The name of this GetLicenseConfigurationResponse.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this GetLicenseConfigurationResponse.


        :return: The description of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetLicenseConfigurationResponse.


        :param description: The description of this GetLicenseConfigurationResponse.
        :type description: str
        """

        self._description = description

    @property
    def license_counting_type(self):
        """Gets the license_counting_type of this GetLicenseConfigurationResponse.


        :return: The license_counting_type of this GetLicenseConfigurationResponse.
        :rtype: LicenseCountingType
        """
        return self._license_counting_type

    @license_counting_type.setter
    def license_counting_type(self, license_counting_type):
        """Sets the license_counting_type of this GetLicenseConfigurationResponse.


        :param license_counting_type: The license_counting_type of this GetLicenseConfigurationResponse.
        :type license_counting_type: LicenseCountingType
        """

        self._license_counting_type = license_counting_type

    @property
    def license_rules(self):
        """Gets the license_rules of this GetLicenseConfigurationResponse.


        :return: The license_rules of this GetLicenseConfigurationResponse.
        :rtype: List
        """
        return self._license_rules

    @license_rules.setter
    def license_rules(self, license_rules):
        """Sets the license_rules of this GetLicenseConfigurationResponse.


        :param license_rules: The license_rules of this GetLicenseConfigurationResponse.
        :type license_rules: List
        """

        self._license_rules = license_rules

    @property
    def license_count(self):
        """Gets the license_count of this GetLicenseConfigurationResponse.


        :return: The license_count of this GetLicenseConfigurationResponse.
        :rtype: int
        """
        return self._license_count

    @license_count.setter
    def license_count(self, license_count):
        """Sets the license_count of this GetLicenseConfigurationResponse.


        :param license_count: The license_count of this GetLicenseConfigurationResponse.
        :type license_count: int
        """

        self._license_count = license_count

    @property
    def license_count_hard_limit(self):
        """Gets the license_count_hard_limit of this GetLicenseConfigurationResponse.


        :return: The license_count_hard_limit of this GetLicenseConfigurationResponse.
        :rtype: bool
        """
        return self._license_count_hard_limit

    @license_count_hard_limit.setter
    def license_count_hard_limit(self, license_count_hard_limit):
        """Sets the license_count_hard_limit of this GetLicenseConfigurationResponse.


        :param license_count_hard_limit: The license_count_hard_limit of this GetLicenseConfigurationResponse.
        :type license_count_hard_limit: bool
        """

        self._license_count_hard_limit = license_count_hard_limit

    @property
    def consumed_licenses(self):
        """Gets the consumed_licenses of this GetLicenseConfigurationResponse.


        :return: The consumed_licenses of this GetLicenseConfigurationResponse.
        :rtype: int
        """
        return self._consumed_licenses

    @consumed_licenses.setter
    def consumed_licenses(self, consumed_licenses):
        """Sets the consumed_licenses of this GetLicenseConfigurationResponse.


        :param consumed_licenses: The consumed_licenses of this GetLicenseConfigurationResponse.
        :type consumed_licenses: int
        """

        self._consumed_licenses = consumed_licenses

    @property
    def status(self):
        """Gets the status of this GetLicenseConfigurationResponse.


        :return: The status of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetLicenseConfigurationResponse.


        :param status: The status of this GetLicenseConfigurationResponse.
        :type status: str
        """

        self._status = status

    @property
    def owner_account_id(self):
        """Gets the owner_account_id of this GetLicenseConfigurationResponse.


        :return: The owner_account_id of this GetLicenseConfigurationResponse.
        :rtype: str
        """
        return self._owner_account_id

    @owner_account_id.setter
    def owner_account_id(self, owner_account_id):
        """Sets the owner_account_id of this GetLicenseConfigurationResponse.


        :param owner_account_id: The owner_account_id of this GetLicenseConfigurationResponse.
        :type owner_account_id: str
        """

        self._owner_account_id = owner_account_id

    @property
    def consumed_license_summary_list(self):
        """Gets the consumed_license_summary_list of this GetLicenseConfigurationResponse.


        :return: The consumed_license_summary_list of this GetLicenseConfigurationResponse.
        :rtype: List
        """
        return self._consumed_license_summary_list

    @consumed_license_summary_list.setter
    def consumed_license_summary_list(self, consumed_license_summary_list):
        """Sets the consumed_license_summary_list of this GetLicenseConfigurationResponse.


        :param consumed_license_summary_list: The consumed_license_summary_list of this GetLicenseConfigurationResponse.
        :type consumed_license_summary_list: List
        """

        self._consumed_license_summary_list = consumed_license_summary_list

    @property
    def managed_resource_summary_list(self):
        """Gets the managed_resource_summary_list of this GetLicenseConfigurationResponse.


        :return: The managed_resource_summary_list of this GetLicenseConfigurationResponse.
        :rtype: List
        """
        return self._managed_resource_summary_list

    @managed_resource_summary_list.setter
    def managed_resource_summary_list(self, managed_resource_summary_list):
        """Sets the managed_resource_summary_list of this GetLicenseConfigurationResponse.


        :param managed_resource_summary_list: The managed_resource_summary_list of this GetLicenseConfigurationResponse.
        :type managed_resource_summary_list: List
        """

        self._managed_resource_summary_list = managed_resource_summary_list

    @property
    def tags(self):
        """Gets the tags of this GetLicenseConfigurationResponse.


        :return: The tags of this GetLicenseConfigurationResponse.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetLicenseConfigurationResponse.


        :param tags: The tags of this GetLicenseConfigurationResponse.
        :type tags: List
        """

        self._tags = tags

    @property
    def product_information_list(self):
        """Gets the product_information_list of this GetLicenseConfigurationResponse.


        :return: The product_information_list of this GetLicenseConfigurationResponse.
        :rtype: List
        """
        return self._product_information_list

    @product_information_list.setter
    def product_information_list(self, product_information_list):
        """Sets the product_information_list of this GetLicenseConfigurationResponse.


        :param product_information_list: The product_information_list of this GetLicenseConfigurationResponse.
        :type product_information_list: List
        """

        self._product_information_list = product_information_list

    @property
    def automated_discovery_information(self):
        """Gets the automated_discovery_information of this GetLicenseConfigurationResponse.


        :return: The automated_discovery_information of this GetLicenseConfigurationResponse.
        :rtype: GetLicenseConfigurationResponseAutomatedDiscoveryInformation
        """
        return self._automated_discovery_information

    @automated_discovery_information.setter
    def automated_discovery_information(self, automated_discovery_information):
        """Sets the automated_discovery_information of this GetLicenseConfigurationResponse.


        :param automated_discovery_information: The automated_discovery_information of this GetLicenseConfigurationResponse.
        :type automated_discovery_information: GetLicenseConfigurationResponseAutomatedDiscoveryInformation
        """

        self._automated_discovery_information = automated_discovery_information

    @property
    def disassociate_when_not_found(self):
        """Gets the disassociate_when_not_found of this GetLicenseConfigurationResponse.


        :return: The disassociate_when_not_found of this GetLicenseConfigurationResponse.
        :rtype: bool
        """
        return self._disassociate_when_not_found

    @disassociate_when_not_found.setter
    def disassociate_when_not_found(self, disassociate_when_not_found):
        """Sets the disassociate_when_not_found of this GetLicenseConfigurationResponse.


        :param disassociate_when_not_found: The disassociate_when_not_found of this GetLicenseConfigurationResponse.
        :type disassociate_when_not_found: bool
        """

        self._disassociate_when_not_found = disassociate_when_not_found
