/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductInformationFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductInformationFilter::OAIProductInformationFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductInformationFilter::OAIProductInformationFilter() {
    this->initializeModel();
}

OAIProductInformationFilter::~OAIProductInformationFilter() {}

void OAIProductInformationFilter::initializeModel() {

    m_product_information_filter_name_isSet = false;
    m_product_information_filter_name_isValid = false;

    m_product_information_filter_value_isSet = false;
    m_product_information_filter_value_isValid = false;

    m_product_information_filter_comparator_isSet = false;
    m_product_information_filter_comparator_isValid = false;
}

void OAIProductInformationFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductInformationFilter::fromJsonObject(QJsonObject json) {

    m_product_information_filter_name_isValid = ::OpenAPI::fromJsonValue(m_product_information_filter_name, json[QString("ProductInformationFilterName")]);
    m_product_information_filter_name_isSet = !json[QString("ProductInformationFilterName")].isNull() && m_product_information_filter_name_isValid;

    m_product_information_filter_value_isValid = ::OpenAPI::fromJsonValue(m_product_information_filter_value, json[QString("ProductInformationFilterValue")]);
    m_product_information_filter_value_isSet = !json[QString("ProductInformationFilterValue")].isNull() && m_product_information_filter_value_isValid;

    m_product_information_filter_comparator_isValid = ::OpenAPI::fromJsonValue(m_product_information_filter_comparator, json[QString("ProductInformationFilterComparator")]);
    m_product_information_filter_comparator_isSet = !json[QString("ProductInformationFilterComparator")].isNull() && m_product_information_filter_comparator_isValid;
}

QString OAIProductInformationFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductInformationFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_product_information_filter_name_isSet) {
        obj.insert(QString("ProductInformationFilterName"), ::OpenAPI::toJsonValue(m_product_information_filter_name));
    }
    if (m_product_information_filter_value.isSet()) {
        obj.insert(QString("ProductInformationFilterValue"), ::OpenAPI::toJsonValue(m_product_information_filter_value));
    }
    if (m_product_information_filter_comparator_isSet) {
        obj.insert(QString("ProductInformationFilterComparator"), ::OpenAPI::toJsonValue(m_product_information_filter_comparator));
    }
    return obj;
}

QString OAIProductInformationFilter::getProductInformationFilterName() const {
    return m_product_information_filter_name;
}
void OAIProductInformationFilter::setProductInformationFilterName(const QString &product_information_filter_name) {
    m_product_information_filter_name = product_information_filter_name;
    m_product_information_filter_name_isSet = true;
}

bool OAIProductInformationFilter::is_product_information_filter_name_Set() const{
    return m_product_information_filter_name_isSet;
}

bool OAIProductInformationFilter::is_product_information_filter_name_Valid() const{
    return m_product_information_filter_name_isValid;
}

QList OAIProductInformationFilter::getProductInformationFilterValue() const {
    return m_product_information_filter_value;
}
void OAIProductInformationFilter::setProductInformationFilterValue(const QList &product_information_filter_value) {
    m_product_information_filter_value = product_information_filter_value;
    m_product_information_filter_value_isSet = true;
}

bool OAIProductInformationFilter::is_product_information_filter_value_Set() const{
    return m_product_information_filter_value_isSet;
}

bool OAIProductInformationFilter::is_product_information_filter_value_Valid() const{
    return m_product_information_filter_value_isValid;
}

QString OAIProductInformationFilter::getProductInformationFilterComparator() const {
    return m_product_information_filter_comparator;
}
void OAIProductInformationFilter::setProductInformationFilterComparator(const QString &product_information_filter_comparator) {
    m_product_information_filter_comparator = product_information_filter_comparator;
    m_product_information_filter_comparator_isSet = true;
}

bool OAIProductInformationFilter::is_product_information_filter_comparator_Set() const{
    return m_product_information_filter_comparator_isSet;
}

bool OAIProductInformationFilter::is_product_information_filter_comparator_Valid() const{
    return m_product_information_filter_comparator_isValid;
}

bool OAIProductInformationFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_information_filter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_information_filter_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_information_filter_comparator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductInformationFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_product_information_filter_name_isValid && m_product_information_filter_comparator_isValid && true;
}

} // namespace OpenAPI
