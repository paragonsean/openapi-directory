/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLicenseManagerReportGeneratorRequest.h
 *
 * 
 */

#ifndef OAICreateLicenseManagerReportGeneratorRequest_H
#define OAICreateLicenseManagerReportGeneratorRequest_H

#include <QJsonObject>

#include "OAICreateLicenseManagerReportGeneratorRequest_ReportContext.h"
#include "OAICreateLicenseManagerReportGeneratorRequest_ReportFrequency.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLicenseManagerReportGeneratorRequest_ReportContext;
class OAICreateLicenseManagerReportGeneratorRequest_ReportFrequency;

class OAICreateLicenseManagerReportGeneratorRequest : public OAIObject {
public:
    OAICreateLicenseManagerReportGeneratorRequest();
    OAICreateLicenseManagerReportGeneratorRequest(QString json);
    ~OAICreateLicenseManagerReportGeneratorRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportGeneratorName() const;
    void setReportGeneratorName(const QString &report_generator_name);
    bool is_report_generator_name_Set() const;
    bool is_report_generator_name_Valid() const;

    QList getType() const;
    void setType(const QList &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAICreateLicenseManagerReportGeneratorRequest_ReportContext getReportContext() const;
    void setReportContext(const OAICreateLicenseManagerReportGeneratorRequest_ReportContext &report_context);
    bool is_report_context_Set() const;
    bool is_report_context_Valid() const;

    OAICreateLicenseManagerReportGeneratorRequest_ReportFrequency getReportFrequency() const;
    void setReportFrequency(const OAICreateLicenseManagerReportGeneratorRequest_ReportFrequency &report_frequency);
    bool is_report_frequency_Set() const;
    bool is_report_frequency_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_generator_name;
    bool m_report_generator_name_isSet;
    bool m_report_generator_name_isValid;

    QList m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAICreateLicenseManagerReportGeneratorRequest_ReportContext m_report_context;
    bool m_report_context_isSet;
    bool m_report_context_isValid;

    OAICreateLicenseManagerReportGeneratorRequest_ReportFrequency m_report_frequency;
    bool m_report_frequency_isSet;
    bool m_report_frequency_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLicenseManagerReportGeneratorRequest)

#endif // OAICreateLicenseManagerReportGeneratorRequest_H
