/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntitlementUsage.h
 *
 * Usage associated with an entitlement resource.
 */

#ifndef OAIEntitlementUsage_H
#define OAIEntitlementUsage_H

#include <QJsonObject>

#include "OAIEntitlementDataUnit.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntitlementUsage : public OAIObject {
public:
    OAIEntitlementUsage();
    OAIEntitlementUsage(QString json);
    ~OAIEntitlementUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getConsumedValue() const;
    void setConsumedValue(const QString &consumed_value);
    bool is_consumed_value_Set() const;
    bool is_consumed_value_Valid() const;

    QString getMaxCount() const;
    void setMaxCount(const QString &max_count);
    bool is_max_count_Set() const;
    bool is_max_count_Valid() const;

    OAIEntitlementDataUnit getUnit() const;
    void setUnit(const OAIEntitlementDataUnit &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_consumed_value;
    bool m_consumed_value_isSet;
    bool m_consumed_value_isValid;

    QString m_max_count;
    bool m_max_count_isSet;
    bool m_max_count_isValid;

    OAIEntitlementDataUnit m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntitlementUsage)

#endif // OAIEntitlementUsage_H
