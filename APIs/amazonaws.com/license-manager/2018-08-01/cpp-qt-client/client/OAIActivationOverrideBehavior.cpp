/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivationOverrideBehavior.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivationOverrideBehavior::OAIActivationOverrideBehavior(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivationOverrideBehavior::OAIActivationOverrideBehavior() {
    this->initializeModel();
}

OAIActivationOverrideBehavior::~OAIActivationOverrideBehavior() {}

void OAIActivationOverrideBehavior::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIActivationOverrideBehavior::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIActivationOverrideBehavior::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DISTRIBUTED_GRANTS_ONLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIActivationOverrideBehavior::DISTRIBUTED_GRANTS_ONLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALL_GRANTS_PERMITTED_BY_ISSUER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIActivationOverrideBehavior::ALL_GRANTS_PERMITTED_BY_ISSUER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIActivationOverrideBehavior::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIActivationOverrideBehavior::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIActivationOverrideBehavior::DISTRIBUTED_GRANTS_ONLY:
            val = "DISTRIBUTED_GRANTS_ONLY";
            break;
        case eOAIActivationOverrideBehavior::ALL_GRANTS_PERMITTED_BY_ISSUER:
            val = "ALL_GRANTS_PERMITTED_BY_ISSUER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIActivationOverrideBehavior::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIActivationOverrideBehavior::eOAIActivationOverrideBehavior OAIActivationOverrideBehavior::getValue() const {
    return m_value;
}

void OAIActivationOverrideBehavior::setValue(const OAIActivationOverrideBehavior::eOAIActivationOverrideBehavior& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIActivationOverrideBehavior::isSet() const {
    
    return m_value_isSet;
}

bool OAIActivationOverrideBehavior::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
