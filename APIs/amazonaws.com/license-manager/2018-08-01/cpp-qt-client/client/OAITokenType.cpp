/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITokenType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITokenType::OAITokenType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITokenType::OAITokenType() {
    this->initializeModel();
}

OAITokenType::~OAITokenType() {}

void OAITokenType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITokenType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITokenType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("REFRESH_TOKEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAITokenType::REFRESH_TOKEN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITokenType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITokenType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITokenType::REFRESH_TOKEN:
            val = "REFRESH_TOKEN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITokenType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITokenType::eOAITokenType OAITokenType::getValue() const {
    return m_value;
}

void OAITokenType::setValue(const OAITokenType::eOAITokenType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITokenType::isSet() const {
    
    return m_value_isSet;
}

bool OAITokenType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
