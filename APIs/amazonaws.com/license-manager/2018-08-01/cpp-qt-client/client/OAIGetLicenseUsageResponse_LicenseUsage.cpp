/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetLicenseUsageResponse_LicenseUsage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetLicenseUsageResponse_LicenseUsage::OAIGetLicenseUsageResponse_LicenseUsage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetLicenseUsageResponse_LicenseUsage::OAIGetLicenseUsageResponse_LicenseUsage() {
    this->initializeModel();
}

OAIGetLicenseUsageResponse_LicenseUsage::~OAIGetLicenseUsageResponse_LicenseUsage() {}

void OAIGetLicenseUsageResponse_LicenseUsage::initializeModel() {

    m_entitlement_usages_isSet = false;
    m_entitlement_usages_isValid = false;
}

void OAIGetLicenseUsageResponse_LicenseUsage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetLicenseUsageResponse_LicenseUsage::fromJsonObject(QJsonObject json) {

    m_entitlement_usages_isValid = ::OpenAPI::fromJsonValue(m_entitlement_usages, json[QString("EntitlementUsages")]);
    m_entitlement_usages_isSet = !json[QString("EntitlementUsages")].isNull() && m_entitlement_usages_isValid;
}

QString OAIGetLicenseUsageResponse_LicenseUsage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetLicenseUsageResponse_LicenseUsage::asJsonObject() const {
    QJsonObject obj;
    if (m_entitlement_usages.isSet()) {
        obj.insert(QString("EntitlementUsages"), ::OpenAPI::toJsonValue(m_entitlement_usages));
    }
    return obj;
}

QList OAIGetLicenseUsageResponse_LicenseUsage::getEntitlementUsages() const {
    return m_entitlement_usages;
}
void OAIGetLicenseUsageResponse_LicenseUsage::setEntitlementUsages(const QList &entitlement_usages) {
    m_entitlement_usages = entitlement_usages;
    m_entitlement_usages_isSet = true;
}

bool OAIGetLicenseUsageResponse_LicenseUsage::is_entitlement_usages_Set() const{
    return m_entitlement_usages_isSet;
}

bool OAIGetLicenseUsageResponse_LicenseUsage::is_entitlement_usages_Valid() const{
    return m_entitlement_usages_isValid;
}

bool OAIGetLicenseUsageResponse_LicenseUsage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entitlement_usages.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetLicenseUsageResponse_LicenseUsage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
