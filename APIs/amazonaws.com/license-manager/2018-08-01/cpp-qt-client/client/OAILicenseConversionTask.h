/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicenseConversionTask.h
 *
 * Information about a license type conversion task.
 */

#ifndef OAILicenseConversionTask_H
#define OAILicenseConversionTask_H

#include <QJsonObject>

#include "OAILicenseConversionTaskStatus.h"
#include "OAILicenseConversionTask_DestinationLicenseContext.h"
#include "OAILicenseConversionTask_SourceLicenseContext.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILicenseConversionTask_SourceLicenseContext;
class OAILicenseConversionTask_DestinationLicenseContext;

class OAILicenseConversionTask : public OAIObject {
public:
    OAILicenseConversionTask();
    OAILicenseConversionTask(QString json);
    ~OAILicenseConversionTask() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLicenseConversionTaskId() const;
    void setLicenseConversionTaskId(const QString &license_conversion_task_id);
    bool is_license_conversion_task_id_Set() const;
    bool is_license_conversion_task_id_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    OAILicenseConversionTask_SourceLicenseContext getSourceLicenseContext() const;
    void setSourceLicenseContext(const OAILicenseConversionTask_SourceLicenseContext &source_license_context);
    bool is_source_license_context_Set() const;
    bool is_source_license_context_Valid() const;

    OAILicenseConversionTask_DestinationLicenseContext getDestinationLicenseContext() const;
    void setDestinationLicenseContext(const OAILicenseConversionTask_DestinationLicenseContext &destination_license_context);
    bool is_destination_license_context_Set() const;
    bool is_destination_license_context_Valid() const;

    OAILicenseConversionTaskStatus getStatus() const;
    void setStatus(const OAILicenseConversionTaskStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getLicenseConversionTime() const;
    void setLicenseConversionTime(const QDateTime &license_conversion_time);
    bool is_license_conversion_time_Set() const;
    bool is_license_conversion_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_license_conversion_task_id;
    bool m_license_conversion_task_id_isSet;
    bool m_license_conversion_task_id_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    OAILicenseConversionTask_SourceLicenseContext m_source_license_context;
    bool m_source_license_context_isSet;
    bool m_source_license_context_isValid;

    OAILicenseConversionTask_DestinationLicenseContext m_destination_license_context;
    bool m_destination_license_context_isSet;
    bool m_destination_license_context_isValid;

    OAILicenseConversionTaskStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_license_conversion_time;
    bool m_license_conversion_time_isSet;
    bool m_license_conversion_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicenseConversionTask)

#endif // OAILicenseConversionTask_H
