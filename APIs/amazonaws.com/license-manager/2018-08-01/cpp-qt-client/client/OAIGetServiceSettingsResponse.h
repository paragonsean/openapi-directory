/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetServiceSettingsResponse.h
 *
 * 
 */

#ifndef OAIGetServiceSettingsResponse_H
#define OAIGetServiceSettingsResponse_H

#include <QJsonObject>

#include "OAIGetServiceSettingsResponse_OrganizationConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetServiceSettingsResponse_OrganizationConfiguration;

class OAIGetServiceSettingsResponse : public OAIObject {
public:
    OAIGetServiceSettingsResponse();
    OAIGetServiceSettingsResponse(QString json);
    ~OAIGetServiceSettingsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3BucketArn() const;
    void setS3BucketArn(const QString &s3_bucket_arn);
    bool is_s3_bucket_arn_Set() const;
    bool is_s3_bucket_arn_Valid() const;

    QString getSnsTopicArn() const;
    void setSnsTopicArn(const QString &sns_topic_arn);
    bool is_sns_topic_arn_Set() const;
    bool is_sns_topic_arn_Valid() const;

    OAIGetServiceSettingsResponse_OrganizationConfiguration getOrganizationConfiguration() const;
    void setOrganizationConfiguration(const OAIGetServiceSettingsResponse_OrganizationConfiguration &organization_configuration);
    bool is_organization_configuration_Set() const;
    bool is_organization_configuration_Valid() const;

    bool getEnableCrossAccountsDiscovery() const;
    void setEnableCrossAccountsDiscovery(const bool &enable_cross_accounts_discovery);
    bool is_enable_cross_accounts_discovery_Set() const;
    bool is_enable_cross_accounts_discovery_Valid() const;

    QString getLicenseManagerResourceShareArn() const;
    void setLicenseManagerResourceShareArn(const QString &license_manager_resource_share_arn);
    bool is_license_manager_resource_share_arn_Set() const;
    bool is_license_manager_resource_share_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket_arn;
    bool m_s3_bucket_arn_isSet;
    bool m_s3_bucket_arn_isValid;

    QString m_sns_topic_arn;
    bool m_sns_topic_arn_isSet;
    bool m_sns_topic_arn_isValid;

    OAIGetServiceSettingsResponse_OrganizationConfiguration m_organization_configuration;
    bool m_organization_configuration_isSet;
    bool m_organization_configuration_isValid;

    bool m_enable_cross_accounts_discovery;
    bool m_enable_cross_accounts_discovery_isSet;
    bool m_enable_cross_accounts_discovery_isValid;

    QString m_license_manager_resource_share_arn;
    bool m_license_manager_resource_share_arn_isSet;
    bool m_license_manager_resource_share_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetServiceSettingsResponse)

#endif // OAIGetServiceSettingsResponse_H
