/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatetimeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatetimeRange::OAIDatetimeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatetimeRange::OAIDatetimeRange() {
    this->initializeModel();
}

OAIDatetimeRange::~OAIDatetimeRange() {}

void OAIDatetimeRange::initializeModel() {

    m_begin_isSet = false;
    m_begin_isValid = false;

    m_end_isSet = false;
    m_end_isValid = false;
}

void OAIDatetimeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatetimeRange::fromJsonObject(QJsonObject json) {

    m_begin_isValid = ::OpenAPI::fromJsonValue(m_begin, json[QString("Begin")]);
    m_begin_isSet = !json[QString("Begin")].isNull() && m_begin_isValid;

    m_end_isValid = ::OpenAPI::fromJsonValue(m_end, json[QString("End")]);
    m_end_isSet = !json[QString("End")].isNull() && m_end_isValid;
}

QString OAIDatetimeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatetimeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_begin_isSet) {
        obj.insert(QString("Begin"), ::OpenAPI::toJsonValue(m_begin));
    }
    if (m_end_isSet) {
        obj.insert(QString("End"), ::OpenAPI::toJsonValue(m_end));
    }
    return obj;
}

QString OAIDatetimeRange::getBegin() const {
    return m_begin;
}
void OAIDatetimeRange::setBegin(const QString &begin) {
    m_begin = begin;
    m_begin_isSet = true;
}

bool OAIDatetimeRange::is_begin_Set() const{
    return m_begin_isSet;
}

bool OAIDatetimeRange::is_begin_Valid() const{
    return m_begin_isValid;
}

QString OAIDatetimeRange::getEnd() const {
    return m_end;
}
void OAIDatetimeRange::setEnd(const QString &end) {
    m_end = end;
    m_end_isSet = true;
}

bool OAIDatetimeRange::is_end_Set() const{
    return m_end_isSet;
}

bool OAIDatetimeRange::is_end_Valid() const{
    return m_end_isValid;
}

bool OAIDatetimeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_begin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatetimeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_begin_isValid && true;
}

} // namespace OpenAPI
