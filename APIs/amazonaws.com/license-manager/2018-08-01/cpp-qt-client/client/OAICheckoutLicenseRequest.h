/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckoutLicenseRequest.h
 *
 * 
 */

#ifndef OAICheckoutLicenseRequest_H
#define OAICheckoutLicenseRequest_H

#include <QJsonObject>

#include "OAICheckoutType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICheckoutLicenseRequest : public OAIObject {
public:
    OAICheckoutLicenseRequest();
    OAICheckoutLicenseRequest(QString json);
    ~OAICheckoutLicenseRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProductSku() const;
    void setProductSku(const QString &product_sku);
    bool is_product_sku_Set() const;
    bool is_product_sku_Valid() const;

    OAICheckoutType getCheckoutType() const;
    void setCheckoutType(const OAICheckoutType &checkout_type);
    bool is_checkout_type_Set() const;
    bool is_checkout_type_Valid() const;

    QString getKeyFingerprint() const;
    void setKeyFingerprint(const QString &key_fingerprint);
    bool is_key_fingerprint_Set() const;
    bool is_key_fingerprint_Valid() const;

    QList getEntitlements() const;
    void setEntitlements(const QList &entitlements);
    bool is_entitlements_Set() const;
    bool is_entitlements_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getBeneficiary() const;
    void setBeneficiary(const QString &beneficiary);
    bool is_beneficiary_Set() const;
    bool is_beneficiary_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_product_sku;
    bool m_product_sku_isSet;
    bool m_product_sku_isValid;

    OAICheckoutType m_checkout_type;
    bool m_checkout_type_isSet;
    bool m_checkout_type_isValid;

    QString m_key_fingerprint;
    bool m_key_fingerprint_isSet;
    bool m_key_fingerprint_isValid;

    QList m_entitlements;
    bool m_entitlements_isSet;
    bool m_entitlements_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_beneficiary;
    bool m_beneficiary_isSet;
    bool m_beneficiary_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckoutLicenseRequest)

#endif // OAICheckoutLicenseRequest_H
