/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportGenerator.h
 *
 * Describe the details of a report generator.
 */

#ifndef OAIReportGenerator_H
#define OAIReportGenerator_H

#include <QJsonObject>

#include "OAIReportGenerator_ReportContext.h"
#include "OAIReportGenerator_ReportFrequency.h"
#include "OAIReportGenerator_S3Location.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportGenerator_ReportContext;
class OAIReportGenerator_ReportFrequency;
class OAIReportGenerator_S3Location;

class OAIReportGenerator : public OAIObject {
public:
    OAIReportGenerator();
    OAIReportGenerator(QString json);
    ~OAIReportGenerator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportGeneratorName() const;
    void setReportGeneratorName(const QString &report_generator_name);
    bool is_report_generator_name_Set() const;
    bool is_report_generator_name_Valid() const;

    QList getReportType() const;
    void setReportType(const QList &report_type);
    bool is_report_type_Set() const;
    bool is_report_type_Valid() const;

    OAIReportGenerator_ReportContext getReportContext() const;
    void setReportContext(const OAIReportGenerator_ReportContext &report_context);
    bool is_report_context_Set() const;
    bool is_report_context_Valid() const;

    OAIReportGenerator_ReportFrequency getReportFrequency() const;
    void setReportFrequency(const OAIReportGenerator_ReportFrequency &report_frequency);
    bool is_report_frequency_Set() const;
    bool is_report_frequency_Valid() const;

    QString getLicenseManagerReportGeneratorArn() const;
    void setLicenseManagerReportGeneratorArn(const QString &license_manager_report_generator_arn);
    bool is_license_manager_report_generator_arn_Set() const;
    bool is_license_manager_report_generator_arn_Valid() const;

    QString getLastRunStatus() const;
    void setLastRunStatus(const QString &last_run_status);
    bool is_last_run_status_Set() const;
    bool is_last_run_status_Valid() const;

    QString getLastRunFailureReason() const;
    void setLastRunFailureReason(const QString &last_run_failure_reason);
    bool is_last_run_failure_reason_Set() const;
    bool is_last_run_failure_reason_Valid() const;

    QString getLastReportGenerationTime() const;
    void setLastReportGenerationTime(const QString &last_report_generation_time);
    bool is_last_report_generation_time_Set() const;
    bool is_last_report_generation_time_Valid() const;

    QString getReportCreatorAccount() const;
    void setReportCreatorAccount(const QString &report_creator_account);
    bool is_report_creator_account_Set() const;
    bool is_report_creator_account_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIReportGenerator_S3Location getS3Location() const;
    void setS3Location(const OAIReportGenerator_S3Location &s3_location);
    bool is_s3_location_Set() const;
    bool is_s3_location_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_generator_name;
    bool m_report_generator_name_isSet;
    bool m_report_generator_name_isValid;

    QList m_report_type;
    bool m_report_type_isSet;
    bool m_report_type_isValid;

    OAIReportGenerator_ReportContext m_report_context;
    bool m_report_context_isSet;
    bool m_report_context_isValid;

    OAIReportGenerator_ReportFrequency m_report_frequency;
    bool m_report_frequency_isSet;
    bool m_report_frequency_isValid;

    QString m_license_manager_report_generator_arn;
    bool m_license_manager_report_generator_arn_isSet;
    bool m_license_manager_report_generator_arn_isValid;

    QString m_last_run_status;
    bool m_last_run_status_isSet;
    bool m_last_run_status_isValid;

    QString m_last_run_failure_reason;
    bool m_last_run_failure_reason_isSet;
    bool m_last_run_failure_reason_isValid;

    QString m_last_report_generation_time;
    bool m_last_report_generation_time_isSet;
    bool m_last_report_generation_time_isValid;

    QString m_report_creator_account;
    bool m_report_creator_account_isSet;
    bool m_report_creator_account_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIReportGenerator_S3Location m_s3_location;
    bool m_s3_location_isSet;
    bool m_s3_location_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportGenerator)

#endif // OAIReportGenerator_H
