/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportGenerator_ReportContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportGenerator_ReportContext::OAIReportGenerator_ReportContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportGenerator_ReportContext::OAIReportGenerator_ReportContext() {
    this->initializeModel();
}

OAIReportGenerator_ReportContext::~OAIReportGenerator_ReportContext() {}

void OAIReportGenerator_ReportContext::initializeModel() {

    m_license_configuration_arns_isSet = false;
    m_license_configuration_arns_isValid = false;
}

void OAIReportGenerator_ReportContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportGenerator_ReportContext::fromJsonObject(QJsonObject json) {

    m_license_configuration_arns_isValid = ::OpenAPI::fromJsonValue(m_license_configuration_arns, json[QString("licenseConfigurationArns")]);
    m_license_configuration_arns_isSet = !json[QString("licenseConfigurationArns")].isNull() && m_license_configuration_arns_isValid;
}

QString OAIReportGenerator_ReportContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportGenerator_ReportContext::asJsonObject() const {
    QJsonObject obj;
    if (m_license_configuration_arns.isSet()) {
        obj.insert(QString("licenseConfigurationArns"), ::OpenAPI::toJsonValue(m_license_configuration_arns));
    }
    return obj;
}

QList OAIReportGenerator_ReportContext::getLicenseConfigurationArns() const {
    return m_license_configuration_arns;
}
void OAIReportGenerator_ReportContext::setLicenseConfigurationArns(const QList &license_configuration_arns) {
    m_license_configuration_arns = license_configuration_arns;
    m_license_configuration_arns_isSet = true;
}

bool OAIReportGenerator_ReportContext::is_license_configuration_arns_Set() const{
    return m_license_configuration_arns_isSet;
}

bool OAIReportGenerator_ReportContext::is_license_configuration_arns_Valid() const{
    return m_license_configuration_arns_isValid;
}

bool OAIReportGenerator_ReportContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_license_configuration_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportGenerator_ReportContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_license_configuration_arns_isValid && true;
}

} // namespace OpenAPI
