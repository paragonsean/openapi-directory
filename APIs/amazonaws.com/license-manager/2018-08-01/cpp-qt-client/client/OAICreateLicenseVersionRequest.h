/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLicenseVersionRequest.h
 *
 * 
 */

#ifndef OAICreateLicenseVersionRequest_H
#define OAICreateLicenseVersionRequest_H

#include <QJsonObject>

#include "OAICreateLicenseRequest_ConsumptionConfiguration.h"
#include "OAICreateLicenseRequest_Issuer.h"
#include "OAICreateLicenseRequest_Validity.h"
#include "OAILicenseStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLicenseRequest_Issuer;
class OAICreateLicenseRequest_Validity;
class OAICreateLicenseRequest_ConsumptionConfiguration;

class OAICreateLicenseVersionRequest : public OAIObject {
public:
    OAICreateLicenseVersionRequest();
    OAICreateLicenseVersionRequest(QString json);
    ~OAICreateLicenseVersionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLicenseArn() const;
    void setLicenseArn(const QString &license_arn);
    bool is_license_arn_Set() const;
    bool is_license_arn_Valid() const;

    QString getLicenseName() const;
    void setLicenseName(const QString &license_name);
    bool is_license_name_Set() const;
    bool is_license_name_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    OAICreateLicenseRequest_Issuer getIssuer() const;
    void setIssuer(const OAICreateLicenseRequest_Issuer &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getHomeRegion() const;
    void setHomeRegion(const QString &home_region);
    bool is_home_region_Set() const;
    bool is_home_region_Valid() const;

    OAICreateLicenseRequest_Validity getValidity() const;
    void setValidity(const OAICreateLicenseRequest_Validity &validity);
    bool is_validity_Set() const;
    bool is_validity_Valid() const;

    QList getLicenseMetadata() const;
    void setLicenseMetadata(const QList &license_metadata);
    bool is_license_metadata_Set() const;
    bool is_license_metadata_Valid() const;

    QList getEntitlements() const;
    void setEntitlements(const QList &entitlements);
    bool is_entitlements_Set() const;
    bool is_entitlements_Valid() const;

    OAICreateLicenseRequest_ConsumptionConfiguration getConsumptionConfiguration() const;
    void setConsumptionConfiguration(const OAICreateLicenseRequest_ConsumptionConfiguration &consumption_configuration);
    bool is_consumption_configuration_Set() const;
    bool is_consumption_configuration_Valid() const;

    OAILicenseStatus getStatus() const;
    void setStatus(const OAILicenseStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getSourceVersion() const;
    void setSourceVersion(const QString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_license_arn;
    bool m_license_arn_isSet;
    bool m_license_arn_isValid;

    QString m_license_name;
    bool m_license_name_isSet;
    bool m_license_name_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    OAICreateLicenseRequest_Issuer m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_home_region;
    bool m_home_region_isSet;
    bool m_home_region_isValid;

    OAICreateLicenseRequest_Validity m_validity;
    bool m_validity_isSet;
    bool m_validity_isValid;

    QList m_license_metadata;
    bool m_license_metadata_isSet;
    bool m_license_metadata_isValid;

    QList m_entitlements;
    bool m_entitlements_isSet;
    bool m_entitlements_isValid;

    OAICreateLicenseRequest_ConsumptionConfiguration m_consumption_configuration;
    bool m_consumption_configuration_isSet;
    bool m_consumption_configuration_isValid;

    OAILicenseStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLicenseVersionRequest)

#endif // OAICreateLicenseVersionRequest_H
