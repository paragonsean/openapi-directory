/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrant.h
 *
 * Describes a grant.
 */

#ifndef OAIGrant_H
#define OAIGrant_H

#include <QJsonObject>

#include "OAICreateGrantVersionRequest_Options.h"
#include "OAIGrantStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateGrantVersionRequest_Options;

class OAIGrant : public OAIObject {
public:
    OAIGrant();
    OAIGrant(QString json);
    ~OAIGrant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGrantArn() const;
    void setGrantArn(const QString &grant_arn);
    bool is_grant_arn_Set() const;
    bool is_grant_arn_Valid() const;

    QString getGrantName() const;
    void setGrantName(const QString &grant_name);
    bool is_grant_name_Set() const;
    bool is_grant_name_Valid() const;

    QString getParentArn() const;
    void setParentArn(const QString &parent_arn);
    bool is_parent_arn_Set() const;
    bool is_parent_arn_Valid() const;

    QString getLicenseArn() const;
    void setLicenseArn(const QString &license_arn);
    bool is_license_arn_Set() const;
    bool is_license_arn_Valid() const;

    QString getGranteePrincipalArn() const;
    void setGranteePrincipalArn(const QString &grantee_principal_arn);
    bool is_grantee_principal_arn_Set() const;
    bool is_grantee_principal_arn_Valid() const;

    QString getHomeRegion() const;
    void setHomeRegion(const QString &home_region);
    bool is_home_region_Set() const;
    bool is_home_region_Valid() const;

    OAIGrantStatus getGrantStatus() const;
    void setGrantStatus(const OAIGrantStatus &grant_status);
    bool is_grant_status_Set() const;
    bool is_grant_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList getGrantedOperations() const;
    void setGrantedOperations(const QList &granted_operations);
    bool is_granted_operations_Set() const;
    bool is_granted_operations_Valid() const;

    OAICreateGrantVersionRequest_Options getOptions() const;
    void setOptions(const OAICreateGrantVersionRequest_Options &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_grant_arn;
    bool m_grant_arn_isSet;
    bool m_grant_arn_isValid;

    QString m_grant_name;
    bool m_grant_name_isSet;
    bool m_grant_name_isValid;

    QString m_parent_arn;
    bool m_parent_arn_isSet;
    bool m_parent_arn_isValid;

    QString m_license_arn;
    bool m_license_arn_isSet;
    bool m_license_arn_isValid;

    QString m_grantee_principal_arn;
    bool m_grantee_principal_arn_isSet;
    bool m_grantee_principal_arn_isValid;

    QString m_home_region;
    bool m_home_region_isSet;
    bool m_home_region_isValid;

    OAIGrantStatus m_grant_status;
    bool m_grant_status_isSet;
    bool m_grant_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList m_granted_operations;
    bool m_granted_operations_isSet;
    bool m_granted_operations_isValid;

    OAICreateGrantVersionRequest_Options m_options;
    bool m_options_isSet;
    bool m_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrant)

#endif // OAIGrant_H
