/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductInformationFilter.h
 *
 * Describes product information filters.
 */

#ifndef OAIProductInformationFilter_H
#define OAIProductInformationFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductInformationFilter : public OAIObject {
public:
    OAIProductInformationFilter();
    OAIProductInformationFilter(QString json);
    ~OAIProductInformationFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProductInformationFilterName() const;
    void setProductInformationFilterName(const QString &product_information_filter_name);
    bool is_product_information_filter_name_Set() const;
    bool is_product_information_filter_name_Valid() const;

    QList getProductInformationFilterValue() const;
    void setProductInformationFilterValue(const QList &product_information_filter_value);
    bool is_product_information_filter_value_Set() const;
    bool is_product_information_filter_value_Valid() const;

    QString getProductInformationFilterComparator() const;
    void setProductInformationFilterComparator(const QString &product_information_filter_comparator);
    bool is_product_information_filter_comparator_Set() const;
    bool is_product_information_filter_comparator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_product_information_filter_name;
    bool m_product_information_filter_name_isSet;
    bool m_product_information_filter_name_isValid;

    QList m_product_information_filter_value;
    bool m_product_information_filter_value_isSet;
    bool m_product_information_filter_value_isValid;

    QString m_product_information_filter_comparator;
    bool m_product_information_filter_comparator_isSet;
    bool m_product_information_filter_comparator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductInformationFilter)

#endif // OAIProductInformationFilter_H
