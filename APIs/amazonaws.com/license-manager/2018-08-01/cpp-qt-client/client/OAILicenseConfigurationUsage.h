/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicenseConfigurationUsage.h
 *
 * Details about the usage of a resource associated with a license configuration.
 */

#ifndef OAILicenseConfigurationUsage_H
#define OAILicenseConfigurationUsage_H

#include <QJsonObject>

#include "OAIResourceType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILicenseConfigurationUsage : public OAIObject {
public:
    OAILicenseConfigurationUsage();
    OAILicenseConfigurationUsage(QString json);
    ~OAILicenseConfigurationUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    OAIResourceType getResourceType() const;
    void setResourceType(const OAIResourceType &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getResourceStatus() const;
    void setResourceStatus(const QString &resource_status);
    bool is_resource_status_Set() const;
    bool is_resource_status_Valid() const;

    QString getResourceOwnerId() const;
    void setResourceOwnerId(const QString &resource_owner_id);
    bool is_resource_owner_id_Set() const;
    bool is_resource_owner_id_Valid() const;

    QDateTime getAssociationTime() const;
    void setAssociationTime(const QDateTime &association_time);
    bool is_association_time_Set() const;
    bool is_association_time_Valid() const;

    qint32 getConsumedLicenses() const;
    void setConsumedLicenses(const qint32 &consumed_licenses);
    bool is_consumed_licenses_Set() const;
    bool is_consumed_licenses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    OAIResourceType m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_resource_status;
    bool m_resource_status_isSet;
    bool m_resource_status_isValid;

    QString m_resource_owner_id;
    bool m_resource_owner_id_isSet;
    bool m_resource_owner_id_isValid;

    QDateTime m_association_time;
    bool m_association_time_isSet;
    bool m_association_time_isValid;

    qint32 m_consumed_licenses;
    bool m_consumed_licenses_isSet;
    bool m_consumed_licenses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicenseConfigurationUsage)

#endif // OAILicenseConfigurationUsage_H
