/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILicenseSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILicenseSpecification::OAILicenseSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILicenseSpecification::OAILicenseSpecification() {
    this->initializeModel();
}

OAILicenseSpecification::~OAILicenseSpecification() {}

void OAILicenseSpecification::initializeModel() {

    m_license_configuration_arn_isSet = false;
    m_license_configuration_arn_isValid = false;

    m_ami_association_scope_isSet = false;
    m_ami_association_scope_isValid = false;
}

void OAILicenseSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILicenseSpecification::fromJsonObject(QJsonObject json) {

    m_license_configuration_arn_isValid = ::OpenAPI::fromJsonValue(m_license_configuration_arn, json[QString("LicenseConfigurationArn")]);
    m_license_configuration_arn_isSet = !json[QString("LicenseConfigurationArn")].isNull() && m_license_configuration_arn_isValid;

    m_ami_association_scope_isValid = ::OpenAPI::fromJsonValue(m_ami_association_scope, json[QString("AmiAssociationScope")]);
    m_ami_association_scope_isSet = !json[QString("AmiAssociationScope")].isNull() && m_ami_association_scope_isValid;
}

QString OAILicenseSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILicenseSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_license_configuration_arn_isSet) {
        obj.insert(QString("LicenseConfigurationArn"), ::OpenAPI::toJsonValue(m_license_configuration_arn));
    }
    if (m_ami_association_scope_isSet) {
        obj.insert(QString("AmiAssociationScope"), ::OpenAPI::toJsonValue(m_ami_association_scope));
    }
    return obj;
}

QString OAILicenseSpecification::getLicenseConfigurationArn() const {
    return m_license_configuration_arn;
}
void OAILicenseSpecification::setLicenseConfigurationArn(const QString &license_configuration_arn) {
    m_license_configuration_arn = license_configuration_arn;
    m_license_configuration_arn_isSet = true;
}

bool OAILicenseSpecification::is_license_configuration_arn_Set() const{
    return m_license_configuration_arn_isSet;
}

bool OAILicenseSpecification::is_license_configuration_arn_Valid() const{
    return m_license_configuration_arn_isValid;
}

QString OAILicenseSpecification::getAmiAssociationScope() const {
    return m_ami_association_scope;
}
void OAILicenseSpecification::setAmiAssociationScope(const QString &ami_association_scope) {
    m_ami_association_scope = ami_association_scope;
    m_ami_association_scope_isSet = true;
}

bool OAILicenseSpecification::is_ami_association_scope_Set() const{
    return m_ami_association_scope_isSet;
}

bool OAILicenseSpecification::is_ami_association_scope_Valid() const{
    return m_ami_association_scope_isValid;
}

bool OAILicenseSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_license_configuration_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ami_association_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILicenseSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_license_configuration_arn_isValid && true;
}

} // namespace OpenAPI
