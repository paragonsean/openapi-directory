/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRenewType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRenewType::OAIRenewType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRenewType::OAIRenewType() {
    this->initializeModel();
}

OAIRenewType::~OAIRenewType() {}

void OAIRenewType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRenewType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRenewType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRenewType::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Weekly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRenewType::WEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Monthly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRenewType::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRenewType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRenewType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRenewType::NONE:
            val = "None";
            break;
        case eOAIRenewType::WEEKLY:
            val = "Weekly";
            break;
        case eOAIRenewType::MONTHLY:
            val = "Monthly";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRenewType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRenewType::eOAIRenewType OAIRenewType::getValue() const {
    return m_value;
}

void OAIRenewType::setValue(const OAIRenewType::eOAIRenewType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRenewType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRenewType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
