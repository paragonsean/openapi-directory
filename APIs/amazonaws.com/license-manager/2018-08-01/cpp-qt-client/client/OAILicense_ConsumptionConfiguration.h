/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicense_ConsumptionConfiguration.h
 *
 * 
 */

#ifndef OAILicense_ConsumptionConfiguration_H
#define OAILicense_ConsumptionConfiguration_H

#include <QJsonObject>

#include "OAIConsumptionConfiguration_BorrowConfiguration.h"
#include "OAIConsumptionConfiguration_ProvisionalConfiguration.h"
#include "OAIRenewType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConsumptionConfiguration_ProvisionalConfiguration;
class OAIConsumptionConfiguration_BorrowConfiguration;

class OAILicense_ConsumptionConfiguration : public OAIObject {
public:
    OAILicense_ConsumptionConfiguration();
    OAILicense_ConsumptionConfiguration(QString json);
    ~OAILicense_ConsumptionConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRenewType getRenewType() const;
    void setRenewType(const OAIRenewType &renew_type);
    bool is_renew_type_Set() const;
    bool is_renew_type_Valid() const;

    OAIConsumptionConfiguration_ProvisionalConfiguration getProvisionalConfiguration() const;
    void setProvisionalConfiguration(const OAIConsumptionConfiguration_ProvisionalConfiguration &provisional_configuration);
    bool is_provisional_configuration_Set() const;
    bool is_provisional_configuration_Valid() const;

    OAIConsumptionConfiguration_BorrowConfiguration getBorrowConfiguration() const;
    void setBorrowConfiguration(const OAIConsumptionConfiguration_BorrowConfiguration &borrow_configuration);
    bool is_borrow_configuration_Set() const;
    bool is_borrow_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRenewType m_renew_type;
    bool m_renew_type_isSet;
    bool m_renew_type_isValid;

    OAIConsumptionConfiguration_ProvisionalConfiguration m_provisional_configuration;
    bool m_provisional_configuration_isSet;
    bool m_provisional_configuration_isValid;

    OAIConsumptionConfiguration_BorrowConfiguration m_borrow_configuration;
    bool m_borrow_configuration_isSet;
    bool m_borrow_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicense_ConsumptionConfiguration)

#endif // OAILicense_ConsumptionConfiguration_H
