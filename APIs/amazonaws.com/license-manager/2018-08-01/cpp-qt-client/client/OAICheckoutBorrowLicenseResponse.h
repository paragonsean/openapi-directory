/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckoutBorrowLicenseResponse.h
 *
 * 
 */

#ifndef OAICheckoutBorrowLicenseResponse_H
#define OAICheckoutBorrowLicenseResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICheckoutBorrowLicenseResponse : public OAIObject {
public:
    OAICheckoutBorrowLicenseResponse();
    OAICheckoutBorrowLicenseResponse(QString json);
    ~OAICheckoutBorrowLicenseResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLicenseArn() const;
    void setLicenseArn(const QString &license_arn);
    bool is_license_arn_Set() const;
    bool is_license_arn_Valid() const;

    QString getLicenseConsumptionToken() const;
    void setLicenseConsumptionToken(const QString &license_consumption_token);
    bool is_license_consumption_token_Set() const;
    bool is_license_consumption_token_Valid() const;

    QList getEntitlementsAllowed() const;
    void setEntitlementsAllowed(const QList &entitlements_allowed);
    bool is_entitlements_allowed_Set() const;
    bool is_entitlements_allowed_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getSignedToken() const;
    void setSignedToken(const QString &signed_token);
    bool is_signed_token_Set() const;
    bool is_signed_token_Valid() const;

    QString getIssuedAt() const;
    void setIssuedAt(const QString &issued_at);
    bool is_issued_at_Set() const;
    bool is_issued_at_Valid() const;

    QString getExpiration() const;
    void setExpiration(const QString &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    QList getCheckoutMetadata() const;
    void setCheckoutMetadata(const QList &checkout_metadata);
    bool is_checkout_metadata_Set() const;
    bool is_checkout_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_license_arn;
    bool m_license_arn_isSet;
    bool m_license_arn_isValid;

    QString m_license_consumption_token;
    bool m_license_consumption_token_isSet;
    bool m_license_consumption_token_isValid;

    QList m_entitlements_allowed;
    bool m_entitlements_allowed_isSet;
    bool m_entitlements_allowed_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_signed_token;
    bool m_signed_token_isSet;
    bool m_signed_token_isValid;

    QString m_issued_at;
    bool m_issued_at_isSet;
    bool m_issued_at_isValid;

    QString m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    QList m_checkout_metadata;
    bool m_checkout_metadata_isSet;
    bool m_checkout_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckoutBorrowLicenseResponse)

#endif // OAICheckoutBorrowLicenseResponse_H
