/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateGrantVersionRequestOptions from './CreateGrantVersionRequestOptions';
import Grant from './Grant';
import GrantStatus from './GrantStatus';

/**
 * The GetGrantResponseGrant model module.
 * @module model/GetGrantResponseGrant
 * @version 2018-08-01
 */
class GetGrantResponseGrant {
    /**
     * Constructs a new <code>GetGrantResponseGrant</code>.
     * @alias module:model/GetGrantResponseGrant
     * @implements module:model/Grant
     * @param grantArn {String} 
     * @param grantName {String} 
     * @param parentArn {String} 
     * @param licenseArn {String} 
     * @param granteePrincipalArn {String} 
     * @param homeRegion {String} 
     * @param grantStatus {module:model/GrantStatus} 
     * @param version {String} 
     * @param grantedOperations {Array} 
     */
    constructor(grantArn, grantName, parentArn, licenseArn, granteePrincipalArn, homeRegion, grantStatus, version, grantedOperations) { 
        Grant.initialize(this, grantArn, grantName, parentArn, licenseArn, granteePrincipalArn, homeRegion, grantStatus, version, grantedOperations);
        GetGrantResponseGrant.initialize(this, grantArn, grantName, parentArn, licenseArn, granteePrincipalArn, homeRegion, grantStatus, version, grantedOperations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, grantArn, grantName, parentArn, licenseArn, granteePrincipalArn, homeRegion, grantStatus, version, grantedOperations) { 
        obj['GrantArn'] = grantArn;
        obj['GrantName'] = grantName;
        obj['ParentArn'] = parentArn;
        obj['LicenseArn'] = licenseArn;
        obj['GranteePrincipalArn'] = granteePrincipalArn;
        obj['HomeRegion'] = homeRegion;
        obj['GrantStatus'] = grantStatus;
        obj['Version'] = version;
        obj['GrantedOperations'] = grantedOperations;
    }

    /**
     * Constructs a <code>GetGrantResponseGrant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetGrantResponseGrant} obj Optional instance to populate.
     * @return {module:model/GetGrantResponseGrant} The populated <code>GetGrantResponseGrant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetGrantResponseGrant();
            Grant.constructFromObject(data, obj);

            if (data.hasOwnProperty('GrantArn')) {
                obj['GrantArn'] = ApiClient.convertToType(data['GrantArn'], 'String');
            }
            if (data.hasOwnProperty('GrantName')) {
                obj['GrantName'] = ApiClient.convertToType(data['GrantName'], 'String');
            }
            if (data.hasOwnProperty('ParentArn')) {
                obj['ParentArn'] = ApiClient.convertToType(data['ParentArn'], 'String');
            }
            if (data.hasOwnProperty('LicenseArn')) {
                obj['LicenseArn'] = ApiClient.convertToType(data['LicenseArn'], 'String');
            }
            if (data.hasOwnProperty('GranteePrincipalArn')) {
                obj['GranteePrincipalArn'] = ApiClient.convertToType(data['GranteePrincipalArn'], 'String');
            }
            if (data.hasOwnProperty('HomeRegion')) {
                obj['HomeRegion'] = ApiClient.convertToType(data['HomeRegion'], 'String');
            }
            if (data.hasOwnProperty('GrantStatus')) {
                obj['GrantStatus'] = ApiClient.convertToType(data['GrantStatus'], GrantStatus);
            }
            if (data.hasOwnProperty('StatusReason')) {
                obj['StatusReason'] = ApiClient.convertToType(data['StatusReason'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('GrantedOperations')) {
                obj['GrantedOperations'] = ApiClient.convertToType(data['GrantedOperations'], Array);
            }
            if (data.hasOwnProperty('Options')) {
                obj['Options'] = CreateGrantVersionRequestOptions.constructFromObject(data['Options']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetGrantResponseGrant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetGrantResponseGrant</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetGrantResponseGrant.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `GrantArn`
        if (data['GrantArn']) { // data not null
          String.validateJSON(data['GrantArn']);
        }
        // validate the optional field `GrantName`
        if (data['GrantName']) { // data not null
          String.validateJSON(data['GrantName']);
        }
        // validate the optional field `ParentArn`
        if (data['ParentArn']) { // data not null
          String.validateJSON(data['ParentArn']);
        }
        // validate the optional field `LicenseArn`
        if (data['LicenseArn']) { // data not null
          String.validateJSON(data['LicenseArn']);
        }
        // validate the optional field `GranteePrincipalArn`
        if (data['GranteePrincipalArn']) { // data not null
          String.validateJSON(data['GranteePrincipalArn']);
        }
        // validate the optional field `HomeRegion`
        if (data['HomeRegion']) { // data not null
          String.validateJSON(data['HomeRegion']);
        }
        // validate the optional field `GrantStatus`
        if (data['GrantStatus']) { // data not null
          GrantStatus.validateJSON(data['GrantStatus']);
        }
        // validate the optional field `StatusReason`
        if (data['StatusReason']) { // data not null
          String.validateJSON(data['StatusReason']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          String.validateJSON(data['Version']);
        }
        // validate the optional field `GrantedOperations`
        if (data['GrantedOperations']) { // data not null
          Array.validateJSON(data['GrantedOperations']);
        }
        // validate the optional field `Options`
        if (data['Options']) { // data not null
          CreateGrantVersionRequestOptions.validateJSON(data['Options']);
        }

        return true;
    }


}

GetGrantResponseGrant.RequiredProperties = ["GrantArn", "GrantName", "ParentArn", "LicenseArn", "GranteePrincipalArn", "HomeRegion", "GrantStatus", "Version", "GrantedOperations"];

/**
 * @member {String} GrantArn
 */
GetGrantResponseGrant.prototype['GrantArn'] = undefined;

/**
 * @member {String} GrantName
 */
GetGrantResponseGrant.prototype['GrantName'] = undefined;

/**
 * @member {String} ParentArn
 */
GetGrantResponseGrant.prototype['ParentArn'] = undefined;

/**
 * @member {String} LicenseArn
 */
GetGrantResponseGrant.prototype['LicenseArn'] = undefined;

/**
 * @member {String} GranteePrincipalArn
 */
GetGrantResponseGrant.prototype['GranteePrincipalArn'] = undefined;

/**
 * @member {String} HomeRegion
 */
GetGrantResponseGrant.prototype['HomeRegion'] = undefined;

/**
 * @member {module:model/GrantStatus} GrantStatus
 */
GetGrantResponseGrant.prototype['GrantStatus'] = undefined;

/**
 * @member {String} StatusReason
 */
GetGrantResponseGrant.prototype['StatusReason'] = undefined;

/**
 * @member {String} Version
 */
GetGrantResponseGrant.prototype['Version'] = undefined;

/**
 * @member {Array} GrantedOperations
 */
GetGrantResponseGrant.prototype['GrantedOperations'] = undefined;

/**
 * @member {module:model/CreateGrantVersionRequestOptions} Options
 */
GetGrantResponseGrant.prototype['Options'] = undefined;


// Implement Grant interface:
/**
 * @member {String} GrantArn
 */
Grant.prototype['GrantArn'] = undefined;
/**
 * @member {String} GrantName
 */
Grant.prototype['GrantName'] = undefined;
/**
 * @member {String} ParentArn
 */
Grant.prototype['ParentArn'] = undefined;
/**
 * @member {String} LicenseArn
 */
Grant.prototype['LicenseArn'] = undefined;
/**
 * @member {String} GranteePrincipalArn
 */
Grant.prototype['GranteePrincipalArn'] = undefined;
/**
 * @member {String} HomeRegion
 */
Grant.prototype['HomeRegion'] = undefined;
/**
 * @member {module:model/GrantStatus} GrantStatus
 */
Grant.prototype['GrantStatus'] = undefined;
/**
 * @member {String} StatusReason
 */
Grant.prototype['StatusReason'] = undefined;
/**
 * @member {String} Version
 */
Grant.prototype['Version'] = undefined;
/**
 * @member {Array} GrantedOperations
 */
Grant.prototype['GrantedOperations'] = undefined;
/**
 * @member {module:model/CreateGrantVersionRequestOptions} Options
 */
Grant.prototype['Options'] = undefined;




export default GetGrantResponseGrant;

