/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatetimeRange model module.
 * @module model/DatetimeRange
 * @version 2018-08-01
 */
class DatetimeRange {
    /**
     * Constructs a new <code>DatetimeRange</code>.
     * Describes a time range, in ISO8601-UTC format.
     * @alias module:model/DatetimeRange
     * @param begin {String} 
     */
    constructor(begin) { 
        
        DatetimeRange.initialize(this, begin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, begin) { 
        obj['Begin'] = begin;
    }

    /**
     * Constructs a <code>DatetimeRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatetimeRange} obj Optional instance to populate.
     * @return {module:model/DatetimeRange} The populated <code>DatetimeRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatetimeRange();

            if (data.hasOwnProperty('Begin')) {
                obj['Begin'] = ApiClient.convertToType(data['Begin'], 'String');
            }
            if (data.hasOwnProperty('End')) {
                obj['End'] = ApiClient.convertToType(data['End'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatetimeRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatetimeRange</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatetimeRange.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Begin`
        if (data['Begin']) { // data not null
          String.validateJSON(data['Begin']);
        }
        // validate the optional field `End`
        if (data['End']) { // data not null
          String.validateJSON(data['End']);
        }

        return true;
    }


}

DatetimeRange.RequiredProperties = ["Begin"];

/**
 * @member {String} Begin
 */
DatetimeRange.prototype['Begin'] = undefined;

/**
 * @member {String} End
 */
DatetimeRange.prototype['End'] = undefined;






export default DatetimeRange;

