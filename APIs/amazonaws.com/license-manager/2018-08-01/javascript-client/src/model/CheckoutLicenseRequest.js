/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CheckoutType from './CheckoutType';

/**
 * The CheckoutLicenseRequest model module.
 * @module model/CheckoutLicenseRequest
 * @version 2018-08-01
 */
class CheckoutLicenseRequest {
    /**
     * Constructs a new <code>CheckoutLicenseRequest</code>.
     * @alias module:model/CheckoutLicenseRequest
     * @param productSKU {String} 
     * @param checkoutType {module:model/CheckoutType} 
     * @param keyFingerprint {String} 
     * @param entitlements {Array} 
     * @param clientToken {String} 
     */
    constructor(productSKU, checkoutType, keyFingerprint, entitlements, clientToken) { 
        
        CheckoutLicenseRequest.initialize(this, productSKU, checkoutType, keyFingerprint, entitlements, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productSKU, checkoutType, keyFingerprint, entitlements, clientToken) { 
        obj['ProductSKU'] = productSKU;
        obj['CheckoutType'] = checkoutType;
        obj['KeyFingerprint'] = keyFingerprint;
        obj['Entitlements'] = entitlements;
        obj['ClientToken'] = clientToken;
    }

    /**
     * Constructs a <code>CheckoutLicenseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutLicenseRequest} obj Optional instance to populate.
     * @return {module:model/CheckoutLicenseRequest} The populated <code>CheckoutLicenseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutLicenseRequest();

            if (data.hasOwnProperty('ProductSKU')) {
                obj['ProductSKU'] = ApiClient.convertToType(data['ProductSKU'], 'String');
            }
            if (data.hasOwnProperty('CheckoutType')) {
                obj['CheckoutType'] = ApiClient.convertToType(data['CheckoutType'], CheckoutType);
            }
            if (data.hasOwnProperty('KeyFingerprint')) {
                obj['KeyFingerprint'] = ApiClient.convertToType(data['KeyFingerprint'], 'String');
            }
            if (data.hasOwnProperty('Entitlements')) {
                obj['Entitlements'] = ApiClient.convertToType(data['Entitlements'], Array);
            }
            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('Beneficiary')) {
                obj['Beneficiary'] = ApiClient.convertToType(data['Beneficiary'], 'String');
            }
            if (data.hasOwnProperty('NodeId')) {
                obj['NodeId'] = ApiClient.convertToType(data['NodeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutLicenseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutLicenseRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckoutLicenseRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProductSKU`
        if (data['ProductSKU']) { // data not null
          String.validateJSON(data['ProductSKU']);
        }
        // validate the optional field `CheckoutType`
        if (data['CheckoutType']) { // data not null
          CheckoutType.validateJSON(data['CheckoutType']);
        }
        // validate the optional field `KeyFingerprint`
        if (data['KeyFingerprint']) { // data not null
          String.validateJSON(data['KeyFingerprint']);
        }
        // validate the optional field `Entitlements`
        if (data['Entitlements']) { // data not null
          Array.validateJSON(data['Entitlements']);
        }
        // validate the optional field `ClientToken`
        if (data['ClientToken']) { // data not null
          String.validateJSON(data['ClientToken']);
        }
        // validate the optional field `Beneficiary`
        if (data['Beneficiary']) { // data not null
          String.validateJSON(data['Beneficiary']);
        }
        // validate the optional field `NodeId`
        if (data['NodeId']) { // data not null
          String.validateJSON(data['NodeId']);
        }

        return true;
    }


}

CheckoutLicenseRequest.RequiredProperties = ["ProductSKU", "CheckoutType", "KeyFingerprint", "Entitlements", "ClientToken"];

/**
 * @member {String} ProductSKU
 */
CheckoutLicenseRequest.prototype['ProductSKU'] = undefined;

/**
 * @member {module:model/CheckoutType} CheckoutType
 */
CheckoutLicenseRequest.prototype['CheckoutType'] = undefined;

/**
 * @member {String} KeyFingerprint
 */
CheckoutLicenseRequest.prototype['KeyFingerprint'] = undefined;

/**
 * @member {Array} Entitlements
 */
CheckoutLicenseRequest.prototype['Entitlements'] = undefined;

/**
 * @member {String} ClientToken
 */
CheckoutLicenseRequest.prototype['ClientToken'] = undefined;

/**
 * @member {String} Beneficiary
 */
CheckoutLicenseRequest.prototype['Beneficiary'] = undefined;

/**
 * @member {String} NodeId
 */
CheckoutLicenseRequest.prototype['NodeId'] = undefined;






export default CheckoutLicenseRequest;

