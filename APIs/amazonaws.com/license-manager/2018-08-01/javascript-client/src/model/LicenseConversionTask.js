/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LicenseConversionTaskDestinationLicenseContext from './LicenseConversionTaskDestinationLicenseContext';
import LicenseConversionTaskSourceLicenseContext from './LicenseConversionTaskSourceLicenseContext';
import LicenseConversionTaskStatus from './LicenseConversionTaskStatus';

/**
 * The LicenseConversionTask model module.
 * @module model/LicenseConversionTask
 * @version 2018-08-01
 */
class LicenseConversionTask {
    /**
     * Constructs a new <code>LicenseConversionTask</code>.
     * Information about a license type conversion task.
     * @alias module:model/LicenseConversionTask
     */
    constructor() { 
        
        LicenseConversionTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseConversionTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseConversionTask} obj Optional instance to populate.
     * @return {module:model/LicenseConversionTask} The populated <code>LicenseConversionTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseConversionTask();

            if (data.hasOwnProperty('LicenseConversionTaskId')) {
                obj['LicenseConversionTaskId'] = ApiClient.convertToType(data['LicenseConversionTaskId'], 'String');
            }
            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
            if (data.hasOwnProperty('SourceLicenseContext')) {
                obj['SourceLicenseContext'] = LicenseConversionTaskSourceLicenseContext.constructFromObject(data['SourceLicenseContext']);
            }
            if (data.hasOwnProperty('DestinationLicenseContext')) {
                obj['DestinationLicenseContext'] = LicenseConversionTaskDestinationLicenseContext.constructFromObject(data['DestinationLicenseContext']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], LicenseConversionTaskStatus);
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('LicenseConversionTime')) {
                obj['LicenseConversionTime'] = ApiClient.convertToType(data['LicenseConversionTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseConversionTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseConversionTask</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LicenseConversionTaskId`
        if (data['LicenseConversionTaskId']) { // data not null
          String.validateJSON(data['LicenseConversionTaskId']);
        }
        // validate the optional field `ResourceArn`
        if (data['ResourceArn']) { // data not null
          String.validateJSON(data['ResourceArn']);
        }
        // validate the optional field `SourceLicenseContext`
        if (data['SourceLicenseContext']) { // data not null
          LicenseConversionTaskSourceLicenseContext.validateJSON(data['SourceLicenseContext']);
        }
        // validate the optional field `DestinationLicenseContext`
        if (data['DestinationLicenseContext']) { // data not null
          LicenseConversionTaskDestinationLicenseContext.validateJSON(data['DestinationLicenseContext']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          LicenseConversionTaskStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `LicenseConversionTime`
        if (data['LicenseConversionTime']) { // data not null
          Date.validateJSON(data['LicenseConversionTime']);
        }
        // validate the optional field `EndTime`
        if (data['EndTime']) { // data not null
          Date.validateJSON(data['EndTime']);
        }

        return true;
    }


}



/**
 * @member {String} LicenseConversionTaskId
 */
LicenseConversionTask.prototype['LicenseConversionTaskId'] = undefined;

/**
 * @member {String} ResourceArn
 */
LicenseConversionTask.prototype['ResourceArn'] = undefined;

/**
 * @member {module:model/LicenseConversionTaskSourceLicenseContext} SourceLicenseContext
 */
LicenseConversionTask.prototype['SourceLicenseContext'] = undefined;

/**
 * @member {module:model/LicenseConversionTaskDestinationLicenseContext} DestinationLicenseContext
 */
LicenseConversionTask.prototype['DestinationLicenseContext'] = undefined;

/**
 * @member {module:model/LicenseConversionTaskStatus} Status
 */
LicenseConversionTask.prototype['Status'] = undefined;

/**
 * @member {String} StatusMessage
 */
LicenseConversionTask.prototype['StatusMessage'] = undefined;

/**
 * @member {Date} StartTime
 */
LicenseConversionTask.prototype['StartTime'] = undefined;

/**
 * @member {Date} LicenseConversionTime
 */
LicenseConversionTask.prototype['LicenseConversionTime'] = undefined;

/**
 * @member {Date} EndTime
 */
LicenseConversionTask.prototype['EndTime'] = undefined;






export default LicenseConversionTask;

