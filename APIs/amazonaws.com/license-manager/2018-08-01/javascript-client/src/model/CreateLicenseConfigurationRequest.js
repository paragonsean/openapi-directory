/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LicenseCountingType from './LicenseCountingType';

/**
 * The CreateLicenseConfigurationRequest model module.
 * @module model/CreateLicenseConfigurationRequest
 * @version 2018-08-01
 */
class CreateLicenseConfigurationRequest {
    /**
     * Constructs a new <code>CreateLicenseConfigurationRequest</code>.
     * @alias module:model/CreateLicenseConfigurationRequest
     * @param name {String} 
     * @param licenseCountingType {module:model/LicenseCountingType} 
     */
    constructor(name, licenseCountingType) { 
        
        CreateLicenseConfigurationRequest.initialize(this, name, licenseCountingType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, licenseCountingType) { 
        obj['Name'] = name;
        obj['LicenseCountingType'] = licenseCountingType;
    }

    /**
     * Constructs a <code>CreateLicenseConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLicenseConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/CreateLicenseConfigurationRequest} The populated <code>CreateLicenseConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateLicenseConfigurationRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LicenseCountingType')) {
                obj['LicenseCountingType'] = ApiClient.convertToType(data['LicenseCountingType'], LicenseCountingType);
            }
            if (data.hasOwnProperty('LicenseCount')) {
                obj['LicenseCount'] = ApiClient.convertToType(data['LicenseCount'], 'Number');
            }
            if (data.hasOwnProperty('LicenseCountHardLimit')) {
                obj['LicenseCountHardLimit'] = ApiClient.convertToType(data['LicenseCountHardLimit'], 'Boolean');
            }
            if (data.hasOwnProperty('LicenseRules')) {
                obj['LicenseRules'] = ApiClient.convertToType(data['LicenseRules'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('DisassociateWhenNotFound')) {
                obj['DisassociateWhenNotFound'] = ApiClient.convertToType(data['DisassociateWhenNotFound'], 'Boolean');
            }
            if (data.hasOwnProperty('ProductInformationList')) {
                obj['ProductInformationList'] = ApiClient.convertToType(data['ProductInformationList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLicenseConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLicenseConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateLicenseConfigurationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `LicenseCountingType`
        if (data['LicenseCountingType']) { // data not null
          LicenseCountingType.validateJSON(data['LicenseCountingType']);
        }
        // validate the optional field `LicenseCount`
        if (data['LicenseCount']) { // data not null
          Number.validateJSON(data['LicenseCount']);
        }
        // validate the optional field `LicenseCountHardLimit`
        if (data['LicenseCountHardLimit']) { // data not null
          Boolean.validateJSON(data['LicenseCountHardLimit']);
        }
        // validate the optional field `LicenseRules`
        if (data['LicenseRules']) { // data not null
          Array.validateJSON(data['LicenseRules']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `DisassociateWhenNotFound`
        if (data['DisassociateWhenNotFound']) { // data not null
          Boolean.validateJSON(data['DisassociateWhenNotFound']);
        }
        // validate the optional field `ProductInformationList`
        if (data['ProductInformationList']) { // data not null
          Array.validateJSON(data['ProductInformationList']);
        }

        return true;
    }


}

CreateLicenseConfigurationRequest.RequiredProperties = ["Name", "LicenseCountingType"];

/**
 * @member {String} Name
 */
CreateLicenseConfigurationRequest.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
CreateLicenseConfigurationRequest.prototype['Description'] = undefined;

/**
 * @member {module:model/LicenseCountingType} LicenseCountingType
 */
CreateLicenseConfigurationRequest.prototype['LicenseCountingType'] = undefined;

/**
 * @member {Number} LicenseCount
 */
CreateLicenseConfigurationRequest.prototype['LicenseCount'] = undefined;

/**
 * @member {Boolean} LicenseCountHardLimit
 */
CreateLicenseConfigurationRequest.prototype['LicenseCountHardLimit'] = undefined;

/**
 * @member {Array} LicenseRules
 */
CreateLicenseConfigurationRequest.prototype['LicenseRules'] = undefined;

/**
 * @member {Array} Tags
 */
CreateLicenseConfigurationRequest.prototype['Tags'] = undefined;

/**
 * @member {Boolean} DisassociateWhenNotFound
 */
CreateLicenseConfigurationRequest.prototype['DisassociateWhenNotFound'] = undefined;

/**
 * @member {Array} ProductInformationList
 */
CreateLicenseConfigurationRequest.prototype['ProductInformationList'] = undefined;






export default CreateLicenseConfigurationRequest;

