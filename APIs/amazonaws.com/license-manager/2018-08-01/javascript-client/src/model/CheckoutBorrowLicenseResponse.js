/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckoutBorrowLicenseResponse model module.
 * @module model/CheckoutBorrowLicenseResponse
 * @version 2018-08-01
 */
class CheckoutBorrowLicenseResponse {
    /**
     * Constructs a new <code>CheckoutBorrowLicenseResponse</code>.
     * @alias module:model/CheckoutBorrowLicenseResponse
     */
    constructor() { 
        
        CheckoutBorrowLicenseResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckoutBorrowLicenseResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutBorrowLicenseResponse} obj Optional instance to populate.
     * @return {module:model/CheckoutBorrowLicenseResponse} The populated <code>CheckoutBorrowLicenseResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutBorrowLicenseResponse();

            if (data.hasOwnProperty('LicenseArn')) {
                obj['LicenseArn'] = ApiClient.convertToType(data['LicenseArn'], 'String');
            }
            if (data.hasOwnProperty('LicenseConsumptionToken')) {
                obj['LicenseConsumptionToken'] = ApiClient.convertToType(data['LicenseConsumptionToken'], 'String');
            }
            if (data.hasOwnProperty('EntitlementsAllowed')) {
                obj['EntitlementsAllowed'] = ApiClient.convertToType(data['EntitlementsAllowed'], Array);
            }
            if (data.hasOwnProperty('NodeId')) {
                obj['NodeId'] = ApiClient.convertToType(data['NodeId'], 'String');
            }
            if (data.hasOwnProperty('SignedToken')) {
                obj['SignedToken'] = ApiClient.convertToType(data['SignedToken'], 'String');
            }
            if (data.hasOwnProperty('IssuedAt')) {
                obj['IssuedAt'] = ApiClient.convertToType(data['IssuedAt'], 'String');
            }
            if (data.hasOwnProperty('Expiration')) {
                obj['Expiration'] = ApiClient.convertToType(data['Expiration'], 'String');
            }
            if (data.hasOwnProperty('CheckoutMetadata')) {
                obj['CheckoutMetadata'] = ApiClient.convertToType(data['CheckoutMetadata'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutBorrowLicenseResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutBorrowLicenseResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LicenseArn`
        if (data['LicenseArn']) { // data not null
          String.validateJSON(data['LicenseArn']);
        }
        // validate the optional field `LicenseConsumptionToken`
        if (data['LicenseConsumptionToken']) { // data not null
          String.validateJSON(data['LicenseConsumptionToken']);
        }
        // validate the optional field `EntitlementsAllowed`
        if (data['EntitlementsAllowed']) { // data not null
          Array.validateJSON(data['EntitlementsAllowed']);
        }
        // validate the optional field `NodeId`
        if (data['NodeId']) { // data not null
          String.validateJSON(data['NodeId']);
        }
        // validate the optional field `SignedToken`
        if (data['SignedToken']) { // data not null
          String.validateJSON(data['SignedToken']);
        }
        // validate the optional field `IssuedAt`
        if (data['IssuedAt']) { // data not null
          String.validateJSON(data['IssuedAt']);
        }
        // validate the optional field `Expiration`
        if (data['Expiration']) { // data not null
          String.validateJSON(data['Expiration']);
        }
        // validate the optional field `CheckoutMetadata`
        if (data['CheckoutMetadata']) { // data not null
          Array.validateJSON(data['CheckoutMetadata']);
        }

        return true;
    }


}



/**
 * @member {String} LicenseArn
 */
CheckoutBorrowLicenseResponse.prototype['LicenseArn'] = undefined;

/**
 * @member {String} LicenseConsumptionToken
 */
CheckoutBorrowLicenseResponse.prototype['LicenseConsumptionToken'] = undefined;

/**
 * @member {Array} EntitlementsAllowed
 */
CheckoutBorrowLicenseResponse.prototype['EntitlementsAllowed'] = undefined;

/**
 * @member {String} NodeId
 */
CheckoutBorrowLicenseResponse.prototype['NodeId'] = undefined;

/**
 * @member {String} SignedToken
 */
CheckoutBorrowLicenseResponse.prototype['SignedToken'] = undefined;

/**
 * @member {String} IssuedAt
 */
CheckoutBorrowLicenseResponse.prototype['IssuedAt'] = undefined;

/**
 * @member {String} Expiration
 */
CheckoutBorrowLicenseResponse.prototype['Expiration'] = undefined;

/**
 * @member {Array} CheckoutMetadata
 */
CheckoutBorrowLicenseResponse.prototype['CheckoutMetadata'] = undefined;






export default CheckoutBorrowLicenseResponse;

