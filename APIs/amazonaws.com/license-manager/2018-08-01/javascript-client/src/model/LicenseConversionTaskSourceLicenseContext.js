/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LicenseConversionContext from './LicenseConversionContext';

/**
 * The LicenseConversionTaskSourceLicenseContext model module.
 * @module model/LicenseConversionTaskSourceLicenseContext
 * @version 2018-08-01
 */
class LicenseConversionTaskSourceLicenseContext {
    /**
     * Constructs a new <code>LicenseConversionTaskSourceLicenseContext</code>.
     * @alias module:model/LicenseConversionTaskSourceLicenseContext
     * @implements module:model/LicenseConversionContext
     */
    constructor() { 
        LicenseConversionContext.initialize(this);
        LicenseConversionTaskSourceLicenseContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseConversionTaskSourceLicenseContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseConversionTaskSourceLicenseContext} obj Optional instance to populate.
     * @return {module:model/LicenseConversionTaskSourceLicenseContext} The populated <code>LicenseConversionTaskSourceLicenseContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseConversionTaskSourceLicenseContext();
            LicenseConversionContext.constructFromObject(data, obj);

            if (data.hasOwnProperty('UsageOperation')) {
                obj['UsageOperation'] = ApiClient.convertToType(data['UsageOperation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseConversionTaskSourceLicenseContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseConversionTaskSourceLicenseContext</code>.
     */
    static validateJSON(data) {
        // validate the optional field `UsageOperation`
        if (data['UsageOperation']) { // data not null
          String.validateJSON(data['UsageOperation']);
        }

        return true;
    }


}



/**
 * @member {String} UsageOperation
 */
LicenseConversionTaskSourceLicenseContext.prototype['UsageOperation'] = undefined;


// Implement LicenseConversionContext interface:
/**
 * @member {String} UsageOperation
 */
LicenseConversionContext.prototype['UsageOperation'] = undefined;




export default LicenseConversionTaskSourceLicenseContext;

