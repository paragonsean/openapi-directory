/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateGrantRequest model module.
 * @module model/CreateGrantRequest
 * @version 2018-08-01
 */
class CreateGrantRequest {
    /**
     * Constructs a new <code>CreateGrantRequest</code>.
     * @alias module:model/CreateGrantRequest
     * @param clientToken {String} 
     * @param grantName {String} 
     * @param licenseArn {String} 
     * @param principals {Array} 
     * @param homeRegion {String} 
     * @param allowedOperations {Array} 
     */
    constructor(clientToken, grantName, licenseArn, principals, homeRegion, allowedOperations) { 
        
        CreateGrantRequest.initialize(this, clientToken, grantName, licenseArn, principals, homeRegion, allowedOperations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientToken, grantName, licenseArn, principals, homeRegion, allowedOperations) { 
        obj['ClientToken'] = clientToken;
        obj['GrantName'] = grantName;
        obj['LicenseArn'] = licenseArn;
        obj['Principals'] = principals;
        obj['HomeRegion'] = homeRegion;
        obj['AllowedOperations'] = allowedOperations;
    }

    /**
     * Constructs a <code>CreateGrantRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGrantRequest} obj Optional instance to populate.
     * @return {module:model/CreateGrantRequest} The populated <code>CreateGrantRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGrantRequest();

            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('GrantName')) {
                obj['GrantName'] = ApiClient.convertToType(data['GrantName'], 'String');
            }
            if (data.hasOwnProperty('LicenseArn')) {
                obj['LicenseArn'] = ApiClient.convertToType(data['LicenseArn'], 'String');
            }
            if (data.hasOwnProperty('Principals')) {
                obj['Principals'] = ApiClient.convertToType(data['Principals'], Array);
            }
            if (data.hasOwnProperty('HomeRegion')) {
                obj['HomeRegion'] = ApiClient.convertToType(data['HomeRegion'], 'String');
            }
            if (data.hasOwnProperty('AllowedOperations')) {
                obj['AllowedOperations'] = ApiClient.convertToType(data['AllowedOperations'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateGrantRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateGrantRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateGrantRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ClientToken`
        if (data['ClientToken']) { // data not null
          String.validateJSON(data['ClientToken']);
        }
        // validate the optional field `GrantName`
        if (data['GrantName']) { // data not null
          String.validateJSON(data['GrantName']);
        }
        // validate the optional field `LicenseArn`
        if (data['LicenseArn']) { // data not null
          String.validateJSON(data['LicenseArn']);
        }
        // validate the optional field `Principals`
        if (data['Principals']) { // data not null
          Array.validateJSON(data['Principals']);
        }
        // validate the optional field `HomeRegion`
        if (data['HomeRegion']) { // data not null
          String.validateJSON(data['HomeRegion']);
        }
        // validate the optional field `AllowedOperations`
        if (data['AllowedOperations']) { // data not null
          Array.validateJSON(data['AllowedOperations']);
        }

        return true;
    }


}

CreateGrantRequest.RequiredProperties = ["ClientToken", "GrantName", "LicenseArn", "Principals", "HomeRegion", "AllowedOperations"];

/**
 * @member {String} ClientToken
 */
CreateGrantRequest.prototype['ClientToken'] = undefined;

/**
 * @member {String} GrantName
 */
CreateGrantRequest.prototype['GrantName'] = undefined;

/**
 * @member {String} LicenseArn
 */
CreateGrantRequest.prototype['LicenseArn'] = undefined;

/**
 * @member {Array} Principals
 */
CreateGrantRequest.prototype['Principals'] = undefined;

/**
 * @member {String} HomeRegion
 */
CreateGrantRequest.prototype['HomeRegion'] = undefined;

/**
 * @member {Array} AllowedOperations
 */
CreateGrantRequest.prototype['AllowedOperations'] = undefined;






export default CreateGrantRequest;

