/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceType from './ResourceType';

/**
 * The ResourceInventory model module.
 * @module model/ResourceInventory
 * @version 2018-08-01
 */
class ResourceInventory {
    /**
     * Constructs a new <code>ResourceInventory</code>.
     * Details about a resource.
     * @alias module:model/ResourceInventory
     */
    constructor() { 
        
        ResourceInventory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceInventory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceInventory} obj Optional instance to populate.
     * @return {module:model/ResourceInventory} The populated <code>ResourceInventory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceInventory();

            if (data.hasOwnProperty('ResourceId')) {
                obj['ResourceId'] = ApiClient.convertToType(data['ResourceId'], 'String');
            }
            if (data.hasOwnProperty('ResourceType')) {
                obj['ResourceType'] = ApiClient.convertToType(data['ResourceType'], ResourceType);
            }
            if (data.hasOwnProperty('ResourceArn')) {
                obj['ResourceArn'] = ApiClient.convertToType(data['ResourceArn'], 'String');
            }
            if (data.hasOwnProperty('Platform')) {
                obj['Platform'] = ApiClient.convertToType(data['Platform'], 'String');
            }
            if (data.hasOwnProperty('PlatformVersion')) {
                obj['PlatformVersion'] = ApiClient.convertToType(data['PlatformVersion'], 'String');
            }
            if (data.hasOwnProperty('ResourceOwningAccountId')) {
                obj['ResourceOwningAccountId'] = ApiClient.convertToType(data['ResourceOwningAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceInventory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceInventory</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ResourceId`
        if (data['ResourceId']) { // data not null
          String.validateJSON(data['ResourceId']);
        }
        // validate the optional field `ResourceType`
        if (data['ResourceType']) { // data not null
          ResourceType.validateJSON(data['ResourceType']);
        }
        // validate the optional field `ResourceArn`
        if (data['ResourceArn']) { // data not null
          String.validateJSON(data['ResourceArn']);
        }
        // validate the optional field `Platform`
        if (data['Platform']) { // data not null
          String.validateJSON(data['Platform']);
        }
        // validate the optional field `PlatformVersion`
        if (data['PlatformVersion']) { // data not null
          String.validateJSON(data['PlatformVersion']);
        }
        // validate the optional field `ResourceOwningAccountId`
        if (data['ResourceOwningAccountId']) { // data not null
          String.validateJSON(data['ResourceOwningAccountId']);
        }

        return true;
    }


}



/**
 * @member {String} ResourceId
 */
ResourceInventory.prototype['ResourceId'] = undefined;

/**
 * @member {module:model/ResourceType} ResourceType
 */
ResourceInventory.prototype['ResourceType'] = undefined;

/**
 * @member {String} ResourceArn
 */
ResourceInventory.prototype['ResourceArn'] = undefined;

/**
 * @member {String} Platform
 */
ResourceInventory.prototype['Platform'] = undefined;

/**
 * @member {String} PlatformVersion
 */
ResourceInventory.prototype['PlatformVersion'] = undefined;

/**
 * @member {String} ResourceOwningAccountId
 */
ResourceInventory.prototype['ResourceOwningAccountId'] = undefined;






export default ResourceInventory;

