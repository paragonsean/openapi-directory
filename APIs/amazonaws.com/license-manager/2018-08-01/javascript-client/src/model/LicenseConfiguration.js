/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetLicenseConfigurationResponseAutomatedDiscoveryInformation from './GetLicenseConfigurationResponseAutomatedDiscoveryInformation';
import LicenseCountingType from './LicenseCountingType';

/**
 * The LicenseConfiguration model module.
 * @module model/LicenseConfiguration
 * @version 2018-08-01
 */
class LicenseConfiguration {
    /**
     * Constructs a new <code>LicenseConfiguration</code>.
     * A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.
     * @alias module:model/LicenseConfiguration
     */
    constructor() { 
        
        LicenseConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseConfiguration} obj Optional instance to populate.
     * @return {module:model/LicenseConfiguration} The populated <code>LicenseConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseConfiguration();

            if (data.hasOwnProperty('LicenseConfigurationId')) {
                obj['LicenseConfigurationId'] = ApiClient.convertToType(data['LicenseConfigurationId'], 'String');
            }
            if (data.hasOwnProperty('LicenseConfigurationArn')) {
                obj['LicenseConfigurationArn'] = ApiClient.convertToType(data['LicenseConfigurationArn'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LicenseCountingType')) {
                obj['LicenseCountingType'] = ApiClient.convertToType(data['LicenseCountingType'], LicenseCountingType);
            }
            if (data.hasOwnProperty('LicenseRules')) {
                obj['LicenseRules'] = ApiClient.convertToType(data['LicenseRules'], Array);
            }
            if (data.hasOwnProperty('LicenseCount')) {
                obj['LicenseCount'] = ApiClient.convertToType(data['LicenseCount'], 'Number');
            }
            if (data.hasOwnProperty('LicenseCountHardLimit')) {
                obj['LicenseCountHardLimit'] = ApiClient.convertToType(data['LicenseCountHardLimit'], 'Boolean');
            }
            if (data.hasOwnProperty('DisassociateWhenNotFound')) {
                obj['DisassociateWhenNotFound'] = ApiClient.convertToType(data['DisassociateWhenNotFound'], 'Boolean');
            }
            if (data.hasOwnProperty('ConsumedLicenses')) {
                obj['ConsumedLicenses'] = ApiClient.convertToType(data['ConsumedLicenses'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('OwnerAccountId')) {
                obj['OwnerAccountId'] = ApiClient.convertToType(data['OwnerAccountId'], 'String');
            }
            if (data.hasOwnProperty('ConsumedLicenseSummaryList')) {
                obj['ConsumedLicenseSummaryList'] = ApiClient.convertToType(data['ConsumedLicenseSummaryList'], Array);
            }
            if (data.hasOwnProperty('ManagedResourceSummaryList')) {
                obj['ManagedResourceSummaryList'] = ApiClient.convertToType(data['ManagedResourceSummaryList'], Array);
            }
            if (data.hasOwnProperty('ProductInformationList')) {
                obj['ProductInformationList'] = ApiClient.convertToType(data['ProductInformationList'], Array);
            }
            if (data.hasOwnProperty('AutomatedDiscoveryInformation')) {
                obj['AutomatedDiscoveryInformation'] = GetLicenseConfigurationResponseAutomatedDiscoveryInformation.constructFromObject(data['AutomatedDiscoveryInformation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LicenseConfigurationId`
        if (data['LicenseConfigurationId']) { // data not null
          String.validateJSON(data['LicenseConfigurationId']);
        }
        // validate the optional field `LicenseConfigurationArn`
        if (data['LicenseConfigurationArn']) { // data not null
          String.validateJSON(data['LicenseConfigurationArn']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `LicenseCountingType`
        if (data['LicenseCountingType']) { // data not null
          LicenseCountingType.validateJSON(data['LicenseCountingType']);
        }
        // validate the optional field `LicenseRules`
        if (data['LicenseRules']) { // data not null
          Array.validateJSON(data['LicenseRules']);
        }
        // validate the optional field `LicenseCount`
        if (data['LicenseCount']) { // data not null
          Number.validateJSON(data['LicenseCount']);
        }
        // validate the optional field `LicenseCountHardLimit`
        if (data['LicenseCountHardLimit']) { // data not null
          Boolean.validateJSON(data['LicenseCountHardLimit']);
        }
        // validate the optional field `DisassociateWhenNotFound`
        if (data['DisassociateWhenNotFound']) { // data not null
          Boolean.validateJSON(data['DisassociateWhenNotFound']);
        }
        // validate the optional field `ConsumedLicenses`
        if (data['ConsumedLicenses']) { // data not null
          Number.validateJSON(data['ConsumedLicenses']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `OwnerAccountId`
        if (data['OwnerAccountId']) { // data not null
          String.validateJSON(data['OwnerAccountId']);
        }
        // validate the optional field `ConsumedLicenseSummaryList`
        if (data['ConsumedLicenseSummaryList']) { // data not null
          Array.validateJSON(data['ConsumedLicenseSummaryList']);
        }
        // validate the optional field `ManagedResourceSummaryList`
        if (data['ManagedResourceSummaryList']) { // data not null
          Array.validateJSON(data['ManagedResourceSummaryList']);
        }
        // validate the optional field `ProductInformationList`
        if (data['ProductInformationList']) { // data not null
          Array.validateJSON(data['ProductInformationList']);
        }
        // validate the optional field `AutomatedDiscoveryInformation`
        if (data['AutomatedDiscoveryInformation']) { // data not null
          GetLicenseConfigurationResponseAutomatedDiscoveryInformation.validateJSON(data['AutomatedDiscoveryInformation']);
        }

        return true;
    }


}



/**
 * @member {String} LicenseConfigurationId
 */
LicenseConfiguration.prototype['LicenseConfigurationId'] = undefined;

/**
 * @member {String} LicenseConfigurationArn
 */
LicenseConfiguration.prototype['LicenseConfigurationArn'] = undefined;

/**
 * @member {String} Name
 */
LicenseConfiguration.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
LicenseConfiguration.prototype['Description'] = undefined;

/**
 * @member {module:model/LicenseCountingType} LicenseCountingType
 */
LicenseConfiguration.prototype['LicenseCountingType'] = undefined;

/**
 * @member {Array} LicenseRules
 */
LicenseConfiguration.prototype['LicenseRules'] = undefined;

/**
 * @member {Number} LicenseCount
 */
LicenseConfiguration.prototype['LicenseCount'] = undefined;

/**
 * @member {Boolean} LicenseCountHardLimit
 */
LicenseConfiguration.prototype['LicenseCountHardLimit'] = undefined;

/**
 * @member {Boolean} DisassociateWhenNotFound
 */
LicenseConfiguration.prototype['DisassociateWhenNotFound'] = undefined;

/**
 * @member {Number} ConsumedLicenses
 */
LicenseConfiguration.prototype['ConsumedLicenses'] = undefined;

/**
 * @member {String} Status
 */
LicenseConfiguration.prototype['Status'] = undefined;

/**
 * @member {String} OwnerAccountId
 */
LicenseConfiguration.prototype['OwnerAccountId'] = undefined;

/**
 * @member {Array} ConsumedLicenseSummaryList
 */
LicenseConfiguration.prototype['ConsumedLicenseSummaryList'] = undefined;

/**
 * @member {Array} ManagedResourceSummaryList
 */
LicenseConfiguration.prototype['ManagedResourceSummaryList'] = undefined;

/**
 * @member {Array} ProductInformationList
 */
LicenseConfiguration.prototype['ProductInformationList'] = undefined;

/**
 * @member {module:model/GetLicenseConfigurationResponseAutomatedDiscoveryInformation} AutomatedDiscoveryInformation
 */
LicenseConfiguration.prototype['AutomatedDiscoveryInformation'] = undefined;






export default LicenseConfiguration;

