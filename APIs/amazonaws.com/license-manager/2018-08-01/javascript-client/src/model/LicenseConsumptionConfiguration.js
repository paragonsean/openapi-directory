/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConsumptionConfiguration from './ConsumptionConfiguration';
import ConsumptionConfigurationBorrowConfiguration from './ConsumptionConfigurationBorrowConfiguration';
import ConsumptionConfigurationProvisionalConfiguration from './ConsumptionConfigurationProvisionalConfiguration';
import RenewType from './RenewType';

/**
 * The LicenseConsumptionConfiguration model module.
 * @module model/LicenseConsumptionConfiguration
 * @version 2018-08-01
 */
class LicenseConsumptionConfiguration {
    /**
     * Constructs a new <code>LicenseConsumptionConfiguration</code>.
     * @alias module:model/LicenseConsumptionConfiguration
     * @implements module:model/ConsumptionConfiguration
     */
    constructor() { 
        ConsumptionConfiguration.initialize(this);
        LicenseConsumptionConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseConsumptionConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseConsumptionConfiguration} obj Optional instance to populate.
     * @return {module:model/LicenseConsumptionConfiguration} The populated <code>LicenseConsumptionConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseConsumptionConfiguration();
            ConsumptionConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('RenewType')) {
                obj['RenewType'] = ApiClient.convertToType(data['RenewType'], RenewType);
            }
            if (data.hasOwnProperty('ProvisionalConfiguration')) {
                obj['ProvisionalConfiguration'] = ConsumptionConfigurationProvisionalConfiguration.constructFromObject(data['ProvisionalConfiguration']);
            }
            if (data.hasOwnProperty('BorrowConfiguration')) {
                obj['BorrowConfiguration'] = ConsumptionConfigurationBorrowConfiguration.constructFromObject(data['BorrowConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseConsumptionConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseConsumptionConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `RenewType`
        if (data['RenewType']) { // data not null
          RenewType.validateJSON(data['RenewType']);
        }
        // validate the optional field `ProvisionalConfiguration`
        if (data['ProvisionalConfiguration']) { // data not null
          ConsumptionConfigurationProvisionalConfiguration.validateJSON(data['ProvisionalConfiguration']);
        }
        // validate the optional field `BorrowConfiguration`
        if (data['BorrowConfiguration']) { // data not null
          ConsumptionConfigurationBorrowConfiguration.validateJSON(data['BorrowConfiguration']);
        }

        return true;
    }


}



/**
 * @member {module:model/RenewType} RenewType
 */
LicenseConsumptionConfiguration.prototype['RenewType'] = undefined;

/**
 * @member {module:model/ConsumptionConfigurationProvisionalConfiguration} ProvisionalConfiguration
 */
LicenseConsumptionConfiguration.prototype['ProvisionalConfiguration'] = undefined;

/**
 * @member {module:model/ConsumptionConfigurationBorrowConfiguration} BorrowConfiguration
 */
LicenseConsumptionConfiguration.prototype['BorrowConfiguration'] = undefined;


// Implement ConsumptionConfiguration interface:
/**
 * @member {module:model/RenewType} RenewType
 */
ConsumptionConfiguration.prototype['RenewType'] = undefined;
/**
 * @member {module:model/ConsumptionConfigurationProvisionalConfiguration} ProvisionalConfiguration
 */
ConsumptionConfiguration.prototype['ProvisionalConfiguration'] = undefined;
/**
 * @member {module:model/ConsumptionConfigurationBorrowConfiguration} BorrowConfiguration
 */
ConsumptionConfiguration.prototype['BorrowConfiguration'] = undefined;




export default LicenseConsumptionConfiguration;

