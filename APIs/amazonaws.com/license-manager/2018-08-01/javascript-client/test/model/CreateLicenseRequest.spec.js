/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsLicenseManager);
  }
}(this, function(expect, AwsLicenseManager) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsLicenseManager.CreateLicenseRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateLicenseRequest', function() {
    it('should create an instance of CreateLicenseRequest', function() {
      // uncomment below and update the code to test CreateLicenseRequest
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be.a(AwsLicenseManager.CreateLicenseRequest);
    });

    it('should have the property licenseName (base name: "LicenseName")', function() {
      // uncomment below and update the code to test the property licenseName
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property productName (base name: "ProductName")', function() {
      // uncomment below and update the code to test the property productName
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property productSKU (base name: "ProductSKU")', function() {
      // uncomment below and update the code to test the property productSKU
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "Issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property homeRegion (base name: "HomeRegion")', function() {
      // uncomment below and update the code to test the property homeRegion
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property validity (base name: "Validity")', function() {
      // uncomment below and update the code to test the property validity
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property entitlements (base name: "Entitlements")', function() {
      // uncomment below and update the code to test the property entitlements
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property beneficiary (base name: "Beneficiary")', function() {
      // uncomment below and update the code to test the property beneficiary
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property consumptionConfiguration (base name: "ConsumptionConfiguration")', function() {
      // uncomment below and update the code to test the property consumptionConfiguration
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property licenseMetadata (base name: "LicenseMetadata")', function() {
      // uncomment below and update the code to test the property licenseMetadata
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientToken (base name: "ClientToken")', function() {
      // uncomment below and update the code to test the property clientToken
      //var instance = new AwsLicenseManager.CreateLicenseRequest();
      //expect(instance).to.be();
    });

  });

}));
