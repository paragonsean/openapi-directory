/**
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsLicenseManager);
  }
}(this, function(expect, AwsLicenseManager) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsLicenseManager.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('acceptGrant', function() {
      it('should call acceptGrant successfully', function(done) {
        //uncomment below and update the code to test acceptGrant
        //instance.acceptGrant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkInLicense', function() {
      it('should call checkInLicense successfully', function(done) {
        //uncomment below and update the code to test checkInLicense
        //instance.checkInLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkoutBorrowLicense', function() {
      it('should call checkoutBorrowLicense successfully', function(done) {
        //uncomment below and update the code to test checkoutBorrowLicense
        //instance.checkoutBorrowLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkoutLicense', function() {
      it('should call checkoutLicense successfully', function(done) {
        //uncomment below and update the code to test checkoutLicense
        //instance.checkoutLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGrant', function() {
      it('should call createGrant successfully', function(done) {
        //uncomment below and update the code to test createGrant
        //instance.createGrant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGrantVersion', function() {
      it('should call createGrantVersion successfully', function(done) {
        //uncomment below and update the code to test createGrantVersion
        //instance.createGrantVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLicense', function() {
      it('should call createLicense successfully', function(done) {
        //uncomment below and update the code to test createLicense
        //instance.createLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLicenseConfiguration', function() {
      it('should call createLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test createLicenseConfiguration
        //instance.createLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLicenseConversionTaskForResource', function() {
      it('should call createLicenseConversionTaskForResource successfully', function(done) {
        //uncomment below and update the code to test createLicenseConversionTaskForResource
        //instance.createLicenseConversionTaskForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLicenseManagerReportGenerator', function() {
      it('should call createLicenseManagerReportGenerator successfully', function(done) {
        //uncomment below and update the code to test createLicenseManagerReportGenerator
        //instance.createLicenseManagerReportGenerator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLicenseVersion', function() {
      it('should call createLicenseVersion successfully', function(done) {
        //uncomment below and update the code to test createLicenseVersion
        //instance.createLicenseVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createToken', function() {
      it('should call createToken successfully', function(done) {
        //uncomment below and update the code to test createToken
        //instance.createToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGrant', function() {
      it('should call deleteGrant successfully', function(done) {
        //uncomment below and update the code to test deleteGrant
        //instance.deleteGrant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLicense', function() {
      it('should call deleteLicense successfully', function(done) {
        //uncomment below and update the code to test deleteLicense
        //instance.deleteLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLicenseConfiguration', function() {
      it('should call deleteLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteLicenseConfiguration
        //instance.deleteLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLicenseManagerReportGenerator', function() {
      it('should call deleteLicenseManagerReportGenerator successfully', function(done) {
        //uncomment below and update the code to test deleteLicenseManagerReportGenerator
        //instance.deleteLicenseManagerReportGenerator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteToken', function() {
      it('should call deleteToken successfully', function(done) {
        //uncomment below and update the code to test deleteToken
        //instance.deleteToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('extendLicenseConsumption', function() {
      it('should call extendLicenseConsumption successfully', function(done) {
        //uncomment below and update the code to test extendLicenseConsumption
        //instance.extendLicenseConsumption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessToken', function() {
      it('should call getAccessToken successfully', function(done) {
        //uncomment below and update the code to test getAccessToken
        //instance.getAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGrant', function() {
      it('should call getGrant successfully', function(done) {
        //uncomment below and update the code to test getGrant
        //instance.getGrant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicense', function() {
      it('should call getLicense successfully', function(done) {
        //uncomment below and update the code to test getLicense
        //instance.getLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicenseConfiguration', function() {
      it('should call getLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test getLicenseConfiguration
        //instance.getLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicenseConversionTask', function() {
      it('should call getLicenseConversionTask successfully', function(done) {
        //uncomment below and update the code to test getLicenseConversionTask
        //instance.getLicenseConversionTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicenseManagerReportGenerator', function() {
      it('should call getLicenseManagerReportGenerator successfully', function(done) {
        //uncomment below and update the code to test getLicenseManagerReportGenerator
        //instance.getLicenseManagerReportGenerator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicenseUsage', function() {
      it('should call getLicenseUsage successfully', function(done) {
        //uncomment below and update the code to test getLicenseUsage
        //instance.getLicenseUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceSettings', function() {
      it('should call getServiceSettings successfully', function(done) {
        //uncomment below and update the code to test getServiceSettings
        //instance.getServiceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociationsForLicenseConfiguration', function() {
      it('should call listAssociationsForLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test listAssociationsForLicenseConfiguration
        //instance.listAssociationsForLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributedGrants', function() {
      it('should call listDistributedGrants successfully', function(done) {
        //uncomment below and update the code to test listDistributedGrants
        //instance.listDistributedGrants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFailuresForLicenseConfigurationOperations', function() {
      it('should call listFailuresForLicenseConfigurationOperations successfully', function(done) {
        //uncomment below and update the code to test listFailuresForLicenseConfigurationOperations
        //instance.listFailuresForLicenseConfigurationOperations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenseConfigurations', function() {
      it('should call listLicenseConfigurations successfully', function(done) {
        //uncomment below and update the code to test listLicenseConfigurations
        //instance.listLicenseConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenseConversionTasks', function() {
      it('should call listLicenseConversionTasks successfully', function(done) {
        //uncomment below and update the code to test listLicenseConversionTasks
        //instance.listLicenseConversionTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenseManagerReportGenerators', function() {
      it('should call listLicenseManagerReportGenerators successfully', function(done) {
        //uncomment below and update the code to test listLicenseManagerReportGenerators
        //instance.listLicenseManagerReportGenerators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenseSpecificationsForResource', function() {
      it('should call listLicenseSpecificationsForResource successfully', function(done) {
        //uncomment below and update the code to test listLicenseSpecificationsForResource
        //instance.listLicenseSpecificationsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenseVersions', function() {
      it('should call listLicenseVersions successfully', function(done) {
        //uncomment below and update the code to test listLicenseVersions
        //instance.listLicenseVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicenses', function() {
      it('should call listLicenses successfully', function(done) {
        //uncomment below and update the code to test listLicenses
        //instance.listLicenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReceivedGrants', function() {
      it('should call listReceivedGrants successfully', function(done) {
        //uncomment below and update the code to test listReceivedGrants
        //instance.listReceivedGrants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReceivedGrantsForOrganization', function() {
      it('should call listReceivedGrantsForOrganization successfully', function(done) {
        //uncomment below and update the code to test listReceivedGrantsForOrganization
        //instance.listReceivedGrantsForOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReceivedLicenses', function() {
      it('should call listReceivedLicenses successfully', function(done) {
        //uncomment below and update the code to test listReceivedLicenses
        //instance.listReceivedLicenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReceivedLicensesForOrganization', function() {
      it('should call listReceivedLicensesForOrganization successfully', function(done) {
        //uncomment below and update the code to test listReceivedLicensesForOrganization
        //instance.listReceivedLicensesForOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourceInventory', function() {
      it('should call listResourceInventory successfully', function(done) {
        //uncomment below and update the code to test listResourceInventory
        //instance.listResourceInventory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTokens', function() {
      it('should call listTokens successfully', function(done) {
        //uncomment below and update the code to test listTokens
        //instance.listTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsageForLicenseConfiguration', function() {
      it('should call listUsageForLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test listUsageForLicenseConfiguration
        //instance.listUsageForLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectGrant', function() {
      it('should call rejectGrant successfully', function(done) {
        //uncomment below and update the code to test rejectGrant
        //instance.rejectGrant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLicenseConfiguration', function() {
      it('should call updateLicenseConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateLicenseConfiguration
        //instance.updateLicenseConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLicenseManagerReportGenerator', function() {
      it('should call updateLicenseManagerReportGenerator successfully', function(done) {
        //uncomment below and update the code to test updateLicenseManagerReportGenerator
        //instance.updateLicenseManagerReportGenerator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLicenseSpecificationsForResource', function() {
      it('should call updateLicenseSpecificationsForResource successfully', function(done) {
        //uncomment below and update the code to test updateLicenseSpecificationsForResource
        //instance.updateLicenseSpecificationsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceSettings', function() {
      it('should call updateServiceSettings successfully', function(done) {
        //uncomment below and update the code to test updateServiceSettings
        //instance.updateServiceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
