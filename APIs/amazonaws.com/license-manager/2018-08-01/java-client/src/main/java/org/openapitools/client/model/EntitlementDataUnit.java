/*
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EntitlementDataUnit
 */
@JsonAdapter(EntitlementDataUnit.Adapter.class)
public enum EntitlementDataUnit {
  
  COUNT("Count"),
  
  NONE("None"),
  
  SECONDS("Seconds"),
  
  MICROSECONDS("Microseconds"),
  
  MILLISECONDS("Milliseconds"),
  
  BYTES("Bytes"),
  
  KILOBYTES("Kilobytes"),
  
  MEGABYTES("Megabytes"),
  
  GIGABYTES("Gigabytes"),
  
  TERABYTES("Terabytes"),
  
  BITS("Bits"),
  
  KILOBITS("Kilobits"),
  
  MEGABITS("Megabits"),
  
  GIGABITS("Gigabits"),
  
  TERABITS("Terabits"),
  
  PERCENT("Percent"),
  
  BYTES_SECOND("Bytes/Second"),
  
  KILOBYTES_SECOND("Kilobytes/Second"),
  
  MEGABYTES_SECOND("Megabytes/Second"),
  
  GIGABYTES_SECOND("Gigabytes/Second"),
  
  TERABYTES_SECOND("Terabytes/Second"),
  
  BITS_SECOND("Bits/Second"),
  
  KILOBITS_SECOND("Kilobits/Second"),
  
  MEGABITS_SECOND("Megabits/Second"),
  
  GIGABITS_SECOND("Gigabits/Second"),
  
  TERABITS_SECOND("Terabits/Second"),
  
  COUNT_SECOND("Count/Second");

  private String value;

  EntitlementDataUnit(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EntitlementDataUnit fromValue(String value) {
    for (EntitlementDataUnit b : EntitlementDataUnit.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EntitlementDataUnit> {
    @Override
    public void write(final JsonWriter jsonWriter, final EntitlementDataUnit enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EntitlementDataUnit read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EntitlementDataUnit.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EntitlementDataUnit.fromValue(value);
  }
}

