/*
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ReportGeneratorReportContext;
import org.openapitools.client.model.ReportGeneratorReportFrequency;
import org.openapitools.client.model.ReportGeneratorS3Location;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetLicenseManagerReportGeneratorResponseReportGenerator
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:48.545503-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetLicenseManagerReportGeneratorResponseReportGenerator {
  public static final String SERIALIZED_NAME_REPORT_GENERATOR_NAME = "ReportGeneratorName";
  @SerializedName(SERIALIZED_NAME_REPORT_GENERATOR_NAME)
  private String reportGeneratorName;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "ReportType";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private List reportType;

  public static final String SERIALIZED_NAME_REPORT_CONTEXT = "ReportContext";
  @SerializedName(SERIALIZED_NAME_REPORT_CONTEXT)
  private ReportGeneratorReportContext reportContext;

  public static final String SERIALIZED_NAME_REPORT_FREQUENCY = "ReportFrequency";
  @SerializedName(SERIALIZED_NAME_REPORT_FREQUENCY)
  private ReportGeneratorReportFrequency reportFrequency;

  public static final String SERIALIZED_NAME_LICENSE_MANAGER_REPORT_GENERATOR_ARN = "LicenseManagerReportGeneratorArn";
  @SerializedName(SERIALIZED_NAME_LICENSE_MANAGER_REPORT_GENERATOR_ARN)
  private String licenseManagerReportGeneratorArn;

  public static final String SERIALIZED_NAME_LAST_RUN_STATUS = "LastRunStatus";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_STATUS)
  private String lastRunStatus;

  public static final String SERIALIZED_NAME_LAST_RUN_FAILURE_REASON = "LastRunFailureReason";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_FAILURE_REASON)
  private String lastRunFailureReason;

  public static final String SERIALIZED_NAME_LAST_REPORT_GENERATION_TIME = "LastReportGenerationTime";
  @SerializedName(SERIALIZED_NAME_LAST_REPORT_GENERATION_TIME)
  private String lastReportGenerationTime;

  public static final String SERIALIZED_NAME_REPORT_CREATOR_ACCOUNT = "ReportCreatorAccount";
  @SerializedName(SERIALIZED_NAME_REPORT_CREATOR_ACCOUNT)
  private String reportCreatorAccount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_S3_LOCATION = "S3Location";
  @SerializedName(SERIALIZED_NAME_S3_LOCATION)
  private ReportGeneratorS3Location s3Location;

  public static final String SERIALIZED_NAME_CREATE_TIME = "CreateTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public GetLicenseManagerReportGeneratorResponseReportGenerator() {
  }

  public GetLicenseManagerReportGeneratorResponseReportGenerator reportGeneratorName(String reportGeneratorName) {
    this.reportGeneratorName = reportGeneratorName;
    return this;
  }

  /**
   * Get reportGeneratorName
   * @return reportGeneratorName
   */
  @javax.annotation.Nullable
  public String getReportGeneratorName() {
    return reportGeneratorName;
  }

  public void setReportGeneratorName(String reportGeneratorName) {
    this.reportGeneratorName = reportGeneratorName;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator reportType(List reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public List getReportType() {
    return reportType;
  }

  public void setReportType(List reportType) {
    this.reportType = reportType;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator reportContext(ReportGeneratorReportContext reportContext) {
    this.reportContext = reportContext;
    return this;
  }

  /**
   * Get reportContext
   * @return reportContext
   */
  @javax.annotation.Nullable
  public ReportGeneratorReportContext getReportContext() {
    return reportContext;
  }

  public void setReportContext(ReportGeneratorReportContext reportContext) {
    this.reportContext = reportContext;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator reportFrequency(ReportGeneratorReportFrequency reportFrequency) {
    this.reportFrequency = reportFrequency;
    return this;
  }

  /**
   * Get reportFrequency
   * @return reportFrequency
   */
  @javax.annotation.Nullable
  public ReportGeneratorReportFrequency getReportFrequency() {
    return reportFrequency;
  }

  public void setReportFrequency(ReportGeneratorReportFrequency reportFrequency) {
    this.reportFrequency = reportFrequency;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator licenseManagerReportGeneratorArn(String licenseManagerReportGeneratorArn) {
    this.licenseManagerReportGeneratorArn = licenseManagerReportGeneratorArn;
    return this;
  }

  /**
   * Get licenseManagerReportGeneratorArn
   * @return licenseManagerReportGeneratorArn
   */
  @javax.annotation.Nullable
  public String getLicenseManagerReportGeneratorArn() {
    return licenseManagerReportGeneratorArn;
  }

  public void setLicenseManagerReportGeneratorArn(String licenseManagerReportGeneratorArn) {
    this.licenseManagerReportGeneratorArn = licenseManagerReportGeneratorArn;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator lastRunStatus(String lastRunStatus) {
    this.lastRunStatus = lastRunStatus;
    return this;
  }

  /**
   * Get lastRunStatus
   * @return lastRunStatus
   */
  @javax.annotation.Nullable
  public String getLastRunStatus() {
    return lastRunStatus;
  }

  public void setLastRunStatus(String lastRunStatus) {
    this.lastRunStatus = lastRunStatus;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator lastRunFailureReason(String lastRunFailureReason) {
    this.lastRunFailureReason = lastRunFailureReason;
    return this;
  }

  /**
   * Get lastRunFailureReason
   * @return lastRunFailureReason
   */
  @javax.annotation.Nullable
  public String getLastRunFailureReason() {
    return lastRunFailureReason;
  }

  public void setLastRunFailureReason(String lastRunFailureReason) {
    this.lastRunFailureReason = lastRunFailureReason;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator lastReportGenerationTime(String lastReportGenerationTime) {
    this.lastReportGenerationTime = lastReportGenerationTime;
    return this;
  }

  /**
   * Get lastReportGenerationTime
   * @return lastReportGenerationTime
   */
  @javax.annotation.Nullable
  public String getLastReportGenerationTime() {
    return lastReportGenerationTime;
  }

  public void setLastReportGenerationTime(String lastReportGenerationTime) {
    this.lastReportGenerationTime = lastReportGenerationTime;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator reportCreatorAccount(String reportCreatorAccount) {
    this.reportCreatorAccount = reportCreatorAccount;
    return this;
  }

  /**
   * Get reportCreatorAccount
   * @return reportCreatorAccount
   */
  @javax.annotation.Nullable
  public String getReportCreatorAccount() {
    return reportCreatorAccount;
  }

  public void setReportCreatorAccount(String reportCreatorAccount) {
    this.reportCreatorAccount = reportCreatorAccount;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator s3Location(ReportGeneratorS3Location s3Location) {
    this.s3Location = s3Location;
    return this;
  }

  /**
   * Get s3Location
   * @return s3Location
   */
  @javax.annotation.Nullable
  public ReportGeneratorS3Location getS3Location() {
    return s3Location;
  }

  public void setS3Location(ReportGeneratorS3Location s3Location) {
    this.s3Location = s3Location;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Get createTime
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GetLicenseManagerReportGeneratorResponseReportGenerator tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetLicenseManagerReportGeneratorResponseReportGenerator getLicenseManagerReportGeneratorResponseReportGenerator = (GetLicenseManagerReportGeneratorResponseReportGenerator) o;
    return Objects.equals(this.reportGeneratorName, getLicenseManagerReportGeneratorResponseReportGenerator.reportGeneratorName) &&
        Objects.equals(this.reportType, getLicenseManagerReportGeneratorResponseReportGenerator.reportType) &&
        Objects.equals(this.reportContext, getLicenseManagerReportGeneratorResponseReportGenerator.reportContext) &&
        Objects.equals(this.reportFrequency, getLicenseManagerReportGeneratorResponseReportGenerator.reportFrequency) &&
        Objects.equals(this.licenseManagerReportGeneratorArn, getLicenseManagerReportGeneratorResponseReportGenerator.licenseManagerReportGeneratorArn) &&
        Objects.equals(this.lastRunStatus, getLicenseManagerReportGeneratorResponseReportGenerator.lastRunStatus) &&
        Objects.equals(this.lastRunFailureReason, getLicenseManagerReportGeneratorResponseReportGenerator.lastRunFailureReason) &&
        Objects.equals(this.lastReportGenerationTime, getLicenseManagerReportGeneratorResponseReportGenerator.lastReportGenerationTime) &&
        Objects.equals(this.reportCreatorAccount, getLicenseManagerReportGeneratorResponseReportGenerator.reportCreatorAccount) &&
        Objects.equals(this.description, getLicenseManagerReportGeneratorResponseReportGenerator.description) &&
        Objects.equals(this.s3Location, getLicenseManagerReportGeneratorResponseReportGenerator.s3Location) &&
        Objects.equals(this.createTime, getLicenseManagerReportGeneratorResponseReportGenerator.createTime) &&
        Objects.equals(this.tags, getLicenseManagerReportGeneratorResponseReportGenerator.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportGeneratorName, reportType, reportContext, reportFrequency, licenseManagerReportGeneratorArn, lastRunStatus, lastRunFailureReason, lastReportGenerationTime, reportCreatorAccount, description, s3Location, createTime, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetLicenseManagerReportGeneratorResponseReportGenerator {\n");
    sb.append("    reportGeneratorName: ").append(toIndentedString(reportGeneratorName)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportContext: ").append(toIndentedString(reportContext)).append("\n");
    sb.append("    reportFrequency: ").append(toIndentedString(reportFrequency)).append("\n");
    sb.append("    licenseManagerReportGeneratorArn: ").append(toIndentedString(licenseManagerReportGeneratorArn)).append("\n");
    sb.append("    lastRunStatus: ").append(toIndentedString(lastRunStatus)).append("\n");
    sb.append("    lastRunFailureReason: ").append(toIndentedString(lastRunFailureReason)).append("\n");
    sb.append("    lastReportGenerationTime: ").append(toIndentedString(lastReportGenerationTime)).append("\n");
    sb.append("    reportCreatorAccount: ").append(toIndentedString(reportCreatorAccount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    s3Location: ").append(toIndentedString(s3Location)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReportGeneratorName");
    openapiFields.add("ReportType");
    openapiFields.add("ReportContext");
    openapiFields.add("ReportFrequency");
    openapiFields.add("LicenseManagerReportGeneratorArn");
    openapiFields.add("LastRunStatus");
    openapiFields.add("LastRunFailureReason");
    openapiFields.add("LastReportGenerationTime");
    openapiFields.add("ReportCreatorAccount");
    openapiFields.add("Description");
    openapiFields.add("S3Location");
    openapiFields.add("CreateTime");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetLicenseManagerReportGeneratorResponseReportGenerator
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetLicenseManagerReportGeneratorResponseReportGenerator.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetLicenseManagerReportGeneratorResponseReportGenerator is not found in the empty JSON string", GetLicenseManagerReportGeneratorResponseReportGenerator.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetLicenseManagerReportGeneratorResponseReportGenerator.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetLicenseManagerReportGeneratorResponseReportGenerator` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ReportGeneratorName`
      if (jsonObj.get("ReportGeneratorName") != null && !jsonObj.get("ReportGeneratorName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReportGeneratorName"));
      }
      // validate the optional field `ReportType`
      if (jsonObj.get("ReportType") != null && !jsonObj.get("ReportType").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ReportType"));
      }
      // validate the optional field `ReportContext`
      if (jsonObj.get("ReportContext") != null && !jsonObj.get("ReportContext").isJsonNull()) {
        ReportGeneratorReportContext.validateJsonElement(jsonObj.get("ReportContext"));
      }
      // validate the optional field `ReportFrequency`
      if (jsonObj.get("ReportFrequency") != null && !jsonObj.get("ReportFrequency").isJsonNull()) {
        ReportGeneratorReportFrequency.validateJsonElement(jsonObj.get("ReportFrequency"));
      }
      // validate the optional field `LicenseManagerReportGeneratorArn`
      if (jsonObj.get("LicenseManagerReportGeneratorArn") != null && !jsonObj.get("LicenseManagerReportGeneratorArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LicenseManagerReportGeneratorArn"));
      }
      // validate the optional field `LastRunStatus`
      if (jsonObj.get("LastRunStatus") != null && !jsonObj.get("LastRunStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastRunStatus"));
      }
      // validate the optional field `LastRunFailureReason`
      if (jsonObj.get("LastRunFailureReason") != null && !jsonObj.get("LastRunFailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastRunFailureReason"));
      }
      // validate the optional field `LastReportGenerationTime`
      if (jsonObj.get("LastReportGenerationTime") != null && !jsonObj.get("LastReportGenerationTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastReportGenerationTime"));
      }
      // validate the optional field `ReportCreatorAccount`
      if (jsonObj.get("ReportCreatorAccount") != null && !jsonObj.get("ReportCreatorAccount").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReportCreatorAccount"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `S3Location`
      if (jsonObj.get("S3Location") != null && !jsonObj.get("S3Location").isJsonNull()) {
        ReportGeneratorS3Location.validateJsonElement(jsonObj.get("S3Location"));
      }
      // validate the optional field `CreateTime`
      if (jsonObj.get("CreateTime") != null && !jsonObj.get("CreateTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreateTime"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetLicenseManagerReportGeneratorResponseReportGenerator.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetLicenseManagerReportGeneratorResponseReportGenerator' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetLicenseManagerReportGeneratorResponseReportGenerator> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetLicenseManagerReportGeneratorResponseReportGenerator.class));

       return (TypeAdapter<T>) new TypeAdapter<GetLicenseManagerReportGeneratorResponseReportGenerator>() {
           @Override
           public void write(JsonWriter out, GetLicenseManagerReportGeneratorResponseReportGenerator value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetLicenseManagerReportGeneratorResponseReportGenerator read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetLicenseManagerReportGeneratorResponseReportGenerator given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetLicenseManagerReportGeneratorResponseReportGenerator
   * @throws IOException if the JSON string is invalid with respect to GetLicenseManagerReportGeneratorResponseReportGenerator
   */
  public static GetLicenseManagerReportGeneratorResponseReportGenerator fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetLicenseManagerReportGeneratorResponseReportGenerator.class);
  }

  /**
   * Convert an instance of GetLicenseManagerReportGeneratorResponseReportGenerator to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

