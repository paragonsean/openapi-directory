/*
 * AWS License Manager
 * License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.
 *
 * The version of the OpenAPI document: 2018-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetLicenseConfigurationResponseAutomatedDiscoveryInformation;
import org.openapitools.client.model.LicenseCountingType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetLicenseConfigurationResponse
 */
public class GetLicenseConfigurationResponseTest {
    private final GetLicenseConfigurationResponse model = new GetLicenseConfigurationResponse();

    /**
     * Model tests for GetLicenseConfigurationResponse
     */
    @Test
    public void testGetLicenseConfigurationResponse() {
        // TODO: test GetLicenseConfigurationResponse
    }

    /**
     * Test the property 'licenseConfigurationId'
     */
    @Test
    public void licenseConfigurationIdTest() {
        // TODO: test licenseConfigurationId
    }

    /**
     * Test the property 'licenseConfigurationArn'
     */
    @Test
    public void licenseConfigurationArnTest() {
        // TODO: test licenseConfigurationArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'licenseCountingType'
     */
    @Test
    public void licenseCountingTypeTest() {
        // TODO: test licenseCountingType
    }

    /**
     * Test the property 'licenseRules'
     */
    @Test
    public void licenseRulesTest() {
        // TODO: test licenseRules
    }

    /**
     * Test the property 'licenseCount'
     */
    @Test
    public void licenseCountTest() {
        // TODO: test licenseCount
    }

    /**
     * Test the property 'licenseCountHardLimit'
     */
    @Test
    public void licenseCountHardLimitTest() {
        // TODO: test licenseCountHardLimit
    }

    /**
     * Test the property 'consumedLicenses'
     */
    @Test
    public void consumedLicensesTest() {
        // TODO: test consumedLicenses
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'ownerAccountId'
     */
    @Test
    public void ownerAccountIdTest() {
        // TODO: test ownerAccountId
    }

    /**
     * Test the property 'consumedLicenseSummaryList'
     */
    @Test
    public void consumedLicenseSummaryListTest() {
        // TODO: test consumedLicenseSummaryList
    }

    /**
     * Test the property 'managedResourceSummaryList'
     */
    @Test
    public void managedResourceSummaryListTest() {
        // TODO: test managedResourceSummaryList
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'productInformationList'
     */
    @Test
    public void productInformationListTest() {
        // TODO: test productInformationList
    }

    /**
     * Test the property 'automatedDiscoveryInformation'
     */
    @Test
    public void automatedDiscoveryInformationTest() {
        // TODO: test automatedDiscoveryInformation
    }

    /**
     * Test the property 'disassociateWhenNotFound'
     */
    @Test
    public void disassociateWhenNotFoundTest() {
        // TODO: test disassociateWhenNotFound
    }

}
