# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_participant_role_config_request_channel_configuration import UpdateParticipantRoleConfigRequestChannelConfiguration
from openapi_server import util


class UpdateParticipantRoleConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_configuration: UpdateParticipantRoleConfigRequestChannelConfiguration=None):
        """UpdateParticipantRoleConfigRequest - a model defined in OpenAPI

        :param channel_configuration: The channel_configuration of this UpdateParticipantRoleConfigRequest.
        """
        self.openapi_types = {
            'channel_configuration': UpdateParticipantRoleConfigRequestChannelConfiguration
        }

        self.attribute_map = {
            'channel_configuration': 'ChannelConfiguration'
        }

        self._channel_configuration = channel_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateParticipantRoleConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateParticipantRoleConfig_request of this UpdateParticipantRoleConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_configuration(self):
        """Gets the channel_configuration of this UpdateParticipantRoleConfigRequest.


        :return: The channel_configuration of this UpdateParticipantRoleConfigRequest.
        :rtype: UpdateParticipantRoleConfigRequestChannelConfiguration
        """
        return self._channel_configuration

    @channel_configuration.setter
    def channel_configuration(self, channel_configuration):
        """Sets the channel_configuration of this UpdateParticipantRoleConfigRequest.


        :param channel_configuration: The channel_configuration of this UpdateParticipantRoleConfigRequest.
        :type channel_configuration: UpdateParticipantRoleConfigRequestChannelConfiguration
        """
        if channel_configuration is None:
            raise ValueError("Invalid value for `channel_configuration`, must not be `None`")

        self._channel_configuration = channel_configuration
