# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluationFormSingleSelectQuestionOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ref_id: str=None, text: str=None, score: int=None, automatic_fail: bool=None):
        """EvaluationFormSingleSelectQuestionOption - a model defined in OpenAPI

        :param ref_id: The ref_id of this EvaluationFormSingleSelectQuestionOption.
        :param text: The text of this EvaluationFormSingleSelectQuestionOption.
        :param score: The score of this EvaluationFormSingleSelectQuestionOption.
        :param automatic_fail: The automatic_fail of this EvaluationFormSingleSelectQuestionOption.
        """
        self.openapi_types = {
            'ref_id': str,
            'text': str,
            'score': int,
            'automatic_fail': bool
        }

        self.attribute_map = {
            'ref_id': 'RefId',
            'text': 'Text',
            'score': 'Score',
            'automatic_fail': 'AutomaticFail'
        }

        self._ref_id = ref_id
        self._text = text
        self._score = score
        self._automatic_fail = automatic_fail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluationFormSingleSelectQuestionOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluationFormSingleSelectQuestionOption of this EvaluationFormSingleSelectQuestionOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref_id(self):
        """Gets the ref_id of this EvaluationFormSingleSelectQuestionOption.


        :return: The ref_id of this EvaluationFormSingleSelectQuestionOption.
        :rtype: str
        """
        return self._ref_id

    @ref_id.setter
    def ref_id(self, ref_id):
        """Sets the ref_id of this EvaluationFormSingleSelectQuestionOption.


        :param ref_id: The ref_id of this EvaluationFormSingleSelectQuestionOption.
        :type ref_id: str
        """
        if ref_id is None:
            raise ValueError("Invalid value for `ref_id`, must not be `None`")

        self._ref_id = ref_id

    @property
    def text(self):
        """Gets the text of this EvaluationFormSingleSelectQuestionOption.


        :return: The text of this EvaluationFormSingleSelectQuestionOption.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this EvaluationFormSingleSelectQuestionOption.


        :param text: The text of this EvaluationFormSingleSelectQuestionOption.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def score(self):
        """Gets the score of this EvaluationFormSingleSelectQuestionOption.


        :return: The score of this EvaluationFormSingleSelectQuestionOption.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this EvaluationFormSingleSelectQuestionOption.


        :param score: The score of this EvaluationFormSingleSelectQuestionOption.
        :type score: int
        """

        self._score = score

    @property
    def automatic_fail(self):
        """Gets the automatic_fail of this EvaluationFormSingleSelectQuestionOption.


        :return: The automatic_fail of this EvaluationFormSingleSelectQuestionOption.
        :rtype: bool
        """
        return self._automatic_fail

    @automatic_fail.setter
    def automatic_fail(self, automatic_fail):
        """Sets the automatic_fail of this EvaluationFormSingleSelectQuestionOption.


        :param automatic_fail: The automatic_fail of this EvaluationFormSingleSelectQuestionOption.
        :type automatic_fail: bool
        """

        self._automatic_fail = automatic_fail
