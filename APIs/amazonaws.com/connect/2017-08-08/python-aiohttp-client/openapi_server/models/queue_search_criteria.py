# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_prompts_request_search_criteria_string_condition import SearchPromptsRequestSearchCriteriaStringCondition
from openapi_server.models.searchable_queue_type import SearchableQueueType
from openapi_server import util


class QueueSearchCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, or_conditions: List=None, and_conditions: List=None, string_condition: SearchPromptsRequestSearchCriteriaStringCondition=None, queue_type_condition: SearchableQueueType=None):
        """QueueSearchCriteria - a model defined in OpenAPI

        :param or_conditions: The or_conditions of this QueueSearchCriteria.
        :param and_conditions: The and_conditions of this QueueSearchCriteria.
        :param string_condition: The string_condition of this QueueSearchCriteria.
        :param queue_type_condition: The queue_type_condition of this QueueSearchCriteria.
        """
        self.openapi_types = {
            'or_conditions': List,
            'and_conditions': List,
            'string_condition': SearchPromptsRequestSearchCriteriaStringCondition,
            'queue_type_condition': SearchableQueueType
        }

        self.attribute_map = {
            'or_conditions': 'OrConditions',
            'and_conditions': 'AndConditions',
            'string_condition': 'StringCondition',
            'queue_type_condition': 'QueueTypeCondition'
        }

        self._or_conditions = or_conditions
        self._and_conditions = and_conditions
        self._string_condition = string_condition
        self._queue_type_condition = queue_type_condition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueSearchCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueueSearchCriteria of this QueueSearchCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def or_conditions(self):
        """Gets the or_conditions of this QueueSearchCriteria.


        :return: The or_conditions of this QueueSearchCriteria.
        :rtype: List
        """
        return self._or_conditions

    @or_conditions.setter
    def or_conditions(self, or_conditions):
        """Sets the or_conditions of this QueueSearchCriteria.


        :param or_conditions: The or_conditions of this QueueSearchCriteria.
        :type or_conditions: List
        """

        self._or_conditions = or_conditions

    @property
    def and_conditions(self):
        """Gets the and_conditions of this QueueSearchCriteria.


        :return: The and_conditions of this QueueSearchCriteria.
        :rtype: List
        """
        return self._and_conditions

    @and_conditions.setter
    def and_conditions(self, and_conditions):
        """Sets the and_conditions of this QueueSearchCriteria.


        :param and_conditions: The and_conditions of this QueueSearchCriteria.
        :type and_conditions: List
        """

        self._and_conditions = and_conditions

    @property
    def string_condition(self):
        """Gets the string_condition of this QueueSearchCriteria.


        :return: The string_condition of this QueueSearchCriteria.
        :rtype: SearchPromptsRequestSearchCriteriaStringCondition
        """
        return self._string_condition

    @string_condition.setter
    def string_condition(self, string_condition):
        """Sets the string_condition of this QueueSearchCriteria.


        :param string_condition: The string_condition of this QueueSearchCriteria.
        :type string_condition: SearchPromptsRequestSearchCriteriaStringCondition
        """

        self._string_condition = string_condition

    @property
    def queue_type_condition(self):
        """Gets the queue_type_condition of this QueueSearchCriteria.


        :return: The queue_type_condition of this QueueSearchCriteria.
        :rtype: SearchableQueueType
        """
        return self._queue_type_condition

    @queue_type_condition.setter
    def queue_type_condition(self, queue_type_condition):
        """Sets the queue_type_condition of this QueueSearchCriteria.


        :param queue_type_condition: The queue_type_condition of this QueueSearchCriteria.
        :type queue_type_condition: SearchableQueueType
        """

        self._queue_type_condition = queue_type_condition
