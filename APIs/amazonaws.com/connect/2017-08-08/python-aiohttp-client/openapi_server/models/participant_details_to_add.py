# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.participant_role import ParticipantRole
from openapi_server import util


class ParticipantDetailsToAdd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, participant_role: ParticipantRole=None, display_name: str=None):
        """ParticipantDetailsToAdd - a model defined in OpenAPI

        :param participant_role: The participant_role of this ParticipantDetailsToAdd.
        :param display_name: The display_name of this ParticipantDetailsToAdd.
        """
        self.openapi_types = {
            'participant_role': ParticipantRole,
            'display_name': str
        }

        self.attribute_map = {
            'participant_role': 'ParticipantRole',
            'display_name': 'DisplayName'
        }

        self._participant_role = participant_role
        self._display_name = display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParticipantDetailsToAdd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParticipantDetailsToAdd of this ParticipantDetailsToAdd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def participant_role(self):
        """Gets the participant_role of this ParticipantDetailsToAdd.


        :return: The participant_role of this ParticipantDetailsToAdd.
        :rtype: ParticipantRole
        """
        return self._participant_role

    @participant_role.setter
    def participant_role(self, participant_role):
        """Sets the participant_role of this ParticipantDetailsToAdd.


        :param participant_role: The participant_role of this ParticipantDetailsToAdd.
        :type participant_role: ParticipantRole
        """

        self._participant_role = participant_role

    @property
    def display_name(self):
        """Gets the display_name of this ParticipantDetailsToAdd.


        :return: The display_name of this ParticipantDetailsToAdd.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ParticipantDetailsToAdd.


        :param display_name: The display_name of this ParticipantDetailsToAdd.
        :type display_name: str
        """

        self._display_name = display_name
