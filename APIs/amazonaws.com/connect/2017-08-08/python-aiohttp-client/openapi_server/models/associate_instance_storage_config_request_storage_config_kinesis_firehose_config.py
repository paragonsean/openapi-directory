# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firehose_arn: str=None):
        """AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig - a model defined in OpenAPI

        :param firehose_arn: The firehose_arn of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.
        """
        self.openapi_types = {
            'firehose_arn': str
        }

        self.attribute_map = {
            'firehose_arn': 'FirehoseArn'
        }

        self._firehose_arn = firehose_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firehose_arn(self):
        """Gets the firehose_arn of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.


        :return: The firehose_arn of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.
        :rtype: str
        """
        return self._firehose_arn

    @firehose_arn.setter
    def firehose_arn(self, firehose_arn):
        """Sets the firehose_arn of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.


        :param firehose_arn: The firehose_arn of this AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.
        :type firehose_arn: str
        """
        if firehose_arn is None:
            raise ValueError("Invalid value for `firehose_arn`, must not be `None`")

        self._firehose_arn = firehose_arn
