# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCurrentMetricDataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, metric_results: List=None, data_snapshot_time: datetime=None, approximate_total_count: int=None):
        """GetCurrentMetricDataResponse - a model defined in OpenAPI

        :param next_token: The next_token of this GetCurrentMetricDataResponse.
        :param metric_results: The metric_results of this GetCurrentMetricDataResponse.
        :param data_snapshot_time: The data_snapshot_time of this GetCurrentMetricDataResponse.
        :param approximate_total_count: The approximate_total_count of this GetCurrentMetricDataResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'metric_results': List,
            'data_snapshot_time': datetime,
            'approximate_total_count': int
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'metric_results': 'MetricResults',
            'data_snapshot_time': 'DataSnapshotTime',
            'approximate_total_count': 'ApproximateTotalCount'
        }

        self._next_token = next_token
        self._metric_results = metric_results
        self._data_snapshot_time = data_snapshot_time
        self._approximate_total_count = approximate_total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCurrentMetricDataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCurrentMetricDataResponse of this GetCurrentMetricDataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this GetCurrentMetricDataResponse.


        :return: The next_token of this GetCurrentMetricDataResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetCurrentMetricDataResponse.


        :param next_token: The next_token of this GetCurrentMetricDataResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def metric_results(self):
        """Gets the metric_results of this GetCurrentMetricDataResponse.


        :return: The metric_results of this GetCurrentMetricDataResponse.
        :rtype: List
        """
        return self._metric_results

    @metric_results.setter
    def metric_results(self, metric_results):
        """Sets the metric_results of this GetCurrentMetricDataResponse.


        :param metric_results: The metric_results of this GetCurrentMetricDataResponse.
        :type metric_results: List
        """

        self._metric_results = metric_results

    @property
    def data_snapshot_time(self):
        """Gets the data_snapshot_time of this GetCurrentMetricDataResponse.


        :return: The data_snapshot_time of this GetCurrentMetricDataResponse.
        :rtype: datetime
        """
        return self._data_snapshot_time

    @data_snapshot_time.setter
    def data_snapshot_time(self, data_snapshot_time):
        """Sets the data_snapshot_time of this GetCurrentMetricDataResponse.


        :param data_snapshot_time: The data_snapshot_time of this GetCurrentMetricDataResponse.
        :type data_snapshot_time: datetime
        """

        self._data_snapshot_time = data_snapshot_time

    @property
    def approximate_total_count(self):
        """Gets the approximate_total_count of this GetCurrentMetricDataResponse.


        :return: The approximate_total_count of this GetCurrentMetricDataResponse.
        :rtype: int
        """
        return self._approximate_total_count

    @approximate_total_count.setter
    def approximate_total_count(self, approximate_total_count):
        """Sets the approximate_total_count of this GetCurrentMetricDataResponse.


        :param approximate_total_count: The approximate_total_count of this GetCurrentMetricDataResponse.
        :type approximate_total_count: int
        """

        self._approximate_total_count = approximate_total_count
