# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserIdentityInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, last_name: str=None, email: str=None, secondary_email: str=None, mobile: str=None):
        """UserIdentityInfo - a model defined in OpenAPI

        :param first_name: The first_name of this UserIdentityInfo.
        :param last_name: The last_name of this UserIdentityInfo.
        :param email: The email of this UserIdentityInfo.
        :param secondary_email: The secondary_email of this UserIdentityInfo.
        :param mobile: The mobile of this UserIdentityInfo.
        """
        self.openapi_types = {
            'first_name': str,
            'last_name': str,
            'email': str,
            'secondary_email': str,
            'mobile': str
        }

        self.attribute_map = {
            'first_name': 'FirstName',
            'last_name': 'LastName',
            'email': 'Email',
            'secondary_email': 'SecondaryEmail',
            'mobile': 'Mobile'
        }

        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._secondary_email = secondary_email
        self._mobile = mobile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserIdentityInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User_IdentityInfo of this UserIdentityInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this UserIdentityInfo.


        :return: The first_name of this UserIdentityInfo.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserIdentityInfo.


        :param first_name: The first_name of this UserIdentityInfo.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this UserIdentityInfo.


        :return: The last_name of this UserIdentityInfo.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserIdentityInfo.


        :param last_name: The last_name of this UserIdentityInfo.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self):
        """Gets the email of this UserIdentityInfo.


        :return: The email of this UserIdentityInfo.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserIdentityInfo.


        :param email: The email of this UserIdentityInfo.
        :type email: str
        """

        self._email = email

    @property
    def secondary_email(self):
        """Gets the secondary_email of this UserIdentityInfo.


        :return: The secondary_email of this UserIdentityInfo.
        :rtype: str
        """
        return self._secondary_email

    @secondary_email.setter
    def secondary_email(self, secondary_email):
        """Sets the secondary_email of this UserIdentityInfo.


        :param secondary_email: The secondary_email of this UserIdentityInfo.
        :type secondary_email: str
        """

        self._secondary_email = secondary_email

    @property
    def mobile(self):
        """Gets the mobile of this UserIdentityInfo.


        :return: The mobile of this UserIdentityInfo.
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this UserIdentityInfo.


        :param mobile: The mobile of this UserIdentityInfo.
        :type mobile: str
        """

        self._mobile = mobile
