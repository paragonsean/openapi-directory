# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.control_plane_tag_filter import ControlPlaneTagFilter
from openapi_server import util


class SearchSecurityProfilesRequestSearchFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_filter: ControlPlaneTagFilter=None):
        """SearchSecurityProfilesRequestSearchFilter - a model defined in OpenAPI

        :param tag_filter: The tag_filter of this SearchSecurityProfilesRequestSearchFilter.
        """
        self.openapi_types = {
            'tag_filter': ControlPlaneTagFilter
        }

        self.attribute_map = {
            'tag_filter': 'TagFilter'
        }

        self._tag_filter = tag_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchSecurityProfilesRequestSearchFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchSecurityProfilesRequest_SearchFilter of this SearchSecurityProfilesRequestSearchFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_filter(self):
        """Gets the tag_filter of this SearchSecurityProfilesRequestSearchFilter.


        :return: The tag_filter of this SearchSecurityProfilesRequestSearchFilter.
        :rtype: ControlPlaneTagFilter
        """
        return self._tag_filter

    @tag_filter.setter
    def tag_filter(self, tag_filter):
        """Sets the tag_filter of this SearchSecurityProfilesRequestSearchFilter.


        :param tag_filter: The tag_filter of this SearchSecurityProfilesRequestSearchFilter.
        :type tag_filter: ControlPlaneTagFilter
        """

        self._tag_filter = tag_filter
