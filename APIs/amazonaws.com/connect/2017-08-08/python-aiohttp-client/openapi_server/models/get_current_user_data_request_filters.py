# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_current_user_data_request_filters_contact_filter import GetCurrentUserDataRequestFiltersContactFilter
from openapi_server import util


class GetCurrentUserDataRequestFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queues: List=None, contact_filter: GetCurrentUserDataRequestFiltersContactFilter=None, routing_profiles: List=None, agents: List=None, user_hierarchy_groups: List=None):
        """GetCurrentUserDataRequestFilters - a model defined in OpenAPI

        :param queues: The queues of this GetCurrentUserDataRequestFilters.
        :param contact_filter: The contact_filter of this GetCurrentUserDataRequestFilters.
        :param routing_profiles: The routing_profiles of this GetCurrentUserDataRequestFilters.
        :param agents: The agents of this GetCurrentUserDataRequestFilters.
        :param user_hierarchy_groups: The user_hierarchy_groups of this GetCurrentUserDataRequestFilters.
        """
        self.openapi_types = {
            'queues': List,
            'contact_filter': GetCurrentUserDataRequestFiltersContactFilter,
            'routing_profiles': List,
            'agents': List,
            'user_hierarchy_groups': List
        }

        self.attribute_map = {
            'queues': 'Queues',
            'contact_filter': 'ContactFilter',
            'routing_profiles': 'RoutingProfiles',
            'agents': 'Agents',
            'user_hierarchy_groups': 'UserHierarchyGroups'
        }

        self._queues = queues
        self._contact_filter = contact_filter
        self._routing_profiles = routing_profiles
        self._agents = agents
        self._user_hierarchy_groups = user_hierarchy_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCurrentUserDataRequestFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCurrentUserDataRequest_Filters of this GetCurrentUserDataRequestFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queues(self):
        """Gets the queues of this GetCurrentUserDataRequestFilters.


        :return: The queues of this GetCurrentUserDataRequestFilters.
        :rtype: List
        """
        return self._queues

    @queues.setter
    def queues(self, queues):
        """Sets the queues of this GetCurrentUserDataRequestFilters.


        :param queues: The queues of this GetCurrentUserDataRequestFilters.
        :type queues: List
        """

        self._queues = queues

    @property
    def contact_filter(self):
        """Gets the contact_filter of this GetCurrentUserDataRequestFilters.


        :return: The contact_filter of this GetCurrentUserDataRequestFilters.
        :rtype: GetCurrentUserDataRequestFiltersContactFilter
        """
        return self._contact_filter

    @contact_filter.setter
    def contact_filter(self, contact_filter):
        """Sets the contact_filter of this GetCurrentUserDataRequestFilters.


        :param contact_filter: The contact_filter of this GetCurrentUserDataRequestFilters.
        :type contact_filter: GetCurrentUserDataRequestFiltersContactFilter
        """

        self._contact_filter = contact_filter

    @property
    def routing_profiles(self):
        """Gets the routing_profiles of this GetCurrentUserDataRequestFilters.


        :return: The routing_profiles of this GetCurrentUserDataRequestFilters.
        :rtype: List
        """
        return self._routing_profiles

    @routing_profiles.setter
    def routing_profiles(self, routing_profiles):
        """Sets the routing_profiles of this GetCurrentUserDataRequestFilters.


        :param routing_profiles: The routing_profiles of this GetCurrentUserDataRequestFilters.
        :type routing_profiles: List
        """

        self._routing_profiles = routing_profiles

    @property
    def agents(self):
        """Gets the agents of this GetCurrentUserDataRequestFilters.


        :return: The agents of this GetCurrentUserDataRequestFilters.
        :rtype: List
        """
        return self._agents

    @agents.setter
    def agents(self, agents):
        """Sets the agents of this GetCurrentUserDataRequestFilters.


        :param agents: The agents of this GetCurrentUserDataRequestFilters.
        :type agents: List
        """

        self._agents = agents

    @property
    def user_hierarchy_groups(self):
        """Gets the user_hierarchy_groups of this GetCurrentUserDataRequestFilters.


        :return: The user_hierarchy_groups of this GetCurrentUserDataRequestFilters.
        :rtype: List
        """
        return self._user_hierarchy_groups

    @user_hierarchy_groups.setter
    def user_hierarchy_groups(self, user_hierarchy_groups):
        """Sets the user_hierarchy_groups of this GetCurrentUserDataRequestFilters.


        :param user_hierarchy_groups: The user_hierarchy_groups of this GetCurrentUserDataRequestFilters.
        :type user_hierarchy_groups: List
        """

        self._user_hierarchy_groups = user_hierarchy_groups
