# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_flow_state import ContactFlowState
from openapi_server.models.contact_flow_type import ContactFlowType
from openapi_server import util


class ContactFlowSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, name: str=None, contact_flow_type: ContactFlowType=None, contact_flow_state: ContactFlowState=None):
        """ContactFlowSummary - a model defined in OpenAPI

        :param id: The id of this ContactFlowSummary.
        :param arn: The arn of this ContactFlowSummary.
        :param name: The name of this ContactFlowSummary.
        :param contact_flow_type: The contact_flow_type of this ContactFlowSummary.
        :param contact_flow_state: The contact_flow_state of this ContactFlowSummary.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'name': str,
            'contact_flow_type': ContactFlowType,
            'contact_flow_state': ContactFlowState
        }

        self.attribute_map = {
            'id': 'Id',
            'arn': 'Arn',
            'name': 'Name',
            'contact_flow_type': 'ContactFlowType',
            'contact_flow_state': 'ContactFlowState'
        }

        self._id = id
        self._arn = arn
        self._name = name
        self._contact_flow_type = contact_flow_type
        self._contact_flow_state = contact_flow_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactFlowSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactFlowSummary of this ContactFlowSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ContactFlowSummary.


        :return: The id of this ContactFlowSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactFlowSummary.


        :param id: The id of this ContactFlowSummary.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this ContactFlowSummary.


        :return: The arn of this ContactFlowSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ContactFlowSummary.


        :param arn: The arn of this ContactFlowSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this ContactFlowSummary.


        :return: The name of this ContactFlowSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContactFlowSummary.


        :param name: The name of this ContactFlowSummary.
        :type name: str
        """

        self._name = name

    @property
    def contact_flow_type(self):
        """Gets the contact_flow_type of this ContactFlowSummary.


        :return: The contact_flow_type of this ContactFlowSummary.
        :rtype: ContactFlowType
        """
        return self._contact_flow_type

    @contact_flow_type.setter
    def contact_flow_type(self, contact_flow_type):
        """Sets the contact_flow_type of this ContactFlowSummary.


        :param contact_flow_type: The contact_flow_type of this ContactFlowSummary.
        :type contact_flow_type: ContactFlowType
        """

        self._contact_flow_type = contact_flow_type

    @property
    def contact_flow_state(self):
        """Gets the contact_flow_state of this ContactFlowSummary.


        :return: The contact_flow_state of this ContactFlowSummary.
        :rtype: ContactFlowState
        """
        return self._contact_flow_state

    @contact_flow_state.setter
    def contact_flow_state(self, contact_flow_state):
        """Sets the contact_flow_state of this ContactFlowSummary.


        :param contact_flow_state: The contact_flow_state of this ContactFlowSummary.
        :type contact_flow_state: ContactFlowState
        """

        self._contact_flow_state = contact_flow_state
