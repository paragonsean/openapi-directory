# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SecurityKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_id: str=None, key: str=None, creation_time: datetime=None):
        """SecurityKey - a model defined in OpenAPI

        :param association_id: The association_id of this SecurityKey.
        :param key: The key of this SecurityKey.
        :param creation_time: The creation_time of this SecurityKey.
        """
        self.openapi_types = {
            'association_id': str,
            'key': str,
            'creation_time': datetime
        }

        self.attribute_map = {
            'association_id': 'AssociationId',
            'key': 'Key',
            'creation_time': 'CreationTime'
        }

        self._association_id = association_id
        self._key = key
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecurityKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecurityKey of this SecurityKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_id(self):
        """Gets the association_id of this SecurityKey.


        :return: The association_id of this SecurityKey.
        :rtype: str
        """
        return self._association_id

    @association_id.setter
    def association_id(self, association_id):
        """Sets the association_id of this SecurityKey.


        :param association_id: The association_id of this SecurityKey.
        :type association_id: str
        """

        self._association_id = association_id

    @property
    def key(self):
        """Gets the key of this SecurityKey.


        :return: The key of this SecurityKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SecurityKey.


        :param key: The key of this SecurityKey.
        :type key: str
        """

        self._key = key

    @property
    def creation_time(self):
        """Gets the creation_time of this SecurityKey.


        :return: The creation_time of this SecurityKey.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SecurityKey.


        :param creation_time: The creation_time of this SecurityKey.
        :type creation_time: datetime
        """

        self._creation_time = creation_time
