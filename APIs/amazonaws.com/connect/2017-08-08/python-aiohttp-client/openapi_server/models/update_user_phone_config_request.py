# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_user_request_phone_config import CreateUserRequestPhoneConfig
from openapi_server import util


class UpdateUserPhoneConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phone_config: CreateUserRequestPhoneConfig=None):
        """UpdateUserPhoneConfigRequest - a model defined in OpenAPI

        :param phone_config: The phone_config of this UpdateUserPhoneConfigRequest.
        """
        self.openapi_types = {
            'phone_config': CreateUserRequestPhoneConfig
        }

        self.attribute_map = {
            'phone_config': 'PhoneConfig'
        }

        self._phone_config = phone_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserPhoneConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserPhoneConfig_request of this UpdateUserPhoneConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone_config(self):
        """Gets the phone_config of this UpdateUserPhoneConfigRequest.


        :return: The phone_config of this UpdateUserPhoneConfigRequest.
        :rtype: CreateUserRequestPhoneConfig
        """
        return self._phone_config

    @phone_config.setter
    def phone_config(self, phone_config):
        """Sets the phone_config of this UpdateUserPhoneConfigRequest.


        :param phone_config: The phone_config of this UpdateUserPhoneConfigRequest.
        :type phone_config: CreateUserRequestPhoneConfig
        """
        if phone_config is None:
            raise ValueError("Invalid value for `phone_config`, must not be `None`")

        self._phone_config = phone_config
