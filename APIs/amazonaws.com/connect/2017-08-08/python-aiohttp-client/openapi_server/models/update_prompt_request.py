# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UpdatePromptRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, s3_uri: str=None):
        """UpdatePromptRequest - a model defined in OpenAPI

        :param name: The name of this UpdatePromptRequest.
        :param description: The description of this UpdatePromptRequest.
        :param s3_uri: The s3_uri of this UpdatePromptRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            's3_uri': str
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            's3_uri': 'S3Uri'
        }

        self._name = name
        self._description = description
        self._s3_uri = s3_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePromptRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePrompt_request of this UpdatePromptRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdatePromptRequest.

        The name of the prompt.

        :return: The name of this UpdatePromptRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdatePromptRequest.

        The name of the prompt.

        :param name: The name of this UpdatePromptRequest.
        :type name: str
        """
        if name is not None and len(name) > 127:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `127`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdatePromptRequest.

        A description of the prompt.

        :return: The description of this UpdatePromptRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdatePromptRequest.

        A description of the prompt.

        :param description: The description of this UpdatePromptRequest.
        :type description: str
        """
        if description is not None and len(description) > 250:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `250`")
        if description is not None and len(description) < 1:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `1`")

        self._description = description

    @property
    def s3_uri(self):
        """Gets the s3_uri of this UpdatePromptRequest.

        The URI for the S3 bucket where the prompt is stored.

        :return: The s3_uri of this UpdatePromptRequest.
        :rtype: str
        """
        return self._s3_uri

    @s3_uri.setter
    def s3_uri(self, s3_uri):
        """Sets the s3_uri of this UpdatePromptRequest.

        The URI for the S3 bucket where the prompt is stored.

        :param s3_uri: The s3_uri of this UpdatePromptRequest.
        :type s3_uri: str
        """
        if s3_uri is not None and len(s3_uri) > 512:
            raise ValueError("Invalid value for `s3_uri`, length must be less than or equal to `512`")
        if s3_uri is not None and len(s3_uri) < 1:
            raise ValueError("Invalid value for `s3_uri`, length must be greater than or equal to `1`")
        if s3_uri is not None and not re.search(r's3:\/\/\S+\/.+', s3_uri):
            raise ValueError("Invalid value for `s3_uri`, must be a follow pattern or equal to `/s3:\/\/\S+\/.+/`")

        self._s3_uri = s3_uri
