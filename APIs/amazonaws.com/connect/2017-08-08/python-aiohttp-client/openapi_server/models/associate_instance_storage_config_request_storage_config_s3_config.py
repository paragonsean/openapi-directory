# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_config_encryption_config import S3ConfigEncryptionConfig
from openapi_server import util


class AssociateInstanceStorageConfigRequestStorageConfigS3Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_name: str=None, bucket_prefix: str=None, encryption_config: S3ConfigEncryptionConfig=None):
        """AssociateInstanceStorageConfigRequestStorageConfigS3Config - a model defined in OpenAPI

        :param bucket_name: The bucket_name of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :param bucket_prefix: The bucket_prefix of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :param encryption_config: The encryption_config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        """
        self.openapi_types = {
            'bucket_name': str,
            'bucket_prefix': str,
            'encryption_config': S3ConfigEncryptionConfig
        }

        self.attribute_map = {
            'bucket_name': 'BucketName',
            'bucket_prefix': 'BucketPrefix',
            'encryption_config': 'EncryptionConfig'
        }

        self._bucket_name = bucket_name
        self._bucket_prefix = bucket_prefix
        self._encryption_config = encryption_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateInstanceStorageConfigRequestStorageConfigS3Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateInstanceStorageConfig_request_StorageConfig_S3Config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_name(self):
        """Gets the bucket_name of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :return: The bucket_name of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :param bucket_name: The bucket_name of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :type bucket_name: str
        """
        if bucket_name is None:
            raise ValueError("Invalid value for `bucket_name`, must not be `None`")

        self._bucket_name = bucket_name

    @property
    def bucket_prefix(self):
        """Gets the bucket_prefix of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :return: The bucket_prefix of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :rtype: str
        """
        return self._bucket_prefix

    @bucket_prefix.setter
    def bucket_prefix(self, bucket_prefix):
        """Sets the bucket_prefix of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :param bucket_prefix: The bucket_prefix of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :type bucket_prefix: str
        """
        if bucket_prefix is None:
            raise ValueError("Invalid value for `bucket_prefix`, must not be `None`")

        self._bucket_prefix = bucket_prefix

    @property
    def encryption_config(self):
        """Gets the encryption_config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :return: The encryption_config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :rtype: S3ConfigEncryptionConfig
        """
        return self._encryption_config

    @encryption_config.setter
    def encryption_config(self, encryption_config):
        """Sets the encryption_config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.


        :param encryption_config: The encryption_config of this AssociateInstanceStorageConfigRequestStorageConfigS3Config.
        :type encryption_config: S3ConfigEncryptionConfig
        """

        self._encryption_config = encryption_config
