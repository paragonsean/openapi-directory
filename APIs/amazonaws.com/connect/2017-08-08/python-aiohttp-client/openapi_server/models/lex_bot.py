# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LexBot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, lex_region: str=None):
        """LexBot - a model defined in OpenAPI

        :param name: The name of this LexBot.
        :param lex_region: The lex_region of this LexBot.
        """
        self.openapi_types = {
            'name': str,
            'lex_region': str
        }

        self.attribute_map = {
            'name': 'Name',
            'lex_region': 'LexRegion'
        }

        self._name = name
        self._lex_region = lex_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LexBot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LexBot of this LexBot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this LexBot.


        :return: The name of this LexBot.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LexBot.


        :param name: The name of this LexBot.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def lex_region(self):
        """Gets the lex_region of this LexBot.


        :return: The lex_region of this LexBot.
        :rtype: str
        """
        return self._lex_region

    @lex_region.setter
    def lex_region(self, lex_region):
        """Sets the lex_region of this LexBot.


        :param lex_region: The lex_region of this LexBot.
        :type lex_region: str
        """
        if lex_region is None:
            raise ValueError("Invalid value for `lex_region`, must not be `None`")

        self._lex_region = lex_region
