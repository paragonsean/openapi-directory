# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskTemplateFieldType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NAME = 'NAME'
    DESCRIPTION = 'DESCRIPTION'
    SCHEDULED_TIME = 'SCHEDULED_TIME'
    QUICK_CONNECT = 'QUICK_CONNECT'
    URL = 'URL'
    NUMBER = 'NUMBER'
    TEXT = 'TEXT'
    TEXT_AREA = 'TEXT_AREA'
    DATE_TIME = 'DATE_TIME'
    BOOLEAN = 'BOOLEAN'
    SINGLE_SELECT = 'SINGLE_SELECT'
    EMAIL = 'EMAIL'

    def __init__(self):
        """TaskTemplateFieldType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskTemplateFieldType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskTemplateFieldType of this TaskTemplateFieldType.
        """
        return util.deserialize_model(dikt, cls)
