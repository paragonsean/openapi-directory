# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.routing_profile_queue_config_queue_reference import RoutingProfileQueueConfigQueueReference
from openapi_server import util


class RoutingProfileQueueConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_reference: RoutingProfileQueueConfigQueueReference=None, priority: int=None, delay: int=None):
        """RoutingProfileQueueConfig - a model defined in OpenAPI

        :param queue_reference: The queue_reference of this RoutingProfileQueueConfig.
        :param priority: The priority of this RoutingProfileQueueConfig.
        :param delay: The delay of this RoutingProfileQueueConfig.
        """
        self.openapi_types = {
            'queue_reference': RoutingProfileQueueConfigQueueReference,
            'priority': int,
            'delay': int
        }

        self.attribute_map = {
            'queue_reference': 'QueueReference',
            'priority': 'Priority',
            'delay': 'Delay'
        }

        self._queue_reference = queue_reference
        self._priority = priority
        self._delay = delay

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingProfileQueueConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingProfileQueueConfig of this RoutingProfileQueueConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_reference(self):
        """Gets the queue_reference of this RoutingProfileQueueConfig.


        :return: The queue_reference of this RoutingProfileQueueConfig.
        :rtype: RoutingProfileQueueConfigQueueReference
        """
        return self._queue_reference

    @queue_reference.setter
    def queue_reference(self, queue_reference):
        """Sets the queue_reference of this RoutingProfileQueueConfig.


        :param queue_reference: The queue_reference of this RoutingProfileQueueConfig.
        :type queue_reference: RoutingProfileQueueConfigQueueReference
        """
        if queue_reference is None:
            raise ValueError("Invalid value for `queue_reference`, must not be `None`")

        self._queue_reference = queue_reference

    @property
    def priority(self):
        """Gets the priority of this RoutingProfileQueueConfig.


        :return: The priority of this RoutingProfileQueueConfig.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this RoutingProfileQueueConfig.


        :param priority: The priority of this RoutingProfileQueueConfig.
        :type priority: int
        """
        if priority is None:
            raise ValueError("Invalid value for `priority`, must not be `None`")

        self._priority = priority

    @property
    def delay(self):
        """Gets the delay of this RoutingProfileQueueConfig.


        :return: The delay of this RoutingProfileQueueConfig.
        :rtype: int
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this RoutingProfileQueueConfig.


        :param delay: The delay of this RoutingProfileQueueConfig.
        :type delay: int
        """
        if delay is None:
            raise ValueError("Invalid value for `delay`, must not be `None`")

        self._delay = delay
