# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetTrafficDistributionResponseTelephonyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distributions: List=None):
        """GetTrafficDistributionResponseTelephonyConfig - a model defined in OpenAPI

        :param distributions: The distributions of this GetTrafficDistributionResponseTelephonyConfig.
        """
        self.openapi_types = {
            'distributions': List
        }

        self.attribute_map = {
            'distributions': 'Distributions'
        }

        self._distributions = distributions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTrafficDistributionResponseTelephonyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTrafficDistributionResponse_TelephonyConfig of this GetTrafficDistributionResponseTelephonyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distributions(self):
        """Gets the distributions of this GetTrafficDistributionResponseTelephonyConfig.


        :return: The distributions of this GetTrafficDistributionResponseTelephonyConfig.
        :rtype: List
        """
        return self._distributions

    @distributions.setter
    def distributions(self, distributions):
        """Sets the distributions of this GetTrafficDistributionResponseTelephonyConfig.


        :param distributions: The distributions of this GetTrafficDistributionResponseTelephonyConfig.
        :type distributions: List
        """
        if distributions is None:
            raise ValueError("Invalid value for `distributions`, must not be `None`")

        self._distributions = distributions
