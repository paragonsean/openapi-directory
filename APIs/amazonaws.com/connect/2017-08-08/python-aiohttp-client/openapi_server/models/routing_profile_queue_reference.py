# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel import Channel
from openapi_server import util


class RoutingProfileQueueReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_id: str=None, channel: Channel=None):
        """RoutingProfileQueueReference - a model defined in OpenAPI

        :param queue_id: The queue_id of this RoutingProfileQueueReference.
        :param channel: The channel of this RoutingProfileQueueReference.
        """
        self.openapi_types = {
            'queue_id': str,
            'channel': Channel
        }

        self.attribute_map = {
            'queue_id': 'QueueId',
            'channel': 'Channel'
        }

        self._queue_id = queue_id
        self._channel = channel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingProfileQueueReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingProfileQueueReference of this RoutingProfileQueueReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_id(self):
        """Gets the queue_id of this RoutingProfileQueueReference.


        :return: The queue_id of this RoutingProfileQueueReference.
        :rtype: str
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id):
        """Sets the queue_id of this RoutingProfileQueueReference.


        :param queue_id: The queue_id of this RoutingProfileQueueReference.
        :type queue_id: str
        """
        if queue_id is None:
            raise ValueError("Invalid value for `queue_id`, must not be `None`")

        self._queue_id = queue_id

    @property
    def channel(self):
        """Gets the channel of this RoutingProfileQueueReference.


        :return: The channel of this RoutingProfileQueueReference.
        :rtype: Channel
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this RoutingProfileQueueReference.


        :param channel: The channel of this RoutingProfileQueueReference.
        :type channel: Channel
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")

        self._channel = channel
