# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_user_hierarchy_structure_request_hierarchy_structure import UpdateUserHierarchyStructureRequestHierarchyStructure
from openapi_server import util


class UpdateUserHierarchyStructureRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hierarchy_structure: UpdateUserHierarchyStructureRequestHierarchyStructure=None):
        """UpdateUserHierarchyStructureRequest - a model defined in OpenAPI

        :param hierarchy_structure: The hierarchy_structure of this UpdateUserHierarchyStructureRequest.
        """
        self.openapi_types = {
            'hierarchy_structure': UpdateUserHierarchyStructureRequestHierarchyStructure
        }

        self.attribute_map = {
            'hierarchy_structure': 'HierarchyStructure'
        }

        self._hierarchy_structure = hierarchy_structure

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserHierarchyStructureRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserHierarchyStructure_request of this UpdateUserHierarchyStructureRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hierarchy_structure(self):
        """Gets the hierarchy_structure of this UpdateUserHierarchyStructureRequest.


        :return: The hierarchy_structure of this UpdateUserHierarchyStructureRequest.
        :rtype: UpdateUserHierarchyStructureRequestHierarchyStructure
        """
        return self._hierarchy_structure

    @hierarchy_structure.setter
    def hierarchy_structure(self, hierarchy_structure):
        """Sets the hierarchy_structure of this UpdateUserHierarchyStructureRequest.


        :param hierarchy_structure: The hierarchy_structure of this UpdateUserHierarchyStructureRequest.
        :type hierarchy_structure: UpdateUserHierarchyStructureRequestHierarchyStructure
        """
        if hierarchy_structure is None:
            raise ValueError("Invalid value for `hierarchy_structure`, must not be `None`")

        self._hierarchy_structure = hierarchy_structure
