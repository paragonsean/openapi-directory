# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel import Channel
from openapi_server.models.dimensions_queue import DimensionsQueue
from openapi_server.models.routing_profile_reference import RoutingProfileReference
from openapi_server import util


class Dimensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue: DimensionsQueue=None, channel: Channel=None, routing_profile: RoutingProfileReference=None):
        """Dimensions - a model defined in OpenAPI

        :param queue: The queue of this Dimensions.
        :param channel: The channel of this Dimensions.
        :param routing_profile: The routing_profile of this Dimensions.
        """
        self.openapi_types = {
            'queue': DimensionsQueue,
            'channel': Channel,
            'routing_profile': RoutingProfileReference
        }

        self.attribute_map = {
            'queue': 'Queue',
            'channel': 'Channel',
            'routing_profile': 'RoutingProfile'
        }

        self._queue = queue
        self._channel = channel
        self._routing_profile = routing_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dimensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dimensions of this Dimensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue(self):
        """Gets the queue of this Dimensions.


        :return: The queue of this Dimensions.
        :rtype: DimensionsQueue
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this Dimensions.


        :param queue: The queue of this Dimensions.
        :type queue: DimensionsQueue
        """

        self._queue = queue

    @property
    def channel(self):
        """Gets the channel of this Dimensions.


        :return: The channel of this Dimensions.
        :rtype: Channel
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this Dimensions.


        :param channel: The channel of this Dimensions.
        :type channel: Channel
        """

        self._channel = channel

    @property
    def routing_profile(self):
        """Gets the routing_profile of this Dimensions.


        :return: The routing_profile of this Dimensions.
        :rtype: RoutingProfileReference
        """
        return self._routing_profile

    @routing_profile.setter
    def routing_profile(self, routing_profile):
        """Sets the routing_profile of this Dimensions.


        :param routing_profile: The routing_profile of this Dimensions.
        :type routing_profile: RoutingProfileReference
        """

        self._routing_profile = routing_profile
