# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.integration_type import IntegrationType
from openapi_server.models.source_type import SourceType
from openapi_server import util


class IntegrationAssociationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, integration_association_id: str=None, integration_association_arn: str=None, instance_id: str=None, integration_type: IntegrationType=None, integration_arn: str=None, source_application_url: str=None, source_application_name: str=None, source_type: SourceType=None):
        """IntegrationAssociationSummary - a model defined in OpenAPI

        :param integration_association_id: The integration_association_id of this IntegrationAssociationSummary.
        :param integration_association_arn: The integration_association_arn of this IntegrationAssociationSummary.
        :param instance_id: The instance_id of this IntegrationAssociationSummary.
        :param integration_type: The integration_type of this IntegrationAssociationSummary.
        :param integration_arn: The integration_arn of this IntegrationAssociationSummary.
        :param source_application_url: The source_application_url of this IntegrationAssociationSummary.
        :param source_application_name: The source_application_name of this IntegrationAssociationSummary.
        :param source_type: The source_type of this IntegrationAssociationSummary.
        """
        self.openapi_types = {
            'integration_association_id': str,
            'integration_association_arn': str,
            'instance_id': str,
            'integration_type': IntegrationType,
            'integration_arn': str,
            'source_application_url': str,
            'source_application_name': str,
            'source_type': SourceType
        }

        self.attribute_map = {
            'integration_association_id': 'IntegrationAssociationId',
            'integration_association_arn': 'IntegrationAssociationArn',
            'instance_id': 'InstanceId',
            'integration_type': 'IntegrationType',
            'integration_arn': 'IntegrationArn',
            'source_application_url': 'SourceApplicationUrl',
            'source_application_name': 'SourceApplicationName',
            'source_type': 'SourceType'
        }

        self._integration_association_id = integration_association_id
        self._integration_association_arn = integration_association_arn
        self._instance_id = instance_id
        self._integration_type = integration_type
        self._integration_arn = integration_arn
        self._source_application_url = source_application_url
        self._source_application_name = source_application_name
        self._source_type = source_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAssociationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAssociationSummary of this IntegrationAssociationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def integration_association_id(self):
        """Gets the integration_association_id of this IntegrationAssociationSummary.


        :return: The integration_association_id of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._integration_association_id

    @integration_association_id.setter
    def integration_association_id(self, integration_association_id):
        """Sets the integration_association_id of this IntegrationAssociationSummary.


        :param integration_association_id: The integration_association_id of this IntegrationAssociationSummary.
        :type integration_association_id: str
        """

        self._integration_association_id = integration_association_id

    @property
    def integration_association_arn(self):
        """Gets the integration_association_arn of this IntegrationAssociationSummary.


        :return: The integration_association_arn of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._integration_association_arn

    @integration_association_arn.setter
    def integration_association_arn(self, integration_association_arn):
        """Sets the integration_association_arn of this IntegrationAssociationSummary.


        :param integration_association_arn: The integration_association_arn of this IntegrationAssociationSummary.
        :type integration_association_arn: str
        """

        self._integration_association_arn = integration_association_arn

    @property
    def instance_id(self):
        """Gets the instance_id of this IntegrationAssociationSummary.


        :return: The instance_id of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this IntegrationAssociationSummary.


        :param instance_id: The instance_id of this IntegrationAssociationSummary.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def integration_type(self):
        """Gets the integration_type of this IntegrationAssociationSummary.


        :return: The integration_type of this IntegrationAssociationSummary.
        :rtype: IntegrationType
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this IntegrationAssociationSummary.


        :param integration_type: The integration_type of this IntegrationAssociationSummary.
        :type integration_type: IntegrationType
        """

        self._integration_type = integration_type

    @property
    def integration_arn(self):
        """Gets the integration_arn of this IntegrationAssociationSummary.


        :return: The integration_arn of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._integration_arn

    @integration_arn.setter
    def integration_arn(self, integration_arn):
        """Sets the integration_arn of this IntegrationAssociationSummary.


        :param integration_arn: The integration_arn of this IntegrationAssociationSummary.
        :type integration_arn: str
        """

        self._integration_arn = integration_arn

    @property
    def source_application_url(self):
        """Gets the source_application_url of this IntegrationAssociationSummary.


        :return: The source_application_url of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._source_application_url

    @source_application_url.setter
    def source_application_url(self, source_application_url):
        """Sets the source_application_url of this IntegrationAssociationSummary.


        :param source_application_url: The source_application_url of this IntegrationAssociationSummary.
        :type source_application_url: str
        """

        self._source_application_url = source_application_url

    @property
    def source_application_name(self):
        """Gets the source_application_name of this IntegrationAssociationSummary.


        :return: The source_application_name of this IntegrationAssociationSummary.
        :rtype: str
        """
        return self._source_application_name

    @source_application_name.setter
    def source_application_name(self, source_application_name):
        """Sets the source_application_name of this IntegrationAssociationSummary.


        :param source_application_name: The source_application_name of this IntegrationAssociationSummary.
        :type source_application_name: str
        """

        self._source_application_name = source_application_name

    @property
    def source_type(self):
        """Gets the source_type of this IntegrationAssociationSummary.


        :return: The source_type of this IntegrationAssociationSummary.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this IntegrationAssociationSummary.


        :param source_type: The source_type of this IntegrationAssociationSummary.
        :type source_type: SourceType
        """

        self._source_type = source_type
