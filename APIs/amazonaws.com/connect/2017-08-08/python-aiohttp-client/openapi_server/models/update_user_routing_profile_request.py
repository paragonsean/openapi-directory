# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateUserRoutingProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, routing_profile_id: str=None):
        """UpdateUserRoutingProfileRequest - a model defined in OpenAPI

        :param routing_profile_id: The routing_profile_id of this UpdateUserRoutingProfileRequest.
        """
        self.openapi_types = {
            'routing_profile_id': str
        }

        self.attribute_map = {
            'routing_profile_id': 'RoutingProfileId'
        }

        self._routing_profile_id = routing_profile_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserRoutingProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserRoutingProfile_request of this UpdateUserRoutingProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def routing_profile_id(self):
        """Gets the routing_profile_id of this UpdateUserRoutingProfileRequest.

        The identifier of the routing profile for the user.

        :return: The routing_profile_id of this UpdateUserRoutingProfileRequest.
        :rtype: str
        """
        return self._routing_profile_id

    @routing_profile_id.setter
    def routing_profile_id(self, routing_profile_id):
        """Sets the routing_profile_id of this UpdateUserRoutingProfileRequest.

        The identifier of the routing profile for the user.

        :param routing_profile_id: The routing_profile_id of this UpdateUserRoutingProfileRequest.
        :type routing_profile_id: str
        """
        if routing_profile_id is None:
            raise ValueError("Invalid value for `routing_profile_id`, must not be `None`")

        self._routing_profile_id = routing_profile_id
