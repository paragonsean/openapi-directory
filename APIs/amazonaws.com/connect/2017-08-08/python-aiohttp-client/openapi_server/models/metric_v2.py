# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, threshold: List=None, metric_filters: List=None):
        """MetricV2 - a model defined in OpenAPI

        :param name: The name of this MetricV2.
        :param threshold: The threshold of this MetricV2.
        :param metric_filters: The metric_filters of this MetricV2.
        """
        self.openapi_types = {
            'name': str,
            'threshold': List,
            'metric_filters': List
        }

        self.attribute_map = {
            'name': 'Name',
            'threshold': 'Threshold',
            'metric_filters': 'MetricFilters'
        }

        self._name = name
        self._threshold = threshold
        self._metric_filters = metric_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricV2 of this MetricV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MetricV2.


        :return: The name of this MetricV2.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetricV2.


        :param name: The name of this MetricV2.
        :type name: str
        """

        self._name = name

    @property
    def threshold(self):
        """Gets the threshold of this MetricV2.


        :return: The threshold of this MetricV2.
        :rtype: List
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this MetricV2.


        :param threshold: The threshold of this MetricV2.
        :type threshold: List
        """

        self._threshold = threshold

    @property
    def metric_filters(self):
        """Gets the metric_filters of this MetricV2.


        :return: The metric_filters of this MetricV2.
        :rtype: List
        """
        return self._metric_filters

    @metric_filters.setter
    def metric_filters(self, metric_filters):
        """Sets the metric_filters of this MetricV2.


        :param metric_filters: The metric_filters of this MetricV2.
        :type metric_filters: List
        """

        self._metric_filters = metric_filters
