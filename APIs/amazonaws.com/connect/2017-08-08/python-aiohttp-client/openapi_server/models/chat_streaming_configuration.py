# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChatStreamingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_endpoint_arn: str=None):
        """ChatStreamingConfiguration - a model defined in OpenAPI

        :param streaming_endpoint_arn: The streaming_endpoint_arn of this ChatStreamingConfiguration.
        """
        self.openapi_types = {
            'streaming_endpoint_arn': str
        }

        self.attribute_map = {
            'streaming_endpoint_arn': 'StreamingEndpointArn'
        }

        self._streaming_endpoint_arn = streaming_endpoint_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChatStreamingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChatStreamingConfiguration of this ChatStreamingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_endpoint_arn(self):
        """Gets the streaming_endpoint_arn of this ChatStreamingConfiguration.


        :return: The streaming_endpoint_arn of this ChatStreamingConfiguration.
        :rtype: str
        """
        return self._streaming_endpoint_arn

    @streaming_endpoint_arn.setter
    def streaming_endpoint_arn(self, streaming_endpoint_arn):
        """Sets the streaming_endpoint_arn of this ChatStreamingConfiguration.


        :param streaming_endpoint_arn: The streaming_endpoint_arn of this ChatStreamingConfiguration.
        :type streaming_endpoint_arn: str
        """
        if streaming_endpoint_arn is None:
            raise ValueError("Invalid value for `streaming_endpoint_arn`, must not be `None`")

        self._streaming_endpoint_arn = streaming_endpoint_arn
