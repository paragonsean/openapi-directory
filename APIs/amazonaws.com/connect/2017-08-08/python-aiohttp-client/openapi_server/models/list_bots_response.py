# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListBotsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lex_bots: List=None, next_token: str=None):
        """ListBotsResponse - a model defined in OpenAPI

        :param lex_bots: The lex_bots of this ListBotsResponse.
        :param next_token: The next_token of this ListBotsResponse.
        """
        self.openapi_types = {
            'lex_bots': List,
            'next_token': str
        }

        self.attribute_map = {
            'lex_bots': 'LexBots',
            'next_token': 'NextToken'
        }

        self._lex_bots = lex_bots
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBotsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBotsResponse of this ListBotsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lex_bots(self):
        """Gets the lex_bots of this ListBotsResponse.


        :return: The lex_bots of this ListBotsResponse.
        :rtype: List
        """
        return self._lex_bots

    @lex_bots.setter
    def lex_bots(self, lex_bots):
        """Sets the lex_bots of this ListBotsResponse.


        :param lex_bots: The lex_bots of this ListBotsResponse.
        :type lex_bots: List
        """

        self._lex_bots = lex_bots

    @property
    def next_token(self):
        """Gets the next_token of this ListBotsResponse.


        :return: The next_token of this ListBotsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListBotsResponse.


        :param next_token: The next_token of this ListBotsResponse.
        :type next_token: str
        """

        self._next_token = next_token
