# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_outbound_voice_contact_request_answer_machine_detection_config import StartOutboundVoiceContactRequestAnswerMachineDetectionConfig
import re
from openapi_server import util


class StartOutboundVoiceContactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_phone_number: str=None, contact_flow_id: str=None, instance_id: str=None, client_token: str=None, source_phone_number: str=None, queue_id: str=None, attributes: Dict[str, str]=None, answer_machine_detection_config: StartOutboundVoiceContactRequestAnswerMachineDetectionConfig=None, campaign_id: str=None, traffic_type: str=None):
        """StartOutboundVoiceContactRequest - a model defined in OpenAPI

        :param destination_phone_number: The destination_phone_number of this StartOutboundVoiceContactRequest.
        :param contact_flow_id: The contact_flow_id of this StartOutboundVoiceContactRequest.
        :param instance_id: The instance_id of this StartOutboundVoiceContactRequest.
        :param client_token: The client_token of this StartOutboundVoiceContactRequest.
        :param source_phone_number: The source_phone_number of this StartOutboundVoiceContactRequest.
        :param queue_id: The queue_id of this StartOutboundVoiceContactRequest.
        :param attributes: The attributes of this StartOutboundVoiceContactRequest.
        :param answer_machine_detection_config: The answer_machine_detection_config of this StartOutboundVoiceContactRequest.
        :param campaign_id: The campaign_id of this StartOutboundVoiceContactRequest.
        :param traffic_type: The traffic_type of this StartOutboundVoiceContactRequest.
        """
        self.openapi_types = {
            'destination_phone_number': str,
            'contact_flow_id': str,
            'instance_id': str,
            'client_token': str,
            'source_phone_number': str,
            'queue_id': str,
            'attributes': Dict[str, str],
            'answer_machine_detection_config': StartOutboundVoiceContactRequestAnswerMachineDetectionConfig,
            'campaign_id': str,
            'traffic_type': str
        }

        self.attribute_map = {
            'destination_phone_number': 'DestinationPhoneNumber',
            'contact_flow_id': 'ContactFlowId',
            'instance_id': 'InstanceId',
            'client_token': 'ClientToken',
            'source_phone_number': 'SourcePhoneNumber',
            'queue_id': 'QueueId',
            'attributes': 'Attributes',
            'answer_machine_detection_config': 'AnswerMachineDetectionConfig',
            'campaign_id': 'CampaignId',
            'traffic_type': 'TrafficType'
        }

        self._destination_phone_number = destination_phone_number
        self._contact_flow_id = contact_flow_id
        self._instance_id = instance_id
        self._client_token = client_token
        self._source_phone_number = source_phone_number
        self._queue_id = queue_id
        self._attributes = attributes
        self._answer_machine_detection_config = answer_machine_detection_config
        self._campaign_id = campaign_id
        self._traffic_type = traffic_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartOutboundVoiceContactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartOutboundVoiceContact_request of this StartOutboundVoiceContactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_phone_number(self):
        """Gets the destination_phone_number of this StartOutboundVoiceContactRequest.

        The phone number of the customer, in E.164 format.

        :return: The destination_phone_number of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._destination_phone_number

    @destination_phone_number.setter
    def destination_phone_number(self, destination_phone_number):
        """Sets the destination_phone_number of this StartOutboundVoiceContactRequest.

        The phone number of the customer, in E.164 format.

        :param destination_phone_number: The destination_phone_number of this StartOutboundVoiceContactRequest.
        :type destination_phone_number: str
        """
        if destination_phone_number is None:
            raise ValueError("Invalid value for `destination_phone_number`, must not be `None`")
        if destination_phone_number is not None and not re.search(r'\\+[1-9]\\d{1,14}$', destination_phone_number):
            raise ValueError("Invalid value for `destination_phone_number`, must be a follow pattern or equal to `/\\+[1-9]\\d{1,14}$/`")

        self._destination_phone_number = destination_phone_number

    @property
    def contact_flow_id(self):
        """Gets the contact_flow_id of this StartOutboundVoiceContactRequest.

        <p>The identifier of the flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>

        :return: The contact_flow_id of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._contact_flow_id

    @contact_flow_id.setter
    def contact_flow_id(self, contact_flow_id):
        """Sets the contact_flow_id of this StartOutboundVoiceContactRequest.

        <p>The identifier of the flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>

        :param contact_flow_id: The contact_flow_id of this StartOutboundVoiceContactRequest.
        :type contact_flow_id: str
        """
        if contact_flow_id is None:
            raise ValueError("Invalid value for `contact_flow_id`, must not be `None`")
        if contact_flow_id is not None and len(contact_flow_id) > 500:
            raise ValueError("Invalid value for `contact_flow_id`, length must be less than or equal to `500`")

        self._contact_flow_id = contact_flow_id

    @property
    def instance_id(self):
        """Gets the instance_id of this StartOutboundVoiceContactRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :return: The instance_id of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this StartOutboundVoiceContactRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :param instance_id: The instance_id of this StartOutboundVoiceContactRequest.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")
        if instance_id is not None and len(instance_id) > 100:
            raise ValueError("Invalid value for `instance_id`, length must be less than or equal to `100`")
        if instance_id is not None and len(instance_id) < 1:
            raise ValueError("Invalid value for `instance_id`, length must be greater than or equal to `1`")

        self._instance_id = instance_id

    @property
    def client_token(self):
        """Gets the client_token of this StartOutboundVoiceContactRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. 

        :return: The client_token of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartOutboundVoiceContactRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. 

        :param client_token: The client_token of this StartOutboundVoiceContactRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 500:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `500`")

        self._client_token = client_token

    @property
    def source_phone_number(self):
        """Gets the source_phone_number of this StartOutboundVoiceContactRequest.

        The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.

        :return: The source_phone_number of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._source_phone_number

    @source_phone_number.setter
    def source_phone_number(self, source_phone_number):
        """Sets the source_phone_number of this StartOutboundVoiceContactRequest.

        The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.

        :param source_phone_number: The source_phone_number of this StartOutboundVoiceContactRequest.
        :type source_phone_number: str
        """
        if source_phone_number is not None and not re.search(r'\\+[1-9]\\d{1,14}$', source_phone_number):
            raise ValueError("Invalid value for `source_phone_number`, must be a follow pattern or equal to `/\\+[1-9]\\d{1,14}$/`")

        self._source_phone_number = source_phone_number

    @property
    def queue_id(self):
        """Gets the queue_id of this StartOutboundVoiceContactRequest.

        The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the flow is used. If you do not specify a queue, you must specify a source phone number.

        :return: The queue_id of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id):
        """Sets the queue_id of this StartOutboundVoiceContactRequest.

        The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the flow is used. If you do not specify a queue, you must specify a source phone number.

        :param queue_id: The queue_id of this StartOutboundVoiceContactRequest.
        :type queue_id: str
        """

        self._queue_id = queue_id

    @property
    def attributes(self):
        """Gets the attributes of this StartOutboundVoiceContactRequest.

        <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>

        :return: The attributes of this StartOutboundVoiceContactRequest.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this StartOutboundVoiceContactRequest.

        <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>

        :param attributes: The attributes of this StartOutboundVoiceContactRequest.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def answer_machine_detection_config(self):
        """Gets the answer_machine_detection_config of this StartOutboundVoiceContactRequest.


        :return: The answer_machine_detection_config of this StartOutboundVoiceContactRequest.
        :rtype: StartOutboundVoiceContactRequestAnswerMachineDetectionConfig
        """
        return self._answer_machine_detection_config

    @answer_machine_detection_config.setter
    def answer_machine_detection_config(self, answer_machine_detection_config):
        """Sets the answer_machine_detection_config of this StartOutboundVoiceContactRequest.


        :param answer_machine_detection_config: The answer_machine_detection_config of this StartOutboundVoiceContactRequest.
        :type answer_machine_detection_config: StartOutboundVoiceContactRequestAnswerMachineDetectionConfig
        """

        self._answer_machine_detection_config = answer_machine_detection_config

    @property
    def campaign_id(self):
        """Gets the campaign_id of this StartOutboundVoiceContactRequest.

        The campaign identifier of the outbound communication.

        :return: The campaign_id of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this StartOutboundVoiceContactRequest.

        The campaign identifier of the outbound communication.

        :param campaign_id: The campaign_id of this StartOutboundVoiceContactRequest.
        :type campaign_id: str
        """
        if campaign_id is not None and len(campaign_id) > 100:
            raise ValueError("Invalid value for `campaign_id`, length must be less than or equal to `100`")
        if campaign_id is not None and len(campaign_id) < 1:
            raise ValueError("Invalid value for `campaign_id`, length must be greater than or equal to `1`")

        self._campaign_id = campaign_id

    @property
    def traffic_type(self):
        """Gets the traffic_type of this StartOutboundVoiceContactRequest.

        Denotes the class of traffic. Calls with different traffic types are handled differently by Amazon Connect. The default value is <code>GENERAL</code>. Use <code>CAMPAIGN</code> if <code>EnableAnswerMachineDetection</code> is set to <code>true</code>. For all other cases, use <code>GENERAL</code>. 

        :return: The traffic_type of this StartOutboundVoiceContactRequest.
        :rtype: str
        """
        return self._traffic_type

    @traffic_type.setter
    def traffic_type(self, traffic_type):
        """Sets the traffic_type of this StartOutboundVoiceContactRequest.

        Denotes the class of traffic. Calls with different traffic types are handled differently by Amazon Connect. The default value is <code>GENERAL</code>. Use <code>CAMPAIGN</code> if <code>EnableAnswerMachineDetection</code> is set to <code>true</code>. For all other cases, use <code>GENERAL</code>. 

        :param traffic_type: The traffic_type of this StartOutboundVoiceContactRequest.
        :type traffic_type: str
        """
        allowed_values = ["GENERAL", "CAMPAIGN"]  # noqa: E501
        if traffic_type not in allowed_values:
            raise ValueError(
                "Invalid value for `traffic_type` ({0}), must be one of {1}"
                .format(traffic_type, allowed_values)
            )

        self._traffic_type = traffic_type
