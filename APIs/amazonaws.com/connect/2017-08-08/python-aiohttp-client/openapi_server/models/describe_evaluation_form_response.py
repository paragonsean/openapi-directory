# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_evaluation_form_response_evaluation_form import DescribeEvaluationFormResponseEvaluationForm
from openapi_server import util


class DescribeEvaluationFormResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluation_form: DescribeEvaluationFormResponseEvaluationForm=None):
        """DescribeEvaluationFormResponse - a model defined in OpenAPI

        :param evaluation_form: The evaluation_form of this DescribeEvaluationFormResponse.
        """
        self.openapi_types = {
            'evaluation_form': DescribeEvaluationFormResponseEvaluationForm
        }

        self.attribute_map = {
            'evaluation_form': 'EvaluationForm'
        }

        self._evaluation_form = evaluation_form

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEvaluationFormResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEvaluationFormResponse of this DescribeEvaluationFormResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluation_form(self):
        """Gets the evaluation_form of this DescribeEvaluationFormResponse.


        :return: The evaluation_form of this DescribeEvaluationFormResponse.
        :rtype: DescribeEvaluationFormResponseEvaluationForm
        """
        return self._evaluation_form

    @evaluation_form.setter
    def evaluation_form(self, evaluation_form):
        """Sets the evaluation_form of this DescribeEvaluationFormResponse.


        :param evaluation_form: The evaluation_form of this DescribeEvaluationFormResponse.
        :type evaluation_form: DescribeEvaluationFormResponseEvaluationForm
        """
        if evaluation_form is None:
            raise ValueError("Invalid value for `evaluation_form`, must not be `None`")

        self._evaluation_form = evaluation_form
