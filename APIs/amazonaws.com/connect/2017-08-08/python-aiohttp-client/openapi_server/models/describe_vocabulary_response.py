# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_vocabulary_response_vocabulary import DescribeVocabularyResponseVocabulary
from openapi_server import util


class DescribeVocabularyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vocabulary: DescribeVocabularyResponseVocabulary=None):
        """DescribeVocabularyResponse - a model defined in OpenAPI

        :param vocabulary: The vocabulary of this DescribeVocabularyResponse.
        """
        self.openapi_types = {
            'vocabulary': DescribeVocabularyResponseVocabulary
        }

        self.attribute_map = {
            'vocabulary': 'Vocabulary'
        }

        self._vocabulary = vocabulary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeVocabularyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeVocabularyResponse of this DescribeVocabularyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vocabulary(self):
        """Gets the vocabulary of this DescribeVocabularyResponse.


        :return: The vocabulary of this DescribeVocabularyResponse.
        :rtype: DescribeVocabularyResponseVocabulary
        """
        return self._vocabulary

    @vocabulary.setter
    def vocabulary(self, vocabulary):
        """Sets the vocabulary of this DescribeVocabularyResponse.


        :param vocabulary: The vocabulary of this DescribeVocabularyResponse.
        :type vocabulary: DescribeVocabularyResponseVocabulary
        """
        if vocabulary is None:
            raise ValueError("Invalid value for `vocabulary`, must not be `None`")

        self._vocabulary = vocabulary
