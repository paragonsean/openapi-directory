# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.evaluation_form_question_type_properties_numeric import EvaluationFormQuestionTypePropertiesNumeric
from openapi_server.models.evaluation_form_question_type_properties_single_select import EvaluationFormQuestionTypePropertiesSingleSelect
from openapi_server import util


class EvaluationFormQuestionTypeProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, numeric: EvaluationFormQuestionTypePropertiesNumeric=None, single_select: EvaluationFormQuestionTypePropertiesSingleSelect=None):
        """EvaluationFormQuestionTypeProperties - a model defined in OpenAPI

        :param numeric: The numeric of this EvaluationFormQuestionTypeProperties.
        :param single_select: The single_select of this EvaluationFormQuestionTypeProperties.
        """
        self.openapi_types = {
            'numeric': EvaluationFormQuestionTypePropertiesNumeric,
            'single_select': EvaluationFormQuestionTypePropertiesSingleSelect
        }

        self.attribute_map = {
            'numeric': 'Numeric',
            'single_select': 'SingleSelect'
        }

        self._numeric = numeric
        self._single_select = single_select

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluationFormQuestionTypeProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluationFormQuestionTypeProperties of this EvaluationFormQuestionTypeProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numeric(self):
        """Gets the numeric of this EvaluationFormQuestionTypeProperties.


        :return: The numeric of this EvaluationFormQuestionTypeProperties.
        :rtype: EvaluationFormQuestionTypePropertiesNumeric
        """
        return self._numeric

    @numeric.setter
    def numeric(self, numeric):
        """Sets the numeric of this EvaluationFormQuestionTypeProperties.


        :param numeric: The numeric of this EvaluationFormQuestionTypeProperties.
        :type numeric: EvaluationFormQuestionTypePropertiesNumeric
        """

        self._numeric = numeric

    @property
    def single_select(self):
        """Gets the single_select of this EvaluationFormQuestionTypeProperties.


        :return: The single_select of this EvaluationFormQuestionTypeProperties.
        :rtype: EvaluationFormQuestionTypePropertiesSingleSelect
        """
        return self._single_select

    @single_select.setter
    def single_select(self, single_select):
        """Sets the single_select of this EvaluationFormQuestionTypeProperties.


        :param single_select: The single_select of this EvaluationFormQuestionTypeProperties.
        :type single_select: EvaluationFormQuestionTypePropertiesSingleSelect
        """

        self._single_select = single_select
