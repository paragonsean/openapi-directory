# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatePhoneNumberRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_arn: str=None, client_token: str=None):
        """UpdatePhoneNumberRequest - a model defined in OpenAPI

        :param target_arn: The target_arn of this UpdatePhoneNumberRequest.
        :param client_token: The client_token of this UpdatePhoneNumberRequest.
        """
        self.openapi_types = {
            'target_arn': str,
            'client_token': str
        }

        self.attribute_map = {
            'target_arn': 'TargetArn',
            'client_token': 'ClientToken'
        }

        self._target_arn = target_arn
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePhoneNumberRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePhoneNumber_request of this UpdatePhoneNumberRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_arn(self):
        """Gets the target_arn of this UpdatePhoneNumberRequest.

        The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to.

        :return: The target_arn of this UpdatePhoneNumberRequest.
        :rtype: str
        """
        return self._target_arn

    @target_arn.setter
    def target_arn(self, target_arn):
        """Sets the target_arn of this UpdatePhoneNumberRequest.

        The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to.

        :param target_arn: The target_arn of this UpdatePhoneNumberRequest.
        :type target_arn: str
        """
        if target_arn is None:
            raise ValueError("Invalid value for `target_arn`, must not be `None`")

        self._target_arn = target_arn

    @property
    def client_token(self):
        """Gets the client_token of this UpdatePhoneNumberRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :return: The client_token of this UpdatePhoneNumberRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this UpdatePhoneNumberRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :param client_token: The client_token of this UpdatePhoneNumberRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 500:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `500`")

        self._client_token = client_token
