# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateRoutingProfileAgentAvailabilityTimerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_availability_timer: str=None):
        """UpdateRoutingProfileAgentAvailabilityTimerRequest - a model defined in OpenAPI

        :param agent_availability_timer: The agent_availability_timer of this UpdateRoutingProfileAgentAvailabilityTimerRequest.
        """
        self.openapi_types = {
            'agent_availability_timer': str
        }

        self.attribute_map = {
            'agent_availability_timer': 'AgentAvailabilityTimer'
        }

        self._agent_availability_timer = agent_availability_timer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRoutingProfileAgentAvailabilityTimerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateRoutingProfileAgentAvailabilityTimer_request of this UpdateRoutingProfileAgentAvailabilityTimerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_availability_timer(self):
        """Gets the agent_availability_timer of this UpdateRoutingProfileAgentAvailabilityTimerRequest.

        Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. 

        :return: The agent_availability_timer of this UpdateRoutingProfileAgentAvailabilityTimerRequest.
        :rtype: str
        """
        return self._agent_availability_timer

    @agent_availability_timer.setter
    def agent_availability_timer(self, agent_availability_timer):
        """Sets the agent_availability_timer of this UpdateRoutingProfileAgentAvailabilityTimerRequest.

        Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. 

        :param agent_availability_timer: The agent_availability_timer of this UpdateRoutingProfileAgentAvailabilityTimerRequest.
        :type agent_availability_timer: str
        """
        allowed_values = ["TIME_SINCE_LAST_ACTIVITY", "TIME_SINCE_LAST_INBOUND"]  # noqa: E501
        if agent_availability_timer not in allowed_values:
            raise ValueError(
                "Invalid value for `agent_availability_timer` ({0}), must be one of {1}"
                .format(agent_availability_timer, allowed_values)
            )

        self._agent_availability_timer = agent_availability_timer
