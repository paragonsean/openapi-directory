# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceAttributeType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INBOUND_CALLS = 'INBOUND_CALLS'
    OUTBOUND_CALLS = 'OUTBOUND_CALLS'
    CONTACTFLOW_LOGS = 'CONTACTFLOW_LOGS'
    CONTACT_LENS = 'CONTACT_LENS'
    AUTO_RESOLVE_BEST_VOICES = 'AUTO_RESOLVE_BEST_VOICES'
    USE_CUSTOM_TTS_VOICES = 'USE_CUSTOM_TTS_VOICES'
    EARLY_MEDIA = 'EARLY_MEDIA'
    MULTI_PARTY_CONFERENCE = 'MULTI_PARTY_CONFERENCE'
    HIGH_VOLUME_OUTBOUND = 'HIGH_VOLUME_OUTBOUND'
    ENHANCED_CONTACT_MONITORING = 'ENHANCED_CONTACT_MONITORING'

    def __init__(self):
        """InstanceAttributeType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceAttributeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceAttributeType of this InstanceAttributeType.
        """
        return util.deserialize_model(dikt, cls)
