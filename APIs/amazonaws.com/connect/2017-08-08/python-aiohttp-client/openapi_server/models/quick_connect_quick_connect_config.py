# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_quick_connect_request_quick_connect_config_phone_config import CreateQuickConnectRequestQuickConnectConfigPhoneConfig
from openapi_server.models.create_quick_connect_request_quick_connect_config_queue_config import CreateQuickConnectRequestQuickConnectConfigQueueConfig
from openapi_server.models.create_quick_connect_request_quick_connect_config_user_config import CreateQuickConnectRequestQuickConnectConfigUserConfig
from openapi_server.models.quick_connect_type import QuickConnectType
from openapi_server import util


class QuickConnectQuickConnectConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quick_connect_type: QuickConnectType=None, user_config: CreateQuickConnectRequestQuickConnectConfigUserConfig=None, queue_config: CreateQuickConnectRequestQuickConnectConfigQueueConfig=None, phone_config: CreateQuickConnectRequestQuickConnectConfigPhoneConfig=None):
        """QuickConnectQuickConnectConfig - a model defined in OpenAPI

        :param quick_connect_type: The quick_connect_type of this QuickConnectQuickConnectConfig.
        :param user_config: The user_config of this QuickConnectQuickConnectConfig.
        :param queue_config: The queue_config of this QuickConnectQuickConnectConfig.
        :param phone_config: The phone_config of this QuickConnectQuickConnectConfig.
        """
        self.openapi_types = {
            'quick_connect_type': QuickConnectType,
            'user_config': CreateQuickConnectRequestQuickConnectConfigUserConfig,
            'queue_config': CreateQuickConnectRequestQuickConnectConfigQueueConfig,
            'phone_config': CreateQuickConnectRequestQuickConnectConfigPhoneConfig
        }

        self.attribute_map = {
            'quick_connect_type': 'QuickConnectType',
            'user_config': 'UserConfig',
            'queue_config': 'QueueConfig',
            'phone_config': 'PhoneConfig'
        }

        self._quick_connect_type = quick_connect_type
        self._user_config = user_config
        self._queue_config = queue_config
        self._phone_config = phone_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuickConnectQuickConnectConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuickConnect_QuickConnectConfig of this QuickConnectQuickConnectConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quick_connect_type(self):
        """Gets the quick_connect_type of this QuickConnectQuickConnectConfig.


        :return: The quick_connect_type of this QuickConnectQuickConnectConfig.
        :rtype: QuickConnectType
        """
        return self._quick_connect_type

    @quick_connect_type.setter
    def quick_connect_type(self, quick_connect_type):
        """Sets the quick_connect_type of this QuickConnectQuickConnectConfig.


        :param quick_connect_type: The quick_connect_type of this QuickConnectQuickConnectConfig.
        :type quick_connect_type: QuickConnectType
        """
        if quick_connect_type is None:
            raise ValueError("Invalid value for `quick_connect_type`, must not be `None`")

        self._quick_connect_type = quick_connect_type

    @property
    def user_config(self):
        """Gets the user_config of this QuickConnectQuickConnectConfig.


        :return: The user_config of this QuickConnectQuickConnectConfig.
        :rtype: CreateQuickConnectRequestQuickConnectConfigUserConfig
        """
        return self._user_config

    @user_config.setter
    def user_config(self, user_config):
        """Sets the user_config of this QuickConnectQuickConnectConfig.


        :param user_config: The user_config of this QuickConnectQuickConnectConfig.
        :type user_config: CreateQuickConnectRequestQuickConnectConfigUserConfig
        """

        self._user_config = user_config

    @property
    def queue_config(self):
        """Gets the queue_config of this QuickConnectQuickConnectConfig.


        :return: The queue_config of this QuickConnectQuickConnectConfig.
        :rtype: CreateQuickConnectRequestQuickConnectConfigQueueConfig
        """
        return self._queue_config

    @queue_config.setter
    def queue_config(self, queue_config):
        """Sets the queue_config of this QuickConnectQuickConnectConfig.


        :param queue_config: The queue_config of this QuickConnectQuickConnectConfig.
        :type queue_config: CreateQuickConnectRequestQuickConnectConfigQueueConfig
        """

        self._queue_config = queue_config

    @property
    def phone_config(self):
        """Gets the phone_config of this QuickConnectQuickConnectConfig.


        :return: The phone_config of this QuickConnectQuickConnectConfig.
        :rtype: CreateQuickConnectRequestQuickConnectConfigPhoneConfig
        """
        return self._phone_config

    @phone_config.setter
    def phone_config(self, phone_config):
        """Sets the phone_config of this QuickConnectQuickConnectConfig.


        :param phone_config: The phone_config of this QuickConnectQuickConnectConfig.
        :type phone_config: CreateQuickConnectRequestQuickConnectConfigPhoneConfig
        """

        self._phone_config = phone_config
