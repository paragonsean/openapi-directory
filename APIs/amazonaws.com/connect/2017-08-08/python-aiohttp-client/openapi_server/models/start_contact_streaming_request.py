# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_contact_streaming_request_chat_streaming_configuration import StartContactStreamingRequestChatStreamingConfiguration
from openapi_server import util


class StartContactStreamingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, contact_id: str=None, chat_streaming_configuration: StartContactStreamingRequestChatStreamingConfiguration=None, client_token: str=None):
        """StartContactStreamingRequest - a model defined in OpenAPI

        :param instance_id: The instance_id of this StartContactStreamingRequest.
        :param contact_id: The contact_id of this StartContactStreamingRequest.
        :param chat_streaming_configuration: The chat_streaming_configuration of this StartContactStreamingRequest.
        :param client_token: The client_token of this StartContactStreamingRequest.
        """
        self.openapi_types = {
            'instance_id': str,
            'contact_id': str,
            'chat_streaming_configuration': StartContactStreamingRequestChatStreamingConfiguration,
            'client_token': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'contact_id': 'ContactId',
            'chat_streaming_configuration': 'ChatStreamingConfiguration',
            'client_token': 'ClientToken'
        }

        self._instance_id = instance_id
        self._contact_id = contact_id
        self._chat_streaming_configuration = chat_streaming_configuration
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartContactStreamingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartContactStreaming_request of this StartContactStreamingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this StartContactStreamingRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :return: The instance_id of this StartContactStreamingRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this StartContactStreamingRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :param instance_id: The instance_id of this StartContactStreamingRequest.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")
        if instance_id is not None and len(instance_id) > 100:
            raise ValueError("Invalid value for `instance_id`, length must be less than or equal to `100`")
        if instance_id is not None and len(instance_id) < 1:
            raise ValueError("Invalid value for `instance_id`, length must be greater than or equal to `1`")

        self._instance_id = instance_id

    @property
    def contact_id(self):
        """Gets the contact_id of this StartContactStreamingRequest.

        The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.

        :return: The contact_id of this StartContactStreamingRequest.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this StartContactStreamingRequest.

        The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.

        :param contact_id: The contact_id of this StartContactStreamingRequest.
        :type contact_id: str
        """
        if contact_id is None:
            raise ValueError("Invalid value for `contact_id`, must not be `None`")
        if contact_id is not None and len(contact_id) > 256:
            raise ValueError("Invalid value for `contact_id`, length must be less than or equal to `256`")
        if contact_id is not None and len(contact_id) < 1:
            raise ValueError("Invalid value for `contact_id`, length must be greater than or equal to `1`")

        self._contact_id = contact_id

    @property
    def chat_streaming_configuration(self):
        """Gets the chat_streaming_configuration of this StartContactStreamingRequest.


        :return: The chat_streaming_configuration of this StartContactStreamingRequest.
        :rtype: StartContactStreamingRequestChatStreamingConfiguration
        """
        return self._chat_streaming_configuration

    @chat_streaming_configuration.setter
    def chat_streaming_configuration(self, chat_streaming_configuration):
        """Sets the chat_streaming_configuration of this StartContactStreamingRequest.


        :param chat_streaming_configuration: The chat_streaming_configuration of this StartContactStreamingRequest.
        :type chat_streaming_configuration: StartContactStreamingRequestChatStreamingConfiguration
        """
        if chat_streaming_configuration is None:
            raise ValueError("Invalid value for `chat_streaming_configuration`, must not be `None`")

        self._chat_streaming_configuration = chat_streaming_configuration

    @property
    def client_token(self):
        """Gets the client_token of this StartContactStreamingRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :return: The client_token of this StartContactStreamingRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartContactStreamingRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :param client_token: The client_token of this StartContactStreamingRequest.
        :type client_token: str
        """
        if client_token is None:
            raise ValueError("Invalid value for `client_token`, must not be `None`")
        if client_token is not None and len(client_token) > 500:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `500`")

        self._client_token = client_token
