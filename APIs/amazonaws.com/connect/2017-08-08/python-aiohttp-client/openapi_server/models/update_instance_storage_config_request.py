# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.associate_instance_storage_config_request_storage_config import AssociateInstanceStorageConfigRequestStorageConfig
from openapi_server import util


class UpdateInstanceStorageConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_config: AssociateInstanceStorageConfigRequestStorageConfig=None):
        """UpdateInstanceStorageConfigRequest - a model defined in OpenAPI

        :param storage_config: The storage_config of this UpdateInstanceStorageConfigRequest.
        """
        self.openapi_types = {
            'storage_config': AssociateInstanceStorageConfigRequestStorageConfig
        }

        self.attribute_map = {
            'storage_config': 'StorageConfig'
        }

        self._storage_config = storage_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInstanceStorageConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInstanceStorageConfig_request of this UpdateInstanceStorageConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_config(self):
        """Gets the storage_config of this UpdateInstanceStorageConfigRequest.


        :return: The storage_config of this UpdateInstanceStorageConfigRequest.
        :rtype: AssociateInstanceStorageConfigRequestStorageConfig
        """
        return self._storage_config

    @storage_config.setter
    def storage_config(self, storage_config):
        """Sets the storage_config of this UpdateInstanceStorageConfigRequest.


        :param storage_config: The storage_config of this UpdateInstanceStorageConfigRequest.
        :type storage_config: AssociateInstanceStorageConfigRequestStorageConfig
        """
        if storage_config is None:
            raise ValueError("Invalid value for `storage_config`, must not be `None`")

        self._storage_config = storage_config
