# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DismissUserContactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_id: str=None):
        """DismissUserContactRequest - a model defined in OpenAPI

        :param contact_id: The contact_id of this DismissUserContactRequest.
        """
        self.openapi_types = {
            'contact_id': str
        }

        self.attribute_map = {
            'contact_id': 'ContactId'
        }

        self._contact_id = contact_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DismissUserContactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DismissUserContact_request of this DismissUserContactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_id(self):
        """Gets the contact_id of this DismissUserContactRequest.

        The identifier of the contact.

        :return: The contact_id of this DismissUserContactRequest.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this DismissUserContactRequest.

        The identifier of the contact.

        :param contact_id: The contact_id of this DismissUserContactRequest.
        :type contact_id: str
        """
        if contact_id is None:
            raise ValueError("Invalid value for `contact_id`, must not be `None`")
        if contact_id is not None and len(contact_id) > 256:
            raise ValueError("Invalid value for `contact_id`, length must be less than or equal to `256`")
        if contact_id is not None and len(contact_id) < 1:
            raise ValueError("Invalid value for `contact_id`, length must be greater than or equal to `1`")

        self._contact_id = contact_id
