# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCurrentUserDataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, user_data_list: List=None, approximate_total_count: int=None):
        """GetCurrentUserDataResponse - a model defined in OpenAPI

        :param next_token: The next_token of this GetCurrentUserDataResponse.
        :param user_data_list: The user_data_list of this GetCurrentUserDataResponse.
        :param approximate_total_count: The approximate_total_count of this GetCurrentUserDataResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'user_data_list': List,
            'approximate_total_count': int
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'user_data_list': 'UserDataList',
            'approximate_total_count': 'ApproximateTotalCount'
        }

        self._next_token = next_token
        self._user_data_list = user_data_list
        self._approximate_total_count = approximate_total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCurrentUserDataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCurrentUserDataResponse of this GetCurrentUserDataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this GetCurrentUserDataResponse.


        :return: The next_token of this GetCurrentUserDataResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetCurrentUserDataResponse.


        :param next_token: The next_token of this GetCurrentUserDataResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def user_data_list(self):
        """Gets the user_data_list of this GetCurrentUserDataResponse.


        :return: The user_data_list of this GetCurrentUserDataResponse.
        :rtype: List
        """
        return self._user_data_list

    @user_data_list.setter
    def user_data_list(self, user_data_list):
        """Sets the user_data_list of this GetCurrentUserDataResponse.


        :param user_data_list: The user_data_list of this GetCurrentUserDataResponse.
        :type user_data_list: List
        """

        self._user_data_list = user_data_list

    @property
    def approximate_total_count(self):
        """Gets the approximate_total_count of this GetCurrentUserDataResponse.


        :return: The approximate_total_count of this GetCurrentUserDataResponse.
        :rtype: int
        """
        return self._approximate_total_count

    @approximate_total_count.setter
    def approximate_total_count(self, approximate_total_count):
        """Sets the approximate_total_count of this GetCurrentUserDataResponse.


        :param approximate_total_count: The approximate_total_count of this GetCurrentUserDataResponse.
        :type approximate_total_count: int
        """

        self._approximate_total_count = approximate_total_count
