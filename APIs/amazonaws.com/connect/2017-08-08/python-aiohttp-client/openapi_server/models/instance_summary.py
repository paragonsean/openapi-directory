# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.directory_type import DirectoryType
from openapi_server.models.instance_status import InstanceStatus
from openapi_server import util


class InstanceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, arn: str=None, identity_management_type: DirectoryType=None, instance_alias: str=None, created_time: datetime=None, service_role: str=None, instance_status: InstanceStatus=None, inbound_calls_enabled: bool=None, outbound_calls_enabled: bool=None, instance_access_url: str=None):
        """InstanceSummary - a model defined in OpenAPI

        :param id: The id of this InstanceSummary.
        :param arn: The arn of this InstanceSummary.
        :param identity_management_type: The identity_management_type of this InstanceSummary.
        :param instance_alias: The instance_alias of this InstanceSummary.
        :param created_time: The created_time of this InstanceSummary.
        :param service_role: The service_role of this InstanceSummary.
        :param instance_status: The instance_status of this InstanceSummary.
        :param inbound_calls_enabled: The inbound_calls_enabled of this InstanceSummary.
        :param outbound_calls_enabled: The outbound_calls_enabled of this InstanceSummary.
        :param instance_access_url: The instance_access_url of this InstanceSummary.
        """
        self.openapi_types = {
            'id': str,
            'arn': str,
            'identity_management_type': DirectoryType,
            'instance_alias': str,
            'created_time': datetime,
            'service_role': str,
            'instance_status': InstanceStatus,
            'inbound_calls_enabled': bool,
            'outbound_calls_enabled': bool,
            'instance_access_url': str
        }

        self.attribute_map = {
            'id': 'Id',
            'arn': 'Arn',
            'identity_management_type': 'IdentityManagementType',
            'instance_alias': 'InstanceAlias',
            'created_time': 'CreatedTime',
            'service_role': 'ServiceRole',
            'instance_status': 'InstanceStatus',
            'inbound_calls_enabled': 'InboundCallsEnabled',
            'outbound_calls_enabled': 'OutboundCallsEnabled',
            'instance_access_url': 'InstanceAccessUrl'
        }

        self._id = id
        self._arn = arn
        self._identity_management_type = identity_management_type
        self._instance_alias = instance_alias
        self._created_time = created_time
        self._service_role = service_role
        self._instance_status = instance_status
        self._inbound_calls_enabled = inbound_calls_enabled
        self._outbound_calls_enabled = outbound_calls_enabled
        self._instance_access_url = instance_access_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceSummary of this InstanceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this InstanceSummary.


        :return: The id of this InstanceSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InstanceSummary.


        :param id: The id of this InstanceSummary.
        :type id: str
        """

        self._id = id

    @property
    def arn(self):
        """Gets the arn of this InstanceSummary.


        :return: The arn of this InstanceSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this InstanceSummary.


        :param arn: The arn of this InstanceSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def identity_management_type(self):
        """Gets the identity_management_type of this InstanceSummary.


        :return: The identity_management_type of this InstanceSummary.
        :rtype: DirectoryType
        """
        return self._identity_management_type

    @identity_management_type.setter
    def identity_management_type(self, identity_management_type):
        """Sets the identity_management_type of this InstanceSummary.


        :param identity_management_type: The identity_management_type of this InstanceSummary.
        :type identity_management_type: DirectoryType
        """

        self._identity_management_type = identity_management_type

    @property
    def instance_alias(self):
        """Gets the instance_alias of this InstanceSummary.


        :return: The instance_alias of this InstanceSummary.
        :rtype: str
        """
        return self._instance_alias

    @instance_alias.setter
    def instance_alias(self, instance_alias):
        """Sets the instance_alias of this InstanceSummary.


        :param instance_alias: The instance_alias of this InstanceSummary.
        :type instance_alias: str
        """

        self._instance_alias = instance_alias

    @property
    def created_time(self):
        """Gets the created_time of this InstanceSummary.


        :return: The created_time of this InstanceSummary.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this InstanceSummary.


        :param created_time: The created_time of this InstanceSummary.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def service_role(self):
        """Gets the service_role of this InstanceSummary.


        :return: The service_role of this InstanceSummary.
        :rtype: str
        """
        return self._service_role

    @service_role.setter
    def service_role(self, service_role):
        """Sets the service_role of this InstanceSummary.


        :param service_role: The service_role of this InstanceSummary.
        :type service_role: str
        """

        self._service_role = service_role

    @property
    def instance_status(self):
        """Gets the instance_status of this InstanceSummary.


        :return: The instance_status of this InstanceSummary.
        :rtype: InstanceStatus
        """
        return self._instance_status

    @instance_status.setter
    def instance_status(self, instance_status):
        """Sets the instance_status of this InstanceSummary.


        :param instance_status: The instance_status of this InstanceSummary.
        :type instance_status: InstanceStatus
        """

        self._instance_status = instance_status

    @property
    def inbound_calls_enabled(self):
        """Gets the inbound_calls_enabled of this InstanceSummary.


        :return: The inbound_calls_enabled of this InstanceSummary.
        :rtype: bool
        """
        return self._inbound_calls_enabled

    @inbound_calls_enabled.setter
    def inbound_calls_enabled(self, inbound_calls_enabled):
        """Sets the inbound_calls_enabled of this InstanceSummary.


        :param inbound_calls_enabled: The inbound_calls_enabled of this InstanceSummary.
        :type inbound_calls_enabled: bool
        """

        self._inbound_calls_enabled = inbound_calls_enabled

    @property
    def outbound_calls_enabled(self):
        """Gets the outbound_calls_enabled of this InstanceSummary.


        :return: The outbound_calls_enabled of this InstanceSummary.
        :rtype: bool
        """
        return self._outbound_calls_enabled

    @outbound_calls_enabled.setter
    def outbound_calls_enabled(self, outbound_calls_enabled):
        """Sets the outbound_calls_enabled of this InstanceSummary.


        :param outbound_calls_enabled: The outbound_calls_enabled of this InstanceSummary.
        :type outbound_calls_enabled: bool
        """

        self._outbound_calls_enabled = outbound_calls_enabled

    @property
    def instance_access_url(self):
        """Gets the instance_access_url of this InstanceSummary.


        :return: The instance_access_url of this InstanceSummary.
        :rtype: str
        """
        return self._instance_access_url

    @instance_access_url.setter
    def instance_access_url(self, instance_access_url):
        """Sets the instance_access_url of this InstanceSummary.


        :param instance_access_url: The instance_access_url of this InstanceSummary.
        :type instance_access_url: str
        """

        self._instance_access_url = instance_access_url
