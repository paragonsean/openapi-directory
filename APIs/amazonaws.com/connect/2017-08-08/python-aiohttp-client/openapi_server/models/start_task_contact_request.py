# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference import Reference
from openapi_server import util


class StartTaskContactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, previous_contact_id: str=None, contact_flow_id: str=None, attributes: Dict[str, str]=None, name: str=None, references: Dict[str, Reference]=None, description: str=None, client_token: str=None, scheduled_time: datetime=None, task_template_id: str=None, quick_connect_id: str=None, related_contact_id: str=None):
        """StartTaskContactRequest - a model defined in OpenAPI

        :param instance_id: The instance_id of this StartTaskContactRequest.
        :param previous_contact_id: The previous_contact_id of this StartTaskContactRequest.
        :param contact_flow_id: The contact_flow_id of this StartTaskContactRequest.
        :param attributes: The attributes of this StartTaskContactRequest.
        :param name: The name of this StartTaskContactRequest.
        :param references: The references of this StartTaskContactRequest.
        :param description: The description of this StartTaskContactRequest.
        :param client_token: The client_token of this StartTaskContactRequest.
        :param scheduled_time: The scheduled_time of this StartTaskContactRequest.
        :param task_template_id: The task_template_id of this StartTaskContactRequest.
        :param quick_connect_id: The quick_connect_id of this StartTaskContactRequest.
        :param related_contact_id: The related_contact_id of this StartTaskContactRequest.
        """
        self.openapi_types = {
            'instance_id': str,
            'previous_contact_id': str,
            'contact_flow_id': str,
            'attributes': Dict[str, str],
            'name': str,
            'references': Dict[str, Reference],
            'description': str,
            'client_token': str,
            'scheduled_time': datetime,
            'task_template_id': str,
            'quick_connect_id': str,
            'related_contact_id': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'previous_contact_id': 'PreviousContactId',
            'contact_flow_id': 'ContactFlowId',
            'attributes': 'Attributes',
            'name': 'Name',
            'references': 'References',
            'description': 'Description',
            'client_token': 'ClientToken',
            'scheduled_time': 'ScheduledTime',
            'task_template_id': 'TaskTemplateId',
            'quick_connect_id': 'QuickConnectId',
            'related_contact_id': 'RelatedContactId'
        }

        self._instance_id = instance_id
        self._previous_contact_id = previous_contact_id
        self._contact_flow_id = contact_flow_id
        self._attributes = attributes
        self._name = name
        self._references = references
        self._description = description
        self._client_token = client_token
        self._scheduled_time = scheduled_time
        self._task_template_id = task_template_id
        self._quick_connect_id = quick_connect_id
        self._related_contact_id = related_contact_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartTaskContactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartTaskContact_request of this StartTaskContactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this StartTaskContactRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :return: The instance_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this StartTaskContactRequest.

        The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.

        :param instance_id: The instance_id of this StartTaskContactRequest.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")
        if instance_id is not None and len(instance_id) > 100:
            raise ValueError("Invalid value for `instance_id`, length must be less than or equal to `100`")
        if instance_id is not None and len(instance_id) < 1:
            raise ValueError("Invalid value for `instance_id`, length must be greater than or equal to `1`")

        self._instance_id = instance_id

    @property
    def previous_contact_id(self):
        """Gets the previous_contact_id of this StartTaskContactRequest.

        The identifier of the previous chat, voice, or task contact. 

        :return: The previous_contact_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._previous_contact_id

    @previous_contact_id.setter
    def previous_contact_id(self, previous_contact_id):
        """Sets the previous_contact_id of this StartTaskContactRequest.

        The identifier of the previous chat, voice, or task contact. 

        :param previous_contact_id: The previous_contact_id of this StartTaskContactRequest.
        :type previous_contact_id: str
        """
        if previous_contact_id is not None and len(previous_contact_id) > 256:
            raise ValueError("Invalid value for `previous_contact_id`, length must be less than or equal to `256`")
        if previous_contact_id is not None and len(previous_contact_id) < 1:
            raise ValueError("Invalid value for `previous_contact_id`, length must be greater than or equal to `1`")

        self._previous_contact_id = previous_contact_id

    @property
    def contact_flow_id(self):
        """Gets the contact_flow_id of this StartTaskContactRequest.

        <p>The identifier of the flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>

        :return: The contact_flow_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._contact_flow_id

    @contact_flow_id.setter
    def contact_flow_id(self, contact_flow_id):
        """Sets the contact_flow_id of this StartTaskContactRequest.

        <p>The identifier of the flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>

        :param contact_flow_id: The contact_flow_id of this StartTaskContactRequest.
        :type contact_flow_id: str
        """
        if contact_flow_id is not None and len(contact_flow_id) > 500:
            raise ValueError("Invalid value for `contact_flow_id`, length must be less than or equal to `500`")

        self._contact_flow_id = contact_flow_id

    @property
    def attributes(self):
        """Gets the attributes of this StartTaskContactRequest.

        <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>

        :return: The attributes of this StartTaskContactRequest.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this StartTaskContactRequest.

        <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>

        :param attributes: The attributes of this StartTaskContactRequest.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def name(self):
        """Gets the name of this StartTaskContactRequest.

        The name of a task that is shown to an agent in the Contact Control Panel (CCP).

        :return: The name of this StartTaskContactRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StartTaskContactRequest.

        The name of a task that is shown to an agent in the Contact Control Panel (CCP).

        :param name: The name of this StartTaskContactRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) > 512:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `512`")
        if name is not None and len(name) < 0:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `0`")

        self._name = name

    @property
    def references(self):
        """Gets the references of this StartTaskContactRequest.

        A formatted URL that is shown to an agent in the Contact Control Panel (CCP).

        :return: The references of this StartTaskContactRequest.
        :rtype: Dict[str, Reference]
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this StartTaskContactRequest.

        A formatted URL that is shown to an agent in the Contact Control Panel (CCP).

        :param references: The references of this StartTaskContactRequest.
        :type references: Dict[str, Reference]
        """

        self._references = references

    @property
    def description(self):
        """Gets the description of this StartTaskContactRequest.

        A description of the task that is shown to an agent in the Contact Control Panel (CCP).

        :return: The description of this StartTaskContactRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StartTaskContactRequest.

        A description of the task that is shown to an agent in the Contact Control Panel (CCP).

        :param description: The description of this StartTaskContactRequest.
        :type description: str
        """
        if description is not None and len(description) > 4096:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `4096`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def client_token(self):
        """Gets the client_token of this StartTaskContactRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :return: The client_token of this StartTaskContactRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartTaskContactRequest.

        A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.

        :param client_token: The client_token of this StartTaskContactRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 500:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `500`")

        self._client_token = client_token

    @property
    def scheduled_time(self):
        """Gets the scheduled_time of this StartTaskContactRequest.

        The timestamp, in Unix Epoch seconds format, at which to start running the inbound flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. 

        :return: The scheduled_time of this StartTaskContactRequest.
        :rtype: datetime
        """
        return self._scheduled_time

    @scheduled_time.setter
    def scheduled_time(self, scheduled_time):
        """Sets the scheduled_time of this StartTaskContactRequest.

        The timestamp, in Unix Epoch seconds format, at which to start running the inbound flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. 

        :param scheduled_time: The scheduled_time of this StartTaskContactRequest.
        :type scheduled_time: datetime
        """

        self._scheduled_time = scheduled_time

    @property
    def task_template_id(self):
        """Gets the task_template_id of this StartTaskContactRequest.

        A unique identifier for the task template.

        :return: The task_template_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._task_template_id

    @task_template_id.setter
    def task_template_id(self, task_template_id):
        """Sets the task_template_id of this StartTaskContactRequest.

        A unique identifier for the task template.

        :param task_template_id: The task_template_id of this StartTaskContactRequest.
        :type task_template_id: str
        """
        if task_template_id is not None and len(task_template_id) > 500:
            raise ValueError("Invalid value for `task_template_id`, length must be less than or equal to `500`")
        if task_template_id is not None and len(task_template_id) < 1:
            raise ValueError("Invalid value for `task_template_id`, length must be greater than or equal to `1`")

        self._task_template_id = task_template_id

    @property
    def quick_connect_id(self):
        """Gets the quick_connect_id of this StartTaskContactRequest.

        The identifier for the quick connect.

        :return: The quick_connect_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._quick_connect_id

    @quick_connect_id.setter
    def quick_connect_id(self, quick_connect_id):
        """Sets the quick_connect_id of this StartTaskContactRequest.

        The identifier for the quick connect.

        :param quick_connect_id: The quick_connect_id of this StartTaskContactRequest.
        :type quick_connect_id: str
        """

        self._quick_connect_id = quick_connect_id

    @property
    def related_contact_id(self):
        """Gets the related_contact_id of this StartTaskContactRequest.

        The contactId that is <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/tasks.html#linked-tasks\">related</a> to this contact.

        :return: The related_contact_id of this StartTaskContactRequest.
        :rtype: str
        """
        return self._related_contact_id

    @related_contact_id.setter
    def related_contact_id(self, related_contact_id):
        """Sets the related_contact_id of this StartTaskContactRequest.

        The contactId that is <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/tasks.html#linked-tasks\">related</a> to this contact.

        :param related_contact_id: The related_contact_id of this StartTaskContactRequest.
        :type related_contact_id: str
        """
        if related_contact_id is not None and len(related_contact_id) > 256:
            raise ValueError("Invalid value for `related_contact_id`, length must be less than or equal to `256`")
        if related_contact_id is not None and len(related_contact_id) < 1:
            raise ValueError("Invalid value for `related_contact_id`, length must be greater than or equal to `1`")

        self._related_contact_id = related_contact_id
