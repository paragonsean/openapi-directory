# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.routing_profile_queue_reference import RoutingProfileQueueReference
from openapi_server import util


class DisassociateRoutingProfileQueuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_references: List[RoutingProfileQueueReference]=None):
        """DisassociateRoutingProfileQueuesRequest - a model defined in OpenAPI

        :param queue_references: The queue_references of this DisassociateRoutingProfileQueuesRequest.
        """
        self.openapi_types = {
            'queue_references': List[RoutingProfileQueueReference]
        }

        self.attribute_map = {
            'queue_references': 'QueueReferences'
        }

        self._queue_references = queue_references

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisassociateRoutingProfileQueuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisassociateRoutingProfileQueues_request of this DisassociateRoutingProfileQueuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_references(self):
        """Gets the queue_references of this DisassociateRoutingProfileQueuesRequest.

        The queues to disassociate from this routing profile.

        :return: The queue_references of this DisassociateRoutingProfileQueuesRequest.
        :rtype: List[RoutingProfileQueueReference]
        """
        return self._queue_references

    @queue_references.setter
    def queue_references(self, queue_references):
        """Sets the queue_references of this DisassociateRoutingProfileQueuesRequest.

        The queues to disassociate from this routing profile.

        :param queue_references: The queue_references of this DisassociateRoutingProfileQueuesRequest.
        :type queue_references: List[RoutingProfileQueueReference]
        """
        if queue_references is None:
            raise ValueError("Invalid value for `queue_references`, must not be `None`")

        self._queue_references = queue_references
