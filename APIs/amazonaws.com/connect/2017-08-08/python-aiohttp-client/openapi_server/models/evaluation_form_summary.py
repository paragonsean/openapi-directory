# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluationFormSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluation_form_id: str=None, evaluation_form_arn: str=None, title: str=None, created_time: datetime=None, created_by: str=None, last_modified_time: datetime=None, last_modified_by: str=None, last_activated_time: datetime=None, last_activated_by: str=None, latest_version: int=None, active_version: int=None):
        """EvaluationFormSummary - a model defined in OpenAPI

        :param evaluation_form_id: The evaluation_form_id of this EvaluationFormSummary.
        :param evaluation_form_arn: The evaluation_form_arn of this EvaluationFormSummary.
        :param title: The title of this EvaluationFormSummary.
        :param created_time: The created_time of this EvaluationFormSummary.
        :param created_by: The created_by of this EvaluationFormSummary.
        :param last_modified_time: The last_modified_time of this EvaluationFormSummary.
        :param last_modified_by: The last_modified_by of this EvaluationFormSummary.
        :param last_activated_time: The last_activated_time of this EvaluationFormSummary.
        :param last_activated_by: The last_activated_by of this EvaluationFormSummary.
        :param latest_version: The latest_version of this EvaluationFormSummary.
        :param active_version: The active_version of this EvaluationFormSummary.
        """
        self.openapi_types = {
            'evaluation_form_id': str,
            'evaluation_form_arn': str,
            'title': str,
            'created_time': datetime,
            'created_by': str,
            'last_modified_time': datetime,
            'last_modified_by': str,
            'last_activated_time': datetime,
            'last_activated_by': str,
            'latest_version': int,
            'active_version': int
        }

        self.attribute_map = {
            'evaluation_form_id': 'EvaluationFormId',
            'evaluation_form_arn': 'EvaluationFormArn',
            'title': 'Title',
            'created_time': 'CreatedTime',
            'created_by': 'CreatedBy',
            'last_modified_time': 'LastModifiedTime',
            'last_modified_by': 'LastModifiedBy',
            'last_activated_time': 'LastActivatedTime',
            'last_activated_by': 'LastActivatedBy',
            'latest_version': 'LatestVersion',
            'active_version': 'ActiveVersion'
        }

        self._evaluation_form_id = evaluation_form_id
        self._evaluation_form_arn = evaluation_form_arn
        self._title = title
        self._created_time = created_time
        self._created_by = created_by
        self._last_modified_time = last_modified_time
        self._last_modified_by = last_modified_by
        self._last_activated_time = last_activated_time
        self._last_activated_by = last_activated_by
        self._latest_version = latest_version
        self._active_version = active_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluationFormSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluationFormSummary of this EvaluationFormSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluation_form_id(self):
        """Gets the evaluation_form_id of this EvaluationFormSummary.


        :return: The evaluation_form_id of this EvaluationFormSummary.
        :rtype: str
        """
        return self._evaluation_form_id

    @evaluation_form_id.setter
    def evaluation_form_id(self, evaluation_form_id):
        """Sets the evaluation_form_id of this EvaluationFormSummary.


        :param evaluation_form_id: The evaluation_form_id of this EvaluationFormSummary.
        :type evaluation_form_id: str
        """
        if evaluation_form_id is None:
            raise ValueError("Invalid value for `evaluation_form_id`, must not be `None`")

        self._evaluation_form_id = evaluation_form_id

    @property
    def evaluation_form_arn(self):
        """Gets the evaluation_form_arn of this EvaluationFormSummary.


        :return: The evaluation_form_arn of this EvaluationFormSummary.
        :rtype: str
        """
        return self._evaluation_form_arn

    @evaluation_form_arn.setter
    def evaluation_form_arn(self, evaluation_form_arn):
        """Sets the evaluation_form_arn of this EvaluationFormSummary.


        :param evaluation_form_arn: The evaluation_form_arn of this EvaluationFormSummary.
        :type evaluation_form_arn: str
        """
        if evaluation_form_arn is None:
            raise ValueError("Invalid value for `evaluation_form_arn`, must not be `None`")

        self._evaluation_form_arn = evaluation_form_arn

    @property
    def title(self):
        """Gets the title of this EvaluationFormSummary.


        :return: The title of this EvaluationFormSummary.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EvaluationFormSummary.


        :param title: The title of this EvaluationFormSummary.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def created_time(self):
        """Gets the created_time of this EvaluationFormSummary.


        :return: The created_time of this EvaluationFormSummary.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this EvaluationFormSummary.


        :param created_time: The created_time of this EvaluationFormSummary.
        :type created_time: datetime
        """
        if created_time is None:
            raise ValueError("Invalid value for `created_time`, must not be `None`")

        self._created_time = created_time

    @property
    def created_by(self):
        """Gets the created_by of this EvaluationFormSummary.


        :return: The created_by of this EvaluationFormSummary.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this EvaluationFormSummary.


        :param created_by: The created_by of this EvaluationFormSummary.
        :type created_by: str
        """
        if created_by is None:
            raise ValueError("Invalid value for `created_by`, must not be `None`")

        self._created_by = created_by

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this EvaluationFormSummary.


        :return: The last_modified_time of this EvaluationFormSummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this EvaluationFormSummary.


        :param last_modified_time: The last_modified_time of this EvaluationFormSummary.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this EvaluationFormSummary.


        :return: The last_modified_by of this EvaluationFormSummary.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this EvaluationFormSummary.


        :param last_modified_by: The last_modified_by of this EvaluationFormSummary.
        :type last_modified_by: str
        """
        if last_modified_by is None:
            raise ValueError("Invalid value for `last_modified_by`, must not be `None`")

        self._last_modified_by = last_modified_by

    @property
    def last_activated_time(self):
        """Gets the last_activated_time of this EvaluationFormSummary.


        :return: The last_activated_time of this EvaluationFormSummary.
        :rtype: datetime
        """
        return self._last_activated_time

    @last_activated_time.setter
    def last_activated_time(self, last_activated_time):
        """Sets the last_activated_time of this EvaluationFormSummary.


        :param last_activated_time: The last_activated_time of this EvaluationFormSummary.
        :type last_activated_time: datetime
        """

        self._last_activated_time = last_activated_time

    @property
    def last_activated_by(self):
        """Gets the last_activated_by of this EvaluationFormSummary.


        :return: The last_activated_by of this EvaluationFormSummary.
        :rtype: str
        """
        return self._last_activated_by

    @last_activated_by.setter
    def last_activated_by(self, last_activated_by):
        """Sets the last_activated_by of this EvaluationFormSummary.


        :param last_activated_by: The last_activated_by of this EvaluationFormSummary.
        :type last_activated_by: str
        """

        self._last_activated_by = last_activated_by

    @property
    def latest_version(self):
        """Gets the latest_version of this EvaluationFormSummary.


        :return: The latest_version of this EvaluationFormSummary.
        :rtype: int
        """
        return self._latest_version

    @latest_version.setter
    def latest_version(self, latest_version):
        """Sets the latest_version of this EvaluationFormSummary.


        :param latest_version: The latest_version of this EvaluationFormSummary.
        :type latest_version: int
        """
        if latest_version is None:
            raise ValueError("Invalid value for `latest_version`, must not be `None`")

        self._latest_version = latest_version

    @property
    def active_version(self):
        """Gets the active_version of this EvaluationFormSummary.


        :return: The active_version of this EvaluationFormSummary.
        :rtype: int
        """
        return self._active_version

    @active_version.setter
    def active_version(self, active_version):
        """Sets the active_version of this EvaluationFormSummary.


        :param active_version: The active_version of this EvaluationFormSummary.
        :type active_version: int
        """

        self._active_version = active_version
