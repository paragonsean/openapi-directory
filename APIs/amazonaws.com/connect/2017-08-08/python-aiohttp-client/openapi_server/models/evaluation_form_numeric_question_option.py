# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluationFormNumericQuestionOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_value: int=None, max_value: int=None, score: int=None, automatic_fail: bool=None):
        """EvaluationFormNumericQuestionOption - a model defined in OpenAPI

        :param min_value: The min_value of this EvaluationFormNumericQuestionOption.
        :param max_value: The max_value of this EvaluationFormNumericQuestionOption.
        :param score: The score of this EvaluationFormNumericQuestionOption.
        :param automatic_fail: The automatic_fail of this EvaluationFormNumericQuestionOption.
        """
        self.openapi_types = {
            'min_value': int,
            'max_value': int,
            'score': int,
            'automatic_fail': bool
        }

        self.attribute_map = {
            'min_value': 'MinValue',
            'max_value': 'MaxValue',
            'score': 'Score',
            'automatic_fail': 'AutomaticFail'
        }

        self._min_value = min_value
        self._max_value = max_value
        self._score = score
        self._automatic_fail = automatic_fail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluationFormNumericQuestionOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluationFormNumericQuestionOption of this EvaluationFormNumericQuestionOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_value(self):
        """Gets the min_value of this EvaluationFormNumericQuestionOption.


        :return: The min_value of this EvaluationFormNumericQuestionOption.
        :rtype: int
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this EvaluationFormNumericQuestionOption.


        :param min_value: The min_value of this EvaluationFormNumericQuestionOption.
        :type min_value: int
        """
        if min_value is None:
            raise ValueError("Invalid value for `min_value`, must not be `None`")

        self._min_value = min_value

    @property
    def max_value(self):
        """Gets the max_value of this EvaluationFormNumericQuestionOption.


        :return: The max_value of this EvaluationFormNumericQuestionOption.
        :rtype: int
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this EvaluationFormNumericQuestionOption.


        :param max_value: The max_value of this EvaluationFormNumericQuestionOption.
        :type max_value: int
        """
        if max_value is None:
            raise ValueError("Invalid value for `max_value`, must not be `None`")

        self._max_value = max_value

    @property
    def score(self):
        """Gets the score of this EvaluationFormNumericQuestionOption.


        :return: The score of this EvaluationFormNumericQuestionOption.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this EvaluationFormNumericQuestionOption.


        :param score: The score of this EvaluationFormNumericQuestionOption.
        :type score: int
        """

        self._score = score

    @property
    def automatic_fail(self):
        """Gets the automatic_fail of this EvaluationFormNumericQuestionOption.


        :return: The automatic_fail of this EvaluationFormNumericQuestionOption.
        :rtype: bool
        """
        return self._automatic_fail

    @automatic_fail.setter
    def automatic_fail(self, automatic_fail):
        """Sets the automatic_fail of this EvaluationFormNumericQuestionOption.


        :param automatic_fail: The automatic_fail of this EvaluationFormNumericQuestionOption.
        :type automatic_fail: bool
        """

        self._automatic_fail = automatic_fail
