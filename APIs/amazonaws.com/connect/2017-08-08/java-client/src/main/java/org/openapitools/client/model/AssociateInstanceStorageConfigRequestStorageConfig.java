/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig;
import org.openapitools.client.model.AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig;
import org.openapitools.client.model.AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig;
import org.openapitools.client.model.AssociateInstanceStorageConfigRequestStorageConfigS3Config;
import org.openapitools.client.model.StorageType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The storage configuration for the instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociateInstanceStorageConfigRequestStorageConfig {
  public static final String SERIALIZED_NAME_ASSOCIATION_ID = "AssociationId";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ID)
  private String associationId;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageType storageType;

  public static final String SERIALIZED_NAME_S3_CONFIG = "S3Config";
  @SerializedName(SERIALIZED_NAME_S3_CONFIG)
  private AssociateInstanceStorageConfigRequestStorageConfigS3Config s3Config;

  public static final String SERIALIZED_NAME_KINESIS_VIDEO_STREAM_CONFIG = "KinesisVideoStreamConfig";
  @SerializedName(SERIALIZED_NAME_KINESIS_VIDEO_STREAM_CONFIG)
  private AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig kinesisVideoStreamConfig;

  public static final String SERIALIZED_NAME_KINESIS_STREAM_CONFIG = "KinesisStreamConfig";
  @SerializedName(SERIALIZED_NAME_KINESIS_STREAM_CONFIG)
  private AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig kinesisStreamConfig;

  public static final String SERIALIZED_NAME_KINESIS_FIREHOSE_CONFIG = "KinesisFirehoseConfig";
  @SerializedName(SERIALIZED_NAME_KINESIS_FIREHOSE_CONFIG)
  private AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig kinesisFirehoseConfig;

  public AssociateInstanceStorageConfigRequestStorageConfig() {
  }

  public AssociateInstanceStorageConfigRequestStorageConfig associationId(String associationId) {
    this.associationId = associationId;
    return this;
  }

  /**
   * Get associationId
   * @return associationId
   */
  @javax.annotation.Nullable
  public String getAssociationId() {
    return associationId;
  }

  public void setAssociationId(String associationId) {
    this.associationId = associationId;
  }


  public AssociateInstanceStorageConfigRequestStorageConfig storageType(StorageType storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public StorageType getStorageType() {
    return storageType;
  }

  public void setStorageType(StorageType storageType) {
    this.storageType = storageType;
  }


  public AssociateInstanceStorageConfigRequestStorageConfig s3Config(AssociateInstanceStorageConfigRequestStorageConfigS3Config s3Config) {
    this.s3Config = s3Config;
    return this;
  }

  /**
   * Get s3Config
   * @return s3Config
   */
  @javax.annotation.Nullable
  public AssociateInstanceStorageConfigRequestStorageConfigS3Config getS3Config() {
    return s3Config;
  }

  public void setS3Config(AssociateInstanceStorageConfigRequestStorageConfigS3Config s3Config) {
    this.s3Config = s3Config;
  }


  public AssociateInstanceStorageConfigRequestStorageConfig kinesisVideoStreamConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig kinesisVideoStreamConfig) {
    this.kinesisVideoStreamConfig = kinesisVideoStreamConfig;
    return this;
  }

  /**
   * Get kinesisVideoStreamConfig
   * @return kinesisVideoStreamConfig
   */
  @javax.annotation.Nullable
  public AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig getKinesisVideoStreamConfig() {
    return kinesisVideoStreamConfig;
  }

  public void setKinesisVideoStreamConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig kinesisVideoStreamConfig) {
    this.kinesisVideoStreamConfig = kinesisVideoStreamConfig;
  }


  public AssociateInstanceStorageConfigRequestStorageConfig kinesisStreamConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig kinesisStreamConfig) {
    this.kinesisStreamConfig = kinesisStreamConfig;
    return this;
  }

  /**
   * Get kinesisStreamConfig
   * @return kinesisStreamConfig
   */
  @javax.annotation.Nullable
  public AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig getKinesisStreamConfig() {
    return kinesisStreamConfig;
  }

  public void setKinesisStreamConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig kinesisStreamConfig) {
    this.kinesisStreamConfig = kinesisStreamConfig;
  }


  public AssociateInstanceStorageConfigRequestStorageConfig kinesisFirehoseConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig kinesisFirehoseConfig) {
    this.kinesisFirehoseConfig = kinesisFirehoseConfig;
    return this;
  }

  /**
   * Get kinesisFirehoseConfig
   * @return kinesisFirehoseConfig
   */
  @javax.annotation.Nullable
  public AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig getKinesisFirehoseConfig() {
    return kinesisFirehoseConfig;
  }

  public void setKinesisFirehoseConfig(AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig kinesisFirehoseConfig) {
    this.kinesisFirehoseConfig = kinesisFirehoseConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociateInstanceStorageConfigRequestStorageConfig associateInstanceStorageConfigRequestStorageConfig = (AssociateInstanceStorageConfigRequestStorageConfig) o;
    return Objects.equals(this.associationId, associateInstanceStorageConfigRequestStorageConfig.associationId) &&
        Objects.equals(this.storageType, associateInstanceStorageConfigRequestStorageConfig.storageType) &&
        Objects.equals(this.s3Config, associateInstanceStorageConfigRequestStorageConfig.s3Config) &&
        Objects.equals(this.kinesisVideoStreamConfig, associateInstanceStorageConfigRequestStorageConfig.kinesisVideoStreamConfig) &&
        Objects.equals(this.kinesisStreamConfig, associateInstanceStorageConfigRequestStorageConfig.kinesisStreamConfig) &&
        Objects.equals(this.kinesisFirehoseConfig, associateInstanceStorageConfigRequestStorageConfig.kinesisFirehoseConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associationId, storageType, s3Config, kinesisVideoStreamConfig, kinesisStreamConfig, kinesisFirehoseConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociateInstanceStorageConfigRequestStorageConfig {\n");
    sb.append("    associationId: ").append(toIndentedString(associationId)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    s3Config: ").append(toIndentedString(s3Config)).append("\n");
    sb.append("    kinesisVideoStreamConfig: ").append(toIndentedString(kinesisVideoStreamConfig)).append("\n");
    sb.append("    kinesisStreamConfig: ").append(toIndentedString(kinesisStreamConfig)).append("\n");
    sb.append("    kinesisFirehoseConfig: ").append(toIndentedString(kinesisFirehoseConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssociationId");
    openapiFields.add("StorageType");
    openapiFields.add("S3Config");
    openapiFields.add("KinesisVideoStreamConfig");
    openapiFields.add("KinesisStreamConfig");
    openapiFields.add("KinesisFirehoseConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociateInstanceStorageConfigRequestStorageConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociateInstanceStorageConfigRequestStorageConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociateInstanceStorageConfigRequestStorageConfig is not found in the empty JSON string", AssociateInstanceStorageConfigRequestStorageConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociateInstanceStorageConfigRequestStorageConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociateInstanceStorageConfigRequestStorageConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AssociationId`
      if (jsonObj.get("AssociationId") != null && !jsonObj.get("AssociationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationId"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        StorageType.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `S3Config`
      if (jsonObj.get("S3Config") != null && !jsonObj.get("S3Config").isJsonNull()) {
        AssociateInstanceStorageConfigRequestStorageConfigS3Config.validateJsonElement(jsonObj.get("S3Config"));
      }
      // validate the optional field `KinesisVideoStreamConfig`
      if (jsonObj.get("KinesisVideoStreamConfig") != null && !jsonObj.get("KinesisVideoStreamConfig").isJsonNull()) {
        AssociateInstanceStorageConfigRequestStorageConfigKinesisVideoStreamConfig.validateJsonElement(jsonObj.get("KinesisVideoStreamConfig"));
      }
      // validate the optional field `KinesisStreamConfig`
      if (jsonObj.get("KinesisStreamConfig") != null && !jsonObj.get("KinesisStreamConfig").isJsonNull()) {
        AssociateInstanceStorageConfigRequestStorageConfigKinesisStreamConfig.validateJsonElement(jsonObj.get("KinesisStreamConfig"));
      }
      // validate the optional field `KinesisFirehoseConfig`
      if (jsonObj.get("KinesisFirehoseConfig") != null && !jsonObj.get("KinesisFirehoseConfig").isJsonNull()) {
        AssociateInstanceStorageConfigRequestStorageConfigKinesisFirehoseConfig.validateJsonElement(jsonObj.get("KinesisFirehoseConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociateInstanceStorageConfigRequestStorageConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociateInstanceStorageConfigRequestStorageConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociateInstanceStorageConfigRequestStorageConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociateInstanceStorageConfigRequestStorageConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociateInstanceStorageConfigRequestStorageConfig>() {
           @Override
           public void write(JsonWriter out, AssociateInstanceStorageConfigRequestStorageConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociateInstanceStorageConfigRequestStorageConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociateInstanceStorageConfigRequestStorageConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociateInstanceStorageConfigRequestStorageConfig
   * @throws IOException if the JSON string is invalid with respect to AssociateInstanceStorageConfigRequestStorageConfig
   */
  public static AssociateInstanceStorageConfigRequestStorageConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociateInstanceStorageConfigRequestStorageConfig.class);
  }

  /**
   * Convert an instance of AssociateInstanceStorageConfigRequestStorageConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

