/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSecurityProfileRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSecurityProfileRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PERMISSIONS = "Permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<String> permissions = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOWED_ACCESS_CONTROL_TAGS = "AllowedAccessControlTags";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ACCESS_CONTROL_TAGS)
  private Map<String, String> allowedAccessControlTags = new HashMap<>();

  public static final String SERIALIZED_NAME_TAG_RESTRICTED_RESOURCES = "TagRestrictedResources";
  @SerializedName(SERIALIZED_NAME_TAG_RESTRICTED_RESOURCES)
  private List<String> tagRestrictedResources = new ArrayList<>();

  public UpdateSecurityProfileRequest() {
  }

  public UpdateSecurityProfileRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the security profile.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSecurityProfileRequest permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public UpdateSecurityProfileRequest addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * The permissions granted to a security profile. For a list of valid permissions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html\&quot;&gt;List of security profile permissions&lt;/a&gt;.
   * @return permissions
   */
  @javax.annotation.Nullable
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }


  public UpdateSecurityProfileRequest allowedAccessControlTags(Map<String, String> allowedAccessControlTags) {
    this.allowedAccessControlTags = allowedAccessControlTags;
    return this;
  }

  public UpdateSecurityProfileRequest putAllowedAccessControlTagsItem(String key, String allowedAccessControlTagsItem) {
    if (this.allowedAccessControlTags == null) {
      this.allowedAccessControlTags = new HashMap<>();
    }
    this.allowedAccessControlTags.put(key, allowedAccessControlTagsItem);
    return this;
  }

  /**
   * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
   * @return allowedAccessControlTags
   */
  @javax.annotation.Nullable
  public Map<String, String> getAllowedAccessControlTags() {
    return allowedAccessControlTags;
  }

  public void setAllowedAccessControlTags(Map<String, String> allowedAccessControlTags) {
    this.allowedAccessControlTags = allowedAccessControlTags;
  }


  public UpdateSecurityProfileRequest tagRestrictedResources(List<String> tagRestrictedResources) {
    this.tagRestrictedResources = tagRestrictedResources;
    return this;
  }

  public UpdateSecurityProfileRequest addTagRestrictedResourcesItem(String tagRestrictedResourcesItem) {
    if (this.tagRestrictedResources == null) {
      this.tagRestrictedResources = new ArrayList<>();
    }
    this.tagRestrictedResources.add(tagRestrictedResourcesItem);
    return this;
  }

  /**
   * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
   * @return tagRestrictedResources
   */
  @javax.annotation.Nullable
  public List<String> getTagRestrictedResources() {
    return tagRestrictedResources;
  }

  public void setTagRestrictedResources(List<String> tagRestrictedResources) {
    this.tagRestrictedResources = tagRestrictedResources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSecurityProfileRequest updateSecurityProfileRequest = (UpdateSecurityProfileRequest) o;
    return Objects.equals(this.description, updateSecurityProfileRequest.description) &&
        Objects.equals(this.permissions, updateSecurityProfileRequest.permissions) &&
        Objects.equals(this.allowedAccessControlTags, updateSecurityProfileRequest.allowedAccessControlTags) &&
        Objects.equals(this.tagRestrictedResources, updateSecurityProfileRequest.tagRestrictedResources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, permissions, allowedAccessControlTags, tagRestrictedResources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSecurityProfileRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    allowedAccessControlTags: ").append(toIndentedString(allowedAccessControlTags)).append("\n");
    sb.append("    tagRestrictedResources: ").append(toIndentedString(tagRestrictedResources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Description");
    openapiFields.add("Permissions");
    openapiFields.add("AllowedAccessControlTags");
    openapiFields.add("TagRestrictedResources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSecurityProfileRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSecurityProfileRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSecurityProfileRequest is not found in the empty JSON string", UpdateSecurityProfileRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSecurityProfileRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSecurityProfileRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Permissions") != null && !jsonObj.get("Permissions").isJsonNull() && !jsonObj.get("Permissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Permissions` to be an array in the JSON string but got `%s`", jsonObj.get("Permissions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("TagRestrictedResources") != null && !jsonObj.get("TagRestrictedResources").isJsonNull() && !jsonObj.get("TagRestrictedResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `TagRestrictedResources` to be an array in the JSON string but got `%s`", jsonObj.get("TagRestrictedResources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSecurityProfileRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSecurityProfileRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSecurityProfileRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSecurityProfileRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSecurityProfileRequest>() {
           @Override
           public void write(JsonWriter out, UpdateSecurityProfileRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSecurityProfileRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSecurityProfileRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSecurityProfileRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateSecurityProfileRequest
   */
  public static UpdateSecurityProfileRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSecurityProfileRequest.class);
  }

  /**
   * Convert an instance of UpdateSecurityProfileRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

