/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateQueueRequestOutboundCallerConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateQueueRequestOutboundCallerConfig {
  public static final String SERIALIZED_NAME_OUTBOUND_CALLER_ID_NAME = "OutboundCallerIdName";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_CALLER_ID_NAME)
  private String outboundCallerIdName;

  public static final String SERIALIZED_NAME_OUTBOUND_CALLER_ID_NUMBER_ID = "OutboundCallerIdNumberId";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_CALLER_ID_NUMBER_ID)
  private String outboundCallerIdNumberId;

  public static final String SERIALIZED_NAME_OUTBOUND_FLOW_ID = "OutboundFlowId";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_FLOW_ID)
  private String outboundFlowId;

  public CreateQueueRequestOutboundCallerConfig() {
  }

  public CreateQueueRequestOutboundCallerConfig outboundCallerIdName(String outboundCallerIdName) {
    this.outboundCallerIdName = outboundCallerIdName;
    return this;
  }

  /**
   * Get outboundCallerIdName
   * @return outboundCallerIdName
   */
  @javax.annotation.Nullable
  public String getOutboundCallerIdName() {
    return outboundCallerIdName;
  }

  public void setOutboundCallerIdName(String outboundCallerIdName) {
    this.outboundCallerIdName = outboundCallerIdName;
  }


  public CreateQueueRequestOutboundCallerConfig outboundCallerIdNumberId(String outboundCallerIdNumberId) {
    this.outboundCallerIdNumberId = outboundCallerIdNumberId;
    return this;
  }

  /**
   * Get outboundCallerIdNumberId
   * @return outboundCallerIdNumberId
   */
  @javax.annotation.Nullable
  public String getOutboundCallerIdNumberId() {
    return outboundCallerIdNumberId;
  }

  public void setOutboundCallerIdNumberId(String outboundCallerIdNumberId) {
    this.outboundCallerIdNumberId = outboundCallerIdNumberId;
  }


  public CreateQueueRequestOutboundCallerConfig outboundFlowId(String outboundFlowId) {
    this.outboundFlowId = outboundFlowId;
    return this;
  }

  /**
   * Get outboundFlowId
   * @return outboundFlowId
   */
  @javax.annotation.Nullable
  public String getOutboundFlowId() {
    return outboundFlowId;
  }

  public void setOutboundFlowId(String outboundFlowId) {
    this.outboundFlowId = outboundFlowId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateQueueRequestOutboundCallerConfig createQueueRequestOutboundCallerConfig = (CreateQueueRequestOutboundCallerConfig) o;
    return Objects.equals(this.outboundCallerIdName, createQueueRequestOutboundCallerConfig.outboundCallerIdName) &&
        Objects.equals(this.outboundCallerIdNumberId, createQueueRequestOutboundCallerConfig.outboundCallerIdNumberId) &&
        Objects.equals(this.outboundFlowId, createQueueRequestOutboundCallerConfig.outboundFlowId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outboundCallerIdName, outboundCallerIdNumberId, outboundFlowId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateQueueRequestOutboundCallerConfig {\n");
    sb.append("    outboundCallerIdName: ").append(toIndentedString(outboundCallerIdName)).append("\n");
    sb.append("    outboundCallerIdNumberId: ").append(toIndentedString(outboundCallerIdNumberId)).append("\n");
    sb.append("    outboundFlowId: ").append(toIndentedString(outboundFlowId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OutboundCallerIdName");
    openapiFields.add("OutboundCallerIdNumberId");
    openapiFields.add("OutboundFlowId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateQueueRequestOutboundCallerConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateQueueRequestOutboundCallerConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateQueueRequestOutboundCallerConfig is not found in the empty JSON string", CreateQueueRequestOutboundCallerConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateQueueRequestOutboundCallerConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateQueueRequestOutboundCallerConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OutboundCallerIdName`
      if (jsonObj.get("OutboundCallerIdName") != null && !jsonObj.get("OutboundCallerIdName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutboundCallerIdName"));
      }
      // validate the optional field `OutboundCallerIdNumberId`
      if (jsonObj.get("OutboundCallerIdNumberId") != null && !jsonObj.get("OutboundCallerIdNumberId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutboundCallerIdNumberId"));
      }
      // validate the optional field `OutboundFlowId`
      if (jsonObj.get("OutboundFlowId") != null && !jsonObj.get("OutboundFlowId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutboundFlowId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateQueueRequestOutboundCallerConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateQueueRequestOutboundCallerConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateQueueRequestOutboundCallerConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateQueueRequestOutboundCallerConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateQueueRequestOutboundCallerConfig>() {
           @Override
           public void write(JsonWriter out, CreateQueueRequestOutboundCallerConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateQueueRequestOutboundCallerConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateQueueRequestOutboundCallerConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateQueueRequestOutboundCallerConfig
   * @throws IOException if the JSON string is invalid with respect to CreateQueueRequestOutboundCallerConfig
   */
  public static CreateQueueRequestOutboundCallerConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateQueueRequestOutboundCallerConfig.class);
  }

  /**
   * Convert an instance of CreateQueueRequestOutboundCallerConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

