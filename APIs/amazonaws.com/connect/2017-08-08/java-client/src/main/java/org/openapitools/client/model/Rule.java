/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateRuleRequestTriggerEventSource;
import org.openapitools.client.model.RulePublishStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Rule {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RULE_ID = "RuleId";
  @SerializedName(SERIALIZED_NAME_RULE_ID)
  private String ruleId;

  public static final String SERIALIZED_NAME_RULE_ARN = "RuleArn";
  @SerializedName(SERIALIZED_NAME_RULE_ARN)
  private String ruleArn;

  public static final String SERIALIZED_NAME_TRIGGER_EVENT_SOURCE = "TriggerEventSource";
  @SerializedName(SERIALIZED_NAME_TRIGGER_EVENT_SOURCE)
  private CreateRuleRequestTriggerEventSource triggerEventSource;

  public static final String SERIALIZED_NAME_FUNCTION = "Function";
  @SerializedName(SERIALIZED_NAME_FUNCTION)
  private String function;

  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private List actions;

  public static final String SERIALIZED_NAME_PUBLISH_STATUS = "PublishStatus";
  @SerializedName(SERIALIZED_NAME_PUBLISH_STATUS)
  private RulePublishStatus publishStatus;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "LastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private String lastUpdatedBy;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public Rule() {
  }

  public Rule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Rule ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * Get ruleId
   * @return ruleId
   */
  @javax.annotation.Nonnull
  public String getRuleId() {
    return ruleId;
  }

  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }


  public Rule ruleArn(String ruleArn) {
    this.ruleArn = ruleArn;
    return this;
  }

  /**
   * Get ruleArn
   * @return ruleArn
   */
  @javax.annotation.Nonnull
  public String getRuleArn() {
    return ruleArn;
  }

  public void setRuleArn(String ruleArn) {
    this.ruleArn = ruleArn;
  }


  public Rule triggerEventSource(CreateRuleRequestTriggerEventSource triggerEventSource) {
    this.triggerEventSource = triggerEventSource;
    return this;
  }

  /**
   * Get triggerEventSource
   * @return triggerEventSource
   */
  @javax.annotation.Nonnull
  public CreateRuleRequestTriggerEventSource getTriggerEventSource() {
    return triggerEventSource;
  }

  public void setTriggerEventSource(CreateRuleRequestTriggerEventSource triggerEventSource) {
    this.triggerEventSource = triggerEventSource;
  }


  public Rule function(String function) {
    this.function = function;
    return this;
  }

  /**
   * Get function
   * @return function
   */
  @javax.annotation.Nonnull
  public String getFunction() {
    return function;
  }

  public void setFunction(String function) {
    this.function = function;
  }


  public Rule actions(List actions) {
    this.actions = actions;
    return this;
  }

  /**
   * Get actions
   * @return actions
   */
  @javax.annotation.Nonnull
  public List getActions() {
    return actions;
  }

  public void setActions(List actions) {
    this.actions = actions;
  }


  public Rule publishStatus(RulePublishStatus publishStatus) {
    this.publishStatus = publishStatus;
    return this;
  }

  /**
   * Get publishStatus
   * @return publishStatus
   */
  @javax.annotation.Nonnull
  public RulePublishStatus getPublishStatus() {
    return publishStatus;
  }

  public void setPublishStatus(RulePublishStatus publishStatus) {
    this.publishStatus = publishStatus;
  }


  public Rule createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public Rule lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public Rule lastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nonnull
  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  public Rule tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rule rule = (Rule) o;
    return Objects.equals(this.name, rule.name) &&
        Objects.equals(this.ruleId, rule.ruleId) &&
        Objects.equals(this.ruleArn, rule.ruleArn) &&
        Objects.equals(this.triggerEventSource, rule.triggerEventSource) &&
        Objects.equals(this.function, rule.function) &&
        Objects.equals(this.actions, rule.actions) &&
        Objects.equals(this.publishStatus, rule.publishStatus) &&
        Objects.equals(this.createdTime, rule.createdTime) &&
        Objects.equals(this.lastUpdatedTime, rule.lastUpdatedTime) &&
        Objects.equals(this.lastUpdatedBy, rule.lastUpdatedBy) &&
        Objects.equals(this.tags, rule.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ruleId, ruleArn, triggerEventSource, function, actions, publishStatus, createdTime, lastUpdatedTime, lastUpdatedBy, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rule {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    ruleArn: ").append(toIndentedString(ruleArn)).append("\n");
    sb.append("    triggerEventSource: ").append(toIndentedString(triggerEventSource)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    publishStatus: ").append(toIndentedString(publishStatus)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("RuleId");
    openapiFields.add("RuleArn");
    openapiFields.add("TriggerEventSource");
    openapiFields.add("Function");
    openapiFields.add("Actions");
    openapiFields.add("PublishStatus");
    openapiFields.add("CreatedTime");
    openapiFields.add("LastUpdatedTime");
    openapiFields.add("LastUpdatedBy");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("RuleId");
    openapiRequiredFields.add("RuleArn");
    openapiRequiredFields.add("TriggerEventSource");
    openapiRequiredFields.add("Function");
    openapiRequiredFields.add("Actions");
    openapiRequiredFields.add("PublishStatus");
    openapiRequiredFields.add("CreatedTime");
    openapiRequiredFields.add("LastUpdatedTime");
    openapiRequiredFields.add("LastUpdatedBy");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Rule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Rule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Rule is not found in the empty JSON string", Rule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Rule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Rule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Rule.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the required field `RuleId`
      String.validateJsonElement(jsonObj.get("RuleId"));
      // validate the required field `RuleArn`
      String.validateJsonElement(jsonObj.get("RuleArn"));
      // validate the required field `TriggerEventSource`
      CreateRuleRequestTriggerEventSource.validateJsonElement(jsonObj.get("TriggerEventSource"));
      // validate the required field `Function`
      String.validateJsonElement(jsonObj.get("Function"));
      // validate the required field `Actions`
      List.validateJsonElement(jsonObj.get("Actions"));
      // validate the required field `PublishStatus`
      RulePublishStatus.validateJsonElement(jsonObj.get("PublishStatus"));
      // validate the required field `CreatedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      // validate the required field `LastUpdatedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTime"));
      // validate the required field `LastUpdatedBy`
      String.validateJsonElement(jsonObj.get("LastUpdatedBy"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Rule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Rule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Rule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Rule.class));

       return (TypeAdapter<T>) new TypeAdapter<Rule>() {
           @Override
           public void write(JsonWriter out, Rule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Rule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Rule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Rule
   * @throws IOException if the JSON string is invalid with respect to Rule
   */
  public static Rule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Rule.class);
  }

  /**
   * Convert an instance of Rule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

