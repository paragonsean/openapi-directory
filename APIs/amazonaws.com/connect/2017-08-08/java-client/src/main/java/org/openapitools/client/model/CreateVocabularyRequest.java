/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateVocabularyRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateVocabularyRequest {
  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_VOCABULARY_NAME = "VocabularyName";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_NAME)
  private String vocabularyName;

  /**
   * The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html\&quot;&gt;What is Amazon Transcribe?&lt;/a&gt; 
   */
  @JsonAdapter(LanguageCodeEnum.Adapter.class)
  public enum LanguageCodeEnum {
    AR_AE("ar-AE"),
    
    DE_CH("de-CH"),
    
    DE_DE("de-DE"),
    
    EN_AB("en-AB"),
    
    EN_AU("en-AU"),
    
    EN_GB("en-GB"),
    
    EN_IE("en-IE"),
    
    EN_IN("en-IN"),
    
    EN_US("en-US"),
    
    EN_WL("en-WL"),
    
    ES_ES("es-ES"),
    
    ES_US("es-US"),
    
    FR_CA("fr-CA"),
    
    FR_FR("fr-FR"),
    
    HI_IN("hi-IN"),
    
    IT_IT("it-IT"),
    
    JA_JP("ja-JP"),
    
    KO_KR("ko-KR"),
    
    PT_BR("pt-BR"),
    
    PT_PT("pt-PT"),
    
    ZH_CN("zh-CN"),
    
    EN_NZ("en-NZ"),
    
    EN_ZA("en-ZA");

    private String value;

    LanguageCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LanguageCodeEnum fromValue(String value) {
      for (LanguageCodeEnum b : LanguageCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LanguageCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LanguageCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LanguageCodeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LanguageCodeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private LanguageCodeEnum languageCode;

  public static final String SERIALIZED_NAME_CONTENT = "Content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateVocabularyRequest() {
  }

  public CreateVocabularyRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see &lt;a href&#x3D;\&quot;https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\&quot;&gt;Making retries safe with idempotent APIs&lt;/a&gt;. If a create request is received more than once with same client token, subsequent requests return the previous response without creating a vocabulary again.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateVocabularyRequest vocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
    return this;
  }

  /**
   * A unique name of the custom vocabulary.
   * @return vocabularyName
   */
  @javax.annotation.Nonnull
  public String getVocabularyName() {
    return vocabularyName;
  }

  public void setVocabularyName(String vocabularyName) {
    this.vocabularyName = vocabularyName;
  }


  public CreateVocabularyRequest languageCode(LanguageCodeEnum languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html\&quot;&gt;What is Amazon Transcribe?&lt;/a&gt; 
   * @return languageCode
   */
  @javax.annotation.Nonnull
  public LanguageCodeEnum getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(LanguageCodeEnum languageCode) {
    this.languageCode = languageCode;
  }


  public CreateVocabularyRequest content(String content) {
    this.content = content;
    return this;
  }

  /**
   * The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with &lt;code&gt;Phrase&lt;/code&gt;, &lt;code&gt;IPA&lt;/code&gt;, &lt;code&gt;SoundsLike&lt;/code&gt;, and &lt;code&gt;DisplayAs&lt;/code&gt; fields. Separate the fields with TAB characters. The size limit is 50KB. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table\&quot;&gt;Create a custom vocabulary using a table&lt;/a&gt;.
   * @return content
   */
  @javax.annotation.Nonnull
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  public CreateVocabularyRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateVocabularyRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The tags used to organize, track, or control access for this resource. For example, { \&quot;tags\&quot;: {\&quot;key1\&quot;:\&quot;value1\&quot;, \&quot;key2\&quot;:\&quot;value2\&quot;} }.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVocabularyRequest createVocabularyRequest = (CreateVocabularyRequest) o;
    return Objects.equals(this.clientToken, createVocabularyRequest.clientToken) &&
        Objects.equals(this.vocabularyName, createVocabularyRequest.vocabularyName) &&
        Objects.equals(this.languageCode, createVocabularyRequest.languageCode) &&
        Objects.equals(this.content, createVocabularyRequest.content) &&
        Objects.equals(this.tags, createVocabularyRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, vocabularyName, languageCode, content, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVocabularyRequest {\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    vocabularyName: ").append(toIndentedString(vocabularyName)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClientToken");
    openapiFields.add("VocabularyName");
    openapiFields.add("LanguageCode");
    openapiFields.add("Content");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("VocabularyName");
    openapiRequiredFields.add("LanguageCode");
    openapiRequiredFields.add("Content");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateVocabularyRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateVocabularyRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateVocabularyRequest is not found in the empty JSON string", CreateVocabularyRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateVocabularyRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateVocabularyRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateVocabularyRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ClientToken") != null && !jsonObj.get("ClientToken").isJsonNull()) && !jsonObj.get("ClientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientToken").toString()));
      }
      if (!jsonObj.get("VocabularyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VocabularyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VocabularyName").toString()));
      }
      if (!jsonObj.get("LanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LanguageCode").toString()));
      }
      // validate the required field `LanguageCode`
      LanguageCodeEnum.validateJsonElement(jsonObj.get("LanguageCode"));
      if (!jsonObj.get("Content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Content").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateVocabularyRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateVocabularyRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateVocabularyRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateVocabularyRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateVocabularyRequest>() {
           @Override
           public void write(JsonWriter out, CreateVocabularyRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateVocabularyRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateVocabularyRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateVocabularyRequest
   * @throws IOException if the JSON string is invalid with respect to CreateVocabularyRequest
   */
  public static CreateVocabularyRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateVocabularyRequest.class);
  }

  /**
   * Convert an instance of CreateVocabularyRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

