/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetTaskTemplateResponseConstraints;
import org.openapitools.client.model.GetTaskTemplateResponseDefaults;
import org.openapitools.client.model.TaskTemplateStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateTaskTemplateResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateTaskTemplateResponse {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CONTACT_FLOW_ID = "ContactFlowId";
  @SerializedName(SERIALIZED_NAME_CONTACT_FLOW_ID)
  private String contactFlowId;

  public static final String SERIALIZED_NAME_CONSTRAINTS = "Constraints";
  @SerializedName(SERIALIZED_NAME_CONSTRAINTS)
  private GetTaskTemplateResponseConstraints constraints;

  public static final String SERIALIZED_NAME_DEFAULTS = "Defaults";
  @SerializedName(SERIALIZED_NAME_DEFAULTS)
  private GetTaskTemplateResponseDefaults defaults;

  public static final String SERIALIZED_NAME_FIELDS = "Fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List fields;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TaskTemplateStatus status;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public UpdateTaskTemplateResponse() {
  }

  public UpdateTaskTemplateResponse instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public UpdateTaskTemplateResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public UpdateTaskTemplateResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public UpdateTaskTemplateResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateTaskTemplateResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateTaskTemplateResponse contactFlowId(String contactFlowId) {
    this.contactFlowId = contactFlowId;
    return this;
  }

  /**
   * Get contactFlowId
   * @return contactFlowId
   */
  @javax.annotation.Nullable
  public String getContactFlowId() {
    return contactFlowId;
  }

  public void setContactFlowId(String contactFlowId) {
    this.contactFlowId = contactFlowId;
  }


  public UpdateTaskTemplateResponse constraints(GetTaskTemplateResponseConstraints constraints) {
    this.constraints = constraints;
    return this;
  }

  /**
   * Get constraints
   * @return constraints
   */
  @javax.annotation.Nullable
  public GetTaskTemplateResponseConstraints getConstraints() {
    return constraints;
  }

  public void setConstraints(GetTaskTemplateResponseConstraints constraints) {
    this.constraints = constraints;
  }


  public UpdateTaskTemplateResponse defaults(GetTaskTemplateResponseDefaults defaults) {
    this.defaults = defaults;
    return this;
  }

  /**
   * Get defaults
   * @return defaults
   */
  @javax.annotation.Nullable
  public GetTaskTemplateResponseDefaults getDefaults() {
    return defaults;
  }

  public void setDefaults(GetTaskTemplateResponseDefaults defaults) {
    this.defaults = defaults;
  }


  public UpdateTaskTemplateResponse fields(List fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  public List getFields() {
    return fields;
  }

  public void setFields(List fields) {
    this.fields = fields;
  }


  public UpdateTaskTemplateResponse status(TaskTemplateStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TaskTemplateStatus getStatus() {
    return status;
  }

  public void setStatus(TaskTemplateStatus status) {
    this.status = status;
  }


  public UpdateTaskTemplateResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public UpdateTaskTemplateResponse createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateTaskTemplateResponse updateTaskTemplateResponse = (UpdateTaskTemplateResponse) o;
    return Objects.equals(this.instanceId, updateTaskTemplateResponse.instanceId) &&
        Objects.equals(this.id, updateTaskTemplateResponse.id) &&
        Objects.equals(this.arn, updateTaskTemplateResponse.arn) &&
        Objects.equals(this.name, updateTaskTemplateResponse.name) &&
        Objects.equals(this.description, updateTaskTemplateResponse.description) &&
        Objects.equals(this.contactFlowId, updateTaskTemplateResponse.contactFlowId) &&
        Objects.equals(this.constraints, updateTaskTemplateResponse.constraints) &&
        Objects.equals(this.defaults, updateTaskTemplateResponse.defaults) &&
        Objects.equals(this.fields, updateTaskTemplateResponse.fields) &&
        Objects.equals(this.status, updateTaskTemplateResponse.status) &&
        Objects.equals(this.lastModifiedTime, updateTaskTemplateResponse.lastModifiedTime) &&
        Objects.equals(this.createdTime, updateTaskTemplateResponse.createdTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, id, arn, name, description, contactFlowId, constraints, defaults, fields, status, lastModifiedTime, createdTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateTaskTemplateResponse {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contactFlowId: ").append(toIndentedString(contactFlowId)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    defaults: ").append(toIndentedString(defaults)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InstanceId");
    openapiFields.add("Id");
    openapiFields.add("Arn");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("ContactFlowId");
    openapiFields.add("Constraints");
    openapiFields.add("Defaults");
    openapiFields.add("Fields");
    openapiFields.add("Status");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("CreatedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateTaskTemplateResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateTaskTemplateResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateTaskTemplateResponse is not found in the empty JSON string", UpdateTaskTemplateResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateTaskTemplateResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateTaskTemplateResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `ContactFlowId`
      if (jsonObj.get("ContactFlowId") != null && !jsonObj.get("ContactFlowId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContactFlowId"));
      }
      // validate the optional field `Constraints`
      if (jsonObj.get("Constraints") != null && !jsonObj.get("Constraints").isJsonNull()) {
        GetTaskTemplateResponseConstraints.validateJsonElement(jsonObj.get("Constraints"));
      }
      // validate the optional field `Defaults`
      if (jsonObj.get("Defaults") != null && !jsonObj.get("Defaults").isJsonNull()) {
        GetTaskTemplateResponseDefaults.validateJsonElement(jsonObj.get("Defaults"));
      }
      // validate the optional field `Fields`
      if (jsonObj.get("Fields") != null && !jsonObj.get("Fields").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Fields"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TaskTemplateStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateTaskTemplateResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateTaskTemplateResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateTaskTemplateResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateTaskTemplateResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateTaskTemplateResponse>() {
           @Override
           public void write(JsonWriter out, UpdateTaskTemplateResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateTaskTemplateResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateTaskTemplateResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateTaskTemplateResponse
   * @throws IOException if the JSON string is invalid with respect to UpdateTaskTemplateResponse
   */
  public static UpdateTaskTemplateResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateTaskTemplateResponse.class);
  }

  /**
   * Convert an instance of UpdateTaskTemplateResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

