/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CreateQueueRequestOutboundCallerConfig;
import org.openapitools.client.model.QueueStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeQueueResponseQueue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeQueueResponseQueue {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_QUEUE_ARN = "QueueArn";
  @SerializedName(SERIALIZED_NAME_QUEUE_ARN)
  private String queueArn;

  public static final String SERIALIZED_NAME_QUEUE_ID = "QueueId";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  private String queueId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_OUTBOUND_CALLER_CONFIG = "OutboundCallerConfig";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_CALLER_CONFIG)
  private CreateQueueRequestOutboundCallerConfig outboundCallerConfig;

  public static final String SERIALIZED_NAME_HOURS_OF_OPERATION_ID = "HoursOfOperationId";
  @SerializedName(SERIALIZED_NAME_HOURS_OF_OPERATION_ID)
  private String hoursOfOperationId;

  public static final String SERIALIZED_NAME_MAX_CONTACTS = "MaxContacts";
  @SerializedName(SERIALIZED_NAME_MAX_CONTACTS)
  private Integer maxContacts;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private QueueStatus status;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public DescribeQueueResponseQueue() {
  }

  public DescribeQueueResponseQueue name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeQueueResponseQueue queueArn(String queueArn) {
    this.queueArn = queueArn;
    return this;
  }

  /**
   * Get queueArn
   * @return queueArn
   */
  @javax.annotation.Nullable
  public String getQueueArn() {
    return queueArn;
  }

  public void setQueueArn(String queueArn) {
    this.queueArn = queueArn;
  }


  public DescribeQueueResponseQueue queueId(String queueId) {
    this.queueId = queueId;
    return this;
  }

  /**
   * Get queueId
   * @return queueId
   */
  @javax.annotation.Nullable
  public String getQueueId() {
    return queueId;
  }

  public void setQueueId(String queueId) {
    this.queueId = queueId;
  }


  public DescribeQueueResponseQueue description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeQueueResponseQueue outboundCallerConfig(CreateQueueRequestOutboundCallerConfig outboundCallerConfig) {
    this.outboundCallerConfig = outboundCallerConfig;
    return this;
  }

  /**
   * Get outboundCallerConfig
   * @return outboundCallerConfig
   */
  @javax.annotation.Nullable
  public CreateQueueRequestOutboundCallerConfig getOutboundCallerConfig() {
    return outboundCallerConfig;
  }

  public void setOutboundCallerConfig(CreateQueueRequestOutboundCallerConfig outboundCallerConfig) {
    this.outboundCallerConfig = outboundCallerConfig;
  }


  public DescribeQueueResponseQueue hoursOfOperationId(String hoursOfOperationId) {
    this.hoursOfOperationId = hoursOfOperationId;
    return this;
  }

  /**
   * Get hoursOfOperationId
   * @return hoursOfOperationId
   */
  @javax.annotation.Nullable
  public String getHoursOfOperationId() {
    return hoursOfOperationId;
  }

  public void setHoursOfOperationId(String hoursOfOperationId) {
    this.hoursOfOperationId = hoursOfOperationId;
  }


  public DescribeQueueResponseQueue maxContacts(Integer maxContacts) {
    this.maxContacts = maxContacts;
    return this;
  }

  /**
   * Get maxContacts
   * @return maxContacts
   */
  @javax.annotation.Nullable
  public Integer getMaxContacts() {
    return maxContacts;
  }

  public void setMaxContacts(Integer maxContacts) {
    this.maxContacts = maxContacts;
  }


  public DescribeQueueResponseQueue status(QueueStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public QueueStatus getStatus() {
    return status;
  }

  public void setStatus(QueueStatus status) {
    this.status = status;
  }


  public DescribeQueueResponseQueue tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeQueueResponseQueue describeQueueResponseQueue = (DescribeQueueResponseQueue) o;
    return Objects.equals(this.name, describeQueueResponseQueue.name) &&
        Objects.equals(this.queueArn, describeQueueResponseQueue.queueArn) &&
        Objects.equals(this.queueId, describeQueueResponseQueue.queueId) &&
        Objects.equals(this.description, describeQueueResponseQueue.description) &&
        Objects.equals(this.outboundCallerConfig, describeQueueResponseQueue.outboundCallerConfig) &&
        Objects.equals(this.hoursOfOperationId, describeQueueResponseQueue.hoursOfOperationId) &&
        Objects.equals(this.maxContacts, describeQueueResponseQueue.maxContacts) &&
        Objects.equals(this.status, describeQueueResponseQueue.status) &&
        Objects.equals(this.tags, describeQueueResponseQueue.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, queueArn, queueId, description, outboundCallerConfig, hoursOfOperationId, maxContacts, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeQueueResponseQueue {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    queueArn: ").append(toIndentedString(queueArn)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    outboundCallerConfig: ").append(toIndentedString(outboundCallerConfig)).append("\n");
    sb.append("    hoursOfOperationId: ").append(toIndentedString(hoursOfOperationId)).append("\n");
    sb.append("    maxContacts: ").append(toIndentedString(maxContacts)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("QueueArn");
    openapiFields.add("QueueId");
    openapiFields.add("Description");
    openapiFields.add("OutboundCallerConfig");
    openapiFields.add("HoursOfOperationId");
    openapiFields.add("MaxContacts");
    openapiFields.add("Status");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeQueueResponseQueue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeQueueResponseQueue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeQueueResponseQueue is not found in the empty JSON string", DescribeQueueResponseQueue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeQueueResponseQueue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeQueueResponseQueue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `QueueArn`
      if (jsonObj.get("QueueArn") != null && !jsonObj.get("QueueArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QueueArn"));
      }
      // validate the optional field `QueueId`
      if (jsonObj.get("QueueId") != null && !jsonObj.get("QueueId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QueueId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `OutboundCallerConfig`
      if (jsonObj.get("OutboundCallerConfig") != null && !jsonObj.get("OutboundCallerConfig").isJsonNull()) {
        CreateQueueRequestOutboundCallerConfig.validateJsonElement(jsonObj.get("OutboundCallerConfig"));
      }
      // validate the optional field `HoursOfOperationId`
      if (jsonObj.get("HoursOfOperationId") != null && !jsonObj.get("HoursOfOperationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HoursOfOperationId"));
      }
      // validate the optional field `MaxContacts`
      if (jsonObj.get("MaxContacts") != null && !jsonObj.get("MaxContacts").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxContacts"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        QueueStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeQueueResponseQueue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeQueueResponseQueue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeQueueResponseQueue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeQueueResponseQueue.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeQueueResponseQueue>() {
           @Override
           public void write(JsonWriter out, DescribeQueueResponseQueue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeQueueResponseQueue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeQueueResponseQueue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeQueueResponseQueue
   * @throws IOException if the JSON string is invalid with respect to DescribeQueueResponseQueue
   */
  public static DescribeQueueResponseQueue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeQueueResponseQueue.class);
  }

  /**
   * Convert an instance of DescribeQueueResponseQueue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

