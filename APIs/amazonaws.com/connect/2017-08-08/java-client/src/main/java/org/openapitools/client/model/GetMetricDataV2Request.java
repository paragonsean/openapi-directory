/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FilterV2;
import org.openapitools.client.model.MetricV2;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMetricDataV2Request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:13.911190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMetricDataV2Request {
  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_FILTERS = "Filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<FilterV2> filters = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUPINGS = "Groupings";
  @SerializedName(SERIALIZED_NAME_GROUPINGS)
  private List<String> groupings = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<MetricV2> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public GetMetricDataV2Request() {
  }

  public GetMetricDataV2Request resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the resource. This includes the &lt;code&gt;instanceId&lt;/code&gt; an Amazon Connect instance.
   * @return resourceArn
   */
  @javax.annotation.Nonnull
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public GetMetricDataV2Request startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 35 days before the time of the request. Historical metrics are available for 35 days.
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetMetricDataV2Request endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * &lt;p&gt;The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.&lt;/p&gt; &lt;p&gt;The time range between the start and end time must be less than 24 hours.&lt;/p&gt;
   * @return endTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public GetMetricDataV2Request filters(List<FilterV2> filters) {
    this.filters = filters;
    return this;
  }

  public GetMetricDataV2Request addFiltersItem(FilterV2 filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

  /**
   * &lt;p&gt;The filters to apply to returned metrics. You can filter on the following resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Queues&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Routing profiles&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Agents&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Channels&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;User hierarchy groups&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Feature&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.&lt;/p&gt; &lt;p&gt;To filter by phone number, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html\&quot;&gt;Create a historical metrics report&lt;/a&gt; in the &lt;i&gt;Amazon Connect Administrator&#39;s Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Note the following limits:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Filter keys&lt;/b&gt;: A maximum of 5 filter keys are supported in a single request. Valid filter keys: &lt;code&gt;QUEUE&lt;/code&gt; | &lt;code&gt;ROUTING_PROFILE&lt;/code&gt; | &lt;code&gt;AGENT&lt;/code&gt; | &lt;code&gt;CHANNEL&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_ONE&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_TWO&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_THREE&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_FOUR&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_FIVE&lt;/code&gt; | &lt;code&gt;FEATURE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Filter values&lt;/b&gt;: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid &lt;code&gt;filterValue&lt;/code&gt; for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. &lt;/p&gt; &lt;p&gt; &lt;code&gt;contact_lens_conversational_analytics&lt;/code&gt; is a valid filterValue for the &lt;code&gt;FEATURE&lt;/code&gt; filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return filters
   */
  @javax.annotation.Nonnull
  public List<FilterV2> getFilters() {
    return filters;
  }

  public void setFilters(List<FilterV2> filters) {
    this.filters = filters;
  }


  public GetMetricDataV2Request groupings(List<String> groupings) {
    this.groupings = groupings;
    return this;
  }

  public GetMetricDataV2Request addGroupingsItem(String groupingsItem) {
    if (this.groupings == null) {
      this.groupings = new ArrayList<>();
    }
    this.groupings.add(groupingsItem);
    return this;
  }

  /**
   * &lt;p&gt;The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.&lt;/p&gt; &lt;p&gt;If no grouping is specified, a summary of all metrics is returned.&lt;/p&gt; &lt;p&gt;Valid grouping keys: &lt;code&gt;QUEUE&lt;/code&gt; | &lt;code&gt;ROUTING_PROFILE&lt;/code&gt; | &lt;code&gt;AGENT&lt;/code&gt; | &lt;code&gt;CHANNEL&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_ONE&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_TWO&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_THREE&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_FOUR&lt;/code&gt; | &lt;code&gt;AGENT_HIERARCHY_LEVEL_FIVE&lt;/code&gt; &lt;/p&gt;
   * @return groupings
   */
  @javax.annotation.Nullable
  public List<String> getGroupings() {
    return groupings;
  }

  public void setGroupings(List<String> groupings) {
    this.groupings = groupings;
  }


  public GetMetricDataV2Request metrics(List<MetricV2> metrics) {
    this.metrics = metrics;
    return this;
  }

  public GetMetricDataV2Request addMetricsItem(MetricV2 metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * &lt;p&gt;The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html\&quot;&gt;Historical metrics definitions&lt;/a&gt; in the &lt;i&gt;Amazon Connect Administrator&#39;s Guide&lt;/i&gt;.&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;AGENT_ADHERENT_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only in Amazon Web Services Regions where &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region\&quot;&gt;Forecasting, capacity planning, and scheduling&lt;/a&gt; is available.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AGENT_NON_RESPONSE&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AGENT_OCCUPANCY&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Percentage&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AGENT_SCHEDULE_ADHERENCE&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only in Amazon Web Services Regions where &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region\&quot;&gt;Forecasting, capacity planning, and scheduling&lt;/a&gt; is available.&lt;/p&gt; &lt;p&gt;Unit: Percent&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AGENT_SCHEDULED_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only in Amazon Web Services Regions where &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region\&quot;&gt;Forecasting, capacity planning, and scheduling&lt;/a&gt; is available.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_ABANDON_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_AFTER_CONTACT_WORK_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_AGENT_CONNECTING_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid metric filter key: &lt;code&gt;INITIATION_METHOD&lt;/code&gt;. For now, this metric only supports the following as &lt;code&gt;INITIATION_METHOD&lt;/code&gt;: &lt;code&gt;INBOUND&lt;/code&gt; | &lt;code&gt;OUTBOUND&lt;/code&gt; | &lt;code&gt;CALLBACK&lt;/code&gt; | &lt;code&gt;API&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_AGENT_CONNECTING_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid metric filter key: &lt;code&gt;INITIATION_METHOD&lt;/code&gt;. For now, this metric only supports the following as &lt;code&gt;INITIATION_METHOD&lt;/code&gt;: &lt;code&gt;INBOUND&lt;/code&gt; | &lt;code&gt;OUTBOUND&lt;/code&gt; | &lt;code&gt;CALLBACK&lt;/code&gt; | &lt;code&gt;API&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_CONTACT_DURATION&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_CONVERSATION_DURATION&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_GREETING_TIME_AGENT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_HANDLE_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_HOLD_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_HOLDS&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_INTERACTION_AND_HOLD_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_INTERACTION_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_INTERRUPTIONS_AGENT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_INTERRUPTION_TIME_AGENT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_NON_TALK_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_QUEUE_ANSWER_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;AVG_TALK_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_TALK_TIME_AGENT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;AVG_TALK_TIME_CUSTOMER&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This metric is available only for contacts analyzed by Contact Lens conversational analytics.&lt;/p&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_ABANDONED&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_CREATED&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid metric filter key: &lt;code&gt;INITIATION_METHOD&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_HANDLED&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid metric filter key: &lt;code&gt;INITIATION_METHOD&lt;/code&gt;, &lt;code&gt;DISCONNECT_REASON&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_HOLD_ABANDONS&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_QUEUED&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_TRANSFERRED_OUT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature&lt;/p&gt; &lt;note&gt; &lt;p&gt;Feature is a valid filter but not a valid grouping.&lt;/p&gt; &lt;/note&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_TRANSFERRED_OUT_BY_AGENT&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;CONTACTS_TRANSFERRED_OUT_FROM_QUEUE&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;MAX_QUEUED_TIME&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Seconds&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;SERVICE_LEVEL&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;You can include up to 20 SERVICE_LEVEL metrics in a request.&lt;/p&gt; &lt;p&gt;Unit: Percent&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile&lt;/p&gt; &lt;p&gt;Threshold: For &lt;code&gt;ThresholdValue&lt;/code&gt;, enter any whole number from 1 to 604800 (inclusive), in seconds. For &lt;code&gt;Comparison&lt;/code&gt;, you must enter &lt;code&gt;LT&lt;/code&gt; (for \&quot;Less than\&quot;). &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;SUM_CONTACTS_ANSWERED_IN_X&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile&lt;/p&gt; &lt;p&gt;Threshold: For &lt;code&gt;ThresholdValue&lt;/code&gt;, enter any whole number from 1 to 604800 (inclusive), in seconds. For &lt;code&gt;Comparison&lt;/code&gt;, you must enter &lt;code&gt;LT&lt;/code&gt; (for \&quot;Less than\&quot;). &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;SUM_CONTACTS_ABANDONED_IN_X&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile&lt;/p&gt; &lt;p&gt;Threshold: For &lt;code&gt;ThresholdValue&lt;/code&gt;, enter any whole number from 1 to 604800 (inclusive), in seconds. For &lt;code&gt;Comparison&lt;/code&gt;, you must enter &lt;code&gt;LT&lt;/code&gt; (for \&quot;Less than\&quot;). &lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;SUM_CONTACTS_DISCONNECTED &lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Valid metric filter key: &lt;code&gt;DISCONNECT_REASON&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;SUM_RETRY_CALLBACK_ATTEMPTS&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Unit: Count&lt;/p&gt; &lt;p&gt;Valid groupings and filters: Queue, Channel, Routing Profile&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;
   * @return metrics
   */
  @javax.annotation.Nonnull
  public List<MetricV2> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<MetricV2> metrics) {
    this.metrics = metrics;
  }


  public GetMetricDataV2Request nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public GetMetricDataV2Request maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * The maximum number of results to return per page.
   * minimum: 1
   * maximum: 100
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMetricDataV2Request getMetricDataV2Request = (GetMetricDataV2Request) o;
    return Objects.equals(this.resourceArn, getMetricDataV2Request.resourceArn) &&
        Objects.equals(this.startTime, getMetricDataV2Request.startTime) &&
        Objects.equals(this.endTime, getMetricDataV2Request.endTime) &&
        Objects.equals(this.filters, getMetricDataV2Request.filters) &&
        Objects.equals(this.groupings, getMetricDataV2Request.groupings) &&
        Objects.equals(this.metrics, getMetricDataV2Request.metrics) &&
        Objects.equals(this.nextToken, getMetricDataV2Request.nextToken) &&
        Objects.equals(this.maxResults, getMetricDataV2Request.maxResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceArn, startTime, endTime, filters, groupings, metrics, nextToken, maxResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMetricDataV2Request {\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    groupings: ").append(toIndentedString(groupings)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ResourceArn");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("Filters");
    openapiFields.add("Groupings");
    openapiFields.add("Metrics");
    openapiFields.add("NextToken");
    openapiFields.add("MaxResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ResourceArn");
    openapiRequiredFields.add("StartTime");
    openapiRequiredFields.add("EndTime");
    openapiRequiredFields.add("Filters");
    openapiRequiredFields.add("Metrics");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMetricDataV2Request
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMetricDataV2Request.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMetricDataV2Request is not found in the empty JSON string", GetMetricDataV2Request.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMetricDataV2Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMetricDataV2Request` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetMetricDataV2Request.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ResourceArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ResourceArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ResourceArn").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("Filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Filters` to be an array in the JSON string but got `%s`", jsonObj.get("Filters").toString()));
      }

      JsonArray jsonArrayfilters = jsonObj.getAsJsonArray("Filters");
      // validate the required field `Filters` (array)
      for (int i = 0; i < jsonArrayfilters.size(); i++) {
        FilterV2.validateJsonElement(jsonArrayfilters.get(i));
      };
      // ensure the optional json data is an array if present
      if (jsonObj.get("Groupings") != null && !jsonObj.get("Groupings").isJsonNull() && !jsonObj.get("Groupings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Groupings` to be an array in the JSON string but got `%s`", jsonObj.get("Groupings").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("Metrics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Metrics` to be an array in the JSON string but got `%s`", jsonObj.get("Metrics").toString()));
      }

      JsonArray jsonArraymetrics = jsonObj.getAsJsonArray("Metrics");
      // validate the required field `Metrics` (array)
      for (int i = 0; i < jsonArraymetrics.size(); i++) {
        MetricV2.validateJsonElement(jsonArraymetrics.get(i));
      };
      if ((jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) && !jsonObj.get("NextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NextToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMetricDataV2Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMetricDataV2Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMetricDataV2Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMetricDataV2Request.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMetricDataV2Request>() {
           @Override
           public void write(JsonWriter out, GetMetricDataV2Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMetricDataV2Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMetricDataV2Request given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMetricDataV2Request
   * @throws IOException if the JSON string is invalid with respect to GetMetricDataV2Request
   */
  public static GetMetricDataV2Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMetricDataV2Request.class);
  }

  /**
   * Convert an instance of GetMetricDataV2Request to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

