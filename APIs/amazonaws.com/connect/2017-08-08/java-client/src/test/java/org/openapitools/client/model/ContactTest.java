/*
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.ContactAgentInfo;
import org.openapitools.client.model.ContactInitiationMethod;
import org.openapitools.client.model.ContactQueueInfo;
import org.openapitools.client.model.ContactWisdomInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Contact
 */
public class ContactTest {
    private final Contact model = new Contact();

    /**
     * Model tests for Contact
     */
    @Test
    public void testContact() {
        // TODO: test Contact
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'initialContactId'
     */
    @Test
    public void initialContactIdTest() {
        // TODO: test initialContactId
    }

    /**
     * Test the property 'previousContactId'
     */
    @Test
    public void previousContactIdTest() {
        // TODO: test previousContactId
    }

    /**
     * Test the property 'initiationMethod'
     */
    @Test
    public void initiationMethodTest() {
        // TODO: test initiationMethod
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'queueInfo'
     */
    @Test
    public void queueInfoTest() {
        // TODO: test queueInfo
    }

    /**
     * Test the property 'agentInfo'
     */
    @Test
    public void agentInfoTest() {
        // TODO: test agentInfo
    }

    /**
     * Test the property 'initiationTimestamp'
     */
    @Test
    public void initiationTimestampTest() {
        // TODO: test initiationTimestamp
    }

    /**
     * Test the property 'disconnectTimestamp'
     */
    @Test
    public void disconnectTimestampTest() {
        // TODO: test disconnectTimestamp
    }

    /**
     * Test the property 'lastUpdateTimestamp'
     */
    @Test
    public void lastUpdateTimestampTest() {
        // TODO: test lastUpdateTimestamp
    }

    /**
     * Test the property 'scheduledTimestamp'
     */
    @Test
    public void scheduledTimestampTest() {
        // TODO: test scheduledTimestamp
    }

    /**
     * Test the property 'relatedContactId'
     */
    @Test
    public void relatedContactIdTest() {
        // TODO: test relatedContactId
    }

    /**
     * Test the property 'wisdomInfo'
     */
    @Test
    public void wisdomInfoTest() {
        // TODO: test wisdomInfo
    }

}
