/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetTaskTemplateResponse_Defaults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetTaskTemplateResponse_Defaults::OAIGetTaskTemplateResponse_Defaults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetTaskTemplateResponse_Defaults::OAIGetTaskTemplateResponse_Defaults() {
    this->initializeModel();
}

OAIGetTaskTemplateResponse_Defaults::~OAIGetTaskTemplateResponse_Defaults() {}

void OAIGetTaskTemplateResponse_Defaults::initializeModel() {

    m_default_field_values_isSet = false;
    m_default_field_values_isValid = false;
}

void OAIGetTaskTemplateResponse_Defaults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetTaskTemplateResponse_Defaults::fromJsonObject(QJsonObject json) {

    m_default_field_values_isValid = ::OpenAPI::fromJsonValue(m_default_field_values, json[QString("DefaultFieldValues")]);
    m_default_field_values_isSet = !json[QString("DefaultFieldValues")].isNull() && m_default_field_values_isValid;
}

QString OAIGetTaskTemplateResponse_Defaults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetTaskTemplateResponse_Defaults::asJsonObject() const {
    QJsonObject obj;
    if (m_default_field_values.isSet()) {
        obj.insert(QString("DefaultFieldValues"), ::OpenAPI::toJsonValue(m_default_field_values));
    }
    return obj;
}

QList OAIGetTaskTemplateResponse_Defaults::getDefaultFieldValues() const {
    return m_default_field_values;
}
void OAIGetTaskTemplateResponse_Defaults::setDefaultFieldValues(const QList &default_field_values) {
    m_default_field_values = default_field_values;
    m_default_field_values_isSet = true;
}

bool OAIGetTaskTemplateResponse_Defaults::is_default_field_values_Set() const{
    return m_default_field_values_isSet;
}

bool OAIGetTaskTemplateResponse_Defaults::is_default_field_values_Valid() const{
    return m_default_field_values_isValid;
}

bool OAIGetTaskTemplateResponse_Defaults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_field_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetTaskTemplateResponse_Defaults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
