/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeContactFlowModuleResponse_ContactFlowModule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeContactFlowModuleResponse_ContactFlowModule::OAIDescribeContactFlowModuleResponse_ContactFlowModule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeContactFlowModuleResponse_ContactFlowModule::OAIDescribeContactFlowModuleResponse_ContactFlowModule() {
    this->initializeModel();
}

OAIDescribeContactFlowModuleResponse_ContactFlowModule::~OAIDescribeContactFlowModuleResponse_ContactFlowModule() {}

void OAIDescribeContactFlowModuleResponse_ContactFlowModule::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIDescribeContactFlowModuleResponse_ContactFlowModule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeContactFlowModuleResponse_ContactFlowModule::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeContactFlowModuleResponse_ContactFlowModule::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_content_isSet) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::getArn() const {
    return m_arn;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::getId() const {
    return m_id;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::getName() const {
    return m_name;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::getContent() const {
    return m_content;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_content_Set() const{
    return m_content_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIDescribeContactFlowModuleResponse_ContactFlowModule::getDescription() const {
    return m_description;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_description_Valid() const{
    return m_description_isValid;
}

OAIContactFlowModuleState OAIDescribeContactFlowModuleResponse_ContactFlowModule::getState() const {
    return m_state;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setState(const OAIContactFlowModuleState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_state_Valid() const{
    return m_state_isValid;
}

OAIContactFlowModuleStatus OAIDescribeContactFlowModuleResponse_ContactFlowModule::getStatus() const {
    return m_status;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setStatus(const OAIContactFlowModuleStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_status_Valid() const{
    return m_status_isValid;
}

QMap OAIDescribeContactFlowModuleResponse_ContactFlowModule::getTags() const {
    return m_tags;
}
void OAIDescribeContactFlowModuleResponse_ContactFlowModule::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeContactFlowModuleResponse_ContactFlowModule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
