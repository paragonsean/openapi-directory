/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserData.h
 *
 * Data for a user.
 */

#ifndef OAIUserData_H
#define OAIUserData_H

#include <QJsonObject>

#include "OAIUserData_HierarchyPath.h"
#include "OAIUserData_RoutingProfile.h"
#include "OAIUserData_Status.h"
#include "OAIUserData_User.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserData_User;
class OAIUserData_RoutingProfile;
class OAIUserData_HierarchyPath;
class OAIUserData_Status;

class OAIUserData : public OAIObject {
public:
    OAIUserData();
    OAIUserData(QString json);
    ~OAIUserData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserData_User getUser() const;
    void setUser(const OAIUserData_User &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    OAIUserData_RoutingProfile getRoutingProfile() const;
    void setRoutingProfile(const OAIUserData_RoutingProfile &routing_profile);
    bool is_routing_profile_Set() const;
    bool is_routing_profile_Valid() const;

    OAIUserData_HierarchyPath getHierarchyPath() const;
    void setHierarchyPath(const OAIUserData_HierarchyPath &hierarchy_path);
    bool is_hierarchy_path_Set() const;
    bool is_hierarchy_path_Valid() const;

    OAIUserData_Status getStatus() const;
    void setStatus(const OAIUserData_Status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getAvailableSlotsByChannel() const;
    void setAvailableSlotsByChannel(const QMap &available_slots_by_channel);
    bool is_available_slots_by_channel_Set() const;
    bool is_available_slots_by_channel_Valid() const;

    QMap getMaxSlotsByChannel() const;
    void setMaxSlotsByChannel(const QMap &max_slots_by_channel);
    bool is_max_slots_by_channel_Set() const;
    bool is_max_slots_by_channel_Valid() const;

    QMap getActiveSlotsByChannel() const;
    void setActiveSlotsByChannel(const QMap &active_slots_by_channel);
    bool is_active_slots_by_channel_Set() const;
    bool is_active_slots_by_channel_Valid() const;

    QList getContacts() const;
    void setContacts(const QList &contacts);
    bool is_contacts_Set() const;
    bool is_contacts_Valid() const;

    QString getNextStatus() const;
    void setNextStatus(const QString &next_status);
    bool is_next_status_Set() const;
    bool is_next_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserData_User m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    OAIUserData_RoutingProfile m_routing_profile;
    bool m_routing_profile_isSet;
    bool m_routing_profile_isValid;

    OAIUserData_HierarchyPath m_hierarchy_path;
    bool m_hierarchy_path_isSet;
    bool m_hierarchy_path_isValid;

    OAIUserData_Status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_available_slots_by_channel;
    bool m_available_slots_by_channel_isSet;
    bool m_available_slots_by_channel_isValid;

    QMap m_max_slots_by_channel;
    bool m_max_slots_by_channel_isSet;
    bool m_max_slots_by_channel_isValid;

    QMap m_active_slots_by_channel;
    bool m_active_slots_by_channel_isSet;
    bool m_active_slots_by_channel_isValid;

    QList m_contacts;
    bool m_contacts_isSet;
    bool m_contacts_isValid;

    QString m_next_status;
    bool m_next_status_isSet;
    bool m_next_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserData)

#endif // OAIUserData_H
