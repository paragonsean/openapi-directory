/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHoursOfOperationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHoursOfOperationRequest::OAICreateHoursOfOperationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHoursOfOperationRequest::OAICreateHoursOfOperationRequest() {
    this->initializeModel();
}

OAICreateHoursOfOperationRequest::~OAICreateHoursOfOperationRequest() {}

void OAICreateHoursOfOperationRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateHoursOfOperationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHoursOfOperationRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("TimeZone")]);
    m_time_zone_isSet = !json[QString("TimeZone")].isNull() && m_time_zone_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("Config")]);
    m_config_isSet = !json[QString("Config")].isNull() && m_config_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateHoursOfOperationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHoursOfOperationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("TimeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_config.isSet()) {
        obj.insert(QString("Config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateHoursOfOperationRequest::getName() const {
    return m_name;
}
void OAICreateHoursOfOperationRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateHoursOfOperationRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateHoursOfOperationRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateHoursOfOperationRequest::getDescription() const {
    return m_description;
}
void OAICreateHoursOfOperationRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateHoursOfOperationRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateHoursOfOperationRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateHoursOfOperationRequest::getTimeZone() const {
    return m_time_zone;
}
void OAICreateHoursOfOperationRequest::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAICreateHoursOfOperationRequest::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAICreateHoursOfOperationRequest::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QList OAICreateHoursOfOperationRequest::getConfig() const {
    return m_config;
}
void OAICreateHoursOfOperationRequest::setConfig(const QList &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAICreateHoursOfOperationRequest::is_config_Set() const{
    return m_config_isSet;
}

bool OAICreateHoursOfOperationRequest::is_config_Valid() const{
    return m_config_isValid;
}

QMap OAICreateHoursOfOperationRequest::getTags() const {
    return m_tags;
}
void OAICreateHoursOfOperationRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateHoursOfOperationRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateHoursOfOperationRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateHoursOfOperationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHoursOfOperationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_time_zone_isValid && m_config_isValid && true;
}

} // namespace OpenAPI
