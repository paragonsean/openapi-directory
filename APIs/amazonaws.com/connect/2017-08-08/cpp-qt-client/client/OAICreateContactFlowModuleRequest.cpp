/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContactFlowModuleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContactFlowModuleRequest::OAICreateContactFlowModuleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContactFlowModuleRequest::OAICreateContactFlowModuleRequest() {
    this->initializeModel();
}

OAICreateContactFlowModuleRequest::~OAICreateContactFlowModuleRequest() {}

void OAICreateContactFlowModuleRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAICreateContactFlowModuleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContactFlowModuleRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;
}

QString OAICreateContactFlowModuleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContactFlowModuleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_content_isSet) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QString OAICreateContactFlowModuleRequest::getName() const {
    return m_name;
}
void OAICreateContactFlowModuleRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateContactFlowModuleRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateContactFlowModuleRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateContactFlowModuleRequest::getDescription() const {
    return m_description;
}
void OAICreateContactFlowModuleRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateContactFlowModuleRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateContactFlowModuleRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateContactFlowModuleRequest::getContent() const {
    return m_content;
}
void OAICreateContactFlowModuleRequest::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAICreateContactFlowModuleRequest::is_content_Set() const{
    return m_content_isSet;
}

bool OAICreateContactFlowModuleRequest::is_content_Valid() const{
    return m_content_isValid;
}

QMap OAICreateContactFlowModuleRequest::getTags() const {
    return m_tags;
}
void OAICreateContactFlowModuleRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateContactFlowModuleRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateContactFlowModuleRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAICreateContactFlowModuleRequest::getClientToken() const {
    return m_client_token;
}
void OAICreateContactFlowModuleRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateContactFlowModuleRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateContactFlowModuleRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAICreateContactFlowModuleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContactFlowModuleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_content_isValid && true;
}

} // namespace OpenAPI
