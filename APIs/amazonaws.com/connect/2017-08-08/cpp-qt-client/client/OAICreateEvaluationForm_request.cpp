/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateEvaluationForm_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateEvaluationForm_request::OAICreateEvaluationForm_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateEvaluationForm_request::OAICreateEvaluationForm_request() {
    this->initializeModel();
}

OAICreateEvaluationForm_request::~OAICreateEvaluationForm_request() {}

void OAICreateEvaluationForm_request::initializeModel() {

    m_title_isSet = false;
    m_title_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_scoring_strategy_isSet = false;
    m_scoring_strategy_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAICreateEvaluationForm_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateEvaluationForm_request::fromJsonObject(QJsonObject json) {

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_scoring_strategy_isValid = ::OpenAPI::fromJsonValue(m_scoring_strategy, json[QString("ScoringStrategy")]);
    m_scoring_strategy_isSet = !json[QString("ScoringStrategy")].isNull() && m_scoring_strategy_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;
}

QString OAICreateEvaluationForm_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateEvaluationForm_request::asJsonObject() const {
    QJsonObject obj;
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_scoring_strategy.isSet()) {
        obj.insert(QString("ScoringStrategy"), ::OpenAPI::toJsonValue(m_scoring_strategy));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QString OAICreateEvaluationForm_request::getTitle() const {
    return m_title;
}
void OAICreateEvaluationForm_request::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICreateEvaluationForm_request::is_title_Set() const{
    return m_title_isSet;
}

bool OAICreateEvaluationForm_request::is_title_Valid() const{
    return m_title_isValid;
}

QString OAICreateEvaluationForm_request::getDescription() const {
    return m_description;
}
void OAICreateEvaluationForm_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateEvaluationForm_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateEvaluationForm_request::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIEvaluationFormItem> OAICreateEvaluationForm_request::getItems() const {
    return m_items;
}
void OAICreateEvaluationForm_request::setItems(const QList<OAIEvaluationFormItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAICreateEvaluationForm_request::is_items_Set() const{
    return m_items_isSet;
}

bool OAICreateEvaluationForm_request::is_items_Valid() const{
    return m_items_isValid;
}

OAICreateEvaluationForm_request_ScoringStrategy OAICreateEvaluationForm_request::getScoringStrategy() const {
    return m_scoring_strategy;
}
void OAICreateEvaluationForm_request::setScoringStrategy(const OAICreateEvaluationForm_request_ScoringStrategy &scoring_strategy) {
    m_scoring_strategy = scoring_strategy;
    m_scoring_strategy_isSet = true;
}

bool OAICreateEvaluationForm_request::is_scoring_strategy_Set() const{
    return m_scoring_strategy_isSet;
}

bool OAICreateEvaluationForm_request::is_scoring_strategy_Valid() const{
    return m_scoring_strategy_isValid;
}

QString OAICreateEvaluationForm_request::getClientToken() const {
    return m_client_token;
}
void OAICreateEvaluationForm_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateEvaluationForm_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateEvaluationForm_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAICreateEvaluationForm_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scoring_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateEvaluationForm_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_isValid && m_items_isValid && true;
}

} // namespace OpenAPI
