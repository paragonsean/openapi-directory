/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPersistentChat.h
 *
 * Enable persistent chats. For more information about enabling persistent chat, and for example use cases and how to configure for them, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html\&quot;&gt;Enable persistent chat&lt;/a&gt;.
 */

#ifndef OAIPersistentChat_H
#define OAIPersistentChat_H

#include <QJsonObject>

#include "OAIRehydrationType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPersistentChat : public OAIObject {
public:
    OAIPersistentChat();
    OAIPersistentChat(QString json);
    ~OAIPersistentChat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRehydrationType getRehydrationType() const;
    void setRehydrationType(const OAIRehydrationType &rehydration_type);
    bool is_rehydration_type_Set() const;
    bool is_rehydration_type_Valid() const;

    QString getSourceContactId() const;
    void setSourceContactId(const QString &source_contact_id);
    bool is_source_contact_id_Set() const;
    bool is_source_contact_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRehydrationType m_rehydration_type;
    bool m_rehydration_type_isSet;
    bool m_rehydration_type_isValid;

    QString m_source_contact_id;
    bool m_source_contact_id_isSet;
    bool m_source_contact_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPersistentChat)

#endif // OAIPersistentChat_H
