/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILexBotConfig.h
 *
 * Configuration information of an Amazon Lex or Amazon Lex V2 bot.
 */

#ifndef OAILexBotConfig_H
#define OAILexBotConfig_H

#include <QJsonObject>

#include "OAILexBot.h"
#include "OAILexBotConfig_LexV2Bot.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILexBot;
class OAILexBotConfig_LexV2Bot;

class OAILexBotConfig : public OAIObject {
public:
    OAILexBotConfig();
    OAILexBotConfig(QString json);
    ~OAILexBotConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILexBot getLexBot() const;
    void setLexBot(const OAILexBot &lex_bot);
    bool is_lex_bot_Set() const;
    bool is_lex_bot_Valid() const;

    OAILexBotConfig_LexV2Bot getLexV2Bot() const;
    void setLexV2Bot(const OAILexBotConfig_LexV2Bot &lex_v2_bot);
    bool is_lex_v2_bot_Set() const;
    bool is_lex_v2_bot_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILexBot m_lex_bot;
    bool m_lex_bot_isSet;
    bool m_lex_bot_isValid;

    OAILexBotConfig_LexV2Bot m_lex_v2_bot;
    bool m_lex_v2_bot_isSet;
    bool m_lex_v2_bot_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILexBotConfig)

#endif // OAILexBotConfig_H
