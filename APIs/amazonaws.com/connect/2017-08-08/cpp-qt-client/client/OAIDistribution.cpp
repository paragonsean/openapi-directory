/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistribution::OAIDistribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistribution::OAIDistribution() {
    this->initializeModel();
}

OAIDistribution::~OAIDistribution() {}

void OAIDistribution::initializeModel() {

    m_region_isSet = false;
    m_region_isValid = false;

    m_percentage_isSet = false;
    m_percentage_isValid = false;
}

void OAIDistribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistribution::fromJsonObject(QJsonObject json) {

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("Region")]);
    m_region_isSet = !json[QString("Region")].isNull() && m_region_isValid;

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("Percentage")]);
    m_percentage_isSet = !json[QString("Percentage")].isNull() && m_percentage_isValid;
}

QString OAIDistribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistribution::asJsonObject() const {
    QJsonObject obj;
    if (m_region_isSet) {
        obj.insert(QString("Region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_percentage_isSet) {
        obj.insert(QString("Percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    return obj;
}

QString OAIDistribution::getRegion() const {
    return m_region;
}
void OAIDistribution::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIDistribution::is_region_Set() const{
    return m_region_isSet;
}

bool OAIDistribution::is_region_Valid() const{
    return m_region_isValid;
}

qint32 OAIDistribution::getPercentage() const {
    return m_percentage;
}
void OAIDistribution::setPercentage(const qint32 &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAIDistribution::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAIDistribution::is_percentage_Valid() const{
    return m_percentage_isValid;
}

bool OAIDistribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_region_isValid && m_percentage_isValid && true;
}

} // namespace OpenAPI
