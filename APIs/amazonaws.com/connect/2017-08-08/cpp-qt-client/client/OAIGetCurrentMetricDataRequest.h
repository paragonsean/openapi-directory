/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCurrentMetricDataRequest.h
 *
 * 
 */

#ifndef OAIGetCurrentMetricDataRequest_H
#define OAIGetCurrentMetricDataRequest_H

#include <QJsonObject>

#include "OAIGetCurrentMetricDataRequest_Filters.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetCurrentMetricDataRequest_Filters;

class OAIGetCurrentMetricDataRequest : public OAIObject {
public:
    OAIGetCurrentMetricDataRequest();
    OAIGetCurrentMetricDataRequest(QString json);
    ~OAIGetCurrentMetricDataRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetCurrentMetricDataRequest_Filters getFilters() const;
    void setFilters(const OAIGetCurrentMetricDataRequest_Filters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QList getGroupings() const;
    void setGroupings(const QList &groupings);
    bool is_groupings_Set() const;
    bool is_groupings_Valid() const;

    QList getCurrentMetrics() const;
    void setCurrentMetrics(const QList &current_metrics);
    bool is_current_metrics_Set() const;
    bool is_current_metrics_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QList getSortCriteria() const;
    void setSortCriteria(const QList &sort_criteria);
    bool is_sort_criteria_Set() const;
    bool is_sort_criteria_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetCurrentMetricDataRequest_Filters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QList m_groupings;
    bool m_groupings_isSet;
    bool m_groupings_isValid;

    QList m_current_metrics;
    bool m_current_metrics_isSet;
    bool m_current_metrics_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QList m_sort_criteria;
    bool m_sort_criteria_isSet;
    bool m_sort_criteria_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCurrentMetricDataRequest)

#endif // OAIGetCurrentMetricDataRequest_H
