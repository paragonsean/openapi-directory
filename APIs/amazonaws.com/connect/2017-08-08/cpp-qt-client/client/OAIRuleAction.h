/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleAction.h
 *
 * Information about the action to be performed when a rule is triggered.
 */

#ifndef OAIRuleAction_H
#define OAIRuleAction_H

#include <QJsonObject>

#include "OAIActionType.h"
#include "OAIObject.h"
#include "OAIRuleAction_EventBridgeAction.h"
#include "OAIRuleAction_SendNotificationAction.h"
#include "OAIRuleAction_TaskAction.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRuleAction_TaskAction;
class OAIRuleAction_EventBridgeAction;
class OAIRuleAction_SendNotificationAction;

class OAIRuleAction : public OAIObject {
public:
    OAIRuleAction();
    OAIRuleAction(QString json);
    ~OAIRuleAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActionType getActionType() const;
    void setActionType(const OAIActionType &action_type);
    bool is_action_type_Set() const;
    bool is_action_type_Valid() const;

    OAIRuleAction_TaskAction getTaskAction() const;
    void setTaskAction(const OAIRuleAction_TaskAction &task_action);
    bool is_task_action_Set() const;
    bool is_task_action_Valid() const;

    OAIRuleAction_EventBridgeAction getEventBridgeAction() const;
    void setEventBridgeAction(const OAIRuleAction_EventBridgeAction &event_bridge_action);
    bool is_event_bridge_action_Set() const;
    bool is_event_bridge_action_Valid() const;

    OAIObject getAssignContactCategoryAction() const;
    void setAssignContactCategoryAction(const OAIObject &assign_contact_category_action);
    bool is_assign_contact_category_action_Set() const;
    bool is_assign_contact_category_action_Valid() const;

    OAIRuleAction_SendNotificationAction getSendNotificationAction() const;
    void setSendNotificationAction(const OAIRuleAction_SendNotificationAction &send_notification_action);
    bool is_send_notification_action_Set() const;
    bool is_send_notification_action_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActionType m_action_type;
    bool m_action_type_isSet;
    bool m_action_type_isValid;

    OAIRuleAction_TaskAction m_task_action;
    bool m_task_action_isSet;
    bool m_task_action_isValid;

    OAIRuleAction_EventBridgeAction m_event_bridge_action;
    bool m_event_bridge_action_isSet;
    bool m_event_bridge_action_isValid;

    OAIObject m_assign_contact_category_action;
    bool m_assign_contact_category_action_isSet;
    bool m_assign_contact_category_action_isValid;

    OAIRuleAction_SendNotificationAction m_send_notification_action;
    bool m_send_notification_action_isSet;
    bool m_send_notification_action_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleAction)

#endif // OAIRuleAction_H
