/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateHoursOfOperation_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateHoursOfOperation_request::OAIUpdateHoursOfOperation_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateHoursOfOperation_request::OAIUpdateHoursOfOperation_request() {
    this->initializeModel();
}

OAIUpdateHoursOfOperation_request::~OAIUpdateHoursOfOperation_request() {}

void OAIUpdateHoursOfOperation_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;
}

void OAIUpdateHoursOfOperation_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateHoursOfOperation_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("TimeZone")]);
    m_time_zone_isSet = !json[QString("TimeZone")].isNull() && m_time_zone_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("Config")]);
    m_config_isSet = !json[QString("Config")].isNull() && m_config_isValid;
}

QString OAIUpdateHoursOfOperation_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateHoursOfOperation_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("TimeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_config.size() > 0) {
        obj.insert(QString("Config"), ::OpenAPI::toJsonValue(m_config));
    }
    return obj;
}

QString OAIUpdateHoursOfOperation_request::getName() const {
    return m_name;
}
void OAIUpdateHoursOfOperation_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateHoursOfOperation_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateHoursOfOperation_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateHoursOfOperation_request::getDescription() const {
    return m_description;
}
void OAIUpdateHoursOfOperation_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateHoursOfOperation_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateHoursOfOperation_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateHoursOfOperation_request::getTimeZone() const {
    return m_time_zone;
}
void OAIUpdateHoursOfOperation_request::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIUpdateHoursOfOperation_request::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIUpdateHoursOfOperation_request::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QList<OAIHoursOfOperationConfig> OAIUpdateHoursOfOperation_request::getConfig() const {
    return m_config;
}
void OAIUpdateHoursOfOperation_request::setConfig(const QList<OAIHoursOfOperationConfig> &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIUpdateHoursOfOperation_request::is_config_Set() const{
    return m_config_isSet;
}

bool OAIUpdateHoursOfOperation_request::is_config_Valid() const{
    return m_config_isValid;
}

bool OAIUpdateHoursOfOperation_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateHoursOfOperation_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
