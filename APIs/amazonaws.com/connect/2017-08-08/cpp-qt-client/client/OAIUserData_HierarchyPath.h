/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserData_HierarchyPath.h
 *
 * 
 */

#ifndef OAIUserData_HierarchyPath_H
#define OAIUserData_HierarchyPath_H

#include <QJsonObject>

#include "OAIHierarchyPathReference_LevelFive.h"
#include "OAIHierarchyPathReference_LevelFour.h"
#include "OAIHierarchyPathReference_LevelOne.h"
#include "OAIHierarchyPathReference_LevelThree.h"
#include "OAIHierarchyPathReference_LevelTwo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHierarchyPathReference_LevelOne;
class OAIHierarchyPathReference_LevelTwo;
class OAIHierarchyPathReference_LevelThree;
class OAIHierarchyPathReference_LevelFour;
class OAIHierarchyPathReference_LevelFive;

class OAIUserData_HierarchyPath : public OAIObject {
public:
    OAIUserData_HierarchyPath();
    OAIUserData_HierarchyPath(QString json);
    ~OAIUserData_HierarchyPath() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHierarchyPathReference_LevelOne getLevelOne() const;
    void setLevelOne(const OAIHierarchyPathReference_LevelOne &level_one);
    bool is_level_one_Set() const;
    bool is_level_one_Valid() const;

    OAIHierarchyPathReference_LevelTwo getLevelTwo() const;
    void setLevelTwo(const OAIHierarchyPathReference_LevelTwo &level_two);
    bool is_level_two_Set() const;
    bool is_level_two_Valid() const;

    OAIHierarchyPathReference_LevelThree getLevelThree() const;
    void setLevelThree(const OAIHierarchyPathReference_LevelThree &level_three);
    bool is_level_three_Set() const;
    bool is_level_three_Valid() const;

    OAIHierarchyPathReference_LevelFour getLevelFour() const;
    void setLevelFour(const OAIHierarchyPathReference_LevelFour &level_four);
    bool is_level_four_Set() const;
    bool is_level_four_Valid() const;

    OAIHierarchyPathReference_LevelFive getLevelFive() const;
    void setLevelFive(const OAIHierarchyPathReference_LevelFive &level_five);
    bool is_level_five_Set() const;
    bool is_level_five_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHierarchyPathReference_LevelOne m_level_one;
    bool m_level_one_isSet;
    bool m_level_one_isValid;

    OAIHierarchyPathReference_LevelTwo m_level_two;
    bool m_level_two_isSet;
    bool m_level_two_isValid;

    OAIHierarchyPathReference_LevelThree m_level_three;
    bool m_level_three_isSet;
    bool m_level_three_isValid;

    OAIHierarchyPathReference_LevelFour m_level_four;
    bool m_level_four_isSet;
    bool m_level_four_isValid;

    OAIHierarchyPathReference_LevelFive m_level_five;
    bool m_level_five_isSet;
    bool m_level_five_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserData_HierarchyPath)

#endif // OAIUserData_HierarchyPath_H
