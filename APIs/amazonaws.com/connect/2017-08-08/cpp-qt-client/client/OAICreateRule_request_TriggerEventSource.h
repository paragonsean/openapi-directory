/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRule_request_TriggerEventSource.h
 *
 * The name of the event source. This field is required if &lt;code&gt;TriggerEventSource&lt;/code&gt; is one of the following values: &lt;code&gt;OnZendeskTicketCreate&lt;/code&gt; | &lt;code&gt;OnZendeskTicketStatusUpdate&lt;/code&gt; | &lt;code&gt;OnSalesforceCaseCreate&lt;/code&gt; 
 */

#ifndef OAICreateRule_request_TriggerEventSource_H
#define OAICreateRule_request_TriggerEventSource_H

#include <QJsonObject>

#include "OAIEventSourceName.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateRule_request_TriggerEventSource : public OAIObject {
public:
    OAICreateRule_request_TriggerEventSource();
    OAICreateRule_request_TriggerEventSource(QString json);
    ~OAICreateRule_request_TriggerEventSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEventSourceName getEventSourceName() const;
    void setEventSourceName(const OAIEventSourceName &event_source_name);
    bool is_event_source_name_Set() const;
    bool is_event_source_name_Valid() const;

    QString getIntegrationAssociationId() const;
    void setIntegrationAssociationId(const QString &integration_association_id);
    bool is_integration_association_id_Set() const;
    bool is_integration_association_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEventSourceName m_event_source_name;
    bool m_event_source_name_isSet;
    bool m_event_source_name_isValid;

    QString m_integration_association_id;
    bool m_integration_association_id_isSet;
    bool m_integration_association_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRule_request_TriggerEventSource)

#endif // OAICreateRule_request_TriggerEventSource_H
