/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluationFormQuestionTypeProperties_SingleSelect.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluationFormQuestionTypeProperties_SingleSelect::OAIEvaluationFormQuestionTypeProperties_SingleSelect(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluationFormQuestionTypeProperties_SingleSelect::OAIEvaluationFormQuestionTypeProperties_SingleSelect() {
    this->initializeModel();
}

OAIEvaluationFormQuestionTypeProperties_SingleSelect::~OAIEvaluationFormQuestionTypeProperties_SingleSelect() {}

void OAIEvaluationFormQuestionTypeProperties_SingleSelect::initializeModel() {

    m_options_isSet = false;
    m_options_isValid = false;

    m_display_as_isSet = false;
    m_display_as_isValid = false;

    m_automation_isSet = false;
    m_automation_isValid = false;
}

void OAIEvaluationFormQuestionTypeProperties_SingleSelect::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEvaluationFormQuestionTypeProperties_SingleSelect::fromJsonObject(QJsonObject json) {

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("Options")]);
    m_options_isSet = !json[QString("Options")].isNull() && m_options_isValid;

    m_display_as_isValid = ::OpenAPI::fromJsonValue(m_display_as, json[QString("DisplayAs")]);
    m_display_as_isSet = !json[QString("DisplayAs")].isNull() && m_display_as_isValid;

    m_automation_isValid = ::OpenAPI::fromJsonValue(m_automation, json[QString("Automation")]);
    m_automation_isSet = !json[QString("Automation")].isNull() && m_automation_isValid;
}

QString OAIEvaluationFormQuestionTypeProperties_SingleSelect::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEvaluationFormQuestionTypeProperties_SingleSelect::asJsonObject() const {
    QJsonObject obj;
    if (m_options.isSet()) {
        obj.insert(QString("Options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_display_as.isSet()) {
        obj.insert(QString("DisplayAs"), ::OpenAPI::toJsonValue(m_display_as));
    }
    if (m_automation.isSet()) {
        obj.insert(QString("Automation"), ::OpenAPI::toJsonValue(m_automation));
    }
    return obj;
}

QList OAIEvaluationFormQuestionTypeProperties_SingleSelect::getOptions() const {
    return m_options;
}
void OAIEvaluationFormQuestionTypeProperties_SingleSelect::setOptions(const QList &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_options_Set() const{
    return m_options_isSet;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_options_Valid() const{
    return m_options_isValid;
}

OAIEvaluationFormSingleSelectQuestionDisplayMode OAIEvaluationFormQuestionTypeProperties_SingleSelect::getDisplayAs() const {
    return m_display_as;
}
void OAIEvaluationFormQuestionTypeProperties_SingleSelect::setDisplayAs(const OAIEvaluationFormSingleSelectQuestionDisplayMode &display_as) {
    m_display_as = display_as;
    m_display_as_isSet = true;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_display_as_Set() const{
    return m_display_as_isSet;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_display_as_Valid() const{
    return m_display_as_isValid;
}

OAIEvaluationFormSingleSelectQuestionProperties_Automation OAIEvaluationFormQuestionTypeProperties_SingleSelect::getAutomation() const {
    return m_automation;
}
void OAIEvaluationFormQuestionTypeProperties_SingleSelect::setAutomation(const OAIEvaluationFormSingleSelectQuestionProperties_Automation &automation) {
    m_automation = automation;
    m_automation_isSet = true;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_automation_Set() const{
    return m_automation_isSet;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::is_automation_Valid() const{
    return m_automation_isValid;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_as.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_automation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEvaluationFormQuestionTypeProperties_SingleSelect::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_options_isValid && true;
}

} // namespace OpenAPI
