/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSecurityKeysResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSecurityKeysResponse::OAIListSecurityKeysResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSecurityKeysResponse::OAIListSecurityKeysResponse() {
    this->initializeModel();
}

OAIListSecurityKeysResponse::~OAIListSecurityKeysResponse() {}

void OAIListSecurityKeysResponse::initializeModel() {

    m_security_keys_isSet = false;
    m_security_keys_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListSecurityKeysResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSecurityKeysResponse::fromJsonObject(QJsonObject json) {

    m_security_keys_isValid = ::OpenAPI::fromJsonValue(m_security_keys, json[QString("SecurityKeys")]);
    m_security_keys_isSet = !json[QString("SecurityKeys")].isNull() && m_security_keys_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListSecurityKeysResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSecurityKeysResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_security_keys.isSet()) {
        obj.insert(QString("SecurityKeys"), ::OpenAPI::toJsonValue(m_security_keys));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListSecurityKeysResponse::getSecurityKeys() const {
    return m_security_keys;
}
void OAIListSecurityKeysResponse::setSecurityKeys(const QList &security_keys) {
    m_security_keys = security_keys;
    m_security_keys_isSet = true;
}

bool OAIListSecurityKeysResponse::is_security_keys_Set() const{
    return m_security_keys_isSet;
}

bool OAIListSecurityKeysResponse::is_security_keys_Valid() const{
    return m_security_keys_isValid;
}

QString OAIListSecurityKeysResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSecurityKeysResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSecurityKeysResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSecurityKeysResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListSecurityKeysResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSecurityKeysResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
