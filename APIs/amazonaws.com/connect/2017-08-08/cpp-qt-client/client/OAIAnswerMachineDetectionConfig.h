/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnswerMachineDetectionConfig.h
 *
 * Configuration of the answering machine detection.
 */

#ifndef OAIAnswerMachineDetectionConfig_H
#define OAIAnswerMachineDetectionConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnswerMachineDetectionConfig : public OAIObject {
public:
    OAIAnswerMachineDetectionConfig();
    OAIAnswerMachineDetectionConfig(QString json);
    ~OAIAnswerMachineDetectionConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getEnableAnswerMachineDetection() const;
    void setEnableAnswerMachineDetection(const bool &enable_answer_machine_detection);
    bool is_enable_answer_machine_detection_Set() const;
    bool is_enable_answer_machine_detection_Valid() const;

    bool getAwaitAnswerMachinePrompt() const;
    void setAwaitAnswerMachinePrompt(const bool &await_answer_machine_prompt);
    bool is_await_answer_machine_prompt_Set() const;
    bool is_await_answer_machine_prompt_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_answer_machine_detection;
    bool m_enable_answer_machine_detection_isSet;
    bool m_enable_answer_machine_detection_isValid;

    bool m_await_answer_machine_prompt;
    bool m_await_answer_machine_prompt_isSet;
    bool m_await_answer_machine_prompt_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnswerMachineDetectionConfig)

#endif // OAIAnswerMachineDetectionConfig_H
