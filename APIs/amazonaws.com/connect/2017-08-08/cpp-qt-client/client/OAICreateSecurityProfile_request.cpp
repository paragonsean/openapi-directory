/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSecurityProfile_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSecurityProfile_request::OAICreateSecurityProfile_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSecurityProfile_request::OAICreateSecurityProfile_request() {
    this->initializeModel();
}

OAICreateSecurityProfile_request::~OAICreateSecurityProfile_request() {}

void OAICreateSecurityProfile_request::initializeModel() {

    m_security_profile_name_isSet = false;
    m_security_profile_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_allowed_access_control_tags_isSet = false;
    m_allowed_access_control_tags_isValid = false;

    m_tag_restricted_resources_isSet = false;
    m_tag_restricted_resources_isValid = false;
}

void OAICreateSecurityProfile_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSecurityProfile_request::fromJsonObject(QJsonObject json) {

    m_security_profile_name_isValid = ::OpenAPI::fromJsonValue(m_security_profile_name, json[QString("SecurityProfileName")]);
    m_security_profile_name_isSet = !json[QString("SecurityProfileName")].isNull() && m_security_profile_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("Permissions")]);
    m_permissions_isSet = !json[QString("Permissions")].isNull() && m_permissions_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_allowed_access_control_tags_isValid = ::OpenAPI::fromJsonValue(m_allowed_access_control_tags, json[QString("AllowedAccessControlTags")]);
    m_allowed_access_control_tags_isSet = !json[QString("AllowedAccessControlTags")].isNull() && m_allowed_access_control_tags_isValid;

    m_tag_restricted_resources_isValid = ::OpenAPI::fromJsonValue(m_tag_restricted_resources, json[QString("TagRestrictedResources")]);
    m_tag_restricted_resources_isSet = !json[QString("TagRestrictedResources")].isNull() && m_tag_restricted_resources_isValid;
}

QString OAICreateSecurityProfile_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSecurityProfile_request::asJsonObject() const {
    QJsonObject obj;
    if (m_security_profile_name_isSet) {
        obj.insert(QString("SecurityProfileName"), ::OpenAPI::toJsonValue(m_security_profile_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("Permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_allowed_access_control_tags.size() > 0) {
        obj.insert(QString("AllowedAccessControlTags"), ::OpenAPI::toJsonValue(m_allowed_access_control_tags));
    }
    if (m_tag_restricted_resources.size() > 0) {
        obj.insert(QString("TagRestrictedResources"), ::OpenAPI::toJsonValue(m_tag_restricted_resources));
    }
    return obj;
}

QString OAICreateSecurityProfile_request::getSecurityProfileName() const {
    return m_security_profile_name;
}
void OAICreateSecurityProfile_request::setSecurityProfileName(const QString &security_profile_name) {
    m_security_profile_name = security_profile_name;
    m_security_profile_name_isSet = true;
}

bool OAICreateSecurityProfile_request::is_security_profile_name_Set() const{
    return m_security_profile_name_isSet;
}

bool OAICreateSecurityProfile_request::is_security_profile_name_Valid() const{
    return m_security_profile_name_isValid;
}

QString OAICreateSecurityProfile_request::getDescription() const {
    return m_description;
}
void OAICreateSecurityProfile_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateSecurityProfile_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateSecurityProfile_request::is_description_Valid() const{
    return m_description_isValid;
}

QList<QString> OAICreateSecurityProfile_request::getPermissions() const {
    return m_permissions;
}
void OAICreateSecurityProfile_request::setPermissions(const QList<QString> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAICreateSecurityProfile_request::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAICreateSecurityProfile_request::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QMap<QString, QString> OAICreateSecurityProfile_request::getTags() const {
    return m_tags;
}
void OAICreateSecurityProfile_request::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateSecurityProfile_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateSecurityProfile_request::is_tags_Valid() const{
    return m_tags_isValid;
}

QMap<QString, QString> OAICreateSecurityProfile_request::getAllowedAccessControlTags() const {
    return m_allowed_access_control_tags;
}
void OAICreateSecurityProfile_request::setAllowedAccessControlTags(const QMap<QString, QString> &allowed_access_control_tags) {
    m_allowed_access_control_tags = allowed_access_control_tags;
    m_allowed_access_control_tags_isSet = true;
}

bool OAICreateSecurityProfile_request::is_allowed_access_control_tags_Set() const{
    return m_allowed_access_control_tags_isSet;
}

bool OAICreateSecurityProfile_request::is_allowed_access_control_tags_Valid() const{
    return m_allowed_access_control_tags_isValid;
}

QList<QString> OAICreateSecurityProfile_request::getTagRestrictedResources() const {
    return m_tag_restricted_resources;
}
void OAICreateSecurityProfile_request::setTagRestrictedResources(const QList<QString> &tag_restricted_resources) {
    m_tag_restricted_resources = tag_restricted_resources;
    m_tag_restricted_resources_isSet = true;
}

bool OAICreateSecurityProfile_request::is_tag_restricted_resources_Set() const{
    return m_tag_restricted_resources_isSet;
}

bool OAICreateSecurityProfile_request::is_tag_restricted_resources_Valid() const{
    return m_tag_restricted_resources_isValid;
}

bool OAICreateSecurityProfile_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowed_access_control_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_restricted_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSecurityProfile_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_security_profile_name_isValid && true;
}

} // namespace OpenAPI
