/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateInstance_request.h
 *
 * 
 */

#ifndef OAICreateInstance_request_H
#define OAICreateInstance_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateInstance_request : public OAIObject {
public:
    OAICreateInstance_request();
    OAICreateInstance_request(QString json);
    ~OAICreateInstance_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getIdentityManagementType() const;
    void setIdentityManagementType(const QString &identity_management_type);
    bool is_identity_management_type_Set() const;
    bool is_identity_management_type_Valid() const;

    QString getInstanceAlias() const;
    void setInstanceAlias(const QString &instance_alias);
    bool is_instance_alias_Set() const;
    bool is_instance_alias_Valid() const;

    QString getDirectoryId() const;
    void setDirectoryId(const QString &directory_id);
    bool is_directory_id_Set() const;
    bool is_directory_id_Valid() const;

    bool isInboundCallsEnabled() const;
    void setInboundCallsEnabled(const bool &inbound_calls_enabled);
    bool is_inbound_calls_enabled_Set() const;
    bool is_inbound_calls_enabled_Valid() const;

    bool isOutboundCallsEnabled() const;
    void setOutboundCallsEnabled(const bool &outbound_calls_enabled);
    bool is_outbound_calls_enabled_Set() const;
    bool is_outbound_calls_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_identity_management_type;
    bool m_identity_management_type_isSet;
    bool m_identity_management_type_isValid;

    QString m_instance_alias;
    bool m_instance_alias_isSet;
    bool m_instance_alias_isValid;

    QString m_directory_id;
    bool m_directory_id_isSet;
    bool m_directory_id_isValid;

    bool m_inbound_calls_enabled;
    bool m_inbound_calls_enabled_isSet;
    bool m_inbound_calls_enabled_isValid;

    bool m_outbound_calls_enabled;
    bool m_outbound_calls_enabled_isSet;
    bool m_outbound_calls_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateInstance_request)

#endif // OAICreateInstance_request_H
