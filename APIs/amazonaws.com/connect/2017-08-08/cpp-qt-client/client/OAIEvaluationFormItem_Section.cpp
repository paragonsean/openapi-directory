/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluationFormItem_Section.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluationFormItem_Section::OAIEvaluationFormItem_Section(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluationFormItem_Section::OAIEvaluationFormItem_Section() {
    this->initializeModel();
}

OAIEvaluationFormItem_Section::~OAIEvaluationFormItem_Section() {}

void OAIEvaluationFormItem_Section::initializeModel() {

    m_title_isSet = false;
    m_title_isValid = false;

    m_ref_id_isSet = false;
    m_ref_id_isValid = false;

    m_instructions_isSet = false;
    m_instructions_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIEvaluationFormItem_Section::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEvaluationFormItem_Section::fromJsonObject(QJsonObject json) {

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_ref_id_isValid = ::OpenAPI::fromJsonValue(m_ref_id, json[QString("RefId")]);
    m_ref_id_isSet = !json[QString("RefId")].isNull() && m_ref_id_isValid;

    m_instructions_isValid = ::OpenAPI::fromJsonValue(m_instructions, json[QString("Instructions")]);
    m_instructions_isSet = !json[QString("Instructions")].isNull() && m_instructions_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("Weight")]);
    m_weight_isSet = !json[QString("Weight")].isNull() && m_weight_isValid;
}

QString OAIEvaluationFormItem_Section::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEvaluationFormItem_Section::asJsonObject() const {
    QJsonObject obj;
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_ref_id_isSet) {
        obj.insert(QString("RefId"), ::OpenAPI::toJsonValue(m_ref_id));
    }
    if (m_instructions_isSet) {
        obj.insert(QString("Instructions"), ::OpenAPI::toJsonValue(m_instructions));
    }
    if (m_items.isSet()) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_weight_isSet) {
        obj.insert(QString("Weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIEvaluationFormItem_Section::getTitle() const {
    return m_title;
}
void OAIEvaluationFormItem_Section::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEvaluationFormItem_Section::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEvaluationFormItem_Section::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIEvaluationFormItem_Section::getRefId() const {
    return m_ref_id;
}
void OAIEvaluationFormItem_Section::setRefId(const QString &ref_id) {
    m_ref_id = ref_id;
    m_ref_id_isSet = true;
}

bool OAIEvaluationFormItem_Section::is_ref_id_Set() const{
    return m_ref_id_isSet;
}

bool OAIEvaluationFormItem_Section::is_ref_id_Valid() const{
    return m_ref_id_isValid;
}

QString OAIEvaluationFormItem_Section::getInstructions() const {
    return m_instructions;
}
void OAIEvaluationFormItem_Section::setInstructions(const QString &instructions) {
    m_instructions = instructions;
    m_instructions_isSet = true;
}

bool OAIEvaluationFormItem_Section::is_instructions_Set() const{
    return m_instructions_isSet;
}

bool OAIEvaluationFormItem_Section::is_instructions_Valid() const{
    return m_instructions_isValid;
}

QList OAIEvaluationFormItem_Section::getItems() const {
    return m_items;
}
void OAIEvaluationFormItem_Section::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIEvaluationFormItem_Section::is_items_Set() const{
    return m_items_isSet;
}

bool OAIEvaluationFormItem_Section::is_items_Valid() const{
    return m_items_isValid;
}

double OAIEvaluationFormItem_Section::getWeight() const {
    return m_weight;
}
void OAIEvaluationFormItem_Section::setWeight(const double &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIEvaluationFormItem_Section::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIEvaluationFormItem_Section::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIEvaluationFormItem_Section::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instructions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEvaluationFormItem_Section::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_isValid && m_ref_id_isValid && m_items_isValid && true;
}

} // namespace OpenAPI
