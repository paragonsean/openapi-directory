/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeQuickConnectResponse_QuickConnect.h
 *
 * 
 */

#ifndef OAIDescribeQuickConnectResponse_QuickConnect_H
#define OAIDescribeQuickConnectResponse_QuickConnect_H

#include <QJsonObject>

#include "OAIQuickConnect_QuickConnectConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuickConnect_QuickConnectConfig;

class OAIDescribeQuickConnectResponse_QuickConnect : public OAIObject {
public:
    OAIDescribeQuickConnectResponse_QuickConnect();
    OAIDescribeQuickConnectResponse_QuickConnect(QString json);
    ~OAIDescribeQuickConnectResponse_QuickConnect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQuickConnectArn() const;
    void setQuickConnectArn(const QString &quick_connect_arn);
    bool is_quick_connect_arn_Set() const;
    bool is_quick_connect_arn_Valid() const;

    QString getQuickConnectId() const;
    void setQuickConnectId(const QString &quick_connect_id);
    bool is_quick_connect_id_Set() const;
    bool is_quick_connect_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIQuickConnect_QuickConnectConfig getQuickConnectConfig() const;
    void setQuickConnectConfig(const OAIQuickConnect_QuickConnectConfig &quick_connect_config);
    bool is_quick_connect_config_Set() const;
    bool is_quick_connect_config_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_quick_connect_arn;
    bool m_quick_connect_arn_isSet;
    bool m_quick_connect_arn_isValid;

    QString m_quick_connect_id;
    bool m_quick_connect_id_isSet;
    bool m_quick_connect_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIQuickConnect_QuickConnectConfig m_quick_connect_config;
    bool m_quick_connect_config_isSet;
    bool m_quick_connect_config_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeQuickConnectResponse_QuickConnect)

#endif // OAIDescribeQuickConnectResponse_QuickConnect_H
