/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_PhoneConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_PhoneConfig::OAIUser_PhoneConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_PhoneConfig::OAIUser_PhoneConfig() {
    this->initializeModel();
}

OAIUser_PhoneConfig::~OAIUser_PhoneConfig() {}

void OAIUser_PhoneConfig::initializeModel() {

    m_phone_type_isSet = false;
    m_phone_type_isValid = false;

    m_auto_accept_isSet = false;
    m_auto_accept_isValid = false;

    m_after_contact_work_time_limit_isSet = false;
    m_after_contact_work_time_limit_isValid = false;

    m_desk_phone_number_isSet = false;
    m_desk_phone_number_isValid = false;
}

void OAIUser_PhoneConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_PhoneConfig::fromJsonObject(QJsonObject json) {

    m_phone_type_isValid = ::OpenAPI::fromJsonValue(m_phone_type, json[QString("PhoneType")]);
    m_phone_type_isSet = !json[QString("PhoneType")].isNull() && m_phone_type_isValid;

    m_auto_accept_isValid = ::OpenAPI::fromJsonValue(m_auto_accept, json[QString("AutoAccept")]);
    m_auto_accept_isSet = !json[QString("AutoAccept")].isNull() && m_auto_accept_isValid;

    m_after_contact_work_time_limit_isValid = ::OpenAPI::fromJsonValue(m_after_contact_work_time_limit, json[QString("AfterContactWorkTimeLimit")]);
    m_after_contact_work_time_limit_isSet = !json[QString("AfterContactWorkTimeLimit")].isNull() && m_after_contact_work_time_limit_isValid;

    m_desk_phone_number_isValid = ::OpenAPI::fromJsonValue(m_desk_phone_number, json[QString("DeskPhoneNumber")]);
    m_desk_phone_number_isSet = !json[QString("DeskPhoneNumber")].isNull() && m_desk_phone_number_isValid;
}

QString OAIUser_PhoneConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_PhoneConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_type.isSet()) {
        obj.insert(QString("PhoneType"), ::OpenAPI::toJsonValue(m_phone_type));
    }
    if (m_auto_accept_isSet) {
        obj.insert(QString("AutoAccept"), ::OpenAPI::toJsonValue(m_auto_accept));
    }
    if (m_after_contact_work_time_limit_isSet) {
        obj.insert(QString("AfterContactWorkTimeLimit"), ::OpenAPI::toJsonValue(m_after_contact_work_time_limit));
    }
    if (m_desk_phone_number_isSet) {
        obj.insert(QString("DeskPhoneNumber"), ::OpenAPI::toJsonValue(m_desk_phone_number));
    }
    return obj;
}

OAIPhoneType OAIUser_PhoneConfig::getPhoneType() const {
    return m_phone_type;
}
void OAIUser_PhoneConfig::setPhoneType(const OAIPhoneType &phone_type) {
    m_phone_type = phone_type;
    m_phone_type_isSet = true;
}

bool OAIUser_PhoneConfig::is_phone_type_Set() const{
    return m_phone_type_isSet;
}

bool OAIUser_PhoneConfig::is_phone_type_Valid() const{
    return m_phone_type_isValid;
}

bool OAIUser_PhoneConfig::getAutoAccept() const {
    return m_auto_accept;
}
void OAIUser_PhoneConfig::setAutoAccept(const bool &auto_accept) {
    m_auto_accept = auto_accept;
    m_auto_accept_isSet = true;
}

bool OAIUser_PhoneConfig::is_auto_accept_Set() const{
    return m_auto_accept_isSet;
}

bool OAIUser_PhoneConfig::is_auto_accept_Valid() const{
    return m_auto_accept_isValid;
}

qint32 OAIUser_PhoneConfig::getAfterContactWorkTimeLimit() const {
    return m_after_contact_work_time_limit;
}
void OAIUser_PhoneConfig::setAfterContactWorkTimeLimit(const qint32 &after_contact_work_time_limit) {
    m_after_contact_work_time_limit = after_contact_work_time_limit;
    m_after_contact_work_time_limit_isSet = true;
}

bool OAIUser_PhoneConfig::is_after_contact_work_time_limit_Set() const{
    return m_after_contact_work_time_limit_isSet;
}

bool OAIUser_PhoneConfig::is_after_contact_work_time_limit_Valid() const{
    return m_after_contact_work_time_limit_isValid;
}

QString OAIUser_PhoneConfig::getDeskPhoneNumber() const {
    return m_desk_phone_number;
}
void OAIUser_PhoneConfig::setDeskPhoneNumber(const QString &desk_phone_number) {
    m_desk_phone_number = desk_phone_number;
    m_desk_phone_number_isSet = true;
}

bool OAIUser_PhoneConfig::is_desk_phone_number_Set() const{
    return m_desk_phone_number_isSet;
}

bool OAIUser_PhoneConfig::is_desk_phone_number_Valid() const{
    return m_desk_phone_number_isValid;
}

bool OAIUser_PhoneConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_accept_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_after_contact_work_time_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desk_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_PhoneConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_phone_type_isValid && true;
}

} // namespace OpenAPI
