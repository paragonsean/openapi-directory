/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateContactScheduleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateContactScheduleRequest::OAIUpdateContactScheduleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateContactScheduleRequest::OAIUpdateContactScheduleRequest() {
    this->initializeModel();
}

OAIUpdateContactScheduleRequest::~OAIUpdateContactScheduleRequest() {}

void OAIUpdateContactScheduleRequest::initializeModel() {

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_contact_id_isSet = false;
    m_contact_id_isValid = false;

    m_scheduled_time_isSet = false;
    m_scheduled_time_isValid = false;
}

void OAIUpdateContactScheduleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateContactScheduleRequest::fromJsonObject(QJsonObject json) {

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("InstanceId")]);
    m_instance_id_isSet = !json[QString("InstanceId")].isNull() && m_instance_id_isValid;

    m_contact_id_isValid = ::OpenAPI::fromJsonValue(m_contact_id, json[QString("ContactId")]);
    m_contact_id_isSet = !json[QString("ContactId")].isNull() && m_contact_id_isValid;

    m_scheduled_time_isValid = ::OpenAPI::fromJsonValue(m_scheduled_time, json[QString("ScheduledTime")]);
    m_scheduled_time_isSet = !json[QString("ScheduledTime")].isNull() && m_scheduled_time_isValid;
}

QString OAIUpdateContactScheduleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateContactScheduleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_id_isSet) {
        obj.insert(QString("InstanceId"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_contact_id_isSet) {
        obj.insert(QString("ContactId"), ::OpenAPI::toJsonValue(m_contact_id));
    }
    if (m_scheduled_time_isSet) {
        obj.insert(QString("ScheduledTime"), ::OpenAPI::toJsonValue(m_scheduled_time));
    }
    return obj;
}

QString OAIUpdateContactScheduleRequest::getInstanceId() const {
    return m_instance_id;
}
void OAIUpdateContactScheduleRequest::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIUpdateContactScheduleRequest::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIUpdateContactScheduleRequest::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

QString OAIUpdateContactScheduleRequest::getContactId() const {
    return m_contact_id;
}
void OAIUpdateContactScheduleRequest::setContactId(const QString &contact_id) {
    m_contact_id = contact_id;
    m_contact_id_isSet = true;
}

bool OAIUpdateContactScheduleRequest::is_contact_id_Set() const{
    return m_contact_id_isSet;
}

bool OAIUpdateContactScheduleRequest::is_contact_id_Valid() const{
    return m_contact_id_isValid;
}

QDateTime OAIUpdateContactScheduleRequest::getScheduledTime() const {
    return m_scheduled_time;
}
void OAIUpdateContactScheduleRequest::setScheduledTime(const QDateTime &scheduled_time) {
    m_scheduled_time = scheduled_time;
    m_scheduled_time_isSet = true;
}

bool OAIUpdateContactScheduleRequest::is_scheduled_time_Set() const{
    return m_scheduled_time_isSet;
}

bool OAIUpdateContactScheduleRequest::is_scheduled_time_Valid() const{
    return m_scheduled_time_isValid;
}

bool OAIUpdateContactScheduleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateContactScheduleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_instance_id_isValid && m_contact_id_isValid && m_scheduled_time_isValid && true;
}

} // namespace OpenAPI
