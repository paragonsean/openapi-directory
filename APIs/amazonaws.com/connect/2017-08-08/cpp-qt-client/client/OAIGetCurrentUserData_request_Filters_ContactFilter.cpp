/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCurrentUserData_request_Filters_ContactFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCurrentUserData_request_Filters_ContactFilter::OAIGetCurrentUserData_request_Filters_ContactFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCurrentUserData_request_Filters_ContactFilter::OAIGetCurrentUserData_request_Filters_ContactFilter() {
    this->initializeModel();
}

OAIGetCurrentUserData_request_Filters_ContactFilter::~OAIGetCurrentUserData_request_Filters_ContactFilter() {}

void OAIGetCurrentUserData_request_Filters_ContactFilter::initializeModel() {

    m_contact_states_isSet = false;
    m_contact_states_isValid = false;
}

void OAIGetCurrentUserData_request_Filters_ContactFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCurrentUserData_request_Filters_ContactFilter::fromJsonObject(QJsonObject json) {

    m_contact_states_isValid = ::OpenAPI::fromJsonValue(m_contact_states, json[QString("ContactStates")]);
    m_contact_states_isSet = !json[QString("ContactStates")].isNull() && m_contact_states_isValid;
}

QString OAIGetCurrentUserData_request_Filters_ContactFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCurrentUserData_request_Filters_ContactFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_states.isSet()) {
        obj.insert(QString("ContactStates"), ::OpenAPI::toJsonValue(m_contact_states));
    }
    return obj;
}

QList OAIGetCurrentUserData_request_Filters_ContactFilter::getContactStates() const {
    return m_contact_states;
}
void OAIGetCurrentUserData_request_Filters_ContactFilter::setContactStates(const QList &contact_states) {
    m_contact_states = contact_states;
    m_contact_states_isSet = true;
}

bool OAIGetCurrentUserData_request_Filters_ContactFilter::is_contact_states_Set() const{
    return m_contact_states_isSet;
}

bool OAIGetCurrentUserData_request_Filters_ContactFilter::is_contact_states_Valid() const{
    return m_contact_states_isValid;
}

bool OAIGetCurrentUserData_request_Filters_ContactFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_states.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCurrentUserData_request_Filters_ContactFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
