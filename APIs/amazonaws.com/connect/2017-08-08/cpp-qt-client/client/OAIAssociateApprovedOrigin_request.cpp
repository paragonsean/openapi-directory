/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateApprovedOrigin_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateApprovedOrigin_request::OAIAssociateApprovedOrigin_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateApprovedOrigin_request::OAIAssociateApprovedOrigin_request() {
    this->initializeModel();
}

OAIAssociateApprovedOrigin_request::~OAIAssociateApprovedOrigin_request() {}

void OAIAssociateApprovedOrigin_request::initializeModel() {

    m_origin_isSet = false;
    m_origin_isValid = false;
}

void OAIAssociateApprovedOrigin_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateApprovedOrigin_request::fromJsonObject(QJsonObject json) {

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("Origin")]);
    m_origin_isSet = !json[QString("Origin")].isNull() && m_origin_isValid;
}

QString OAIAssociateApprovedOrigin_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateApprovedOrigin_request::asJsonObject() const {
    QJsonObject obj;
    if (m_origin_isSet) {
        obj.insert(QString("Origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    return obj;
}

QString OAIAssociateApprovedOrigin_request::getOrigin() const {
    return m_origin;
}
void OAIAssociateApprovedOrigin_request::setOrigin(const QString &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIAssociateApprovedOrigin_request::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIAssociateApprovedOrigin_request::is_origin_Valid() const{
    return m_origin_isValid;
}

bool OAIAssociateApprovedOrigin_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_origin_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateApprovedOrigin_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_origin_isValid && true;
}

} // namespace OpenAPI
