/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAgentContactReference.h
 *
 * Information about the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/APIReference/API_Contact.html\&quot;&gt;contact&lt;/a&gt; associated to the user.
 */

#ifndef OAIAgentContactReference_H
#define OAIAgentContactReference_H

#include <QJsonObject>

#include "OAIChannel.h"
#include "OAIContactInitiationMethod.h"
#include "OAIContactState.h"
#include "OAIQueueReference.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueueReference;

class OAIAgentContactReference : public OAIObject {
public:
    OAIAgentContactReference();
    OAIAgentContactReference(QString json);
    ~OAIAgentContactReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContactId() const;
    void setContactId(const QString &contact_id);
    bool is_contact_id_Set() const;
    bool is_contact_id_Valid() const;

    OAIChannel getChannel() const;
    void setChannel(const OAIChannel &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAIContactInitiationMethod getInitiationMethod() const;
    void setInitiationMethod(const OAIContactInitiationMethod &initiation_method);
    bool is_initiation_method_Set() const;
    bool is_initiation_method_Valid() const;

    OAIContactState getAgentContactState() const;
    void setAgentContactState(const OAIContactState &agent_contact_state);
    bool is_agent_contact_state_Set() const;
    bool is_agent_contact_state_Valid() const;

    QDateTime getStateStartTimestamp() const;
    void setStateStartTimestamp(const QDateTime &state_start_timestamp);
    bool is_state_start_timestamp_Set() const;
    bool is_state_start_timestamp_Valid() const;

    QDateTime getConnectedToAgentTimestamp() const;
    void setConnectedToAgentTimestamp(const QDateTime &connected_to_agent_timestamp);
    bool is_connected_to_agent_timestamp_Set() const;
    bool is_connected_to_agent_timestamp_Valid() const;

    OAIQueueReference getQueue() const;
    void setQueue(const OAIQueueReference &queue);
    bool is_queue_Set() const;
    bool is_queue_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contact_id;
    bool m_contact_id_isSet;
    bool m_contact_id_isValid;

    OAIChannel m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAIContactInitiationMethod m_initiation_method;
    bool m_initiation_method_isSet;
    bool m_initiation_method_isValid;

    OAIContactState m_agent_contact_state;
    bool m_agent_contact_state_isSet;
    bool m_agent_contact_state_isValid;

    QDateTime m_state_start_timestamp;
    bool m_state_start_timestamp_isSet;
    bool m_state_start_timestamp_isValid;

    QDateTime m_connected_to_agent_timestamp;
    bool m_connected_to_agent_timestamp_isSet;
    bool m_connected_to_agent_timestamp_isValid;

    OAIQueueReference m_queue;
    bool m_queue_isSet;
    bool m_queue_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAgentContactReference)

#endif // OAIAgentContactReference_H
