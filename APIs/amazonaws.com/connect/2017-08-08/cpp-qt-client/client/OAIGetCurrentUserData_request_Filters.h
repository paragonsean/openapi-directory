/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCurrentUserData_request_Filters.h
 *
 * A filter for the user data.
 */

#ifndef OAIGetCurrentUserData_request_Filters_H
#define OAIGetCurrentUserData_request_Filters_H

#include <QJsonObject>

#include "OAIGetCurrentUserData_request_Filters_ContactFilter.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetCurrentUserData_request_Filters_ContactFilter;

class OAIGetCurrentUserData_request_Filters : public OAIObject {
public:
    OAIGetCurrentUserData_request_Filters();
    OAIGetCurrentUserData_request_Filters(QString json);
    ~OAIGetCurrentUserData_request_Filters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getQueues() const;
    void setQueues(const QList &queues);
    bool is_queues_Set() const;
    bool is_queues_Valid() const;

    OAIGetCurrentUserData_request_Filters_ContactFilter getContactFilter() const;
    void setContactFilter(const OAIGetCurrentUserData_request_Filters_ContactFilter &contact_filter);
    bool is_contact_filter_Set() const;
    bool is_contact_filter_Valid() const;

    QList getRoutingProfiles() const;
    void setRoutingProfiles(const QList &routing_profiles);
    bool is_routing_profiles_Set() const;
    bool is_routing_profiles_Valid() const;

    QList getAgents() const;
    void setAgents(const QList &agents);
    bool is_agents_Set() const;
    bool is_agents_Valid() const;

    QList getUserHierarchyGroups() const;
    void setUserHierarchyGroups(const QList &user_hierarchy_groups);
    bool is_user_hierarchy_groups_Set() const;
    bool is_user_hierarchy_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_queues;
    bool m_queues_isSet;
    bool m_queues_isValid;

    OAIGetCurrentUserData_request_Filters_ContactFilter m_contact_filter;
    bool m_contact_filter_isSet;
    bool m_contact_filter_isValid;

    QList m_routing_profiles;
    bool m_routing_profiles_isSet;
    bool m_routing_profiles_isValid;

    QList m_agents;
    bool m_agents_isSet;
    bool m_agents_isValid;

    QList m_user_hierarchy_groups;
    bool m_user_hierarchy_groups_isSet;
    bool m_user_hierarchy_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCurrentUserData_request_Filters)

#endif // OAIGetCurrentUserData_request_Filters_H
