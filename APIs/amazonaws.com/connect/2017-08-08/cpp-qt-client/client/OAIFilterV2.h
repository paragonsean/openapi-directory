/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterV2.h
 *
 * Contains the filter to apply when retrieving metrics with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricDataV2.html\&quot;&gt;GetMetricDataV2&lt;/a&gt; API.
 */

#ifndef OAIFilterV2_H
#define OAIFilterV2_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilterV2 : public OAIObject {
public:
    OAIFilterV2();
    OAIFilterV2(QString json);
    ~OAIFilterV2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterKey() const;
    void setFilterKey(const QString &filter_key);
    bool is_filter_key_Set() const;
    bool is_filter_key_Valid() const;

    QList getFilterValues() const;
    void setFilterValues(const QList &filter_values);
    bool is_filter_values_Set() const;
    bool is_filter_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_key;
    bool m_filter_key_isSet;
    bool m_filter_key_isValid;

    QList m_filter_values;
    bool m_filter_values_isSet;
    bool m_filter_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterV2)

#endif // OAIFilterV2_H
