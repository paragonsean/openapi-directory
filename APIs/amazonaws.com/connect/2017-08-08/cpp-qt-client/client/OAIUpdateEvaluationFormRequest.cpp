/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateEvaluationFormRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateEvaluationFormRequest::OAIUpdateEvaluationFormRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateEvaluationFormRequest::OAIUpdateEvaluationFormRequest() {
    this->initializeModel();
}

OAIUpdateEvaluationFormRequest::~OAIUpdateEvaluationFormRequest() {}

void OAIUpdateEvaluationFormRequest::initializeModel() {

    m_evaluation_form_version_isSet = false;
    m_evaluation_form_version_isValid = false;

    m_create_new_version_isSet = false;
    m_create_new_version_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_scoring_strategy_isSet = false;
    m_scoring_strategy_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIUpdateEvaluationFormRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateEvaluationFormRequest::fromJsonObject(QJsonObject json) {

    m_evaluation_form_version_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_version, json[QString("EvaluationFormVersion")]);
    m_evaluation_form_version_isSet = !json[QString("EvaluationFormVersion")].isNull() && m_evaluation_form_version_isValid;

    m_create_new_version_isValid = ::OpenAPI::fromJsonValue(m_create_new_version, json[QString("CreateNewVersion")]);
    m_create_new_version_isSet = !json[QString("CreateNewVersion")].isNull() && m_create_new_version_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_scoring_strategy_isValid = ::OpenAPI::fromJsonValue(m_scoring_strategy, json[QString("ScoringStrategy")]);
    m_scoring_strategy_isSet = !json[QString("ScoringStrategy")].isNull() && m_scoring_strategy_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;
}

QString OAIUpdateEvaluationFormRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateEvaluationFormRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_form_version_isSet) {
        obj.insert(QString("EvaluationFormVersion"), ::OpenAPI::toJsonValue(m_evaluation_form_version));
    }
    if (m_create_new_version_isSet) {
        obj.insert(QString("CreateNewVersion"), ::OpenAPI::toJsonValue(m_create_new_version));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_items.isSet()) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_scoring_strategy.isSet()) {
        obj.insert(QString("ScoringStrategy"), ::OpenAPI::toJsonValue(m_scoring_strategy));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

qint32 OAIUpdateEvaluationFormRequest::getEvaluationFormVersion() const {
    return m_evaluation_form_version;
}
void OAIUpdateEvaluationFormRequest::setEvaluationFormVersion(const qint32 &evaluation_form_version) {
    m_evaluation_form_version = evaluation_form_version;
    m_evaluation_form_version_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_evaluation_form_version_Set() const{
    return m_evaluation_form_version_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_evaluation_form_version_Valid() const{
    return m_evaluation_form_version_isValid;
}

bool OAIUpdateEvaluationFormRequest::getCreateNewVersion() const {
    return m_create_new_version;
}
void OAIUpdateEvaluationFormRequest::setCreateNewVersion(const bool &create_new_version) {
    m_create_new_version = create_new_version;
    m_create_new_version_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_create_new_version_Set() const{
    return m_create_new_version_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_create_new_version_Valid() const{
    return m_create_new_version_isValid;
}

QString OAIUpdateEvaluationFormRequest::getTitle() const {
    return m_title;
}
void OAIUpdateEvaluationFormRequest::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_title_Set() const{
    return m_title_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIUpdateEvaluationFormRequest::getDescription() const {
    return m_description;
}
void OAIUpdateEvaluationFormRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_description_Valid() const{
    return m_description_isValid;
}

QList OAIUpdateEvaluationFormRequest::getItems() const {
    return m_items;
}
void OAIUpdateEvaluationFormRequest::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_items_Set() const{
    return m_items_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_items_Valid() const{
    return m_items_isValid;
}

OAICreateEvaluationFormRequest_ScoringStrategy OAIUpdateEvaluationFormRequest::getScoringStrategy() const {
    return m_scoring_strategy;
}
void OAIUpdateEvaluationFormRequest::setScoringStrategy(const OAICreateEvaluationFormRequest_ScoringStrategy &scoring_strategy) {
    m_scoring_strategy = scoring_strategy;
    m_scoring_strategy_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_scoring_strategy_Set() const{
    return m_scoring_strategy_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_scoring_strategy_Valid() const{
    return m_scoring_strategy_isValid;
}

QString OAIUpdateEvaluationFormRequest::getClientToken() const {
    return m_client_token;
}
void OAIUpdateEvaluationFormRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateEvaluationFormRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateEvaluationFormRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIUpdateEvaluationFormRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_form_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_new_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scoring_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateEvaluationFormRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_evaluation_form_version_isValid && m_title_isValid && m_items_isValid && true;
}

} // namespace OpenAPI
