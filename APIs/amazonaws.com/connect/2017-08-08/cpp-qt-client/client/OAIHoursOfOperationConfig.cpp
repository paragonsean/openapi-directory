/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHoursOfOperationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHoursOfOperationConfig::OAIHoursOfOperationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHoursOfOperationConfig::OAIHoursOfOperationConfig() {
    this->initializeModel();
}

OAIHoursOfOperationConfig::~OAIHoursOfOperationConfig() {}

void OAIHoursOfOperationConfig::initializeModel() {

    m_day_isSet = false;
    m_day_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;
}

void OAIHoursOfOperationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHoursOfOperationConfig::fromJsonObject(QJsonObject json) {

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("Day")]);
    m_day_isSet = !json[QString("Day")].isNull() && m_day_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;
}

QString OAIHoursOfOperationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHoursOfOperationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_day.isSet()) {
        obj.insert(QString("Day"), ::OpenAPI::toJsonValue(m_day));
    }
    if (m_start_time.isSet()) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time.isSet()) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    return obj;
}

OAIHoursOfOperationDays OAIHoursOfOperationConfig::getDay() const {
    return m_day;
}
void OAIHoursOfOperationConfig::setDay(const OAIHoursOfOperationDays &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIHoursOfOperationConfig::is_day_Set() const{
    return m_day_isSet;
}

bool OAIHoursOfOperationConfig::is_day_Valid() const{
    return m_day_isValid;
}

OAIHoursOfOperationConfig_StartTime OAIHoursOfOperationConfig::getStartTime() const {
    return m_start_time;
}
void OAIHoursOfOperationConfig::setStartTime(const OAIHoursOfOperationConfig_StartTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIHoursOfOperationConfig::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIHoursOfOperationConfig::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIHoursOfOperationConfig_EndTime OAIHoursOfOperationConfig::getEndTime() const {
    return m_end_time;
}
void OAIHoursOfOperationConfig::setEndTime(const OAIHoursOfOperationConfig_EndTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIHoursOfOperationConfig::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIHoursOfOperationConfig::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIHoursOfOperationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHoursOfOperationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_day_isValid && m_start_time_isValid && m_end_time_isValid && true;
}

} // namespace OpenAPI
