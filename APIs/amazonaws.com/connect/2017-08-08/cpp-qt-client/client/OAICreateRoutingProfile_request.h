/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRoutingProfile_request.h
 *
 * 
 */

#ifndef OAICreateRoutingProfile_request_H
#define OAICreateRoutingProfile_request_H

#include <QJsonObject>

#include "OAIMediaConcurrency.h"
#include "OAIRoutingProfileQueueConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoutingProfileQueueConfig;
class OAIMediaConcurrency;

class OAICreateRoutingProfile_request : public OAIObject {
public:
    OAICreateRoutingProfile_request();
    OAICreateRoutingProfile_request(QString json);
    ~OAICreateRoutingProfile_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDefaultOutboundQueueId() const;
    void setDefaultOutboundQueueId(const QString &default_outbound_queue_id);
    bool is_default_outbound_queue_id_Set() const;
    bool is_default_outbound_queue_id_Valid() const;

    QList<OAIRoutingProfileQueueConfig> getQueueConfigs() const;
    void setQueueConfigs(const QList<OAIRoutingProfileQueueConfig> &queue_configs);
    bool is_queue_configs_Set() const;
    bool is_queue_configs_Valid() const;

    QList<OAIMediaConcurrency> getMediaConcurrencies() const;
    void setMediaConcurrencies(const QList<OAIMediaConcurrency> &media_concurrencies);
    bool is_media_concurrencies_Set() const;
    bool is_media_concurrencies_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getAgentAvailabilityTimer() const;
    void setAgentAvailabilityTimer(const QString &agent_availability_timer);
    bool is_agent_availability_timer_Set() const;
    bool is_agent_availability_timer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_default_outbound_queue_id;
    bool m_default_outbound_queue_id_isSet;
    bool m_default_outbound_queue_id_isValid;

    QList<OAIRoutingProfileQueueConfig> m_queue_configs;
    bool m_queue_configs_isSet;
    bool m_queue_configs_isValid;

    QList<OAIMediaConcurrency> m_media_concurrencies;
    bool m_media_concurrencies_isSet;
    bool m_media_concurrencies_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_agent_availability_timer;
    bool m_agent_availability_timer_isSet;
    bool m_agent_availability_timer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRoutingProfile_request)

#endif // OAICreateRoutingProfile_request_H
