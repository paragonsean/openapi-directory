/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluationFormSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluationFormSummary::OAIEvaluationFormSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluationFormSummary::OAIEvaluationFormSummary() {
    this->initializeModel();
}

OAIEvaluationFormSummary::~OAIEvaluationFormSummary() {}

void OAIEvaluationFormSummary::initializeModel() {

    m_evaluation_form_id_isSet = false;
    m_evaluation_form_id_isValid = false;

    m_evaluation_form_arn_isSet = false;
    m_evaluation_form_arn_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_last_activated_time_isSet = false;
    m_last_activated_time_isValid = false;

    m_last_activated_by_isSet = false;
    m_last_activated_by_isValid = false;

    m_latest_version_isSet = false;
    m_latest_version_isValid = false;

    m_active_version_isSet = false;
    m_active_version_isValid = false;
}

void OAIEvaluationFormSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEvaluationFormSummary::fromJsonObject(QJsonObject json) {

    m_evaluation_form_id_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_id, json[QString("EvaluationFormId")]);
    m_evaluation_form_id_isSet = !json[QString("EvaluationFormId")].isNull() && m_evaluation_form_id_isValid;

    m_evaluation_form_arn_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_arn, json[QString("EvaluationFormArn")]);
    m_evaluation_form_arn_isSet = !json[QString("EvaluationFormArn")].isNull() && m_evaluation_form_arn_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_last_activated_time_isValid = ::OpenAPI::fromJsonValue(m_last_activated_time, json[QString("LastActivatedTime")]);
    m_last_activated_time_isSet = !json[QString("LastActivatedTime")].isNull() && m_last_activated_time_isValid;

    m_last_activated_by_isValid = ::OpenAPI::fromJsonValue(m_last_activated_by, json[QString("LastActivatedBy")]);
    m_last_activated_by_isSet = !json[QString("LastActivatedBy")].isNull() && m_last_activated_by_isValid;

    m_latest_version_isValid = ::OpenAPI::fromJsonValue(m_latest_version, json[QString("LatestVersion")]);
    m_latest_version_isSet = !json[QString("LatestVersion")].isNull() && m_latest_version_isValid;

    m_active_version_isValid = ::OpenAPI::fromJsonValue(m_active_version, json[QString("ActiveVersion")]);
    m_active_version_isSet = !json[QString("ActiveVersion")].isNull() && m_active_version_isValid;
}

QString OAIEvaluationFormSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEvaluationFormSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_form_id_isSet) {
        obj.insert(QString("EvaluationFormId"), ::OpenAPI::toJsonValue(m_evaluation_form_id));
    }
    if (m_evaluation_form_arn_isSet) {
        obj.insert(QString("EvaluationFormArn"), ::OpenAPI::toJsonValue(m_evaluation_form_arn));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_last_activated_time_isSet) {
        obj.insert(QString("LastActivatedTime"), ::OpenAPI::toJsonValue(m_last_activated_time));
    }
    if (m_last_activated_by_isSet) {
        obj.insert(QString("LastActivatedBy"), ::OpenAPI::toJsonValue(m_last_activated_by));
    }
    if (m_latest_version_isSet) {
        obj.insert(QString("LatestVersion"), ::OpenAPI::toJsonValue(m_latest_version));
    }
    if (m_active_version_isSet) {
        obj.insert(QString("ActiveVersion"), ::OpenAPI::toJsonValue(m_active_version));
    }
    return obj;
}

QString OAIEvaluationFormSummary::getEvaluationFormId() const {
    return m_evaluation_form_id;
}
void OAIEvaluationFormSummary::setEvaluationFormId(const QString &evaluation_form_id) {
    m_evaluation_form_id = evaluation_form_id;
    m_evaluation_form_id_isSet = true;
}

bool OAIEvaluationFormSummary::is_evaluation_form_id_Set() const{
    return m_evaluation_form_id_isSet;
}

bool OAIEvaluationFormSummary::is_evaluation_form_id_Valid() const{
    return m_evaluation_form_id_isValid;
}

QString OAIEvaluationFormSummary::getEvaluationFormArn() const {
    return m_evaluation_form_arn;
}
void OAIEvaluationFormSummary::setEvaluationFormArn(const QString &evaluation_form_arn) {
    m_evaluation_form_arn = evaluation_form_arn;
    m_evaluation_form_arn_isSet = true;
}

bool OAIEvaluationFormSummary::is_evaluation_form_arn_Set() const{
    return m_evaluation_form_arn_isSet;
}

bool OAIEvaluationFormSummary::is_evaluation_form_arn_Valid() const{
    return m_evaluation_form_arn_isValid;
}

QString OAIEvaluationFormSummary::getTitle() const {
    return m_title;
}
void OAIEvaluationFormSummary::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEvaluationFormSummary::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEvaluationFormSummary::is_title_Valid() const{
    return m_title_isValid;
}

QDateTime OAIEvaluationFormSummary::getCreatedTime() const {
    return m_created_time;
}
void OAIEvaluationFormSummary::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIEvaluationFormSummary::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIEvaluationFormSummary::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIEvaluationFormSummary::getCreatedBy() const {
    return m_created_by;
}
void OAIEvaluationFormSummary::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIEvaluationFormSummary::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIEvaluationFormSummary::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIEvaluationFormSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIEvaluationFormSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIEvaluationFormSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIEvaluationFormSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIEvaluationFormSummary::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIEvaluationFormSummary::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIEvaluationFormSummary::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIEvaluationFormSummary::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

QDateTime OAIEvaluationFormSummary::getLastActivatedTime() const {
    return m_last_activated_time;
}
void OAIEvaluationFormSummary::setLastActivatedTime(const QDateTime &last_activated_time) {
    m_last_activated_time = last_activated_time;
    m_last_activated_time_isSet = true;
}

bool OAIEvaluationFormSummary::is_last_activated_time_Set() const{
    return m_last_activated_time_isSet;
}

bool OAIEvaluationFormSummary::is_last_activated_time_Valid() const{
    return m_last_activated_time_isValid;
}

QString OAIEvaluationFormSummary::getLastActivatedBy() const {
    return m_last_activated_by;
}
void OAIEvaluationFormSummary::setLastActivatedBy(const QString &last_activated_by) {
    m_last_activated_by = last_activated_by;
    m_last_activated_by_isSet = true;
}

bool OAIEvaluationFormSummary::is_last_activated_by_Set() const{
    return m_last_activated_by_isSet;
}

bool OAIEvaluationFormSummary::is_last_activated_by_Valid() const{
    return m_last_activated_by_isValid;
}

qint32 OAIEvaluationFormSummary::getLatestVersion() const {
    return m_latest_version;
}
void OAIEvaluationFormSummary::setLatestVersion(const qint32 &latest_version) {
    m_latest_version = latest_version;
    m_latest_version_isSet = true;
}

bool OAIEvaluationFormSummary::is_latest_version_Set() const{
    return m_latest_version_isSet;
}

bool OAIEvaluationFormSummary::is_latest_version_Valid() const{
    return m_latest_version_isValid;
}

qint32 OAIEvaluationFormSummary::getActiveVersion() const {
    return m_active_version;
}
void OAIEvaluationFormSummary::setActiveVersion(const qint32 &active_version) {
    m_active_version = active_version;
    m_active_version_isSet = true;
}

bool OAIEvaluationFormSummary::is_active_version_Set() const{
    return m_active_version_isSet;
}

bool OAIEvaluationFormSummary::is_active_version_Valid() const{
    return m_active_version_isValid;
}

bool OAIEvaluationFormSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_form_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_form_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_activated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_activated_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEvaluationFormSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_evaluation_form_id_isValid && m_evaluation_form_arn_isValid && m_title_isValid && m_created_time_isValid && m_created_by_isValid && m_last_modified_time_isValid && m_last_modified_by_isValid && m_latest_version_isValid && true;
}

} // namespace OpenAPI
