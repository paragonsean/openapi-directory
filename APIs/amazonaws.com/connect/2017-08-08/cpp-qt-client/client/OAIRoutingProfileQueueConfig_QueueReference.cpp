/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoutingProfileQueueConfig_QueueReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoutingProfileQueueConfig_QueueReference::OAIRoutingProfileQueueConfig_QueueReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoutingProfileQueueConfig_QueueReference::OAIRoutingProfileQueueConfig_QueueReference() {
    this->initializeModel();
}

OAIRoutingProfileQueueConfig_QueueReference::~OAIRoutingProfileQueueConfig_QueueReference() {}

void OAIRoutingProfileQueueConfig_QueueReference::initializeModel() {

    m_queue_id_isSet = false;
    m_queue_id_isValid = false;

    m_channel_isSet = false;
    m_channel_isValid = false;
}

void OAIRoutingProfileQueueConfig_QueueReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoutingProfileQueueConfig_QueueReference::fromJsonObject(QJsonObject json) {

    m_queue_id_isValid = ::OpenAPI::fromJsonValue(m_queue_id, json[QString("QueueId")]);
    m_queue_id_isSet = !json[QString("QueueId")].isNull() && m_queue_id_isValid;

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("Channel")]);
    m_channel_isSet = !json[QString("Channel")].isNull() && m_channel_isValid;
}

QString OAIRoutingProfileQueueConfig_QueueReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoutingProfileQueueConfig_QueueReference::asJsonObject() const {
    QJsonObject obj;
    if (m_queue_id_isSet) {
        obj.insert(QString("QueueId"), ::OpenAPI::toJsonValue(m_queue_id));
    }
    if (m_channel.isSet()) {
        obj.insert(QString("Channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    return obj;
}

QString OAIRoutingProfileQueueConfig_QueueReference::getQueueId() const {
    return m_queue_id;
}
void OAIRoutingProfileQueueConfig_QueueReference::setQueueId(const QString &queue_id) {
    m_queue_id = queue_id;
    m_queue_id_isSet = true;
}

bool OAIRoutingProfileQueueConfig_QueueReference::is_queue_id_Set() const{
    return m_queue_id_isSet;
}

bool OAIRoutingProfileQueueConfig_QueueReference::is_queue_id_Valid() const{
    return m_queue_id_isValid;
}

OAIChannel OAIRoutingProfileQueueConfig_QueueReference::getChannel() const {
    return m_channel;
}
void OAIRoutingProfileQueueConfig_QueueReference::setChannel(const OAIChannel &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIRoutingProfileQueueConfig_QueueReference::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIRoutingProfileQueueConfig_QueueReference::is_channel_Valid() const{
    return m_channel_isValid;
}

bool OAIRoutingProfileQueueConfig_QueueReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queue_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoutingProfileQueueConfig_QueueReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_queue_id_isValid && m_channel_isValid && true;
}

} // namespace OpenAPI
