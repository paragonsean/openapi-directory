/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceStorageConfig.h
 *
 * The storage configuration for the instance.
 */

#ifndef OAIInstanceStorageConfig_H
#define OAIInstanceStorageConfig_H

#include <QJsonObject>

#include "OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig.h"
#include "OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisStreamConfig.h"
#include "OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisVideoStreamConfig.h"
#include "OAIAssociateInstanceStorageConfig_request_StorageConfig_S3Config.h"
#include "OAIStorageType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssociateInstanceStorageConfig_request_StorageConfig_S3Config;
class OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisVideoStreamConfig;
class OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisStreamConfig;
class OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig;

class OAIInstanceStorageConfig : public OAIObject {
public:
    OAIInstanceStorageConfig();
    OAIInstanceStorageConfig(QString json);
    ~OAIInstanceStorageConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssociationId() const;
    void setAssociationId(const QString &association_id);
    bool is_association_id_Set() const;
    bool is_association_id_Valid() const;

    OAIStorageType getStorageType() const;
    void setStorageType(const OAIStorageType &storage_type);
    bool is_storage_type_Set() const;
    bool is_storage_type_Valid() const;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_S3Config getS3Config() const;
    void setS3Config(const OAIAssociateInstanceStorageConfig_request_StorageConfig_S3Config &s3_config);
    bool is_s3_config_Set() const;
    bool is_s3_config_Valid() const;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisVideoStreamConfig getKinesisVideoStreamConfig() const;
    void setKinesisVideoStreamConfig(const OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisVideoStreamConfig &kinesis_video_stream_config);
    bool is_kinesis_video_stream_config_Set() const;
    bool is_kinesis_video_stream_config_Valid() const;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisStreamConfig getKinesisStreamConfig() const;
    void setKinesisStreamConfig(const OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisStreamConfig &kinesis_stream_config);
    bool is_kinesis_stream_config_Set() const;
    bool is_kinesis_stream_config_Valid() const;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig getKinesisFirehoseConfig() const;
    void setKinesisFirehoseConfig(const OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig &kinesis_firehose_config);
    bool is_kinesis_firehose_config_Set() const;
    bool is_kinesis_firehose_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_association_id;
    bool m_association_id_isSet;
    bool m_association_id_isValid;

    OAIStorageType m_storage_type;
    bool m_storage_type_isSet;
    bool m_storage_type_isValid;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_S3Config m_s3_config;
    bool m_s3_config_isSet;
    bool m_s3_config_isValid;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisVideoStreamConfig m_kinesis_video_stream_config;
    bool m_kinesis_video_stream_config_isSet;
    bool m_kinesis_video_stream_config_isValid;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisStreamConfig m_kinesis_stream_config;
    bool m_kinesis_stream_config_isSet;
    bool m_kinesis_stream_config_isValid;

    OAIAssociateInstanceStorageConfig_request_StorageConfig_KinesisFirehoseConfig m_kinesis_firehose_config;
    bool m_kinesis_firehose_config_isSet;
    bool m_kinesis_firehose_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceStorageConfig)

#endif // OAIInstanceStorageConfig_H
