/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskTemplateField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskTemplateField::OAITaskTemplateField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskTemplateField::OAITaskTemplateField() {
    this->initializeModel();
}

OAITaskTemplateField::~OAITaskTemplateField() {}

void OAITaskTemplateField::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_single_select_options_isSet = false;
    m_single_select_options_isValid = false;
}

void OAITaskTemplateField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskTemplateField::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_single_select_options_isValid = ::OpenAPI::fromJsonValue(m_single_select_options, json[QString("SingleSelectOptions")]);
    m_single_select_options_isSet = !json[QString("SingleSelectOptions")].isNull() && m_single_select_options_isValid;
}

QString OAITaskTemplateField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskTemplateField::asJsonObject() const {
    QJsonObject obj;
    if (m_id.isSet()) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_single_select_options.isSet()) {
        obj.insert(QString("SingleSelectOptions"), ::OpenAPI::toJsonValue(m_single_select_options));
    }
    return obj;
}

OAITaskTemplateField_Id OAITaskTemplateField::getId() const {
    return m_id;
}
void OAITaskTemplateField::setId(const OAITaskTemplateField_Id &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITaskTemplateField::is_id_Set() const{
    return m_id_isSet;
}

bool OAITaskTemplateField::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITaskTemplateField::getDescription() const {
    return m_description;
}
void OAITaskTemplateField::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITaskTemplateField::is_description_Set() const{
    return m_description_isSet;
}

bool OAITaskTemplateField::is_description_Valid() const{
    return m_description_isValid;
}

OAITaskTemplateFieldType OAITaskTemplateField::getType() const {
    return m_type;
}
void OAITaskTemplateField::setType(const OAITaskTemplateFieldType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAITaskTemplateField::is_type_Set() const{
    return m_type_isSet;
}

bool OAITaskTemplateField::is_type_Valid() const{
    return m_type_isValid;
}

QList OAITaskTemplateField::getSingleSelectOptions() const {
    return m_single_select_options;
}
void OAITaskTemplateField::setSingleSelectOptions(const QList &single_select_options) {
    m_single_select_options = single_select_options;
    m_single_select_options_isSet = true;
}

bool OAITaskTemplateField::is_single_select_options_Set() const{
    return m_single_select_options_isSet;
}

bool OAITaskTemplateField::is_single_select_options_Valid() const{
    return m_single_select_options_isValid;
}

bool OAITaskTemplateField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_single_select_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskTemplateField::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && true;
}

} // namespace OpenAPI
