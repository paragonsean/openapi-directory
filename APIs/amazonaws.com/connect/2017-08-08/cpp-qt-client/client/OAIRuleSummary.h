/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleSummary.h
 *
 * A list of &lt;code&gt;ActionTypes&lt;/code&gt; associated with a rule. 
 */

#ifndef OAIRuleSummary_H
#define OAIRuleSummary_H

#include <QJsonObject>

#include "OAIEventSourceName.h"
#include "OAIRulePublishStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRuleSummary : public OAIObject {
public:
    OAIRuleSummary();
    OAIRuleSummary(QString json);
    ~OAIRuleSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    QString getRuleArn() const;
    void setRuleArn(const QString &rule_arn);
    bool is_rule_arn_Set() const;
    bool is_rule_arn_Valid() const;

    OAIEventSourceName getEventSourceName() const;
    void setEventSourceName(const OAIEventSourceName &event_source_name);
    bool is_event_source_name_Set() const;
    bool is_event_source_name_Valid() const;

    OAIRulePublishStatus getPublishStatus() const;
    void setPublishStatus(const OAIRulePublishStatus &publish_status);
    bool is_publish_status_Set() const;
    bool is_publish_status_Valid() const;

    QList getActionSummaries() const;
    void setActionSummaries(const QList &action_summaries);
    bool is_action_summaries_Set() const;
    bool is_action_summaries_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    QString m_rule_arn;
    bool m_rule_arn_isSet;
    bool m_rule_arn_isValid;

    OAIEventSourceName m_event_source_name;
    bool m_event_source_name_isSet;
    bool m_event_source_name_isValid;

    OAIRulePublishStatus m_publish_status;
    bool m_publish_status_isSet;
    bool m_publish_status_isValid;

    QList m_action_summaries;
    bool m_action_summaries_isSet;
    bool m_action_summaries_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleSummary)

#endif // OAIRuleSummary_H
