/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContactFlowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContactFlowRequest::OAICreateContactFlowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContactFlowRequest::OAICreateContactFlowRequest() {
    this->initializeModel();
}

OAICreateContactFlowRequest::~OAICreateContactFlowRequest() {}

void OAICreateContactFlowRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateContactFlowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContactFlowRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateContactFlowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContactFlowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_content_isSet) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateContactFlowRequest::getName() const {
    return m_name;
}
void OAICreateContactFlowRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateContactFlowRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateContactFlowRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIContactFlowType OAICreateContactFlowRequest::getType() const {
    return m_type;
}
void OAICreateContactFlowRequest::setType(const OAIContactFlowType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateContactFlowRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateContactFlowRequest::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICreateContactFlowRequest::getDescription() const {
    return m_description;
}
void OAICreateContactFlowRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateContactFlowRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateContactFlowRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateContactFlowRequest::getContent() const {
    return m_content;
}
void OAICreateContactFlowRequest::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAICreateContactFlowRequest::is_content_Set() const{
    return m_content_isSet;
}

bool OAICreateContactFlowRequest::is_content_Valid() const{
    return m_content_isValid;
}

QMap OAICreateContactFlowRequest::getTags() const {
    return m_tags;
}
void OAICreateContactFlowRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateContactFlowRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateContactFlowRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateContactFlowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContactFlowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_type_isValid && m_content_isValid && true;
}

} // namespace OpenAPI
