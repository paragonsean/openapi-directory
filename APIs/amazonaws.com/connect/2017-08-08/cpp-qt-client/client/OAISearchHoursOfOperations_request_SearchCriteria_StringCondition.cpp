/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchHoursOfOperations_request_SearchCriteria_StringCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::OAISearchHoursOfOperations_request_SearchCriteria_StringCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::OAISearchHoursOfOperations_request_SearchCriteria_StringCondition() {
    this->initializeModel();
}

OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::~OAISearchHoursOfOperations_request_SearchCriteria_StringCondition() {}

void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::initializeModel() {

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_comparison_type_isSet = false;
    m_comparison_type_isValid = false;
}

void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::fromJsonObject(QJsonObject json) {

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("FieldName")]);
    m_field_name_isSet = !json[QString("FieldName")].isNull() && m_field_name_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;

    m_comparison_type_isValid = ::OpenAPI::fromJsonValue(m_comparison_type, json[QString("ComparisonType")]);
    m_comparison_type_isSet = !json[QString("ComparisonType")].isNull() && m_comparison_type_isValid;
}

QString OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_field_name_isSet) {
        obj.insert(QString("FieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_comparison_type.isSet()) {
        obj.insert(QString("ComparisonType"), ::OpenAPI::toJsonValue(m_comparison_type));
    }
    return obj;
}

QString OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::getFieldName() const {
    return m_field_name;
}
void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_field_name_Valid() const{
    return m_field_name_isValid;
}

QString OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::getValue() const {
    return m_value;
}
void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_value_Set() const{
    return m_value_isSet;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_value_Valid() const{
    return m_value_isValid;
}

OAIStringComparisonType OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::getComparisonType() const {
    return m_comparison_type;
}
void OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::setComparisonType(const OAIStringComparisonType &comparison_type) {
    m_comparison_type = comparison_type;
    m_comparison_type_isSet = true;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_comparison_type_Set() const{
    return m_comparison_type_isSet;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::is_comparison_type_Valid() const{
    return m_comparison_type_isValid;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comparison_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchHoursOfOperations_request_SearchCriteria_StringCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
