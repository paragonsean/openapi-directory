/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClaimPhoneNumber_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClaimPhoneNumber_request::OAIClaimPhoneNumber_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClaimPhoneNumber_request::OAIClaimPhoneNumber_request() {
    this->initializeModel();
}

OAIClaimPhoneNumber_request::~OAIClaimPhoneNumber_request() {}

void OAIClaimPhoneNumber_request::initializeModel() {

    m_target_arn_isSet = false;
    m_target_arn_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_phone_number_description_isSet = false;
    m_phone_number_description_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIClaimPhoneNumber_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClaimPhoneNumber_request::fromJsonObject(QJsonObject json) {

    m_target_arn_isValid = ::OpenAPI::fromJsonValue(m_target_arn, json[QString("TargetArn")]);
    m_target_arn_isSet = !json[QString("TargetArn")].isNull() && m_target_arn_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_phone_number_description_isValid = ::OpenAPI::fromJsonValue(m_phone_number_description, json[QString("PhoneNumberDescription")]);
    m_phone_number_description_isSet = !json[QString("PhoneNumberDescription")].isNull() && m_phone_number_description_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;
}

QString OAIClaimPhoneNumber_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClaimPhoneNumber_request::asJsonObject() const {
    QJsonObject obj;
    if (m_target_arn_isSet) {
        obj.insert(QString("TargetArn"), ::OpenAPI::toJsonValue(m_target_arn));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_phone_number_description_isSet) {
        obj.insert(QString("PhoneNumberDescription"), ::OpenAPI::toJsonValue(m_phone_number_description));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QString OAIClaimPhoneNumber_request::getTargetArn() const {
    return m_target_arn;
}
void OAIClaimPhoneNumber_request::setTargetArn(const QString &target_arn) {
    m_target_arn = target_arn;
    m_target_arn_isSet = true;
}

bool OAIClaimPhoneNumber_request::is_target_arn_Set() const{
    return m_target_arn_isSet;
}

bool OAIClaimPhoneNumber_request::is_target_arn_Valid() const{
    return m_target_arn_isValid;
}

QString OAIClaimPhoneNumber_request::getPhoneNumber() const {
    return m_phone_number;
}
void OAIClaimPhoneNumber_request::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIClaimPhoneNumber_request::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIClaimPhoneNumber_request::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIClaimPhoneNumber_request::getPhoneNumberDescription() const {
    return m_phone_number_description;
}
void OAIClaimPhoneNumber_request::setPhoneNumberDescription(const QString &phone_number_description) {
    m_phone_number_description = phone_number_description;
    m_phone_number_description_isSet = true;
}

bool OAIClaimPhoneNumber_request::is_phone_number_description_Set() const{
    return m_phone_number_description_isSet;
}

bool OAIClaimPhoneNumber_request::is_phone_number_description_Valid() const{
    return m_phone_number_description_isValid;
}

QMap<QString, QString> OAIClaimPhoneNumber_request::getTags() const {
    return m_tags;
}
void OAIClaimPhoneNumber_request::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIClaimPhoneNumber_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIClaimPhoneNumber_request::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIClaimPhoneNumber_request::getClientToken() const {
    return m_client_token;
}
void OAIClaimPhoneNumber_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIClaimPhoneNumber_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIClaimPhoneNumber_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIClaimPhoneNumber_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClaimPhoneNumber_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_arn_isValid && m_phone_number_isValid && true;
}

} // namespace OpenAPI
