/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTaskTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTaskTemplateResponse::OAIUpdateTaskTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTaskTemplateResponse::OAIUpdateTaskTemplateResponse() {
    this->initializeModel();
}

OAIUpdateTaskTemplateResponse::~OAIUpdateTaskTemplateResponse() {}

void OAIUpdateTaskTemplateResponse::initializeModel() {

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_contact_flow_id_isSet = false;
    m_contact_flow_id_isValid = false;

    m_constraints_isSet = false;
    m_constraints_isValid = false;

    m_defaults_isSet = false;
    m_defaults_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;
}

void OAIUpdateTaskTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTaskTemplateResponse::fromJsonObject(QJsonObject json) {

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("InstanceId")]);
    m_instance_id_isSet = !json[QString("InstanceId")].isNull() && m_instance_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_contact_flow_id_isValid = ::OpenAPI::fromJsonValue(m_contact_flow_id, json[QString("ContactFlowId")]);
    m_contact_flow_id_isSet = !json[QString("ContactFlowId")].isNull() && m_contact_flow_id_isValid;

    m_constraints_isValid = ::OpenAPI::fromJsonValue(m_constraints, json[QString("Constraints")]);
    m_constraints_isSet = !json[QString("Constraints")].isNull() && m_constraints_isValid;

    m_defaults_isValid = ::OpenAPI::fromJsonValue(m_defaults, json[QString("Defaults")]);
    m_defaults_isSet = !json[QString("Defaults")].isNull() && m_defaults_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("Fields")]);
    m_fields_isSet = !json[QString("Fields")].isNull() && m_fields_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;
}

QString OAIUpdateTaskTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTaskTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_id_isSet) {
        obj.insert(QString("InstanceId"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_contact_flow_id_isSet) {
        obj.insert(QString("ContactFlowId"), ::OpenAPI::toJsonValue(m_contact_flow_id));
    }
    if (m_constraints.isSet()) {
        obj.insert(QString("Constraints"), ::OpenAPI::toJsonValue(m_constraints));
    }
    if (m_defaults.isSet()) {
        obj.insert(QString("Defaults"), ::OpenAPI::toJsonValue(m_defaults));
    }
    if (m_fields.isSet()) {
        obj.insert(QString("Fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    return obj;
}

QString OAIUpdateTaskTemplateResponse::getInstanceId() const {
    return m_instance_id;
}
void OAIUpdateTaskTemplateResponse::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

QString OAIUpdateTaskTemplateResponse::getId() const {
    return m_id;
}
void OAIUpdateTaskTemplateResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUpdateTaskTemplateResponse::getArn() const {
    return m_arn;
}
void OAIUpdateTaskTemplateResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIUpdateTaskTemplateResponse::getName() const {
    return m_name;
}
void OAIUpdateTaskTemplateResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateTaskTemplateResponse::getDescription() const {
    return m_description;
}
void OAIUpdateTaskTemplateResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateTaskTemplateResponse::getContactFlowId() const {
    return m_contact_flow_id;
}
void OAIUpdateTaskTemplateResponse::setContactFlowId(const QString &contact_flow_id) {
    m_contact_flow_id = contact_flow_id;
    m_contact_flow_id_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_contact_flow_id_Set() const{
    return m_contact_flow_id_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_contact_flow_id_Valid() const{
    return m_contact_flow_id_isValid;
}

OAIGetTaskTemplateResponse_Constraints OAIUpdateTaskTemplateResponse::getConstraints() const {
    return m_constraints;
}
void OAIUpdateTaskTemplateResponse::setConstraints(const OAIGetTaskTemplateResponse_Constraints &constraints) {
    m_constraints = constraints;
    m_constraints_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_constraints_Set() const{
    return m_constraints_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_constraints_Valid() const{
    return m_constraints_isValid;
}

OAIGetTaskTemplateResponse_Defaults OAIUpdateTaskTemplateResponse::getDefaults() const {
    return m_defaults;
}
void OAIUpdateTaskTemplateResponse::setDefaults(const OAIGetTaskTemplateResponse_Defaults &defaults) {
    m_defaults = defaults;
    m_defaults_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_defaults_Set() const{
    return m_defaults_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_defaults_Valid() const{
    return m_defaults_isValid;
}

QList OAIUpdateTaskTemplateResponse::getFields() const {
    return m_fields;
}
void OAIUpdateTaskTemplateResponse::setFields(const QList &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_fields_Valid() const{
    return m_fields_isValid;
}

OAITaskTemplateStatus OAIUpdateTaskTemplateResponse::getStatus() const {
    return m_status;
}
void OAIUpdateTaskTemplateResponse::setStatus(const OAITaskTemplateStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIUpdateTaskTemplateResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIUpdateTaskTemplateResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QDateTime OAIUpdateTaskTemplateResponse::getCreatedTime() const {
    return m_created_time;
}
void OAIUpdateTaskTemplateResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIUpdateTaskTemplateResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIUpdateTaskTemplateResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

bool OAIUpdateTaskTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_flow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_defaults.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTaskTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
