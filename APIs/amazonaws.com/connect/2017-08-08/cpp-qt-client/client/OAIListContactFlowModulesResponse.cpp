/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListContactFlowModulesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListContactFlowModulesResponse::OAIListContactFlowModulesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListContactFlowModulesResponse::OAIListContactFlowModulesResponse() {
    this->initializeModel();
}

OAIListContactFlowModulesResponse::~OAIListContactFlowModulesResponse() {}

void OAIListContactFlowModulesResponse::initializeModel() {

    m_contact_flow_modules_summary_list_isSet = false;
    m_contact_flow_modules_summary_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListContactFlowModulesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListContactFlowModulesResponse::fromJsonObject(QJsonObject json) {

    m_contact_flow_modules_summary_list_isValid = ::OpenAPI::fromJsonValue(m_contact_flow_modules_summary_list, json[QString("ContactFlowModulesSummaryList")]);
    m_contact_flow_modules_summary_list_isSet = !json[QString("ContactFlowModulesSummaryList")].isNull() && m_contact_flow_modules_summary_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListContactFlowModulesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListContactFlowModulesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_flow_modules_summary_list.isSet()) {
        obj.insert(QString("ContactFlowModulesSummaryList"), ::OpenAPI::toJsonValue(m_contact_flow_modules_summary_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListContactFlowModulesResponse::getContactFlowModulesSummaryList() const {
    return m_contact_flow_modules_summary_list;
}
void OAIListContactFlowModulesResponse::setContactFlowModulesSummaryList(const QList &contact_flow_modules_summary_list) {
    m_contact_flow_modules_summary_list = contact_flow_modules_summary_list;
    m_contact_flow_modules_summary_list_isSet = true;
}

bool OAIListContactFlowModulesResponse::is_contact_flow_modules_summary_list_Set() const{
    return m_contact_flow_modules_summary_list_isSet;
}

bool OAIListContactFlowModulesResponse::is_contact_flow_modules_summary_list_Valid() const{
    return m_contact_flow_modules_summary_list_isValid;
}

QString OAIListContactFlowModulesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListContactFlowModulesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListContactFlowModulesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListContactFlowModulesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListContactFlowModulesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_flow_modules_summary_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListContactFlowModulesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
