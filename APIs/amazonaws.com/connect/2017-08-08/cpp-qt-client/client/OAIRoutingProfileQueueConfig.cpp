/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoutingProfileQueueConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoutingProfileQueueConfig::OAIRoutingProfileQueueConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoutingProfileQueueConfig::OAIRoutingProfileQueueConfig() {
    this->initializeModel();
}

OAIRoutingProfileQueueConfig::~OAIRoutingProfileQueueConfig() {}

void OAIRoutingProfileQueueConfig::initializeModel() {

    m_queue_reference_isSet = false;
    m_queue_reference_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_delay_isSet = false;
    m_delay_isValid = false;
}

void OAIRoutingProfileQueueConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoutingProfileQueueConfig::fromJsonObject(QJsonObject json) {

    m_queue_reference_isValid = ::OpenAPI::fromJsonValue(m_queue_reference, json[QString("QueueReference")]);
    m_queue_reference_isSet = !json[QString("QueueReference")].isNull() && m_queue_reference_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("Priority")]);
    m_priority_isSet = !json[QString("Priority")].isNull() && m_priority_isValid;

    m_delay_isValid = ::OpenAPI::fromJsonValue(m_delay, json[QString("Delay")]);
    m_delay_isSet = !json[QString("Delay")].isNull() && m_delay_isValid;
}

QString OAIRoutingProfileQueueConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoutingProfileQueueConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_queue_reference.isSet()) {
        obj.insert(QString("QueueReference"), ::OpenAPI::toJsonValue(m_queue_reference));
    }
    if (m_priority_isSet) {
        obj.insert(QString("Priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_delay_isSet) {
        obj.insert(QString("Delay"), ::OpenAPI::toJsonValue(m_delay));
    }
    return obj;
}

OAIRoutingProfileQueueConfig_QueueReference OAIRoutingProfileQueueConfig::getQueueReference() const {
    return m_queue_reference;
}
void OAIRoutingProfileQueueConfig::setQueueReference(const OAIRoutingProfileQueueConfig_QueueReference &queue_reference) {
    m_queue_reference = queue_reference;
    m_queue_reference_isSet = true;
}

bool OAIRoutingProfileQueueConfig::is_queue_reference_Set() const{
    return m_queue_reference_isSet;
}

bool OAIRoutingProfileQueueConfig::is_queue_reference_Valid() const{
    return m_queue_reference_isValid;
}

qint32 OAIRoutingProfileQueueConfig::getPriority() const {
    return m_priority;
}
void OAIRoutingProfileQueueConfig::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIRoutingProfileQueueConfig::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIRoutingProfileQueueConfig::is_priority_Valid() const{
    return m_priority_isValid;
}

qint32 OAIRoutingProfileQueueConfig::getDelay() const {
    return m_delay;
}
void OAIRoutingProfileQueueConfig::setDelay(const qint32 &delay) {
    m_delay = delay;
    m_delay_isSet = true;
}

bool OAIRoutingProfileQueueConfig::is_delay_Set() const{
    return m_delay_isSet;
}

bool OAIRoutingProfileQueueConfig::is_delay_Valid() const{
    return m_delay_isValid;
}

bool OAIRoutingProfileQueueConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queue_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delay_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoutingProfileQueueConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_queue_reference_isValid && m_priority_isValid && m_delay_isValid && true;
}

} // namespace OpenAPI
