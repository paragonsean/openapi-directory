/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartTaskContact_request.h
 *
 * 
 */

#ifndef OAIStartTaskContact_request_H
#define OAIStartTaskContact_request_H

#include <QJsonObject>

#include "OAIReference.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReference;

class OAIStartTaskContact_request : public OAIObject {
public:
    OAIStartTaskContact_request();
    OAIStartTaskContact_request(QString json);
    ~OAIStartTaskContact_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getPreviousContactId() const;
    void setPreviousContactId(const QString &previous_contact_id);
    bool is_previous_contact_id_Set() const;
    bool is_previous_contact_id_Valid() const;

    QString getContactFlowId() const;
    void setContactFlowId(const QString &contact_flow_id);
    bool is_contact_flow_id_Set() const;
    bool is_contact_flow_id_Valid() const;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QMap<QString, OAIReference> getReferences() const;
    void setReferences(const QMap<QString, OAIReference> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QDateTime getScheduledTime() const;
    void setScheduledTime(const QDateTime &scheduled_time);
    bool is_scheduled_time_Set() const;
    bool is_scheduled_time_Valid() const;

    QString getTaskTemplateId() const;
    void setTaskTemplateId(const QString &task_template_id);
    bool is_task_template_id_Set() const;
    bool is_task_template_id_Valid() const;

    QString getQuickConnectId() const;
    void setQuickConnectId(const QString &quick_connect_id);
    bool is_quick_connect_id_Set() const;
    bool is_quick_connect_id_Valid() const;

    QString getRelatedContactId() const;
    void setRelatedContactId(const QString &related_contact_id);
    bool is_related_contact_id_Set() const;
    bool is_related_contact_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_previous_contact_id;
    bool m_previous_contact_id_isSet;
    bool m_previous_contact_id_isValid;

    QString m_contact_flow_id;
    bool m_contact_flow_id_isSet;
    bool m_contact_flow_id_isValid;

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QMap<QString, OAIReference> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QDateTime m_scheduled_time;
    bool m_scheduled_time_isSet;
    bool m_scheduled_time_isValid;

    QString m_task_template_id;
    bool m_task_template_id_isSet;
    bool m_task_template_id_isValid;

    QString m_quick_connect_id;
    bool m_quick_connect_id_isSet;
    bool m_quick_connect_id_isValid;

    QString m_related_contact_id;
    bool m_related_contact_id_isSet;
    bool m_related_contact_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartTaskContact_request)

#endif // OAIStartTaskContact_request_H
