/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchQueuesRequest.h
 *
 * 
 */

#ifndef OAISearchQueuesRequest_H
#define OAISearchQueuesRequest_H

#include <QJsonObject>

#include "OAISearchQueuesRequest_SearchCriteria.h"
#include "OAISearchQueuesRequest_SearchFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchQueuesRequest_SearchFilter;
class OAISearchQueuesRequest_SearchCriteria;

class OAISearchQueuesRequest : public OAIObject {
public:
    OAISearchQueuesRequest();
    OAISearchQueuesRequest(QString json);
    ~OAISearchQueuesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAISearchQueuesRequest_SearchFilter getSearchFilter() const;
    void setSearchFilter(const OAISearchQueuesRequest_SearchFilter &search_filter);
    bool is_search_filter_Set() const;
    bool is_search_filter_Valid() const;

    OAISearchQueuesRequest_SearchCriteria getSearchCriteria() const;
    void setSearchCriteria(const OAISearchQueuesRequest_SearchCriteria &search_criteria);
    bool is_search_criteria_Set() const;
    bool is_search_criteria_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAISearchQueuesRequest_SearchFilter m_search_filter;
    bool m_search_filter_isSet;
    bool m_search_filter_isValid;

    OAISearchQueuesRequest_SearchCriteria m_search_criteria;
    bool m_search_criteria_isSet;
    bool m_search_criteria_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchQueuesRequest)

#endif // OAISearchQueuesRequest_H
