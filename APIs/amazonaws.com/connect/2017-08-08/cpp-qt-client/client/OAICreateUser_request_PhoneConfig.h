/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUser_request_PhoneConfig.h
 *
 * Contains information about the phone configuration settings for a user.
 */

#ifndef OAICreateUser_request_PhoneConfig_H
#define OAICreateUser_request_PhoneConfig_H

#include <QJsonObject>

#include "OAIPhoneType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateUser_request_PhoneConfig : public OAIObject {
public:
    OAICreateUser_request_PhoneConfig();
    OAICreateUser_request_PhoneConfig(QString json);
    ~OAICreateUser_request_PhoneConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPhoneType getPhoneType() const;
    void setPhoneType(const OAIPhoneType &phone_type);
    bool is_phone_type_Set() const;
    bool is_phone_type_Valid() const;

    bool getAutoAccept() const;
    void setAutoAccept(const bool &auto_accept);
    bool is_auto_accept_Set() const;
    bool is_auto_accept_Valid() const;

    qint32 getAfterContactWorkTimeLimit() const;
    void setAfterContactWorkTimeLimit(const qint32 &after_contact_work_time_limit);
    bool is_after_contact_work_time_limit_Set() const;
    bool is_after_contact_work_time_limit_Valid() const;

    QString getDeskPhoneNumber() const;
    void setDeskPhoneNumber(const QString &desk_phone_number);
    bool is_desk_phone_number_Set() const;
    bool is_desk_phone_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPhoneType m_phone_type;
    bool m_phone_type_isSet;
    bool m_phone_type_isValid;

    bool m_auto_accept;
    bool m_auto_accept_isSet;
    bool m_auto_accept_isValid;

    qint32 m_after_contact_work_time_limit;
    bool m_after_contact_work_time_limit_isSet;
    bool m_after_contact_work_time_limit_isValid;

    QString m_desk_phone_number;
    bool m_desk_phone_number_isSet;
    bool m_desk_phone_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUser_request_PhoneConfig)

#endif // OAICreateUser_request_PhoneConfig_H
