/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_IdentityInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_IdentityInfo::OAIUser_IdentityInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_IdentityInfo::OAIUser_IdentityInfo() {
    this->initializeModel();
}

OAIUser_IdentityInfo::~OAIUser_IdentityInfo() {}

void OAIUser_IdentityInfo::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_secondary_email_isSet = false;
    m_secondary_email_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;
}

void OAIUser_IdentityInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_IdentityInfo::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_secondary_email_isValid = ::OpenAPI::fromJsonValue(m_secondary_email, json[QString("SecondaryEmail")]);
    m_secondary_email_isSet = !json[QString("SecondaryEmail")].isNull() && m_secondary_email_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("Mobile")]);
    m_mobile_isSet = !json[QString("Mobile")].isNull() && m_mobile_isValid;
}

QString OAIUser_IdentityInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_IdentityInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_secondary_email_isSet) {
        obj.insert(QString("SecondaryEmail"), ::OpenAPI::toJsonValue(m_secondary_email));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("Mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    return obj;
}

QString OAIUser_IdentityInfo::getFirstName() const {
    return m_first_name;
}
void OAIUser_IdentityInfo::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUser_IdentityInfo::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUser_IdentityInfo::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUser_IdentityInfo::getLastName() const {
    return m_last_name;
}
void OAIUser_IdentityInfo::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUser_IdentityInfo::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUser_IdentityInfo::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUser_IdentityInfo::getEmail() const {
    return m_email;
}
void OAIUser_IdentityInfo::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUser_IdentityInfo::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUser_IdentityInfo::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUser_IdentityInfo::getSecondaryEmail() const {
    return m_secondary_email;
}
void OAIUser_IdentityInfo::setSecondaryEmail(const QString &secondary_email) {
    m_secondary_email = secondary_email;
    m_secondary_email_isSet = true;
}

bool OAIUser_IdentityInfo::is_secondary_email_Set() const{
    return m_secondary_email_isSet;
}

bool OAIUser_IdentityInfo::is_secondary_email_Valid() const{
    return m_secondary_email_isValid;
}

QString OAIUser_IdentityInfo::getMobile() const {
    return m_mobile;
}
void OAIUser_IdentityInfo::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAIUser_IdentityInfo::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAIUser_IdentityInfo::is_mobile_Valid() const{
    return m_mobile_isValid;
}

bool OAIUser_IdentityInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_IdentityInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
