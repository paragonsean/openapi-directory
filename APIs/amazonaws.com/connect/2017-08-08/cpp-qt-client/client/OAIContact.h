/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContact.h
 *
 * Contains information about a contact.
 */

#ifndef OAIContact_H
#define OAIContact_H

#include <QJsonObject>

#include "OAIChannel.h"
#include "OAIContactInitiationMethod.h"
#include "OAIContact_AgentInfo.h"
#include "OAIContact_QueueInfo.h"
#include "OAIContact_WisdomInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContact_QueueInfo;
class OAIContact_AgentInfo;
class OAIContact_WisdomInfo;

class OAIContact : public OAIObject {
public:
    OAIContact();
    OAIContact(QString json);
    ~OAIContact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInitialContactId() const;
    void setInitialContactId(const QString &initial_contact_id);
    bool is_initial_contact_id_Set() const;
    bool is_initial_contact_id_Valid() const;

    QString getPreviousContactId() const;
    void setPreviousContactId(const QString &previous_contact_id);
    bool is_previous_contact_id_Set() const;
    bool is_previous_contact_id_Valid() const;

    OAIContactInitiationMethod getInitiationMethod() const;
    void setInitiationMethod(const OAIContactInitiationMethod &initiation_method);
    bool is_initiation_method_Set() const;
    bool is_initiation_method_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIChannel getChannel() const;
    void setChannel(const OAIChannel &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAIContact_QueueInfo getQueueInfo() const;
    void setQueueInfo(const OAIContact_QueueInfo &queue_info);
    bool is_queue_info_Set() const;
    bool is_queue_info_Valid() const;

    OAIContact_AgentInfo getAgentInfo() const;
    void setAgentInfo(const OAIContact_AgentInfo &agent_info);
    bool is_agent_info_Set() const;
    bool is_agent_info_Valid() const;

    QDateTime getInitiationTimestamp() const;
    void setInitiationTimestamp(const QDateTime &initiation_timestamp);
    bool is_initiation_timestamp_Set() const;
    bool is_initiation_timestamp_Valid() const;

    QDateTime getDisconnectTimestamp() const;
    void setDisconnectTimestamp(const QDateTime &disconnect_timestamp);
    bool is_disconnect_timestamp_Set() const;
    bool is_disconnect_timestamp_Valid() const;

    QDateTime getLastUpdateTimestamp() const;
    void setLastUpdateTimestamp(const QDateTime &last_update_timestamp);
    bool is_last_update_timestamp_Set() const;
    bool is_last_update_timestamp_Valid() const;

    QDateTime getScheduledTimestamp() const;
    void setScheduledTimestamp(const QDateTime &scheduled_timestamp);
    bool is_scheduled_timestamp_Set() const;
    bool is_scheduled_timestamp_Valid() const;

    QString getRelatedContactId() const;
    void setRelatedContactId(const QString &related_contact_id);
    bool is_related_contact_id_Set() const;
    bool is_related_contact_id_Valid() const;

    OAIContact_WisdomInfo getWisdomInfo() const;
    void setWisdomInfo(const OAIContact_WisdomInfo &wisdom_info);
    bool is_wisdom_info_Set() const;
    bool is_wisdom_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_initial_contact_id;
    bool m_initial_contact_id_isSet;
    bool m_initial_contact_id_isValid;

    QString m_previous_contact_id;
    bool m_previous_contact_id_isSet;
    bool m_previous_contact_id_isValid;

    OAIContactInitiationMethod m_initiation_method;
    bool m_initiation_method_isSet;
    bool m_initiation_method_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIChannel m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAIContact_QueueInfo m_queue_info;
    bool m_queue_info_isSet;
    bool m_queue_info_isValid;

    OAIContact_AgentInfo m_agent_info;
    bool m_agent_info_isSet;
    bool m_agent_info_isValid;

    QDateTime m_initiation_timestamp;
    bool m_initiation_timestamp_isSet;
    bool m_initiation_timestamp_isValid;

    QDateTime m_disconnect_timestamp;
    bool m_disconnect_timestamp_isSet;
    bool m_disconnect_timestamp_isValid;

    QDateTime m_last_update_timestamp;
    bool m_last_update_timestamp_isSet;
    bool m_last_update_timestamp_isValid;

    QDateTime m_scheduled_timestamp;
    bool m_scheduled_timestamp_isSet;
    bool m_scheduled_timestamp_isValid;

    QString m_related_contact_id;
    bool m_related_contact_id_isSet;
    bool m_related_contact_id_isValid;

    OAIContact_WisdomInfo m_wisdom_info;
    bool m_wisdom_info_isSet;
    bool m_wisdom_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContact)

#endif // OAIContact_H
