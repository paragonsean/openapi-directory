/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContactFlowSummary.h
 *
 * &lt;p&gt;Contains summary information about a flow.&lt;/p&gt; &lt;p&gt;You can also create and update flows using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html\&quot;&gt;Amazon Connect Flow language&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIContactFlowSummary_H
#define OAIContactFlowSummary_H

#include <QJsonObject>

#include "OAIContactFlowState.h"
#include "OAIContactFlowType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContactFlowSummary : public OAIObject {
public:
    OAIContactFlowSummary();
    OAIContactFlowSummary(QString json);
    ~OAIContactFlowSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIContactFlowType getContactFlowType() const;
    void setContactFlowType(const OAIContactFlowType &contact_flow_type);
    bool is_contact_flow_type_Set() const;
    bool is_contact_flow_type_Valid() const;

    OAIContactFlowState getContactFlowState() const;
    void setContactFlowState(const OAIContactFlowState &contact_flow_state);
    bool is_contact_flow_state_Set() const;
    bool is_contact_flow_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIContactFlowType m_contact_flow_type;
    bool m_contact_flow_type_isSet;
    bool m_contact_flow_type_isValid;

    OAIContactFlowState m_contact_flow_state;
    bool m_contact_flow_state_isSet;
    bool m_contact_flow_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContactFlowSummary)

#endif // OAIContactFlowSummary_H
