/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeContactEvaluationResponse_EvaluationForm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeContactEvaluationResponse_EvaluationForm::OAIDescribeContactEvaluationResponse_EvaluationForm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeContactEvaluationResponse_EvaluationForm::OAIDescribeContactEvaluationResponse_EvaluationForm() {
    this->initializeModel();
}

OAIDescribeContactEvaluationResponse_EvaluationForm::~OAIDescribeContactEvaluationResponse_EvaluationForm() {}

void OAIDescribeContactEvaluationResponse_EvaluationForm::initializeModel() {

    m_evaluation_form_version_isSet = false;
    m_evaluation_form_version_isValid = false;

    m_evaluation_form_id_isSet = false;
    m_evaluation_form_id_isValid = false;

    m_evaluation_form_arn_isSet = false;
    m_evaluation_form_arn_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_scoring_strategy_isSet = false;
    m_scoring_strategy_isValid = false;
}

void OAIDescribeContactEvaluationResponse_EvaluationForm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeContactEvaluationResponse_EvaluationForm::fromJsonObject(QJsonObject json) {

    m_evaluation_form_version_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_version, json[QString("EvaluationFormVersion")]);
    m_evaluation_form_version_isSet = !json[QString("EvaluationFormVersion")].isNull() && m_evaluation_form_version_isValid;

    m_evaluation_form_id_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_id, json[QString("EvaluationFormId")]);
    m_evaluation_form_id_isSet = !json[QString("EvaluationFormId")].isNull() && m_evaluation_form_id_isValid;

    m_evaluation_form_arn_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_arn, json[QString("EvaluationFormArn")]);
    m_evaluation_form_arn_isSet = !json[QString("EvaluationFormArn")].isNull() && m_evaluation_form_arn_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_scoring_strategy_isValid = ::OpenAPI::fromJsonValue(m_scoring_strategy, json[QString("ScoringStrategy")]);
    m_scoring_strategy_isSet = !json[QString("ScoringStrategy")].isNull() && m_scoring_strategy_isValid;
}

QString OAIDescribeContactEvaluationResponse_EvaluationForm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeContactEvaluationResponse_EvaluationForm::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_form_version_isSet) {
        obj.insert(QString("EvaluationFormVersion"), ::OpenAPI::toJsonValue(m_evaluation_form_version));
    }
    if (m_evaluation_form_id_isSet) {
        obj.insert(QString("EvaluationFormId"), ::OpenAPI::toJsonValue(m_evaluation_form_id));
    }
    if (m_evaluation_form_arn_isSet) {
        obj.insert(QString("EvaluationFormArn"), ::OpenAPI::toJsonValue(m_evaluation_form_arn));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_items.isSet()) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_scoring_strategy.isSet()) {
        obj.insert(QString("ScoringStrategy"), ::OpenAPI::toJsonValue(m_scoring_strategy));
    }
    return obj;
}

qint32 OAIDescribeContactEvaluationResponse_EvaluationForm::getEvaluationFormVersion() const {
    return m_evaluation_form_version;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setEvaluationFormVersion(const qint32 &evaluation_form_version) {
    m_evaluation_form_version = evaluation_form_version;
    m_evaluation_form_version_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_version_Set() const{
    return m_evaluation_form_version_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_version_Valid() const{
    return m_evaluation_form_version_isValid;
}

QString OAIDescribeContactEvaluationResponse_EvaluationForm::getEvaluationFormId() const {
    return m_evaluation_form_id;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setEvaluationFormId(const QString &evaluation_form_id) {
    m_evaluation_form_id = evaluation_form_id;
    m_evaluation_form_id_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_id_Set() const{
    return m_evaluation_form_id_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_id_Valid() const{
    return m_evaluation_form_id_isValid;
}

QString OAIDescribeContactEvaluationResponse_EvaluationForm::getEvaluationFormArn() const {
    return m_evaluation_form_arn;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setEvaluationFormArn(const QString &evaluation_form_arn) {
    m_evaluation_form_arn = evaluation_form_arn;
    m_evaluation_form_arn_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_arn_Set() const{
    return m_evaluation_form_arn_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_evaluation_form_arn_Valid() const{
    return m_evaluation_form_arn_isValid;
}

QString OAIDescribeContactEvaluationResponse_EvaluationForm::getTitle() const {
    return m_title;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_title_Set() const{
    return m_title_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIDescribeContactEvaluationResponse_EvaluationForm::getDescription() const {
    return m_description;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_description_Valid() const{
    return m_description_isValid;
}

QList OAIDescribeContactEvaluationResponse_EvaluationForm::getItems() const {
    return m_items;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_items_Set() const{
    return m_items_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_items_Valid() const{
    return m_items_isValid;
}

OAICreateEvaluationFormRequest_ScoringStrategy OAIDescribeContactEvaluationResponse_EvaluationForm::getScoringStrategy() const {
    return m_scoring_strategy;
}
void OAIDescribeContactEvaluationResponse_EvaluationForm::setScoringStrategy(const OAICreateEvaluationFormRequest_ScoringStrategy &scoring_strategy) {
    m_scoring_strategy = scoring_strategy;
    m_scoring_strategy_isSet = true;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_scoring_strategy_Set() const{
    return m_scoring_strategy_isSet;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::is_scoring_strategy_Valid() const{
    return m_scoring_strategy_isValid;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_form_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_form_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_form_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scoring_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeContactEvaluationResponse_EvaluationForm::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_evaluation_form_version_isValid && m_evaluation_form_id_isValid && m_evaluation_form_arn_isValid && m_title_isValid && m_items_isValid && true;
}

} // namespace OpenAPI
