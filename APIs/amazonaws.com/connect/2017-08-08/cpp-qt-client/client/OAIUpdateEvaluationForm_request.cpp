/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateEvaluationForm_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateEvaluationForm_request::OAIUpdateEvaluationForm_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateEvaluationForm_request::OAIUpdateEvaluationForm_request() {
    this->initializeModel();
}

OAIUpdateEvaluationForm_request::~OAIUpdateEvaluationForm_request() {}

void OAIUpdateEvaluationForm_request::initializeModel() {

    m_evaluation_form_version_isSet = false;
    m_evaluation_form_version_isValid = false;

    m_create_new_version_isSet = false;
    m_create_new_version_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_scoring_strategy_isSet = false;
    m_scoring_strategy_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIUpdateEvaluationForm_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateEvaluationForm_request::fromJsonObject(QJsonObject json) {

    m_evaluation_form_version_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_version, json[QString("EvaluationFormVersion")]);
    m_evaluation_form_version_isSet = !json[QString("EvaluationFormVersion")].isNull() && m_evaluation_form_version_isValid;

    m_create_new_version_isValid = ::OpenAPI::fromJsonValue(m_create_new_version, json[QString("CreateNewVersion")]);
    m_create_new_version_isSet = !json[QString("CreateNewVersion")].isNull() && m_create_new_version_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_scoring_strategy_isValid = ::OpenAPI::fromJsonValue(m_scoring_strategy, json[QString("ScoringStrategy")]);
    m_scoring_strategy_isSet = !json[QString("ScoringStrategy")].isNull() && m_scoring_strategy_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;
}

QString OAIUpdateEvaluationForm_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateEvaluationForm_request::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_form_version_isSet) {
        obj.insert(QString("EvaluationFormVersion"), ::OpenAPI::toJsonValue(m_evaluation_form_version));
    }
    if (m_create_new_version_isSet) {
        obj.insert(QString("CreateNewVersion"), ::OpenAPI::toJsonValue(m_create_new_version));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_scoring_strategy.isSet()) {
        obj.insert(QString("ScoringStrategy"), ::OpenAPI::toJsonValue(m_scoring_strategy));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

qint32 OAIUpdateEvaluationForm_request::getEvaluationFormVersion() const {
    return m_evaluation_form_version;
}
void OAIUpdateEvaluationForm_request::setEvaluationFormVersion(const qint32 &evaluation_form_version) {
    m_evaluation_form_version = evaluation_form_version;
    m_evaluation_form_version_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_evaluation_form_version_Set() const{
    return m_evaluation_form_version_isSet;
}

bool OAIUpdateEvaluationForm_request::is_evaluation_form_version_Valid() const{
    return m_evaluation_form_version_isValid;
}

bool OAIUpdateEvaluationForm_request::isCreateNewVersion() const {
    return m_create_new_version;
}
void OAIUpdateEvaluationForm_request::setCreateNewVersion(const bool &create_new_version) {
    m_create_new_version = create_new_version;
    m_create_new_version_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_create_new_version_Set() const{
    return m_create_new_version_isSet;
}

bool OAIUpdateEvaluationForm_request::is_create_new_version_Valid() const{
    return m_create_new_version_isValid;
}

QString OAIUpdateEvaluationForm_request::getTitle() const {
    return m_title;
}
void OAIUpdateEvaluationForm_request::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_title_Set() const{
    return m_title_isSet;
}

bool OAIUpdateEvaluationForm_request::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIUpdateEvaluationForm_request::getDescription() const {
    return m_description;
}
void OAIUpdateEvaluationForm_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateEvaluationForm_request::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIEvaluationFormItem> OAIUpdateEvaluationForm_request::getItems() const {
    return m_items;
}
void OAIUpdateEvaluationForm_request::setItems(const QList<OAIEvaluationFormItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_items_Set() const{
    return m_items_isSet;
}

bool OAIUpdateEvaluationForm_request::is_items_Valid() const{
    return m_items_isValid;
}

OAICreateEvaluationForm_request_ScoringStrategy OAIUpdateEvaluationForm_request::getScoringStrategy() const {
    return m_scoring_strategy;
}
void OAIUpdateEvaluationForm_request::setScoringStrategy(const OAICreateEvaluationForm_request_ScoringStrategy &scoring_strategy) {
    m_scoring_strategy = scoring_strategy;
    m_scoring_strategy_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_scoring_strategy_Set() const{
    return m_scoring_strategy_isSet;
}

bool OAIUpdateEvaluationForm_request::is_scoring_strategy_Valid() const{
    return m_scoring_strategy_isValid;
}

QString OAIUpdateEvaluationForm_request::getClientToken() const {
    return m_client_token;
}
void OAIUpdateEvaluationForm_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateEvaluationForm_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateEvaluationForm_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIUpdateEvaluationForm_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_form_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_new_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scoring_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateEvaluationForm_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_evaluation_form_version_isValid && m_title_isValid && m_items_isValid && true;
}

} // namespace OpenAPI
