/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTaskTemplate_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTaskTemplate_request::OAIUpdateTaskTemplate_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTaskTemplate_request::OAIUpdateTaskTemplate_request() {
    this->initializeModel();
}

OAIUpdateTaskTemplate_request::~OAIUpdateTaskTemplate_request() {}

void OAIUpdateTaskTemplate_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_contact_flow_id_isSet = false;
    m_contact_flow_id_isValid = false;

    m_constraints_isSet = false;
    m_constraints_isValid = false;

    m_defaults_isSet = false;
    m_defaults_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAIUpdateTaskTemplate_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTaskTemplate_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_contact_flow_id_isValid = ::OpenAPI::fromJsonValue(m_contact_flow_id, json[QString("ContactFlowId")]);
    m_contact_flow_id_isSet = !json[QString("ContactFlowId")].isNull() && m_contact_flow_id_isValid;

    m_constraints_isValid = ::OpenAPI::fromJsonValue(m_constraints, json[QString("Constraints")]);
    m_constraints_isSet = !json[QString("Constraints")].isNull() && m_constraints_isValid;

    m_defaults_isValid = ::OpenAPI::fromJsonValue(m_defaults, json[QString("Defaults")]);
    m_defaults_isSet = !json[QString("Defaults")].isNull() && m_defaults_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("Fields")]);
    m_fields_isSet = !json[QString("Fields")].isNull() && m_fields_isValid;
}

QString OAIUpdateTaskTemplate_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTaskTemplate_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_contact_flow_id_isSet) {
        obj.insert(QString("ContactFlowId"), ::OpenAPI::toJsonValue(m_contact_flow_id));
    }
    if (m_constraints.isSet()) {
        obj.insert(QString("Constraints"), ::OpenAPI::toJsonValue(m_constraints));
    }
    if (m_defaults.isSet()) {
        obj.insert(QString("Defaults"), ::OpenAPI::toJsonValue(m_defaults));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("Fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

QString OAIUpdateTaskTemplate_request::getName() const {
    return m_name;
}
void OAIUpdateTaskTemplate_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateTaskTemplate_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateTaskTemplate_request::getDescription() const {
    return m_description;
}
void OAIUpdateTaskTemplate_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateTaskTemplate_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateTaskTemplate_request::getContactFlowId() const {
    return m_contact_flow_id;
}
void OAIUpdateTaskTemplate_request::setContactFlowId(const QString &contact_flow_id) {
    m_contact_flow_id = contact_flow_id;
    m_contact_flow_id_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_contact_flow_id_Set() const{
    return m_contact_flow_id_isSet;
}

bool OAIUpdateTaskTemplate_request::is_contact_flow_id_Valid() const{
    return m_contact_flow_id_isValid;
}

OAICreateTaskTemplate_request_Constraints OAIUpdateTaskTemplate_request::getConstraints() const {
    return m_constraints;
}
void OAIUpdateTaskTemplate_request::setConstraints(const OAICreateTaskTemplate_request_Constraints &constraints) {
    m_constraints = constraints;
    m_constraints_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_constraints_Set() const{
    return m_constraints_isSet;
}

bool OAIUpdateTaskTemplate_request::is_constraints_Valid() const{
    return m_constraints_isValid;
}

OAICreateTaskTemplate_request_Defaults OAIUpdateTaskTemplate_request::getDefaults() const {
    return m_defaults;
}
void OAIUpdateTaskTemplate_request::setDefaults(const OAICreateTaskTemplate_request_Defaults &defaults) {
    m_defaults = defaults;
    m_defaults_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_defaults_Set() const{
    return m_defaults_isSet;
}

bool OAIUpdateTaskTemplate_request::is_defaults_Valid() const{
    return m_defaults_isValid;
}

QString OAIUpdateTaskTemplate_request::getStatus() const {
    return m_status;
}
void OAIUpdateTaskTemplate_request::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateTaskTemplate_request::is_status_Valid() const{
    return m_status_isValid;
}

QList<OAITaskTemplateField> OAIUpdateTaskTemplate_request::getFields() const {
    return m_fields;
}
void OAIUpdateTaskTemplate_request::setFields(const QList<OAITaskTemplateField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateTaskTemplate_request::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateTaskTemplate_request::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAIUpdateTaskTemplate_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_flow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_defaults.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTaskTemplate_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
