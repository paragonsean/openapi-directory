/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClaimedPhoneNumberSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClaimedPhoneNumberSummary::OAIClaimedPhoneNumberSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClaimedPhoneNumberSummary::OAIClaimedPhoneNumberSummary() {
    this->initializeModel();
}

OAIClaimedPhoneNumberSummary::~OAIClaimedPhoneNumberSummary() {}

void OAIClaimedPhoneNumberSummary::initializeModel() {

    m_phone_number_id_isSet = false;
    m_phone_number_id_isValid = false;

    m_phone_number_arn_isSet = false;
    m_phone_number_arn_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_phone_number_country_code_isSet = false;
    m_phone_number_country_code_isValid = false;

    m_phone_number_type_isSet = false;
    m_phone_number_type_isValid = false;

    m_phone_number_description_isSet = false;
    m_phone_number_description_isValid = false;

    m_target_arn_isSet = false;
    m_target_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_phone_number_status_isSet = false;
    m_phone_number_status_isValid = false;
}

void OAIClaimedPhoneNumberSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClaimedPhoneNumberSummary::fromJsonObject(QJsonObject json) {

    m_phone_number_id_isValid = ::OpenAPI::fromJsonValue(m_phone_number_id, json[QString("PhoneNumberId")]);
    m_phone_number_id_isSet = !json[QString("PhoneNumberId")].isNull() && m_phone_number_id_isValid;

    m_phone_number_arn_isValid = ::OpenAPI::fromJsonValue(m_phone_number_arn, json[QString("PhoneNumberArn")]);
    m_phone_number_arn_isSet = !json[QString("PhoneNumberArn")].isNull() && m_phone_number_arn_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_phone_number_country_code_isValid = ::OpenAPI::fromJsonValue(m_phone_number_country_code, json[QString("PhoneNumberCountryCode")]);
    m_phone_number_country_code_isSet = !json[QString("PhoneNumberCountryCode")].isNull() && m_phone_number_country_code_isValid;

    m_phone_number_type_isValid = ::OpenAPI::fromJsonValue(m_phone_number_type, json[QString("PhoneNumberType")]);
    m_phone_number_type_isSet = !json[QString("PhoneNumberType")].isNull() && m_phone_number_type_isValid;

    m_phone_number_description_isValid = ::OpenAPI::fromJsonValue(m_phone_number_description, json[QString("PhoneNumberDescription")]);
    m_phone_number_description_isSet = !json[QString("PhoneNumberDescription")].isNull() && m_phone_number_description_isValid;

    m_target_arn_isValid = ::OpenAPI::fromJsonValue(m_target_arn, json[QString("TargetArn")]);
    m_target_arn_isSet = !json[QString("TargetArn")].isNull() && m_target_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_phone_number_status_isValid = ::OpenAPI::fromJsonValue(m_phone_number_status, json[QString("PhoneNumberStatus")]);
    m_phone_number_status_isSet = !json[QString("PhoneNumberStatus")].isNull() && m_phone_number_status_isValid;
}

QString OAIClaimedPhoneNumberSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClaimedPhoneNumberSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_number_id_isSet) {
        obj.insert(QString("PhoneNumberId"), ::OpenAPI::toJsonValue(m_phone_number_id));
    }
    if (m_phone_number_arn_isSet) {
        obj.insert(QString("PhoneNumberArn"), ::OpenAPI::toJsonValue(m_phone_number_arn));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_phone_number_country_code.isSet()) {
        obj.insert(QString("PhoneNumberCountryCode"), ::OpenAPI::toJsonValue(m_phone_number_country_code));
    }
    if (m_phone_number_type.isSet()) {
        obj.insert(QString("PhoneNumberType"), ::OpenAPI::toJsonValue(m_phone_number_type));
    }
    if (m_phone_number_description_isSet) {
        obj.insert(QString("PhoneNumberDescription"), ::OpenAPI::toJsonValue(m_phone_number_description));
    }
    if (m_target_arn_isSet) {
        obj.insert(QString("TargetArn"), ::OpenAPI::toJsonValue(m_target_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_phone_number_status.isSet()) {
        obj.insert(QString("PhoneNumberStatus"), ::OpenAPI::toJsonValue(m_phone_number_status));
    }
    return obj;
}

QString OAIClaimedPhoneNumberSummary::getPhoneNumberId() const {
    return m_phone_number_id;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberId(const QString &phone_number_id) {
    m_phone_number_id = phone_number_id;
    m_phone_number_id_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_id_Set() const{
    return m_phone_number_id_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_id_Valid() const{
    return m_phone_number_id_isValid;
}

QString OAIClaimedPhoneNumberSummary::getPhoneNumberArn() const {
    return m_phone_number_arn;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberArn(const QString &phone_number_arn) {
    m_phone_number_arn = phone_number_arn;
    m_phone_number_arn_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_arn_Set() const{
    return m_phone_number_arn_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_arn_Valid() const{
    return m_phone_number_arn_isValid;
}

QString OAIClaimedPhoneNumberSummary::getPhoneNumber() const {
    return m_phone_number;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

OAIPhoneNumberCountryCode OAIClaimedPhoneNumberSummary::getPhoneNumberCountryCode() const {
    return m_phone_number_country_code;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberCountryCode(const OAIPhoneNumberCountryCode &phone_number_country_code) {
    m_phone_number_country_code = phone_number_country_code;
    m_phone_number_country_code_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_country_code_Set() const{
    return m_phone_number_country_code_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_country_code_Valid() const{
    return m_phone_number_country_code_isValid;
}

OAIPhoneNumberType OAIClaimedPhoneNumberSummary::getPhoneNumberType() const {
    return m_phone_number_type;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberType(const OAIPhoneNumberType &phone_number_type) {
    m_phone_number_type = phone_number_type;
    m_phone_number_type_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_type_Set() const{
    return m_phone_number_type_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_type_Valid() const{
    return m_phone_number_type_isValid;
}

QString OAIClaimedPhoneNumberSummary::getPhoneNumberDescription() const {
    return m_phone_number_description;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberDescription(const QString &phone_number_description) {
    m_phone_number_description = phone_number_description;
    m_phone_number_description_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_description_Set() const{
    return m_phone_number_description_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_description_Valid() const{
    return m_phone_number_description_isValid;
}

QString OAIClaimedPhoneNumberSummary::getTargetArn() const {
    return m_target_arn;
}
void OAIClaimedPhoneNumberSummary::setTargetArn(const QString &target_arn) {
    m_target_arn = target_arn;
    m_target_arn_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_target_arn_Set() const{
    return m_target_arn_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_target_arn_Valid() const{
    return m_target_arn_isValid;
}

QMap OAIClaimedPhoneNumberSummary::getTags() const {
    return m_tags;
}
void OAIClaimedPhoneNumberSummary::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIClaimedPhoneNumberSummary_PhoneNumberStatus OAIClaimedPhoneNumberSummary::getPhoneNumberStatus() const {
    return m_phone_number_status;
}
void OAIClaimedPhoneNumberSummary::setPhoneNumberStatus(const OAIClaimedPhoneNumberSummary_PhoneNumberStatus &phone_number_status) {
    m_phone_number_status = phone_number_status;
    m_phone_number_status_isSet = true;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_status_Set() const{
    return m_phone_number_status_isSet;
}

bool OAIClaimedPhoneNumberSummary::is_phone_number_status_Valid() const{
    return m_phone_number_status_isValid;
}

bool OAIClaimedPhoneNumberSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_number_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_country_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClaimedPhoneNumberSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
