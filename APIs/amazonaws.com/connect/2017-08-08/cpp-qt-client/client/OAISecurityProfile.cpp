/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityProfile::OAISecurityProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityProfile::OAISecurityProfile() {
    this->initializeModel();
}

OAISecurityProfile::~OAISecurityProfile() {}

void OAISecurityProfile::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_organization_resource_id_isSet = false;
    m_organization_resource_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_security_profile_name_isSet = false;
    m_security_profile_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_allowed_access_control_tags_isSet = false;
    m_allowed_access_control_tags_isValid = false;

    m_tag_restricted_resources_isSet = false;
    m_tag_restricted_resources_isValid = false;
}

void OAISecurityProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityProfile::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_organization_resource_id_isValid = ::OpenAPI::fromJsonValue(m_organization_resource_id, json[QString("OrganizationResourceId")]);
    m_organization_resource_id_isSet = !json[QString("OrganizationResourceId")].isNull() && m_organization_resource_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_security_profile_name_isValid = ::OpenAPI::fromJsonValue(m_security_profile_name, json[QString("SecurityProfileName")]);
    m_security_profile_name_isSet = !json[QString("SecurityProfileName")].isNull() && m_security_profile_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_allowed_access_control_tags_isValid = ::OpenAPI::fromJsonValue(m_allowed_access_control_tags, json[QString("AllowedAccessControlTags")]);
    m_allowed_access_control_tags_isSet = !json[QString("AllowedAccessControlTags")].isNull() && m_allowed_access_control_tags_isValid;

    m_tag_restricted_resources_isValid = ::OpenAPI::fromJsonValue(m_tag_restricted_resources, json[QString("TagRestrictedResources")]);
    m_tag_restricted_resources_isSet = !json[QString("TagRestrictedResources")].isNull() && m_tag_restricted_resources_isValid;
}

QString OAISecurityProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_organization_resource_id_isSet) {
        obj.insert(QString("OrganizationResourceId"), ::OpenAPI::toJsonValue(m_organization_resource_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_security_profile_name_isSet) {
        obj.insert(QString("SecurityProfileName"), ::OpenAPI::toJsonValue(m_security_profile_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_allowed_access_control_tags.isSet()) {
        obj.insert(QString("AllowedAccessControlTags"), ::OpenAPI::toJsonValue(m_allowed_access_control_tags));
    }
    if (m_tag_restricted_resources.isSet()) {
        obj.insert(QString("TagRestrictedResources"), ::OpenAPI::toJsonValue(m_tag_restricted_resources));
    }
    return obj;
}

QString OAISecurityProfile::getId() const {
    return m_id;
}
void OAISecurityProfile::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISecurityProfile::is_id_Set() const{
    return m_id_isSet;
}

bool OAISecurityProfile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISecurityProfile::getOrganizationResourceId() const {
    return m_organization_resource_id;
}
void OAISecurityProfile::setOrganizationResourceId(const QString &organization_resource_id) {
    m_organization_resource_id = organization_resource_id;
    m_organization_resource_id_isSet = true;
}

bool OAISecurityProfile::is_organization_resource_id_Set() const{
    return m_organization_resource_id_isSet;
}

bool OAISecurityProfile::is_organization_resource_id_Valid() const{
    return m_organization_resource_id_isValid;
}

QString OAISecurityProfile::getArn() const {
    return m_arn;
}
void OAISecurityProfile::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAISecurityProfile::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAISecurityProfile::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAISecurityProfile::getSecurityProfileName() const {
    return m_security_profile_name;
}
void OAISecurityProfile::setSecurityProfileName(const QString &security_profile_name) {
    m_security_profile_name = security_profile_name;
    m_security_profile_name_isSet = true;
}

bool OAISecurityProfile::is_security_profile_name_Set() const{
    return m_security_profile_name_isSet;
}

bool OAISecurityProfile::is_security_profile_name_Valid() const{
    return m_security_profile_name_isValid;
}

QString OAISecurityProfile::getDescription() const {
    return m_description;
}
void OAISecurityProfile::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISecurityProfile::is_description_Set() const{
    return m_description_isSet;
}

bool OAISecurityProfile::is_description_Valid() const{
    return m_description_isValid;
}

QMap OAISecurityProfile::getTags() const {
    return m_tags;
}
void OAISecurityProfile::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAISecurityProfile::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAISecurityProfile::is_tags_Valid() const{
    return m_tags_isValid;
}

QMap OAISecurityProfile::getAllowedAccessControlTags() const {
    return m_allowed_access_control_tags;
}
void OAISecurityProfile::setAllowedAccessControlTags(const QMap &allowed_access_control_tags) {
    m_allowed_access_control_tags = allowed_access_control_tags;
    m_allowed_access_control_tags_isSet = true;
}

bool OAISecurityProfile::is_allowed_access_control_tags_Set() const{
    return m_allowed_access_control_tags_isSet;
}

bool OAISecurityProfile::is_allowed_access_control_tags_Valid() const{
    return m_allowed_access_control_tags_isValid;
}

QList OAISecurityProfile::getTagRestrictedResources() const {
    return m_tag_restricted_resources;
}
void OAISecurityProfile::setTagRestrictedResources(const QList &tag_restricted_resources) {
    m_tag_restricted_resources = tag_restricted_resources;
    m_tag_restricted_resources_isSet = true;
}

bool OAISecurityProfile::is_tag_restricted_resources_Set() const{
    return m_tag_restricted_resources_isSet;
}

bool OAISecurityProfile::is_tag_restricted_resources_Valid() const{
    return m_tag_restricted_resources_isValid;
}

bool OAISecurityProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowed_access_control_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_restricted_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
