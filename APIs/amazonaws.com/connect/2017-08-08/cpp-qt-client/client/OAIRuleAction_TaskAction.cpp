/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuleAction_TaskAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuleAction_TaskAction::OAIRuleAction_TaskAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuleAction_TaskAction::OAIRuleAction_TaskAction() {
    this->initializeModel();
}

OAIRuleAction_TaskAction::~OAIRuleAction_TaskAction() {}

void OAIRuleAction_TaskAction::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_contact_flow_id_isSet = false;
    m_contact_flow_id_isValid = false;

    m_references_isSet = false;
    m_references_isValid = false;
}

void OAIRuleAction_TaskAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRuleAction_TaskAction::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_contact_flow_id_isValid = ::OpenAPI::fromJsonValue(m_contact_flow_id, json[QString("ContactFlowId")]);
    m_contact_flow_id_isSet = !json[QString("ContactFlowId")].isNull() && m_contact_flow_id_isValid;

    m_references_isValid = ::OpenAPI::fromJsonValue(m_references, json[QString("References")]);
    m_references_isSet = !json[QString("References")].isNull() && m_references_isValid;
}

QString OAIRuleAction_TaskAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRuleAction_TaskAction::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_contact_flow_id_isSet) {
        obj.insert(QString("ContactFlowId"), ::OpenAPI::toJsonValue(m_contact_flow_id));
    }
    if (m_references.isSet()) {
        obj.insert(QString("References"), ::OpenAPI::toJsonValue(m_references));
    }
    return obj;
}

QString OAIRuleAction_TaskAction::getName() const {
    return m_name;
}
void OAIRuleAction_TaskAction::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRuleAction_TaskAction::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRuleAction_TaskAction::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRuleAction_TaskAction::getDescription() const {
    return m_description;
}
void OAIRuleAction_TaskAction::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIRuleAction_TaskAction::is_description_Set() const{
    return m_description_isSet;
}

bool OAIRuleAction_TaskAction::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIRuleAction_TaskAction::getContactFlowId() const {
    return m_contact_flow_id;
}
void OAIRuleAction_TaskAction::setContactFlowId(const QString &contact_flow_id) {
    m_contact_flow_id = contact_flow_id;
    m_contact_flow_id_isSet = true;
}

bool OAIRuleAction_TaskAction::is_contact_flow_id_Set() const{
    return m_contact_flow_id_isSet;
}

bool OAIRuleAction_TaskAction::is_contact_flow_id_Valid() const{
    return m_contact_flow_id_isValid;
}

QMap OAIRuleAction_TaskAction::getReferences() const {
    return m_references;
}
void OAIRuleAction_TaskAction::setReferences(const QMap &references) {
    m_references = references;
    m_references_isSet = true;
}

bool OAIRuleAction_TaskAction::is_references_Set() const{
    return m_references_isSet;
}

bool OAIRuleAction_TaskAction::is_references_Valid() const{
    return m_references_isValid;
}

bool OAIRuleAction_TaskAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_flow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_references.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRuleAction_TaskAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_contact_flow_id_isValid && true;
}

} // namespace OpenAPI
