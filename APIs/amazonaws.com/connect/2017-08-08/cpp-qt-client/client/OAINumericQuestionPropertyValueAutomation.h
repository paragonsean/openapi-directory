/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumericQuestionPropertyValueAutomation.h
 *
 * &lt;p&gt;Information about the property value used in automation of a numeric questions. Label values are associated with minimum and maximum values for the numeric question.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Sentiment scores have a minimum value of -5 and maximum value of 5.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; Duration labels, such as &lt;code&gt;NON_TALK_TIME&lt;/code&gt;, &lt;code&gt;CONTACT_DURATION&lt;/code&gt;, &lt;code&gt;AGENT_INTERACTION_DURATION&lt;/code&gt;, &lt;code&gt;CUSTOMER_HOLD_TIME&lt;/code&gt; have a minimum value of 0 and maximum value of 28800.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Percentages have a minimum value of 0 and maximum value of 100. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;NUMBER_OF_INTERRUPTIONS&lt;/code&gt; has a minimum value of 0 and maximum value of 1000.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAINumericQuestionPropertyValueAutomation_H
#define OAINumericQuestionPropertyValueAutomation_H

#include <QJsonObject>

#include "OAINumericQuestionPropertyAutomationLabel.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINumericQuestionPropertyValueAutomation : public OAIObject {
public:
    OAINumericQuestionPropertyValueAutomation();
    OAINumericQuestionPropertyValueAutomation(QString json);
    ~OAINumericQuestionPropertyValueAutomation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINumericQuestionPropertyAutomationLabel getLabel() const;
    void setLabel(const OAINumericQuestionPropertyAutomationLabel &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINumericQuestionPropertyAutomationLabel m_label;
    bool m_label_isSet;
    bool m_label_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumericQuestionPropertyValueAutomation)

#endif // OAINumericQuestionPropertyValueAutomation_H
