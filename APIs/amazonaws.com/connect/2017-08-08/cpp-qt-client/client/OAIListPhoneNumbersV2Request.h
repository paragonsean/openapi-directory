/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListPhoneNumbersV2Request.h
 *
 * 
 */

#ifndef OAIListPhoneNumbersV2Request_H
#define OAIListPhoneNumbersV2Request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListPhoneNumbersV2Request : public OAIObject {
public:
    OAIListPhoneNumbersV2Request();
    OAIListPhoneNumbersV2Request(QString json);
    ~OAIListPhoneNumbersV2Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTargetArn() const;
    void setTargetArn(const QString &target_arn);
    bool is_target_arn_Set() const;
    bool is_target_arn_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    QList getPhoneNumberCountryCodes() const;
    void setPhoneNumberCountryCodes(const QList &phone_number_country_codes);
    bool is_phone_number_country_codes_Set() const;
    bool is_phone_number_country_codes_Valid() const;

    QList getPhoneNumberTypes() const;
    void setPhoneNumberTypes(const QList &phone_number_types);
    bool is_phone_number_types_Set() const;
    bool is_phone_number_types_Valid() const;

    QString getPhoneNumberPrefix() const;
    void setPhoneNumberPrefix(const QString &phone_number_prefix);
    bool is_phone_number_prefix_Set() const;
    bool is_phone_number_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target_arn;
    bool m_target_arn_isSet;
    bool m_target_arn_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    QList m_phone_number_country_codes;
    bool m_phone_number_country_codes_isSet;
    bool m_phone_number_country_codes_isValid;

    QList m_phone_number_types;
    bool m_phone_number_types_isSet;
    bool m_phone_number_types_isValid;

    QString m_phone_number_prefix;
    bool m_phone_number_prefix_isSet;
    bool m_phone_number_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListPhoneNumbersV2Request)

#endif // OAIListPhoneNumbersV2Request_H
