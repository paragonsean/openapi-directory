/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskTemplateDefaultFieldValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskTemplateDefaultFieldValue::OAITaskTemplateDefaultFieldValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskTemplateDefaultFieldValue::OAITaskTemplateDefaultFieldValue() {
    this->initializeModel();
}

OAITaskTemplateDefaultFieldValue::~OAITaskTemplateDefaultFieldValue() {}

void OAITaskTemplateDefaultFieldValue::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_default_value_isSet = false;
    m_default_value_isValid = false;
}

void OAITaskTemplateDefaultFieldValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskTemplateDefaultFieldValue::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("DefaultValue")]);
    m_default_value_isSet = !json[QString("DefaultValue")].isNull() && m_default_value_isValid;
}

QString OAITaskTemplateDefaultFieldValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskTemplateDefaultFieldValue::asJsonObject() const {
    QJsonObject obj;
    if (m_id.isSet()) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_default_value_isSet) {
        obj.insert(QString("DefaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    return obj;
}

OAITaskTemplateDefaultFieldValue_Id OAITaskTemplateDefaultFieldValue::getId() const {
    return m_id;
}
void OAITaskTemplateDefaultFieldValue::setId(const OAITaskTemplateDefaultFieldValue_Id &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITaskTemplateDefaultFieldValue::is_id_Set() const{
    return m_id_isSet;
}

bool OAITaskTemplateDefaultFieldValue::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITaskTemplateDefaultFieldValue::getDefaultValue() const {
    return m_default_value;
}
void OAITaskTemplateDefaultFieldValue::setDefaultValue(const QString &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAITaskTemplateDefaultFieldValue::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAITaskTemplateDefaultFieldValue::is_default_value_Valid() const{
    return m_default_value_isValid;
}

bool OAITaskTemplateDefaultFieldValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskTemplateDefaultFieldValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
