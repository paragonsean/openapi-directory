/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluationFormVersionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluationFormVersionSummary::OAIEvaluationFormVersionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluationFormVersionSummary::OAIEvaluationFormVersionSummary() {
    this->initializeModel();
}

OAIEvaluationFormVersionSummary::~OAIEvaluationFormVersionSummary() {}

void OAIEvaluationFormVersionSummary::initializeModel() {

    m_evaluation_form_arn_isSet = false;
    m_evaluation_form_arn_isValid = false;

    m_evaluation_form_id_isSet = false;
    m_evaluation_form_id_isValid = false;

    m_evaluation_form_version_isSet = false;
    m_evaluation_form_version_isValid = false;

    m_locked_isSet = false;
    m_locked_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;
}

void OAIEvaluationFormVersionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEvaluationFormVersionSummary::fromJsonObject(QJsonObject json) {

    m_evaluation_form_arn_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_arn, json[QString("EvaluationFormArn")]);
    m_evaluation_form_arn_isSet = !json[QString("EvaluationFormArn")].isNull() && m_evaluation_form_arn_isValid;

    m_evaluation_form_id_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_id, json[QString("EvaluationFormId")]);
    m_evaluation_form_id_isSet = !json[QString("EvaluationFormId")].isNull() && m_evaluation_form_id_isValid;

    m_evaluation_form_version_isValid = ::OpenAPI::fromJsonValue(m_evaluation_form_version, json[QString("EvaluationFormVersion")]);
    m_evaluation_form_version_isSet = !json[QString("EvaluationFormVersion")].isNull() && m_evaluation_form_version_isValid;

    m_locked_isValid = ::OpenAPI::fromJsonValue(m_locked, json[QString("Locked")]);
    m_locked_isSet = !json[QString("Locked")].isNull() && m_locked_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;
}

QString OAIEvaluationFormVersionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEvaluationFormVersionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_form_arn_isSet) {
        obj.insert(QString("EvaluationFormArn"), ::OpenAPI::toJsonValue(m_evaluation_form_arn));
    }
    if (m_evaluation_form_id_isSet) {
        obj.insert(QString("EvaluationFormId"), ::OpenAPI::toJsonValue(m_evaluation_form_id));
    }
    if (m_evaluation_form_version_isSet) {
        obj.insert(QString("EvaluationFormVersion"), ::OpenAPI::toJsonValue(m_evaluation_form_version));
    }
    if (m_locked_isSet) {
        obj.insert(QString("Locked"), ::OpenAPI::toJsonValue(m_locked));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    return obj;
}

QString OAIEvaluationFormVersionSummary::getEvaluationFormArn() const {
    return m_evaluation_form_arn;
}
void OAIEvaluationFormVersionSummary::setEvaluationFormArn(const QString &evaluation_form_arn) {
    m_evaluation_form_arn = evaluation_form_arn;
    m_evaluation_form_arn_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_arn_Set() const{
    return m_evaluation_form_arn_isSet;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_arn_Valid() const{
    return m_evaluation_form_arn_isValid;
}

QString OAIEvaluationFormVersionSummary::getEvaluationFormId() const {
    return m_evaluation_form_id;
}
void OAIEvaluationFormVersionSummary::setEvaluationFormId(const QString &evaluation_form_id) {
    m_evaluation_form_id = evaluation_form_id;
    m_evaluation_form_id_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_id_Set() const{
    return m_evaluation_form_id_isSet;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_id_Valid() const{
    return m_evaluation_form_id_isValid;
}

qint32 OAIEvaluationFormVersionSummary::getEvaluationFormVersion() const {
    return m_evaluation_form_version;
}
void OAIEvaluationFormVersionSummary::setEvaluationFormVersion(const qint32 &evaluation_form_version) {
    m_evaluation_form_version = evaluation_form_version;
    m_evaluation_form_version_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_version_Set() const{
    return m_evaluation_form_version_isSet;
}

bool OAIEvaluationFormVersionSummary::is_evaluation_form_version_Valid() const{
    return m_evaluation_form_version_isValid;
}

bool OAIEvaluationFormVersionSummary::getLocked() const {
    return m_locked;
}
void OAIEvaluationFormVersionSummary::setLocked(const bool &locked) {
    m_locked = locked;
    m_locked_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_locked_Set() const{
    return m_locked_isSet;
}

bool OAIEvaluationFormVersionSummary::is_locked_Valid() const{
    return m_locked_isValid;
}

OAIEvaluationFormVersionStatus OAIEvaluationFormVersionSummary::getStatus() const {
    return m_status;
}
void OAIEvaluationFormVersionSummary::setStatus(const OAIEvaluationFormVersionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEvaluationFormVersionSummary::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIEvaluationFormVersionSummary::getCreatedTime() const {
    return m_created_time;
}
void OAIEvaluationFormVersionSummary::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIEvaluationFormVersionSummary::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIEvaluationFormVersionSummary::getCreatedBy() const {
    return m_created_by;
}
void OAIEvaluationFormVersionSummary::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIEvaluationFormVersionSummary::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIEvaluationFormVersionSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIEvaluationFormVersionSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIEvaluationFormVersionSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIEvaluationFormVersionSummary::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIEvaluationFormVersionSummary::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIEvaluationFormVersionSummary::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIEvaluationFormVersionSummary::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

bool OAIEvaluationFormVersionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_form_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_form_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_form_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEvaluationFormVersionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_evaluation_form_arn_isValid && m_evaluation_form_id_isValid && m_evaluation_form_version_isValid && m_locked_isValid && m_status_isValid && m_created_time_isValid && m_created_by_isValid && m_last_modified_time_isValid && m_last_modified_by_isValid && true;
}

} // namespace OpenAPI
