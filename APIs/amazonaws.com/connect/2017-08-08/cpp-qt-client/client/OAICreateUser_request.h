/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUser_request.h
 *
 * 
 */

#ifndef OAICreateUser_request_H
#define OAICreateUser_request_H

#include <QJsonObject>

#include "OAICreateUser_request_IdentityInfo.h"
#include "OAICreateUser_request_PhoneConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateUser_request_IdentityInfo;
class OAICreateUser_request_PhoneConfig;

class OAICreateUser_request : public OAIObject {
public:
    OAICreateUser_request();
    OAICreateUser_request(QString json);
    ~OAICreateUser_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    OAICreateUser_request_IdentityInfo getIdentityInfo() const;
    void setIdentityInfo(const OAICreateUser_request_IdentityInfo &identity_info);
    bool is_identity_info_Set() const;
    bool is_identity_info_Valid() const;

    OAICreateUser_request_PhoneConfig getPhoneConfig() const;
    void setPhoneConfig(const OAICreateUser_request_PhoneConfig &phone_config);
    bool is_phone_config_Set() const;
    bool is_phone_config_Valid() const;

    QString getDirectoryUserId() const;
    void setDirectoryUserId(const QString &directory_user_id);
    bool is_directory_user_id_Set() const;
    bool is_directory_user_id_Valid() const;

    QList<QString> getSecurityProfileIds() const;
    void setSecurityProfileIds(const QList<QString> &security_profile_ids);
    bool is_security_profile_ids_Set() const;
    bool is_security_profile_ids_Valid() const;

    QString getRoutingProfileId() const;
    void setRoutingProfileId(const QString &routing_profile_id);
    bool is_routing_profile_id_Set() const;
    bool is_routing_profile_id_Valid() const;

    QString getHierarchyGroupId() const;
    void setHierarchyGroupId(const QString &hierarchy_group_id);
    bool is_hierarchy_group_id_Set() const;
    bool is_hierarchy_group_id_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    OAICreateUser_request_IdentityInfo m_identity_info;
    bool m_identity_info_isSet;
    bool m_identity_info_isValid;

    OAICreateUser_request_PhoneConfig m_phone_config;
    bool m_phone_config_isSet;
    bool m_phone_config_isValid;

    QString m_directory_user_id;
    bool m_directory_user_id_isSet;
    bool m_directory_user_id_isValid;

    QList<QString> m_security_profile_ids;
    bool m_security_profile_ids_isSet;
    bool m_security_profile_ids_isValid;

    QString m_routing_profile_id;
    bool m_routing_profile_id_isSet;
    bool m_routing_profile_id_isValid;

    QString m_hierarchy_group_id;
    bool m_hierarchy_group_id_isSet;
    bool m_hierarchy_group_id_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUser_request)

#endif // OAICreateUser_request_H
