/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAgentStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAgentStatusRequest::OAIUpdateAgentStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAgentStatusRequest::OAIUpdateAgentStatusRequest() {
    this->initializeModel();
}

OAIUpdateAgentStatusRequest::~OAIUpdateAgentStatusRequest() {}

void OAIUpdateAgentStatusRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_display_order_isSet = false;
    m_display_order_isValid = false;

    m_reset_order_number_isSet = false;
    m_reset_order_number_isValid = false;
}

void OAIUpdateAgentStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAgentStatusRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_display_order_isValid = ::OpenAPI::fromJsonValue(m_display_order, json[QString("DisplayOrder")]);
    m_display_order_isSet = !json[QString("DisplayOrder")].isNull() && m_display_order_isValid;

    m_reset_order_number_isValid = ::OpenAPI::fromJsonValue(m_reset_order_number, json[QString("ResetOrderNumber")]);
    m_reset_order_number_isSet = !json[QString("ResetOrderNumber")].isNull() && m_reset_order_number_isValid;
}

QString OAIUpdateAgentStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAgentStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_display_order_isSet) {
        obj.insert(QString("DisplayOrder"), ::OpenAPI::toJsonValue(m_display_order));
    }
    if (m_reset_order_number_isSet) {
        obj.insert(QString("ResetOrderNumber"), ::OpenAPI::toJsonValue(m_reset_order_number));
    }
    return obj;
}

QString OAIUpdateAgentStatusRequest::getName() const {
    return m_name;
}
void OAIUpdateAgentStatusRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateAgentStatusRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateAgentStatusRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateAgentStatusRequest::getDescription() const {
    return m_description;
}
void OAIUpdateAgentStatusRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateAgentStatusRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateAgentStatusRequest::is_description_Valid() const{
    return m_description_isValid;
}

OAIAgentStatusState OAIUpdateAgentStatusRequest::getState() const {
    return m_state;
}
void OAIUpdateAgentStatusRequest::setState(const OAIAgentStatusState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIUpdateAgentStatusRequest::is_state_Set() const{
    return m_state_isSet;
}

bool OAIUpdateAgentStatusRequest::is_state_Valid() const{
    return m_state_isValid;
}

qint32 OAIUpdateAgentStatusRequest::getDisplayOrder() const {
    return m_display_order;
}
void OAIUpdateAgentStatusRequest::setDisplayOrder(const qint32 &display_order) {
    m_display_order = display_order;
    m_display_order_isSet = true;
}

bool OAIUpdateAgentStatusRequest::is_display_order_Set() const{
    return m_display_order_isSet;
}

bool OAIUpdateAgentStatusRequest::is_display_order_Valid() const{
    return m_display_order_isValid;
}

bool OAIUpdateAgentStatusRequest::getResetOrderNumber() const {
    return m_reset_order_number;
}
void OAIUpdateAgentStatusRequest::setResetOrderNumber(const bool &reset_order_number) {
    m_reset_order_number = reset_order_number;
    m_reset_order_number_isSet = true;
}

bool OAIUpdateAgentStatusRequest::is_reset_order_number_Set() const{
    return m_reset_order_number_isSet;
}

bool OAIUpdateAgentStatusRequest::is_reset_order_number_Valid() const{
    return m_reset_order_number_isValid;
}

bool OAIUpdateAgentStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reset_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAgentStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
