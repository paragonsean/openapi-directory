/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutingProfileQueueConfigSummary.h
 *
 * Contains summary information about a routing profile queue.
 */

#ifndef OAIRoutingProfileQueueConfigSummary_H
#define OAIRoutingProfileQueueConfigSummary_H

#include <QJsonObject>

#include "OAIChannel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRoutingProfileQueueConfigSummary : public OAIObject {
public:
    OAIRoutingProfileQueueConfigSummary();
    OAIRoutingProfileQueueConfigSummary(QString json);
    ~OAIRoutingProfileQueueConfigSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQueueId() const;
    void setQueueId(const QString &queue_id);
    bool is_queue_id_Set() const;
    bool is_queue_id_Valid() const;

    QString getQueueArn() const;
    void setQueueArn(const QString &queue_arn);
    bool is_queue_arn_Set() const;
    bool is_queue_arn_Valid() const;

    QString getQueueName() const;
    void setQueueName(const QString &queue_name);
    bool is_queue_name_Set() const;
    bool is_queue_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    qint32 getDelay() const;
    void setDelay(const qint32 &delay);
    bool is_delay_Set() const;
    bool is_delay_Valid() const;

    OAIChannel getChannel() const;
    void setChannel(const OAIChannel &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_queue_id;
    bool m_queue_id_isSet;
    bool m_queue_id_isValid;

    QString m_queue_arn;
    bool m_queue_arn_isSet;
    bool m_queue_arn_isValid;

    QString m_queue_name;
    bool m_queue_name_isSet;
    bool m_queue_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    qint32 m_delay;
    bool m_delay_isSet;
    bool m_delay_isValid;

    OAIChannel m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutingProfileQueueConfigSummary)

#endif // OAIRoutingProfileQueueConfigSummary_H
