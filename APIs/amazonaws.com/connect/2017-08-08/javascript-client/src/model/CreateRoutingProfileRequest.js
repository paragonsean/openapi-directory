/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaConcurrency from './MediaConcurrency';
import RoutingProfileQueueConfig from './RoutingProfileQueueConfig';

/**
 * The CreateRoutingProfileRequest model module.
 * @module model/CreateRoutingProfileRequest
 * @version 2017-08-08
 */
class CreateRoutingProfileRequest {
    /**
     * Constructs a new <code>CreateRoutingProfileRequest</code>.
     * @alias module:model/CreateRoutingProfileRequest
     * @param name {String} The name of the routing profile. Must not be more than 127 characters.
     * @param description {String} Description of the routing profile. Must not be more than 250 characters.
     * @param defaultOutboundQueueId {String} The default outbound queue for the routing profile.
     * @param mediaConcurrencies {Array.<module:model/MediaConcurrency>} The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
     */
    constructor(name, description, defaultOutboundQueueId, mediaConcurrencies) { 
        
        CreateRoutingProfileRequest.initialize(this, name, description, defaultOutboundQueueId, mediaConcurrencies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, defaultOutboundQueueId, mediaConcurrencies) { 
        obj['Name'] = name;
        obj['Description'] = description;
        obj['DefaultOutboundQueueId'] = defaultOutboundQueueId;
        obj['MediaConcurrencies'] = mediaConcurrencies;
    }

    /**
     * Constructs a <code>CreateRoutingProfileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRoutingProfileRequest} obj Optional instance to populate.
     * @return {module:model/CreateRoutingProfileRequest} The populated <code>CreateRoutingProfileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRoutingProfileRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DefaultOutboundQueueId')) {
                obj['DefaultOutboundQueueId'] = ApiClient.convertToType(data['DefaultOutboundQueueId'], 'String');
            }
            if (data.hasOwnProperty('QueueConfigs')) {
                obj['QueueConfigs'] = ApiClient.convertToType(data['QueueConfigs'], [RoutingProfileQueueConfig]);
            }
            if (data.hasOwnProperty('MediaConcurrencies')) {
                obj['MediaConcurrencies'] = ApiClient.convertToType(data['MediaConcurrencies'], [MediaConcurrency]);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('AgentAvailabilityTimer')) {
                obj['AgentAvailabilityTimer'] = ApiClient.convertToType(data['AgentAvailabilityTimer'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRoutingProfileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRoutingProfileRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRoutingProfileRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['DefaultOutboundQueueId'] && !(typeof data['DefaultOutboundQueueId'] === 'string' || data['DefaultOutboundQueueId'] instanceof String)) {
            throw new Error("Expected the field `DefaultOutboundQueueId` to be a primitive type in the JSON string but got " + data['DefaultOutboundQueueId']);
        }
        if (data['QueueConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['QueueConfigs'])) {
                throw new Error("Expected the field `QueueConfigs` to be an array in the JSON data but got " + data['QueueConfigs']);
            }
            // validate the optional field `QueueConfigs` (array)
            for (const item of data['QueueConfigs']) {
                RoutingProfileQueueConfig.validateJSON(item);
            };
        }
        if (data['MediaConcurrencies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MediaConcurrencies'])) {
                throw new Error("Expected the field `MediaConcurrencies` to be an array in the JSON data but got " + data['MediaConcurrencies']);
            }
            // validate the optional field `MediaConcurrencies` (array)
            for (const item of data['MediaConcurrencies']) {
                MediaConcurrency.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['AgentAvailabilityTimer'] && !(typeof data['AgentAvailabilityTimer'] === 'string' || data['AgentAvailabilityTimer'] instanceof String)) {
            throw new Error("Expected the field `AgentAvailabilityTimer` to be a primitive type in the JSON string but got " + data['AgentAvailabilityTimer']);
        }

        return true;
    }


}

CreateRoutingProfileRequest.RequiredProperties = ["Name", "Description", "DefaultOutboundQueueId", "MediaConcurrencies"];

/**
 * The name of the routing profile. Must not be more than 127 characters.
 * @member {String} Name
 */
CreateRoutingProfileRequest.prototype['Name'] = undefined;

/**
 * Description of the routing profile. Must not be more than 250 characters.
 * @member {String} Description
 */
CreateRoutingProfileRequest.prototype['Description'] = undefined;

/**
 * The default outbound queue for the routing profile.
 * @member {String} DefaultOutboundQueueId
 */
CreateRoutingProfileRequest.prototype['DefaultOutboundQueueId'] = undefined;

/**
 * <p>The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.</p> <p>The limit of 10 array members applies to the maximum number of <code>RoutingProfileQueueConfig</code> objects that can be passed during a CreateRoutingProfile API request. It is different from the quota of 50 queues per routing profile per instance that is listed in <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect service quotas</a>. </p>
 * @member {Array.<module:model/RoutingProfileQueueConfig>} QueueConfigs
 */
CreateRoutingProfileRequest.prototype['QueueConfigs'] = undefined;

/**
 * The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
 * @member {Array.<module:model/MediaConcurrency>} MediaConcurrencies
 */
CreateRoutingProfileRequest.prototype['MediaConcurrencies'] = undefined;

/**
 * The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.
 * @member {Object.<String, String>} Tags
 */
CreateRoutingProfileRequest.prototype['Tags'] = undefined;

/**
 * Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. 
 * @member {module:model/CreateRoutingProfileRequest.AgentAvailabilityTimerEnum} AgentAvailabilityTimer
 */
CreateRoutingProfileRequest.prototype['AgentAvailabilityTimer'] = undefined;





/**
 * Allowed values for the <code>AgentAvailabilityTimer</code> property.
 * @enum {String}
 * @readonly
 */
CreateRoutingProfileRequest['AgentAvailabilityTimerEnum'] = {

    /**
     * value: "TIME_SINCE_LAST_ACTIVITY"
     * @const
     */
    "ACTIVITY": "TIME_SINCE_LAST_ACTIVITY",

    /**
     * value: "TIME_SINCE_LAST_INBOUND"
     * @const
     */
    "INBOUND": "TIME_SINCE_LAST_INBOUND"
};



export default CreateRoutingProfileRequest;

