/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartOutboundVoiceContactRequestAnswerMachineDetectionConfig from './StartOutboundVoiceContactRequestAnswerMachineDetectionConfig';

/**
 * The StartOutboundVoiceContactRequest model module.
 * @module model/StartOutboundVoiceContactRequest
 * @version 2017-08-08
 */
class StartOutboundVoiceContactRequest {
    /**
     * Constructs a new <code>StartOutboundVoiceContactRequest</code>.
     * @alias module:model/StartOutboundVoiceContactRequest
     * @param destinationPhoneNumber {String} The phone number of the customer, in E.164 format.
     * @param contactFlowId {String} <p>The identifier of the flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>
     * @param instanceId {String} The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
     */
    constructor(destinationPhoneNumber, contactFlowId, instanceId) { 
        
        StartOutboundVoiceContactRequest.initialize(this, destinationPhoneNumber, contactFlowId, instanceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationPhoneNumber, contactFlowId, instanceId) { 
        obj['DestinationPhoneNumber'] = destinationPhoneNumber;
        obj['ContactFlowId'] = contactFlowId;
        obj['InstanceId'] = instanceId;
    }

    /**
     * Constructs a <code>StartOutboundVoiceContactRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartOutboundVoiceContactRequest} obj Optional instance to populate.
     * @return {module:model/StartOutboundVoiceContactRequest} The populated <code>StartOutboundVoiceContactRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartOutboundVoiceContactRequest();

            if (data.hasOwnProperty('DestinationPhoneNumber')) {
                obj['DestinationPhoneNumber'] = ApiClient.convertToType(data['DestinationPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('ContactFlowId')) {
                obj['ContactFlowId'] = ApiClient.convertToType(data['ContactFlowId'], 'String');
            }
            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('SourcePhoneNumber')) {
                obj['SourcePhoneNumber'] = ApiClient.convertToType(data['SourcePhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('QueueId')) {
                obj['QueueId'] = ApiClient.convertToType(data['QueueId'], 'String');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('AnswerMachineDetectionConfig')) {
                obj['AnswerMachineDetectionConfig'] = StartOutboundVoiceContactRequestAnswerMachineDetectionConfig.constructFromObject(data['AnswerMachineDetectionConfig']);
            }
            if (data.hasOwnProperty('CampaignId')) {
                obj['CampaignId'] = ApiClient.convertToType(data['CampaignId'], 'String');
            }
            if (data.hasOwnProperty('TrafficType')) {
                obj['TrafficType'] = ApiClient.convertToType(data['TrafficType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartOutboundVoiceContactRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartOutboundVoiceContactRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartOutboundVoiceContactRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DestinationPhoneNumber'] && !(typeof data['DestinationPhoneNumber'] === 'string' || data['DestinationPhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `DestinationPhoneNumber` to be a primitive type in the JSON string but got " + data['DestinationPhoneNumber']);
        }
        // ensure the json data is a string
        if (data['ContactFlowId'] && !(typeof data['ContactFlowId'] === 'string' || data['ContactFlowId'] instanceof String)) {
            throw new Error("Expected the field `ContactFlowId` to be a primitive type in the JSON string but got " + data['ContactFlowId']);
        }
        // ensure the json data is a string
        if (data['InstanceId'] && !(typeof data['InstanceId'] === 'string' || data['InstanceId'] instanceof String)) {
            throw new Error("Expected the field `InstanceId` to be a primitive type in the JSON string but got " + data['InstanceId']);
        }
        // ensure the json data is a string
        if (data['ClientToken'] && !(typeof data['ClientToken'] === 'string' || data['ClientToken'] instanceof String)) {
            throw new Error("Expected the field `ClientToken` to be a primitive type in the JSON string but got " + data['ClientToken']);
        }
        // ensure the json data is a string
        if (data['SourcePhoneNumber'] && !(typeof data['SourcePhoneNumber'] === 'string' || data['SourcePhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `SourcePhoneNumber` to be a primitive type in the JSON string but got " + data['SourcePhoneNumber']);
        }
        // ensure the json data is a string
        if (data['QueueId'] && !(typeof data['QueueId'] === 'string' || data['QueueId'] instanceof String)) {
            throw new Error("Expected the field `QueueId` to be a primitive type in the JSON string but got " + data['QueueId']);
        }
        // validate the optional field `AnswerMachineDetectionConfig`
        if (data['AnswerMachineDetectionConfig']) { // data not null
          StartOutboundVoiceContactRequestAnswerMachineDetectionConfig.validateJSON(data['AnswerMachineDetectionConfig']);
        }
        // ensure the json data is a string
        if (data['CampaignId'] && !(typeof data['CampaignId'] === 'string' || data['CampaignId'] instanceof String)) {
            throw new Error("Expected the field `CampaignId` to be a primitive type in the JSON string but got " + data['CampaignId']);
        }
        // ensure the json data is a string
        if (data['TrafficType'] && !(typeof data['TrafficType'] === 'string' || data['TrafficType'] instanceof String)) {
            throw new Error("Expected the field `TrafficType` to be a primitive type in the JSON string but got " + data['TrafficType']);
        }

        return true;
    }


}

StartOutboundVoiceContactRequest.RequiredProperties = ["DestinationPhoneNumber", "ContactFlowId", "InstanceId"];

/**
 * The phone number of the customer, in E.164 format.
 * @member {String} DestinationPhoneNumber
 */
StartOutboundVoiceContactRequest.prototype['DestinationPhoneNumber'] = undefined;

/**
 * <p>The identifier of the flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>
 * @member {String} ContactFlowId
 */
StartOutboundVoiceContactRequest.prototype['ContactFlowId'] = undefined;

/**
 * The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
 * @member {String} InstanceId
 */
StartOutboundVoiceContactRequest.prototype['InstanceId'] = undefined;

/**
 * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. 
 * @member {String} ClientToken
 */
StartOutboundVoiceContactRequest.prototype['ClientToken'] = undefined;

/**
 * The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
 * @member {String} SourcePhoneNumber
 */
StartOutboundVoiceContactRequest.prototype['SourcePhoneNumber'] = undefined;

/**
 * The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the flow is used. If you do not specify a queue, you must specify a source phone number.
 * @member {String} QueueId
 */
StartOutboundVoiceContactRequest.prototype['QueueId'] = undefined;

/**
 * <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>
 * @member {Object.<String, String>} Attributes
 */
StartOutboundVoiceContactRequest.prototype['Attributes'] = undefined;

/**
 * @member {module:model/StartOutboundVoiceContactRequestAnswerMachineDetectionConfig} AnswerMachineDetectionConfig
 */
StartOutboundVoiceContactRequest.prototype['AnswerMachineDetectionConfig'] = undefined;

/**
 * The campaign identifier of the outbound communication.
 * @member {String} CampaignId
 */
StartOutboundVoiceContactRequest.prototype['CampaignId'] = undefined;

/**
 * Denotes the class of traffic. Calls with different traffic types are handled differently by Amazon Connect. The default value is <code>GENERAL</code>. Use <code>CAMPAIGN</code> if <code>EnableAnswerMachineDetection</code> is set to <code>true</code>. For all other cases, use <code>GENERAL</code>. 
 * @member {module:model/StartOutboundVoiceContactRequest.TrafficTypeEnum} TrafficType
 */
StartOutboundVoiceContactRequest.prototype['TrafficType'] = undefined;





/**
 * Allowed values for the <code>TrafficType</code> property.
 * @enum {String}
 * @readonly
 */
StartOutboundVoiceContactRequest['TrafficTypeEnum'] = {

    /**
     * value: "GENERAL"
     * @const
     */
    "GENERAL": "GENERAL",

    /**
     * value: "CAMPAIGN"
     * @const
     */
    "CAMPAIGN": "CAMPAIGN"
};



export default StartOutboundVoiceContactRequest;

