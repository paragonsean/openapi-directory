/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectService);
  }
}(this, function(expect, AmazonConnectService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeRoutingProfileResponseRoutingProfile', function() {
    it('should create an instance of DescribeRoutingProfileResponseRoutingProfile', function() {
      // uncomment below and update the code to test DescribeRoutingProfileResponseRoutingProfile
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be.a(AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile);
    });

    it('should have the property instanceId (base name: "InstanceId")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property routingProfileArn (base name: "RoutingProfileArn")', function() {
      // uncomment below and update the code to test the property routingProfileArn
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property routingProfileId (base name: "RoutingProfileId")', function() {
      // uncomment below and update the code to test the property routingProfileId
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property mediaConcurrencies (base name: "MediaConcurrencies")', function() {
      // uncomment below and update the code to test the property mediaConcurrencies
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property defaultOutboundQueueId (base name: "DefaultOutboundQueueId")', function() {
      // uncomment below and update the code to test the property defaultOutboundQueueId
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property numberOfAssociatedQueues (base name: "NumberOfAssociatedQueues")', function() {
      // uncomment below and update the code to test the property numberOfAssociatedQueues
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property numberOfAssociatedUsers (base name: "NumberOfAssociatedUsers")', function() {
      // uncomment below and update the code to test the property numberOfAssociatedUsers
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

    it('should have the property agentAvailabilityTimer (base name: "AgentAvailabilityTimer")', function() {
      // uncomment below and update the code to test the property agentAvailabilityTimer
      //var instance = new AmazonConnectService.DescribeRoutingProfileResponseRoutingProfile();
      //expect(instance).to.be();
    });

  });

}));
