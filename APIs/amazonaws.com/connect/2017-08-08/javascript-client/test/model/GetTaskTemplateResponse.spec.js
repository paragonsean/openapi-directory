/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectService);
  }
}(this, function(expect, AmazonConnectService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectService.GetTaskTemplateResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetTaskTemplateResponse', function() {
    it('should create an instance of GetTaskTemplateResponse', function() {
      // uncomment below and update the code to test GetTaskTemplateResponse
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be.a(AmazonConnectService.GetTaskTemplateResponse);
    });

    it('should have the property instanceId (base name: "InstanceId")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property contactFlowId (base name: "ContactFlowId")', function() {
      // uncomment below and update the code to test the property contactFlowId
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property constraints (base name: "Constraints")', function() {
      // uncomment below and update the code to test the property constraints
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property defaults (base name: "Defaults")', function() {
      // uncomment below and update the code to test the property defaults
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "Fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "LastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "CreatedTime")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonConnectService.GetTaskTemplateResponse();
      //expect(instance).to.be();
    });

  });

}));
