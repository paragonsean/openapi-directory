/**
 * Amazon Connect Service
 * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2017-08-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectService);
  }
}(this, function(expect, AmazonConnectService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectService.EvaluationFormContent();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EvaluationFormContent', function() {
    it('should create an instance of EvaluationFormContent', function() {
      // uncomment below and update the code to test EvaluationFormContent
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be.a(AmazonConnectService.EvaluationFormContent);
    });

    it('should have the property evaluationFormVersion (base name: "EvaluationFormVersion")', function() {
      // uncomment below and update the code to test the property evaluationFormVersion
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property evaluationFormId (base name: "EvaluationFormId")', function() {
      // uncomment below and update the code to test the property evaluationFormId
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property evaluationFormArn (base name: "EvaluationFormArn")', function() {
      // uncomment below and update the code to test the property evaluationFormArn
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "Items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

    it('should have the property scoringStrategy (base name: "ScoringStrategy")', function() {
      // uncomment below and update the code to test the property scoringStrategy
      //var instance = new AmazonConnectService.EvaluationFormContent();
      //expect(instance).to.be();
    });

  });

}));
