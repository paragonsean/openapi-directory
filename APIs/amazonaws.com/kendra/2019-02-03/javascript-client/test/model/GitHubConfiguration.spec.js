/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsKendraFrontendService);
  }
}(this, function(expect, AwsKendraFrontendService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsKendraFrontendService.GitHubConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GitHubConfiguration', function() {
    it('should create an instance of GitHubConfiguration', function() {
      // uncomment below and update the code to test GitHubConfiguration
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be.a(AwsKendraFrontendService.GitHubConfiguration);
    });

    it('should have the property saaSConfiguration (base name: "SaaSConfiguration")', function() {
      // uncomment below and update the code to test the property saaSConfiguration
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property onPremiseConfiguration (base name: "OnPremiseConfiguration")', function() {
      // uncomment below and update the code to test the property onPremiseConfiguration
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property secretArn (base name: "SecretArn")', function() {
      // uncomment below and update the code to test the property secretArn
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property useChangeLog (base name: "UseChangeLog")', function() {
      // uncomment below and update the code to test the property useChangeLog
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubDocumentCrawlProperties (base name: "GitHubDocumentCrawlProperties")', function() {
      // uncomment below and update the code to test the property gitHubDocumentCrawlProperties
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property repositoryFilter (base name: "RepositoryFilter")', function() {
      // uncomment below and update the code to test the property repositoryFilter
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property inclusionFolderNamePatterns (base name: "InclusionFolderNamePatterns")', function() {
      // uncomment below and update the code to test the property inclusionFolderNamePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property inclusionFileTypePatterns (base name: "InclusionFileTypePatterns")', function() {
      // uncomment below and update the code to test the property inclusionFileTypePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property inclusionFileNamePatterns (base name: "InclusionFileNamePatterns")', function() {
      // uncomment below and update the code to test the property inclusionFileNamePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property exclusionFolderNamePatterns (base name: "ExclusionFolderNamePatterns")', function() {
      // uncomment below and update the code to test the property exclusionFolderNamePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property exclusionFileTypePatterns (base name: "ExclusionFileTypePatterns")', function() {
      // uncomment below and update the code to test the property exclusionFileTypePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property exclusionFileNamePatterns (base name: "ExclusionFileNamePatterns")', function() {
      // uncomment below and update the code to test the property exclusionFileNamePatterns
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vpcConfiguration (base name: "VpcConfiguration")', function() {
      // uncomment below and update the code to test the property vpcConfiguration
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubRepositoryConfigurationFieldMappings (base name: "GitHubRepositoryConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubRepositoryConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubCommitConfigurationFieldMappings (base name: "GitHubCommitConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubCommitConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubIssueDocumentConfigurationFieldMappings (base name: "GitHubIssueDocumentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubIssueDocumentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubIssueCommentConfigurationFieldMappings (base name: "GitHubIssueCommentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubIssueCommentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubIssueAttachmentConfigurationFieldMappings (base name: "GitHubIssueAttachmentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubIssueAttachmentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubPullRequestCommentConfigurationFieldMappings (base name: "GitHubPullRequestCommentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubPullRequestCommentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubPullRequestDocumentConfigurationFieldMappings (base name: "GitHubPullRequestDocumentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubPullRequestDocumentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubPullRequestDocumentAttachmentConfigurationFieldMappings (base name: "GitHubPullRequestDocumentAttachmentConfigurationFieldMappings")', function() {
      // uncomment below and update the code to test the property gitHubPullRequestDocumentAttachmentConfigurationFieldMappings
      //var instance = new AwsKendraFrontendService.GitHubConfiguration();
      //expect(instance).to.be();
    });

  });

}));
