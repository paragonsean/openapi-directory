/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsKendraFrontendService);
  }
}(this, function(expect, AwsKendraFrontendService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateDataSourceRequestConfiguration', function() {
    it('should create an instance of CreateDataSourceRequestConfiguration', function() {
      // uncomment below and update the code to test CreateDataSourceRequestConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be.a(AwsKendraFrontendService.CreateDataSourceRequestConfiguration);
    });

    it('should have the property s3Configuration (base name: "S3Configuration")', function() {
      // uncomment below and update the code to test the property s3Configuration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property sharePointConfiguration (base name: "SharePointConfiguration")', function() {
      // uncomment below and update the code to test the property sharePointConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property databaseConfiguration (base name: "DatabaseConfiguration")', function() {
      // uncomment below and update the code to test the property databaseConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property salesforceConfiguration (base name: "SalesforceConfiguration")', function() {
      // uncomment below and update the code to test the property salesforceConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property oneDriveConfiguration (base name: "OneDriveConfiguration")', function() {
      // uncomment below and update the code to test the property oneDriveConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property serviceNowConfiguration (base name: "ServiceNowConfiguration")', function() {
      // uncomment below and update the code to test the property serviceNowConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property confluenceConfiguration (base name: "ConfluenceConfiguration")', function() {
      // uncomment below and update the code to test the property confluenceConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property googleDriveConfiguration (base name: "GoogleDriveConfiguration")', function() {
      // uncomment below and update the code to test the property googleDriveConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property webCrawlerConfiguration (base name: "WebCrawlerConfiguration")', function() {
      // uncomment below and update the code to test the property webCrawlerConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property workDocsConfiguration (base name: "WorkDocsConfiguration")', function() {
      // uncomment below and update the code to test the property workDocsConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fsxConfiguration (base name: "FsxConfiguration")', function() {
      // uncomment below and update the code to test the property fsxConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property slackConfiguration (base name: "SlackConfiguration")', function() {
      // uncomment below and update the code to test the property slackConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property boxConfiguration (base name: "BoxConfiguration")', function() {
      // uncomment below and update the code to test the property boxConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property quipConfiguration (base name: "QuipConfiguration")', function() {
      // uncomment below and update the code to test the property quipConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property jiraConfiguration (base name: "JiraConfiguration")', function() {
      // uncomment below and update the code to test the property jiraConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property gitHubConfiguration (base name: "GitHubConfiguration")', function() {
      // uncomment below and update the code to test the property gitHubConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property alfrescoConfiguration (base name: "AlfrescoConfiguration")', function() {
      // uncomment below and update the code to test the property alfrescoConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property templateConfiguration (base name: "TemplateConfiguration")', function() {
      // uncomment below and update the code to test the property templateConfiguration
      //var instance = new AwsKendraFrontendService.CreateDataSourceRequestConfiguration();
      //expect(instance).to.be();
    });

  });

}));
