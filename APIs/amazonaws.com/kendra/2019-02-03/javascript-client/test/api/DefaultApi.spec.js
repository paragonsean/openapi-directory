/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsKendraFrontendService);
  }
}(this, function(expect, AwsKendraFrontendService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsKendraFrontendService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateEntitiesToExperience', function() {
      it('should call associateEntitiesToExperience successfully', function(done) {
        //uncomment below and update the code to test associateEntitiesToExperience
        //instance.associateEntitiesToExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associatePersonasToEntities', function() {
      it('should call associatePersonasToEntities successfully', function(done) {
        //uncomment below and update the code to test associatePersonasToEntities
        //instance.associatePersonasToEntities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDeleteDocument', function() {
      it('should call batchDeleteDocument successfully', function(done) {
        //uncomment below and update the code to test batchDeleteDocument
        //instance.batchDeleteDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDeleteFeaturedResultsSet', function() {
      it('should call batchDeleteFeaturedResultsSet successfully', function(done) {
        //uncomment below and update the code to test batchDeleteFeaturedResultsSet
        //instance.batchDeleteFeaturedResultsSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetDocumentStatus', function() {
      it('should call batchGetDocumentStatus successfully', function(done) {
        //uncomment below and update the code to test batchGetDocumentStatus
        //instance.batchGetDocumentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchPutDocument', function() {
      it('should call batchPutDocument successfully', function(done) {
        //uncomment below and update the code to test batchPutDocument
        //instance.batchPutDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clearQuerySuggestions', function() {
      it('should call clearQuerySuggestions successfully', function(done) {
        //uncomment below and update the code to test clearQuerySuggestions
        //instance.clearQuerySuggestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccessControlConfiguration', function() {
      it('should call createAccessControlConfiguration successfully', function(done) {
        //uncomment below and update the code to test createAccessControlConfiguration
        //instance.createAccessControlConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataSource', function() {
      it('should call createDataSource successfully', function(done) {
        //uncomment below and update the code to test createDataSource
        //instance.createDataSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExperience', function() {
      it('should call createExperience successfully', function(done) {
        //uncomment below and update the code to test createExperience
        //instance.createExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFaq', function() {
      it('should call createFaq successfully', function(done) {
        //uncomment below and update the code to test createFaq
        //instance.createFaq(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeaturedResultsSet', function() {
      it('should call createFeaturedResultsSet successfully', function(done) {
        //uncomment below and update the code to test createFeaturedResultsSet
        //instance.createFeaturedResultsSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createIndex', function() {
      it('should call createIndex successfully', function(done) {
        //uncomment below and update the code to test createIndex
        //instance.createIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQuerySuggestionsBlockList', function() {
      it('should call createQuerySuggestionsBlockList successfully', function(done) {
        //uncomment below and update the code to test createQuerySuggestionsBlockList
        //instance.createQuerySuggestionsBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createThesaurus', function() {
      it('should call createThesaurus successfully', function(done) {
        //uncomment below and update the code to test createThesaurus
        //instance.createThesaurus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessControlConfiguration', function() {
      it('should call deleteAccessControlConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteAccessControlConfiguration
        //instance.deleteAccessControlConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataSource', function() {
      it('should call deleteDataSource successfully', function(done) {
        //uncomment below and update the code to test deleteDataSource
        //instance.deleteDataSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExperience', function() {
      it('should call deleteExperience successfully', function(done) {
        //uncomment below and update the code to test deleteExperience
        //instance.deleteExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFaq', function() {
      it('should call deleteFaq successfully', function(done) {
        //uncomment below and update the code to test deleteFaq
        //instance.deleteFaq(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIndex', function() {
      it('should call deleteIndex successfully', function(done) {
        //uncomment below and update the code to test deleteIndex
        //instance.deleteIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePrincipalMapping', function() {
      it('should call deletePrincipalMapping successfully', function(done) {
        //uncomment below and update the code to test deletePrincipalMapping
        //instance.deletePrincipalMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuerySuggestionsBlockList', function() {
      it('should call deleteQuerySuggestionsBlockList successfully', function(done) {
        //uncomment below and update the code to test deleteQuerySuggestionsBlockList
        //instance.deleteQuerySuggestionsBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteThesaurus', function() {
      it('should call deleteThesaurus successfully', function(done) {
        //uncomment below and update the code to test deleteThesaurus
        //instance.deleteThesaurus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAccessControlConfiguration', function() {
      it('should call describeAccessControlConfiguration successfully', function(done) {
        //uncomment below and update the code to test describeAccessControlConfiguration
        //instance.describeAccessControlConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDataSource', function() {
      it('should call describeDataSource successfully', function(done) {
        //uncomment below and update the code to test describeDataSource
        //instance.describeDataSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeExperience', function() {
      it('should call describeExperience successfully', function(done) {
        //uncomment below and update the code to test describeExperience
        //instance.describeExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFaq', function() {
      it('should call describeFaq successfully', function(done) {
        //uncomment below and update the code to test describeFaq
        //instance.describeFaq(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFeaturedResultsSet', function() {
      it('should call describeFeaturedResultsSet successfully', function(done) {
        //uncomment below and update the code to test describeFeaturedResultsSet
        //instance.describeFeaturedResultsSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeIndex', function() {
      it('should call describeIndex successfully', function(done) {
        //uncomment below and update the code to test describeIndex
        //instance.describeIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePrincipalMapping', function() {
      it('should call describePrincipalMapping successfully', function(done) {
        //uncomment below and update the code to test describePrincipalMapping
        //instance.describePrincipalMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeQuerySuggestionsBlockList', function() {
      it('should call describeQuerySuggestionsBlockList successfully', function(done) {
        //uncomment below and update the code to test describeQuerySuggestionsBlockList
        //instance.describeQuerySuggestionsBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeQuerySuggestionsConfig', function() {
      it('should call describeQuerySuggestionsConfig successfully', function(done) {
        //uncomment below and update the code to test describeQuerySuggestionsConfig
        //instance.describeQuerySuggestionsConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeThesaurus', function() {
      it('should call describeThesaurus successfully', function(done) {
        //uncomment below and update the code to test describeThesaurus
        //instance.describeThesaurus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateEntitiesFromExperience', function() {
      it('should call disassociateEntitiesFromExperience successfully', function(done) {
        //uncomment below and update the code to test disassociateEntitiesFromExperience
        //instance.disassociateEntitiesFromExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociatePersonasFromEntities', function() {
      it('should call disassociatePersonasFromEntities successfully', function(done) {
        //uncomment below and update the code to test disassociatePersonasFromEntities
        //instance.disassociatePersonasFromEntities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuerySuggestions', function() {
      it('should call getQuerySuggestions successfully', function(done) {
        //uncomment below and update the code to test getQuerySuggestions
        //instance.getQuerySuggestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshots', function() {
      it('should call getSnapshots successfully', function(done) {
        //uncomment below and update the code to test getSnapshots
        //instance.getSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccessControlConfigurations', function() {
      it('should call listAccessControlConfigurations successfully', function(done) {
        //uncomment below and update the code to test listAccessControlConfigurations
        //instance.listAccessControlConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataSourceSyncJobs', function() {
      it('should call listDataSourceSyncJobs successfully', function(done) {
        //uncomment below and update the code to test listDataSourceSyncJobs
        //instance.listDataSourceSyncJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataSources', function() {
      it('should call listDataSources successfully', function(done) {
        //uncomment below and update the code to test listDataSources
        //instance.listDataSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEntityPersonas', function() {
      it('should call listEntityPersonas successfully', function(done) {
        //uncomment below and update the code to test listEntityPersonas
        //instance.listEntityPersonas(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExperienceEntities', function() {
      it('should call listExperienceEntities successfully', function(done) {
        //uncomment below and update the code to test listExperienceEntities
        //instance.listExperienceEntities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExperiences', function() {
      it('should call listExperiences successfully', function(done) {
        //uncomment below and update the code to test listExperiences
        //instance.listExperiences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFaqs', function() {
      it('should call listFaqs successfully', function(done) {
        //uncomment below and update the code to test listFaqs
        //instance.listFaqs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFeaturedResultsSets', function() {
      it('should call listFeaturedResultsSets successfully', function(done) {
        //uncomment below and update the code to test listFeaturedResultsSets
        //instance.listFeaturedResultsSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGroupsOlderThanOrderingId', function() {
      it('should call listGroupsOlderThanOrderingId successfully', function(done) {
        //uncomment below and update the code to test listGroupsOlderThanOrderingId
        //instance.listGroupsOlderThanOrderingId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIndices', function() {
      it('should call listIndices successfully', function(done) {
        //uncomment below and update the code to test listIndices
        //instance.listIndices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQuerySuggestionsBlockLists', function() {
      it('should call listQuerySuggestionsBlockLists successfully', function(done) {
        //uncomment below and update the code to test listQuerySuggestionsBlockLists
        //instance.listQuerySuggestionsBlockLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listThesauri', function() {
      it('should call listThesauri successfully', function(done) {
        //uncomment below and update the code to test listThesauri
        //instance.listThesauri(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPrincipalMapping', function() {
      it('should call putPrincipalMapping successfully', function(done) {
        //uncomment below and update the code to test putPrincipalMapping
        //instance.putPrincipalMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('query', function() {
      it('should call query successfully', function(done) {
        //uncomment below and update the code to test query
        //instance.query(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieve', function() {
      it('should call retrieve successfully', function(done) {
        //uncomment below and update the code to test retrieve
        //instance.retrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startDataSourceSyncJob', function() {
      it('should call startDataSourceSyncJob successfully', function(done) {
        //uncomment below and update the code to test startDataSourceSyncJob
        //instance.startDataSourceSyncJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopDataSourceSyncJob', function() {
      it('should call stopDataSourceSyncJob successfully', function(done) {
        //uncomment below and update the code to test stopDataSourceSyncJob
        //instance.stopDataSourceSyncJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitFeedback', function() {
      it('should call submitFeedback successfully', function(done) {
        //uncomment below and update the code to test submitFeedback
        //instance.submitFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccessControlConfiguration', function() {
      it('should call updateAccessControlConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateAccessControlConfiguration
        //instance.updateAccessControlConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataSource', function() {
      it('should call updateDataSource successfully', function(done) {
        //uncomment below and update the code to test updateDataSource
        //instance.updateDataSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExperience', function() {
      it('should call updateExperience successfully', function(done) {
        //uncomment below and update the code to test updateExperience
        //instance.updateExperience(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFeaturedResultsSet', function() {
      it('should call updateFeaturedResultsSet successfully', function(done) {
        //uncomment below and update the code to test updateFeaturedResultsSet
        //instance.updateFeaturedResultsSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIndex', function() {
      it('should call updateIndex successfully', function(done) {
        //uncomment below and update the code to test updateIndex
        //instance.updateIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuerySuggestionsBlockList', function() {
      it('should call updateQuerySuggestionsBlockList successfully', function(done) {
        //uncomment below and update the code to test updateQuerySuggestionsBlockList
        //instance.updateQuerySuggestionsBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuerySuggestionsConfig', function() {
      it('should call updateQuerySuggestionsConfig successfully', function(done) {
        //uncomment below and update the code to test updateQuerySuggestionsConfig
        //instance.updateQuerySuggestionsConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateThesaurus', function() {
      it('should call updateThesaurus successfully', function(done) {
        //uncomment below and update the code to test updateThesaurus
        //instance.updateThesaurus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
