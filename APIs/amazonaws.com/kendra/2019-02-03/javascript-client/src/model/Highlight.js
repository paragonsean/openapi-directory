/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HighlightType from './HighlightType';

/**
 * The Highlight model module.
 * @module model/Highlight
 * @version 2019-02-03
 */
class Highlight {
    /**
     * Constructs a new <code>Highlight</code>.
     * Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
     * @alias module:model/Highlight
     * @param beginOffset {Number} 
     * @param endOffset {Number} 
     */
    constructor(beginOffset, endOffset) { 
        
        Highlight.initialize(this, beginOffset, endOffset);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, beginOffset, endOffset) { 
        obj['BeginOffset'] = beginOffset;
        obj['EndOffset'] = endOffset;
    }

    /**
     * Constructs a <code>Highlight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Highlight} obj Optional instance to populate.
     * @return {module:model/Highlight} The populated <code>Highlight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Highlight();

            if (data.hasOwnProperty('BeginOffset')) {
                obj['BeginOffset'] = ApiClient.convertToType(data['BeginOffset'], 'Number');
            }
            if (data.hasOwnProperty('EndOffset')) {
                obj['EndOffset'] = ApiClient.convertToType(data['EndOffset'], 'Number');
            }
            if (data.hasOwnProperty('TopAnswer')) {
                obj['TopAnswer'] = ApiClient.convertToType(data['TopAnswer'], 'Boolean');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], HighlightType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Highlight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Highlight</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Highlight.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BeginOffset`
        if (data['BeginOffset']) { // data not null
          Number.validateJSON(data['BeginOffset']);
        }
        // validate the optional field `EndOffset`
        if (data['EndOffset']) { // data not null
          Number.validateJSON(data['EndOffset']);
        }
        // validate the optional field `TopAnswer`
        if (data['TopAnswer']) { // data not null
          Boolean.validateJSON(data['TopAnswer']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          HighlightType.validateJSON(data['Type']);
        }

        return true;
    }


}

Highlight.RequiredProperties = ["BeginOffset", "EndOffset"];

/**
 * @member {Number} BeginOffset
 */
Highlight.prototype['BeginOffset'] = undefined;

/**
 * @member {Number} EndOffset
 */
Highlight.prototype['EndOffset'] = undefined;

/**
 * @member {Boolean} TopAnswer
 */
Highlight.prototype['TopAnswer'] = undefined;

/**
 * @member {module:model/HighlightType} Type
 */
Highlight.prototype['Type'] = undefined;






export default Highlight;

