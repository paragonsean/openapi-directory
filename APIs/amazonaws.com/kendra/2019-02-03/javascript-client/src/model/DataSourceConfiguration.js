/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataSourceConfigurationAlfrescoConfiguration from './DataSourceConfigurationAlfrescoConfiguration';
import DataSourceConfigurationBoxConfiguration from './DataSourceConfigurationBoxConfiguration';
import DataSourceConfigurationConfluenceConfiguration from './DataSourceConfigurationConfluenceConfiguration';
import DataSourceConfigurationDatabaseConfiguration from './DataSourceConfigurationDatabaseConfiguration';
import DataSourceConfigurationFsxConfiguration from './DataSourceConfigurationFsxConfiguration';
import DataSourceConfigurationGitHubConfiguration from './DataSourceConfigurationGitHubConfiguration';
import DataSourceConfigurationGoogleDriveConfiguration from './DataSourceConfigurationGoogleDriveConfiguration';
import DataSourceConfigurationJiraConfiguration from './DataSourceConfigurationJiraConfiguration';
import DataSourceConfigurationOneDriveConfiguration from './DataSourceConfigurationOneDriveConfiguration';
import DataSourceConfigurationQuipConfiguration from './DataSourceConfigurationQuipConfiguration';
import DataSourceConfigurationS3Configuration from './DataSourceConfigurationS3Configuration';
import DataSourceConfigurationSalesforceConfiguration from './DataSourceConfigurationSalesforceConfiguration';
import DataSourceConfigurationServiceNowConfiguration from './DataSourceConfigurationServiceNowConfiguration';
import DataSourceConfigurationSharePointConfiguration from './DataSourceConfigurationSharePointConfiguration';
import DataSourceConfigurationSlackConfiguration from './DataSourceConfigurationSlackConfiguration';
import DataSourceConfigurationTemplateConfiguration from './DataSourceConfigurationTemplateConfiguration';
import DataSourceConfigurationWorkDocsConfiguration from './DataSourceConfigurationWorkDocsConfiguration';
import WebCrawlerConfiguration from './WebCrawlerConfiguration';

/**
 * The DataSourceConfiguration model module.
 * @module model/DataSourceConfiguration
 * @version 2019-02-03
 */
class DataSourceConfiguration {
    /**
     * Constructs a new <code>DataSourceConfiguration</code>.
     * Provides the configuration information for an Amazon Kendra data source.
     * @alias module:model/DataSourceConfiguration
     */
    constructor() { 
        
        DataSourceConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataSourceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataSourceConfiguration} obj Optional instance to populate.
     * @return {module:model/DataSourceConfiguration} The populated <code>DataSourceConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataSourceConfiguration();

            if (data.hasOwnProperty('S3Configuration')) {
                obj['S3Configuration'] = DataSourceConfigurationS3Configuration.constructFromObject(data['S3Configuration']);
            }
            if (data.hasOwnProperty('SharePointConfiguration')) {
                obj['SharePointConfiguration'] = DataSourceConfigurationSharePointConfiguration.constructFromObject(data['SharePointConfiguration']);
            }
            if (data.hasOwnProperty('DatabaseConfiguration')) {
                obj['DatabaseConfiguration'] = DataSourceConfigurationDatabaseConfiguration.constructFromObject(data['DatabaseConfiguration']);
            }
            if (data.hasOwnProperty('SalesforceConfiguration')) {
                obj['SalesforceConfiguration'] = DataSourceConfigurationSalesforceConfiguration.constructFromObject(data['SalesforceConfiguration']);
            }
            if (data.hasOwnProperty('OneDriveConfiguration')) {
                obj['OneDriveConfiguration'] = DataSourceConfigurationOneDriveConfiguration.constructFromObject(data['OneDriveConfiguration']);
            }
            if (data.hasOwnProperty('ServiceNowConfiguration')) {
                obj['ServiceNowConfiguration'] = DataSourceConfigurationServiceNowConfiguration.constructFromObject(data['ServiceNowConfiguration']);
            }
            if (data.hasOwnProperty('ConfluenceConfiguration')) {
                obj['ConfluenceConfiguration'] = DataSourceConfigurationConfluenceConfiguration.constructFromObject(data['ConfluenceConfiguration']);
            }
            if (data.hasOwnProperty('GoogleDriveConfiguration')) {
                obj['GoogleDriveConfiguration'] = DataSourceConfigurationGoogleDriveConfiguration.constructFromObject(data['GoogleDriveConfiguration']);
            }
            if (data.hasOwnProperty('WebCrawlerConfiguration')) {
                obj['WebCrawlerConfiguration'] = WebCrawlerConfiguration.constructFromObject(data['WebCrawlerConfiguration']);
            }
            if (data.hasOwnProperty('WorkDocsConfiguration')) {
                obj['WorkDocsConfiguration'] = DataSourceConfigurationWorkDocsConfiguration.constructFromObject(data['WorkDocsConfiguration']);
            }
            if (data.hasOwnProperty('FsxConfiguration')) {
                obj['FsxConfiguration'] = DataSourceConfigurationFsxConfiguration.constructFromObject(data['FsxConfiguration']);
            }
            if (data.hasOwnProperty('SlackConfiguration')) {
                obj['SlackConfiguration'] = DataSourceConfigurationSlackConfiguration.constructFromObject(data['SlackConfiguration']);
            }
            if (data.hasOwnProperty('BoxConfiguration')) {
                obj['BoxConfiguration'] = DataSourceConfigurationBoxConfiguration.constructFromObject(data['BoxConfiguration']);
            }
            if (data.hasOwnProperty('QuipConfiguration')) {
                obj['QuipConfiguration'] = DataSourceConfigurationQuipConfiguration.constructFromObject(data['QuipConfiguration']);
            }
            if (data.hasOwnProperty('JiraConfiguration')) {
                obj['JiraConfiguration'] = DataSourceConfigurationJiraConfiguration.constructFromObject(data['JiraConfiguration']);
            }
            if (data.hasOwnProperty('GitHubConfiguration')) {
                obj['GitHubConfiguration'] = DataSourceConfigurationGitHubConfiguration.constructFromObject(data['GitHubConfiguration']);
            }
            if (data.hasOwnProperty('AlfrescoConfiguration')) {
                obj['AlfrescoConfiguration'] = DataSourceConfigurationAlfrescoConfiguration.constructFromObject(data['AlfrescoConfiguration']);
            }
            if (data.hasOwnProperty('TemplateConfiguration')) {
                obj['TemplateConfiguration'] = DataSourceConfigurationTemplateConfiguration.constructFromObject(data['TemplateConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataSourceConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataSourceConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `S3Configuration`
        if (data['S3Configuration']) { // data not null
          DataSourceConfigurationS3Configuration.validateJSON(data['S3Configuration']);
        }
        // validate the optional field `SharePointConfiguration`
        if (data['SharePointConfiguration']) { // data not null
          DataSourceConfigurationSharePointConfiguration.validateJSON(data['SharePointConfiguration']);
        }
        // validate the optional field `DatabaseConfiguration`
        if (data['DatabaseConfiguration']) { // data not null
          DataSourceConfigurationDatabaseConfiguration.validateJSON(data['DatabaseConfiguration']);
        }
        // validate the optional field `SalesforceConfiguration`
        if (data['SalesforceConfiguration']) { // data not null
          DataSourceConfigurationSalesforceConfiguration.validateJSON(data['SalesforceConfiguration']);
        }
        // validate the optional field `OneDriveConfiguration`
        if (data['OneDriveConfiguration']) { // data not null
          DataSourceConfigurationOneDriveConfiguration.validateJSON(data['OneDriveConfiguration']);
        }
        // validate the optional field `ServiceNowConfiguration`
        if (data['ServiceNowConfiguration']) { // data not null
          DataSourceConfigurationServiceNowConfiguration.validateJSON(data['ServiceNowConfiguration']);
        }
        // validate the optional field `ConfluenceConfiguration`
        if (data['ConfluenceConfiguration']) { // data not null
          DataSourceConfigurationConfluenceConfiguration.validateJSON(data['ConfluenceConfiguration']);
        }
        // validate the optional field `GoogleDriveConfiguration`
        if (data['GoogleDriveConfiguration']) { // data not null
          DataSourceConfigurationGoogleDriveConfiguration.validateJSON(data['GoogleDriveConfiguration']);
        }
        // validate the optional field `WebCrawlerConfiguration`
        if (data['WebCrawlerConfiguration']) { // data not null
          WebCrawlerConfiguration.validateJSON(data['WebCrawlerConfiguration']);
        }
        // validate the optional field `WorkDocsConfiguration`
        if (data['WorkDocsConfiguration']) { // data not null
          DataSourceConfigurationWorkDocsConfiguration.validateJSON(data['WorkDocsConfiguration']);
        }
        // validate the optional field `FsxConfiguration`
        if (data['FsxConfiguration']) { // data not null
          DataSourceConfigurationFsxConfiguration.validateJSON(data['FsxConfiguration']);
        }
        // validate the optional field `SlackConfiguration`
        if (data['SlackConfiguration']) { // data not null
          DataSourceConfigurationSlackConfiguration.validateJSON(data['SlackConfiguration']);
        }
        // validate the optional field `BoxConfiguration`
        if (data['BoxConfiguration']) { // data not null
          DataSourceConfigurationBoxConfiguration.validateJSON(data['BoxConfiguration']);
        }
        // validate the optional field `QuipConfiguration`
        if (data['QuipConfiguration']) { // data not null
          DataSourceConfigurationQuipConfiguration.validateJSON(data['QuipConfiguration']);
        }
        // validate the optional field `JiraConfiguration`
        if (data['JiraConfiguration']) { // data not null
          DataSourceConfigurationJiraConfiguration.validateJSON(data['JiraConfiguration']);
        }
        // validate the optional field `GitHubConfiguration`
        if (data['GitHubConfiguration']) { // data not null
          DataSourceConfigurationGitHubConfiguration.validateJSON(data['GitHubConfiguration']);
        }
        // validate the optional field `AlfrescoConfiguration`
        if (data['AlfrescoConfiguration']) { // data not null
          DataSourceConfigurationAlfrescoConfiguration.validateJSON(data['AlfrescoConfiguration']);
        }
        // validate the optional field `TemplateConfiguration`
        if (data['TemplateConfiguration']) { // data not null
          DataSourceConfigurationTemplateConfiguration.validateJSON(data['TemplateConfiguration']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataSourceConfigurationS3Configuration} S3Configuration
 */
DataSourceConfiguration.prototype['S3Configuration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationSharePointConfiguration} SharePointConfiguration
 */
DataSourceConfiguration.prototype['SharePointConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationDatabaseConfiguration} DatabaseConfiguration
 */
DataSourceConfiguration.prototype['DatabaseConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationSalesforceConfiguration} SalesforceConfiguration
 */
DataSourceConfiguration.prototype['SalesforceConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationOneDriveConfiguration} OneDriveConfiguration
 */
DataSourceConfiguration.prototype['OneDriveConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationServiceNowConfiguration} ServiceNowConfiguration
 */
DataSourceConfiguration.prototype['ServiceNowConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationConfluenceConfiguration} ConfluenceConfiguration
 */
DataSourceConfiguration.prototype['ConfluenceConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationGoogleDriveConfiguration} GoogleDriveConfiguration
 */
DataSourceConfiguration.prototype['GoogleDriveConfiguration'] = undefined;

/**
 * @member {module:model/WebCrawlerConfiguration} WebCrawlerConfiguration
 */
DataSourceConfiguration.prototype['WebCrawlerConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationWorkDocsConfiguration} WorkDocsConfiguration
 */
DataSourceConfiguration.prototype['WorkDocsConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationFsxConfiguration} FsxConfiguration
 */
DataSourceConfiguration.prototype['FsxConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationSlackConfiguration} SlackConfiguration
 */
DataSourceConfiguration.prototype['SlackConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationBoxConfiguration} BoxConfiguration
 */
DataSourceConfiguration.prototype['BoxConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationQuipConfiguration} QuipConfiguration
 */
DataSourceConfiguration.prototype['QuipConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationJiraConfiguration} JiraConfiguration
 */
DataSourceConfiguration.prototype['JiraConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationGitHubConfiguration} GitHubConfiguration
 */
DataSourceConfiguration.prototype['GitHubConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationAlfrescoConfiguration} AlfrescoConfiguration
 */
DataSourceConfiguration.prototype['AlfrescoConfiguration'] = undefined;

/**
 * @member {module:model/DataSourceConfigurationTemplateConfiguration} TemplateConfiguration
 */
DataSourceConfiguration.prototype['TemplateConfiguration'] = undefined;






export default DataSourceConfiguration;

