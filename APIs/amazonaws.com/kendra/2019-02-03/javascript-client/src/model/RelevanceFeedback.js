/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RelevanceType from './RelevanceType';

/**
 * The RelevanceFeedback model module.
 * @module model/RelevanceFeedback
 * @version 2019-02-03
 */
class RelevanceFeedback {
    /**
     * Constructs a new <code>RelevanceFeedback</code>.
     * Provides feedback on how relevant a document is to a search. Your application uses the &lt;code&gt;SubmitFeedback&lt;/code&gt; API to provide relevance information.
     * @alias module:model/RelevanceFeedback
     * @param resultId {String} 
     * @param relevanceValue {module:model/RelevanceType} 
     */
    constructor(resultId, relevanceValue) { 
        
        RelevanceFeedback.initialize(this, resultId, relevanceValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resultId, relevanceValue) { 
        obj['ResultId'] = resultId;
        obj['RelevanceValue'] = relevanceValue;
    }

    /**
     * Constructs a <code>RelevanceFeedback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelevanceFeedback} obj Optional instance to populate.
     * @return {module:model/RelevanceFeedback} The populated <code>RelevanceFeedback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelevanceFeedback();

            if (data.hasOwnProperty('ResultId')) {
                obj['ResultId'] = ApiClient.convertToType(data['ResultId'], 'String');
            }
            if (data.hasOwnProperty('RelevanceValue')) {
                obj['RelevanceValue'] = ApiClient.convertToType(data['RelevanceValue'], RelevanceType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RelevanceFeedback</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RelevanceFeedback</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RelevanceFeedback.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ResultId`
        if (data['ResultId']) { // data not null
          String.validateJSON(data['ResultId']);
        }
        // validate the optional field `RelevanceValue`
        if (data['RelevanceValue']) { // data not null
          RelevanceType.validateJSON(data['RelevanceValue']);
        }

        return true;
    }


}

RelevanceFeedback.RequiredProperties = ["ResultId", "RelevanceValue"];

/**
 * @member {String} ResultId
 */
RelevanceFeedback.prototype['ResultId'] = undefined;

/**
 * @member {module:model/RelevanceType} RelevanceValue
 */
RelevanceFeedback.prototype['RelevanceValue'] = undefined;






export default RelevanceFeedback;

