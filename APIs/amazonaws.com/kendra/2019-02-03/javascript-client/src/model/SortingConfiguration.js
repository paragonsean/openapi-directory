/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SortOrder from './SortOrder';

/**
 * The SortingConfiguration model module.
 * @module model/SortingConfiguration
 * @version 2019-02-03
 */
class SortingConfiguration {
    /**
     * Constructs a new <code>SortingConfiguration</code>.
     * &lt;p&gt;Specifies the document attribute to use to sort the response to a Amazon Kendra query. You can specify a single attribute for sorting. The attribute must have the &lt;code&gt;Sortable&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;, otherwise Amazon Kendra returns an exception.&lt;/p&gt; &lt;p&gt;You can sort attributes of the following types.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Date value&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Long value&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;String value&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can&#39;t sort attributes of the following type.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;String list value&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/SortingConfiguration
     * @param documentAttributeKey {String} 
     * @param sortOrder {module:model/SortOrder} 
     */
    constructor(documentAttributeKey, sortOrder) { 
        
        SortingConfiguration.initialize(this, documentAttributeKey, sortOrder);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentAttributeKey, sortOrder) { 
        obj['DocumentAttributeKey'] = documentAttributeKey;
        obj['SortOrder'] = sortOrder;
    }

    /**
     * Constructs a <code>SortingConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SortingConfiguration} obj Optional instance to populate.
     * @return {module:model/SortingConfiguration} The populated <code>SortingConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SortingConfiguration();

            if (data.hasOwnProperty('DocumentAttributeKey')) {
                obj['DocumentAttributeKey'] = ApiClient.convertToType(data['DocumentAttributeKey'], 'String');
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = ApiClient.convertToType(data['SortOrder'], SortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SortingConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SortingConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SortingConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DocumentAttributeKey`
        if (data['DocumentAttributeKey']) { // data not null
          String.validateJSON(data['DocumentAttributeKey']);
        }
        // validate the optional field `SortOrder`
        if (data['SortOrder']) { // data not null
          SortOrder.validateJSON(data['SortOrder']);
        }

        return true;
    }


}

SortingConfiguration.RequiredProperties = ["DocumentAttributeKey", "SortOrder"];

/**
 * @member {String} DocumentAttributeKey
 */
SortingConfiguration.prototype['DocumentAttributeKey'] = undefined;

/**
 * @member {module:model/SortOrder} SortOrder
 */
SortingConfiguration.prototype['SortOrder'] = undefined;






export default SortingConfiguration;

