/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryResult model module.
 * @module model/QueryResult
 * @version 2019-02-03
 */
class QueryResult {
    /**
     * Constructs a new <code>QueryResult</code>.
     * @alias module:model/QueryResult
     */
    constructor() { 
        
        QueryResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResult} obj Optional instance to populate.
     * @return {module:model/QueryResult} The populated <code>QueryResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResult();

            if (data.hasOwnProperty('QueryId')) {
                obj['QueryId'] = ApiClient.convertToType(data['QueryId'], 'String');
            }
            if (data.hasOwnProperty('ResultItems')) {
                obj['ResultItems'] = ApiClient.convertToType(data['ResultItems'], Array);
            }
            if (data.hasOwnProperty('FacetResults')) {
                obj['FacetResults'] = ApiClient.convertToType(data['FacetResults'], Array);
            }
            if (data.hasOwnProperty('TotalNumberOfResults')) {
                obj['TotalNumberOfResults'] = ApiClient.convertToType(data['TotalNumberOfResults'], 'Number');
            }
            if (data.hasOwnProperty('Warnings')) {
                obj['Warnings'] = ApiClient.convertToType(data['Warnings'], Array);
            }
            if (data.hasOwnProperty('SpellCorrectedQueries')) {
                obj['SpellCorrectedQueries'] = ApiClient.convertToType(data['SpellCorrectedQueries'], Array);
            }
            if (data.hasOwnProperty('FeaturedResultsItems')) {
                obj['FeaturedResultsItems'] = ApiClient.convertToType(data['FeaturedResultsItems'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `QueryId`
        if (data['QueryId']) { // data not null
          String.validateJSON(data['QueryId']);
        }
        // validate the optional field `ResultItems`
        if (data['ResultItems']) { // data not null
          Array.validateJSON(data['ResultItems']);
        }
        // validate the optional field `FacetResults`
        if (data['FacetResults']) { // data not null
          Array.validateJSON(data['FacetResults']);
        }
        // validate the optional field `TotalNumberOfResults`
        if (data['TotalNumberOfResults']) { // data not null
          Number.validateJSON(data['TotalNumberOfResults']);
        }
        // validate the optional field `Warnings`
        if (data['Warnings']) { // data not null
          Array.validateJSON(data['Warnings']);
        }
        // validate the optional field `SpellCorrectedQueries`
        if (data['SpellCorrectedQueries']) { // data not null
          Array.validateJSON(data['SpellCorrectedQueries']);
        }
        // validate the optional field `FeaturedResultsItems`
        if (data['FeaturedResultsItems']) { // data not null
          Array.validateJSON(data['FeaturedResultsItems']);
        }

        return true;
    }


}



/**
 * @member {String} QueryId
 */
QueryResult.prototype['QueryId'] = undefined;

/**
 * @member {Array} ResultItems
 */
QueryResult.prototype['ResultItems'] = undefined;

/**
 * @member {Array} FacetResults
 */
QueryResult.prototype['FacetResults'] = undefined;

/**
 * @member {Number} TotalNumberOfResults
 */
QueryResult.prototype['TotalNumberOfResults'] = undefined;

/**
 * @member {Array} Warnings
 */
QueryResult.prototype['Warnings'] = undefined;

/**
 * @member {Array} SpellCorrectedQueries
 */
QueryResult.prototype['SpellCorrectedQueries'] = undefined;

/**
 * @member {Array} FeaturedResultsItems
 */
QueryResult.prototype['FeaturedResultsItems'] = undefined;






export default QueryResult;

