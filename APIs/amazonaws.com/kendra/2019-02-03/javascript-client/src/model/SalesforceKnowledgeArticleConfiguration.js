/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SalesforceKnowledgeArticleConfigurationStandardKnowledgeArticleTypeConfiguration from './SalesforceKnowledgeArticleConfigurationStandardKnowledgeArticleTypeConfiguration';

/**
 * The SalesforceKnowledgeArticleConfiguration model module.
 * @module model/SalesforceKnowledgeArticleConfiguration
 * @version 2019-02-03
 */
class SalesforceKnowledgeArticleConfiguration {
    /**
     * Constructs a new <code>SalesforceKnowledgeArticleConfiguration</code>.
     * Provides the configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both 
     * @alias module:model/SalesforceKnowledgeArticleConfiguration
     * @param includedStates {Array} 
     */
    constructor(includedStates) { 
        
        SalesforceKnowledgeArticleConfiguration.initialize(this, includedStates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, includedStates) { 
        obj['IncludedStates'] = includedStates;
    }

    /**
     * Constructs a <code>SalesforceKnowledgeArticleConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesforceKnowledgeArticleConfiguration} obj Optional instance to populate.
     * @return {module:model/SalesforceKnowledgeArticleConfiguration} The populated <code>SalesforceKnowledgeArticleConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesforceKnowledgeArticleConfiguration();

            if (data.hasOwnProperty('IncludedStates')) {
                obj['IncludedStates'] = ApiClient.convertToType(data['IncludedStates'], Array);
            }
            if (data.hasOwnProperty('StandardKnowledgeArticleTypeConfiguration')) {
                obj['StandardKnowledgeArticleTypeConfiguration'] = SalesforceKnowledgeArticleConfigurationStandardKnowledgeArticleTypeConfiguration.constructFromObject(data['StandardKnowledgeArticleTypeConfiguration']);
            }
            if (data.hasOwnProperty('CustomKnowledgeArticleTypeConfigurations')) {
                obj['CustomKnowledgeArticleTypeConfigurations'] = ApiClient.convertToType(data['CustomKnowledgeArticleTypeConfigurations'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesforceKnowledgeArticleConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesforceKnowledgeArticleConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SalesforceKnowledgeArticleConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IncludedStates`
        if (data['IncludedStates']) { // data not null
          Array.validateJSON(data['IncludedStates']);
        }
        // validate the optional field `StandardKnowledgeArticleTypeConfiguration`
        if (data['StandardKnowledgeArticleTypeConfiguration']) { // data not null
          SalesforceKnowledgeArticleConfigurationStandardKnowledgeArticleTypeConfiguration.validateJSON(data['StandardKnowledgeArticleTypeConfiguration']);
        }
        // validate the optional field `CustomKnowledgeArticleTypeConfigurations`
        if (data['CustomKnowledgeArticleTypeConfigurations']) { // data not null
          Array.validateJSON(data['CustomKnowledgeArticleTypeConfigurations']);
        }

        return true;
    }


}

SalesforceKnowledgeArticleConfiguration.RequiredProperties = ["IncludedStates"];

/**
 * @member {Array} IncludedStates
 */
SalesforceKnowledgeArticleConfiguration.prototype['IncludedStates'] = undefined;

/**
 * @member {module:model/SalesforceKnowledgeArticleConfigurationStandardKnowledgeArticleTypeConfiguration} StandardKnowledgeArticleTypeConfiguration
 */
SalesforceKnowledgeArticleConfiguration.prototype['StandardKnowledgeArticleTypeConfiguration'] = undefined;

/**
 * @member {Array} CustomKnowledgeArticleTypeConfigurations
 */
SalesforceKnowledgeArticleConfiguration.prototype['CustomKnowledgeArticleTypeConfigurations'] = undefined;






export default SalesforceKnowledgeArticleConfiguration;

