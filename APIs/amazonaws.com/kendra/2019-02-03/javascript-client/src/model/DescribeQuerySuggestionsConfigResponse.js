/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig from './DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig';
import Mode from './Mode';
import QuerySuggestionsStatus from './QuerySuggestionsStatus';

/**
 * The DescribeQuerySuggestionsConfigResponse model module.
 * @module model/DescribeQuerySuggestionsConfigResponse
 * @version 2019-02-03
 */
class DescribeQuerySuggestionsConfigResponse {
    /**
     * Constructs a new <code>DescribeQuerySuggestionsConfigResponse</code>.
     * @alias module:model/DescribeQuerySuggestionsConfigResponse
     */
    constructor() { 
        
        DescribeQuerySuggestionsConfigResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeQuerySuggestionsConfigResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeQuerySuggestionsConfigResponse} obj Optional instance to populate.
     * @return {module:model/DescribeQuerySuggestionsConfigResponse} The populated <code>DescribeQuerySuggestionsConfigResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeQuerySuggestionsConfigResponse();

            if (data.hasOwnProperty('Mode')) {
                obj['Mode'] = ApiClient.convertToType(data['Mode'], Mode);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], QuerySuggestionsStatus);
            }
            if (data.hasOwnProperty('QueryLogLookBackWindowInDays')) {
                obj['QueryLogLookBackWindowInDays'] = ApiClient.convertToType(data['QueryLogLookBackWindowInDays'], 'Number');
            }
            if (data.hasOwnProperty('IncludeQueriesWithoutUserInformation')) {
                obj['IncludeQueriesWithoutUserInformation'] = ApiClient.convertToType(data['IncludeQueriesWithoutUserInformation'], 'Boolean');
            }
            if (data.hasOwnProperty('MinimumNumberOfQueryingUsers')) {
                obj['MinimumNumberOfQueryingUsers'] = ApiClient.convertToType(data['MinimumNumberOfQueryingUsers'], 'Number');
            }
            if (data.hasOwnProperty('MinimumQueryCount')) {
                obj['MinimumQueryCount'] = ApiClient.convertToType(data['MinimumQueryCount'], 'Number');
            }
            if (data.hasOwnProperty('LastSuggestionsBuildTime')) {
                obj['LastSuggestionsBuildTime'] = ApiClient.convertToType(data['LastSuggestionsBuildTime'], 'Date');
            }
            if (data.hasOwnProperty('LastClearTime')) {
                obj['LastClearTime'] = ApiClient.convertToType(data['LastClearTime'], 'Date');
            }
            if (data.hasOwnProperty('TotalSuggestionsCount')) {
                obj['TotalSuggestionsCount'] = ApiClient.convertToType(data['TotalSuggestionsCount'], 'Number');
            }
            if (data.hasOwnProperty('AttributeSuggestionsConfig')) {
                obj['AttributeSuggestionsConfig'] = DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig.constructFromObject(data['AttributeSuggestionsConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeQuerySuggestionsConfigResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeQuerySuggestionsConfigResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Mode`
        if (data['Mode']) { // data not null
          Mode.validateJSON(data['Mode']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          QuerySuggestionsStatus.validateJSON(data['Status']);
        }
        // validate the optional field `QueryLogLookBackWindowInDays`
        if (data['QueryLogLookBackWindowInDays']) { // data not null
          Number.validateJSON(data['QueryLogLookBackWindowInDays']);
        }
        // validate the optional field `IncludeQueriesWithoutUserInformation`
        if (data['IncludeQueriesWithoutUserInformation']) { // data not null
          Boolean.validateJSON(data['IncludeQueriesWithoutUserInformation']);
        }
        // validate the optional field `MinimumNumberOfQueryingUsers`
        if (data['MinimumNumberOfQueryingUsers']) { // data not null
          Number.validateJSON(data['MinimumNumberOfQueryingUsers']);
        }
        // validate the optional field `MinimumQueryCount`
        if (data['MinimumQueryCount']) { // data not null
          Number.validateJSON(data['MinimumQueryCount']);
        }
        // validate the optional field `LastSuggestionsBuildTime`
        if (data['LastSuggestionsBuildTime']) { // data not null
          Date.validateJSON(data['LastSuggestionsBuildTime']);
        }
        // validate the optional field `LastClearTime`
        if (data['LastClearTime']) { // data not null
          Date.validateJSON(data['LastClearTime']);
        }
        // validate the optional field `TotalSuggestionsCount`
        if (data['TotalSuggestionsCount']) { // data not null
          Number.validateJSON(data['TotalSuggestionsCount']);
        }
        // validate the optional field `AttributeSuggestionsConfig`
        if (data['AttributeSuggestionsConfig']) { // data not null
          DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig.validateJSON(data['AttributeSuggestionsConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/Mode} Mode
 */
DescribeQuerySuggestionsConfigResponse.prototype['Mode'] = undefined;

/**
 * @member {module:model/QuerySuggestionsStatus} Status
 */
DescribeQuerySuggestionsConfigResponse.prototype['Status'] = undefined;

/**
 * @member {Number} QueryLogLookBackWindowInDays
 */
DescribeQuerySuggestionsConfigResponse.prototype['QueryLogLookBackWindowInDays'] = undefined;

/**
 * @member {Boolean} IncludeQueriesWithoutUserInformation
 */
DescribeQuerySuggestionsConfigResponse.prototype['IncludeQueriesWithoutUserInformation'] = undefined;

/**
 * @member {Number} MinimumNumberOfQueryingUsers
 */
DescribeQuerySuggestionsConfigResponse.prototype['MinimumNumberOfQueryingUsers'] = undefined;

/**
 * @member {Number} MinimumQueryCount
 */
DescribeQuerySuggestionsConfigResponse.prototype['MinimumQueryCount'] = undefined;

/**
 * @member {Date} LastSuggestionsBuildTime
 */
DescribeQuerySuggestionsConfigResponse.prototype['LastSuggestionsBuildTime'] = undefined;

/**
 * @member {Date} LastClearTime
 */
DescribeQuerySuggestionsConfigResponse.prototype['LastClearTime'] = undefined;

/**
 * @member {Number} TotalSuggestionsCount
 */
DescribeQuerySuggestionsConfigResponse.prototype['TotalSuggestionsCount'] = undefined;

/**
 * @member {module:model/DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig} AttributeSuggestionsConfig
 */
DescribeQuerySuggestionsConfigResponse.prototype['AttributeSuggestionsConfig'] = undefined;






export default DescribeQuerySuggestionsConfigResponse;

