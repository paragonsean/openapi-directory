/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteDataSourceRequest model module.
 * @module model/DeleteDataSourceRequest
 * @version 2019-02-03
 */
class DeleteDataSourceRequest {
    /**
     * Constructs a new <code>DeleteDataSourceRequest</code>.
     * @alias module:model/DeleteDataSourceRequest
     * @param id {String} 
     * @param indexId {String} 
     */
    constructor(id, indexId) { 
        
        DeleteDataSourceRequest.initialize(this, id, indexId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, indexId) { 
        obj['Id'] = id;
        obj['IndexId'] = indexId;
    }

    /**
     * Constructs a <code>DeleteDataSourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteDataSourceRequest} obj Optional instance to populate.
     * @return {module:model/DeleteDataSourceRequest} The populated <code>DeleteDataSourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteDataSourceRequest();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IndexId')) {
                obj['IndexId'] = ApiClient.convertToType(data['IndexId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteDataSourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteDataSourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteDataSourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `IndexId`
        if (data['IndexId']) { // data not null
          String.validateJSON(data['IndexId']);
        }

        return true;
    }


}

DeleteDataSourceRequest.RequiredProperties = ["Id", "IndexId"];

/**
 * @member {String} Id
 */
DeleteDataSourceRequest.prototype['Id'] = undefined;

/**
 * @member {String} IndexId
 */
DeleteDataSourceRequest.prototype['IndexId'] = undefined;






export default DeleteDataSourceRequest;

