/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserContext from './UserContext';

/**
 * The AttributeSuggestionsGetConfigUserContext model module.
 * @module model/AttributeSuggestionsGetConfigUserContext
 * @version 2019-02-03
 */
class AttributeSuggestionsGetConfigUserContext {
    /**
     * Constructs a new <code>AttributeSuggestionsGetConfigUserContext</code>.
     * @alias module:model/AttributeSuggestionsGetConfigUserContext
     * @implements module:model/UserContext
     */
    constructor() { 
        UserContext.initialize(this);
        AttributeSuggestionsGetConfigUserContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttributeSuggestionsGetConfigUserContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributeSuggestionsGetConfigUserContext} obj Optional instance to populate.
     * @return {module:model/AttributeSuggestionsGetConfigUserContext} The populated <code>AttributeSuggestionsGetConfigUserContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributeSuggestionsGetConfigUserContext();
            UserContext.constructFromObject(data, obj);

            if (data.hasOwnProperty('Token')) {
                obj['Token'] = ApiClient.convertToType(data['Token'], 'String');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
            if (data.hasOwnProperty('Groups')) {
                obj['Groups'] = ApiClient.convertToType(data['Groups'], Array);
            }
            if (data.hasOwnProperty('DataSourceGroups')) {
                obj['DataSourceGroups'] = ApiClient.convertToType(data['DataSourceGroups'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributeSuggestionsGetConfigUserContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributeSuggestionsGetConfigUserContext</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Token`
        if (data['Token']) { // data not null
          String.validateJSON(data['Token']);
        }
        // validate the optional field `UserId`
        if (data['UserId']) { // data not null
          String.validateJSON(data['UserId']);
        }
        // validate the optional field `Groups`
        if (data['Groups']) { // data not null
          Array.validateJSON(data['Groups']);
        }
        // validate the optional field `DataSourceGroups`
        if (data['DataSourceGroups']) { // data not null
          Array.validateJSON(data['DataSourceGroups']);
        }

        return true;
    }


}



/**
 * @member {String} Token
 */
AttributeSuggestionsGetConfigUserContext.prototype['Token'] = undefined;

/**
 * @member {String} UserId
 */
AttributeSuggestionsGetConfigUserContext.prototype['UserId'] = undefined;

/**
 * @member {Array} Groups
 */
AttributeSuggestionsGetConfigUserContext.prototype['Groups'] = undefined;

/**
 * @member {Array} DataSourceGroups
 */
AttributeSuggestionsGetConfigUserContext.prototype['DataSourceGroups'] = undefined;


// Implement UserContext interface:
/**
 * @member {String} Token
 */
UserContext.prototype['Token'] = undefined;
/**
 * @member {String} UserId
 */
UserContext.prototype['UserId'] = undefined;
/**
 * @member {Array} Groups
 */
UserContext.prototype['Groups'] = undefined;
/**
 * @member {Array} DataSourceGroups
 */
UserContext.prototype['DataSourceGroups'] = undefined;




export default AttributeSuggestionsGetConfigUserContext;

