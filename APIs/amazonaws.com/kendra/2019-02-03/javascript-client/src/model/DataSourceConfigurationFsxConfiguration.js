/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FsxConfiguration from './FsxConfiguration';
import FsxConfigurationVpcConfiguration from './FsxConfigurationVpcConfiguration';
import FsxFileSystemType from './FsxFileSystemType';

/**
 * The DataSourceConfigurationFsxConfiguration model module.
 * @module model/DataSourceConfigurationFsxConfiguration
 * @version 2019-02-03
 */
class DataSourceConfigurationFsxConfiguration {
    /**
     * Constructs a new <code>DataSourceConfigurationFsxConfiguration</code>.
     * @alias module:model/DataSourceConfigurationFsxConfiguration
     * @implements module:model/FsxConfiguration
     * @param fileSystemId {String} 
     * @param fileSystemType {module:model/FsxFileSystemType} 
     * @param vpcConfiguration {module:model/FsxConfigurationVpcConfiguration} 
     */
    constructor(fileSystemId, fileSystemType, vpcConfiguration) { 
        FsxConfiguration.initialize(this, fileSystemId, fileSystemType, vpcConfiguration);
        DataSourceConfigurationFsxConfiguration.initialize(this, fileSystemId, fileSystemType, vpcConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileSystemId, fileSystemType, vpcConfiguration) { 
        obj['FileSystemId'] = fileSystemId;
        obj['FileSystemType'] = fileSystemType;
        obj['VpcConfiguration'] = vpcConfiguration;
    }

    /**
     * Constructs a <code>DataSourceConfigurationFsxConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataSourceConfigurationFsxConfiguration} obj Optional instance to populate.
     * @return {module:model/DataSourceConfigurationFsxConfiguration} The populated <code>DataSourceConfigurationFsxConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataSourceConfigurationFsxConfiguration();
            FsxConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('FileSystemId')) {
                obj['FileSystemId'] = ApiClient.convertToType(data['FileSystemId'], 'String');
            }
            if (data.hasOwnProperty('FileSystemType')) {
                obj['FileSystemType'] = ApiClient.convertToType(data['FileSystemType'], FsxFileSystemType);
            }
            if (data.hasOwnProperty('VpcConfiguration')) {
                obj['VpcConfiguration'] = FsxConfigurationVpcConfiguration.constructFromObject(data['VpcConfiguration']);
            }
            if (data.hasOwnProperty('SecretArn')) {
                obj['SecretArn'] = ApiClient.convertToType(data['SecretArn'], 'String');
            }
            if (data.hasOwnProperty('InclusionPatterns')) {
                obj['InclusionPatterns'] = ApiClient.convertToType(data['InclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('ExclusionPatterns')) {
                obj['ExclusionPatterns'] = ApiClient.convertToType(data['ExclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('FieldMappings')) {
                obj['FieldMappings'] = ApiClient.convertToType(data['FieldMappings'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataSourceConfigurationFsxConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataSourceConfigurationFsxConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataSourceConfigurationFsxConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FileSystemId`
        if (data['FileSystemId']) { // data not null
          String.validateJSON(data['FileSystemId']);
        }
        // validate the optional field `FileSystemType`
        if (data['FileSystemType']) { // data not null
          FsxFileSystemType.validateJSON(data['FileSystemType']);
        }
        // validate the optional field `VpcConfiguration`
        if (data['VpcConfiguration']) { // data not null
          FsxConfigurationVpcConfiguration.validateJSON(data['VpcConfiguration']);
        }
        // validate the optional field `SecretArn`
        if (data['SecretArn']) { // data not null
          String.validateJSON(data['SecretArn']);
        }
        // validate the optional field `InclusionPatterns`
        if (data['InclusionPatterns']) { // data not null
          Array.validateJSON(data['InclusionPatterns']);
        }
        // validate the optional field `ExclusionPatterns`
        if (data['ExclusionPatterns']) { // data not null
          Array.validateJSON(data['ExclusionPatterns']);
        }
        // validate the optional field `FieldMappings`
        if (data['FieldMappings']) { // data not null
          Array.validateJSON(data['FieldMappings']);
        }

        return true;
    }


}

DataSourceConfigurationFsxConfiguration.RequiredProperties = ["FileSystemId", "FileSystemType", "VpcConfiguration"];

/**
 * @member {String} FileSystemId
 */
DataSourceConfigurationFsxConfiguration.prototype['FileSystemId'] = undefined;

/**
 * @member {module:model/FsxFileSystemType} FileSystemType
 */
DataSourceConfigurationFsxConfiguration.prototype['FileSystemType'] = undefined;

/**
 * @member {module:model/FsxConfigurationVpcConfiguration} VpcConfiguration
 */
DataSourceConfigurationFsxConfiguration.prototype['VpcConfiguration'] = undefined;

/**
 * @member {String} SecretArn
 */
DataSourceConfigurationFsxConfiguration.prototype['SecretArn'] = undefined;

/**
 * @member {Array} InclusionPatterns
 */
DataSourceConfigurationFsxConfiguration.prototype['InclusionPatterns'] = undefined;

/**
 * @member {Array} ExclusionPatterns
 */
DataSourceConfigurationFsxConfiguration.prototype['ExclusionPatterns'] = undefined;

/**
 * @member {Array} FieldMappings
 */
DataSourceConfigurationFsxConfiguration.prototype['FieldMappings'] = undefined;


// Implement FsxConfiguration interface:
/**
 * @member {String} FileSystemId
 */
FsxConfiguration.prototype['FileSystemId'] = undefined;
/**
 * @member {module:model/FsxFileSystemType} FileSystemType
 */
FsxConfiguration.prototype['FileSystemType'] = undefined;
/**
 * @member {module:model/FsxConfigurationVpcConfiguration} VpcConfiguration
 */
FsxConfiguration.prototype['VpcConfiguration'] = undefined;
/**
 * @member {String} SecretArn
 */
FsxConfiguration.prototype['SecretArn'] = undefined;
/**
 * @member {Array} InclusionPatterns
 */
FsxConfiguration.prototype['InclusionPatterns'] = undefined;
/**
 * @member {Array} ExclusionPatterns
 */
FsxConfiguration.prototype['ExclusionPatterns'] = undefined;
/**
 * @member {Array} FieldMappings
 */
FsxConfiguration.prototype['FieldMappings'] = undefined;




export default DataSourceConfigurationFsxConfiguration;

