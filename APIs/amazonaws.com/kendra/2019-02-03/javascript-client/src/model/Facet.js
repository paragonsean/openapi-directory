/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Facet model module.
 * @module model/Facet
 * @version 2019-02-03
 */
class Facet {
    /**
     * Constructs a new <code>Facet</code>.
     * &lt;p&gt;Information about a document attribute. You can use document attributes as facets.&lt;/p&gt; &lt;p&gt;For example, the document attribute or facet \&quot;Department\&quot; includes the values \&quot;HR\&quot;, \&quot;Engineering\&quot;, and \&quot;Accounting\&quot;. You can display these values in the search results so that documents can be searched by department.&lt;/p&gt; &lt;p&gt;You can display up to 10 facet values per facet for a query. If you want to increase this limit, contact &lt;a href&#x3D;\&quot;http://aws.amazon.com/contact-us/\&quot;&gt;Support&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/Facet
     */
    constructor() { 
        
        Facet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Facet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Facet} obj Optional instance to populate.
     * @return {module:model/Facet} The populated <code>Facet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Facet();

            if (data.hasOwnProperty('DocumentAttributeKey')) {
                obj['DocumentAttributeKey'] = ApiClient.convertToType(data['DocumentAttributeKey'], 'String');
            }
            if (data.hasOwnProperty('Facets')) {
                obj['Facets'] = ApiClient.convertToType(data['Facets'], Array);
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Facet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Facet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DocumentAttributeKey`
        if (data['DocumentAttributeKey']) { // data not null
          String.validateJSON(data['DocumentAttributeKey']);
        }
        // validate the optional field `Facets`
        if (data['Facets']) { // data not null
          Array.validateJSON(data['Facets']);
        }
        // validate the optional field `MaxResults`
        if (data['MaxResults']) { // data not null
          Number.validateJSON(data['MaxResults']);
        }

        return true;
    }


}



/**
 * @member {String} DocumentAttributeKey
 */
Facet.prototype['DocumentAttributeKey'] = undefined;

/**
 * @member {Array} Facets
 */
Facet.prototype['Facets'] = undefined;

/**
 * @member {Number} MaxResults
 */
Facet.prototype['MaxResults'] = undefined;






export default Facet;

