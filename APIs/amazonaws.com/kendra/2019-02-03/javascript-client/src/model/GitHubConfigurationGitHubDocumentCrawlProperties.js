/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GitHubDocumentCrawlProperties from './GitHubDocumentCrawlProperties';

/**
 * The GitHubConfigurationGitHubDocumentCrawlProperties model module.
 * @module model/GitHubConfigurationGitHubDocumentCrawlProperties
 * @version 2019-02-03
 */
class GitHubConfigurationGitHubDocumentCrawlProperties {
    /**
     * Constructs a new <code>GitHubConfigurationGitHubDocumentCrawlProperties</code>.
     * @alias module:model/GitHubConfigurationGitHubDocumentCrawlProperties
     * @implements module:model/GitHubDocumentCrawlProperties
     */
    constructor() { 
        GitHubDocumentCrawlProperties.initialize(this);
        GitHubConfigurationGitHubDocumentCrawlProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GitHubConfigurationGitHubDocumentCrawlProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GitHubConfigurationGitHubDocumentCrawlProperties} obj Optional instance to populate.
     * @return {module:model/GitHubConfigurationGitHubDocumentCrawlProperties} The populated <code>GitHubConfigurationGitHubDocumentCrawlProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GitHubConfigurationGitHubDocumentCrawlProperties();
            GitHubDocumentCrawlProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('CrawlRepositoryDocuments')) {
                obj['CrawlRepositoryDocuments'] = ApiClient.convertToType(data['CrawlRepositoryDocuments'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlIssue')) {
                obj['CrawlIssue'] = ApiClient.convertToType(data['CrawlIssue'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlIssueComment')) {
                obj['CrawlIssueComment'] = ApiClient.convertToType(data['CrawlIssueComment'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlIssueCommentAttachment')) {
                obj['CrawlIssueCommentAttachment'] = ApiClient.convertToType(data['CrawlIssueCommentAttachment'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlPullRequest')) {
                obj['CrawlPullRequest'] = ApiClient.convertToType(data['CrawlPullRequest'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlPullRequestComment')) {
                obj['CrawlPullRequestComment'] = ApiClient.convertToType(data['CrawlPullRequestComment'], 'Boolean');
            }
            if (data.hasOwnProperty('CrawlPullRequestCommentAttachment')) {
                obj['CrawlPullRequestCommentAttachment'] = ApiClient.convertToType(data['CrawlPullRequestCommentAttachment'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GitHubConfigurationGitHubDocumentCrawlProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GitHubConfigurationGitHubDocumentCrawlProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CrawlRepositoryDocuments`
        if (data['CrawlRepositoryDocuments']) { // data not null
          Boolean.validateJSON(data['CrawlRepositoryDocuments']);
        }
        // validate the optional field `CrawlIssue`
        if (data['CrawlIssue']) { // data not null
          Boolean.validateJSON(data['CrawlIssue']);
        }
        // validate the optional field `CrawlIssueComment`
        if (data['CrawlIssueComment']) { // data not null
          Boolean.validateJSON(data['CrawlIssueComment']);
        }
        // validate the optional field `CrawlIssueCommentAttachment`
        if (data['CrawlIssueCommentAttachment']) { // data not null
          Boolean.validateJSON(data['CrawlIssueCommentAttachment']);
        }
        // validate the optional field `CrawlPullRequest`
        if (data['CrawlPullRequest']) { // data not null
          Boolean.validateJSON(data['CrawlPullRequest']);
        }
        // validate the optional field `CrawlPullRequestComment`
        if (data['CrawlPullRequestComment']) { // data not null
          Boolean.validateJSON(data['CrawlPullRequestComment']);
        }
        // validate the optional field `CrawlPullRequestCommentAttachment`
        if (data['CrawlPullRequestCommentAttachment']) { // data not null
          Boolean.validateJSON(data['CrawlPullRequestCommentAttachment']);
        }

        return true;
    }


}



/**
 * @member {Boolean} CrawlRepositoryDocuments
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlRepositoryDocuments'] = undefined;

/**
 * @member {Boolean} CrawlIssue
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlIssue'] = undefined;

/**
 * @member {Boolean} CrawlIssueComment
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlIssueComment'] = undefined;

/**
 * @member {Boolean} CrawlIssueCommentAttachment
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlIssueCommentAttachment'] = undefined;

/**
 * @member {Boolean} CrawlPullRequest
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlPullRequest'] = undefined;

/**
 * @member {Boolean} CrawlPullRequestComment
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlPullRequestComment'] = undefined;

/**
 * @member {Boolean} CrawlPullRequestCommentAttachment
 */
GitHubConfigurationGitHubDocumentCrawlProperties.prototype['CrawlPullRequestCommentAttachment'] = undefined;


// Implement GitHubDocumentCrawlProperties interface:
/**
 * @member {Boolean} CrawlRepositoryDocuments
 */
GitHubDocumentCrawlProperties.prototype['CrawlRepositoryDocuments'] = undefined;
/**
 * @member {Boolean} CrawlIssue
 */
GitHubDocumentCrawlProperties.prototype['CrawlIssue'] = undefined;
/**
 * @member {Boolean} CrawlIssueComment
 */
GitHubDocumentCrawlProperties.prototype['CrawlIssueComment'] = undefined;
/**
 * @member {Boolean} CrawlIssueCommentAttachment
 */
GitHubDocumentCrawlProperties.prototype['CrawlIssueCommentAttachment'] = undefined;
/**
 * @member {Boolean} CrawlPullRequest
 */
GitHubDocumentCrawlProperties.prototype['CrawlPullRequest'] = undefined;
/**
 * @member {Boolean} CrawlPullRequestComment
 */
GitHubDocumentCrawlProperties.prototype['CrawlPullRequestComment'] = undefined;
/**
 * @member {Boolean} CrawlPullRequestCommentAttachment
 */
GitHubDocumentCrawlProperties.prototype['CrawlPullRequestCommentAttachment'] = undefined;




export default GitHubConfigurationGitHubDocumentCrawlProperties;

