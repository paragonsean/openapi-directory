/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentAttributeValueCountPairDocumentAttributeValue from './DocumentAttributeValueCountPairDocumentAttributeValue';

/**
 * The DocumentAttributeValueCountPair model module.
 * @module model/DocumentAttributeValueCountPair
 * @version 2019-02-03
 */
class DocumentAttributeValueCountPair {
    /**
     * Constructs a new <code>DocumentAttributeValueCountPair</code>.
     * Provides the count of documents that match a particular attribute when doing a faceted search.
     * @alias module:model/DocumentAttributeValueCountPair
     */
    constructor() { 
        
        DocumentAttributeValueCountPair.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentAttributeValueCountPair</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentAttributeValueCountPair} obj Optional instance to populate.
     * @return {module:model/DocumentAttributeValueCountPair} The populated <code>DocumentAttributeValueCountPair</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentAttributeValueCountPair();

            if (data.hasOwnProperty('DocumentAttributeValue')) {
                obj['DocumentAttributeValue'] = DocumentAttributeValueCountPairDocumentAttributeValue.constructFromObject(data['DocumentAttributeValue']);
            }
            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('FacetResults')) {
                obj['FacetResults'] = ApiClient.convertToType(data['FacetResults'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentAttributeValueCountPair</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentAttributeValueCountPair</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DocumentAttributeValue`
        if (data['DocumentAttributeValue']) { // data not null
          DocumentAttributeValueCountPairDocumentAttributeValue.validateJSON(data['DocumentAttributeValue']);
        }
        // validate the optional field `Count`
        if (data['Count']) { // data not null
          Number.validateJSON(data['Count']);
        }
        // validate the optional field `FacetResults`
        if (data['FacetResults']) { // data not null
          Array.validateJSON(data['FacetResults']);
        }

        return true;
    }


}



/**
 * @member {module:model/DocumentAttributeValueCountPairDocumentAttributeValue} DocumentAttributeValue
 */
DocumentAttributeValueCountPair.prototype['DocumentAttributeValue'] = undefined;

/**
 * @member {Number} Count
 */
DocumentAttributeValueCountPair.prototype['Count'] = undefined;

/**
 * @member {Array} FacetResults
 */
DocumentAttributeValueCountPair.prototype['FacetResults'] = undefined;






export default DocumentAttributeValueCountPair;

