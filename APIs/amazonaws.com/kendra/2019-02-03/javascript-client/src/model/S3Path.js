/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3Path model module.
 * @module model/S3Path
 * @version 2019-02-03
 */
class S3Path {
    /**
     * Constructs a new <code>S3Path</code>.
     * Information required to find a specific file in an Amazon S3 bucket.
     * @alias module:model/S3Path
     * @param bucket {String} 
     * @param key {String} 
     */
    constructor(bucket, key) { 
        
        S3Path.initialize(this, bucket, key);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucket, key) { 
        obj['Bucket'] = bucket;
        obj['Key'] = key;
    }

    /**
     * Constructs a <code>S3Path</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3Path} obj Optional instance to populate.
     * @return {module:model/S3Path} The populated <code>S3Path</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3Path();

            if (data.hasOwnProperty('Bucket')) {
                obj['Bucket'] = ApiClient.convertToType(data['Bucket'], 'String');
            }
            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3Path</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3Path</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3Path.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Bucket`
        if (data['Bucket']) { // data not null
          String.validateJSON(data['Bucket']);
        }
        // validate the optional field `Key`
        if (data['Key']) { // data not null
          String.validateJSON(data['Key']);
        }

        return true;
    }


}

S3Path.RequiredProperties = ["Bucket", "Key"];

/**
 * @member {String} Bucket
 */
S3Path.prototype['Bucket'] = undefined;

/**
 * @member {String} Key
 */
S3Path.prototype['Key'] = undefined;






export default S3Path;

