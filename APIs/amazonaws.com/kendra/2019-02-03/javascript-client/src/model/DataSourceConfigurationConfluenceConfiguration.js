/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfluenceAuthenticationType from './ConfluenceAuthenticationType';
import ConfluenceConfiguration from './ConfluenceConfiguration';
import ConfluenceConfigurationAttachmentConfiguration from './ConfluenceConfigurationAttachmentConfiguration';
import ConfluenceConfigurationBlogConfiguration from './ConfluenceConfigurationBlogConfiguration';
import ConfluenceConfigurationPageConfiguration from './ConfluenceConfigurationPageConfiguration';
import ConfluenceConfigurationProxyConfiguration from './ConfluenceConfigurationProxyConfiguration';
import ConfluenceConfigurationSpaceConfiguration from './ConfluenceConfigurationSpaceConfiguration';
import ConfluenceConfigurationVpcConfiguration from './ConfluenceConfigurationVpcConfiguration';
import ConfluenceVersion from './ConfluenceVersion';

/**
 * The DataSourceConfigurationConfluenceConfiguration model module.
 * @module model/DataSourceConfigurationConfluenceConfiguration
 * @version 2019-02-03
 */
class DataSourceConfigurationConfluenceConfiguration {
    /**
     * Constructs a new <code>DataSourceConfigurationConfluenceConfiguration</code>.
     * @alias module:model/DataSourceConfigurationConfluenceConfiguration
     * @implements module:model/ConfluenceConfiguration
     * @param serverUrl {String} 
     * @param secretArn {String} 
     * @param version {module:model/ConfluenceVersion} 
     */
    constructor(serverUrl, secretArn, version) { 
        ConfluenceConfiguration.initialize(this, serverUrl, secretArn, version);
        DataSourceConfigurationConfluenceConfiguration.initialize(this, serverUrl, secretArn, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serverUrl, secretArn, version) { 
        obj['ServerUrl'] = serverUrl;
        obj['SecretArn'] = secretArn;
        obj['Version'] = version;
    }

    /**
     * Constructs a <code>DataSourceConfigurationConfluenceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataSourceConfigurationConfluenceConfiguration} obj Optional instance to populate.
     * @return {module:model/DataSourceConfigurationConfluenceConfiguration} The populated <code>DataSourceConfigurationConfluenceConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataSourceConfigurationConfluenceConfiguration();
            ConfluenceConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('ServerUrl')) {
                obj['ServerUrl'] = ApiClient.convertToType(data['ServerUrl'], 'String');
            }
            if (data.hasOwnProperty('SecretArn')) {
                obj['SecretArn'] = ApiClient.convertToType(data['SecretArn'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], ConfluenceVersion);
            }
            if (data.hasOwnProperty('SpaceConfiguration')) {
                obj['SpaceConfiguration'] = ConfluenceConfigurationSpaceConfiguration.constructFromObject(data['SpaceConfiguration']);
            }
            if (data.hasOwnProperty('PageConfiguration')) {
                obj['PageConfiguration'] = ConfluenceConfigurationPageConfiguration.constructFromObject(data['PageConfiguration']);
            }
            if (data.hasOwnProperty('BlogConfiguration')) {
                obj['BlogConfiguration'] = ConfluenceConfigurationBlogConfiguration.constructFromObject(data['BlogConfiguration']);
            }
            if (data.hasOwnProperty('AttachmentConfiguration')) {
                obj['AttachmentConfiguration'] = ConfluenceConfigurationAttachmentConfiguration.constructFromObject(data['AttachmentConfiguration']);
            }
            if (data.hasOwnProperty('VpcConfiguration')) {
                obj['VpcConfiguration'] = ConfluenceConfigurationVpcConfiguration.constructFromObject(data['VpcConfiguration']);
            }
            if (data.hasOwnProperty('InclusionPatterns')) {
                obj['InclusionPatterns'] = ApiClient.convertToType(data['InclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('ExclusionPatterns')) {
                obj['ExclusionPatterns'] = ApiClient.convertToType(data['ExclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('ProxyConfiguration')) {
                obj['ProxyConfiguration'] = ConfluenceConfigurationProxyConfiguration.constructFromObject(data['ProxyConfiguration']);
            }
            if (data.hasOwnProperty('AuthenticationType')) {
                obj['AuthenticationType'] = ApiClient.convertToType(data['AuthenticationType'], ConfluenceAuthenticationType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataSourceConfigurationConfluenceConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataSourceConfigurationConfluenceConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataSourceConfigurationConfluenceConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ServerUrl`
        if (data['ServerUrl']) { // data not null
          String.validateJSON(data['ServerUrl']);
        }
        // validate the optional field `SecretArn`
        if (data['SecretArn']) { // data not null
          String.validateJSON(data['SecretArn']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          ConfluenceVersion.validateJSON(data['Version']);
        }
        // validate the optional field `SpaceConfiguration`
        if (data['SpaceConfiguration']) { // data not null
          ConfluenceConfigurationSpaceConfiguration.validateJSON(data['SpaceConfiguration']);
        }
        // validate the optional field `PageConfiguration`
        if (data['PageConfiguration']) { // data not null
          ConfluenceConfigurationPageConfiguration.validateJSON(data['PageConfiguration']);
        }
        // validate the optional field `BlogConfiguration`
        if (data['BlogConfiguration']) { // data not null
          ConfluenceConfigurationBlogConfiguration.validateJSON(data['BlogConfiguration']);
        }
        // validate the optional field `AttachmentConfiguration`
        if (data['AttachmentConfiguration']) { // data not null
          ConfluenceConfigurationAttachmentConfiguration.validateJSON(data['AttachmentConfiguration']);
        }
        // validate the optional field `VpcConfiguration`
        if (data['VpcConfiguration']) { // data not null
          ConfluenceConfigurationVpcConfiguration.validateJSON(data['VpcConfiguration']);
        }
        // validate the optional field `InclusionPatterns`
        if (data['InclusionPatterns']) { // data not null
          Array.validateJSON(data['InclusionPatterns']);
        }
        // validate the optional field `ExclusionPatterns`
        if (data['ExclusionPatterns']) { // data not null
          Array.validateJSON(data['ExclusionPatterns']);
        }
        // validate the optional field `ProxyConfiguration`
        if (data['ProxyConfiguration']) { // data not null
          ConfluenceConfigurationProxyConfiguration.validateJSON(data['ProxyConfiguration']);
        }
        // validate the optional field `AuthenticationType`
        if (data['AuthenticationType']) { // data not null
          ConfluenceAuthenticationType.validateJSON(data['AuthenticationType']);
        }

        return true;
    }


}

DataSourceConfigurationConfluenceConfiguration.RequiredProperties = ["ServerUrl", "SecretArn", "Version"];

/**
 * @member {String} ServerUrl
 */
DataSourceConfigurationConfluenceConfiguration.prototype['ServerUrl'] = undefined;

/**
 * @member {String} SecretArn
 */
DataSourceConfigurationConfluenceConfiguration.prototype['SecretArn'] = undefined;

/**
 * @member {module:model/ConfluenceVersion} Version
 */
DataSourceConfigurationConfluenceConfiguration.prototype['Version'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationSpaceConfiguration} SpaceConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['SpaceConfiguration'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationPageConfiguration} PageConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['PageConfiguration'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationBlogConfiguration} BlogConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['BlogConfiguration'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationAttachmentConfiguration} AttachmentConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['AttachmentConfiguration'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationVpcConfiguration} VpcConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['VpcConfiguration'] = undefined;

/**
 * @member {Array} InclusionPatterns
 */
DataSourceConfigurationConfluenceConfiguration.prototype['InclusionPatterns'] = undefined;

/**
 * @member {Array} ExclusionPatterns
 */
DataSourceConfigurationConfluenceConfiguration.prototype['ExclusionPatterns'] = undefined;

/**
 * @member {module:model/ConfluenceConfigurationProxyConfiguration} ProxyConfiguration
 */
DataSourceConfigurationConfluenceConfiguration.prototype['ProxyConfiguration'] = undefined;

/**
 * @member {module:model/ConfluenceAuthenticationType} AuthenticationType
 */
DataSourceConfigurationConfluenceConfiguration.prototype['AuthenticationType'] = undefined;


// Implement ConfluenceConfiguration interface:
/**
 * @member {String} ServerUrl
 */
ConfluenceConfiguration.prototype['ServerUrl'] = undefined;
/**
 * @member {String} SecretArn
 */
ConfluenceConfiguration.prototype['SecretArn'] = undefined;
/**
 * @member {module:model/ConfluenceVersion} Version
 */
ConfluenceConfiguration.prototype['Version'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationSpaceConfiguration} SpaceConfiguration
 */
ConfluenceConfiguration.prototype['SpaceConfiguration'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationPageConfiguration} PageConfiguration
 */
ConfluenceConfiguration.prototype['PageConfiguration'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationBlogConfiguration} BlogConfiguration
 */
ConfluenceConfiguration.prototype['BlogConfiguration'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationAttachmentConfiguration} AttachmentConfiguration
 */
ConfluenceConfiguration.prototype['AttachmentConfiguration'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationVpcConfiguration} VpcConfiguration
 */
ConfluenceConfiguration.prototype['VpcConfiguration'] = undefined;
/**
 * @member {Array} InclusionPatterns
 */
ConfluenceConfiguration.prototype['InclusionPatterns'] = undefined;
/**
 * @member {Array} ExclusionPatterns
 */
ConfluenceConfiguration.prototype['ExclusionPatterns'] = undefined;
/**
 * @member {module:model/ConfluenceConfigurationProxyConfiguration} ProxyConfiguration
 */
ConfluenceConfiguration.prototype['ProxyConfiguration'] = undefined;
/**
 * @member {module:model/ConfluenceAuthenticationType} AuthenticationType
 */
ConfluenceConfiguration.prototype['AuthenticationType'] = undefined;




export default DataSourceConfigurationConfluenceConfiguration;

