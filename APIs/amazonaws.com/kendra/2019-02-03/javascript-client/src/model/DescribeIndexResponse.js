/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeIndexResponseCapacityUnits from './DescribeIndexResponseCapacityUnits';
import DescribeIndexResponseIndexStatistics from './DescribeIndexResponseIndexStatistics';
import DescribeIndexResponseServerSideEncryptionConfiguration from './DescribeIndexResponseServerSideEncryptionConfiguration';
import DescribeIndexResponseUserGroupResolutionConfiguration from './DescribeIndexResponseUserGroupResolutionConfiguration';
import IndexEdition from './IndexEdition';
import IndexStatus from './IndexStatus';
import UserContextPolicy from './UserContextPolicy';

/**
 * The DescribeIndexResponse model module.
 * @module model/DescribeIndexResponse
 * @version 2019-02-03
 */
class DescribeIndexResponse {
    /**
     * Constructs a new <code>DescribeIndexResponse</code>.
     * @alias module:model/DescribeIndexResponse
     */
    constructor() { 
        
        DescribeIndexResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeIndexResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeIndexResponse} obj Optional instance to populate.
     * @return {module:model/DescribeIndexResponse} The populated <code>DescribeIndexResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeIndexResponse();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Edition')) {
                obj['Edition'] = ApiClient.convertToType(data['Edition'], IndexEdition);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('ServerSideEncryptionConfiguration')) {
                obj['ServerSideEncryptionConfiguration'] = DescribeIndexResponseServerSideEncryptionConfiguration.constructFromObject(data['ServerSideEncryptionConfiguration']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], IndexStatus);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('DocumentMetadataConfigurations')) {
                obj['DocumentMetadataConfigurations'] = ApiClient.convertToType(data['DocumentMetadataConfigurations'], Array);
            }
            if (data.hasOwnProperty('IndexStatistics')) {
                obj['IndexStatistics'] = DescribeIndexResponseIndexStatistics.constructFromObject(data['IndexStatistics']);
            }
            if (data.hasOwnProperty('ErrorMessage')) {
                obj['ErrorMessage'] = ApiClient.convertToType(data['ErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('CapacityUnits')) {
                obj['CapacityUnits'] = DescribeIndexResponseCapacityUnits.constructFromObject(data['CapacityUnits']);
            }
            if (data.hasOwnProperty('UserTokenConfigurations')) {
                obj['UserTokenConfigurations'] = ApiClient.convertToType(data['UserTokenConfigurations'], Array);
            }
            if (data.hasOwnProperty('UserContextPolicy')) {
                obj['UserContextPolicy'] = ApiClient.convertToType(data['UserContextPolicy'], UserContextPolicy);
            }
            if (data.hasOwnProperty('UserGroupResolutionConfiguration')) {
                obj['UserGroupResolutionConfiguration'] = DescribeIndexResponseUserGroupResolutionConfiguration.constructFromObject(data['UserGroupResolutionConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeIndexResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeIndexResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Edition`
        if (data['Edition']) { // data not null
          IndexEdition.validateJSON(data['Edition']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `ServerSideEncryptionConfiguration`
        if (data['ServerSideEncryptionConfiguration']) { // data not null
          DescribeIndexResponseServerSideEncryptionConfiguration.validateJSON(data['ServerSideEncryptionConfiguration']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          IndexStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `UpdatedAt`
        if (data['UpdatedAt']) { // data not null
          Date.validateJSON(data['UpdatedAt']);
        }
        // validate the optional field `DocumentMetadataConfigurations`
        if (data['DocumentMetadataConfigurations']) { // data not null
          Array.validateJSON(data['DocumentMetadataConfigurations']);
        }
        // validate the optional field `IndexStatistics`
        if (data['IndexStatistics']) { // data not null
          DescribeIndexResponseIndexStatistics.validateJSON(data['IndexStatistics']);
        }
        // validate the optional field `ErrorMessage`
        if (data['ErrorMessage']) { // data not null
          String.validateJSON(data['ErrorMessage']);
        }
        // validate the optional field `CapacityUnits`
        if (data['CapacityUnits']) { // data not null
          DescribeIndexResponseCapacityUnits.validateJSON(data['CapacityUnits']);
        }
        // validate the optional field `UserTokenConfigurations`
        if (data['UserTokenConfigurations']) { // data not null
          Array.validateJSON(data['UserTokenConfigurations']);
        }
        // validate the optional field `UserContextPolicy`
        if (data['UserContextPolicy']) { // data not null
          UserContextPolicy.validateJSON(data['UserContextPolicy']);
        }
        // validate the optional field `UserGroupResolutionConfiguration`
        if (data['UserGroupResolutionConfiguration']) { // data not null
          DescribeIndexResponseUserGroupResolutionConfiguration.validateJSON(data['UserGroupResolutionConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
DescribeIndexResponse.prototype['Name'] = undefined;

/**
 * @member {String} Id
 */
DescribeIndexResponse.prototype['Id'] = undefined;

/**
 * @member {module:model/IndexEdition} Edition
 */
DescribeIndexResponse.prototype['Edition'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeIndexResponse.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/DescribeIndexResponseServerSideEncryptionConfiguration} ServerSideEncryptionConfiguration
 */
DescribeIndexResponse.prototype['ServerSideEncryptionConfiguration'] = undefined;

/**
 * @member {module:model/IndexStatus} Status
 */
DescribeIndexResponse.prototype['Status'] = undefined;

/**
 * @member {String} Description
 */
DescribeIndexResponse.prototype['Description'] = undefined;

/**
 * @member {Date} CreatedAt
 */
DescribeIndexResponse.prototype['CreatedAt'] = undefined;

/**
 * @member {Date} UpdatedAt
 */
DescribeIndexResponse.prototype['UpdatedAt'] = undefined;

/**
 * @member {Array} DocumentMetadataConfigurations
 */
DescribeIndexResponse.prototype['DocumentMetadataConfigurations'] = undefined;

/**
 * @member {module:model/DescribeIndexResponseIndexStatistics} IndexStatistics
 */
DescribeIndexResponse.prototype['IndexStatistics'] = undefined;

/**
 * @member {String} ErrorMessage
 */
DescribeIndexResponse.prototype['ErrorMessage'] = undefined;

/**
 * @member {module:model/DescribeIndexResponseCapacityUnits} CapacityUnits
 */
DescribeIndexResponse.prototype['CapacityUnits'] = undefined;

/**
 * @member {Array} UserTokenConfigurations
 */
DescribeIndexResponse.prototype['UserTokenConfigurations'] = undefined;

/**
 * @member {module:model/UserContextPolicy} UserContextPolicy
 */
DescribeIndexResponse.prototype['UserContextPolicy'] = undefined;

/**
 * @member {module:model/DescribeIndexResponseUserGroupResolutionConfiguration} UserGroupResolutionConfiguration
 */
DescribeIndexResponse.prototype['UserGroupResolutionConfiguration'] = undefined;






export default DescribeIndexResponse;

