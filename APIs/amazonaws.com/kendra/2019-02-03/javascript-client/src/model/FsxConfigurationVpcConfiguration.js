/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataSourceVpcConfiguration from './DataSourceVpcConfiguration';

/**
 * The FsxConfigurationVpcConfiguration model module.
 * @module model/FsxConfigurationVpcConfiguration
 * @version 2019-02-03
 */
class FsxConfigurationVpcConfiguration {
    /**
     * Constructs a new <code>FsxConfigurationVpcConfiguration</code>.
     * @alias module:model/FsxConfigurationVpcConfiguration
     * @implements module:model/DataSourceVpcConfiguration
     * @param subnetIds {Array} 
     * @param securityGroupIds {Array} 
     */
    constructor(subnetIds, securityGroupIds) { 
        DataSourceVpcConfiguration.initialize(this, subnetIds, securityGroupIds);
        FsxConfigurationVpcConfiguration.initialize(this, subnetIds, securityGroupIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subnetIds, securityGroupIds) { 
        obj['SubnetIds'] = subnetIds;
        obj['SecurityGroupIds'] = securityGroupIds;
    }

    /**
     * Constructs a <code>FsxConfigurationVpcConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FsxConfigurationVpcConfiguration} obj Optional instance to populate.
     * @return {module:model/FsxConfigurationVpcConfiguration} The populated <code>FsxConfigurationVpcConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FsxConfigurationVpcConfiguration();
            DataSourceVpcConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('SubnetIds')) {
                obj['SubnetIds'] = ApiClient.convertToType(data['SubnetIds'], Array);
            }
            if (data.hasOwnProperty('SecurityGroupIds')) {
                obj['SecurityGroupIds'] = ApiClient.convertToType(data['SecurityGroupIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FsxConfigurationVpcConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FsxConfigurationVpcConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FsxConfigurationVpcConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SubnetIds`
        if (data['SubnetIds']) { // data not null
          Array.validateJSON(data['SubnetIds']);
        }
        // validate the optional field `SecurityGroupIds`
        if (data['SecurityGroupIds']) { // data not null
          Array.validateJSON(data['SecurityGroupIds']);
        }

        return true;
    }


}

FsxConfigurationVpcConfiguration.RequiredProperties = ["SubnetIds", "SecurityGroupIds"];

/**
 * @member {Array} SubnetIds
 */
FsxConfigurationVpcConfiguration.prototype['SubnetIds'] = undefined;

/**
 * @member {Array} SecurityGroupIds
 */
FsxConfigurationVpcConfiguration.prototype['SecurityGroupIds'] = undefined;


// Implement DataSourceVpcConfiguration interface:
/**
 * @member {Array} SubnetIds
 */
DataSourceVpcConfiguration.prototype['SubnetIds'] = undefined;
/**
 * @member {Array} SecurityGroupIds
 */
DataSourceVpcConfiguration.prototype['SecurityGroupIds'] = undefined;




export default FsxConfigurationVpcConfiguration;

