/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuerySuggestionsBlockListStatus from './QuerySuggestionsBlockListStatus';

/**
 * The QuerySuggestionsBlockListSummary model module.
 * @module model/QuerySuggestionsBlockListSummary
 * @version 2019-02-03
 */
class QuerySuggestionsBlockListSummary {
    /**
     * Constructs a new <code>QuerySuggestionsBlockListSummary</code>.
     * &lt;p&gt;Summary information on a query suggestions block list.&lt;/p&gt; &lt;p&gt;This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.&lt;/p&gt; &lt;p&gt;For information on the current quota limits for block lists, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kendra/latest/dg/quotas.html\&quot;&gt;Quotas for Amazon Kendra&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/QuerySuggestionsBlockListSummary
     */
    constructor() { 
        
        QuerySuggestionsBlockListSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuerySuggestionsBlockListSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuerySuggestionsBlockListSummary} obj Optional instance to populate.
     * @return {module:model/QuerySuggestionsBlockListSummary} The populated <code>QuerySuggestionsBlockListSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuerySuggestionsBlockListSummary();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], QuerySuggestionsBlockListStatus);
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('ItemCount')) {
                obj['ItemCount'] = ApiClient.convertToType(data['ItemCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuerySuggestionsBlockListSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuerySuggestionsBlockListSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          QuerySuggestionsBlockListStatus.validateJSON(data['Status']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `UpdatedAt`
        if (data['UpdatedAt']) { // data not null
          Date.validateJSON(data['UpdatedAt']);
        }
        // validate the optional field `ItemCount`
        if (data['ItemCount']) { // data not null
          Number.validateJSON(data['ItemCount']);
        }

        return true;
    }


}



/**
 * @member {String} Id
 */
QuerySuggestionsBlockListSummary.prototype['Id'] = undefined;

/**
 * @member {String} Name
 */
QuerySuggestionsBlockListSummary.prototype['Name'] = undefined;

/**
 * @member {module:model/QuerySuggestionsBlockListStatus} Status
 */
QuerySuggestionsBlockListSummary.prototype['Status'] = undefined;

/**
 * @member {Date} CreatedAt
 */
QuerySuggestionsBlockListSummary.prototype['CreatedAt'] = undefined;

/**
 * @member {Date} UpdatedAt
 */
QuerySuggestionsBlockListSummary.prototype['UpdatedAt'] = undefined;

/**
 * @member {Number} ItemCount
 */
QuerySuggestionsBlockListSummary.prototype['ItemCount'] = undefined;






export default QuerySuggestionsBlockListSummary;

