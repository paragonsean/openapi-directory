/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IndexEdition from './IndexEdition';
import IndexStatus from './IndexStatus';

/**
 * The IndexConfigurationSummary model module.
 * @module model/IndexConfigurationSummary
 * @version 2019-02-03
 */
class IndexConfigurationSummary {
    /**
     * Constructs a new <code>IndexConfigurationSummary</code>.
     * Summary information on the configuration of an index.
     * @alias module:model/IndexConfigurationSummary
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     * @param status {module:model/IndexStatus} 
     */
    constructor(createdAt, updatedAt, status) { 
        
        IndexConfigurationSummary.initialize(this, createdAt, updatedAt, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, updatedAt, status) { 
        obj['CreatedAt'] = createdAt;
        obj['UpdatedAt'] = updatedAt;
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>IndexConfigurationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IndexConfigurationSummary} obj Optional instance to populate.
     * @return {module:model/IndexConfigurationSummary} The populated <code>IndexConfigurationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IndexConfigurationSummary();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Edition')) {
                obj['Edition'] = ApiClient.convertToType(data['Edition'], IndexEdition);
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], IndexStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IndexConfigurationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IndexConfigurationSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IndexConfigurationSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Edition`
        if (data['Edition']) { // data not null
          IndexEdition.validateJSON(data['Edition']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `UpdatedAt`
        if (data['UpdatedAt']) { // data not null
          Date.validateJSON(data['UpdatedAt']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          IndexStatus.validateJSON(data['Status']);
        }

        return true;
    }


}

IndexConfigurationSummary.RequiredProperties = ["CreatedAt", "UpdatedAt", "Status"];

/**
 * @member {String} Name
 */
IndexConfigurationSummary.prototype['Name'] = undefined;

/**
 * @member {String} Id
 */
IndexConfigurationSummary.prototype['Id'] = undefined;

/**
 * @member {module:model/IndexEdition} Edition
 */
IndexConfigurationSummary.prototype['Edition'] = undefined;

/**
 * @member {Date} CreatedAt
 */
IndexConfigurationSummary.prototype['CreatedAt'] = undefined;

/**
 * @member {Date} UpdatedAt
 */
IndexConfigurationSummary.prototype['UpdatedAt'] = undefined;

/**
 * @member {module:model/IndexStatus} Status
 */
IndexConfigurationSummary.prototype['Status'] = undefined;






export default IndexConfigurationSummary;

