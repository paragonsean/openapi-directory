/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryResultFormat from './QueryResultFormat';
import QueryResultItemDocumentExcerpt from './QueryResultItemDocumentExcerpt';
import QueryResultItemDocumentTitle from './QueryResultItemDocumentTitle';
import QueryResultItemScoreAttributes from './QueryResultItemScoreAttributes';
import QueryResultItemTableExcerpt from './QueryResultItemTableExcerpt';
import QueryResultType from './QueryResultType';

/**
 * The QueryResultItem model module.
 * @module model/QueryResultItem
 * @version 2019-02-03
 */
class QueryResultItem {
    /**
     * Constructs a new <code>QueryResultItem</code>.
     * &lt;p&gt;A single query result.&lt;/p&gt; &lt;p&gt;A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.&lt;/p&gt;
     * @alias module:model/QueryResultItem
     */
    constructor() { 
        
        QueryResultItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResultItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResultItem} obj Optional instance to populate.
     * @return {module:model/QueryResultItem} The populated <code>QueryResultItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResultItem();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], QueryResultType);
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], QueryResultFormat);
            }
            if (data.hasOwnProperty('AdditionalAttributes')) {
                obj['AdditionalAttributes'] = ApiClient.convertToType(data['AdditionalAttributes'], Array);
            }
            if (data.hasOwnProperty('DocumentId')) {
                obj['DocumentId'] = ApiClient.convertToType(data['DocumentId'], 'String');
            }
            if (data.hasOwnProperty('DocumentTitle')) {
                obj['DocumentTitle'] = QueryResultItemDocumentTitle.constructFromObject(data['DocumentTitle']);
            }
            if (data.hasOwnProperty('DocumentExcerpt')) {
                obj['DocumentExcerpt'] = QueryResultItemDocumentExcerpt.constructFromObject(data['DocumentExcerpt']);
            }
            if (data.hasOwnProperty('DocumentURI')) {
                obj['DocumentURI'] = ApiClient.convertToType(data['DocumentURI'], 'String');
            }
            if (data.hasOwnProperty('DocumentAttributes')) {
                obj['DocumentAttributes'] = ApiClient.convertToType(data['DocumentAttributes'], Array);
            }
            if (data.hasOwnProperty('ScoreAttributes')) {
                obj['ScoreAttributes'] = QueryResultItemScoreAttributes.constructFromObject(data['ScoreAttributes']);
            }
            if (data.hasOwnProperty('FeedbackToken')) {
                obj['FeedbackToken'] = ApiClient.convertToType(data['FeedbackToken'], 'String');
            }
            if (data.hasOwnProperty('TableExcerpt')) {
                obj['TableExcerpt'] = QueryResultItemTableExcerpt.constructFromObject(data['TableExcerpt']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResultItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResultItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          QueryResultType.validateJSON(data['Type']);
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          QueryResultFormat.validateJSON(data['Format']);
        }
        // validate the optional field `AdditionalAttributes`
        if (data['AdditionalAttributes']) { // data not null
          Array.validateJSON(data['AdditionalAttributes']);
        }
        // validate the optional field `DocumentId`
        if (data['DocumentId']) { // data not null
          String.validateJSON(data['DocumentId']);
        }
        // validate the optional field `DocumentTitle`
        if (data['DocumentTitle']) { // data not null
          QueryResultItemDocumentTitle.validateJSON(data['DocumentTitle']);
        }
        // validate the optional field `DocumentExcerpt`
        if (data['DocumentExcerpt']) { // data not null
          QueryResultItemDocumentExcerpt.validateJSON(data['DocumentExcerpt']);
        }
        // validate the optional field `DocumentURI`
        if (data['DocumentURI']) { // data not null
          String.validateJSON(data['DocumentURI']);
        }
        // validate the optional field `DocumentAttributes`
        if (data['DocumentAttributes']) { // data not null
          Array.validateJSON(data['DocumentAttributes']);
        }
        // validate the optional field `ScoreAttributes`
        if (data['ScoreAttributes']) { // data not null
          QueryResultItemScoreAttributes.validateJSON(data['ScoreAttributes']);
        }
        // validate the optional field `FeedbackToken`
        if (data['FeedbackToken']) { // data not null
          String.validateJSON(data['FeedbackToken']);
        }
        // validate the optional field `TableExcerpt`
        if (data['TableExcerpt']) { // data not null
          QueryResultItemTableExcerpt.validateJSON(data['TableExcerpt']);
        }

        return true;
    }


}



/**
 * @member {String} Id
 */
QueryResultItem.prototype['Id'] = undefined;

/**
 * @member {module:model/QueryResultType} Type
 */
QueryResultItem.prototype['Type'] = undefined;

/**
 * @member {module:model/QueryResultFormat} Format
 */
QueryResultItem.prototype['Format'] = undefined;

/**
 * @member {Array} AdditionalAttributes
 */
QueryResultItem.prototype['AdditionalAttributes'] = undefined;

/**
 * @member {String} DocumentId
 */
QueryResultItem.prototype['DocumentId'] = undefined;

/**
 * @member {module:model/QueryResultItemDocumentTitle} DocumentTitle
 */
QueryResultItem.prototype['DocumentTitle'] = undefined;

/**
 * @member {module:model/QueryResultItemDocumentExcerpt} DocumentExcerpt
 */
QueryResultItem.prototype['DocumentExcerpt'] = undefined;

/**
 * @member {String} DocumentURI
 */
QueryResultItem.prototype['DocumentURI'] = undefined;

/**
 * @member {Array} DocumentAttributes
 */
QueryResultItem.prototype['DocumentAttributes'] = undefined;

/**
 * @member {module:model/QueryResultItemScoreAttributes} ScoreAttributes
 */
QueryResultItem.prototype['ScoreAttributes'] = undefined;

/**
 * @member {String} FeedbackToken
 */
QueryResultItem.prototype['FeedbackToken'] = undefined;

/**
 * @member {module:model/QueryResultItemTableExcerpt} TableExcerpt
 */
QueryResultItem.prototype['TableExcerpt'] = undefined;






export default QueryResultItem;

