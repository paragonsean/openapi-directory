/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JiraConfigurationVpcConfiguration from './JiraConfigurationVpcConfiguration';

/**
 * The JiraConfiguration model module.
 * @module model/JiraConfiguration
 * @version 2019-02-03
 */
class JiraConfiguration {
    /**
     * Constructs a new <code>JiraConfiguration</code>.
     * Provides the configuration information to connect to Jira as your data source.
     * @alias module:model/JiraConfiguration
     * @param jiraAccountUrl {String} 
     * @param secretArn {String} 
     */
    constructor(jiraAccountUrl, secretArn) { 
        
        JiraConfiguration.initialize(this, jiraAccountUrl, secretArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jiraAccountUrl, secretArn) { 
        obj['JiraAccountUrl'] = jiraAccountUrl;
        obj['SecretArn'] = secretArn;
    }

    /**
     * Constructs a <code>JiraConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JiraConfiguration} obj Optional instance to populate.
     * @return {module:model/JiraConfiguration} The populated <code>JiraConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JiraConfiguration();

            if (data.hasOwnProperty('JiraAccountUrl')) {
                obj['JiraAccountUrl'] = ApiClient.convertToType(data['JiraAccountUrl'], 'String');
            }
            if (data.hasOwnProperty('SecretArn')) {
                obj['SecretArn'] = ApiClient.convertToType(data['SecretArn'], 'String');
            }
            if (data.hasOwnProperty('UseChangeLog')) {
                obj['UseChangeLog'] = ApiClient.convertToType(data['UseChangeLog'], 'Boolean');
            }
            if (data.hasOwnProperty('Project')) {
                obj['Project'] = ApiClient.convertToType(data['Project'], Array);
            }
            if (data.hasOwnProperty('IssueType')) {
                obj['IssueType'] = ApiClient.convertToType(data['IssueType'], Array);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], Array);
            }
            if (data.hasOwnProperty('IssueSubEntityFilter')) {
                obj['IssueSubEntityFilter'] = ApiClient.convertToType(data['IssueSubEntityFilter'], Array);
            }
            if (data.hasOwnProperty('AttachmentFieldMappings')) {
                obj['AttachmentFieldMappings'] = ApiClient.convertToType(data['AttachmentFieldMappings'], Array);
            }
            if (data.hasOwnProperty('CommentFieldMappings')) {
                obj['CommentFieldMappings'] = ApiClient.convertToType(data['CommentFieldMappings'], Array);
            }
            if (data.hasOwnProperty('IssueFieldMappings')) {
                obj['IssueFieldMappings'] = ApiClient.convertToType(data['IssueFieldMappings'], Array);
            }
            if (data.hasOwnProperty('ProjectFieldMappings')) {
                obj['ProjectFieldMappings'] = ApiClient.convertToType(data['ProjectFieldMappings'], Array);
            }
            if (data.hasOwnProperty('WorkLogFieldMappings')) {
                obj['WorkLogFieldMappings'] = ApiClient.convertToType(data['WorkLogFieldMappings'], Array);
            }
            if (data.hasOwnProperty('InclusionPatterns')) {
                obj['InclusionPatterns'] = ApiClient.convertToType(data['InclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('ExclusionPatterns')) {
                obj['ExclusionPatterns'] = ApiClient.convertToType(data['ExclusionPatterns'], Array);
            }
            if (data.hasOwnProperty('VpcConfiguration')) {
                obj['VpcConfiguration'] = JiraConfigurationVpcConfiguration.constructFromObject(data['VpcConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JiraConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JiraConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JiraConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `JiraAccountUrl`
        if (data['JiraAccountUrl']) { // data not null
          String.validateJSON(data['JiraAccountUrl']);
        }
        // validate the optional field `SecretArn`
        if (data['SecretArn']) { // data not null
          String.validateJSON(data['SecretArn']);
        }
        // validate the optional field `UseChangeLog`
        if (data['UseChangeLog']) { // data not null
          Boolean.validateJSON(data['UseChangeLog']);
        }
        // validate the optional field `Project`
        if (data['Project']) { // data not null
          Array.validateJSON(data['Project']);
        }
        // validate the optional field `IssueType`
        if (data['IssueType']) { // data not null
          Array.validateJSON(data['IssueType']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          Array.validateJSON(data['Status']);
        }
        // validate the optional field `IssueSubEntityFilter`
        if (data['IssueSubEntityFilter']) { // data not null
          Array.validateJSON(data['IssueSubEntityFilter']);
        }
        // validate the optional field `AttachmentFieldMappings`
        if (data['AttachmentFieldMappings']) { // data not null
          Array.validateJSON(data['AttachmentFieldMappings']);
        }
        // validate the optional field `CommentFieldMappings`
        if (data['CommentFieldMappings']) { // data not null
          Array.validateJSON(data['CommentFieldMappings']);
        }
        // validate the optional field `IssueFieldMappings`
        if (data['IssueFieldMappings']) { // data not null
          Array.validateJSON(data['IssueFieldMappings']);
        }
        // validate the optional field `ProjectFieldMappings`
        if (data['ProjectFieldMappings']) { // data not null
          Array.validateJSON(data['ProjectFieldMappings']);
        }
        // validate the optional field `WorkLogFieldMappings`
        if (data['WorkLogFieldMappings']) { // data not null
          Array.validateJSON(data['WorkLogFieldMappings']);
        }
        // validate the optional field `InclusionPatterns`
        if (data['InclusionPatterns']) { // data not null
          Array.validateJSON(data['InclusionPatterns']);
        }
        // validate the optional field `ExclusionPatterns`
        if (data['ExclusionPatterns']) { // data not null
          Array.validateJSON(data['ExclusionPatterns']);
        }
        // validate the optional field `VpcConfiguration`
        if (data['VpcConfiguration']) { // data not null
          JiraConfigurationVpcConfiguration.validateJSON(data['VpcConfiguration']);
        }

        return true;
    }


}

JiraConfiguration.RequiredProperties = ["JiraAccountUrl", "SecretArn"];

/**
 * @member {String} JiraAccountUrl
 */
JiraConfiguration.prototype['JiraAccountUrl'] = undefined;

/**
 * @member {String} SecretArn
 */
JiraConfiguration.prototype['SecretArn'] = undefined;

/**
 * @member {Boolean} UseChangeLog
 */
JiraConfiguration.prototype['UseChangeLog'] = undefined;

/**
 * @member {Array} Project
 */
JiraConfiguration.prototype['Project'] = undefined;

/**
 * @member {Array} IssueType
 */
JiraConfiguration.prototype['IssueType'] = undefined;

/**
 * @member {Array} Status
 */
JiraConfiguration.prototype['Status'] = undefined;

/**
 * @member {Array} IssueSubEntityFilter
 */
JiraConfiguration.prototype['IssueSubEntityFilter'] = undefined;

/**
 * @member {Array} AttachmentFieldMappings
 */
JiraConfiguration.prototype['AttachmentFieldMappings'] = undefined;

/**
 * @member {Array} CommentFieldMappings
 */
JiraConfiguration.prototype['CommentFieldMappings'] = undefined;

/**
 * @member {Array} IssueFieldMappings
 */
JiraConfiguration.prototype['IssueFieldMappings'] = undefined;

/**
 * @member {Array} ProjectFieldMappings
 */
JiraConfiguration.prototype['ProjectFieldMappings'] = undefined;

/**
 * @member {Array} WorkLogFieldMappings
 */
JiraConfiguration.prototype['WorkLogFieldMappings'] = undefined;

/**
 * @member {Array} InclusionPatterns
 */
JiraConfiguration.prototype['InclusionPatterns'] = undefined;

/**
 * @member {Array} ExclusionPatterns
 */
JiraConfiguration.prototype['ExclusionPatterns'] = undefined;

/**
 * @member {module:model/JiraConfigurationVpcConfiguration} VpcConfiguration
 */
JiraConfiguration.prototype['VpcConfiguration'] = undefined;






export default JiraConfiguration;

