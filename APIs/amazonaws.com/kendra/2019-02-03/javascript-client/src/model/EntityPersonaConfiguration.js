/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Persona from './Persona';

/**
 * The EntityPersonaConfiguration model module.
 * @module model/EntityPersonaConfiguration
 * @version 2019-02-03
 */
class EntityPersonaConfiguration {
    /**
     * Constructs a new <code>EntityPersonaConfiguration</code>.
     * Provides the configuration information for users or groups in your IAM Identity Center identity source for access to your Amazon Kendra experience. Specific permissions are defined for each user or group once they are granted access to your Amazon Kendra experience.
     * @alias module:model/EntityPersonaConfiguration
     * @param entityId {String} 
     * @param persona {module:model/Persona} 
     */
    constructor(entityId, persona) { 
        
        EntityPersonaConfiguration.initialize(this, entityId, persona);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entityId, persona) { 
        obj['EntityId'] = entityId;
        obj['Persona'] = persona;
    }

    /**
     * Constructs a <code>EntityPersonaConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityPersonaConfiguration} obj Optional instance to populate.
     * @return {module:model/EntityPersonaConfiguration} The populated <code>EntityPersonaConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityPersonaConfiguration();

            if (data.hasOwnProperty('EntityId')) {
                obj['EntityId'] = ApiClient.convertToType(data['EntityId'], 'String');
            }
            if (data.hasOwnProperty('Persona')) {
                obj['Persona'] = ApiClient.convertToType(data['Persona'], Persona);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityPersonaConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityPersonaConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntityPersonaConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EntityId`
        if (data['EntityId']) { // data not null
          String.validateJSON(data['EntityId']);
        }
        // validate the optional field `Persona`
        if (data['Persona']) { // data not null
          Persona.validateJSON(data['Persona']);
        }

        return true;
    }


}

EntityPersonaConfiguration.RequiredProperties = ["EntityId", "Persona"];

/**
 * @member {String} EntityId
 */
EntityPersonaConfiguration.prototype['EntityId'] = undefined;

/**
 * @member {module:model/Persona} Persona
 */
EntityPersonaConfiguration.prototype['Persona'] = undefined;






export default EntityPersonaConfiguration;

