/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeaturedDocumentWithMetadata model module.
 * @module model/FeaturedDocumentWithMetadata
 * @version 2019-02-03
 */
class FeaturedDocumentWithMetadata {
    /**
     * Constructs a new <code>FeaturedDocumentWithMetadata</code>.
     * A featured document with its metadata information. This document is displayed at the top of the search results page, placed above all other results for certain queries. If there&#39;s an exact match of a query, then the document is featured in the search results.
     * @alias module:model/FeaturedDocumentWithMetadata
     */
    constructor() { 
        
        FeaturedDocumentWithMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeaturedDocumentWithMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeaturedDocumentWithMetadata} obj Optional instance to populate.
     * @return {module:model/FeaturedDocumentWithMetadata} The populated <code>FeaturedDocumentWithMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeaturedDocumentWithMetadata();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('URI')) {
                obj['URI'] = ApiClient.convertToType(data['URI'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeaturedDocumentWithMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeaturedDocumentWithMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Title`
        if (data['Title']) { // data not null
          String.validateJSON(data['Title']);
        }
        // validate the optional field `URI`
        if (data['URI']) { // data not null
          String.validateJSON(data['URI']);
        }

        return true;
    }


}



/**
 * @member {String} Id
 */
FeaturedDocumentWithMetadata.prototype['Id'] = undefined;

/**
 * @member {String} Title
 */
FeaturedDocumentWithMetadata.prototype['Title'] = undefined;

/**
 * @member {String} URI
 */
FeaturedDocumentWithMetadata.prototype['URI'] = undefined;






export default FeaturedDocumentWithMetadata;

