/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeQuerySuggestionsBlockListResponseSourceS3Path from './DescribeQuerySuggestionsBlockListResponseSourceS3Path';
import QuerySuggestionsBlockListStatus from './QuerySuggestionsBlockListStatus';

/**
 * The DescribeQuerySuggestionsBlockListResponse model module.
 * @module model/DescribeQuerySuggestionsBlockListResponse
 * @version 2019-02-03
 */
class DescribeQuerySuggestionsBlockListResponse {
    /**
     * Constructs a new <code>DescribeQuerySuggestionsBlockListResponse</code>.
     * @alias module:model/DescribeQuerySuggestionsBlockListResponse
     */
    constructor() { 
        
        DescribeQuerySuggestionsBlockListResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeQuerySuggestionsBlockListResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeQuerySuggestionsBlockListResponse} obj Optional instance to populate.
     * @return {module:model/DescribeQuerySuggestionsBlockListResponse} The populated <code>DescribeQuerySuggestionsBlockListResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeQuerySuggestionsBlockListResponse();

            if (data.hasOwnProperty('IndexId')) {
                obj['IndexId'] = ApiClient.convertToType(data['IndexId'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], QuerySuggestionsBlockListStatus);
            }
            if (data.hasOwnProperty('ErrorMessage')) {
                obj['ErrorMessage'] = ApiClient.convertToType(data['ErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('SourceS3Path')) {
                obj['SourceS3Path'] = DescribeQuerySuggestionsBlockListResponseSourceS3Path.constructFromObject(data['SourceS3Path']);
            }
            if (data.hasOwnProperty('ItemCount')) {
                obj['ItemCount'] = ApiClient.convertToType(data['ItemCount'], 'Number');
            }
            if (data.hasOwnProperty('FileSizeBytes')) {
                obj['FileSizeBytes'] = ApiClient.convertToType(data['FileSizeBytes'], 'Number');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeQuerySuggestionsBlockListResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeQuerySuggestionsBlockListResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `IndexId`
        if (data['IndexId']) { // data not null
          String.validateJSON(data['IndexId']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          QuerySuggestionsBlockListStatus.validateJSON(data['Status']);
        }
        // validate the optional field `ErrorMessage`
        if (data['ErrorMessage']) { // data not null
          String.validateJSON(data['ErrorMessage']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `UpdatedAt`
        if (data['UpdatedAt']) { // data not null
          Date.validateJSON(data['UpdatedAt']);
        }
        // validate the optional field `SourceS3Path`
        if (data['SourceS3Path']) { // data not null
          DescribeQuerySuggestionsBlockListResponseSourceS3Path.validateJSON(data['SourceS3Path']);
        }
        // validate the optional field `ItemCount`
        if (data['ItemCount']) { // data not null
          Number.validateJSON(data['ItemCount']);
        }
        // validate the optional field `FileSizeBytes`
        if (data['FileSizeBytes']) { // data not null
          Number.validateJSON(data['FileSizeBytes']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }

        return true;
    }


}



/**
 * @member {String} IndexId
 */
DescribeQuerySuggestionsBlockListResponse.prototype['IndexId'] = undefined;

/**
 * @member {String} Id
 */
DescribeQuerySuggestionsBlockListResponse.prototype['Id'] = undefined;

/**
 * @member {String} Name
 */
DescribeQuerySuggestionsBlockListResponse.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
DescribeQuerySuggestionsBlockListResponse.prototype['Description'] = undefined;

/**
 * @member {module:model/QuerySuggestionsBlockListStatus} Status
 */
DescribeQuerySuggestionsBlockListResponse.prototype['Status'] = undefined;

/**
 * @member {String} ErrorMessage
 */
DescribeQuerySuggestionsBlockListResponse.prototype['ErrorMessage'] = undefined;

/**
 * @member {Date} CreatedAt
 */
DescribeQuerySuggestionsBlockListResponse.prototype['CreatedAt'] = undefined;

/**
 * @member {Date} UpdatedAt
 */
DescribeQuerySuggestionsBlockListResponse.prototype['UpdatedAt'] = undefined;

/**
 * @member {module:model/DescribeQuerySuggestionsBlockListResponseSourceS3Path} SourceS3Path
 */
DescribeQuerySuggestionsBlockListResponse.prototype['SourceS3Path'] = undefined;

/**
 * @member {Number} ItemCount
 */
DescribeQuerySuggestionsBlockListResponse.prototype['ItemCount'] = undefined;

/**
 * @member {Number} FileSizeBytes
 */
DescribeQuerySuggestionsBlockListResponse.prototype['FileSizeBytes'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeQuerySuggestionsBlockListResponse.prototype['RoleArn'] = undefined;






export default DescribeQuerySuggestionsBlockListResponse;

