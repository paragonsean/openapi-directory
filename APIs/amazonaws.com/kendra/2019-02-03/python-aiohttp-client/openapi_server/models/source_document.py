# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_id: str=None, suggestion_attributes: List=None, additional_attributes: List=None):
        """SourceDocument - a model defined in OpenAPI

        :param document_id: The document_id of this SourceDocument.
        :param suggestion_attributes: The suggestion_attributes of this SourceDocument.
        :param additional_attributes: The additional_attributes of this SourceDocument.
        """
        self.openapi_types = {
            'document_id': str,
            'suggestion_attributes': List,
            'additional_attributes': List
        }

        self.attribute_map = {
            'document_id': 'DocumentId',
            'suggestion_attributes': 'SuggestionAttributes',
            'additional_attributes': 'AdditionalAttributes'
        }

        self._document_id = document_id
        self._suggestion_attributes = suggestion_attributes
        self._additional_attributes = additional_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceDocument of this SourceDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_id(self):
        """Gets the document_id of this SourceDocument.


        :return: The document_id of this SourceDocument.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this SourceDocument.


        :param document_id: The document_id of this SourceDocument.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def suggestion_attributes(self):
        """Gets the suggestion_attributes of this SourceDocument.


        :return: The suggestion_attributes of this SourceDocument.
        :rtype: List
        """
        return self._suggestion_attributes

    @suggestion_attributes.setter
    def suggestion_attributes(self, suggestion_attributes):
        """Sets the suggestion_attributes of this SourceDocument.


        :param suggestion_attributes: The suggestion_attributes of this SourceDocument.
        :type suggestion_attributes: List
        """

        self._suggestion_attributes = suggestion_attributes

    @property
    def additional_attributes(self):
        """Gets the additional_attributes of this SourceDocument.


        :return: The additional_attributes of this SourceDocument.
        :rtype: List
        """
        return self._additional_attributes

    @additional_attributes.setter
    def additional_attributes(self, additional_attributes):
        """Sets the additional_attributes of this SourceDocument.


        :param additional_attributes: The additional_attributes of this SourceDocument.
        :type additional_attributes: List
        """

        self._additional_attributes = additional_attributes
