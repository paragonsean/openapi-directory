# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_sync_job_metric_target import DataSourceSyncJobMetricTarget
from openapi_server import util


class BatchDeleteDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_id: str=None, document_id_list: List=None, data_source_sync_job_metric_target: DataSourceSyncJobMetricTarget=None):
        """BatchDeleteDocumentRequest - a model defined in OpenAPI

        :param index_id: The index_id of this BatchDeleteDocumentRequest.
        :param document_id_list: The document_id_list of this BatchDeleteDocumentRequest.
        :param data_source_sync_job_metric_target: The data_source_sync_job_metric_target of this BatchDeleteDocumentRequest.
        """
        self.openapi_types = {
            'index_id': str,
            'document_id_list': List,
            'data_source_sync_job_metric_target': DataSourceSyncJobMetricTarget
        }

        self.attribute_map = {
            'index_id': 'IndexId',
            'document_id_list': 'DocumentIdList',
            'data_source_sync_job_metric_target': 'DataSourceSyncJobMetricTarget'
        }

        self._index_id = index_id
        self._document_id_list = document_id_list
        self._data_source_sync_job_metric_target = data_source_sync_job_metric_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteDocumentRequest of this BatchDeleteDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_id(self):
        """Gets the index_id of this BatchDeleteDocumentRequest.


        :return: The index_id of this BatchDeleteDocumentRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this BatchDeleteDocumentRequest.


        :param index_id: The index_id of this BatchDeleteDocumentRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def document_id_list(self):
        """Gets the document_id_list of this BatchDeleteDocumentRequest.


        :return: The document_id_list of this BatchDeleteDocumentRequest.
        :rtype: List
        """
        return self._document_id_list

    @document_id_list.setter
    def document_id_list(self, document_id_list):
        """Sets the document_id_list of this BatchDeleteDocumentRequest.


        :param document_id_list: The document_id_list of this BatchDeleteDocumentRequest.
        :type document_id_list: List
        """
        if document_id_list is None:
            raise ValueError("Invalid value for `document_id_list`, must not be `None`")

        self._document_id_list = document_id_list

    @property
    def data_source_sync_job_metric_target(self):
        """Gets the data_source_sync_job_metric_target of this BatchDeleteDocumentRequest.


        :return: The data_source_sync_job_metric_target of this BatchDeleteDocumentRequest.
        :rtype: DataSourceSyncJobMetricTarget
        """
        return self._data_source_sync_job_metric_target

    @data_source_sync_job_metric_target.setter
    def data_source_sync_job_metric_target(self, data_source_sync_job_metric_target):
        """Sets the data_source_sync_job_metric_target of this BatchDeleteDocumentRequest.


        :param data_source_sync_job_metric_target: The data_source_sync_job_metric_target of this BatchDeleteDocumentRequest.
        :type data_source_sync_job_metric_target: DataSourceSyncJobMetricTarget
        """

        self._data_source_sync_job_metric_target = data_source_sync_job_metric_target
