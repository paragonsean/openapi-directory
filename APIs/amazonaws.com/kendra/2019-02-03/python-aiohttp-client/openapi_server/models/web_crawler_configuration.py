# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_crawler_configuration_authentication_configuration import WebCrawlerConfigurationAuthenticationConfiguration
from openapi_server.models.web_crawler_configuration_proxy_configuration import WebCrawlerConfigurationProxyConfiguration
from openapi_server.models.web_crawler_configuration_urls import WebCrawlerConfigurationUrls
from openapi_server import util


class WebCrawlerConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, urls: WebCrawlerConfigurationUrls=None, crawl_depth: int=None, max_links_per_page: int=None, max_content_size_per_page_in_mega_bytes: float=None, max_urls_per_minute_crawl_rate: int=None, url_inclusion_patterns: List=None, url_exclusion_patterns: List=None, proxy_configuration: WebCrawlerConfigurationProxyConfiguration=None, authentication_configuration: WebCrawlerConfigurationAuthenticationConfiguration=None):
        """WebCrawlerConfiguration - a model defined in OpenAPI

        :param urls: The urls of this WebCrawlerConfiguration.
        :param crawl_depth: The crawl_depth of this WebCrawlerConfiguration.
        :param max_links_per_page: The max_links_per_page of this WebCrawlerConfiguration.
        :param max_content_size_per_page_in_mega_bytes: The max_content_size_per_page_in_mega_bytes of this WebCrawlerConfiguration.
        :param max_urls_per_minute_crawl_rate: The max_urls_per_minute_crawl_rate of this WebCrawlerConfiguration.
        :param url_inclusion_patterns: The url_inclusion_patterns of this WebCrawlerConfiguration.
        :param url_exclusion_patterns: The url_exclusion_patterns of this WebCrawlerConfiguration.
        :param proxy_configuration: The proxy_configuration of this WebCrawlerConfiguration.
        :param authentication_configuration: The authentication_configuration of this WebCrawlerConfiguration.
        """
        self.openapi_types = {
            'urls': WebCrawlerConfigurationUrls,
            'crawl_depth': int,
            'max_links_per_page': int,
            'max_content_size_per_page_in_mega_bytes': float,
            'max_urls_per_minute_crawl_rate': int,
            'url_inclusion_patterns': List,
            'url_exclusion_patterns': List,
            'proxy_configuration': WebCrawlerConfigurationProxyConfiguration,
            'authentication_configuration': WebCrawlerConfigurationAuthenticationConfiguration
        }

        self.attribute_map = {
            'urls': 'Urls',
            'crawl_depth': 'CrawlDepth',
            'max_links_per_page': 'MaxLinksPerPage',
            'max_content_size_per_page_in_mega_bytes': 'MaxContentSizePerPageInMegaBytes',
            'max_urls_per_minute_crawl_rate': 'MaxUrlsPerMinuteCrawlRate',
            'url_inclusion_patterns': 'UrlInclusionPatterns',
            'url_exclusion_patterns': 'UrlExclusionPatterns',
            'proxy_configuration': 'ProxyConfiguration',
            'authentication_configuration': 'AuthenticationConfiguration'
        }

        self._urls = urls
        self._crawl_depth = crawl_depth
        self._max_links_per_page = max_links_per_page
        self._max_content_size_per_page_in_mega_bytes = max_content_size_per_page_in_mega_bytes
        self._max_urls_per_minute_crawl_rate = max_urls_per_minute_crawl_rate
        self._url_inclusion_patterns = url_inclusion_patterns
        self._url_exclusion_patterns = url_exclusion_patterns
        self._proxy_configuration = proxy_configuration
        self._authentication_configuration = authentication_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebCrawlerConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebCrawlerConfiguration of this WebCrawlerConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def urls(self):
        """Gets the urls of this WebCrawlerConfiguration.


        :return: The urls of this WebCrawlerConfiguration.
        :rtype: WebCrawlerConfigurationUrls
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this WebCrawlerConfiguration.


        :param urls: The urls of this WebCrawlerConfiguration.
        :type urls: WebCrawlerConfigurationUrls
        """
        if urls is None:
            raise ValueError("Invalid value for `urls`, must not be `None`")

        self._urls = urls

    @property
    def crawl_depth(self):
        """Gets the crawl_depth of this WebCrawlerConfiguration.


        :return: The crawl_depth of this WebCrawlerConfiguration.
        :rtype: int
        """
        return self._crawl_depth

    @crawl_depth.setter
    def crawl_depth(self, crawl_depth):
        """Sets the crawl_depth of this WebCrawlerConfiguration.


        :param crawl_depth: The crawl_depth of this WebCrawlerConfiguration.
        :type crawl_depth: int
        """

        self._crawl_depth = crawl_depth

    @property
    def max_links_per_page(self):
        """Gets the max_links_per_page of this WebCrawlerConfiguration.


        :return: The max_links_per_page of this WebCrawlerConfiguration.
        :rtype: int
        """
        return self._max_links_per_page

    @max_links_per_page.setter
    def max_links_per_page(self, max_links_per_page):
        """Sets the max_links_per_page of this WebCrawlerConfiguration.


        :param max_links_per_page: The max_links_per_page of this WebCrawlerConfiguration.
        :type max_links_per_page: int
        """

        self._max_links_per_page = max_links_per_page

    @property
    def max_content_size_per_page_in_mega_bytes(self):
        """Gets the max_content_size_per_page_in_mega_bytes of this WebCrawlerConfiguration.


        :return: The max_content_size_per_page_in_mega_bytes of this WebCrawlerConfiguration.
        :rtype: float
        """
        return self._max_content_size_per_page_in_mega_bytes

    @max_content_size_per_page_in_mega_bytes.setter
    def max_content_size_per_page_in_mega_bytes(self, max_content_size_per_page_in_mega_bytes):
        """Sets the max_content_size_per_page_in_mega_bytes of this WebCrawlerConfiguration.


        :param max_content_size_per_page_in_mega_bytes: The max_content_size_per_page_in_mega_bytes of this WebCrawlerConfiguration.
        :type max_content_size_per_page_in_mega_bytes: float
        """

        self._max_content_size_per_page_in_mega_bytes = max_content_size_per_page_in_mega_bytes

    @property
    def max_urls_per_minute_crawl_rate(self):
        """Gets the max_urls_per_minute_crawl_rate of this WebCrawlerConfiguration.


        :return: The max_urls_per_minute_crawl_rate of this WebCrawlerConfiguration.
        :rtype: int
        """
        return self._max_urls_per_minute_crawl_rate

    @max_urls_per_minute_crawl_rate.setter
    def max_urls_per_minute_crawl_rate(self, max_urls_per_minute_crawl_rate):
        """Sets the max_urls_per_minute_crawl_rate of this WebCrawlerConfiguration.


        :param max_urls_per_minute_crawl_rate: The max_urls_per_minute_crawl_rate of this WebCrawlerConfiguration.
        :type max_urls_per_minute_crawl_rate: int
        """

        self._max_urls_per_minute_crawl_rate = max_urls_per_minute_crawl_rate

    @property
    def url_inclusion_patterns(self):
        """Gets the url_inclusion_patterns of this WebCrawlerConfiguration.


        :return: The url_inclusion_patterns of this WebCrawlerConfiguration.
        :rtype: List
        """
        return self._url_inclusion_patterns

    @url_inclusion_patterns.setter
    def url_inclusion_patterns(self, url_inclusion_patterns):
        """Sets the url_inclusion_patterns of this WebCrawlerConfiguration.


        :param url_inclusion_patterns: The url_inclusion_patterns of this WebCrawlerConfiguration.
        :type url_inclusion_patterns: List
        """

        self._url_inclusion_patterns = url_inclusion_patterns

    @property
    def url_exclusion_patterns(self):
        """Gets the url_exclusion_patterns of this WebCrawlerConfiguration.


        :return: The url_exclusion_patterns of this WebCrawlerConfiguration.
        :rtype: List
        """
        return self._url_exclusion_patterns

    @url_exclusion_patterns.setter
    def url_exclusion_patterns(self, url_exclusion_patterns):
        """Sets the url_exclusion_patterns of this WebCrawlerConfiguration.


        :param url_exclusion_patterns: The url_exclusion_patterns of this WebCrawlerConfiguration.
        :type url_exclusion_patterns: List
        """

        self._url_exclusion_patterns = url_exclusion_patterns

    @property
    def proxy_configuration(self):
        """Gets the proxy_configuration of this WebCrawlerConfiguration.


        :return: The proxy_configuration of this WebCrawlerConfiguration.
        :rtype: WebCrawlerConfigurationProxyConfiguration
        """
        return self._proxy_configuration

    @proxy_configuration.setter
    def proxy_configuration(self, proxy_configuration):
        """Sets the proxy_configuration of this WebCrawlerConfiguration.


        :param proxy_configuration: The proxy_configuration of this WebCrawlerConfiguration.
        :type proxy_configuration: WebCrawlerConfigurationProxyConfiguration
        """

        self._proxy_configuration = proxy_configuration

    @property
    def authentication_configuration(self):
        """Gets the authentication_configuration of this WebCrawlerConfiguration.


        :return: The authentication_configuration of this WebCrawlerConfiguration.
        :rtype: WebCrawlerConfigurationAuthenticationConfiguration
        """
        return self._authentication_configuration

    @authentication_configuration.setter
    def authentication_configuration(self, authentication_configuration):
        """Sets the authentication_configuration of this WebCrawlerConfiguration.


        :param authentication_configuration: The authentication_configuration of this WebCrawlerConfiguration.
        :type authentication_configuration: WebCrawlerConfigurationAuthenticationConfiguration
        """

        self._authentication_configuration = authentication_configuration
