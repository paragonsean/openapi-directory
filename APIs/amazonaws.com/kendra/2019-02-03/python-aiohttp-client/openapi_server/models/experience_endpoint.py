# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_type import EndpointType
from openapi_server import util


class ExperienceEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_type: EndpointType=None, endpoint: str=None):
        """ExperienceEndpoint - a model defined in OpenAPI

        :param endpoint_type: The endpoint_type of this ExperienceEndpoint.
        :param endpoint: The endpoint of this ExperienceEndpoint.
        """
        self.openapi_types = {
            'endpoint_type': EndpointType,
            'endpoint': str
        }

        self.attribute_map = {
            'endpoint_type': 'EndpointType',
            'endpoint': 'Endpoint'
        }

        self._endpoint_type = endpoint_type
        self._endpoint = endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperienceEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExperienceEndpoint of this ExperienceEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this ExperienceEndpoint.


        :return: The endpoint_type of this ExperienceEndpoint.
        :rtype: EndpointType
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this ExperienceEndpoint.


        :param endpoint_type: The endpoint_type of this ExperienceEndpoint.
        :type endpoint_type: EndpointType
        """

        self._endpoint_type = endpoint_type

    @property
    def endpoint(self):
        """Gets the endpoint of this ExperienceEndpoint.


        :return: The endpoint of this ExperienceEndpoint.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this ExperienceEndpoint.


        :param endpoint: The endpoint of this ExperienceEndpoint.
        :type endpoint: str
        """

        self._endpoint = endpoint
