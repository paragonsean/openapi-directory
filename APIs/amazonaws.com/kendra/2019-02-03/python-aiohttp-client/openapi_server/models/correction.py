# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Correction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_offset: int=None, end_offset: int=None, term: str=None, corrected_term: str=None):
        """Correction - a model defined in OpenAPI

        :param begin_offset: The begin_offset of this Correction.
        :param end_offset: The end_offset of this Correction.
        :param term: The term of this Correction.
        :param corrected_term: The corrected_term of this Correction.
        """
        self.openapi_types = {
            'begin_offset': int,
            'end_offset': int,
            'term': str,
            'corrected_term': str
        }

        self.attribute_map = {
            'begin_offset': 'BeginOffset',
            'end_offset': 'EndOffset',
            'term': 'Term',
            'corrected_term': 'CorrectedTerm'
        }

        self._begin_offset = begin_offset
        self._end_offset = end_offset
        self._term = term
        self._corrected_term = corrected_term

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Correction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Correction of this Correction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_offset(self):
        """Gets the begin_offset of this Correction.


        :return: The begin_offset of this Correction.
        :rtype: int
        """
        return self._begin_offset

    @begin_offset.setter
    def begin_offset(self, begin_offset):
        """Sets the begin_offset of this Correction.


        :param begin_offset: The begin_offset of this Correction.
        :type begin_offset: int
        """

        self._begin_offset = begin_offset

    @property
    def end_offset(self):
        """Gets the end_offset of this Correction.


        :return: The end_offset of this Correction.
        :rtype: int
        """
        return self._end_offset

    @end_offset.setter
    def end_offset(self, end_offset):
        """Sets the end_offset of this Correction.


        :param end_offset: The end_offset of this Correction.
        :type end_offset: int
        """

        self._end_offset = end_offset

    @property
    def term(self):
        """Gets the term of this Correction.


        :return: The term of this Correction.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this Correction.


        :param term: The term of this Correction.
        :type term: str
        """

        self._term = term

    @property
    def corrected_term(self):
        """Gets the corrected_term of this Correction.


        :return: The corrected_term of this Correction.
        :rtype: str
        """
        return self._corrected_term

    @corrected_term.setter
    def corrected_term(self, corrected_term):
        """Sets the corrected_term of this Correction.


        :param corrected_term: The corrected_term of this Correction.
        :type corrected_term: str
        """

        self._corrected_term = corrected_term
