# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_crawler_mode import WebCrawlerMode
from openapi_server import util


class SeedUrlConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, seed_urls: List=None, web_crawler_mode: WebCrawlerMode=None):
        """SeedUrlConfiguration - a model defined in OpenAPI

        :param seed_urls: The seed_urls of this SeedUrlConfiguration.
        :param web_crawler_mode: The web_crawler_mode of this SeedUrlConfiguration.
        """
        self.openapi_types = {
            'seed_urls': List,
            'web_crawler_mode': WebCrawlerMode
        }

        self.attribute_map = {
            'seed_urls': 'SeedUrls',
            'web_crawler_mode': 'WebCrawlerMode'
        }

        self._seed_urls = seed_urls
        self._web_crawler_mode = web_crawler_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeedUrlConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeedUrlConfiguration of this SeedUrlConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seed_urls(self):
        """Gets the seed_urls of this SeedUrlConfiguration.


        :return: The seed_urls of this SeedUrlConfiguration.
        :rtype: List
        """
        return self._seed_urls

    @seed_urls.setter
    def seed_urls(self, seed_urls):
        """Sets the seed_urls of this SeedUrlConfiguration.


        :param seed_urls: The seed_urls of this SeedUrlConfiguration.
        :type seed_urls: List
        """
        if seed_urls is None:
            raise ValueError("Invalid value for `seed_urls`, must not be `None`")

        self._seed_urls = seed_urls

    @property
    def web_crawler_mode(self):
        """Gets the web_crawler_mode of this SeedUrlConfiguration.


        :return: The web_crawler_mode of this SeedUrlConfiguration.
        :rtype: WebCrawlerMode
        """
        return self._web_crawler_mode

    @web_crawler_mode.setter
    def web_crawler_mode(self, web_crawler_mode):
        """Sets the web_crawler_mode of this SeedUrlConfiguration.


        :param web_crawler_mode: The web_crawler_mode of this SeedUrlConfiguration.
        :type web_crawler_mode: WebCrawlerMode
        """

        self._web_crawler_mode = web_crawler_mode
