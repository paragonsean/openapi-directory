# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_request_attribute_filter import QueryRequestAttributeFilter
from openapi_server.models.query_request_sorting_configuration import QueryRequestSortingConfiguration
from openapi_server.models.query_request_spell_correction_configuration import QueryRequestSpellCorrectionConfiguration
from openapi_server.models.query_request_user_context import QueryRequestUserContext
from openapi_server.models.query_result_type import QueryResultType
from openapi_server import util


class QueryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_id: str=None, query_text: str=None, attribute_filter: QueryRequestAttributeFilter=None, facets: List=None, requested_document_attributes: List=None, query_result_type_filter: QueryResultType=None, document_relevance_override_configurations: List=None, page_number: int=None, page_size: int=None, sorting_configuration: QueryRequestSortingConfiguration=None, user_context: QueryRequestUserContext=None, visitor_id: str=None, spell_correction_configuration: QueryRequestSpellCorrectionConfiguration=None):
        """QueryRequest - a model defined in OpenAPI

        :param index_id: The index_id of this QueryRequest.
        :param query_text: The query_text of this QueryRequest.
        :param attribute_filter: The attribute_filter of this QueryRequest.
        :param facets: The facets of this QueryRequest.
        :param requested_document_attributes: The requested_document_attributes of this QueryRequest.
        :param query_result_type_filter: The query_result_type_filter of this QueryRequest.
        :param document_relevance_override_configurations: The document_relevance_override_configurations of this QueryRequest.
        :param page_number: The page_number of this QueryRequest.
        :param page_size: The page_size of this QueryRequest.
        :param sorting_configuration: The sorting_configuration of this QueryRequest.
        :param user_context: The user_context of this QueryRequest.
        :param visitor_id: The visitor_id of this QueryRequest.
        :param spell_correction_configuration: The spell_correction_configuration of this QueryRequest.
        """
        self.openapi_types = {
            'index_id': str,
            'query_text': str,
            'attribute_filter': QueryRequestAttributeFilter,
            'facets': List,
            'requested_document_attributes': List,
            'query_result_type_filter': QueryResultType,
            'document_relevance_override_configurations': List,
            'page_number': int,
            'page_size': int,
            'sorting_configuration': QueryRequestSortingConfiguration,
            'user_context': QueryRequestUserContext,
            'visitor_id': str,
            'spell_correction_configuration': QueryRequestSpellCorrectionConfiguration
        }

        self.attribute_map = {
            'index_id': 'IndexId',
            'query_text': 'QueryText',
            'attribute_filter': 'AttributeFilter',
            'facets': 'Facets',
            'requested_document_attributes': 'RequestedDocumentAttributes',
            'query_result_type_filter': 'QueryResultTypeFilter',
            'document_relevance_override_configurations': 'DocumentRelevanceOverrideConfigurations',
            'page_number': 'PageNumber',
            'page_size': 'PageSize',
            'sorting_configuration': 'SortingConfiguration',
            'user_context': 'UserContext',
            'visitor_id': 'VisitorId',
            'spell_correction_configuration': 'SpellCorrectionConfiguration'
        }

        self._index_id = index_id
        self._query_text = query_text
        self._attribute_filter = attribute_filter
        self._facets = facets
        self._requested_document_attributes = requested_document_attributes
        self._query_result_type_filter = query_result_type_filter
        self._document_relevance_override_configurations = document_relevance_override_configurations
        self._page_number = page_number
        self._page_size = page_size
        self._sorting_configuration = sorting_configuration
        self._user_context = user_context
        self._visitor_id = visitor_id
        self._spell_correction_configuration = spell_correction_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryRequest of this QueryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_id(self):
        """Gets the index_id of this QueryRequest.


        :return: The index_id of this QueryRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this QueryRequest.


        :param index_id: The index_id of this QueryRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def query_text(self):
        """Gets the query_text of this QueryRequest.


        :return: The query_text of this QueryRequest.
        :rtype: str
        """
        return self._query_text

    @query_text.setter
    def query_text(self, query_text):
        """Sets the query_text of this QueryRequest.


        :param query_text: The query_text of this QueryRequest.
        :type query_text: str
        """

        self._query_text = query_text

    @property
    def attribute_filter(self):
        """Gets the attribute_filter of this QueryRequest.


        :return: The attribute_filter of this QueryRequest.
        :rtype: QueryRequestAttributeFilter
        """
        return self._attribute_filter

    @attribute_filter.setter
    def attribute_filter(self, attribute_filter):
        """Sets the attribute_filter of this QueryRequest.


        :param attribute_filter: The attribute_filter of this QueryRequest.
        :type attribute_filter: QueryRequestAttributeFilter
        """

        self._attribute_filter = attribute_filter

    @property
    def facets(self):
        """Gets the facets of this QueryRequest.


        :return: The facets of this QueryRequest.
        :rtype: List
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """Sets the facets of this QueryRequest.


        :param facets: The facets of this QueryRequest.
        :type facets: List
        """

        self._facets = facets

    @property
    def requested_document_attributes(self):
        """Gets the requested_document_attributes of this QueryRequest.


        :return: The requested_document_attributes of this QueryRequest.
        :rtype: List
        """
        return self._requested_document_attributes

    @requested_document_attributes.setter
    def requested_document_attributes(self, requested_document_attributes):
        """Sets the requested_document_attributes of this QueryRequest.


        :param requested_document_attributes: The requested_document_attributes of this QueryRequest.
        :type requested_document_attributes: List
        """

        self._requested_document_attributes = requested_document_attributes

    @property
    def query_result_type_filter(self):
        """Gets the query_result_type_filter of this QueryRequest.


        :return: The query_result_type_filter of this QueryRequest.
        :rtype: QueryResultType
        """
        return self._query_result_type_filter

    @query_result_type_filter.setter
    def query_result_type_filter(self, query_result_type_filter):
        """Sets the query_result_type_filter of this QueryRequest.


        :param query_result_type_filter: The query_result_type_filter of this QueryRequest.
        :type query_result_type_filter: QueryResultType
        """

        self._query_result_type_filter = query_result_type_filter

    @property
    def document_relevance_override_configurations(self):
        """Gets the document_relevance_override_configurations of this QueryRequest.


        :return: The document_relevance_override_configurations of this QueryRequest.
        :rtype: List
        """
        return self._document_relevance_override_configurations

    @document_relevance_override_configurations.setter
    def document_relevance_override_configurations(self, document_relevance_override_configurations):
        """Sets the document_relevance_override_configurations of this QueryRequest.


        :param document_relevance_override_configurations: The document_relevance_override_configurations of this QueryRequest.
        :type document_relevance_override_configurations: List
        """

        self._document_relevance_override_configurations = document_relevance_override_configurations

    @property
    def page_number(self):
        """Gets the page_number of this QueryRequest.


        :return: The page_number of this QueryRequest.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this QueryRequest.


        :param page_number: The page_number of this QueryRequest.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def page_size(self):
        """Gets the page_size of this QueryRequest.


        :return: The page_size of this QueryRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this QueryRequest.


        :param page_size: The page_size of this QueryRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def sorting_configuration(self):
        """Gets the sorting_configuration of this QueryRequest.


        :return: The sorting_configuration of this QueryRequest.
        :rtype: QueryRequestSortingConfiguration
        """
        return self._sorting_configuration

    @sorting_configuration.setter
    def sorting_configuration(self, sorting_configuration):
        """Sets the sorting_configuration of this QueryRequest.


        :param sorting_configuration: The sorting_configuration of this QueryRequest.
        :type sorting_configuration: QueryRequestSortingConfiguration
        """

        self._sorting_configuration = sorting_configuration

    @property
    def user_context(self):
        """Gets the user_context of this QueryRequest.


        :return: The user_context of this QueryRequest.
        :rtype: QueryRequestUserContext
        """
        return self._user_context

    @user_context.setter
    def user_context(self, user_context):
        """Sets the user_context of this QueryRequest.


        :param user_context: The user_context of this QueryRequest.
        :type user_context: QueryRequestUserContext
        """

        self._user_context = user_context

    @property
    def visitor_id(self):
        """Gets the visitor_id of this QueryRequest.


        :return: The visitor_id of this QueryRequest.
        :rtype: str
        """
        return self._visitor_id

    @visitor_id.setter
    def visitor_id(self, visitor_id):
        """Sets the visitor_id of this QueryRequest.


        :param visitor_id: The visitor_id of this QueryRequest.
        :type visitor_id: str
        """

        self._visitor_id = visitor_id

    @property
    def spell_correction_configuration(self):
        """Gets the spell_correction_configuration of this QueryRequest.


        :return: The spell_correction_configuration of this QueryRequest.
        :rtype: QueryRequestSpellCorrectionConfiguration
        """
        return self._spell_correction_configuration

    @spell_correction_configuration.setter
    def spell_correction_configuration(self, spell_correction_configuration):
        """Sets the spell_correction_configuration of this QueryRequest.


        :param spell_correction_configuration: The spell_correction_configuration of this QueryRequest.
        :type spell_correction_configuration: QueryRequestSpellCorrectionConfiguration
        """

        self._spell_correction_configuration = spell_correction_configuration
