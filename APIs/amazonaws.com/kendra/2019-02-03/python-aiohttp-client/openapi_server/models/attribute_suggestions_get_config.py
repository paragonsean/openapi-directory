# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_suggestions_get_config_attribute_filter import AttributeSuggestionsGetConfigAttributeFilter
from openapi_server.models.attribute_suggestions_get_config_user_context import AttributeSuggestionsGetConfigUserContext
from openapi_server import util


class AttributeSuggestionsGetConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggestion_attributes: List=None, additional_response_attributes: List=None, attribute_filter: AttributeSuggestionsGetConfigAttributeFilter=None, user_context: AttributeSuggestionsGetConfigUserContext=None):
        """AttributeSuggestionsGetConfig - a model defined in OpenAPI

        :param suggestion_attributes: The suggestion_attributes of this AttributeSuggestionsGetConfig.
        :param additional_response_attributes: The additional_response_attributes of this AttributeSuggestionsGetConfig.
        :param attribute_filter: The attribute_filter of this AttributeSuggestionsGetConfig.
        :param user_context: The user_context of this AttributeSuggestionsGetConfig.
        """
        self.openapi_types = {
            'suggestion_attributes': List,
            'additional_response_attributes': List,
            'attribute_filter': AttributeSuggestionsGetConfigAttributeFilter,
            'user_context': AttributeSuggestionsGetConfigUserContext
        }

        self.attribute_map = {
            'suggestion_attributes': 'SuggestionAttributes',
            'additional_response_attributes': 'AdditionalResponseAttributes',
            'attribute_filter': 'AttributeFilter',
            'user_context': 'UserContext'
        }

        self._suggestion_attributes = suggestion_attributes
        self._additional_response_attributes = additional_response_attributes
        self._attribute_filter = attribute_filter
        self._user_context = user_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeSuggestionsGetConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeSuggestionsGetConfig of this AttributeSuggestionsGetConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggestion_attributes(self):
        """Gets the suggestion_attributes of this AttributeSuggestionsGetConfig.


        :return: The suggestion_attributes of this AttributeSuggestionsGetConfig.
        :rtype: List
        """
        return self._suggestion_attributes

    @suggestion_attributes.setter
    def suggestion_attributes(self, suggestion_attributes):
        """Sets the suggestion_attributes of this AttributeSuggestionsGetConfig.


        :param suggestion_attributes: The suggestion_attributes of this AttributeSuggestionsGetConfig.
        :type suggestion_attributes: List
        """

        self._suggestion_attributes = suggestion_attributes

    @property
    def additional_response_attributes(self):
        """Gets the additional_response_attributes of this AttributeSuggestionsGetConfig.


        :return: The additional_response_attributes of this AttributeSuggestionsGetConfig.
        :rtype: List
        """
        return self._additional_response_attributes

    @additional_response_attributes.setter
    def additional_response_attributes(self, additional_response_attributes):
        """Sets the additional_response_attributes of this AttributeSuggestionsGetConfig.


        :param additional_response_attributes: The additional_response_attributes of this AttributeSuggestionsGetConfig.
        :type additional_response_attributes: List
        """

        self._additional_response_attributes = additional_response_attributes

    @property
    def attribute_filter(self):
        """Gets the attribute_filter of this AttributeSuggestionsGetConfig.


        :return: The attribute_filter of this AttributeSuggestionsGetConfig.
        :rtype: AttributeSuggestionsGetConfigAttributeFilter
        """
        return self._attribute_filter

    @attribute_filter.setter
    def attribute_filter(self, attribute_filter):
        """Sets the attribute_filter of this AttributeSuggestionsGetConfig.


        :param attribute_filter: The attribute_filter of this AttributeSuggestionsGetConfig.
        :type attribute_filter: AttributeSuggestionsGetConfigAttributeFilter
        """

        self._attribute_filter = attribute_filter

    @property
    def user_context(self):
        """Gets the user_context of this AttributeSuggestionsGetConfig.


        :return: The user_context of this AttributeSuggestionsGetConfig.
        :rtype: AttributeSuggestionsGetConfigUserContext
        """
        return self._user_context

    @user_context.setter
    def user_context(self, user_context):
        """Sets the user_context of this AttributeSuggestionsGetConfig.


        :param user_context: The user_context of this AttributeSuggestionsGetConfig.
        :type user_context: AttributeSuggestionsGetConfigUserContext
        """

        self._user_context = user_context
