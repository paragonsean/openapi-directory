# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Facet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_attribute_key: str=None, facets: List=None, max_results: int=None):
        """Facet - a model defined in OpenAPI

        :param document_attribute_key: The document_attribute_key of this Facet.
        :param facets: The facets of this Facet.
        :param max_results: The max_results of this Facet.
        """
        self.openapi_types = {
            'document_attribute_key': str,
            'facets': List,
            'max_results': int
        }

        self.attribute_map = {
            'document_attribute_key': 'DocumentAttributeKey',
            'facets': 'Facets',
            'max_results': 'MaxResults'
        }

        self._document_attribute_key = document_attribute_key
        self._facets = facets
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Facet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Facet of this Facet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_attribute_key(self):
        """Gets the document_attribute_key of this Facet.


        :return: The document_attribute_key of this Facet.
        :rtype: str
        """
        return self._document_attribute_key

    @document_attribute_key.setter
    def document_attribute_key(self, document_attribute_key):
        """Sets the document_attribute_key of this Facet.


        :param document_attribute_key: The document_attribute_key of this Facet.
        :type document_attribute_key: str
        """

        self._document_attribute_key = document_attribute_key

    @property
    def facets(self):
        """Gets the facets of this Facet.


        :return: The facets of this Facet.
        :rtype: List
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """Sets the facets of this Facet.


        :param facets: The facets of this Facet.
        :type facets: List
        """

        self._facets = facets

    @property
    def max_results(self):
        """Gets the max_results of this Facet.


        :return: The max_results of this Facet.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this Facet.


        :param max_results: The max_results of this Facet.
        :type max_results: int
        """

        self._max_results = max_results
