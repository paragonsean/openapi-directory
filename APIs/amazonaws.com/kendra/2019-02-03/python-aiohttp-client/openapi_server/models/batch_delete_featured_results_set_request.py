# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteFeaturedResultsSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_id: str=None, featured_results_set_ids: List=None):
        """BatchDeleteFeaturedResultsSetRequest - a model defined in OpenAPI

        :param index_id: The index_id of this BatchDeleteFeaturedResultsSetRequest.
        :param featured_results_set_ids: The featured_results_set_ids of this BatchDeleteFeaturedResultsSetRequest.
        """
        self.openapi_types = {
            'index_id': str,
            'featured_results_set_ids': List
        }

        self.attribute_map = {
            'index_id': 'IndexId',
            'featured_results_set_ids': 'FeaturedResultsSetIds'
        }

        self._index_id = index_id
        self._featured_results_set_ids = featured_results_set_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteFeaturedResultsSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteFeaturedResultsSetRequest of this BatchDeleteFeaturedResultsSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_id(self):
        """Gets the index_id of this BatchDeleteFeaturedResultsSetRequest.


        :return: The index_id of this BatchDeleteFeaturedResultsSetRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this BatchDeleteFeaturedResultsSetRequest.


        :param index_id: The index_id of this BatchDeleteFeaturedResultsSetRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def featured_results_set_ids(self):
        """Gets the featured_results_set_ids of this BatchDeleteFeaturedResultsSetRequest.


        :return: The featured_results_set_ids of this BatchDeleteFeaturedResultsSetRequest.
        :rtype: List
        """
        return self._featured_results_set_ids

    @featured_results_set_ids.setter
    def featured_results_set_ids(self, featured_results_set_ids):
        """Sets the featured_results_set_ids of this BatchDeleteFeaturedResultsSetRequest.


        :param featured_results_set_ids: The featured_results_set_ids of this BatchDeleteFeaturedResultsSetRequest.
        :type featured_results_set_ids: List
        """
        if featured_results_set_ids is None:
            raise ValueError("Invalid value for `featured_results_set_ids`, must not be `None`")

        self._featured_results_set_ids = featured_results_set_ids
