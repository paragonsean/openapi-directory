# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.one_drive_configuration_one_drive_users import OneDriveConfigurationOneDriveUsers
from openapi_server import util


class OneDriveConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tenant_domain: str=None, secret_arn: str=None, one_drive_users: OneDriveConfigurationOneDriveUsers=None, inclusion_patterns: List=None, exclusion_patterns: List=None, field_mappings: List=None, disable_local_groups: bool=None):
        """OneDriveConfiguration - a model defined in OpenAPI

        :param tenant_domain: The tenant_domain of this OneDriveConfiguration.
        :param secret_arn: The secret_arn of this OneDriveConfiguration.
        :param one_drive_users: The one_drive_users of this OneDriveConfiguration.
        :param inclusion_patterns: The inclusion_patterns of this OneDriveConfiguration.
        :param exclusion_patterns: The exclusion_patterns of this OneDriveConfiguration.
        :param field_mappings: The field_mappings of this OneDriveConfiguration.
        :param disable_local_groups: The disable_local_groups of this OneDriveConfiguration.
        """
        self.openapi_types = {
            'tenant_domain': str,
            'secret_arn': str,
            'one_drive_users': OneDriveConfigurationOneDriveUsers,
            'inclusion_patterns': List,
            'exclusion_patterns': List,
            'field_mappings': List,
            'disable_local_groups': bool
        }

        self.attribute_map = {
            'tenant_domain': 'TenantDomain',
            'secret_arn': 'SecretArn',
            'one_drive_users': 'OneDriveUsers',
            'inclusion_patterns': 'InclusionPatterns',
            'exclusion_patterns': 'ExclusionPatterns',
            'field_mappings': 'FieldMappings',
            'disable_local_groups': 'DisableLocalGroups'
        }

        self._tenant_domain = tenant_domain
        self._secret_arn = secret_arn
        self._one_drive_users = one_drive_users
        self._inclusion_patterns = inclusion_patterns
        self._exclusion_patterns = exclusion_patterns
        self._field_mappings = field_mappings
        self._disable_local_groups = disable_local_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OneDriveConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OneDriveConfiguration of this OneDriveConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tenant_domain(self):
        """Gets the tenant_domain of this OneDriveConfiguration.


        :return: The tenant_domain of this OneDriveConfiguration.
        :rtype: str
        """
        return self._tenant_domain

    @tenant_domain.setter
    def tenant_domain(self, tenant_domain):
        """Sets the tenant_domain of this OneDriveConfiguration.


        :param tenant_domain: The tenant_domain of this OneDriveConfiguration.
        :type tenant_domain: str
        """
        if tenant_domain is None:
            raise ValueError("Invalid value for `tenant_domain`, must not be `None`")

        self._tenant_domain = tenant_domain

    @property
    def secret_arn(self):
        """Gets the secret_arn of this OneDriveConfiguration.


        :return: The secret_arn of this OneDriveConfiguration.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this OneDriveConfiguration.


        :param secret_arn: The secret_arn of this OneDriveConfiguration.
        :type secret_arn: str
        """
        if secret_arn is None:
            raise ValueError("Invalid value for `secret_arn`, must not be `None`")

        self._secret_arn = secret_arn

    @property
    def one_drive_users(self):
        """Gets the one_drive_users of this OneDriveConfiguration.


        :return: The one_drive_users of this OneDriveConfiguration.
        :rtype: OneDriveConfigurationOneDriveUsers
        """
        return self._one_drive_users

    @one_drive_users.setter
    def one_drive_users(self, one_drive_users):
        """Sets the one_drive_users of this OneDriveConfiguration.


        :param one_drive_users: The one_drive_users of this OneDriveConfiguration.
        :type one_drive_users: OneDriveConfigurationOneDriveUsers
        """
        if one_drive_users is None:
            raise ValueError("Invalid value for `one_drive_users`, must not be `None`")

        self._one_drive_users = one_drive_users

    @property
    def inclusion_patterns(self):
        """Gets the inclusion_patterns of this OneDriveConfiguration.


        :return: The inclusion_patterns of this OneDriveConfiguration.
        :rtype: List
        """
        return self._inclusion_patterns

    @inclusion_patterns.setter
    def inclusion_patterns(self, inclusion_patterns):
        """Sets the inclusion_patterns of this OneDriveConfiguration.


        :param inclusion_patterns: The inclusion_patterns of this OneDriveConfiguration.
        :type inclusion_patterns: List
        """

        self._inclusion_patterns = inclusion_patterns

    @property
    def exclusion_patterns(self):
        """Gets the exclusion_patterns of this OneDriveConfiguration.


        :return: The exclusion_patterns of this OneDriveConfiguration.
        :rtype: List
        """
        return self._exclusion_patterns

    @exclusion_patterns.setter
    def exclusion_patterns(self, exclusion_patterns):
        """Sets the exclusion_patterns of this OneDriveConfiguration.


        :param exclusion_patterns: The exclusion_patterns of this OneDriveConfiguration.
        :type exclusion_patterns: List
        """

        self._exclusion_patterns = exclusion_patterns

    @property
    def field_mappings(self):
        """Gets the field_mappings of this OneDriveConfiguration.


        :return: The field_mappings of this OneDriveConfiguration.
        :rtype: List
        """
        return self._field_mappings

    @field_mappings.setter
    def field_mappings(self, field_mappings):
        """Sets the field_mappings of this OneDriveConfiguration.


        :param field_mappings: The field_mappings of this OneDriveConfiguration.
        :type field_mappings: List
        """

        self._field_mappings = field_mappings

    @property
    def disable_local_groups(self):
        """Gets the disable_local_groups of this OneDriveConfiguration.


        :return: The disable_local_groups of this OneDriveConfiguration.
        :rtype: bool
        """
        return self._disable_local_groups

    @disable_local_groups.setter
    def disable_local_groups(self, disable_local_groups):
        """Sets the disable_local_groups of this OneDriveConfiguration.


        :param disable_local_groups: The disable_local_groups of this OneDriveConfiguration.
        :type disable_local_groups: bool
        """

        self._disable_local_groups = disable_local_groups
