# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.confluence_authentication_type import ConfluenceAuthenticationType
from openapi_server.models.confluence_configuration_attachment_configuration import ConfluenceConfigurationAttachmentConfiguration
from openapi_server.models.confluence_configuration_blog_configuration import ConfluenceConfigurationBlogConfiguration
from openapi_server.models.confluence_configuration_page_configuration import ConfluenceConfigurationPageConfiguration
from openapi_server.models.confluence_configuration_proxy_configuration import ConfluenceConfigurationProxyConfiguration
from openapi_server.models.confluence_configuration_space_configuration import ConfluenceConfigurationSpaceConfiguration
from openapi_server.models.confluence_configuration_vpc_configuration import ConfluenceConfigurationVpcConfiguration
from openapi_server.models.confluence_version import ConfluenceVersion
from openapi_server import util


class DataSourceConfigurationConfluenceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_url: str=None, secret_arn: str=None, version: ConfluenceVersion=None, space_configuration: ConfluenceConfigurationSpaceConfiguration=None, page_configuration: ConfluenceConfigurationPageConfiguration=None, blog_configuration: ConfluenceConfigurationBlogConfiguration=None, attachment_configuration: ConfluenceConfigurationAttachmentConfiguration=None, vpc_configuration: ConfluenceConfigurationVpcConfiguration=None, inclusion_patterns: List=None, exclusion_patterns: List=None, proxy_configuration: ConfluenceConfigurationProxyConfiguration=None, authentication_type: ConfluenceAuthenticationType=None):
        """DataSourceConfigurationConfluenceConfiguration - a model defined in OpenAPI

        :param server_url: The server_url of this DataSourceConfigurationConfluenceConfiguration.
        :param secret_arn: The secret_arn of this DataSourceConfigurationConfluenceConfiguration.
        :param version: The version of this DataSourceConfigurationConfluenceConfiguration.
        :param space_configuration: The space_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param page_configuration: The page_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param blog_configuration: The blog_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param attachment_configuration: The attachment_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param vpc_configuration: The vpc_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param inclusion_patterns: The inclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :param exclusion_patterns: The exclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :param proxy_configuration: The proxy_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :param authentication_type: The authentication_type of this DataSourceConfigurationConfluenceConfiguration.
        """
        self.openapi_types = {
            'server_url': str,
            'secret_arn': str,
            'version': ConfluenceVersion,
            'space_configuration': ConfluenceConfigurationSpaceConfiguration,
            'page_configuration': ConfluenceConfigurationPageConfiguration,
            'blog_configuration': ConfluenceConfigurationBlogConfiguration,
            'attachment_configuration': ConfluenceConfigurationAttachmentConfiguration,
            'vpc_configuration': ConfluenceConfigurationVpcConfiguration,
            'inclusion_patterns': List,
            'exclusion_patterns': List,
            'proxy_configuration': ConfluenceConfigurationProxyConfiguration,
            'authentication_type': ConfluenceAuthenticationType
        }

        self.attribute_map = {
            'server_url': 'ServerUrl',
            'secret_arn': 'SecretArn',
            'version': 'Version',
            'space_configuration': 'SpaceConfiguration',
            'page_configuration': 'PageConfiguration',
            'blog_configuration': 'BlogConfiguration',
            'attachment_configuration': 'AttachmentConfiguration',
            'vpc_configuration': 'VpcConfiguration',
            'inclusion_patterns': 'InclusionPatterns',
            'exclusion_patterns': 'ExclusionPatterns',
            'proxy_configuration': 'ProxyConfiguration',
            'authentication_type': 'AuthenticationType'
        }

        self._server_url = server_url
        self._secret_arn = secret_arn
        self._version = version
        self._space_configuration = space_configuration
        self._page_configuration = page_configuration
        self._blog_configuration = blog_configuration
        self._attachment_configuration = attachment_configuration
        self._vpc_configuration = vpc_configuration
        self._inclusion_patterns = inclusion_patterns
        self._exclusion_patterns = exclusion_patterns
        self._proxy_configuration = proxy_configuration
        self._authentication_type = authentication_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceConfigurationConfluenceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceConfiguration_ConfluenceConfiguration of this DataSourceConfigurationConfluenceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_url(self):
        """Gets the server_url of this DataSourceConfigurationConfluenceConfiguration.


        :return: The server_url of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: str
        """
        return self._server_url

    @server_url.setter
    def server_url(self, server_url):
        """Sets the server_url of this DataSourceConfigurationConfluenceConfiguration.


        :param server_url: The server_url of this DataSourceConfigurationConfluenceConfiguration.
        :type server_url: str
        """
        if server_url is None:
            raise ValueError("Invalid value for `server_url`, must not be `None`")

        self._server_url = server_url

    @property
    def secret_arn(self):
        """Gets the secret_arn of this DataSourceConfigurationConfluenceConfiguration.


        :return: The secret_arn of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this DataSourceConfigurationConfluenceConfiguration.


        :param secret_arn: The secret_arn of this DataSourceConfigurationConfluenceConfiguration.
        :type secret_arn: str
        """
        if secret_arn is None:
            raise ValueError("Invalid value for `secret_arn`, must not be `None`")

        self._secret_arn = secret_arn

    @property
    def version(self):
        """Gets the version of this DataSourceConfigurationConfluenceConfiguration.


        :return: The version of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DataSourceConfigurationConfluenceConfiguration.


        :param version: The version of this DataSourceConfigurationConfluenceConfiguration.
        :type version: ConfluenceVersion
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def space_configuration(self):
        """Gets the space_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The space_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationSpaceConfiguration
        """
        return self._space_configuration

    @space_configuration.setter
    def space_configuration(self, space_configuration):
        """Sets the space_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param space_configuration: The space_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type space_configuration: ConfluenceConfigurationSpaceConfiguration
        """

        self._space_configuration = space_configuration

    @property
    def page_configuration(self):
        """Gets the page_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The page_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationPageConfiguration
        """
        return self._page_configuration

    @page_configuration.setter
    def page_configuration(self, page_configuration):
        """Sets the page_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param page_configuration: The page_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type page_configuration: ConfluenceConfigurationPageConfiguration
        """

        self._page_configuration = page_configuration

    @property
    def blog_configuration(self):
        """Gets the blog_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The blog_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationBlogConfiguration
        """
        return self._blog_configuration

    @blog_configuration.setter
    def blog_configuration(self, blog_configuration):
        """Sets the blog_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param blog_configuration: The blog_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type blog_configuration: ConfluenceConfigurationBlogConfiguration
        """

        self._blog_configuration = blog_configuration

    @property
    def attachment_configuration(self):
        """Gets the attachment_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The attachment_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationAttachmentConfiguration
        """
        return self._attachment_configuration

    @attachment_configuration.setter
    def attachment_configuration(self, attachment_configuration):
        """Sets the attachment_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param attachment_configuration: The attachment_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type attachment_configuration: ConfluenceConfigurationAttachmentConfiguration
        """

        self._attachment_configuration = attachment_configuration

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The vpc_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param vpc_configuration: The vpc_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type vpc_configuration: ConfluenceConfigurationVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration

    @property
    def inclusion_patterns(self):
        """Gets the inclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.


        :return: The inclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: List
        """
        return self._inclusion_patterns

    @inclusion_patterns.setter
    def inclusion_patterns(self, inclusion_patterns):
        """Sets the inclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.


        :param inclusion_patterns: The inclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :type inclusion_patterns: List
        """

        self._inclusion_patterns = inclusion_patterns

    @property
    def exclusion_patterns(self):
        """Gets the exclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.


        :return: The exclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: List
        """
        return self._exclusion_patterns

    @exclusion_patterns.setter
    def exclusion_patterns(self, exclusion_patterns):
        """Sets the exclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.


        :param exclusion_patterns: The exclusion_patterns of this DataSourceConfigurationConfluenceConfiguration.
        :type exclusion_patterns: List
        """

        self._exclusion_patterns = exclusion_patterns

    @property
    def proxy_configuration(self):
        """Gets the proxy_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :return: The proxy_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceConfigurationProxyConfiguration
        """
        return self._proxy_configuration

    @proxy_configuration.setter
    def proxy_configuration(self, proxy_configuration):
        """Sets the proxy_configuration of this DataSourceConfigurationConfluenceConfiguration.


        :param proxy_configuration: The proxy_configuration of this DataSourceConfigurationConfluenceConfiguration.
        :type proxy_configuration: ConfluenceConfigurationProxyConfiguration
        """

        self._proxy_configuration = proxy_configuration

    @property
    def authentication_type(self):
        """Gets the authentication_type of this DataSourceConfigurationConfluenceConfiguration.


        :return: The authentication_type of this DataSourceConfigurationConfluenceConfiguration.
        :rtype: ConfluenceAuthenticationType
        """
        return self._authentication_type

    @authentication_type.setter
    def authentication_type(self, authentication_type):
        """Sets the authentication_type of this DataSourceConfigurationConfluenceConfiguration.


        :param authentication_type: The authentication_type of this DataSourceConfigurationConfluenceConfiguration.
        :type authentication_type: ConfluenceAuthenticationType
        """

        self._authentication_type = authentication_type
