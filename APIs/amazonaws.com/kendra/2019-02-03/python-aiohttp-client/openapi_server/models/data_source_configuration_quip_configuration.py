# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quip_configuration_vpc_configuration import QuipConfigurationVpcConfiguration
from openapi_server import util


class DataSourceConfigurationQuipConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, secret_arn: str=None, crawl_file_comments: bool=None, crawl_chat_rooms: bool=None, crawl_attachments: bool=None, folder_ids: List=None, thread_field_mappings: List=None, message_field_mappings: List=None, attachment_field_mappings: List=None, inclusion_patterns: List=None, exclusion_patterns: List=None, vpc_configuration: QuipConfigurationVpcConfiguration=None):
        """DataSourceConfigurationQuipConfiguration - a model defined in OpenAPI

        :param domain: The domain of this DataSourceConfigurationQuipConfiguration.
        :param secret_arn: The secret_arn of this DataSourceConfigurationQuipConfiguration.
        :param crawl_file_comments: The crawl_file_comments of this DataSourceConfigurationQuipConfiguration.
        :param crawl_chat_rooms: The crawl_chat_rooms of this DataSourceConfigurationQuipConfiguration.
        :param crawl_attachments: The crawl_attachments of this DataSourceConfigurationQuipConfiguration.
        :param folder_ids: The folder_ids of this DataSourceConfigurationQuipConfiguration.
        :param thread_field_mappings: The thread_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :param message_field_mappings: The message_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :param attachment_field_mappings: The attachment_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :param inclusion_patterns: The inclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :param exclusion_patterns: The exclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :param vpc_configuration: The vpc_configuration of this DataSourceConfigurationQuipConfiguration.
        """
        self.openapi_types = {
            'domain': str,
            'secret_arn': str,
            'crawl_file_comments': bool,
            'crawl_chat_rooms': bool,
            'crawl_attachments': bool,
            'folder_ids': List,
            'thread_field_mappings': List,
            'message_field_mappings': List,
            'attachment_field_mappings': List,
            'inclusion_patterns': List,
            'exclusion_patterns': List,
            'vpc_configuration': QuipConfigurationVpcConfiguration
        }

        self.attribute_map = {
            'domain': 'Domain',
            'secret_arn': 'SecretArn',
            'crawl_file_comments': 'CrawlFileComments',
            'crawl_chat_rooms': 'CrawlChatRooms',
            'crawl_attachments': 'CrawlAttachments',
            'folder_ids': 'FolderIds',
            'thread_field_mappings': 'ThreadFieldMappings',
            'message_field_mappings': 'MessageFieldMappings',
            'attachment_field_mappings': 'AttachmentFieldMappings',
            'inclusion_patterns': 'InclusionPatterns',
            'exclusion_patterns': 'ExclusionPatterns',
            'vpc_configuration': 'VpcConfiguration'
        }

        self._domain = domain
        self._secret_arn = secret_arn
        self._crawl_file_comments = crawl_file_comments
        self._crawl_chat_rooms = crawl_chat_rooms
        self._crawl_attachments = crawl_attachments
        self._folder_ids = folder_ids
        self._thread_field_mappings = thread_field_mappings
        self._message_field_mappings = message_field_mappings
        self._attachment_field_mappings = attachment_field_mappings
        self._inclusion_patterns = inclusion_patterns
        self._exclusion_patterns = exclusion_patterns
        self._vpc_configuration = vpc_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceConfigurationQuipConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceConfiguration_QuipConfiguration of this DataSourceConfigurationQuipConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this DataSourceConfigurationQuipConfiguration.


        :return: The domain of this DataSourceConfigurationQuipConfiguration.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DataSourceConfigurationQuipConfiguration.


        :param domain: The domain of this DataSourceConfigurationQuipConfiguration.
        :type domain: str
        """
        if domain is None:
            raise ValueError("Invalid value for `domain`, must not be `None`")

        self._domain = domain

    @property
    def secret_arn(self):
        """Gets the secret_arn of this DataSourceConfigurationQuipConfiguration.


        :return: The secret_arn of this DataSourceConfigurationQuipConfiguration.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this DataSourceConfigurationQuipConfiguration.


        :param secret_arn: The secret_arn of this DataSourceConfigurationQuipConfiguration.
        :type secret_arn: str
        """
        if secret_arn is None:
            raise ValueError("Invalid value for `secret_arn`, must not be `None`")

        self._secret_arn = secret_arn

    @property
    def crawl_file_comments(self):
        """Gets the crawl_file_comments of this DataSourceConfigurationQuipConfiguration.


        :return: The crawl_file_comments of this DataSourceConfigurationQuipConfiguration.
        :rtype: bool
        """
        return self._crawl_file_comments

    @crawl_file_comments.setter
    def crawl_file_comments(self, crawl_file_comments):
        """Sets the crawl_file_comments of this DataSourceConfigurationQuipConfiguration.


        :param crawl_file_comments: The crawl_file_comments of this DataSourceConfigurationQuipConfiguration.
        :type crawl_file_comments: bool
        """

        self._crawl_file_comments = crawl_file_comments

    @property
    def crawl_chat_rooms(self):
        """Gets the crawl_chat_rooms of this DataSourceConfigurationQuipConfiguration.


        :return: The crawl_chat_rooms of this DataSourceConfigurationQuipConfiguration.
        :rtype: bool
        """
        return self._crawl_chat_rooms

    @crawl_chat_rooms.setter
    def crawl_chat_rooms(self, crawl_chat_rooms):
        """Sets the crawl_chat_rooms of this DataSourceConfigurationQuipConfiguration.


        :param crawl_chat_rooms: The crawl_chat_rooms of this DataSourceConfigurationQuipConfiguration.
        :type crawl_chat_rooms: bool
        """

        self._crawl_chat_rooms = crawl_chat_rooms

    @property
    def crawl_attachments(self):
        """Gets the crawl_attachments of this DataSourceConfigurationQuipConfiguration.


        :return: The crawl_attachments of this DataSourceConfigurationQuipConfiguration.
        :rtype: bool
        """
        return self._crawl_attachments

    @crawl_attachments.setter
    def crawl_attachments(self, crawl_attachments):
        """Sets the crawl_attachments of this DataSourceConfigurationQuipConfiguration.


        :param crawl_attachments: The crawl_attachments of this DataSourceConfigurationQuipConfiguration.
        :type crawl_attachments: bool
        """

        self._crawl_attachments = crawl_attachments

    @property
    def folder_ids(self):
        """Gets the folder_ids of this DataSourceConfigurationQuipConfiguration.


        :return: The folder_ids of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._folder_ids

    @folder_ids.setter
    def folder_ids(self, folder_ids):
        """Sets the folder_ids of this DataSourceConfigurationQuipConfiguration.


        :param folder_ids: The folder_ids of this DataSourceConfigurationQuipConfiguration.
        :type folder_ids: List
        """

        self._folder_ids = folder_ids

    @property
    def thread_field_mappings(self):
        """Gets the thread_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :return: The thread_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._thread_field_mappings

    @thread_field_mappings.setter
    def thread_field_mappings(self, thread_field_mappings):
        """Sets the thread_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :param thread_field_mappings: The thread_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :type thread_field_mappings: List
        """

        self._thread_field_mappings = thread_field_mappings

    @property
    def message_field_mappings(self):
        """Gets the message_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :return: The message_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._message_field_mappings

    @message_field_mappings.setter
    def message_field_mappings(self, message_field_mappings):
        """Sets the message_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :param message_field_mappings: The message_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :type message_field_mappings: List
        """

        self._message_field_mappings = message_field_mappings

    @property
    def attachment_field_mappings(self):
        """Gets the attachment_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :return: The attachment_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._attachment_field_mappings

    @attachment_field_mappings.setter
    def attachment_field_mappings(self, attachment_field_mappings):
        """Sets the attachment_field_mappings of this DataSourceConfigurationQuipConfiguration.


        :param attachment_field_mappings: The attachment_field_mappings of this DataSourceConfigurationQuipConfiguration.
        :type attachment_field_mappings: List
        """

        self._attachment_field_mappings = attachment_field_mappings

    @property
    def inclusion_patterns(self):
        """Gets the inclusion_patterns of this DataSourceConfigurationQuipConfiguration.


        :return: The inclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._inclusion_patterns

    @inclusion_patterns.setter
    def inclusion_patterns(self, inclusion_patterns):
        """Sets the inclusion_patterns of this DataSourceConfigurationQuipConfiguration.


        :param inclusion_patterns: The inclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :type inclusion_patterns: List
        """

        self._inclusion_patterns = inclusion_patterns

    @property
    def exclusion_patterns(self):
        """Gets the exclusion_patterns of this DataSourceConfigurationQuipConfiguration.


        :return: The exclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :rtype: List
        """
        return self._exclusion_patterns

    @exclusion_patterns.setter
    def exclusion_patterns(self, exclusion_patterns):
        """Sets the exclusion_patterns of this DataSourceConfigurationQuipConfiguration.


        :param exclusion_patterns: The exclusion_patterns of this DataSourceConfigurationQuipConfiguration.
        :type exclusion_patterns: List
        """

        self._exclusion_patterns = exclusion_patterns

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this DataSourceConfigurationQuipConfiguration.


        :return: The vpc_configuration of this DataSourceConfigurationQuipConfiguration.
        :rtype: QuipConfigurationVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this DataSourceConfigurationQuipConfiguration.


        :param vpc_configuration: The vpc_configuration of this DataSourceConfigurationQuipConfiguration.
        :type vpc_configuration: QuipConfigurationVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration
