# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_put_document_request_custom_document_enrichment_configuration import BatchPutDocumentRequestCustomDocumentEnrichmentConfiguration
from openapi_server import util


class BatchPutDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_id: str=None, role_arn: str=None, documents: List=None, custom_document_enrichment_configuration: BatchPutDocumentRequestCustomDocumentEnrichmentConfiguration=None):
        """BatchPutDocumentRequest - a model defined in OpenAPI

        :param index_id: The index_id of this BatchPutDocumentRequest.
        :param role_arn: The role_arn of this BatchPutDocumentRequest.
        :param documents: The documents of this BatchPutDocumentRequest.
        :param custom_document_enrichment_configuration: The custom_document_enrichment_configuration of this BatchPutDocumentRequest.
        """
        self.openapi_types = {
            'index_id': str,
            'role_arn': str,
            'documents': List,
            'custom_document_enrichment_configuration': BatchPutDocumentRequestCustomDocumentEnrichmentConfiguration
        }

        self.attribute_map = {
            'index_id': 'IndexId',
            'role_arn': 'RoleArn',
            'documents': 'Documents',
            'custom_document_enrichment_configuration': 'CustomDocumentEnrichmentConfiguration'
        }

        self._index_id = index_id
        self._role_arn = role_arn
        self._documents = documents
        self._custom_document_enrichment_configuration = custom_document_enrichment_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchPutDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchPutDocumentRequest of this BatchPutDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_id(self):
        """Gets the index_id of this BatchPutDocumentRequest.


        :return: The index_id of this BatchPutDocumentRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this BatchPutDocumentRequest.


        :param index_id: The index_id of this BatchPutDocumentRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def role_arn(self):
        """Gets the role_arn of this BatchPutDocumentRequest.


        :return: The role_arn of this BatchPutDocumentRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this BatchPutDocumentRequest.


        :param role_arn: The role_arn of this BatchPutDocumentRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def documents(self):
        """Gets the documents of this BatchPutDocumentRequest.


        :return: The documents of this BatchPutDocumentRequest.
        :rtype: List
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this BatchPutDocumentRequest.


        :param documents: The documents of this BatchPutDocumentRequest.
        :type documents: List
        """
        if documents is None:
            raise ValueError("Invalid value for `documents`, must not be `None`")

        self._documents = documents

    @property
    def custom_document_enrichment_configuration(self):
        """Gets the custom_document_enrichment_configuration of this BatchPutDocumentRequest.


        :return: The custom_document_enrichment_configuration of this BatchPutDocumentRequest.
        :rtype: BatchPutDocumentRequestCustomDocumentEnrichmentConfiguration
        """
        return self._custom_document_enrichment_configuration

    @custom_document_enrichment_configuration.setter
    def custom_document_enrichment_configuration(self, custom_document_enrichment_configuration):
        """Sets the custom_document_enrichment_configuration of this BatchPutDocumentRequest.


        :param custom_document_enrichment_configuration: The custom_document_enrichment_configuration of this BatchPutDocumentRequest.
        :type custom_document_enrichment_configuration: BatchPutDocumentRequestCustomDocumentEnrichmentConfiguration
        """

        self._custom_document_enrichment_configuration = custom_document_enrichment_configuration
