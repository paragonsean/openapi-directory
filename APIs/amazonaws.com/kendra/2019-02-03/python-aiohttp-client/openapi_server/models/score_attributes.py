# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.score_confidence import ScoreConfidence
from openapi_server import util


class ScoreAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, score_confidence: ScoreConfidence=None):
        """ScoreAttributes - a model defined in OpenAPI

        :param score_confidence: The score_confidence of this ScoreAttributes.
        """
        self.openapi_types = {
            'score_confidence': ScoreConfidence
        }

        self.attribute_map = {
            'score_confidence': 'ScoreConfidence'
        }

        self._score_confidence = score_confidence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoreAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoreAttributes of this ScoreAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def score_confidence(self):
        """Gets the score_confidence of this ScoreAttributes.


        :return: The score_confidence of this ScoreAttributes.
        :rtype: ScoreConfidence
        """
        return self._score_confidence

    @score_confidence.setter
    def score_confidence(self, score_confidence):
        """Sets the score_confidence of this ScoreAttributes.


        :param score_confidence: The score_confidence of this ScoreAttributes.
        :type score_confidence: ScoreConfidence
        """

        self._score_confidence = score_confidence
