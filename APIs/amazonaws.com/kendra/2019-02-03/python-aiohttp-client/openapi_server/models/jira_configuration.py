# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jira_configuration_vpc_configuration import JiraConfigurationVpcConfiguration
from openapi_server import util


class JiraConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jira_account_url: str=None, secret_arn: str=None, use_change_log: bool=None, project: List=None, issue_type: List=None, status: List=None, issue_sub_entity_filter: List=None, attachment_field_mappings: List=None, comment_field_mappings: List=None, issue_field_mappings: List=None, project_field_mappings: List=None, work_log_field_mappings: List=None, inclusion_patterns: List=None, exclusion_patterns: List=None, vpc_configuration: JiraConfigurationVpcConfiguration=None):
        """JiraConfiguration - a model defined in OpenAPI

        :param jira_account_url: The jira_account_url of this JiraConfiguration.
        :param secret_arn: The secret_arn of this JiraConfiguration.
        :param use_change_log: The use_change_log of this JiraConfiguration.
        :param project: The project of this JiraConfiguration.
        :param issue_type: The issue_type of this JiraConfiguration.
        :param status: The status of this JiraConfiguration.
        :param issue_sub_entity_filter: The issue_sub_entity_filter of this JiraConfiguration.
        :param attachment_field_mappings: The attachment_field_mappings of this JiraConfiguration.
        :param comment_field_mappings: The comment_field_mappings of this JiraConfiguration.
        :param issue_field_mappings: The issue_field_mappings of this JiraConfiguration.
        :param project_field_mappings: The project_field_mappings of this JiraConfiguration.
        :param work_log_field_mappings: The work_log_field_mappings of this JiraConfiguration.
        :param inclusion_patterns: The inclusion_patterns of this JiraConfiguration.
        :param exclusion_patterns: The exclusion_patterns of this JiraConfiguration.
        :param vpc_configuration: The vpc_configuration of this JiraConfiguration.
        """
        self.openapi_types = {
            'jira_account_url': str,
            'secret_arn': str,
            'use_change_log': bool,
            'project': List,
            'issue_type': List,
            'status': List,
            'issue_sub_entity_filter': List,
            'attachment_field_mappings': List,
            'comment_field_mappings': List,
            'issue_field_mappings': List,
            'project_field_mappings': List,
            'work_log_field_mappings': List,
            'inclusion_patterns': List,
            'exclusion_patterns': List,
            'vpc_configuration': JiraConfigurationVpcConfiguration
        }

        self.attribute_map = {
            'jira_account_url': 'JiraAccountUrl',
            'secret_arn': 'SecretArn',
            'use_change_log': 'UseChangeLog',
            'project': 'Project',
            'issue_type': 'IssueType',
            'status': 'Status',
            'issue_sub_entity_filter': 'IssueSubEntityFilter',
            'attachment_field_mappings': 'AttachmentFieldMappings',
            'comment_field_mappings': 'CommentFieldMappings',
            'issue_field_mappings': 'IssueFieldMappings',
            'project_field_mappings': 'ProjectFieldMappings',
            'work_log_field_mappings': 'WorkLogFieldMappings',
            'inclusion_patterns': 'InclusionPatterns',
            'exclusion_patterns': 'ExclusionPatterns',
            'vpc_configuration': 'VpcConfiguration'
        }

        self._jira_account_url = jira_account_url
        self._secret_arn = secret_arn
        self._use_change_log = use_change_log
        self._project = project
        self._issue_type = issue_type
        self._status = status
        self._issue_sub_entity_filter = issue_sub_entity_filter
        self._attachment_field_mappings = attachment_field_mappings
        self._comment_field_mappings = comment_field_mappings
        self._issue_field_mappings = issue_field_mappings
        self._project_field_mappings = project_field_mappings
        self._work_log_field_mappings = work_log_field_mappings
        self._inclusion_patterns = inclusion_patterns
        self._exclusion_patterns = exclusion_patterns
        self._vpc_configuration = vpc_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JiraConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JiraConfiguration of this JiraConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jira_account_url(self):
        """Gets the jira_account_url of this JiraConfiguration.


        :return: The jira_account_url of this JiraConfiguration.
        :rtype: str
        """
        return self._jira_account_url

    @jira_account_url.setter
    def jira_account_url(self, jira_account_url):
        """Sets the jira_account_url of this JiraConfiguration.


        :param jira_account_url: The jira_account_url of this JiraConfiguration.
        :type jira_account_url: str
        """
        if jira_account_url is None:
            raise ValueError("Invalid value for `jira_account_url`, must not be `None`")

        self._jira_account_url = jira_account_url

    @property
    def secret_arn(self):
        """Gets the secret_arn of this JiraConfiguration.


        :return: The secret_arn of this JiraConfiguration.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this JiraConfiguration.


        :param secret_arn: The secret_arn of this JiraConfiguration.
        :type secret_arn: str
        """
        if secret_arn is None:
            raise ValueError("Invalid value for `secret_arn`, must not be `None`")

        self._secret_arn = secret_arn

    @property
    def use_change_log(self):
        """Gets the use_change_log of this JiraConfiguration.


        :return: The use_change_log of this JiraConfiguration.
        :rtype: bool
        """
        return self._use_change_log

    @use_change_log.setter
    def use_change_log(self, use_change_log):
        """Sets the use_change_log of this JiraConfiguration.


        :param use_change_log: The use_change_log of this JiraConfiguration.
        :type use_change_log: bool
        """

        self._use_change_log = use_change_log

    @property
    def project(self):
        """Gets the project of this JiraConfiguration.


        :return: The project of this JiraConfiguration.
        :rtype: List
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this JiraConfiguration.


        :param project: The project of this JiraConfiguration.
        :type project: List
        """

        self._project = project

    @property
    def issue_type(self):
        """Gets the issue_type of this JiraConfiguration.


        :return: The issue_type of this JiraConfiguration.
        :rtype: List
        """
        return self._issue_type

    @issue_type.setter
    def issue_type(self, issue_type):
        """Sets the issue_type of this JiraConfiguration.


        :param issue_type: The issue_type of this JiraConfiguration.
        :type issue_type: List
        """

        self._issue_type = issue_type

    @property
    def status(self):
        """Gets the status of this JiraConfiguration.


        :return: The status of this JiraConfiguration.
        :rtype: List
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JiraConfiguration.


        :param status: The status of this JiraConfiguration.
        :type status: List
        """

        self._status = status

    @property
    def issue_sub_entity_filter(self):
        """Gets the issue_sub_entity_filter of this JiraConfiguration.


        :return: The issue_sub_entity_filter of this JiraConfiguration.
        :rtype: List
        """
        return self._issue_sub_entity_filter

    @issue_sub_entity_filter.setter
    def issue_sub_entity_filter(self, issue_sub_entity_filter):
        """Sets the issue_sub_entity_filter of this JiraConfiguration.


        :param issue_sub_entity_filter: The issue_sub_entity_filter of this JiraConfiguration.
        :type issue_sub_entity_filter: List
        """

        self._issue_sub_entity_filter = issue_sub_entity_filter

    @property
    def attachment_field_mappings(self):
        """Gets the attachment_field_mappings of this JiraConfiguration.


        :return: The attachment_field_mappings of this JiraConfiguration.
        :rtype: List
        """
        return self._attachment_field_mappings

    @attachment_field_mappings.setter
    def attachment_field_mappings(self, attachment_field_mappings):
        """Sets the attachment_field_mappings of this JiraConfiguration.


        :param attachment_field_mappings: The attachment_field_mappings of this JiraConfiguration.
        :type attachment_field_mappings: List
        """

        self._attachment_field_mappings = attachment_field_mappings

    @property
    def comment_field_mappings(self):
        """Gets the comment_field_mappings of this JiraConfiguration.


        :return: The comment_field_mappings of this JiraConfiguration.
        :rtype: List
        """
        return self._comment_field_mappings

    @comment_field_mappings.setter
    def comment_field_mappings(self, comment_field_mappings):
        """Sets the comment_field_mappings of this JiraConfiguration.


        :param comment_field_mappings: The comment_field_mappings of this JiraConfiguration.
        :type comment_field_mappings: List
        """

        self._comment_field_mappings = comment_field_mappings

    @property
    def issue_field_mappings(self):
        """Gets the issue_field_mappings of this JiraConfiguration.


        :return: The issue_field_mappings of this JiraConfiguration.
        :rtype: List
        """
        return self._issue_field_mappings

    @issue_field_mappings.setter
    def issue_field_mappings(self, issue_field_mappings):
        """Sets the issue_field_mappings of this JiraConfiguration.


        :param issue_field_mappings: The issue_field_mappings of this JiraConfiguration.
        :type issue_field_mappings: List
        """

        self._issue_field_mappings = issue_field_mappings

    @property
    def project_field_mappings(self):
        """Gets the project_field_mappings of this JiraConfiguration.


        :return: The project_field_mappings of this JiraConfiguration.
        :rtype: List
        """
        return self._project_field_mappings

    @project_field_mappings.setter
    def project_field_mappings(self, project_field_mappings):
        """Sets the project_field_mappings of this JiraConfiguration.


        :param project_field_mappings: The project_field_mappings of this JiraConfiguration.
        :type project_field_mappings: List
        """

        self._project_field_mappings = project_field_mappings

    @property
    def work_log_field_mappings(self):
        """Gets the work_log_field_mappings of this JiraConfiguration.


        :return: The work_log_field_mappings of this JiraConfiguration.
        :rtype: List
        """
        return self._work_log_field_mappings

    @work_log_field_mappings.setter
    def work_log_field_mappings(self, work_log_field_mappings):
        """Sets the work_log_field_mappings of this JiraConfiguration.


        :param work_log_field_mappings: The work_log_field_mappings of this JiraConfiguration.
        :type work_log_field_mappings: List
        """

        self._work_log_field_mappings = work_log_field_mappings

    @property
    def inclusion_patterns(self):
        """Gets the inclusion_patterns of this JiraConfiguration.


        :return: The inclusion_patterns of this JiraConfiguration.
        :rtype: List
        """
        return self._inclusion_patterns

    @inclusion_patterns.setter
    def inclusion_patterns(self, inclusion_patterns):
        """Sets the inclusion_patterns of this JiraConfiguration.


        :param inclusion_patterns: The inclusion_patterns of this JiraConfiguration.
        :type inclusion_patterns: List
        """

        self._inclusion_patterns = inclusion_patterns

    @property
    def exclusion_patterns(self):
        """Gets the exclusion_patterns of this JiraConfiguration.


        :return: The exclusion_patterns of this JiraConfiguration.
        :rtype: List
        """
        return self._exclusion_patterns

    @exclusion_patterns.setter
    def exclusion_patterns(self, exclusion_patterns):
        """Sets the exclusion_patterns of this JiraConfiguration.


        :param exclusion_patterns: The exclusion_patterns of this JiraConfiguration.
        :type exclusion_patterns: List
        """

        self._exclusion_patterns = exclusion_patterns

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this JiraConfiguration.


        :return: The vpc_configuration of this JiraConfiguration.
        :rtype: JiraConfigurationVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this JiraConfiguration.


        :param vpc_configuration: The vpc_configuration of this JiraConfiguration.
        :type vpc_configuration: JiraConfigurationVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration
