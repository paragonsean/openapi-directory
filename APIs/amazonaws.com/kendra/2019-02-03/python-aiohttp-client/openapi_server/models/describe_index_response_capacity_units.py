# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeIndexResponseCapacityUnits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_capacity_units: int=None, query_capacity_units: int=None):
        """DescribeIndexResponseCapacityUnits - a model defined in OpenAPI

        :param storage_capacity_units: The storage_capacity_units of this DescribeIndexResponseCapacityUnits.
        :param query_capacity_units: The query_capacity_units of this DescribeIndexResponseCapacityUnits.
        """
        self.openapi_types = {
            'storage_capacity_units': int,
            'query_capacity_units': int
        }

        self.attribute_map = {
            'storage_capacity_units': 'StorageCapacityUnits',
            'query_capacity_units': 'QueryCapacityUnits'
        }

        self._storage_capacity_units = storage_capacity_units
        self._query_capacity_units = query_capacity_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeIndexResponseCapacityUnits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeIndexResponse_CapacityUnits of this DescribeIndexResponseCapacityUnits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_capacity_units(self):
        """Gets the storage_capacity_units of this DescribeIndexResponseCapacityUnits.


        :return: The storage_capacity_units of this DescribeIndexResponseCapacityUnits.
        :rtype: int
        """
        return self._storage_capacity_units

    @storage_capacity_units.setter
    def storage_capacity_units(self, storage_capacity_units):
        """Sets the storage_capacity_units of this DescribeIndexResponseCapacityUnits.


        :param storage_capacity_units: The storage_capacity_units of this DescribeIndexResponseCapacityUnits.
        :type storage_capacity_units: int
        """
        if storage_capacity_units is None:
            raise ValueError("Invalid value for `storage_capacity_units`, must not be `None`")

        self._storage_capacity_units = storage_capacity_units

    @property
    def query_capacity_units(self):
        """Gets the query_capacity_units of this DescribeIndexResponseCapacityUnits.


        :return: The query_capacity_units of this DescribeIndexResponseCapacityUnits.
        :rtype: int
        """
        return self._query_capacity_units

    @query_capacity_units.setter
    def query_capacity_units(self, query_capacity_units):
        """Sets the query_capacity_units of this DescribeIndexResponseCapacityUnits.


        :param query_capacity_units: The query_capacity_units of this DescribeIndexResponseCapacityUnits.
        :type query_capacity_units: int
        """
        if query_capacity_units is None:
            raise ValueError("Invalid value for `query_capacity_units`, must not be `None`")

        self._query_capacity_units = query_capacity_units
