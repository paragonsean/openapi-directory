# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_path import S3Path
from openapi_server import util


class UpdateThesaurusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, index_id: str=None, description: str=None, role_arn: str=None, source_s3_path: S3Path=None):
        """UpdateThesaurusRequest - a model defined in OpenAPI

        :param id: The id of this UpdateThesaurusRequest.
        :param name: The name of this UpdateThesaurusRequest.
        :param index_id: The index_id of this UpdateThesaurusRequest.
        :param description: The description of this UpdateThesaurusRequest.
        :param role_arn: The role_arn of this UpdateThesaurusRequest.
        :param source_s3_path: The source_s3_path of this UpdateThesaurusRequest.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'index_id': str,
            'description': str,
            'role_arn': str,
            'source_s3_path': S3Path
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'index_id': 'IndexId',
            'description': 'Description',
            'role_arn': 'RoleArn',
            'source_s3_path': 'SourceS3Path'
        }

        self._id = id
        self._name = name
        self._index_id = index_id
        self._description = description
        self._role_arn = role_arn
        self._source_s3_path = source_s3_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateThesaurusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateThesaurusRequest of this UpdateThesaurusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateThesaurusRequest.


        :return: The id of this UpdateThesaurusRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateThesaurusRequest.


        :param id: The id of this UpdateThesaurusRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateThesaurusRequest.


        :return: The name of this UpdateThesaurusRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateThesaurusRequest.


        :param name: The name of this UpdateThesaurusRequest.
        :type name: str
        """

        self._name = name

    @property
    def index_id(self):
        """Gets the index_id of this UpdateThesaurusRequest.


        :return: The index_id of this UpdateThesaurusRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this UpdateThesaurusRequest.


        :param index_id: The index_id of this UpdateThesaurusRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def description(self):
        """Gets the description of this UpdateThesaurusRequest.


        :return: The description of this UpdateThesaurusRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateThesaurusRequest.


        :param description: The description of this UpdateThesaurusRequest.
        :type description: str
        """

        self._description = description

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateThesaurusRequest.


        :return: The role_arn of this UpdateThesaurusRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateThesaurusRequest.


        :param role_arn: The role_arn of this UpdateThesaurusRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def source_s3_path(self):
        """Gets the source_s3_path of this UpdateThesaurusRequest.


        :return: The source_s3_path of this UpdateThesaurusRequest.
        :rtype: S3Path
        """
        return self._source_s3_path

    @source_s3_path.setter
    def source_s3_path(self, source_s3_path):
        """Sets the source_s3_path of this UpdateThesaurusRequest.


        :param source_s3_path: The source_s3_path of this UpdateThesaurusRequest.
        :type source_s3_path: S3Path
        """

        self._source_s3_path = source_s3_path
