# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_attribute_value_type import DocumentAttributeValueType
from openapi_server import util


class FacetResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_attribute_key: str=None, document_attribute_value_type: DocumentAttributeValueType=None, document_attribute_value_count_pairs: List=None):
        """FacetResult - a model defined in OpenAPI

        :param document_attribute_key: The document_attribute_key of this FacetResult.
        :param document_attribute_value_type: The document_attribute_value_type of this FacetResult.
        :param document_attribute_value_count_pairs: The document_attribute_value_count_pairs of this FacetResult.
        """
        self.openapi_types = {
            'document_attribute_key': str,
            'document_attribute_value_type': DocumentAttributeValueType,
            'document_attribute_value_count_pairs': List
        }

        self.attribute_map = {
            'document_attribute_key': 'DocumentAttributeKey',
            'document_attribute_value_type': 'DocumentAttributeValueType',
            'document_attribute_value_count_pairs': 'DocumentAttributeValueCountPairs'
        }

        self._document_attribute_key = document_attribute_key
        self._document_attribute_value_type = document_attribute_value_type
        self._document_attribute_value_count_pairs = document_attribute_value_count_pairs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FacetResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FacetResult of this FacetResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_attribute_key(self):
        """Gets the document_attribute_key of this FacetResult.


        :return: The document_attribute_key of this FacetResult.
        :rtype: str
        """
        return self._document_attribute_key

    @document_attribute_key.setter
    def document_attribute_key(self, document_attribute_key):
        """Sets the document_attribute_key of this FacetResult.


        :param document_attribute_key: The document_attribute_key of this FacetResult.
        :type document_attribute_key: str
        """

        self._document_attribute_key = document_attribute_key

    @property
    def document_attribute_value_type(self):
        """Gets the document_attribute_value_type of this FacetResult.


        :return: The document_attribute_value_type of this FacetResult.
        :rtype: DocumentAttributeValueType
        """
        return self._document_attribute_value_type

    @document_attribute_value_type.setter
    def document_attribute_value_type(self, document_attribute_value_type):
        """Sets the document_attribute_value_type of this FacetResult.


        :param document_attribute_value_type: The document_attribute_value_type of this FacetResult.
        :type document_attribute_value_type: DocumentAttributeValueType
        """

        self._document_attribute_value_type = document_attribute_value_type

    @property
    def document_attribute_value_count_pairs(self):
        """Gets the document_attribute_value_count_pairs of this FacetResult.


        :return: The document_attribute_value_count_pairs of this FacetResult.
        :rtype: List
        """
        return self._document_attribute_value_count_pairs

    @document_attribute_value_count_pairs.setter
    def document_attribute_value_count_pairs(self, document_attribute_value_count_pairs):
        """Sets the document_attribute_value_count_pairs of this FacetResult.


        :param document_attribute_value_count_pairs: The document_attribute_value_count_pairs of this FacetResult.
        :type document_attribute_value_count_pairs: List
        """

        self._document_attribute_value_count_pairs = document_attribute_value_count_pairs
