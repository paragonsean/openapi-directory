# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryResultItemTableExcerpt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rows: List=None, total_number_of_rows: int=None):
        """QueryResultItemTableExcerpt - a model defined in OpenAPI

        :param rows: The rows of this QueryResultItemTableExcerpt.
        :param total_number_of_rows: The total_number_of_rows of this QueryResultItemTableExcerpt.
        """
        self.openapi_types = {
            'rows': List,
            'total_number_of_rows': int
        }

        self.attribute_map = {
            'rows': 'Rows',
            'total_number_of_rows': 'TotalNumberOfRows'
        }

        self._rows = rows
        self._total_number_of_rows = total_number_of_rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryResultItemTableExcerpt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryResultItem_TableExcerpt of this QueryResultItemTableExcerpt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rows(self):
        """Gets the rows of this QueryResultItemTableExcerpt.


        :return: The rows of this QueryResultItemTableExcerpt.
        :rtype: List
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this QueryResultItemTableExcerpt.


        :param rows: The rows of this QueryResultItemTableExcerpt.
        :type rows: List
        """

        self._rows = rows

    @property
    def total_number_of_rows(self):
        """Gets the total_number_of_rows of this QueryResultItemTableExcerpt.


        :return: The total_number_of_rows of this QueryResultItemTableExcerpt.
        :rtype: int
        """
        return self._total_number_of_rows

    @total_number_of_rows.setter
    def total_number_of_rows(self, total_number_of_rows):
        """Sets the total_number_of_rows of this QueryResultItemTableExcerpt.


        :param total_number_of_rows: The total_number_of_rows of this QueryResultItemTableExcerpt.
        :type total_number_of_rows: int
        """

        self._total_number_of_rows = total_number_of_rows
