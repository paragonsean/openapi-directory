# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class QueryRequestSortingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_attribute_key: str=None, sort_order: SortOrder=None):
        """QueryRequestSortingConfiguration - a model defined in OpenAPI

        :param document_attribute_key: The document_attribute_key of this QueryRequestSortingConfiguration.
        :param sort_order: The sort_order of this QueryRequestSortingConfiguration.
        """
        self.openapi_types = {
            'document_attribute_key': str,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'document_attribute_key': 'DocumentAttributeKey',
            'sort_order': 'SortOrder'
        }

        self._document_attribute_key = document_attribute_key
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryRequestSortingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryRequest_SortingConfiguration of this QueryRequestSortingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_attribute_key(self):
        """Gets the document_attribute_key of this QueryRequestSortingConfiguration.


        :return: The document_attribute_key of this QueryRequestSortingConfiguration.
        :rtype: str
        """
        return self._document_attribute_key

    @document_attribute_key.setter
    def document_attribute_key(self, document_attribute_key):
        """Sets the document_attribute_key of this QueryRequestSortingConfiguration.


        :param document_attribute_key: The document_attribute_key of this QueryRequestSortingConfiguration.
        :type document_attribute_key: str
        """
        if document_attribute_key is None:
            raise ValueError("Invalid value for `document_attribute_key`, must not be `None`")

        self._document_attribute_key = document_attribute_key

    @property
    def sort_order(self):
        """Gets the sort_order of this QueryRequestSortingConfiguration.


        :return: The sort_order of this QueryRequestSortingConfiguration.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this QueryRequestSortingConfiguration.


        :param sort_order: The sort_order of this QueryRequestSortingConfiguration.
        :type sort_order: SortOrder
        """
        if sort_order is None:
            raise ValueError("Invalid value for `sort_order`, must not be `None`")

        self._sort_order = sort_order
