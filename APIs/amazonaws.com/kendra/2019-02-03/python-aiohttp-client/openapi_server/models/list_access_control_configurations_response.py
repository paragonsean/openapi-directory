# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAccessControlConfigurationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, access_control_configurations: List=None):
        """ListAccessControlConfigurationsResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListAccessControlConfigurationsResponse.
        :param access_control_configurations: The access_control_configurations of this ListAccessControlConfigurationsResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'access_control_configurations': List
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'access_control_configurations': 'AccessControlConfigurations'
        }

        self._next_token = next_token
        self._access_control_configurations = access_control_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAccessControlConfigurationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAccessControlConfigurationsResponse of this ListAccessControlConfigurationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListAccessControlConfigurationsResponse.


        :return: The next_token of this ListAccessControlConfigurationsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListAccessControlConfigurationsResponse.


        :param next_token: The next_token of this ListAccessControlConfigurationsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def access_control_configurations(self):
        """Gets the access_control_configurations of this ListAccessControlConfigurationsResponse.


        :return: The access_control_configurations of this ListAccessControlConfigurationsResponse.
        :rtype: List
        """
        return self._access_control_configurations

    @access_control_configurations.setter
    def access_control_configurations(self, access_control_configurations):
        """Sets the access_control_configurations of this ListAccessControlConfigurationsResponse.


        :param access_control_configurations: The access_control_configurations of this ListAccessControlConfigurationsResponse.
        :type access_control_configurations: List
        """
        if access_control_configurations is None:
            raise ValueError("Invalid value for `access_control_configurations`, must not be `None`")

        self._access_control_configurations = access_control_configurations
