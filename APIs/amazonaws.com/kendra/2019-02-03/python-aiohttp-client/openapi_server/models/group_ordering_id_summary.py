# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.principal_mapping_status import PrincipalMappingStatus
from openapi_server import util


class GroupOrderingIdSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: PrincipalMappingStatus=None, last_updated_at: datetime=None, received_at: datetime=None, ordering_id: int=None, failure_reason: str=None):
        """GroupOrderingIdSummary - a model defined in OpenAPI

        :param status: The status of this GroupOrderingIdSummary.
        :param last_updated_at: The last_updated_at of this GroupOrderingIdSummary.
        :param received_at: The received_at of this GroupOrderingIdSummary.
        :param ordering_id: The ordering_id of this GroupOrderingIdSummary.
        :param failure_reason: The failure_reason of this GroupOrderingIdSummary.
        """
        self.openapi_types = {
            'status': PrincipalMappingStatus,
            'last_updated_at': datetime,
            'received_at': datetime,
            'ordering_id': int,
            'failure_reason': str
        }

        self.attribute_map = {
            'status': 'Status',
            'last_updated_at': 'LastUpdatedAt',
            'received_at': 'ReceivedAt',
            'ordering_id': 'OrderingId',
            'failure_reason': 'FailureReason'
        }

        self._status = status
        self._last_updated_at = last_updated_at
        self._received_at = received_at
        self._ordering_id = ordering_id
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupOrderingIdSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupOrderingIdSummary of this GroupOrderingIdSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this GroupOrderingIdSummary.


        :return: The status of this GroupOrderingIdSummary.
        :rtype: PrincipalMappingStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GroupOrderingIdSummary.


        :param status: The status of this GroupOrderingIdSummary.
        :type status: PrincipalMappingStatus
        """

        self._status = status

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this GroupOrderingIdSummary.


        :return: The last_updated_at of this GroupOrderingIdSummary.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this GroupOrderingIdSummary.


        :param last_updated_at: The last_updated_at of this GroupOrderingIdSummary.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def received_at(self):
        """Gets the received_at of this GroupOrderingIdSummary.


        :return: The received_at of this GroupOrderingIdSummary.
        :rtype: datetime
        """
        return self._received_at

    @received_at.setter
    def received_at(self, received_at):
        """Sets the received_at of this GroupOrderingIdSummary.


        :param received_at: The received_at of this GroupOrderingIdSummary.
        :type received_at: datetime
        """

        self._received_at = received_at

    @property
    def ordering_id(self):
        """Gets the ordering_id of this GroupOrderingIdSummary.


        :return: The ordering_id of this GroupOrderingIdSummary.
        :rtype: int
        """
        return self._ordering_id

    @ordering_id.setter
    def ordering_id(self, ordering_id):
        """Sets the ordering_id of this GroupOrderingIdSummary.


        :param ordering_id: The ordering_id of this GroupOrderingIdSummary.
        :type ordering_id: int
        """

        self._ordering_id = ordering_id

    @property
    def failure_reason(self):
        """Gets the failure_reason of this GroupOrderingIdSummary.


        :return: The failure_reason of this GroupOrderingIdSummary.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this GroupOrderingIdSummary.


        :param failure_reason: The failure_reason of this GroupOrderingIdSummary.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
