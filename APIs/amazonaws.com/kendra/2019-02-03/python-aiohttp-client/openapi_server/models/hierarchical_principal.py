# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HierarchicalPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal_list: List=None):
        """HierarchicalPrincipal - a model defined in OpenAPI

        :param principal_list: The principal_list of this HierarchicalPrincipal.
        """
        self.openapi_types = {
            'principal_list': List
        }

        self.attribute_map = {
            'principal_list': 'PrincipalList'
        }

        self._principal_list = principal_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HierarchicalPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HierarchicalPrincipal of this HierarchicalPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal_list(self):
        """Gets the principal_list of this HierarchicalPrincipal.


        :return: The principal_list of this HierarchicalPrincipal.
        :rtype: List
        """
        return self._principal_list

    @principal_list.setter
    def principal_list(self, principal_list):
        """Sets the principal_list of this HierarchicalPrincipal.


        :param principal_list: The principal_list of this HierarchicalPrincipal.
        :type principal_list: List
        """
        if principal_list is None:
            raise ValueError("Invalid value for `principal_list`, must not be `None`")

        self._principal_list = principal_list
