# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletePrincipalMappingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_id: str=None, data_source_id: str=None, group_id: str=None, ordering_id: int=None):
        """DeletePrincipalMappingRequest - a model defined in OpenAPI

        :param index_id: The index_id of this DeletePrincipalMappingRequest.
        :param data_source_id: The data_source_id of this DeletePrincipalMappingRequest.
        :param group_id: The group_id of this DeletePrincipalMappingRequest.
        :param ordering_id: The ordering_id of this DeletePrincipalMappingRequest.
        """
        self.openapi_types = {
            'index_id': str,
            'data_source_id': str,
            'group_id': str,
            'ordering_id': int
        }

        self.attribute_map = {
            'index_id': 'IndexId',
            'data_source_id': 'DataSourceId',
            'group_id': 'GroupId',
            'ordering_id': 'OrderingId'
        }

        self._index_id = index_id
        self._data_source_id = data_source_id
        self._group_id = group_id
        self._ordering_id = ordering_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletePrincipalMappingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletePrincipalMappingRequest of this DeletePrincipalMappingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_id(self):
        """Gets the index_id of this DeletePrincipalMappingRequest.


        :return: The index_id of this DeletePrincipalMappingRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this DeletePrincipalMappingRequest.


        :param index_id: The index_id of this DeletePrincipalMappingRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def data_source_id(self):
        """Gets the data_source_id of this DeletePrincipalMappingRequest.


        :return: The data_source_id of this DeletePrincipalMappingRequest.
        :rtype: str
        """
        return self._data_source_id

    @data_source_id.setter
    def data_source_id(self, data_source_id):
        """Sets the data_source_id of this DeletePrincipalMappingRequest.


        :param data_source_id: The data_source_id of this DeletePrincipalMappingRequest.
        :type data_source_id: str
        """

        self._data_source_id = data_source_id

    @property
    def group_id(self):
        """Gets the group_id of this DeletePrincipalMappingRequest.


        :return: The group_id of this DeletePrincipalMappingRequest.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this DeletePrincipalMappingRequest.


        :param group_id: The group_id of this DeletePrincipalMappingRequest.
        :type group_id: str
        """
        if group_id is None:
            raise ValueError("Invalid value for `group_id`, must not be `None`")

        self._group_id = group_id

    @property
    def ordering_id(self):
        """Gets the ordering_id of this DeletePrincipalMappingRequest.


        :return: The ordering_id of this DeletePrincipalMappingRequest.
        :rtype: int
        """
        return self._ordering_id

    @ordering_id.setter
    def ordering_id(self, ordering_id):
        """Sets the ordering_id of this DeletePrincipalMappingRequest.


        :param ordering_id: The ordering_id of this DeletePrincipalMappingRequest.
        :type ordering_id: int
        """

        self._ordering_id = ordering_id
