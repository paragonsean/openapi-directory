# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_data_source_request_configuration import CreateDataSourceRequestConfiguration
from openapi_server.models.create_data_source_request_custom_document_enrichment_configuration import CreateDataSourceRequestCustomDocumentEnrichmentConfiguration
from openapi_server.models.create_data_source_request_vpc_configuration import CreateDataSourceRequestVpcConfiguration
from openapi_server.models.data_source_type import DataSourceType
from openapi_server import util


class CreateDataSourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, index_id: str=None, type: DataSourceType=None, configuration: CreateDataSourceRequestConfiguration=None, vpc_configuration: CreateDataSourceRequestVpcConfiguration=None, description: str=None, schedule: str=None, role_arn: str=None, tags: List=None, client_token: str=None, language_code: str=None, custom_document_enrichment_configuration: CreateDataSourceRequestCustomDocumentEnrichmentConfiguration=None):
        """CreateDataSourceRequest - a model defined in OpenAPI

        :param name: The name of this CreateDataSourceRequest.
        :param index_id: The index_id of this CreateDataSourceRequest.
        :param type: The type of this CreateDataSourceRequest.
        :param configuration: The configuration of this CreateDataSourceRequest.
        :param vpc_configuration: The vpc_configuration of this CreateDataSourceRequest.
        :param description: The description of this CreateDataSourceRequest.
        :param schedule: The schedule of this CreateDataSourceRequest.
        :param role_arn: The role_arn of this CreateDataSourceRequest.
        :param tags: The tags of this CreateDataSourceRequest.
        :param client_token: The client_token of this CreateDataSourceRequest.
        :param language_code: The language_code of this CreateDataSourceRequest.
        :param custom_document_enrichment_configuration: The custom_document_enrichment_configuration of this CreateDataSourceRequest.
        """
        self.openapi_types = {
            'name': str,
            'index_id': str,
            'type': DataSourceType,
            'configuration': CreateDataSourceRequestConfiguration,
            'vpc_configuration': CreateDataSourceRequestVpcConfiguration,
            'description': str,
            'schedule': str,
            'role_arn': str,
            'tags': List,
            'client_token': str,
            'language_code': str,
            'custom_document_enrichment_configuration': CreateDataSourceRequestCustomDocumentEnrichmentConfiguration
        }

        self.attribute_map = {
            'name': 'Name',
            'index_id': 'IndexId',
            'type': 'Type',
            'configuration': 'Configuration',
            'vpc_configuration': 'VpcConfiguration',
            'description': 'Description',
            'schedule': 'Schedule',
            'role_arn': 'RoleArn',
            'tags': 'Tags',
            'client_token': 'ClientToken',
            'language_code': 'LanguageCode',
            'custom_document_enrichment_configuration': 'CustomDocumentEnrichmentConfiguration'
        }

        self._name = name
        self._index_id = index_id
        self._type = type
        self._configuration = configuration
        self._vpc_configuration = vpc_configuration
        self._description = description
        self._schedule = schedule
        self._role_arn = role_arn
        self._tags = tags
        self._client_token = client_token
        self._language_code = language_code
        self._custom_document_enrichment_configuration = custom_document_enrichment_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDataSourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDataSourceRequest of this CreateDataSourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateDataSourceRequest.


        :return: The name of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateDataSourceRequest.


        :param name: The name of this CreateDataSourceRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def index_id(self):
        """Gets the index_id of this CreateDataSourceRequest.


        :return: The index_id of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this CreateDataSourceRequest.


        :param index_id: The index_id of this CreateDataSourceRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def type(self):
        """Gets the type of this CreateDataSourceRequest.


        :return: The type of this CreateDataSourceRequest.
        :rtype: DataSourceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CreateDataSourceRequest.


        :param type: The type of this CreateDataSourceRequest.
        :type type: DataSourceType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def configuration(self):
        """Gets the configuration of this CreateDataSourceRequest.


        :return: The configuration of this CreateDataSourceRequest.
        :rtype: CreateDataSourceRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this CreateDataSourceRequest.


        :param configuration: The configuration of this CreateDataSourceRequest.
        :type configuration: CreateDataSourceRequestConfiguration
        """

        self._configuration = configuration

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this CreateDataSourceRequest.


        :return: The vpc_configuration of this CreateDataSourceRequest.
        :rtype: CreateDataSourceRequestVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this CreateDataSourceRequest.


        :param vpc_configuration: The vpc_configuration of this CreateDataSourceRequest.
        :type vpc_configuration: CreateDataSourceRequestVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration

    @property
    def description(self):
        """Gets the description of this CreateDataSourceRequest.


        :return: The description of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateDataSourceRequest.


        :param description: The description of this CreateDataSourceRequest.
        :type description: str
        """

        self._description = description

    @property
    def schedule(self):
        """Gets the schedule of this CreateDataSourceRequest.


        :return: The schedule of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this CreateDataSourceRequest.


        :param schedule: The schedule of this CreateDataSourceRequest.
        :type schedule: str
        """

        self._schedule = schedule

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateDataSourceRequest.


        :return: The role_arn of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateDataSourceRequest.


        :param role_arn: The role_arn of this CreateDataSourceRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreateDataSourceRequest.


        :return: The tags of this CreateDataSourceRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateDataSourceRequest.


        :param tags: The tags of this CreateDataSourceRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def client_token(self):
        """Gets the client_token of this CreateDataSourceRequest.


        :return: The client_token of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateDataSourceRequest.


        :param client_token: The client_token of this CreateDataSourceRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def language_code(self):
        """Gets the language_code of this CreateDataSourceRequest.


        :return: The language_code of this CreateDataSourceRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this CreateDataSourceRequest.


        :param language_code: The language_code of this CreateDataSourceRequest.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def custom_document_enrichment_configuration(self):
        """Gets the custom_document_enrichment_configuration of this CreateDataSourceRequest.


        :return: The custom_document_enrichment_configuration of this CreateDataSourceRequest.
        :rtype: CreateDataSourceRequestCustomDocumentEnrichmentConfiguration
        """
        return self._custom_document_enrichment_configuration

    @custom_document_enrichment_configuration.setter
    def custom_document_enrichment_configuration(self, custom_document_enrichment_configuration):
        """Sets the custom_document_enrichment_configuration of this CreateDataSourceRequest.


        :param custom_document_enrichment_configuration: The custom_document_enrichment_configuration of this CreateDataSourceRequest.
        :type custom_document_enrichment_configuration: CreateDataSourceRequestCustomDocumentEnrichmentConfiguration
        """

        self._custom_document_enrichment_configuration = custom_document_enrichment_configuration
