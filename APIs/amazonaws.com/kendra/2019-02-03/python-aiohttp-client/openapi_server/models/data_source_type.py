# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSourceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    S3 = 'S3'
    SHAREPOINT = 'SHAREPOINT'
    DATABASE = 'DATABASE'
    SALESFORCE = 'SALESFORCE'
    ONEDRIVE = 'ONEDRIVE'
    SERVICENOW = 'SERVICENOW'
    CUSTOM = 'CUSTOM'
    CONFLUENCE = 'CONFLUENCE'
    GOOGLEDRIVE = 'GOOGLEDRIVE'
    WEBCRAWLER = 'WEBCRAWLER'
    WORKDOCS = 'WORKDOCS'
    FSX = 'FSX'
    SLACK = 'SLACK'
    BOX = 'BOX'
    QUIP = 'QUIP'
    JIRA = 'JIRA'
    GITHUB = 'GITHUB'
    ALFRESCO = 'ALFRESCO'
    TEMPLATE = 'TEMPLATE'

    def __init__(self):
        """DataSourceType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceType of this DataSourceType.
        """
        return util.deserialize_model(dikt, cls)
