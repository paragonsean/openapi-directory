# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_filter_contains_all import AttributeFilterContainsAll
from openapi_server.models.attribute_filter_contains_any import AttributeFilterContainsAny
from openapi_server.models.attribute_filter_equals_to import AttributeFilterEqualsTo
from openapi_server.models.attribute_filter_greater_than import AttributeFilterGreaterThan
from openapi_server.models.attribute_filter_greater_than_or_equals import AttributeFilterGreaterThanOrEquals
from openapi_server.models.attribute_filter_less_than import AttributeFilterLessThan
from openapi_server.models.attribute_filter_less_than_or_equals import AttributeFilterLessThanOrEquals
from openapi_server.models.attribute_filter_not_filter import AttributeFilterNotFilter
from openapi_server import util


class AttributeSuggestionsGetConfigAttributeFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, and_all_filters: List=None, or_all_filters: List=None, not_filter: AttributeFilterNotFilter=None, equals_to: AttributeFilterEqualsTo=None, contains_all: AttributeFilterContainsAll=None, contains_any: AttributeFilterContainsAny=None, greater_than: AttributeFilterGreaterThan=None, greater_than_or_equals: AttributeFilterGreaterThanOrEquals=None, less_than: AttributeFilterLessThan=None, less_than_or_equals: AttributeFilterLessThanOrEquals=None):
        """AttributeSuggestionsGetConfigAttributeFilter - a model defined in OpenAPI

        :param and_all_filters: The and_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :param or_all_filters: The or_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :param not_filter: The not_filter of this AttributeSuggestionsGetConfigAttributeFilter.
        :param equals_to: The equals_to of this AttributeSuggestionsGetConfigAttributeFilter.
        :param contains_all: The contains_all of this AttributeSuggestionsGetConfigAttributeFilter.
        :param contains_any: The contains_any of this AttributeSuggestionsGetConfigAttributeFilter.
        :param greater_than: The greater_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :param greater_than_or_equals: The greater_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        :param less_than: The less_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :param less_than_or_equals: The less_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        """
        self.openapi_types = {
            'and_all_filters': List,
            'or_all_filters': List,
            'not_filter': AttributeFilterNotFilter,
            'equals_to': AttributeFilterEqualsTo,
            'contains_all': AttributeFilterContainsAll,
            'contains_any': AttributeFilterContainsAny,
            'greater_than': AttributeFilterGreaterThan,
            'greater_than_or_equals': AttributeFilterGreaterThanOrEquals,
            'less_than': AttributeFilterLessThan,
            'less_than_or_equals': AttributeFilterLessThanOrEquals
        }

        self.attribute_map = {
            'and_all_filters': 'AndAllFilters',
            'or_all_filters': 'OrAllFilters',
            'not_filter': 'NotFilter',
            'equals_to': 'EqualsTo',
            'contains_all': 'ContainsAll',
            'contains_any': 'ContainsAny',
            'greater_than': 'GreaterThan',
            'greater_than_or_equals': 'GreaterThanOrEquals',
            'less_than': 'LessThan',
            'less_than_or_equals': 'LessThanOrEquals'
        }

        self._and_all_filters = and_all_filters
        self._or_all_filters = or_all_filters
        self._not_filter = not_filter
        self._equals_to = equals_to
        self._contains_all = contains_all
        self._contains_any = contains_any
        self._greater_than = greater_than
        self._greater_than_or_equals = greater_than_or_equals
        self._less_than = less_than
        self._less_than_or_equals = less_than_or_equals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeSuggestionsGetConfigAttributeFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeSuggestionsGetConfig_AttributeFilter of this AttributeSuggestionsGetConfigAttributeFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def and_all_filters(self):
        """Gets the and_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The and_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: List
        """
        return self._and_all_filters

    @and_all_filters.setter
    def and_all_filters(self, and_all_filters):
        """Sets the and_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.


        :param and_all_filters: The and_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :type and_all_filters: List
        """

        self._and_all_filters = and_all_filters

    @property
    def or_all_filters(self):
        """Gets the or_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The or_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: List
        """
        return self._or_all_filters

    @or_all_filters.setter
    def or_all_filters(self, or_all_filters):
        """Sets the or_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.


        :param or_all_filters: The or_all_filters of this AttributeSuggestionsGetConfigAttributeFilter.
        :type or_all_filters: List
        """

        self._or_all_filters = or_all_filters

    @property
    def not_filter(self):
        """Gets the not_filter of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The not_filter of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterNotFilter
        """
        return self._not_filter

    @not_filter.setter
    def not_filter(self, not_filter):
        """Sets the not_filter of this AttributeSuggestionsGetConfigAttributeFilter.


        :param not_filter: The not_filter of this AttributeSuggestionsGetConfigAttributeFilter.
        :type not_filter: AttributeFilterNotFilter
        """

        self._not_filter = not_filter

    @property
    def equals_to(self):
        """Gets the equals_to of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The equals_to of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterEqualsTo
        """
        return self._equals_to

    @equals_to.setter
    def equals_to(self, equals_to):
        """Sets the equals_to of this AttributeSuggestionsGetConfigAttributeFilter.


        :param equals_to: The equals_to of this AttributeSuggestionsGetConfigAttributeFilter.
        :type equals_to: AttributeFilterEqualsTo
        """

        self._equals_to = equals_to

    @property
    def contains_all(self):
        """Gets the contains_all of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The contains_all of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterContainsAll
        """
        return self._contains_all

    @contains_all.setter
    def contains_all(self, contains_all):
        """Sets the contains_all of this AttributeSuggestionsGetConfigAttributeFilter.


        :param contains_all: The contains_all of this AttributeSuggestionsGetConfigAttributeFilter.
        :type contains_all: AttributeFilterContainsAll
        """

        self._contains_all = contains_all

    @property
    def contains_any(self):
        """Gets the contains_any of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The contains_any of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterContainsAny
        """
        return self._contains_any

    @contains_any.setter
    def contains_any(self, contains_any):
        """Sets the contains_any of this AttributeSuggestionsGetConfigAttributeFilter.


        :param contains_any: The contains_any of this AttributeSuggestionsGetConfigAttributeFilter.
        :type contains_any: AttributeFilterContainsAny
        """

        self._contains_any = contains_any

    @property
    def greater_than(self):
        """Gets the greater_than of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The greater_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterGreaterThan
        """
        return self._greater_than

    @greater_than.setter
    def greater_than(self, greater_than):
        """Sets the greater_than of this AttributeSuggestionsGetConfigAttributeFilter.


        :param greater_than: The greater_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :type greater_than: AttributeFilterGreaterThan
        """

        self._greater_than = greater_than

    @property
    def greater_than_or_equals(self):
        """Gets the greater_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The greater_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterGreaterThanOrEquals
        """
        return self._greater_than_or_equals

    @greater_than_or_equals.setter
    def greater_than_or_equals(self, greater_than_or_equals):
        """Sets the greater_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.


        :param greater_than_or_equals: The greater_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        :type greater_than_or_equals: AttributeFilterGreaterThanOrEquals
        """

        self._greater_than_or_equals = greater_than_or_equals

    @property
    def less_than(self):
        """Gets the less_than of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The less_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterLessThan
        """
        return self._less_than

    @less_than.setter
    def less_than(self, less_than):
        """Sets the less_than of this AttributeSuggestionsGetConfigAttributeFilter.


        :param less_than: The less_than of this AttributeSuggestionsGetConfigAttributeFilter.
        :type less_than: AttributeFilterLessThan
        """

        self._less_than = less_than

    @property
    def less_than_or_equals(self):
        """Gets the less_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.


        :return: The less_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        :rtype: AttributeFilterLessThanOrEquals
        """
        return self._less_than_or_equals

    @less_than_or_equals.setter
    def less_than_or_equals(self, less_than_or_equals):
        """Sets the less_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.


        :param less_than_or_equals: The less_than_or_equals of this AttributeSuggestionsGetConfigAttributeFilter.
        :type less_than_or_equals: AttributeFilterLessThanOrEquals
        """

        self._less_than_or_equals = less_than_or_equals
