# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UrlsSiteMapsConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, site_maps: List=None):
        """UrlsSiteMapsConfiguration - a model defined in OpenAPI

        :param site_maps: The site_maps of this UrlsSiteMapsConfiguration.
        """
        self.openapi_types = {
            'site_maps': List
        }

        self.attribute_map = {
            'site_maps': 'SiteMaps'
        }

        self._site_maps = site_maps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlsSiteMapsConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Urls_SiteMapsConfiguration of this UrlsSiteMapsConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site_maps(self):
        """Gets the site_maps of this UrlsSiteMapsConfiguration.


        :return: The site_maps of this UrlsSiteMapsConfiguration.
        :rtype: List
        """
        return self._site_maps

    @site_maps.setter
    def site_maps(self, site_maps):
        """Sets the site_maps of this UrlsSiteMapsConfiguration.


        :param site_maps: The site_maps of this UrlsSiteMapsConfiguration.
        :type site_maps: List
        """
        if site_maps is None:
            raise ValueError("Invalid value for `site_maps`, must not be `None`")

        self._site_maps = site_maps
