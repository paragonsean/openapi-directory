# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.condition_operator import ConditionOperator
from openapi_server.models.document_attribute_condition_condition_on_value import DocumentAttributeConditionConditionOnValue
from openapi_server import util


class DocumentAttributeCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition_document_attribute_key: str=None, operator: ConditionOperator=None, condition_on_value: DocumentAttributeConditionConditionOnValue=None):
        """DocumentAttributeCondition - a model defined in OpenAPI

        :param condition_document_attribute_key: The condition_document_attribute_key of this DocumentAttributeCondition.
        :param operator: The operator of this DocumentAttributeCondition.
        :param condition_on_value: The condition_on_value of this DocumentAttributeCondition.
        """
        self.openapi_types = {
            'condition_document_attribute_key': str,
            'operator': ConditionOperator,
            'condition_on_value': DocumentAttributeConditionConditionOnValue
        }

        self.attribute_map = {
            'condition_document_attribute_key': 'ConditionDocumentAttributeKey',
            'operator': 'Operator',
            'condition_on_value': 'ConditionOnValue'
        }

        self._condition_document_attribute_key = condition_document_attribute_key
        self._operator = operator
        self._condition_on_value = condition_on_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentAttributeCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentAttributeCondition of this DocumentAttributeCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition_document_attribute_key(self):
        """Gets the condition_document_attribute_key of this DocumentAttributeCondition.


        :return: The condition_document_attribute_key of this DocumentAttributeCondition.
        :rtype: str
        """
        return self._condition_document_attribute_key

    @condition_document_attribute_key.setter
    def condition_document_attribute_key(self, condition_document_attribute_key):
        """Sets the condition_document_attribute_key of this DocumentAttributeCondition.


        :param condition_document_attribute_key: The condition_document_attribute_key of this DocumentAttributeCondition.
        :type condition_document_attribute_key: str
        """
        if condition_document_attribute_key is None:
            raise ValueError("Invalid value for `condition_document_attribute_key`, must not be `None`")

        self._condition_document_attribute_key = condition_document_attribute_key

    @property
    def operator(self):
        """Gets the operator of this DocumentAttributeCondition.


        :return: The operator of this DocumentAttributeCondition.
        :rtype: ConditionOperator
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this DocumentAttributeCondition.


        :param operator: The operator of this DocumentAttributeCondition.
        :type operator: ConditionOperator
        """
        if operator is None:
            raise ValueError("Invalid value for `operator`, must not be `None`")

        self._operator = operator

    @property
    def condition_on_value(self):
        """Gets the condition_on_value of this DocumentAttributeCondition.


        :return: The condition_on_value of this DocumentAttributeCondition.
        :rtype: DocumentAttributeConditionConditionOnValue
        """
        return self._condition_on_value

    @condition_on_value.setter
    def condition_on_value(self, condition_on_value):
        """Sets the condition_on_value of this DocumentAttributeCondition.


        :param condition_on_value: The condition_on_value of this DocumentAttributeCondition.
        :type condition_on_value: DocumentAttributeConditionConditionOnValue
        """

        self._condition_on_value = condition_on_value
