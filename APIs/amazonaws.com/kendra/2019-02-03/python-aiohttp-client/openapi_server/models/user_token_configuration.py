# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_token_configuration_json_token_type_configuration import UserTokenConfigurationJsonTokenTypeConfiguration
from openapi_server.models.user_token_configuration_jwt_token_type_configuration import UserTokenConfigurationJwtTokenTypeConfiguration
from openapi_server import util


class UserTokenConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jwt_token_type_configuration: UserTokenConfigurationJwtTokenTypeConfiguration=None, json_token_type_configuration: UserTokenConfigurationJsonTokenTypeConfiguration=None):
        """UserTokenConfiguration - a model defined in OpenAPI

        :param jwt_token_type_configuration: The jwt_token_type_configuration of this UserTokenConfiguration.
        :param json_token_type_configuration: The json_token_type_configuration of this UserTokenConfiguration.
        """
        self.openapi_types = {
            'jwt_token_type_configuration': UserTokenConfigurationJwtTokenTypeConfiguration,
            'json_token_type_configuration': UserTokenConfigurationJsonTokenTypeConfiguration
        }

        self.attribute_map = {
            'jwt_token_type_configuration': 'JwtTokenTypeConfiguration',
            'json_token_type_configuration': 'JsonTokenTypeConfiguration'
        }

        self._jwt_token_type_configuration = jwt_token_type_configuration
        self._json_token_type_configuration = json_token_type_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserTokenConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserTokenConfiguration of this UserTokenConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jwt_token_type_configuration(self):
        """Gets the jwt_token_type_configuration of this UserTokenConfiguration.


        :return: The jwt_token_type_configuration of this UserTokenConfiguration.
        :rtype: UserTokenConfigurationJwtTokenTypeConfiguration
        """
        return self._jwt_token_type_configuration

    @jwt_token_type_configuration.setter
    def jwt_token_type_configuration(self, jwt_token_type_configuration):
        """Sets the jwt_token_type_configuration of this UserTokenConfiguration.


        :param jwt_token_type_configuration: The jwt_token_type_configuration of this UserTokenConfiguration.
        :type jwt_token_type_configuration: UserTokenConfigurationJwtTokenTypeConfiguration
        """

        self._jwt_token_type_configuration = jwt_token_type_configuration

    @property
    def json_token_type_configuration(self):
        """Gets the json_token_type_configuration of this UserTokenConfiguration.


        :return: The json_token_type_configuration of this UserTokenConfiguration.
        :rtype: UserTokenConfigurationJsonTokenTypeConfiguration
        """
        return self._json_token_type_configuration

    @json_token_type_configuration.setter
    def json_token_type_configuration(self, json_token_type_configuration):
        """Sets the json_token_type_configuration of this UserTokenConfiguration.


        :param json_token_type_configuration: The json_token_type_configuration of this UserTokenConfiguration.
        :type json_token_type_configuration: UserTokenConfigurationJsonTokenTypeConfiguration
        """

        self._json_token_type_configuration = json_token_type_configuration
