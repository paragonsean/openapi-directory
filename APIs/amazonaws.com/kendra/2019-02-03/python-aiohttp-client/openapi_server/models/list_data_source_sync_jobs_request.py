# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_sync_job_status import DataSourceSyncJobStatus
from openapi_server.models.list_data_source_sync_jobs_request_start_time_filter import ListDataSourceSyncJobsRequestStartTimeFilter
from openapi_server import util


class ListDataSourceSyncJobsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, index_id: str=None, next_token: str=None, max_results: int=None, start_time_filter: ListDataSourceSyncJobsRequestStartTimeFilter=None, status_filter: DataSourceSyncJobStatus=None):
        """ListDataSourceSyncJobsRequest - a model defined in OpenAPI

        :param id: The id of this ListDataSourceSyncJobsRequest.
        :param index_id: The index_id of this ListDataSourceSyncJobsRequest.
        :param next_token: The next_token of this ListDataSourceSyncJobsRequest.
        :param max_results: The max_results of this ListDataSourceSyncJobsRequest.
        :param start_time_filter: The start_time_filter of this ListDataSourceSyncJobsRequest.
        :param status_filter: The status_filter of this ListDataSourceSyncJobsRequest.
        """
        self.openapi_types = {
            'id': str,
            'index_id': str,
            'next_token': str,
            'max_results': int,
            'start_time_filter': ListDataSourceSyncJobsRequestStartTimeFilter,
            'status_filter': DataSourceSyncJobStatus
        }

        self.attribute_map = {
            'id': 'Id',
            'index_id': 'IndexId',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'start_time_filter': 'StartTimeFilter',
            'status_filter': 'StatusFilter'
        }

        self._id = id
        self._index_id = index_id
        self._next_token = next_token
        self._max_results = max_results
        self._start_time_filter = start_time_filter
        self._status_filter = status_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDataSourceSyncJobsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDataSourceSyncJobsRequest of this ListDataSourceSyncJobsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ListDataSourceSyncJobsRequest.


        :return: The id of this ListDataSourceSyncJobsRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ListDataSourceSyncJobsRequest.


        :param id: The id of this ListDataSourceSyncJobsRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def index_id(self):
        """Gets the index_id of this ListDataSourceSyncJobsRequest.


        :return: The index_id of this ListDataSourceSyncJobsRequest.
        :rtype: str
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id):
        """Sets the index_id of this ListDataSourceSyncJobsRequest.


        :param index_id: The index_id of this ListDataSourceSyncJobsRequest.
        :type index_id: str
        """
        if index_id is None:
            raise ValueError("Invalid value for `index_id`, must not be `None`")

        self._index_id = index_id

    @property
    def next_token(self):
        """Gets the next_token of this ListDataSourceSyncJobsRequest.


        :return: The next_token of this ListDataSourceSyncJobsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListDataSourceSyncJobsRequest.


        :param next_token: The next_token of this ListDataSourceSyncJobsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListDataSourceSyncJobsRequest.


        :return: The max_results of this ListDataSourceSyncJobsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListDataSourceSyncJobsRequest.


        :param max_results: The max_results of this ListDataSourceSyncJobsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def start_time_filter(self):
        """Gets the start_time_filter of this ListDataSourceSyncJobsRequest.


        :return: The start_time_filter of this ListDataSourceSyncJobsRequest.
        :rtype: ListDataSourceSyncJobsRequestStartTimeFilter
        """
        return self._start_time_filter

    @start_time_filter.setter
    def start_time_filter(self, start_time_filter):
        """Sets the start_time_filter of this ListDataSourceSyncJobsRequest.


        :param start_time_filter: The start_time_filter of this ListDataSourceSyncJobsRequest.
        :type start_time_filter: ListDataSourceSyncJobsRequestStartTimeFilter
        """

        self._start_time_filter = start_time_filter

    @property
    def status_filter(self):
        """Gets the status_filter of this ListDataSourceSyncJobsRequest.


        :return: The status_filter of this ListDataSourceSyncJobsRequest.
        :rtype: DataSourceSyncJobStatus
        """
        return self._status_filter

    @status_filter.setter
    def status_filter(self, status_filter):
        """Sets the status_filter of this ListDataSourceSyncJobsRequest.


        :param status_filter: The status_filter of this ListDataSourceSyncJobsRequest.
        :type status_filter: DataSourceSyncJobStatus
        """

        self._status_filter = status_filter
