# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuggestionValueText(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text: str=None, highlights: List=None):
        """SuggestionValueText - a model defined in OpenAPI

        :param text: The text of this SuggestionValueText.
        :param highlights: The highlights of this SuggestionValueText.
        """
        self.openapi_types = {
            'text': str,
            'highlights': List
        }

        self.attribute_map = {
            'text': 'Text',
            'highlights': 'Highlights'
        }

        self._text = text
        self._highlights = highlights

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestionValueText':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestionValue_Text of this SuggestionValueText.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self):
        """Gets the text of this SuggestionValueText.


        :return: The text of this SuggestionValueText.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this SuggestionValueText.


        :param text: The text of this SuggestionValueText.
        :type text: str
        """

        self._text = text

    @property
    def highlights(self):
        """Gets the highlights of this SuggestionValueText.


        :return: The highlights of this SuggestionValueText.
        :rtype: List
        """
        return self._highlights

    @highlights.setter
    def highlights(self, highlights):
        """Sets the highlights of this SuggestionValueText.


        :param highlights: The highlights of this SuggestionValueText.
        :type highlights: List
        """

        self._highlights = highlights
