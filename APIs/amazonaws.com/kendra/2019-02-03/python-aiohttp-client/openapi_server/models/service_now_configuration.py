# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_now_authentication_type import ServiceNowAuthenticationType
from openapi_server.models.service_now_build_version_type import ServiceNowBuildVersionType
from openapi_server.models.service_now_configuration_knowledge_article_configuration import ServiceNowConfigurationKnowledgeArticleConfiguration
from openapi_server.models.service_now_configuration_service_catalog_configuration import ServiceNowConfigurationServiceCatalogConfiguration
from openapi_server import util


class ServiceNowConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_url: str=None, secret_arn: str=None, service_now_build_version: ServiceNowBuildVersionType=None, knowledge_article_configuration: ServiceNowConfigurationKnowledgeArticleConfiguration=None, service_catalog_configuration: ServiceNowConfigurationServiceCatalogConfiguration=None, authentication_type: ServiceNowAuthenticationType=None):
        """ServiceNowConfiguration - a model defined in OpenAPI

        :param host_url: The host_url of this ServiceNowConfiguration.
        :param secret_arn: The secret_arn of this ServiceNowConfiguration.
        :param service_now_build_version: The service_now_build_version of this ServiceNowConfiguration.
        :param knowledge_article_configuration: The knowledge_article_configuration of this ServiceNowConfiguration.
        :param service_catalog_configuration: The service_catalog_configuration of this ServiceNowConfiguration.
        :param authentication_type: The authentication_type of this ServiceNowConfiguration.
        """
        self.openapi_types = {
            'host_url': str,
            'secret_arn': str,
            'service_now_build_version': ServiceNowBuildVersionType,
            'knowledge_article_configuration': ServiceNowConfigurationKnowledgeArticleConfiguration,
            'service_catalog_configuration': ServiceNowConfigurationServiceCatalogConfiguration,
            'authentication_type': ServiceNowAuthenticationType
        }

        self.attribute_map = {
            'host_url': 'HostUrl',
            'secret_arn': 'SecretArn',
            'service_now_build_version': 'ServiceNowBuildVersion',
            'knowledge_article_configuration': 'KnowledgeArticleConfiguration',
            'service_catalog_configuration': 'ServiceCatalogConfiguration',
            'authentication_type': 'AuthenticationType'
        }

        self._host_url = host_url
        self._secret_arn = secret_arn
        self._service_now_build_version = service_now_build_version
        self._knowledge_article_configuration = knowledge_article_configuration
        self._service_catalog_configuration = service_catalog_configuration
        self._authentication_type = authentication_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceNowConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceNowConfiguration of this ServiceNowConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_url(self):
        """Gets the host_url of this ServiceNowConfiguration.


        :return: The host_url of this ServiceNowConfiguration.
        :rtype: str
        """
        return self._host_url

    @host_url.setter
    def host_url(self, host_url):
        """Sets the host_url of this ServiceNowConfiguration.


        :param host_url: The host_url of this ServiceNowConfiguration.
        :type host_url: str
        """
        if host_url is None:
            raise ValueError("Invalid value for `host_url`, must not be `None`")

        self._host_url = host_url

    @property
    def secret_arn(self):
        """Gets the secret_arn of this ServiceNowConfiguration.


        :return: The secret_arn of this ServiceNowConfiguration.
        :rtype: str
        """
        return self._secret_arn

    @secret_arn.setter
    def secret_arn(self, secret_arn):
        """Sets the secret_arn of this ServiceNowConfiguration.


        :param secret_arn: The secret_arn of this ServiceNowConfiguration.
        :type secret_arn: str
        """
        if secret_arn is None:
            raise ValueError("Invalid value for `secret_arn`, must not be `None`")

        self._secret_arn = secret_arn

    @property
    def service_now_build_version(self):
        """Gets the service_now_build_version of this ServiceNowConfiguration.


        :return: The service_now_build_version of this ServiceNowConfiguration.
        :rtype: ServiceNowBuildVersionType
        """
        return self._service_now_build_version

    @service_now_build_version.setter
    def service_now_build_version(self, service_now_build_version):
        """Sets the service_now_build_version of this ServiceNowConfiguration.


        :param service_now_build_version: The service_now_build_version of this ServiceNowConfiguration.
        :type service_now_build_version: ServiceNowBuildVersionType
        """
        if service_now_build_version is None:
            raise ValueError("Invalid value for `service_now_build_version`, must not be `None`")

        self._service_now_build_version = service_now_build_version

    @property
    def knowledge_article_configuration(self):
        """Gets the knowledge_article_configuration of this ServiceNowConfiguration.


        :return: The knowledge_article_configuration of this ServiceNowConfiguration.
        :rtype: ServiceNowConfigurationKnowledgeArticleConfiguration
        """
        return self._knowledge_article_configuration

    @knowledge_article_configuration.setter
    def knowledge_article_configuration(self, knowledge_article_configuration):
        """Sets the knowledge_article_configuration of this ServiceNowConfiguration.


        :param knowledge_article_configuration: The knowledge_article_configuration of this ServiceNowConfiguration.
        :type knowledge_article_configuration: ServiceNowConfigurationKnowledgeArticleConfiguration
        """

        self._knowledge_article_configuration = knowledge_article_configuration

    @property
    def service_catalog_configuration(self):
        """Gets the service_catalog_configuration of this ServiceNowConfiguration.


        :return: The service_catalog_configuration of this ServiceNowConfiguration.
        :rtype: ServiceNowConfigurationServiceCatalogConfiguration
        """
        return self._service_catalog_configuration

    @service_catalog_configuration.setter
    def service_catalog_configuration(self, service_catalog_configuration):
        """Sets the service_catalog_configuration of this ServiceNowConfiguration.


        :param service_catalog_configuration: The service_catalog_configuration of this ServiceNowConfiguration.
        :type service_catalog_configuration: ServiceNowConfigurationServiceCatalogConfiguration
        """

        self._service_catalog_configuration = service_catalog_configuration

    @property
    def authentication_type(self):
        """Gets the authentication_type of this ServiceNowConfiguration.


        :return: The authentication_type of this ServiceNowConfiguration.
        :rtype: ServiceNowAuthenticationType
        """
        return self._authentication_type

    @authentication_type.setter
    def authentication_type(self, authentication_type):
        """Sets the authentication_type of this ServiceNowConfiguration.


        :param authentication_type: The authentication_type of this ServiceNowConfiguration.
        :type authentication_type: ServiceNowAuthenticationType
        """

        self._authentication_type = authentication_type
