/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SlackConfigurationVpcConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DataSourceConfigurationSlackConfiguration
 */
public class DataSourceConfigurationSlackConfigurationTest {
    private final DataSourceConfigurationSlackConfiguration model = new DataSourceConfigurationSlackConfiguration();

    /**
     * Model tests for DataSourceConfigurationSlackConfiguration
     */
    @Test
    public void testDataSourceConfigurationSlackConfiguration() {
        // TODO: test DataSourceConfigurationSlackConfiguration
    }

    /**
     * Test the property 'teamId'
     */
    @Test
    public void teamIdTest() {
        // TODO: test teamId
    }

    /**
     * Test the property 'secretArn'
     */
    @Test
    public void secretArnTest() {
        // TODO: test secretArn
    }

    /**
     * Test the property 'vpcConfiguration'
     */
    @Test
    public void vpcConfigurationTest() {
        // TODO: test vpcConfiguration
    }

    /**
     * Test the property 'slackEntityList'
     */
    @Test
    public void slackEntityListTest() {
        // TODO: test slackEntityList
    }

    /**
     * Test the property 'useChangeLog'
     */
    @Test
    public void useChangeLogTest() {
        // TODO: test useChangeLog
    }

    /**
     * Test the property 'crawlBotMessage'
     */
    @Test
    public void crawlBotMessageTest() {
        // TODO: test crawlBotMessage
    }

    /**
     * Test the property 'excludeArchived'
     */
    @Test
    public void excludeArchivedTest() {
        // TODO: test excludeArchived
    }

    /**
     * Test the property 'sinceCrawlDate'
     */
    @Test
    public void sinceCrawlDateTest() {
        // TODO: test sinceCrawlDate
    }

    /**
     * Test the property 'lookBackPeriod'
     */
    @Test
    public void lookBackPeriodTest() {
        // TODO: test lookBackPeriod
    }

    /**
     * Test the property 'privateChannelFilter'
     */
    @Test
    public void privateChannelFilterTest() {
        // TODO: test privateChannelFilter
    }

    /**
     * Test the property 'publicChannelFilter'
     */
    @Test
    public void publicChannelFilterTest() {
        // TODO: test publicChannelFilter
    }

    /**
     * Test the property 'inclusionPatterns'
     */
    @Test
    public void inclusionPatternsTest() {
        // TODO: test inclusionPatterns
    }

    /**
     * Test the property 'exclusionPatterns'
     */
    @Test
    public void exclusionPatternsTest() {
        // TODO: test exclusionPatterns
    }

    /**
     * Test the property 'fieldMappings'
     */
    @Test
    public void fieldMappingsTest() {
        // TODO: test fieldMappings
    }

}
