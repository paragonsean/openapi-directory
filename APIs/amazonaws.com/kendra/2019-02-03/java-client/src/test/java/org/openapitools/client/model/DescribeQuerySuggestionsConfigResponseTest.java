/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig;
import org.openapitools.client.model.Mode;
import org.openapitools.client.model.QuerySuggestionsStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeQuerySuggestionsConfigResponse
 */
public class DescribeQuerySuggestionsConfigResponseTest {
    private final DescribeQuerySuggestionsConfigResponse model = new DescribeQuerySuggestionsConfigResponse();

    /**
     * Model tests for DescribeQuerySuggestionsConfigResponse
     */
    @Test
    public void testDescribeQuerySuggestionsConfigResponse() {
        // TODO: test DescribeQuerySuggestionsConfigResponse
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'queryLogLookBackWindowInDays'
     */
    @Test
    public void queryLogLookBackWindowInDaysTest() {
        // TODO: test queryLogLookBackWindowInDays
    }

    /**
     * Test the property 'includeQueriesWithoutUserInformation'
     */
    @Test
    public void includeQueriesWithoutUserInformationTest() {
        // TODO: test includeQueriesWithoutUserInformation
    }

    /**
     * Test the property 'minimumNumberOfQueryingUsers'
     */
    @Test
    public void minimumNumberOfQueryingUsersTest() {
        // TODO: test minimumNumberOfQueryingUsers
    }

    /**
     * Test the property 'minimumQueryCount'
     */
    @Test
    public void minimumQueryCountTest() {
        // TODO: test minimumQueryCount
    }

    /**
     * Test the property 'lastSuggestionsBuildTime'
     */
    @Test
    public void lastSuggestionsBuildTimeTest() {
        // TODO: test lastSuggestionsBuildTime
    }

    /**
     * Test the property 'lastClearTime'
     */
    @Test
    public void lastClearTimeTest() {
        // TODO: test lastClearTime
    }

    /**
     * Test the property 'totalSuggestionsCount'
     */
    @Test
    public void totalSuggestionsCountTest() {
        // TODO: test totalSuggestionsCount
    }

    /**
     * Test the property 'attributeSuggestionsConfig'
     */
    @Test
    public void attributeSuggestionsConfigTest() {
        // TODO: test attributeSuggestionsConfig
    }

}
