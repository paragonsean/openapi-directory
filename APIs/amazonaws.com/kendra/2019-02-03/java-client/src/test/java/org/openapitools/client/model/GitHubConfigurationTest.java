/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GitHubConfigurationGitHubDocumentCrawlProperties;
import org.openapitools.client.model.GitHubConfigurationOnPremiseConfiguration;
import org.openapitools.client.model.GitHubConfigurationSaaSConfiguration;
import org.openapitools.client.model.GitHubConfigurationVpcConfiguration;
import org.openapitools.client.model.Type;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GitHubConfiguration
 */
public class GitHubConfigurationTest {
    private final GitHubConfiguration model = new GitHubConfiguration();

    /**
     * Model tests for GitHubConfiguration
     */
    @Test
    public void testGitHubConfiguration() {
        // TODO: test GitHubConfiguration
    }

    /**
     * Test the property 'saaSConfiguration'
     */
    @Test
    public void saaSConfigurationTest() {
        // TODO: test saaSConfiguration
    }

    /**
     * Test the property 'onPremiseConfiguration'
     */
    @Test
    public void onPremiseConfigurationTest() {
        // TODO: test onPremiseConfiguration
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'secretArn'
     */
    @Test
    public void secretArnTest() {
        // TODO: test secretArn
    }

    /**
     * Test the property 'useChangeLog'
     */
    @Test
    public void useChangeLogTest() {
        // TODO: test useChangeLog
    }

    /**
     * Test the property 'gitHubDocumentCrawlProperties'
     */
    @Test
    public void gitHubDocumentCrawlPropertiesTest() {
        // TODO: test gitHubDocumentCrawlProperties
    }

    /**
     * Test the property 'repositoryFilter'
     */
    @Test
    public void repositoryFilterTest() {
        // TODO: test repositoryFilter
    }

    /**
     * Test the property 'inclusionFolderNamePatterns'
     */
    @Test
    public void inclusionFolderNamePatternsTest() {
        // TODO: test inclusionFolderNamePatterns
    }

    /**
     * Test the property 'inclusionFileTypePatterns'
     */
    @Test
    public void inclusionFileTypePatternsTest() {
        // TODO: test inclusionFileTypePatterns
    }

    /**
     * Test the property 'inclusionFileNamePatterns'
     */
    @Test
    public void inclusionFileNamePatternsTest() {
        // TODO: test inclusionFileNamePatterns
    }

    /**
     * Test the property 'exclusionFolderNamePatterns'
     */
    @Test
    public void exclusionFolderNamePatternsTest() {
        // TODO: test exclusionFolderNamePatterns
    }

    /**
     * Test the property 'exclusionFileTypePatterns'
     */
    @Test
    public void exclusionFileTypePatternsTest() {
        // TODO: test exclusionFileTypePatterns
    }

    /**
     * Test the property 'exclusionFileNamePatterns'
     */
    @Test
    public void exclusionFileNamePatternsTest() {
        // TODO: test exclusionFileNamePatterns
    }

    /**
     * Test the property 'vpcConfiguration'
     */
    @Test
    public void vpcConfigurationTest() {
        // TODO: test vpcConfiguration
    }

    /**
     * Test the property 'gitHubRepositoryConfigurationFieldMappings'
     */
    @Test
    public void gitHubRepositoryConfigurationFieldMappingsTest() {
        // TODO: test gitHubRepositoryConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubCommitConfigurationFieldMappings'
     */
    @Test
    public void gitHubCommitConfigurationFieldMappingsTest() {
        // TODO: test gitHubCommitConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubIssueDocumentConfigurationFieldMappings'
     */
    @Test
    public void gitHubIssueDocumentConfigurationFieldMappingsTest() {
        // TODO: test gitHubIssueDocumentConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubIssueCommentConfigurationFieldMappings'
     */
    @Test
    public void gitHubIssueCommentConfigurationFieldMappingsTest() {
        // TODO: test gitHubIssueCommentConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubIssueAttachmentConfigurationFieldMappings'
     */
    @Test
    public void gitHubIssueAttachmentConfigurationFieldMappingsTest() {
        // TODO: test gitHubIssueAttachmentConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubPullRequestCommentConfigurationFieldMappings'
     */
    @Test
    public void gitHubPullRequestCommentConfigurationFieldMappingsTest() {
        // TODO: test gitHubPullRequestCommentConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubPullRequestDocumentConfigurationFieldMappings'
     */
    @Test
    public void gitHubPullRequestDocumentConfigurationFieldMappingsTest() {
        // TODO: test gitHubPullRequestDocumentConfigurationFieldMappings
    }

    /**
     * Test the property 'gitHubPullRequestDocumentAttachmentConfigurationFieldMappings'
     */
    @Test
    public void gitHubPullRequestDocumentAttachmentConfigurationFieldMappingsTest() {
        // TODO: test gitHubPullRequestDocumentAttachmentConfigurationFieldMappings
    }

}
