/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataSourceConfigurationAlfrescoConfiguration;
import org.openapitools.client.model.DataSourceConfigurationBoxConfiguration;
import org.openapitools.client.model.DataSourceConfigurationConfluenceConfiguration;
import org.openapitools.client.model.DataSourceConfigurationDatabaseConfiguration;
import org.openapitools.client.model.DataSourceConfigurationFsxConfiguration;
import org.openapitools.client.model.DataSourceConfigurationGitHubConfiguration;
import org.openapitools.client.model.DataSourceConfigurationGoogleDriveConfiguration;
import org.openapitools.client.model.DataSourceConfigurationJiraConfiguration;
import org.openapitools.client.model.DataSourceConfigurationOneDriveConfiguration;
import org.openapitools.client.model.DataSourceConfigurationQuipConfiguration;
import org.openapitools.client.model.DataSourceConfigurationS3Configuration;
import org.openapitools.client.model.DataSourceConfigurationSalesforceConfiguration;
import org.openapitools.client.model.DataSourceConfigurationServiceNowConfiguration;
import org.openapitools.client.model.DataSourceConfigurationSharePointConfiguration;
import org.openapitools.client.model.DataSourceConfigurationSlackConfiguration;
import org.openapitools.client.model.DataSourceConfigurationTemplateConfiguration;
import org.openapitools.client.model.DataSourceConfigurationWorkDocsConfiguration;
import org.openapitools.client.model.WebCrawlerConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateDataSourceRequestConfiguration
 */
public class UpdateDataSourceRequestConfigurationTest {
    private final UpdateDataSourceRequestConfiguration model = new UpdateDataSourceRequestConfiguration();

    /**
     * Model tests for UpdateDataSourceRequestConfiguration
     */
    @Test
    public void testUpdateDataSourceRequestConfiguration() {
        // TODO: test UpdateDataSourceRequestConfiguration
    }

    /**
     * Test the property 's3Configuration'
     */
    @Test
    public void s3ConfigurationTest() {
        // TODO: test s3Configuration
    }

    /**
     * Test the property 'sharePointConfiguration'
     */
    @Test
    public void sharePointConfigurationTest() {
        // TODO: test sharePointConfiguration
    }

    /**
     * Test the property 'databaseConfiguration'
     */
    @Test
    public void databaseConfigurationTest() {
        // TODO: test databaseConfiguration
    }

    /**
     * Test the property 'salesforceConfiguration'
     */
    @Test
    public void salesforceConfigurationTest() {
        // TODO: test salesforceConfiguration
    }

    /**
     * Test the property 'oneDriveConfiguration'
     */
    @Test
    public void oneDriveConfigurationTest() {
        // TODO: test oneDriveConfiguration
    }

    /**
     * Test the property 'serviceNowConfiguration'
     */
    @Test
    public void serviceNowConfigurationTest() {
        // TODO: test serviceNowConfiguration
    }

    /**
     * Test the property 'confluenceConfiguration'
     */
    @Test
    public void confluenceConfigurationTest() {
        // TODO: test confluenceConfiguration
    }

    /**
     * Test the property 'googleDriveConfiguration'
     */
    @Test
    public void googleDriveConfigurationTest() {
        // TODO: test googleDriveConfiguration
    }

    /**
     * Test the property 'webCrawlerConfiguration'
     */
    @Test
    public void webCrawlerConfigurationTest() {
        // TODO: test webCrawlerConfiguration
    }

    /**
     * Test the property 'workDocsConfiguration'
     */
    @Test
    public void workDocsConfigurationTest() {
        // TODO: test workDocsConfiguration
    }

    /**
     * Test the property 'fsxConfiguration'
     */
    @Test
    public void fsxConfigurationTest() {
        // TODO: test fsxConfiguration
    }

    /**
     * Test the property 'slackConfiguration'
     */
    @Test
    public void slackConfigurationTest() {
        // TODO: test slackConfiguration
    }

    /**
     * Test the property 'boxConfiguration'
     */
    @Test
    public void boxConfigurationTest() {
        // TODO: test boxConfiguration
    }

    /**
     * Test the property 'quipConfiguration'
     */
    @Test
    public void quipConfigurationTest() {
        // TODO: test quipConfiguration
    }

    /**
     * Test the property 'jiraConfiguration'
     */
    @Test
    public void jiraConfigurationTest() {
        // TODO: test jiraConfiguration
    }

    /**
     * Test the property 'gitHubConfiguration'
     */
    @Test
    public void gitHubConfigurationTest() {
        // TODO: test gitHubConfiguration
    }

    /**
     * Test the property 'alfrescoConfiguration'
     */
    @Test
    public void alfrescoConfigurationTest() {
        // TODO: test alfrescoConfiguration
    }

    /**
     * Test the property 'templateConfiguration'
     */
    @Test
    public void templateConfigurationTest() {
        // TODO: test templateConfiguration
    }

}
