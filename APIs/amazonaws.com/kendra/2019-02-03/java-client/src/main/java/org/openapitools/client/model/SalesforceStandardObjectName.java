/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets SalesforceStandardObjectName
 */
@JsonAdapter(SalesforceStandardObjectName.Adapter.class)
public enum SalesforceStandardObjectName {
  
  ACCOUNT("ACCOUNT"),
  
  CAMPAIGN("CAMPAIGN"),
  
  CASE("CASE"),
  
  CONTACT("CONTACT"),
  
  CONTRACT("CONTRACT"),
  
  DOCUMENT("DOCUMENT"),
  
  GROUP("GROUP"),
  
  IDEA("IDEA"),
  
  LEAD("LEAD"),
  
  OPPORTUNITY("OPPORTUNITY"),
  
  PARTNER("PARTNER"),
  
  PRICEBOOK("PRICEBOOK"),
  
  PRODUCT("PRODUCT"),
  
  PROFILE("PROFILE"),
  
  SOLUTION("SOLUTION"),
  
  TASK("TASK"),
  
  USER("USER");

  private String value;

  SalesforceStandardObjectName(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SalesforceStandardObjectName fromValue(String value) {
    for (SalesforceStandardObjectName b : SalesforceStandardObjectName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SalesforceStandardObjectName> {
    @Override
    public void write(final JsonWriter jsonWriter, final SalesforceStandardObjectName enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SalesforceStandardObjectName read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SalesforceStandardObjectName.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SalesforceStandardObjectName.fromValue(value);
  }
}

