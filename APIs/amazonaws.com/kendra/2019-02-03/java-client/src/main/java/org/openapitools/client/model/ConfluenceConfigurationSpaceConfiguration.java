/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConfluenceConfigurationSpaceConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ConfluenceConfigurationSpaceConfiguration {
  public static final String SERIALIZED_NAME_CRAWL_PERSONAL_SPACES = "CrawlPersonalSpaces";
  @SerializedName(SERIALIZED_NAME_CRAWL_PERSONAL_SPACES)
  private Boolean crawlPersonalSpaces;

  public static final String SERIALIZED_NAME_CRAWL_ARCHIVED_SPACES = "CrawlArchivedSpaces";
  @SerializedName(SERIALIZED_NAME_CRAWL_ARCHIVED_SPACES)
  private Boolean crawlArchivedSpaces;

  public static final String SERIALIZED_NAME_INCLUDE_SPACES = "IncludeSpaces";
  @SerializedName(SERIALIZED_NAME_INCLUDE_SPACES)
  private List includeSpaces;

  public static final String SERIALIZED_NAME_EXCLUDE_SPACES = "ExcludeSpaces";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_SPACES)
  private List excludeSpaces;

  public static final String SERIALIZED_NAME_SPACE_FIELD_MAPPINGS = "SpaceFieldMappings";
  @SerializedName(SERIALIZED_NAME_SPACE_FIELD_MAPPINGS)
  private List spaceFieldMappings;

  public ConfluenceConfigurationSpaceConfiguration() {
  }

  public ConfluenceConfigurationSpaceConfiguration crawlPersonalSpaces(Boolean crawlPersonalSpaces) {
    this.crawlPersonalSpaces = crawlPersonalSpaces;
    return this;
  }

  /**
   * Get crawlPersonalSpaces
   * @return crawlPersonalSpaces
   */
  @javax.annotation.Nullable
  public Boolean getCrawlPersonalSpaces() {
    return crawlPersonalSpaces;
  }

  public void setCrawlPersonalSpaces(Boolean crawlPersonalSpaces) {
    this.crawlPersonalSpaces = crawlPersonalSpaces;
  }


  public ConfluenceConfigurationSpaceConfiguration crawlArchivedSpaces(Boolean crawlArchivedSpaces) {
    this.crawlArchivedSpaces = crawlArchivedSpaces;
    return this;
  }

  /**
   * Get crawlArchivedSpaces
   * @return crawlArchivedSpaces
   */
  @javax.annotation.Nullable
  public Boolean getCrawlArchivedSpaces() {
    return crawlArchivedSpaces;
  }

  public void setCrawlArchivedSpaces(Boolean crawlArchivedSpaces) {
    this.crawlArchivedSpaces = crawlArchivedSpaces;
  }


  public ConfluenceConfigurationSpaceConfiguration includeSpaces(List includeSpaces) {
    this.includeSpaces = includeSpaces;
    return this;
  }

  /**
   * Get includeSpaces
   * @return includeSpaces
   */
  @javax.annotation.Nullable
  public List getIncludeSpaces() {
    return includeSpaces;
  }

  public void setIncludeSpaces(List includeSpaces) {
    this.includeSpaces = includeSpaces;
  }


  public ConfluenceConfigurationSpaceConfiguration excludeSpaces(List excludeSpaces) {
    this.excludeSpaces = excludeSpaces;
    return this;
  }

  /**
   * Get excludeSpaces
   * @return excludeSpaces
   */
  @javax.annotation.Nullable
  public List getExcludeSpaces() {
    return excludeSpaces;
  }

  public void setExcludeSpaces(List excludeSpaces) {
    this.excludeSpaces = excludeSpaces;
  }


  public ConfluenceConfigurationSpaceConfiguration spaceFieldMappings(List spaceFieldMappings) {
    this.spaceFieldMappings = spaceFieldMappings;
    return this;
  }

  /**
   * Get spaceFieldMappings
   * @return spaceFieldMappings
   */
  @javax.annotation.Nullable
  public List getSpaceFieldMappings() {
    return spaceFieldMappings;
  }

  public void setSpaceFieldMappings(List spaceFieldMappings) {
    this.spaceFieldMappings = spaceFieldMappings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfluenceConfigurationSpaceConfiguration confluenceConfigurationSpaceConfiguration = (ConfluenceConfigurationSpaceConfiguration) o;
    return Objects.equals(this.crawlPersonalSpaces, confluenceConfigurationSpaceConfiguration.crawlPersonalSpaces) &&
        Objects.equals(this.crawlArchivedSpaces, confluenceConfigurationSpaceConfiguration.crawlArchivedSpaces) &&
        Objects.equals(this.includeSpaces, confluenceConfigurationSpaceConfiguration.includeSpaces) &&
        Objects.equals(this.excludeSpaces, confluenceConfigurationSpaceConfiguration.excludeSpaces) &&
        Objects.equals(this.spaceFieldMappings, confluenceConfigurationSpaceConfiguration.spaceFieldMappings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crawlPersonalSpaces, crawlArchivedSpaces, includeSpaces, excludeSpaces, spaceFieldMappings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfluenceConfigurationSpaceConfiguration {\n");
    sb.append("    crawlPersonalSpaces: ").append(toIndentedString(crawlPersonalSpaces)).append("\n");
    sb.append("    crawlArchivedSpaces: ").append(toIndentedString(crawlArchivedSpaces)).append("\n");
    sb.append("    includeSpaces: ").append(toIndentedString(includeSpaces)).append("\n");
    sb.append("    excludeSpaces: ").append(toIndentedString(excludeSpaces)).append("\n");
    sb.append("    spaceFieldMappings: ").append(toIndentedString(spaceFieldMappings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CrawlPersonalSpaces");
    openapiFields.add("CrawlArchivedSpaces");
    openapiFields.add("IncludeSpaces");
    openapiFields.add("ExcludeSpaces");
    openapiFields.add("SpaceFieldMappings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConfluenceConfigurationSpaceConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConfluenceConfigurationSpaceConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConfluenceConfigurationSpaceConfiguration is not found in the empty JSON string", ConfluenceConfigurationSpaceConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConfluenceConfigurationSpaceConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConfluenceConfigurationSpaceConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CrawlPersonalSpaces`
      if (jsonObj.get("CrawlPersonalSpaces") != null && !jsonObj.get("CrawlPersonalSpaces").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrawlPersonalSpaces"));
      }
      // validate the optional field `CrawlArchivedSpaces`
      if (jsonObj.get("CrawlArchivedSpaces") != null && !jsonObj.get("CrawlArchivedSpaces").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrawlArchivedSpaces"));
      }
      // validate the optional field `IncludeSpaces`
      if (jsonObj.get("IncludeSpaces") != null && !jsonObj.get("IncludeSpaces").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("IncludeSpaces"));
      }
      // validate the optional field `ExcludeSpaces`
      if (jsonObj.get("ExcludeSpaces") != null && !jsonObj.get("ExcludeSpaces").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExcludeSpaces"));
      }
      // validate the optional field `SpaceFieldMappings`
      if (jsonObj.get("SpaceFieldMappings") != null && !jsonObj.get("SpaceFieldMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SpaceFieldMappings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConfluenceConfigurationSpaceConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConfluenceConfigurationSpaceConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConfluenceConfigurationSpaceConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConfluenceConfigurationSpaceConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ConfluenceConfigurationSpaceConfiguration>() {
           @Override
           public void write(JsonWriter out, ConfluenceConfigurationSpaceConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConfluenceConfigurationSpaceConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConfluenceConfigurationSpaceConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConfluenceConfigurationSpaceConfiguration
   * @throws IOException if the JSON string is invalid with respect to ConfluenceConfigurationSpaceConfiguration
   */
  public static ConfluenceConfigurationSpaceConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConfluenceConfigurationSpaceConfiguration.class);
  }

  /**
   * Convert an instance of ConfluenceConfigurationSpaceConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

