/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets QuerySuggestionsBlockListStatus
 */
@JsonAdapter(QuerySuggestionsBlockListStatus.Adapter.class)
public enum QuerySuggestionsBlockListStatus {
  
  ACTIVE("ACTIVE"),
  
  CREATING("CREATING"),
  
  DELETING("DELETING"),
  
  UPDATING("UPDATING"),
  
  ACTIVE_BUT_UPDATE_FAILED("ACTIVE_BUT_UPDATE_FAILED"),
  
  FAILED("FAILED");

  private String value;

  QuerySuggestionsBlockListStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static QuerySuggestionsBlockListStatus fromValue(String value) {
    for (QuerySuggestionsBlockListStatus b : QuerySuggestionsBlockListStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<QuerySuggestionsBlockListStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final QuerySuggestionsBlockListStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public QuerySuggestionsBlockListStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return QuerySuggestionsBlockListStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    QuerySuggestionsBlockListStatus.fromValue(value);
  }
}

