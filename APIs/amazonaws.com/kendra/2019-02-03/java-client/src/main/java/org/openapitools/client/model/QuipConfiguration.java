/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QuipConfigurationVpcConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides the configuration information to connect to Quip as your data source.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuipConfiguration {
  public static final String SERIALIZED_NAME_DOMAIN = "Domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_SECRET_ARN = "SecretArn";
  @SerializedName(SERIALIZED_NAME_SECRET_ARN)
  private String secretArn;

  public static final String SERIALIZED_NAME_CRAWL_FILE_COMMENTS = "CrawlFileComments";
  @SerializedName(SERIALIZED_NAME_CRAWL_FILE_COMMENTS)
  private Boolean crawlFileComments;

  public static final String SERIALIZED_NAME_CRAWL_CHAT_ROOMS = "CrawlChatRooms";
  @SerializedName(SERIALIZED_NAME_CRAWL_CHAT_ROOMS)
  private Boolean crawlChatRooms;

  public static final String SERIALIZED_NAME_CRAWL_ATTACHMENTS = "CrawlAttachments";
  @SerializedName(SERIALIZED_NAME_CRAWL_ATTACHMENTS)
  private Boolean crawlAttachments;

  public static final String SERIALIZED_NAME_FOLDER_IDS = "FolderIds";
  @SerializedName(SERIALIZED_NAME_FOLDER_IDS)
  private List folderIds;

  public static final String SERIALIZED_NAME_THREAD_FIELD_MAPPINGS = "ThreadFieldMappings";
  @SerializedName(SERIALIZED_NAME_THREAD_FIELD_MAPPINGS)
  private List threadFieldMappings;

  public static final String SERIALIZED_NAME_MESSAGE_FIELD_MAPPINGS = "MessageFieldMappings";
  @SerializedName(SERIALIZED_NAME_MESSAGE_FIELD_MAPPINGS)
  private List messageFieldMappings;

  public static final String SERIALIZED_NAME_ATTACHMENT_FIELD_MAPPINGS = "AttachmentFieldMappings";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_FIELD_MAPPINGS)
  private List attachmentFieldMappings;

  public static final String SERIALIZED_NAME_INCLUSION_PATTERNS = "InclusionPatterns";
  @SerializedName(SERIALIZED_NAME_INCLUSION_PATTERNS)
  private List inclusionPatterns;

  public static final String SERIALIZED_NAME_EXCLUSION_PATTERNS = "ExclusionPatterns";
  @SerializedName(SERIALIZED_NAME_EXCLUSION_PATTERNS)
  private List exclusionPatterns;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION = "VpcConfiguration";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION)
  private QuipConfigurationVpcConfiguration vpcConfiguration;

  public QuipConfiguration() {
  }

  public QuipConfiguration domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nonnull
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public QuipConfiguration secretArn(String secretArn) {
    this.secretArn = secretArn;
    return this;
  }

  /**
   * Get secretArn
   * @return secretArn
   */
  @javax.annotation.Nonnull
  public String getSecretArn() {
    return secretArn;
  }

  public void setSecretArn(String secretArn) {
    this.secretArn = secretArn;
  }


  public QuipConfiguration crawlFileComments(Boolean crawlFileComments) {
    this.crawlFileComments = crawlFileComments;
    return this;
  }

  /**
   * Get crawlFileComments
   * @return crawlFileComments
   */
  @javax.annotation.Nullable
  public Boolean getCrawlFileComments() {
    return crawlFileComments;
  }

  public void setCrawlFileComments(Boolean crawlFileComments) {
    this.crawlFileComments = crawlFileComments;
  }


  public QuipConfiguration crawlChatRooms(Boolean crawlChatRooms) {
    this.crawlChatRooms = crawlChatRooms;
    return this;
  }

  /**
   * Get crawlChatRooms
   * @return crawlChatRooms
   */
  @javax.annotation.Nullable
  public Boolean getCrawlChatRooms() {
    return crawlChatRooms;
  }

  public void setCrawlChatRooms(Boolean crawlChatRooms) {
    this.crawlChatRooms = crawlChatRooms;
  }


  public QuipConfiguration crawlAttachments(Boolean crawlAttachments) {
    this.crawlAttachments = crawlAttachments;
    return this;
  }

  /**
   * Get crawlAttachments
   * @return crawlAttachments
   */
  @javax.annotation.Nullable
  public Boolean getCrawlAttachments() {
    return crawlAttachments;
  }

  public void setCrawlAttachments(Boolean crawlAttachments) {
    this.crawlAttachments = crawlAttachments;
  }


  public QuipConfiguration folderIds(List folderIds) {
    this.folderIds = folderIds;
    return this;
  }

  /**
   * Get folderIds
   * @return folderIds
   */
  @javax.annotation.Nullable
  public List getFolderIds() {
    return folderIds;
  }

  public void setFolderIds(List folderIds) {
    this.folderIds = folderIds;
  }


  public QuipConfiguration threadFieldMappings(List threadFieldMappings) {
    this.threadFieldMappings = threadFieldMappings;
    return this;
  }

  /**
   * Get threadFieldMappings
   * @return threadFieldMappings
   */
  @javax.annotation.Nullable
  public List getThreadFieldMappings() {
    return threadFieldMappings;
  }

  public void setThreadFieldMappings(List threadFieldMappings) {
    this.threadFieldMappings = threadFieldMappings;
  }


  public QuipConfiguration messageFieldMappings(List messageFieldMappings) {
    this.messageFieldMappings = messageFieldMappings;
    return this;
  }

  /**
   * Get messageFieldMappings
   * @return messageFieldMappings
   */
  @javax.annotation.Nullable
  public List getMessageFieldMappings() {
    return messageFieldMappings;
  }

  public void setMessageFieldMappings(List messageFieldMappings) {
    this.messageFieldMappings = messageFieldMappings;
  }


  public QuipConfiguration attachmentFieldMappings(List attachmentFieldMappings) {
    this.attachmentFieldMappings = attachmentFieldMappings;
    return this;
  }

  /**
   * Get attachmentFieldMappings
   * @return attachmentFieldMappings
   */
  @javax.annotation.Nullable
  public List getAttachmentFieldMappings() {
    return attachmentFieldMappings;
  }

  public void setAttachmentFieldMappings(List attachmentFieldMappings) {
    this.attachmentFieldMappings = attachmentFieldMappings;
  }


  public QuipConfiguration inclusionPatterns(List inclusionPatterns) {
    this.inclusionPatterns = inclusionPatterns;
    return this;
  }

  /**
   * Get inclusionPatterns
   * @return inclusionPatterns
   */
  @javax.annotation.Nullable
  public List getInclusionPatterns() {
    return inclusionPatterns;
  }

  public void setInclusionPatterns(List inclusionPatterns) {
    this.inclusionPatterns = inclusionPatterns;
  }


  public QuipConfiguration exclusionPatterns(List exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
    return this;
  }

  /**
   * Get exclusionPatterns
   * @return exclusionPatterns
   */
  @javax.annotation.Nullable
  public List getExclusionPatterns() {
    return exclusionPatterns;
  }

  public void setExclusionPatterns(List exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
  }


  public QuipConfiguration vpcConfiguration(QuipConfigurationVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
    return this;
  }

  /**
   * Get vpcConfiguration
   * @return vpcConfiguration
   */
  @javax.annotation.Nullable
  public QuipConfigurationVpcConfiguration getVpcConfiguration() {
    return vpcConfiguration;
  }

  public void setVpcConfiguration(QuipConfigurationVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuipConfiguration quipConfiguration = (QuipConfiguration) o;
    return Objects.equals(this.domain, quipConfiguration.domain) &&
        Objects.equals(this.secretArn, quipConfiguration.secretArn) &&
        Objects.equals(this.crawlFileComments, quipConfiguration.crawlFileComments) &&
        Objects.equals(this.crawlChatRooms, quipConfiguration.crawlChatRooms) &&
        Objects.equals(this.crawlAttachments, quipConfiguration.crawlAttachments) &&
        Objects.equals(this.folderIds, quipConfiguration.folderIds) &&
        Objects.equals(this.threadFieldMappings, quipConfiguration.threadFieldMappings) &&
        Objects.equals(this.messageFieldMappings, quipConfiguration.messageFieldMappings) &&
        Objects.equals(this.attachmentFieldMappings, quipConfiguration.attachmentFieldMappings) &&
        Objects.equals(this.inclusionPatterns, quipConfiguration.inclusionPatterns) &&
        Objects.equals(this.exclusionPatterns, quipConfiguration.exclusionPatterns) &&
        Objects.equals(this.vpcConfiguration, quipConfiguration.vpcConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, secretArn, crawlFileComments, crawlChatRooms, crawlAttachments, folderIds, threadFieldMappings, messageFieldMappings, attachmentFieldMappings, inclusionPatterns, exclusionPatterns, vpcConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuipConfiguration {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    secretArn: ").append(toIndentedString(secretArn)).append("\n");
    sb.append("    crawlFileComments: ").append(toIndentedString(crawlFileComments)).append("\n");
    sb.append("    crawlChatRooms: ").append(toIndentedString(crawlChatRooms)).append("\n");
    sb.append("    crawlAttachments: ").append(toIndentedString(crawlAttachments)).append("\n");
    sb.append("    folderIds: ").append(toIndentedString(folderIds)).append("\n");
    sb.append("    threadFieldMappings: ").append(toIndentedString(threadFieldMappings)).append("\n");
    sb.append("    messageFieldMappings: ").append(toIndentedString(messageFieldMappings)).append("\n");
    sb.append("    attachmentFieldMappings: ").append(toIndentedString(attachmentFieldMappings)).append("\n");
    sb.append("    inclusionPatterns: ").append(toIndentedString(inclusionPatterns)).append("\n");
    sb.append("    exclusionPatterns: ").append(toIndentedString(exclusionPatterns)).append("\n");
    sb.append("    vpcConfiguration: ").append(toIndentedString(vpcConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Domain");
    openapiFields.add("SecretArn");
    openapiFields.add("CrawlFileComments");
    openapiFields.add("CrawlChatRooms");
    openapiFields.add("CrawlAttachments");
    openapiFields.add("FolderIds");
    openapiFields.add("ThreadFieldMappings");
    openapiFields.add("MessageFieldMappings");
    openapiFields.add("AttachmentFieldMappings");
    openapiFields.add("InclusionPatterns");
    openapiFields.add("ExclusionPatterns");
    openapiFields.add("VpcConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Domain");
    openapiRequiredFields.add("SecretArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuipConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuipConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuipConfiguration is not found in the empty JSON string", QuipConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuipConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuipConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : QuipConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Domain`
      String.validateJsonElement(jsonObj.get("Domain"));
      // validate the required field `SecretArn`
      String.validateJsonElement(jsonObj.get("SecretArn"));
      // validate the optional field `CrawlFileComments`
      if (jsonObj.get("CrawlFileComments") != null && !jsonObj.get("CrawlFileComments").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrawlFileComments"));
      }
      // validate the optional field `CrawlChatRooms`
      if (jsonObj.get("CrawlChatRooms") != null && !jsonObj.get("CrawlChatRooms").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrawlChatRooms"));
      }
      // validate the optional field `CrawlAttachments`
      if (jsonObj.get("CrawlAttachments") != null && !jsonObj.get("CrawlAttachments").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrawlAttachments"));
      }
      // validate the optional field `FolderIds`
      if (jsonObj.get("FolderIds") != null && !jsonObj.get("FolderIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("FolderIds"));
      }
      // validate the optional field `ThreadFieldMappings`
      if (jsonObj.get("ThreadFieldMappings") != null && !jsonObj.get("ThreadFieldMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ThreadFieldMappings"));
      }
      // validate the optional field `MessageFieldMappings`
      if (jsonObj.get("MessageFieldMappings") != null && !jsonObj.get("MessageFieldMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MessageFieldMappings"));
      }
      // validate the optional field `AttachmentFieldMappings`
      if (jsonObj.get("AttachmentFieldMappings") != null && !jsonObj.get("AttachmentFieldMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AttachmentFieldMappings"));
      }
      // validate the optional field `InclusionPatterns`
      if (jsonObj.get("InclusionPatterns") != null && !jsonObj.get("InclusionPatterns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InclusionPatterns"));
      }
      // validate the optional field `ExclusionPatterns`
      if (jsonObj.get("ExclusionPatterns") != null && !jsonObj.get("ExclusionPatterns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExclusionPatterns"));
      }
      // validate the optional field `VpcConfiguration`
      if (jsonObj.get("VpcConfiguration") != null && !jsonObj.get("VpcConfiguration").isJsonNull()) {
        QuipConfigurationVpcConfiguration.validateJsonElement(jsonObj.get("VpcConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuipConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuipConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuipConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuipConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<QuipConfiguration>() {
           @Override
           public void write(JsonWriter out, QuipConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuipConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuipConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuipConfiguration
   * @throws IOException if the JSON string is invalid with respect to QuipConfiguration
   */
  public static QuipConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuipConfiguration.class);
  }

  /**
   * Convert an instance of QuipConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

