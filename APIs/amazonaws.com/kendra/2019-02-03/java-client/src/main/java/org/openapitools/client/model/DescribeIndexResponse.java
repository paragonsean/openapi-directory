/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeIndexResponseCapacityUnits;
import org.openapitools.client.model.DescribeIndexResponseIndexStatistics;
import org.openapitools.client.model.DescribeIndexResponseServerSideEncryptionConfiguration;
import org.openapitools.client.model.DescribeIndexResponseUserGroupResolutionConfiguration;
import org.openapitools.client.model.IndexEdition;
import org.openapitools.client.model.IndexStatus;
import org.openapitools.client.model.UserContextPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeIndexResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeIndexResponse {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EDITION = "Edition";
  @SerializedName(SERIALIZED_NAME_EDITION)
  private IndexEdition edition;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION = "ServerSideEncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION)
  private DescribeIndexResponseServerSideEncryptionConfiguration serverSideEncryptionConfiguration;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private IndexStatus status;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "UpdatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_DOCUMENT_METADATA_CONFIGURATIONS = "DocumentMetadataConfigurations";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_METADATA_CONFIGURATIONS)
  private List documentMetadataConfigurations;

  public static final String SERIALIZED_NAME_INDEX_STATISTICS = "IndexStatistics";
  @SerializedName(SERIALIZED_NAME_INDEX_STATISTICS)
  private DescribeIndexResponseIndexStatistics indexStatistics;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "ErrorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_CAPACITY_UNITS = "CapacityUnits";
  @SerializedName(SERIALIZED_NAME_CAPACITY_UNITS)
  private DescribeIndexResponseCapacityUnits capacityUnits;

  public static final String SERIALIZED_NAME_USER_TOKEN_CONFIGURATIONS = "UserTokenConfigurations";
  @SerializedName(SERIALIZED_NAME_USER_TOKEN_CONFIGURATIONS)
  private List userTokenConfigurations;

  public static final String SERIALIZED_NAME_USER_CONTEXT_POLICY = "UserContextPolicy";
  @SerializedName(SERIALIZED_NAME_USER_CONTEXT_POLICY)
  private UserContextPolicy userContextPolicy;

  public static final String SERIALIZED_NAME_USER_GROUP_RESOLUTION_CONFIGURATION = "UserGroupResolutionConfiguration";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_RESOLUTION_CONFIGURATION)
  private DescribeIndexResponseUserGroupResolutionConfiguration userGroupResolutionConfiguration;

  public DescribeIndexResponse() {
  }

  public DescribeIndexResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeIndexResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribeIndexResponse edition(IndexEdition edition) {
    this.edition = edition;
    return this;
  }

  /**
   * Get edition
   * @return edition
   */
  @javax.annotation.Nullable
  public IndexEdition getEdition() {
    return edition;
  }

  public void setEdition(IndexEdition edition) {
    this.edition = edition;
  }


  public DescribeIndexResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeIndexResponse serverSideEncryptionConfiguration(DescribeIndexResponseServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
    return this;
  }

  /**
   * Get serverSideEncryptionConfiguration
   * @return serverSideEncryptionConfiguration
   */
  @javax.annotation.Nullable
  public DescribeIndexResponseServerSideEncryptionConfiguration getServerSideEncryptionConfiguration() {
    return serverSideEncryptionConfiguration;
  }

  public void setServerSideEncryptionConfiguration(DescribeIndexResponseServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
  }


  public DescribeIndexResponse status(IndexStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public IndexStatus getStatus() {
    return status;
  }

  public void setStatus(IndexStatus status) {
    this.status = status;
  }


  public DescribeIndexResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeIndexResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeIndexResponse updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public DescribeIndexResponse documentMetadataConfigurations(List documentMetadataConfigurations) {
    this.documentMetadataConfigurations = documentMetadataConfigurations;
    return this;
  }

  /**
   * Get documentMetadataConfigurations
   * @return documentMetadataConfigurations
   */
  @javax.annotation.Nullable
  public List getDocumentMetadataConfigurations() {
    return documentMetadataConfigurations;
  }

  public void setDocumentMetadataConfigurations(List documentMetadataConfigurations) {
    this.documentMetadataConfigurations = documentMetadataConfigurations;
  }


  public DescribeIndexResponse indexStatistics(DescribeIndexResponseIndexStatistics indexStatistics) {
    this.indexStatistics = indexStatistics;
    return this;
  }

  /**
   * Get indexStatistics
   * @return indexStatistics
   */
  @javax.annotation.Nullable
  public DescribeIndexResponseIndexStatistics getIndexStatistics() {
    return indexStatistics;
  }

  public void setIndexStatistics(DescribeIndexResponseIndexStatistics indexStatistics) {
    this.indexStatistics = indexStatistics;
  }


  public DescribeIndexResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public DescribeIndexResponse capacityUnits(DescribeIndexResponseCapacityUnits capacityUnits) {
    this.capacityUnits = capacityUnits;
    return this;
  }

  /**
   * Get capacityUnits
   * @return capacityUnits
   */
  @javax.annotation.Nullable
  public DescribeIndexResponseCapacityUnits getCapacityUnits() {
    return capacityUnits;
  }

  public void setCapacityUnits(DescribeIndexResponseCapacityUnits capacityUnits) {
    this.capacityUnits = capacityUnits;
  }


  public DescribeIndexResponse userTokenConfigurations(List userTokenConfigurations) {
    this.userTokenConfigurations = userTokenConfigurations;
    return this;
  }

  /**
   * Get userTokenConfigurations
   * @return userTokenConfigurations
   */
  @javax.annotation.Nullable
  public List getUserTokenConfigurations() {
    return userTokenConfigurations;
  }

  public void setUserTokenConfigurations(List userTokenConfigurations) {
    this.userTokenConfigurations = userTokenConfigurations;
  }


  public DescribeIndexResponse userContextPolicy(UserContextPolicy userContextPolicy) {
    this.userContextPolicy = userContextPolicy;
    return this;
  }

  /**
   * Get userContextPolicy
   * @return userContextPolicy
   */
  @javax.annotation.Nullable
  public UserContextPolicy getUserContextPolicy() {
    return userContextPolicy;
  }

  public void setUserContextPolicy(UserContextPolicy userContextPolicy) {
    this.userContextPolicy = userContextPolicy;
  }


  public DescribeIndexResponse userGroupResolutionConfiguration(DescribeIndexResponseUserGroupResolutionConfiguration userGroupResolutionConfiguration) {
    this.userGroupResolutionConfiguration = userGroupResolutionConfiguration;
    return this;
  }

  /**
   * Get userGroupResolutionConfiguration
   * @return userGroupResolutionConfiguration
   */
  @javax.annotation.Nullable
  public DescribeIndexResponseUserGroupResolutionConfiguration getUserGroupResolutionConfiguration() {
    return userGroupResolutionConfiguration;
  }

  public void setUserGroupResolutionConfiguration(DescribeIndexResponseUserGroupResolutionConfiguration userGroupResolutionConfiguration) {
    this.userGroupResolutionConfiguration = userGroupResolutionConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeIndexResponse describeIndexResponse = (DescribeIndexResponse) o;
    return Objects.equals(this.name, describeIndexResponse.name) &&
        Objects.equals(this.id, describeIndexResponse.id) &&
        Objects.equals(this.edition, describeIndexResponse.edition) &&
        Objects.equals(this.roleArn, describeIndexResponse.roleArn) &&
        Objects.equals(this.serverSideEncryptionConfiguration, describeIndexResponse.serverSideEncryptionConfiguration) &&
        Objects.equals(this.status, describeIndexResponse.status) &&
        Objects.equals(this.description, describeIndexResponse.description) &&
        Objects.equals(this.createdAt, describeIndexResponse.createdAt) &&
        Objects.equals(this.updatedAt, describeIndexResponse.updatedAt) &&
        Objects.equals(this.documentMetadataConfigurations, describeIndexResponse.documentMetadataConfigurations) &&
        Objects.equals(this.indexStatistics, describeIndexResponse.indexStatistics) &&
        Objects.equals(this.errorMessage, describeIndexResponse.errorMessage) &&
        Objects.equals(this.capacityUnits, describeIndexResponse.capacityUnits) &&
        Objects.equals(this.userTokenConfigurations, describeIndexResponse.userTokenConfigurations) &&
        Objects.equals(this.userContextPolicy, describeIndexResponse.userContextPolicy) &&
        Objects.equals(this.userGroupResolutionConfiguration, describeIndexResponse.userGroupResolutionConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, edition, roleArn, serverSideEncryptionConfiguration, status, description, createdAt, updatedAt, documentMetadataConfigurations, indexStatistics, errorMessage, capacityUnits, userTokenConfigurations, userContextPolicy, userGroupResolutionConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeIndexResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    edition: ").append(toIndentedString(edition)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    serverSideEncryptionConfiguration: ").append(toIndentedString(serverSideEncryptionConfiguration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    documentMetadataConfigurations: ").append(toIndentedString(documentMetadataConfigurations)).append("\n");
    sb.append("    indexStatistics: ").append(toIndentedString(indexStatistics)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    capacityUnits: ").append(toIndentedString(capacityUnits)).append("\n");
    sb.append("    userTokenConfigurations: ").append(toIndentedString(userTokenConfigurations)).append("\n");
    sb.append("    userContextPolicy: ").append(toIndentedString(userContextPolicy)).append("\n");
    sb.append("    userGroupResolutionConfiguration: ").append(toIndentedString(userGroupResolutionConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Id");
    openapiFields.add("Edition");
    openapiFields.add("RoleArn");
    openapiFields.add("ServerSideEncryptionConfiguration");
    openapiFields.add("Status");
    openapiFields.add("Description");
    openapiFields.add("CreatedAt");
    openapiFields.add("UpdatedAt");
    openapiFields.add("DocumentMetadataConfigurations");
    openapiFields.add("IndexStatistics");
    openapiFields.add("ErrorMessage");
    openapiFields.add("CapacityUnits");
    openapiFields.add("UserTokenConfigurations");
    openapiFields.add("UserContextPolicy");
    openapiFields.add("UserGroupResolutionConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeIndexResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeIndexResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeIndexResponse is not found in the empty JSON string", DescribeIndexResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeIndexResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeIndexResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Edition`
      if (jsonObj.get("Edition") != null && !jsonObj.get("Edition").isJsonNull()) {
        IndexEdition.validateJsonElement(jsonObj.get("Edition"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `ServerSideEncryptionConfiguration`
      if (jsonObj.get("ServerSideEncryptionConfiguration") != null && !jsonObj.get("ServerSideEncryptionConfiguration").isJsonNull()) {
        DescribeIndexResponseServerSideEncryptionConfiguration.validateJsonElement(jsonObj.get("ServerSideEncryptionConfiguration"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        IndexStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `UpdatedAt`
      if (jsonObj.get("UpdatedAt") != null && !jsonObj.get("UpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UpdatedAt"));
      }
      // validate the optional field `DocumentMetadataConfigurations`
      if (jsonObj.get("DocumentMetadataConfigurations") != null && !jsonObj.get("DocumentMetadataConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DocumentMetadataConfigurations"));
      }
      // validate the optional field `IndexStatistics`
      if (jsonObj.get("IndexStatistics") != null && !jsonObj.get("IndexStatistics").isJsonNull()) {
        DescribeIndexResponseIndexStatistics.validateJsonElement(jsonObj.get("IndexStatistics"));
      }
      // validate the optional field `ErrorMessage`
      if (jsonObj.get("ErrorMessage") != null && !jsonObj.get("ErrorMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorMessage"));
      }
      // validate the optional field `CapacityUnits`
      if (jsonObj.get("CapacityUnits") != null && !jsonObj.get("CapacityUnits").isJsonNull()) {
        DescribeIndexResponseCapacityUnits.validateJsonElement(jsonObj.get("CapacityUnits"));
      }
      // validate the optional field `UserTokenConfigurations`
      if (jsonObj.get("UserTokenConfigurations") != null && !jsonObj.get("UserTokenConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("UserTokenConfigurations"));
      }
      // validate the optional field `UserContextPolicy`
      if (jsonObj.get("UserContextPolicy") != null && !jsonObj.get("UserContextPolicy").isJsonNull()) {
        UserContextPolicy.validateJsonElement(jsonObj.get("UserContextPolicy"));
      }
      // validate the optional field `UserGroupResolutionConfiguration`
      if (jsonObj.get("UserGroupResolutionConfiguration") != null && !jsonObj.get("UserGroupResolutionConfiguration").isJsonNull()) {
        DescribeIndexResponseUserGroupResolutionConfiguration.validateJsonElement(jsonObj.get("UserGroupResolutionConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeIndexResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeIndexResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeIndexResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeIndexResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeIndexResponse>() {
           @Override
           public void write(JsonWriter out, DescribeIndexResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeIndexResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeIndexResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeIndexResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeIndexResponse
   */
  public static DescribeIndexResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeIndexResponse.class);
  }

  /**
   * Convert an instance of DescribeIndexResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

