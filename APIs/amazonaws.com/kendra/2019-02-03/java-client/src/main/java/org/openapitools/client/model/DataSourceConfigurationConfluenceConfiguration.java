/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfluenceAuthenticationType;
import org.openapitools.client.model.ConfluenceConfigurationAttachmentConfiguration;
import org.openapitools.client.model.ConfluenceConfigurationBlogConfiguration;
import org.openapitools.client.model.ConfluenceConfigurationPageConfiguration;
import org.openapitools.client.model.ConfluenceConfigurationProxyConfiguration;
import org.openapitools.client.model.ConfluenceConfigurationSpaceConfiguration;
import org.openapitools.client.model.ConfluenceConfigurationVpcConfiguration;
import org.openapitools.client.model.ConfluenceVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DataSourceConfigurationConfluenceConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DataSourceConfigurationConfluenceConfiguration {
  public static final String SERIALIZED_NAME_SERVER_URL = "ServerUrl";
  @SerializedName(SERIALIZED_NAME_SERVER_URL)
  private String serverUrl;

  public static final String SERIALIZED_NAME_SECRET_ARN = "SecretArn";
  @SerializedName(SERIALIZED_NAME_SECRET_ARN)
  private String secretArn;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private ConfluenceVersion version;

  public static final String SERIALIZED_NAME_SPACE_CONFIGURATION = "SpaceConfiguration";
  @SerializedName(SERIALIZED_NAME_SPACE_CONFIGURATION)
  private ConfluenceConfigurationSpaceConfiguration spaceConfiguration;

  public static final String SERIALIZED_NAME_PAGE_CONFIGURATION = "PageConfiguration";
  @SerializedName(SERIALIZED_NAME_PAGE_CONFIGURATION)
  private ConfluenceConfigurationPageConfiguration pageConfiguration;

  public static final String SERIALIZED_NAME_BLOG_CONFIGURATION = "BlogConfiguration";
  @SerializedName(SERIALIZED_NAME_BLOG_CONFIGURATION)
  private ConfluenceConfigurationBlogConfiguration blogConfiguration;

  public static final String SERIALIZED_NAME_ATTACHMENT_CONFIGURATION = "AttachmentConfiguration";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_CONFIGURATION)
  private ConfluenceConfigurationAttachmentConfiguration attachmentConfiguration;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION = "VpcConfiguration";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION)
  private ConfluenceConfigurationVpcConfiguration vpcConfiguration;

  public static final String SERIALIZED_NAME_INCLUSION_PATTERNS = "InclusionPatterns";
  @SerializedName(SERIALIZED_NAME_INCLUSION_PATTERNS)
  private List inclusionPatterns;

  public static final String SERIALIZED_NAME_EXCLUSION_PATTERNS = "ExclusionPatterns";
  @SerializedName(SERIALIZED_NAME_EXCLUSION_PATTERNS)
  private List exclusionPatterns;

  public static final String SERIALIZED_NAME_PROXY_CONFIGURATION = "ProxyConfiguration";
  @SerializedName(SERIALIZED_NAME_PROXY_CONFIGURATION)
  private ConfluenceConfigurationProxyConfiguration proxyConfiguration;

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "AuthenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private ConfluenceAuthenticationType authenticationType;

  public DataSourceConfigurationConfluenceConfiguration() {
  }

  public DataSourceConfigurationConfluenceConfiguration serverUrl(String serverUrl) {
    this.serverUrl = serverUrl;
    return this;
  }

  /**
   * Get serverUrl
   * @return serverUrl
   */
  @javax.annotation.Nonnull
  public String getServerUrl() {
    return serverUrl;
  }

  public void setServerUrl(String serverUrl) {
    this.serverUrl = serverUrl;
  }


  public DataSourceConfigurationConfluenceConfiguration secretArn(String secretArn) {
    this.secretArn = secretArn;
    return this;
  }

  /**
   * Get secretArn
   * @return secretArn
   */
  @javax.annotation.Nonnull
  public String getSecretArn() {
    return secretArn;
  }

  public void setSecretArn(String secretArn) {
    this.secretArn = secretArn;
  }


  public DataSourceConfigurationConfluenceConfiguration version(ConfluenceVersion version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nonnull
  public ConfluenceVersion getVersion() {
    return version;
  }

  public void setVersion(ConfluenceVersion version) {
    this.version = version;
  }


  public DataSourceConfigurationConfluenceConfiguration spaceConfiguration(ConfluenceConfigurationSpaceConfiguration spaceConfiguration) {
    this.spaceConfiguration = spaceConfiguration;
    return this;
  }

  /**
   * Get spaceConfiguration
   * @return spaceConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationSpaceConfiguration getSpaceConfiguration() {
    return spaceConfiguration;
  }

  public void setSpaceConfiguration(ConfluenceConfigurationSpaceConfiguration spaceConfiguration) {
    this.spaceConfiguration = spaceConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration pageConfiguration(ConfluenceConfigurationPageConfiguration pageConfiguration) {
    this.pageConfiguration = pageConfiguration;
    return this;
  }

  /**
   * Get pageConfiguration
   * @return pageConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationPageConfiguration getPageConfiguration() {
    return pageConfiguration;
  }

  public void setPageConfiguration(ConfluenceConfigurationPageConfiguration pageConfiguration) {
    this.pageConfiguration = pageConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration blogConfiguration(ConfluenceConfigurationBlogConfiguration blogConfiguration) {
    this.blogConfiguration = blogConfiguration;
    return this;
  }

  /**
   * Get blogConfiguration
   * @return blogConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationBlogConfiguration getBlogConfiguration() {
    return blogConfiguration;
  }

  public void setBlogConfiguration(ConfluenceConfigurationBlogConfiguration blogConfiguration) {
    this.blogConfiguration = blogConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration attachmentConfiguration(ConfluenceConfigurationAttachmentConfiguration attachmentConfiguration) {
    this.attachmentConfiguration = attachmentConfiguration;
    return this;
  }

  /**
   * Get attachmentConfiguration
   * @return attachmentConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationAttachmentConfiguration getAttachmentConfiguration() {
    return attachmentConfiguration;
  }

  public void setAttachmentConfiguration(ConfluenceConfigurationAttachmentConfiguration attachmentConfiguration) {
    this.attachmentConfiguration = attachmentConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration vpcConfiguration(ConfluenceConfigurationVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
    return this;
  }

  /**
   * Get vpcConfiguration
   * @return vpcConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationVpcConfiguration getVpcConfiguration() {
    return vpcConfiguration;
  }

  public void setVpcConfiguration(ConfluenceConfigurationVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration inclusionPatterns(List inclusionPatterns) {
    this.inclusionPatterns = inclusionPatterns;
    return this;
  }

  /**
   * Get inclusionPatterns
   * @return inclusionPatterns
   */
  @javax.annotation.Nullable
  public List getInclusionPatterns() {
    return inclusionPatterns;
  }

  public void setInclusionPatterns(List inclusionPatterns) {
    this.inclusionPatterns = inclusionPatterns;
  }


  public DataSourceConfigurationConfluenceConfiguration exclusionPatterns(List exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
    return this;
  }

  /**
   * Get exclusionPatterns
   * @return exclusionPatterns
   */
  @javax.annotation.Nullable
  public List getExclusionPatterns() {
    return exclusionPatterns;
  }

  public void setExclusionPatterns(List exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
  }


  public DataSourceConfigurationConfluenceConfiguration proxyConfiguration(ConfluenceConfigurationProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
    return this;
  }

  /**
   * Get proxyConfiguration
   * @return proxyConfiguration
   */
  @javax.annotation.Nullable
  public ConfluenceConfigurationProxyConfiguration getProxyConfiguration() {
    return proxyConfiguration;
  }

  public void setProxyConfiguration(ConfluenceConfigurationProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
  }


  public DataSourceConfigurationConfluenceConfiguration authenticationType(ConfluenceAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

  /**
   * Get authenticationType
   * @return authenticationType
   */
  @javax.annotation.Nullable
  public ConfluenceAuthenticationType getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(ConfluenceAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataSourceConfigurationConfluenceConfiguration dataSourceConfigurationConfluenceConfiguration = (DataSourceConfigurationConfluenceConfiguration) o;
    return Objects.equals(this.serverUrl, dataSourceConfigurationConfluenceConfiguration.serverUrl) &&
        Objects.equals(this.secretArn, dataSourceConfigurationConfluenceConfiguration.secretArn) &&
        Objects.equals(this.version, dataSourceConfigurationConfluenceConfiguration.version) &&
        Objects.equals(this.spaceConfiguration, dataSourceConfigurationConfluenceConfiguration.spaceConfiguration) &&
        Objects.equals(this.pageConfiguration, dataSourceConfigurationConfluenceConfiguration.pageConfiguration) &&
        Objects.equals(this.blogConfiguration, dataSourceConfigurationConfluenceConfiguration.blogConfiguration) &&
        Objects.equals(this.attachmentConfiguration, dataSourceConfigurationConfluenceConfiguration.attachmentConfiguration) &&
        Objects.equals(this.vpcConfiguration, dataSourceConfigurationConfluenceConfiguration.vpcConfiguration) &&
        Objects.equals(this.inclusionPatterns, dataSourceConfigurationConfluenceConfiguration.inclusionPatterns) &&
        Objects.equals(this.exclusionPatterns, dataSourceConfigurationConfluenceConfiguration.exclusionPatterns) &&
        Objects.equals(this.proxyConfiguration, dataSourceConfigurationConfluenceConfiguration.proxyConfiguration) &&
        Objects.equals(this.authenticationType, dataSourceConfigurationConfluenceConfiguration.authenticationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverUrl, secretArn, version, spaceConfiguration, pageConfiguration, blogConfiguration, attachmentConfiguration, vpcConfiguration, inclusionPatterns, exclusionPatterns, proxyConfiguration, authenticationType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataSourceConfigurationConfluenceConfiguration {\n");
    sb.append("    serverUrl: ").append(toIndentedString(serverUrl)).append("\n");
    sb.append("    secretArn: ").append(toIndentedString(secretArn)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    spaceConfiguration: ").append(toIndentedString(spaceConfiguration)).append("\n");
    sb.append("    pageConfiguration: ").append(toIndentedString(pageConfiguration)).append("\n");
    sb.append("    blogConfiguration: ").append(toIndentedString(blogConfiguration)).append("\n");
    sb.append("    attachmentConfiguration: ").append(toIndentedString(attachmentConfiguration)).append("\n");
    sb.append("    vpcConfiguration: ").append(toIndentedString(vpcConfiguration)).append("\n");
    sb.append("    inclusionPatterns: ").append(toIndentedString(inclusionPatterns)).append("\n");
    sb.append("    exclusionPatterns: ").append(toIndentedString(exclusionPatterns)).append("\n");
    sb.append("    proxyConfiguration: ").append(toIndentedString(proxyConfiguration)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ServerUrl");
    openapiFields.add("SecretArn");
    openapiFields.add("Version");
    openapiFields.add("SpaceConfiguration");
    openapiFields.add("PageConfiguration");
    openapiFields.add("BlogConfiguration");
    openapiFields.add("AttachmentConfiguration");
    openapiFields.add("VpcConfiguration");
    openapiFields.add("InclusionPatterns");
    openapiFields.add("ExclusionPatterns");
    openapiFields.add("ProxyConfiguration");
    openapiFields.add("AuthenticationType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServerUrl");
    openapiRequiredFields.add("SecretArn");
    openapiRequiredFields.add("Version");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DataSourceConfigurationConfluenceConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DataSourceConfigurationConfluenceConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataSourceConfigurationConfluenceConfiguration is not found in the empty JSON string", DataSourceConfigurationConfluenceConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DataSourceConfigurationConfluenceConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DataSourceConfigurationConfluenceConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DataSourceConfigurationConfluenceConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ServerUrl`
      String.validateJsonElement(jsonObj.get("ServerUrl"));
      // validate the required field `SecretArn`
      String.validateJsonElement(jsonObj.get("SecretArn"));
      // validate the required field `Version`
      ConfluenceVersion.validateJsonElement(jsonObj.get("Version"));
      // validate the optional field `SpaceConfiguration`
      if (jsonObj.get("SpaceConfiguration") != null && !jsonObj.get("SpaceConfiguration").isJsonNull()) {
        ConfluenceConfigurationSpaceConfiguration.validateJsonElement(jsonObj.get("SpaceConfiguration"));
      }
      // validate the optional field `PageConfiguration`
      if (jsonObj.get("PageConfiguration") != null && !jsonObj.get("PageConfiguration").isJsonNull()) {
        ConfluenceConfigurationPageConfiguration.validateJsonElement(jsonObj.get("PageConfiguration"));
      }
      // validate the optional field `BlogConfiguration`
      if (jsonObj.get("BlogConfiguration") != null && !jsonObj.get("BlogConfiguration").isJsonNull()) {
        ConfluenceConfigurationBlogConfiguration.validateJsonElement(jsonObj.get("BlogConfiguration"));
      }
      // validate the optional field `AttachmentConfiguration`
      if (jsonObj.get("AttachmentConfiguration") != null && !jsonObj.get("AttachmentConfiguration").isJsonNull()) {
        ConfluenceConfigurationAttachmentConfiguration.validateJsonElement(jsonObj.get("AttachmentConfiguration"));
      }
      // validate the optional field `VpcConfiguration`
      if (jsonObj.get("VpcConfiguration") != null && !jsonObj.get("VpcConfiguration").isJsonNull()) {
        ConfluenceConfigurationVpcConfiguration.validateJsonElement(jsonObj.get("VpcConfiguration"));
      }
      // validate the optional field `InclusionPatterns`
      if (jsonObj.get("InclusionPatterns") != null && !jsonObj.get("InclusionPatterns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InclusionPatterns"));
      }
      // validate the optional field `ExclusionPatterns`
      if (jsonObj.get("ExclusionPatterns") != null && !jsonObj.get("ExclusionPatterns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExclusionPatterns"));
      }
      // validate the optional field `ProxyConfiguration`
      if (jsonObj.get("ProxyConfiguration") != null && !jsonObj.get("ProxyConfiguration").isJsonNull()) {
        ConfluenceConfigurationProxyConfiguration.validateJsonElement(jsonObj.get("ProxyConfiguration"));
      }
      // validate the optional field `AuthenticationType`
      if (jsonObj.get("AuthenticationType") != null && !jsonObj.get("AuthenticationType").isJsonNull()) {
        ConfluenceAuthenticationType.validateJsonElement(jsonObj.get("AuthenticationType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataSourceConfigurationConfluenceConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataSourceConfigurationConfluenceConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataSourceConfigurationConfluenceConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataSourceConfigurationConfluenceConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<DataSourceConfigurationConfluenceConfiguration>() {
           @Override
           public void write(JsonWriter out, DataSourceConfigurationConfluenceConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DataSourceConfigurationConfluenceConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DataSourceConfigurationConfluenceConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DataSourceConfigurationConfluenceConfiguration
   * @throws IOException if the JSON string is invalid with respect to DataSourceConfigurationConfluenceConfiguration
   */
  public static DataSourceConfigurationConfluenceConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataSourceConfigurationConfluenceConfiguration.class);
  }

  /**
   * Convert an instance of DataSourceConfigurationConfluenceConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

