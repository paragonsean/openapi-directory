/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InlineCustomDocumentEnrichmentConfigurationCondition;
import org.openapitools.client.model.InlineCustomDocumentEnrichmentConfigurationTarget;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Provides the configuration information for applying basic logic to alter document metadata and content when ingesting documents into Amazon Kendra. To apply advanced logic, to go beyond what you can do with basic logic, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kendra/latest/dg/API_HookConfiguration.html\&quot;&gt;HookConfiguration&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html\&quot;&gt;Customizing document metadata during the ingestion process&lt;/a&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InlineCustomDocumentEnrichmentConfiguration {
  public static final String SERIALIZED_NAME_CONDITION = "Condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private InlineCustomDocumentEnrichmentConfigurationCondition condition;

  public static final String SERIALIZED_NAME_TARGET = "Target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private InlineCustomDocumentEnrichmentConfigurationTarget target;

  public static final String SERIALIZED_NAME_DOCUMENT_CONTENT_DELETION = "DocumentContentDeletion";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_CONTENT_DELETION)
  private Boolean documentContentDeletion;

  public InlineCustomDocumentEnrichmentConfiguration() {
  }

  public InlineCustomDocumentEnrichmentConfiguration condition(InlineCustomDocumentEnrichmentConfigurationCondition condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Get condition
   * @return condition
   */
  @javax.annotation.Nullable
  public InlineCustomDocumentEnrichmentConfigurationCondition getCondition() {
    return condition;
  }

  public void setCondition(InlineCustomDocumentEnrichmentConfigurationCondition condition) {
    this.condition = condition;
  }


  public InlineCustomDocumentEnrichmentConfiguration target(InlineCustomDocumentEnrichmentConfigurationTarget target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nullable
  public InlineCustomDocumentEnrichmentConfigurationTarget getTarget() {
    return target;
  }

  public void setTarget(InlineCustomDocumentEnrichmentConfigurationTarget target) {
    this.target = target;
  }


  public InlineCustomDocumentEnrichmentConfiguration documentContentDeletion(Boolean documentContentDeletion) {
    this.documentContentDeletion = documentContentDeletion;
    return this;
  }

  /**
   * Get documentContentDeletion
   * @return documentContentDeletion
   */
  @javax.annotation.Nullable
  public Boolean getDocumentContentDeletion() {
    return documentContentDeletion;
  }

  public void setDocumentContentDeletion(Boolean documentContentDeletion) {
    this.documentContentDeletion = documentContentDeletion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineCustomDocumentEnrichmentConfiguration inlineCustomDocumentEnrichmentConfiguration = (InlineCustomDocumentEnrichmentConfiguration) o;
    return Objects.equals(this.condition, inlineCustomDocumentEnrichmentConfiguration.condition) &&
        Objects.equals(this.target, inlineCustomDocumentEnrichmentConfiguration.target) &&
        Objects.equals(this.documentContentDeletion, inlineCustomDocumentEnrichmentConfiguration.documentContentDeletion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(condition, target, documentContentDeletion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineCustomDocumentEnrichmentConfiguration {\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    documentContentDeletion: ").append(toIndentedString(documentContentDeletion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Condition");
    openapiFields.add("Target");
    openapiFields.add("DocumentContentDeletion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InlineCustomDocumentEnrichmentConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InlineCustomDocumentEnrichmentConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InlineCustomDocumentEnrichmentConfiguration is not found in the empty JSON string", InlineCustomDocumentEnrichmentConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InlineCustomDocumentEnrichmentConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InlineCustomDocumentEnrichmentConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Condition`
      if (jsonObj.get("Condition") != null && !jsonObj.get("Condition").isJsonNull()) {
        InlineCustomDocumentEnrichmentConfigurationCondition.validateJsonElement(jsonObj.get("Condition"));
      }
      // validate the optional field `Target`
      if (jsonObj.get("Target") != null && !jsonObj.get("Target").isJsonNull()) {
        InlineCustomDocumentEnrichmentConfigurationTarget.validateJsonElement(jsonObj.get("Target"));
      }
      // validate the optional field `DocumentContentDeletion`
      if (jsonObj.get("DocumentContentDeletion") != null && !jsonObj.get("DocumentContentDeletion").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DocumentContentDeletion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InlineCustomDocumentEnrichmentConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InlineCustomDocumentEnrichmentConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InlineCustomDocumentEnrichmentConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InlineCustomDocumentEnrichmentConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<InlineCustomDocumentEnrichmentConfiguration>() {
           @Override
           public void write(JsonWriter out, InlineCustomDocumentEnrichmentConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InlineCustomDocumentEnrichmentConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InlineCustomDocumentEnrichmentConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InlineCustomDocumentEnrichmentConfiguration
   * @throws IOException if the JSON string is invalid with respect to InlineCustomDocumentEnrichmentConfiguration
   */
  public static InlineCustomDocumentEnrichmentConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InlineCustomDocumentEnrichmentConfiguration.class);
  }

  /**
   * Convert an instance of InlineCustomDocumentEnrichmentConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

