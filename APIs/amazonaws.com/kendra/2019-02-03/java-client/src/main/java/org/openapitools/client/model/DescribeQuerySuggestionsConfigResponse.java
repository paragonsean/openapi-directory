/*
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig;
import org.openapitools.client.model.Mode;
import org.openapitools.client.model.QuerySuggestionsStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeQuerySuggestionsConfigResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.778416-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeQuerySuggestionsConfigResponse {
  public static final String SERIALIZED_NAME_MODE = "Mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private Mode mode;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private QuerySuggestionsStatus status;

  public static final String SERIALIZED_NAME_QUERY_LOG_LOOK_BACK_WINDOW_IN_DAYS = "QueryLogLookBackWindowInDays";
  @SerializedName(SERIALIZED_NAME_QUERY_LOG_LOOK_BACK_WINDOW_IN_DAYS)
  private Integer queryLogLookBackWindowInDays;

  public static final String SERIALIZED_NAME_INCLUDE_QUERIES_WITHOUT_USER_INFORMATION = "IncludeQueriesWithoutUserInformation";
  @SerializedName(SERIALIZED_NAME_INCLUDE_QUERIES_WITHOUT_USER_INFORMATION)
  private Boolean includeQueriesWithoutUserInformation;

  public static final String SERIALIZED_NAME_MINIMUM_NUMBER_OF_QUERYING_USERS = "MinimumNumberOfQueryingUsers";
  @SerializedName(SERIALIZED_NAME_MINIMUM_NUMBER_OF_QUERYING_USERS)
  private Integer minimumNumberOfQueryingUsers;

  public static final String SERIALIZED_NAME_MINIMUM_QUERY_COUNT = "MinimumQueryCount";
  @SerializedName(SERIALIZED_NAME_MINIMUM_QUERY_COUNT)
  private Integer minimumQueryCount;

  public static final String SERIALIZED_NAME_LAST_SUGGESTIONS_BUILD_TIME = "LastSuggestionsBuildTime";
  @SerializedName(SERIALIZED_NAME_LAST_SUGGESTIONS_BUILD_TIME)
  private OffsetDateTime lastSuggestionsBuildTime;

  public static final String SERIALIZED_NAME_LAST_CLEAR_TIME = "LastClearTime";
  @SerializedName(SERIALIZED_NAME_LAST_CLEAR_TIME)
  private OffsetDateTime lastClearTime;

  public static final String SERIALIZED_NAME_TOTAL_SUGGESTIONS_COUNT = "TotalSuggestionsCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_SUGGESTIONS_COUNT)
  private Integer totalSuggestionsCount;

  public static final String SERIALIZED_NAME_ATTRIBUTE_SUGGESTIONS_CONFIG = "AttributeSuggestionsConfig";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_SUGGESTIONS_CONFIG)
  private DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig attributeSuggestionsConfig;

  public DescribeQuerySuggestionsConfigResponse() {
  }

  public DescribeQuerySuggestionsConfigResponse mode(Mode mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public Mode getMode() {
    return mode;
  }

  public void setMode(Mode mode) {
    this.mode = mode;
  }


  public DescribeQuerySuggestionsConfigResponse status(QuerySuggestionsStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public QuerySuggestionsStatus getStatus() {
    return status;
  }

  public void setStatus(QuerySuggestionsStatus status) {
    this.status = status;
  }


  public DescribeQuerySuggestionsConfigResponse queryLogLookBackWindowInDays(Integer queryLogLookBackWindowInDays) {
    this.queryLogLookBackWindowInDays = queryLogLookBackWindowInDays;
    return this;
  }

  /**
   * Get queryLogLookBackWindowInDays
   * @return queryLogLookBackWindowInDays
   */
  @javax.annotation.Nullable
  public Integer getQueryLogLookBackWindowInDays() {
    return queryLogLookBackWindowInDays;
  }

  public void setQueryLogLookBackWindowInDays(Integer queryLogLookBackWindowInDays) {
    this.queryLogLookBackWindowInDays = queryLogLookBackWindowInDays;
  }


  public DescribeQuerySuggestionsConfigResponse includeQueriesWithoutUserInformation(Boolean includeQueriesWithoutUserInformation) {
    this.includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformation;
    return this;
  }

  /**
   * Get includeQueriesWithoutUserInformation
   * @return includeQueriesWithoutUserInformation
   */
  @javax.annotation.Nullable
  public Boolean getIncludeQueriesWithoutUserInformation() {
    return includeQueriesWithoutUserInformation;
  }

  public void setIncludeQueriesWithoutUserInformation(Boolean includeQueriesWithoutUserInformation) {
    this.includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformation;
  }


  public DescribeQuerySuggestionsConfigResponse minimumNumberOfQueryingUsers(Integer minimumNumberOfQueryingUsers) {
    this.minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsers;
    return this;
  }

  /**
   * Get minimumNumberOfQueryingUsers
   * @return minimumNumberOfQueryingUsers
   */
  @javax.annotation.Nullable
  public Integer getMinimumNumberOfQueryingUsers() {
    return minimumNumberOfQueryingUsers;
  }

  public void setMinimumNumberOfQueryingUsers(Integer minimumNumberOfQueryingUsers) {
    this.minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsers;
  }


  public DescribeQuerySuggestionsConfigResponse minimumQueryCount(Integer minimumQueryCount) {
    this.minimumQueryCount = minimumQueryCount;
    return this;
  }

  /**
   * Get minimumQueryCount
   * @return minimumQueryCount
   */
  @javax.annotation.Nullable
  public Integer getMinimumQueryCount() {
    return minimumQueryCount;
  }

  public void setMinimumQueryCount(Integer minimumQueryCount) {
    this.minimumQueryCount = minimumQueryCount;
  }


  public DescribeQuerySuggestionsConfigResponse lastSuggestionsBuildTime(OffsetDateTime lastSuggestionsBuildTime) {
    this.lastSuggestionsBuildTime = lastSuggestionsBuildTime;
    return this;
  }

  /**
   * Get lastSuggestionsBuildTime
   * @return lastSuggestionsBuildTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSuggestionsBuildTime() {
    return lastSuggestionsBuildTime;
  }

  public void setLastSuggestionsBuildTime(OffsetDateTime lastSuggestionsBuildTime) {
    this.lastSuggestionsBuildTime = lastSuggestionsBuildTime;
  }


  public DescribeQuerySuggestionsConfigResponse lastClearTime(OffsetDateTime lastClearTime) {
    this.lastClearTime = lastClearTime;
    return this;
  }

  /**
   * Get lastClearTime
   * @return lastClearTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastClearTime() {
    return lastClearTime;
  }

  public void setLastClearTime(OffsetDateTime lastClearTime) {
    this.lastClearTime = lastClearTime;
  }


  public DescribeQuerySuggestionsConfigResponse totalSuggestionsCount(Integer totalSuggestionsCount) {
    this.totalSuggestionsCount = totalSuggestionsCount;
    return this;
  }

  /**
   * Get totalSuggestionsCount
   * @return totalSuggestionsCount
   */
  @javax.annotation.Nullable
  public Integer getTotalSuggestionsCount() {
    return totalSuggestionsCount;
  }

  public void setTotalSuggestionsCount(Integer totalSuggestionsCount) {
    this.totalSuggestionsCount = totalSuggestionsCount;
  }


  public DescribeQuerySuggestionsConfigResponse attributeSuggestionsConfig(DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig attributeSuggestionsConfig) {
    this.attributeSuggestionsConfig = attributeSuggestionsConfig;
    return this;
  }

  /**
   * Get attributeSuggestionsConfig
   * @return attributeSuggestionsConfig
   */
  @javax.annotation.Nullable
  public DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig getAttributeSuggestionsConfig() {
    return attributeSuggestionsConfig;
  }

  public void setAttributeSuggestionsConfig(DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig attributeSuggestionsConfig) {
    this.attributeSuggestionsConfig = attributeSuggestionsConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeQuerySuggestionsConfigResponse describeQuerySuggestionsConfigResponse = (DescribeQuerySuggestionsConfigResponse) o;
    return Objects.equals(this.mode, describeQuerySuggestionsConfigResponse.mode) &&
        Objects.equals(this.status, describeQuerySuggestionsConfigResponse.status) &&
        Objects.equals(this.queryLogLookBackWindowInDays, describeQuerySuggestionsConfigResponse.queryLogLookBackWindowInDays) &&
        Objects.equals(this.includeQueriesWithoutUserInformation, describeQuerySuggestionsConfigResponse.includeQueriesWithoutUserInformation) &&
        Objects.equals(this.minimumNumberOfQueryingUsers, describeQuerySuggestionsConfigResponse.minimumNumberOfQueryingUsers) &&
        Objects.equals(this.minimumQueryCount, describeQuerySuggestionsConfigResponse.minimumQueryCount) &&
        Objects.equals(this.lastSuggestionsBuildTime, describeQuerySuggestionsConfigResponse.lastSuggestionsBuildTime) &&
        Objects.equals(this.lastClearTime, describeQuerySuggestionsConfigResponse.lastClearTime) &&
        Objects.equals(this.totalSuggestionsCount, describeQuerySuggestionsConfigResponse.totalSuggestionsCount) &&
        Objects.equals(this.attributeSuggestionsConfig, describeQuerySuggestionsConfigResponse.attributeSuggestionsConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, status, queryLogLookBackWindowInDays, includeQueriesWithoutUserInformation, minimumNumberOfQueryingUsers, minimumQueryCount, lastSuggestionsBuildTime, lastClearTime, totalSuggestionsCount, attributeSuggestionsConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeQuerySuggestionsConfigResponse {\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    queryLogLookBackWindowInDays: ").append(toIndentedString(queryLogLookBackWindowInDays)).append("\n");
    sb.append("    includeQueriesWithoutUserInformation: ").append(toIndentedString(includeQueriesWithoutUserInformation)).append("\n");
    sb.append("    minimumNumberOfQueryingUsers: ").append(toIndentedString(minimumNumberOfQueryingUsers)).append("\n");
    sb.append("    minimumQueryCount: ").append(toIndentedString(minimumQueryCount)).append("\n");
    sb.append("    lastSuggestionsBuildTime: ").append(toIndentedString(lastSuggestionsBuildTime)).append("\n");
    sb.append("    lastClearTime: ").append(toIndentedString(lastClearTime)).append("\n");
    sb.append("    totalSuggestionsCount: ").append(toIndentedString(totalSuggestionsCount)).append("\n");
    sb.append("    attributeSuggestionsConfig: ").append(toIndentedString(attributeSuggestionsConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Mode");
    openapiFields.add("Status");
    openapiFields.add("QueryLogLookBackWindowInDays");
    openapiFields.add("IncludeQueriesWithoutUserInformation");
    openapiFields.add("MinimumNumberOfQueryingUsers");
    openapiFields.add("MinimumQueryCount");
    openapiFields.add("LastSuggestionsBuildTime");
    openapiFields.add("LastClearTime");
    openapiFields.add("TotalSuggestionsCount");
    openapiFields.add("AttributeSuggestionsConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeQuerySuggestionsConfigResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeQuerySuggestionsConfigResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeQuerySuggestionsConfigResponse is not found in the empty JSON string", DescribeQuerySuggestionsConfigResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeQuerySuggestionsConfigResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeQuerySuggestionsConfigResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Mode`
      if (jsonObj.get("Mode") != null && !jsonObj.get("Mode").isJsonNull()) {
        Mode.validateJsonElement(jsonObj.get("Mode"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        QuerySuggestionsStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `QueryLogLookBackWindowInDays`
      if (jsonObj.get("QueryLogLookBackWindowInDays") != null && !jsonObj.get("QueryLogLookBackWindowInDays").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("QueryLogLookBackWindowInDays"));
      }
      // validate the optional field `IncludeQueriesWithoutUserInformation`
      if (jsonObj.get("IncludeQueriesWithoutUserInformation") != null && !jsonObj.get("IncludeQueriesWithoutUserInformation").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeQueriesWithoutUserInformation"));
      }
      // validate the optional field `MinimumNumberOfQueryingUsers`
      if (jsonObj.get("MinimumNumberOfQueryingUsers") != null && !jsonObj.get("MinimumNumberOfQueryingUsers").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinimumNumberOfQueryingUsers"));
      }
      // validate the optional field `MinimumQueryCount`
      if (jsonObj.get("MinimumQueryCount") != null && !jsonObj.get("MinimumQueryCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinimumQueryCount"));
      }
      // validate the optional field `LastSuggestionsBuildTime`
      if (jsonObj.get("LastSuggestionsBuildTime") != null && !jsonObj.get("LastSuggestionsBuildTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastSuggestionsBuildTime"));
      }
      // validate the optional field `LastClearTime`
      if (jsonObj.get("LastClearTime") != null && !jsonObj.get("LastClearTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastClearTime"));
      }
      // validate the optional field `TotalSuggestionsCount`
      if (jsonObj.get("TotalSuggestionsCount") != null && !jsonObj.get("TotalSuggestionsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalSuggestionsCount"));
      }
      // validate the optional field `AttributeSuggestionsConfig`
      if (jsonObj.get("AttributeSuggestionsConfig") != null && !jsonObj.get("AttributeSuggestionsConfig").isJsonNull()) {
        DescribeQuerySuggestionsConfigResponseAttributeSuggestionsConfig.validateJsonElement(jsonObj.get("AttributeSuggestionsConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeQuerySuggestionsConfigResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeQuerySuggestionsConfigResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeQuerySuggestionsConfigResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeQuerySuggestionsConfigResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeQuerySuggestionsConfigResponse>() {
           @Override
           public void write(JsonWriter out, DescribeQuerySuggestionsConfigResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeQuerySuggestionsConfigResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeQuerySuggestionsConfigResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeQuerySuggestionsConfigResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeQuerySuggestionsConfigResponse
   */
  public static DescribeQuerySuggestionsConfigResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeQuerySuggestionsConfigResponse.class);
  }

  /**
   * Convert an instance of DescribeQuerySuggestionsConfigResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

