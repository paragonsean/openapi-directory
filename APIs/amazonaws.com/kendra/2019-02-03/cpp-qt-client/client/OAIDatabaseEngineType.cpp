/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseEngineType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseEngineType::OAIDatabaseEngineType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseEngineType::OAIDatabaseEngineType() {
    this->initializeModel();
}

OAIDatabaseEngineType::~OAIDatabaseEngineType() {}

void OAIDatabaseEngineType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDatabaseEngineType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDatabaseEngineType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RDS_AURORA_MYSQL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatabaseEngineType::AURORA_MYSQL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RDS_AURORA_POSTGRESQL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatabaseEngineType::AURORA_POSTGRESQL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RDS_MYSQL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatabaseEngineType::MYSQL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RDS_POSTGRESQL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDatabaseEngineType::POSTGRESQL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDatabaseEngineType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDatabaseEngineType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDatabaseEngineType::AURORA_MYSQL:
            val = "RDS_AURORA_MYSQL";
            break;
        case eOAIDatabaseEngineType::AURORA_POSTGRESQL:
            val = "RDS_AURORA_POSTGRESQL";
            break;
        case eOAIDatabaseEngineType::MYSQL:
            val = "RDS_MYSQL";
            break;
        case eOAIDatabaseEngineType::POSTGRESQL:
            val = "RDS_POSTGRESQL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDatabaseEngineType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDatabaseEngineType::eOAIDatabaseEngineType OAIDatabaseEngineType::getValue() const {
    return m_value;
}

void OAIDatabaseEngineType::setValue(const OAIDatabaseEngineType::eOAIDatabaseEngineType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDatabaseEngineType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDatabaseEngineType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
