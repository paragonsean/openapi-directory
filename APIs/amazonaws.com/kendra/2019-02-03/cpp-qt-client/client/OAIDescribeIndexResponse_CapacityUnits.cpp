/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIndexResponse_CapacityUnits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIndexResponse_CapacityUnits::OAIDescribeIndexResponse_CapacityUnits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIndexResponse_CapacityUnits::OAIDescribeIndexResponse_CapacityUnits() {
    this->initializeModel();
}

OAIDescribeIndexResponse_CapacityUnits::~OAIDescribeIndexResponse_CapacityUnits() {}

void OAIDescribeIndexResponse_CapacityUnits::initializeModel() {

    m_storage_capacity_units_isSet = false;
    m_storage_capacity_units_isValid = false;

    m_query_capacity_units_isSet = false;
    m_query_capacity_units_isValid = false;
}

void OAIDescribeIndexResponse_CapacityUnits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIndexResponse_CapacityUnits::fromJsonObject(QJsonObject json) {

    m_storage_capacity_units_isValid = ::OpenAPI::fromJsonValue(m_storage_capacity_units, json[QString("StorageCapacityUnits")]);
    m_storage_capacity_units_isSet = !json[QString("StorageCapacityUnits")].isNull() && m_storage_capacity_units_isValid;

    m_query_capacity_units_isValid = ::OpenAPI::fromJsonValue(m_query_capacity_units, json[QString("QueryCapacityUnits")]);
    m_query_capacity_units_isSet = !json[QString("QueryCapacityUnits")].isNull() && m_query_capacity_units_isValid;
}

QString OAIDescribeIndexResponse_CapacityUnits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIndexResponse_CapacityUnits::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_capacity_units_isSet) {
        obj.insert(QString("StorageCapacityUnits"), ::OpenAPI::toJsonValue(m_storage_capacity_units));
    }
    if (m_query_capacity_units_isSet) {
        obj.insert(QString("QueryCapacityUnits"), ::OpenAPI::toJsonValue(m_query_capacity_units));
    }
    return obj;
}

qint32 OAIDescribeIndexResponse_CapacityUnits::getStorageCapacityUnits() const {
    return m_storage_capacity_units;
}
void OAIDescribeIndexResponse_CapacityUnits::setStorageCapacityUnits(const qint32 &storage_capacity_units) {
    m_storage_capacity_units = storage_capacity_units;
    m_storage_capacity_units_isSet = true;
}

bool OAIDescribeIndexResponse_CapacityUnits::is_storage_capacity_units_Set() const{
    return m_storage_capacity_units_isSet;
}

bool OAIDescribeIndexResponse_CapacityUnits::is_storage_capacity_units_Valid() const{
    return m_storage_capacity_units_isValid;
}

qint32 OAIDescribeIndexResponse_CapacityUnits::getQueryCapacityUnits() const {
    return m_query_capacity_units;
}
void OAIDescribeIndexResponse_CapacityUnits::setQueryCapacityUnits(const qint32 &query_capacity_units) {
    m_query_capacity_units = query_capacity_units;
    m_query_capacity_units_isSet = true;
}

bool OAIDescribeIndexResponse_CapacityUnits::is_query_capacity_units_Set() const{
    return m_query_capacity_units_isSet;
}

bool OAIDescribeIndexResponse_CapacityUnits::is_query_capacity_units_Valid() const{
    return m_query_capacity_units_isValid;
}

bool OAIDescribeIndexResponse_CapacityUnits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_capacity_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_capacity_units_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIndexResponse_CapacityUnits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_storage_capacity_units_isValid && m_query_capacity_units_isValid && true;
}

} // namespace OpenAPI
