/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFacet.h
 *
 * &lt;p&gt;Information about a document attribute. You can use document attributes as facets.&lt;/p&gt; &lt;p&gt;For example, the document attribute or facet \&quot;Department\&quot; includes the values \&quot;HR\&quot;, \&quot;Engineering\&quot;, and \&quot;Accounting\&quot;. You can display these values in the search results so that documents can be searched by department.&lt;/p&gt; &lt;p&gt;You can display up to 10 facet values per facet for a query. If you want to increase this limit, contact &lt;a href&#x3D;\&quot;http://aws.amazon.com/contact-us/\&quot;&gt;Support&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIFacet_H
#define OAIFacet_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFacet : public OAIObject {
public:
    OAIFacet();
    OAIFacet(QString json);
    ~OAIFacet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDocumentAttributeKey() const;
    void setDocumentAttributeKey(const QString &document_attribute_key);
    bool is_document_attribute_key_Set() const;
    bool is_document_attribute_key_Valid() const;

    QList getFacets() const;
    void setFacets(const QList &facets);
    bool is_facets_Set() const;
    bool is_facets_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_document_attribute_key;
    bool m_document_attribute_key_isSet;
    bool m_document_attribute_key_isValid;

    QList m_facets;
    bool m_facets_isSet;
    bool m_facets_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFacet)

#endif // OAIFacet_H
