/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributeSuggestionsUpdateConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributeSuggestionsUpdateConfig::OAIAttributeSuggestionsUpdateConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributeSuggestionsUpdateConfig::OAIAttributeSuggestionsUpdateConfig() {
    this->initializeModel();
}

OAIAttributeSuggestionsUpdateConfig::~OAIAttributeSuggestionsUpdateConfig() {}

void OAIAttributeSuggestionsUpdateConfig::initializeModel() {

    m_suggestable_config_list_isSet = false;
    m_suggestable_config_list_isValid = false;

    m_attribute_suggestions_mode_isSet = false;
    m_attribute_suggestions_mode_isValid = false;
}

void OAIAttributeSuggestionsUpdateConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributeSuggestionsUpdateConfig::fromJsonObject(QJsonObject json) {

    m_suggestable_config_list_isValid = ::OpenAPI::fromJsonValue(m_suggestable_config_list, json[QString("SuggestableConfigList")]);
    m_suggestable_config_list_isSet = !json[QString("SuggestableConfigList")].isNull() && m_suggestable_config_list_isValid;

    m_attribute_suggestions_mode_isValid = ::OpenAPI::fromJsonValue(m_attribute_suggestions_mode, json[QString("AttributeSuggestionsMode")]);
    m_attribute_suggestions_mode_isSet = !json[QString("AttributeSuggestionsMode")].isNull() && m_attribute_suggestions_mode_isValid;
}

QString OAIAttributeSuggestionsUpdateConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributeSuggestionsUpdateConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_suggestable_config_list.isSet()) {
        obj.insert(QString("SuggestableConfigList"), ::OpenAPI::toJsonValue(m_suggestable_config_list));
    }
    if (m_attribute_suggestions_mode.isSet()) {
        obj.insert(QString("AttributeSuggestionsMode"), ::OpenAPI::toJsonValue(m_attribute_suggestions_mode));
    }
    return obj;
}

QList OAIAttributeSuggestionsUpdateConfig::getSuggestableConfigList() const {
    return m_suggestable_config_list;
}
void OAIAttributeSuggestionsUpdateConfig::setSuggestableConfigList(const QList &suggestable_config_list) {
    m_suggestable_config_list = suggestable_config_list;
    m_suggestable_config_list_isSet = true;
}

bool OAIAttributeSuggestionsUpdateConfig::is_suggestable_config_list_Set() const{
    return m_suggestable_config_list_isSet;
}

bool OAIAttributeSuggestionsUpdateConfig::is_suggestable_config_list_Valid() const{
    return m_suggestable_config_list_isValid;
}

OAIAttributeSuggestionsMode OAIAttributeSuggestionsUpdateConfig::getAttributeSuggestionsMode() const {
    return m_attribute_suggestions_mode;
}
void OAIAttributeSuggestionsUpdateConfig::setAttributeSuggestionsMode(const OAIAttributeSuggestionsMode &attribute_suggestions_mode) {
    m_attribute_suggestions_mode = attribute_suggestions_mode;
    m_attribute_suggestions_mode_isSet = true;
}

bool OAIAttributeSuggestionsUpdateConfig::is_attribute_suggestions_mode_Set() const{
    return m_attribute_suggestions_mode_isSet;
}

bool OAIAttributeSuggestionsUpdateConfig::is_attribute_suggestions_mode_Valid() const{
    return m_attribute_suggestions_mode_isValid;
}

bool OAIAttributeSuggestionsUpdateConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suggestable_config_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_suggestions_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributeSuggestionsUpdateConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
