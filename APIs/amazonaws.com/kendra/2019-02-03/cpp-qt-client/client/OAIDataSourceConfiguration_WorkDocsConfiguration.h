/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSourceConfiguration_WorkDocsConfiguration.h
 *
 * 
 */

#ifndef OAIDataSourceConfiguration_WorkDocsConfiguration_H
#define OAIDataSourceConfiguration_WorkDocsConfiguration_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataSourceConfiguration_WorkDocsConfiguration : public OAIObject {
public:
    OAIDataSourceConfiguration_WorkDocsConfiguration();
    OAIDataSourceConfiguration_WorkDocsConfiguration(QString json);
    ~OAIDataSourceConfiguration_WorkDocsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    bool getCrawlComments() const;
    void setCrawlComments(const bool &crawl_comments);
    bool is_crawl_comments_Set() const;
    bool is_crawl_comments_Valid() const;

    bool getUseChangeLog() const;
    void setUseChangeLog(const bool &use_change_log);
    bool is_use_change_log_Set() const;
    bool is_use_change_log_Valid() const;

    QList getInclusionPatterns() const;
    void setInclusionPatterns(const QList &inclusion_patterns);
    bool is_inclusion_patterns_Set() const;
    bool is_inclusion_patterns_Valid() const;

    QList getExclusionPatterns() const;
    void setExclusionPatterns(const QList &exclusion_patterns);
    bool is_exclusion_patterns_Set() const;
    bool is_exclusion_patterns_Valid() const;

    QList getFieldMappings() const;
    void setFieldMappings(const QList &field_mappings);
    bool is_field_mappings_Set() const;
    bool is_field_mappings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    bool m_crawl_comments;
    bool m_crawl_comments_isSet;
    bool m_crawl_comments_isValid;

    bool m_use_change_log;
    bool m_use_change_log_isSet;
    bool m_use_change_log_isValid;

    QList m_inclusion_patterns;
    bool m_inclusion_patterns_isSet;
    bool m_inclusion_patterns_isValid;

    QList m_exclusion_patterns;
    bool m_exclusion_patterns_isSet;
    bool m_exclusion_patterns_isValid;

    QList m_field_mappings;
    bool m_field_mappings_isSet;
    bool m_field_mappings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSourceConfiguration_WorkDocsConfiguration)

#endif // OAIDataSourceConfiguration_WorkDocsConfiguration_H
