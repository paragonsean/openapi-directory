/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRetrieveRequest.h
 *
 * 
 */

#ifndef OAIRetrieveRequest_H
#define OAIRetrieveRequest_H

#include <QJsonObject>

#include "OAIQueryRequest_AttributeFilter.h"
#include "OAIQueryRequest_UserContext.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryRequest_AttributeFilter;
class OAIQueryRequest_UserContext;

class OAIRetrieveRequest : public OAIObject {
public:
    OAIRetrieveRequest();
    OAIRetrieveRequest(QString json);
    ~OAIRetrieveRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIndexId() const;
    void setIndexId(const QString &index_id);
    bool is_index_id_Set() const;
    bool is_index_id_Valid() const;

    QString getQueryText() const;
    void setQueryText(const QString &query_text);
    bool is_query_text_Set() const;
    bool is_query_text_Valid() const;

    OAIQueryRequest_AttributeFilter getAttributeFilter() const;
    void setAttributeFilter(const OAIQueryRequest_AttributeFilter &attribute_filter);
    bool is_attribute_filter_Set() const;
    bool is_attribute_filter_Valid() const;

    QList getRequestedDocumentAttributes() const;
    void setRequestedDocumentAttributes(const QList &requested_document_attributes);
    bool is_requested_document_attributes_Set() const;
    bool is_requested_document_attributes_Valid() const;

    QList getDocumentRelevanceOverrideConfigurations() const;
    void setDocumentRelevanceOverrideConfigurations(const QList &document_relevance_override_configurations);
    bool is_document_relevance_override_configurations_Set() const;
    bool is_document_relevance_override_configurations_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    OAIQueryRequest_UserContext getUserContext() const;
    void setUserContext(const OAIQueryRequest_UserContext &user_context);
    bool is_user_context_Set() const;
    bool is_user_context_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_index_id;
    bool m_index_id_isSet;
    bool m_index_id_isValid;

    QString m_query_text;
    bool m_query_text_isSet;
    bool m_query_text_isValid;

    OAIQueryRequest_AttributeFilter m_attribute_filter;
    bool m_attribute_filter_isSet;
    bool m_attribute_filter_isValid;

    QList m_requested_document_attributes;
    bool m_requested_document_attributes_isSet;
    bool m_requested_document_attributes_isValid;

    QList m_document_relevance_override_configurations;
    bool m_document_relevance_override_configurations_isSet;
    bool m_document_relevance_override_configurations_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    OAIQueryRequest_UserContext m_user_context;
    bool m_user_context_isSet;
    bool m_user_context_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRetrieveRequest)

#endif // OAIRetrieveRequest_H
