/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGitHubConfiguration_GitHubDocumentCrawlProperties.h
 *
 * 
 */

#ifndef OAIGitHubConfiguration_GitHubDocumentCrawlProperties_H
#define OAIGitHubConfiguration_GitHubDocumentCrawlProperties_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGitHubConfiguration_GitHubDocumentCrawlProperties : public OAIObject {
public:
    OAIGitHubConfiguration_GitHubDocumentCrawlProperties();
    OAIGitHubConfiguration_GitHubDocumentCrawlProperties(QString json);
    ~OAIGitHubConfiguration_GitHubDocumentCrawlProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getCrawlRepositoryDocuments() const;
    void setCrawlRepositoryDocuments(const bool &crawl_repository_documents);
    bool is_crawl_repository_documents_Set() const;
    bool is_crawl_repository_documents_Valid() const;

    bool getCrawlIssue() const;
    void setCrawlIssue(const bool &crawl_issue);
    bool is_crawl_issue_Set() const;
    bool is_crawl_issue_Valid() const;

    bool getCrawlIssueComment() const;
    void setCrawlIssueComment(const bool &crawl_issue_comment);
    bool is_crawl_issue_comment_Set() const;
    bool is_crawl_issue_comment_Valid() const;

    bool getCrawlIssueCommentAttachment() const;
    void setCrawlIssueCommentAttachment(const bool &crawl_issue_comment_attachment);
    bool is_crawl_issue_comment_attachment_Set() const;
    bool is_crawl_issue_comment_attachment_Valid() const;

    bool getCrawlPullRequest() const;
    void setCrawlPullRequest(const bool &crawl_pull_request);
    bool is_crawl_pull_request_Set() const;
    bool is_crawl_pull_request_Valid() const;

    bool getCrawlPullRequestComment() const;
    void setCrawlPullRequestComment(const bool &crawl_pull_request_comment);
    bool is_crawl_pull_request_comment_Set() const;
    bool is_crawl_pull_request_comment_Valid() const;

    bool getCrawlPullRequestCommentAttachment() const;
    void setCrawlPullRequestCommentAttachment(const bool &crawl_pull_request_comment_attachment);
    bool is_crawl_pull_request_comment_attachment_Set() const;
    bool is_crawl_pull_request_comment_attachment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_crawl_repository_documents;
    bool m_crawl_repository_documents_isSet;
    bool m_crawl_repository_documents_isValid;

    bool m_crawl_issue;
    bool m_crawl_issue_isSet;
    bool m_crawl_issue_isValid;

    bool m_crawl_issue_comment;
    bool m_crawl_issue_comment_isSet;
    bool m_crawl_issue_comment_isValid;

    bool m_crawl_issue_comment_attachment;
    bool m_crawl_issue_comment_attachment_isSet;
    bool m_crawl_issue_comment_attachment_isValid;

    bool m_crawl_pull_request;
    bool m_crawl_pull_request_isSet;
    bool m_crawl_pull_request_isValid;

    bool m_crawl_pull_request_comment;
    bool m_crawl_pull_request_comment_isSet;
    bool m_crawl_pull_request_comment_isValid;

    bool m_crawl_pull_request_comment_attachment;
    bool m_crawl_pull_request_comment_attachment_isSet;
    bool m_crawl_pull_request_comment_attachment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGitHubConfiguration_GitHubDocumentCrawlProperties)

#endif // OAIGitHubConfiguration_GitHubDocumentCrawlProperties_H
