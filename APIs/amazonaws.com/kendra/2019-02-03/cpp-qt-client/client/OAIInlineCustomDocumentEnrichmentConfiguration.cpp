/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInlineCustomDocumentEnrichmentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInlineCustomDocumentEnrichmentConfiguration::OAIInlineCustomDocumentEnrichmentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInlineCustomDocumentEnrichmentConfiguration::OAIInlineCustomDocumentEnrichmentConfiguration() {
    this->initializeModel();
}

OAIInlineCustomDocumentEnrichmentConfiguration::~OAIInlineCustomDocumentEnrichmentConfiguration() {}

void OAIInlineCustomDocumentEnrichmentConfiguration::initializeModel() {

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;

    m_document_content_deletion_isSet = false;
    m_document_content_deletion_isValid = false;
}

void OAIInlineCustomDocumentEnrichmentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInlineCustomDocumentEnrichmentConfiguration::fromJsonObject(QJsonObject json) {

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("Condition")]);
    m_condition_isSet = !json[QString("Condition")].isNull() && m_condition_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("Target")]);
    m_target_isSet = !json[QString("Target")].isNull() && m_target_isValid;

    m_document_content_deletion_isValid = ::OpenAPI::fromJsonValue(m_document_content_deletion, json[QString("DocumentContentDeletion")]);
    m_document_content_deletion_isSet = !json[QString("DocumentContentDeletion")].isNull() && m_document_content_deletion_isValid;
}

QString OAIInlineCustomDocumentEnrichmentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInlineCustomDocumentEnrichmentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_condition.isSet()) {
        obj.insert(QString("Condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    if (m_target.isSet()) {
        obj.insert(QString("Target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_document_content_deletion_isSet) {
        obj.insert(QString("DocumentContentDeletion"), ::OpenAPI::toJsonValue(m_document_content_deletion));
    }
    return obj;
}

OAIInlineCustomDocumentEnrichmentConfiguration_Condition OAIInlineCustomDocumentEnrichmentConfiguration::getCondition() const {
    return m_condition;
}
void OAIInlineCustomDocumentEnrichmentConfiguration::setCondition(const OAIInlineCustomDocumentEnrichmentConfiguration_Condition &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_condition_Valid() const{
    return m_condition_isValid;
}

OAIInlineCustomDocumentEnrichmentConfiguration_Target OAIInlineCustomDocumentEnrichmentConfiguration::getTarget() const {
    return m_target;
}
void OAIInlineCustomDocumentEnrichmentConfiguration::setTarget(const OAIInlineCustomDocumentEnrichmentConfiguration_Target &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_target_Set() const{
    return m_target_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_target_Valid() const{
    return m_target_isValid;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::getDocumentContentDeletion() const {
    return m_document_content_deletion;
}
void OAIInlineCustomDocumentEnrichmentConfiguration::setDocumentContentDeletion(const bool &document_content_deletion) {
    m_document_content_deletion = document_content_deletion;
    m_document_content_deletion_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_document_content_deletion_Set() const{
    return m_document_content_deletion_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::is_document_content_deletion_Valid() const{
    return m_document_content_deletion_isValid;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_content_deletion_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
