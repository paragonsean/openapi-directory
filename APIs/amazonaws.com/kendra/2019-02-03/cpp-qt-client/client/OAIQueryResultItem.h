/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryResultItem.h
 *
 * &lt;p&gt;A single query result.&lt;/p&gt; &lt;p&gt;A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.&lt;/p&gt;
 */

#ifndef OAIQueryResultItem_H
#define OAIQueryResultItem_H

#include <QJsonObject>

#include "OAIQueryResultFormat.h"
#include "OAIQueryResultItem_DocumentExcerpt.h"
#include "OAIQueryResultItem_DocumentTitle.h"
#include "OAIQueryResultItem_ScoreAttributes.h"
#include "OAIQueryResultItem_TableExcerpt.h"
#include "OAIQueryResultType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryResultItem_DocumentTitle;
class OAIQueryResultItem_DocumentExcerpt;
class OAIQueryResultItem_ScoreAttributes;
class OAIQueryResultItem_TableExcerpt;

class OAIQueryResultItem : public OAIObject {
public:
    OAIQueryResultItem();
    OAIQueryResultItem(QString json);
    ~OAIQueryResultItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIQueryResultType getType() const;
    void setType(const OAIQueryResultType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIQueryResultFormat getFormat() const;
    void setFormat(const OAIQueryResultFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QList getAdditionalAttributes() const;
    void setAdditionalAttributes(const QList &additional_attributes);
    bool is_additional_attributes_Set() const;
    bool is_additional_attributes_Valid() const;

    QString getDocumentId() const;
    void setDocumentId(const QString &document_id);
    bool is_document_id_Set() const;
    bool is_document_id_Valid() const;

    OAIQueryResultItem_DocumentTitle getDocumentTitle() const;
    void setDocumentTitle(const OAIQueryResultItem_DocumentTitle &document_title);
    bool is_document_title_Set() const;
    bool is_document_title_Valid() const;

    OAIQueryResultItem_DocumentExcerpt getDocumentExcerpt() const;
    void setDocumentExcerpt(const OAIQueryResultItem_DocumentExcerpt &document_excerpt);
    bool is_document_excerpt_Set() const;
    bool is_document_excerpt_Valid() const;

    QString getDocumentUri() const;
    void setDocumentUri(const QString &document_uri);
    bool is_document_uri_Set() const;
    bool is_document_uri_Valid() const;

    QList getDocumentAttributes() const;
    void setDocumentAttributes(const QList &document_attributes);
    bool is_document_attributes_Set() const;
    bool is_document_attributes_Valid() const;

    OAIQueryResultItem_ScoreAttributes getScoreAttributes() const;
    void setScoreAttributes(const OAIQueryResultItem_ScoreAttributes &score_attributes);
    bool is_score_attributes_Set() const;
    bool is_score_attributes_Valid() const;

    QString getFeedbackToken() const;
    void setFeedbackToken(const QString &feedback_token);
    bool is_feedback_token_Set() const;
    bool is_feedback_token_Valid() const;

    OAIQueryResultItem_TableExcerpt getTableExcerpt() const;
    void setTableExcerpt(const OAIQueryResultItem_TableExcerpt &table_excerpt);
    bool is_table_excerpt_Set() const;
    bool is_table_excerpt_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIQueryResultType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIQueryResultFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QList m_additional_attributes;
    bool m_additional_attributes_isSet;
    bool m_additional_attributes_isValid;

    QString m_document_id;
    bool m_document_id_isSet;
    bool m_document_id_isValid;

    OAIQueryResultItem_DocumentTitle m_document_title;
    bool m_document_title_isSet;
    bool m_document_title_isValid;

    OAIQueryResultItem_DocumentExcerpt m_document_excerpt;
    bool m_document_excerpt_isSet;
    bool m_document_excerpt_isValid;

    QString m_document_uri;
    bool m_document_uri_isSet;
    bool m_document_uri_isValid;

    QList m_document_attributes;
    bool m_document_attributes_isSet;
    bool m_document_attributes_isValid;

    OAIQueryResultItem_ScoreAttributes m_score_attributes;
    bool m_score_attributes_isSet;
    bool m_score_attributes_isValid;

    QString m_feedback_token;
    bool m_feedback_token_isSet;
    bool m_feedback_token_isValid;

    OAIQueryResultItem_TableExcerpt m_table_excerpt;
    bool m_table_excerpt_isSet;
    bool m_table_excerpt_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryResultItem)

#endif // OAIQueryResultItem_H
