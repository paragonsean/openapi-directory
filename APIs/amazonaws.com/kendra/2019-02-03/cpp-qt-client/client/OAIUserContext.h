/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserContext.h
 *
 * &lt;p&gt;Provides information about the user context for an Amazon Kendra index.&lt;/p&gt; &lt;p&gt;User context filtering is a kind of personalized search with the benefit of controlling access to documents. For example, not all teams that search the company portal for information should access top-secret company documents, nor are these documents relevant to all users. Only specific users or groups of teams given access to top-secret documents should see these documents in their search results.&lt;/p&gt; &lt;p&gt;You provide one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;User token&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;User ID, the groups the user belongs to, and any data sources the groups can access.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you provide both, an exception is thrown.&lt;/p&gt;
 */

#ifndef OAIUserContext_H
#define OAIUserContext_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserContext : public OAIObject {
public:
    OAIUserContext();
    OAIUserContext(QString json);
    ~OAIUserContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QList getGroups() const;
    void setGroups(const QList &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    QList getDataSourceGroups() const;
    void setDataSourceGroups(const QList &data_source_groups);
    bool is_data_source_groups_Set() const;
    bool is_data_source_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QList m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    QList m_data_source_groups;
    bool m_data_source_groups_isSet;
    bool m_data_source_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserContext)

#endif // OAIUserContext_H
