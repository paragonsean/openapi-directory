/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceConfiguration_ServiceNowConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceConfiguration_ServiceNowConfiguration::OAIDataSourceConfiguration_ServiceNowConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceConfiguration_ServiceNowConfiguration::OAIDataSourceConfiguration_ServiceNowConfiguration() {
    this->initializeModel();
}

OAIDataSourceConfiguration_ServiceNowConfiguration::~OAIDataSourceConfiguration_ServiceNowConfiguration() {}

void OAIDataSourceConfiguration_ServiceNowConfiguration::initializeModel() {

    m_host_url_isSet = false;
    m_host_url_isValid = false;

    m_secret_arn_isSet = false;
    m_secret_arn_isValid = false;

    m_service_now_build_version_isSet = false;
    m_service_now_build_version_isValid = false;

    m_knowledge_article_configuration_isSet = false;
    m_knowledge_article_configuration_isValid = false;

    m_service_catalog_configuration_isSet = false;
    m_service_catalog_configuration_isValid = false;

    m_authentication_type_isSet = false;
    m_authentication_type_isValid = false;
}

void OAIDataSourceConfiguration_ServiceNowConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSourceConfiguration_ServiceNowConfiguration::fromJsonObject(QJsonObject json) {

    m_host_url_isValid = ::OpenAPI::fromJsonValue(m_host_url, json[QString("HostUrl")]);
    m_host_url_isSet = !json[QString("HostUrl")].isNull() && m_host_url_isValid;

    m_secret_arn_isValid = ::OpenAPI::fromJsonValue(m_secret_arn, json[QString("SecretArn")]);
    m_secret_arn_isSet = !json[QString("SecretArn")].isNull() && m_secret_arn_isValid;

    m_service_now_build_version_isValid = ::OpenAPI::fromJsonValue(m_service_now_build_version, json[QString("ServiceNowBuildVersion")]);
    m_service_now_build_version_isSet = !json[QString("ServiceNowBuildVersion")].isNull() && m_service_now_build_version_isValid;

    m_knowledge_article_configuration_isValid = ::OpenAPI::fromJsonValue(m_knowledge_article_configuration, json[QString("KnowledgeArticleConfiguration")]);
    m_knowledge_article_configuration_isSet = !json[QString("KnowledgeArticleConfiguration")].isNull() && m_knowledge_article_configuration_isValid;

    m_service_catalog_configuration_isValid = ::OpenAPI::fromJsonValue(m_service_catalog_configuration, json[QString("ServiceCatalogConfiguration")]);
    m_service_catalog_configuration_isSet = !json[QString("ServiceCatalogConfiguration")].isNull() && m_service_catalog_configuration_isValid;

    m_authentication_type_isValid = ::OpenAPI::fromJsonValue(m_authentication_type, json[QString("AuthenticationType")]);
    m_authentication_type_isSet = !json[QString("AuthenticationType")].isNull() && m_authentication_type_isValid;
}

QString OAIDataSourceConfiguration_ServiceNowConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSourceConfiguration_ServiceNowConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_host_url_isSet) {
        obj.insert(QString("HostUrl"), ::OpenAPI::toJsonValue(m_host_url));
    }
    if (m_secret_arn_isSet) {
        obj.insert(QString("SecretArn"), ::OpenAPI::toJsonValue(m_secret_arn));
    }
    if (m_service_now_build_version.isSet()) {
        obj.insert(QString("ServiceNowBuildVersion"), ::OpenAPI::toJsonValue(m_service_now_build_version));
    }
    if (m_knowledge_article_configuration.isSet()) {
        obj.insert(QString("KnowledgeArticleConfiguration"), ::OpenAPI::toJsonValue(m_knowledge_article_configuration));
    }
    if (m_service_catalog_configuration.isSet()) {
        obj.insert(QString("ServiceCatalogConfiguration"), ::OpenAPI::toJsonValue(m_service_catalog_configuration));
    }
    if (m_authentication_type.isSet()) {
        obj.insert(QString("AuthenticationType"), ::OpenAPI::toJsonValue(m_authentication_type));
    }
    return obj;
}

QString OAIDataSourceConfiguration_ServiceNowConfiguration::getHostUrl() const {
    return m_host_url;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setHostUrl(const QString &host_url) {
    m_host_url = host_url;
    m_host_url_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_host_url_Set() const{
    return m_host_url_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_host_url_Valid() const{
    return m_host_url_isValid;
}

QString OAIDataSourceConfiguration_ServiceNowConfiguration::getSecretArn() const {
    return m_secret_arn;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setSecretArn(const QString &secret_arn) {
    m_secret_arn = secret_arn;
    m_secret_arn_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_secret_arn_Set() const{
    return m_secret_arn_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_secret_arn_Valid() const{
    return m_secret_arn_isValid;
}

OAIServiceNowBuildVersionType OAIDataSourceConfiguration_ServiceNowConfiguration::getServiceNowBuildVersion() const {
    return m_service_now_build_version;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setServiceNowBuildVersion(const OAIServiceNowBuildVersionType &service_now_build_version) {
    m_service_now_build_version = service_now_build_version;
    m_service_now_build_version_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_service_now_build_version_Set() const{
    return m_service_now_build_version_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_service_now_build_version_Valid() const{
    return m_service_now_build_version_isValid;
}

OAIServiceNowConfiguration_KnowledgeArticleConfiguration OAIDataSourceConfiguration_ServiceNowConfiguration::getKnowledgeArticleConfiguration() const {
    return m_knowledge_article_configuration;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setKnowledgeArticleConfiguration(const OAIServiceNowConfiguration_KnowledgeArticleConfiguration &knowledge_article_configuration) {
    m_knowledge_article_configuration = knowledge_article_configuration;
    m_knowledge_article_configuration_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_knowledge_article_configuration_Set() const{
    return m_knowledge_article_configuration_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_knowledge_article_configuration_Valid() const{
    return m_knowledge_article_configuration_isValid;
}

OAIServiceNowConfiguration_ServiceCatalogConfiguration OAIDataSourceConfiguration_ServiceNowConfiguration::getServiceCatalogConfiguration() const {
    return m_service_catalog_configuration;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setServiceCatalogConfiguration(const OAIServiceNowConfiguration_ServiceCatalogConfiguration &service_catalog_configuration) {
    m_service_catalog_configuration = service_catalog_configuration;
    m_service_catalog_configuration_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_service_catalog_configuration_Set() const{
    return m_service_catalog_configuration_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_service_catalog_configuration_Valid() const{
    return m_service_catalog_configuration_isValid;
}

OAIServiceNowAuthenticationType OAIDataSourceConfiguration_ServiceNowConfiguration::getAuthenticationType() const {
    return m_authentication_type;
}
void OAIDataSourceConfiguration_ServiceNowConfiguration::setAuthenticationType(const OAIServiceNowAuthenticationType &authentication_type) {
    m_authentication_type = authentication_type;
    m_authentication_type_isSet = true;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_authentication_type_Set() const{
    return m_authentication_type_isSet;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::is_authentication_type_Valid() const{
    return m_authentication_type_isValid;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_host_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_now_build_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_knowledge_article_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_catalog_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSourceConfiguration_ServiceNowConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_host_url_isValid && m_secret_arn_isValid && m_service_now_build_version_isValid && true;
}

} // namespace OpenAPI
