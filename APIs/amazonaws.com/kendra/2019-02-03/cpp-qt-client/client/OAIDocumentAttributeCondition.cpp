/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentAttributeCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentAttributeCondition::OAIDocumentAttributeCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentAttributeCondition::OAIDocumentAttributeCondition() {
    this->initializeModel();
}

OAIDocumentAttributeCondition::~OAIDocumentAttributeCondition() {}

void OAIDocumentAttributeCondition::initializeModel() {

    m_condition_document_attribute_key_isSet = false;
    m_condition_document_attribute_key_isValid = false;

    m_r_operator_isSet = false;
    m_r_operator_isValid = false;

    m_condition_on_value_isSet = false;
    m_condition_on_value_isValid = false;
}

void OAIDocumentAttributeCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentAttributeCondition::fromJsonObject(QJsonObject json) {

    m_condition_document_attribute_key_isValid = ::OpenAPI::fromJsonValue(m_condition_document_attribute_key, json[QString("ConditionDocumentAttributeKey")]);
    m_condition_document_attribute_key_isSet = !json[QString("ConditionDocumentAttributeKey")].isNull() && m_condition_document_attribute_key_isValid;

    m_r_operator_isValid = ::OpenAPI::fromJsonValue(m_r_operator, json[QString("Operator")]);
    m_r_operator_isSet = !json[QString("Operator")].isNull() && m_r_operator_isValid;

    m_condition_on_value_isValid = ::OpenAPI::fromJsonValue(m_condition_on_value, json[QString("ConditionOnValue")]);
    m_condition_on_value_isSet = !json[QString("ConditionOnValue")].isNull() && m_condition_on_value_isValid;
}

QString OAIDocumentAttributeCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentAttributeCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_document_attribute_key_isSet) {
        obj.insert(QString("ConditionDocumentAttributeKey"), ::OpenAPI::toJsonValue(m_condition_document_attribute_key));
    }
    if (m_r_operator.isSet()) {
        obj.insert(QString("Operator"), ::OpenAPI::toJsonValue(m_r_operator));
    }
    if (m_condition_on_value.isSet()) {
        obj.insert(QString("ConditionOnValue"), ::OpenAPI::toJsonValue(m_condition_on_value));
    }
    return obj;
}

QString OAIDocumentAttributeCondition::getConditionDocumentAttributeKey() const {
    return m_condition_document_attribute_key;
}
void OAIDocumentAttributeCondition::setConditionDocumentAttributeKey(const QString &condition_document_attribute_key) {
    m_condition_document_attribute_key = condition_document_attribute_key;
    m_condition_document_attribute_key_isSet = true;
}

bool OAIDocumentAttributeCondition::is_condition_document_attribute_key_Set() const{
    return m_condition_document_attribute_key_isSet;
}

bool OAIDocumentAttributeCondition::is_condition_document_attribute_key_Valid() const{
    return m_condition_document_attribute_key_isValid;
}

OAIConditionOperator OAIDocumentAttributeCondition::getROperator() const {
    return m_r_operator;
}
void OAIDocumentAttributeCondition::setROperator(const OAIConditionOperator &r_operator) {
    m_r_operator = r_operator;
    m_r_operator_isSet = true;
}

bool OAIDocumentAttributeCondition::is_r_operator_Set() const{
    return m_r_operator_isSet;
}

bool OAIDocumentAttributeCondition::is_r_operator_Valid() const{
    return m_r_operator_isValid;
}

OAIDocumentAttributeCondition_ConditionOnValue OAIDocumentAttributeCondition::getConditionOnValue() const {
    return m_condition_on_value;
}
void OAIDocumentAttributeCondition::setConditionOnValue(const OAIDocumentAttributeCondition_ConditionOnValue &condition_on_value) {
    m_condition_on_value = condition_on_value;
    m_condition_on_value_isSet = true;
}

bool OAIDocumentAttributeCondition::is_condition_on_value_Set() const{
    return m_condition_on_value_isSet;
}

bool OAIDocumentAttributeCondition::is_condition_on_value_Valid() const{
    return m_condition_on_value_isValid;
}

bool OAIDocumentAttributeCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_document_attribute_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_operator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_on_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentAttributeCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_condition_document_attribute_key_isValid && m_r_operator_isValid && true;
}

} // namespace OpenAPI
