/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityDisplayData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityDisplayData::OAIEntityDisplayData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityDisplayData::OAIEntityDisplayData() {
    this->initializeModel();
}

OAIEntityDisplayData::~OAIEntityDisplayData() {}

void OAIEntityDisplayData::initializeModel() {

    m_user_name_isSet = false;
    m_user_name_isValid = false;

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_identified_user_name_isSet = false;
    m_identified_user_name_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;
}

void OAIEntityDisplayData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntityDisplayData::fromJsonObject(QJsonObject json) {

    m_user_name_isValid = ::OpenAPI::fromJsonValue(m_user_name, json[QString("UserName")]);
    m_user_name_isSet = !json[QString("UserName")].isNull() && m_user_name_isValid;

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("GroupName")]);
    m_group_name_isSet = !json[QString("GroupName")].isNull() && m_group_name_isValid;

    m_identified_user_name_isValid = ::OpenAPI::fromJsonValue(m_identified_user_name, json[QString("IdentifiedUserName")]);
    m_identified_user_name_isSet = !json[QString("IdentifiedUserName")].isNull() && m_identified_user_name_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;
}

QString OAIEntityDisplayData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntityDisplayData::asJsonObject() const {
    QJsonObject obj;
    if (m_user_name_isSet) {
        obj.insert(QString("UserName"), ::OpenAPI::toJsonValue(m_user_name));
    }
    if (m_group_name_isSet) {
        obj.insert(QString("GroupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_identified_user_name_isSet) {
        obj.insert(QString("IdentifiedUserName"), ::OpenAPI::toJsonValue(m_identified_user_name));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    return obj;
}

QString OAIEntityDisplayData::getUserName() const {
    return m_user_name;
}
void OAIEntityDisplayData::setUserName(const QString &user_name) {
    m_user_name = user_name;
    m_user_name_isSet = true;
}

bool OAIEntityDisplayData::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAIEntityDisplayData::is_user_name_Valid() const{
    return m_user_name_isValid;
}

QString OAIEntityDisplayData::getGroupName() const {
    return m_group_name;
}
void OAIEntityDisplayData::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAIEntityDisplayData::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAIEntityDisplayData::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAIEntityDisplayData::getIdentifiedUserName() const {
    return m_identified_user_name;
}
void OAIEntityDisplayData::setIdentifiedUserName(const QString &identified_user_name) {
    m_identified_user_name = identified_user_name;
    m_identified_user_name_isSet = true;
}

bool OAIEntityDisplayData::is_identified_user_name_Set() const{
    return m_identified_user_name_isSet;
}

bool OAIEntityDisplayData::is_identified_user_name_Valid() const{
    return m_identified_user_name_isValid;
}

QString OAIEntityDisplayData::getFirstName() const {
    return m_first_name;
}
void OAIEntityDisplayData::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIEntityDisplayData::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIEntityDisplayData::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIEntityDisplayData::getLastName() const {
    return m_last_name;
}
void OAIEntityDisplayData::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIEntityDisplayData::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIEntityDisplayData::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIEntityDisplayData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identified_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntityDisplayData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
