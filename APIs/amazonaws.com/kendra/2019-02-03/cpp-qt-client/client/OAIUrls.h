/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUrls.h
 *
 * &lt;p&gt;Provides the configuration information of the URLs to crawl.&lt;/p&gt; &lt;p&gt;You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling.&lt;/p&gt; &lt;p&gt; &lt;i&gt;When selecting websites to index, you must adhere to the &lt;a href&#x3D;\&quot;https://aws.amazon.com/aup/\&quot;&gt;Amazon Acceptable Use Policy&lt;/a&gt; and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.&lt;/i&gt; &lt;/p&gt;
 */

#ifndef OAIUrls_H
#define OAIUrls_H

#include <QJsonObject>

#include "OAIUrls_SeedUrlConfiguration.h"
#include "OAIUrls_SiteMapsConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUrls_SeedUrlConfiguration;
class OAIUrls_SiteMapsConfiguration;

class OAIUrls : public OAIObject {
public:
    OAIUrls();
    OAIUrls(QString json);
    ~OAIUrls() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUrls_SeedUrlConfiguration getSeedUrlConfiguration() const;
    void setSeedUrlConfiguration(const OAIUrls_SeedUrlConfiguration &seed_url_configuration);
    bool is_seed_url_configuration_Set() const;
    bool is_seed_url_configuration_Valid() const;

    OAIUrls_SiteMapsConfiguration getSiteMapsConfiguration() const;
    void setSiteMapsConfiguration(const OAIUrls_SiteMapsConfiguration &site_maps_configuration);
    bool is_site_maps_configuration_Set() const;
    bool is_site_maps_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUrls_SeedUrlConfiguration m_seed_url_configuration;
    bool m_seed_url_configuration_isSet;
    bool m_seed_url_configuration_isValid;

    OAIUrls_SiteMapsConfiguration m_site_maps_configuration;
    bool m_site_maps_configuration_isSet;
    bool m_site_maps_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUrls)

#endif // OAIUrls_H
