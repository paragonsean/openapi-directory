/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentRelevanceConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentRelevanceConfiguration::OAIDocumentRelevanceConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentRelevanceConfiguration::OAIDocumentRelevanceConfiguration() {
    this->initializeModel();
}

OAIDocumentRelevanceConfiguration::~OAIDocumentRelevanceConfiguration() {}

void OAIDocumentRelevanceConfiguration::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_relevance_isSet = false;
    m_relevance_isValid = false;
}

void OAIDocumentRelevanceConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentRelevanceConfiguration::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_relevance_isValid = ::OpenAPI::fromJsonValue(m_relevance, json[QString("Relevance")]);
    m_relevance_isSet = !json[QString("Relevance")].isNull() && m_relevance_isValid;
}

QString OAIDocumentRelevanceConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentRelevanceConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_relevance.isSet()) {
        obj.insert(QString("Relevance"), ::OpenAPI::toJsonValue(m_relevance));
    }
    return obj;
}

QString OAIDocumentRelevanceConfiguration::getName() const {
    return m_name;
}
void OAIDocumentRelevanceConfiguration::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDocumentRelevanceConfiguration::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDocumentRelevanceConfiguration::is_name_Valid() const{
    return m_name_isValid;
}

OAIDocumentRelevanceConfiguration_Relevance OAIDocumentRelevanceConfiguration::getRelevance() const {
    return m_relevance;
}
void OAIDocumentRelevanceConfiguration::setRelevance(const OAIDocumentRelevanceConfiguration_Relevance &relevance) {
    m_relevance = relevance;
    m_relevance_isSet = true;
}

bool OAIDocumentRelevanceConfiguration::is_relevance_Set() const{
    return m_relevance_isSet;
}

bool OAIDocumentRelevanceConfiguration::is_relevance_Valid() const{
    return m_relevance_isValid;
}

bool OAIDocumentRelevanceConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relevance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentRelevanceConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_relevance_isValid && true;
}

} // namespace OpenAPI
