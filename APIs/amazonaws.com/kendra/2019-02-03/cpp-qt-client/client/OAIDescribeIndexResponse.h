/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeIndexResponse.h
 *
 * 
 */

#ifndef OAIDescribeIndexResponse_H
#define OAIDescribeIndexResponse_H

#include <QJsonObject>

#include "OAIDescribeIndexResponse_CapacityUnits.h"
#include "OAIDescribeIndexResponse_IndexStatistics.h"
#include "OAIDescribeIndexResponse_ServerSideEncryptionConfiguration.h"
#include "OAIDescribeIndexResponse_UserGroupResolutionConfiguration.h"
#include "OAIIndexEdition.h"
#include "OAIIndexStatus.h"
#include "OAIUserContextPolicy.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeIndexResponse_ServerSideEncryptionConfiguration;
class OAIDescribeIndexResponse_IndexStatistics;
class OAIDescribeIndexResponse_CapacityUnits;
class OAIDescribeIndexResponse_UserGroupResolutionConfiguration;

class OAIDescribeIndexResponse : public OAIObject {
public:
    OAIDescribeIndexResponse();
    OAIDescribeIndexResponse(QString json);
    ~OAIDescribeIndexResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIndexEdition getEdition() const;
    void setEdition(const OAIIndexEdition &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIDescribeIndexResponse_ServerSideEncryptionConfiguration getServerSideEncryptionConfiguration() const;
    void setServerSideEncryptionConfiguration(const OAIDescribeIndexResponse_ServerSideEncryptionConfiguration &server_side_encryption_configuration);
    bool is_server_side_encryption_configuration_Set() const;
    bool is_server_side_encryption_configuration_Valid() const;

    OAIIndexStatus getStatus() const;
    void setStatus(const OAIIndexStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QList getDocumentMetadataConfigurations() const;
    void setDocumentMetadataConfigurations(const QList &document_metadata_configurations);
    bool is_document_metadata_configurations_Set() const;
    bool is_document_metadata_configurations_Valid() const;

    OAIDescribeIndexResponse_IndexStatistics getIndexStatistics() const;
    void setIndexStatistics(const OAIDescribeIndexResponse_IndexStatistics &index_statistics);
    bool is_index_statistics_Set() const;
    bool is_index_statistics_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIDescribeIndexResponse_CapacityUnits getCapacityUnits() const;
    void setCapacityUnits(const OAIDescribeIndexResponse_CapacityUnits &capacity_units);
    bool is_capacity_units_Set() const;
    bool is_capacity_units_Valid() const;

    QList getUserTokenConfigurations() const;
    void setUserTokenConfigurations(const QList &user_token_configurations);
    bool is_user_token_configurations_Set() const;
    bool is_user_token_configurations_Valid() const;

    OAIUserContextPolicy getUserContextPolicy() const;
    void setUserContextPolicy(const OAIUserContextPolicy &user_context_policy);
    bool is_user_context_policy_Set() const;
    bool is_user_context_policy_Valid() const;

    OAIDescribeIndexResponse_UserGroupResolutionConfiguration getUserGroupResolutionConfiguration() const;
    void setUserGroupResolutionConfiguration(const OAIDescribeIndexResponse_UserGroupResolutionConfiguration &user_group_resolution_configuration);
    bool is_user_group_resolution_configuration_Set() const;
    bool is_user_group_resolution_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIndexEdition m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIDescribeIndexResponse_ServerSideEncryptionConfiguration m_server_side_encryption_configuration;
    bool m_server_side_encryption_configuration_isSet;
    bool m_server_side_encryption_configuration_isValid;

    OAIIndexStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QList m_document_metadata_configurations;
    bool m_document_metadata_configurations_isSet;
    bool m_document_metadata_configurations_isValid;

    OAIDescribeIndexResponse_IndexStatistics m_index_statistics;
    bool m_index_statistics_isSet;
    bool m_index_statistics_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIDescribeIndexResponse_CapacityUnits m_capacity_units;
    bool m_capacity_units_isSet;
    bool m_capacity_units_isValid;

    QList m_user_token_configurations;
    bool m_user_token_configurations_isSet;
    bool m_user_token_configurations_isValid;

    OAIUserContextPolicy m_user_context_policy;
    bool m_user_context_policy_isSet;
    bool m_user_context_policy_isValid;

    OAIDescribeIndexResponse_UserGroupResolutionConfiguration m_user_group_resolution_configuration;
    bool m_user_group_resolution_configuration_isSet;
    bool m_user_group_resolution_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeIndexResponse)

#endif // OAIDescribeIndexResponse_H
