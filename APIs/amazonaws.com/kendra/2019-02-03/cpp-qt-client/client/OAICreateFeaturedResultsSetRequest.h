/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFeaturedResultsSetRequest.h
 *
 * 
 */

#ifndef OAICreateFeaturedResultsSetRequest_H
#define OAICreateFeaturedResultsSetRequest_H

#include <QJsonObject>

#include "OAIFeaturedResultsSetStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateFeaturedResultsSetRequest : public OAIObject {
public:
    OAICreateFeaturedResultsSetRequest();
    OAICreateFeaturedResultsSetRequest(QString json);
    ~OAICreateFeaturedResultsSetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIndexId() const;
    void setIndexId(const QString &index_id);
    bool is_index_id_Set() const;
    bool is_index_id_Valid() const;

    QString getFeaturedResultsSetName() const;
    void setFeaturedResultsSetName(const QString &featured_results_set_name);
    bool is_featured_results_set_name_Set() const;
    bool is_featured_results_set_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    OAIFeaturedResultsSetStatus getStatus() const;
    void setStatus(const OAIFeaturedResultsSetStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getQueryTexts() const;
    void setQueryTexts(const QList &query_texts);
    bool is_query_texts_Set() const;
    bool is_query_texts_Valid() const;

    QList getFeaturedDocuments() const;
    void setFeaturedDocuments(const QList &featured_documents);
    bool is_featured_documents_Set() const;
    bool is_featured_documents_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_index_id;
    bool m_index_id_isSet;
    bool m_index_id_isValid;

    QString m_featured_results_set_name;
    bool m_featured_results_set_name_isSet;
    bool m_featured_results_set_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    OAIFeaturedResultsSetStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_query_texts;
    bool m_query_texts_isSet;
    bool m_query_texts_isValid;

    QList m_featured_documents;
    bool m_featured_documents_isSet;
    bool m_featured_documents_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFeaturedResultsSetRequest)

#endif // OAICreateFeaturedResultsSetRequest_H
