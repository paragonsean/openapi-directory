/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJsonTokenTypeConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJsonTokenTypeConfiguration::OAIJsonTokenTypeConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJsonTokenTypeConfiguration::OAIJsonTokenTypeConfiguration() {
    this->initializeModel();
}

OAIJsonTokenTypeConfiguration::~OAIJsonTokenTypeConfiguration() {}

void OAIJsonTokenTypeConfiguration::initializeModel() {

    m_user_name_attribute_field_isSet = false;
    m_user_name_attribute_field_isValid = false;

    m_group_attribute_field_isSet = false;
    m_group_attribute_field_isValid = false;
}

void OAIJsonTokenTypeConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJsonTokenTypeConfiguration::fromJsonObject(QJsonObject json) {

    m_user_name_attribute_field_isValid = ::OpenAPI::fromJsonValue(m_user_name_attribute_field, json[QString("UserNameAttributeField")]);
    m_user_name_attribute_field_isSet = !json[QString("UserNameAttributeField")].isNull() && m_user_name_attribute_field_isValid;

    m_group_attribute_field_isValid = ::OpenAPI::fromJsonValue(m_group_attribute_field, json[QString("GroupAttributeField")]);
    m_group_attribute_field_isSet = !json[QString("GroupAttributeField")].isNull() && m_group_attribute_field_isValid;
}

QString OAIJsonTokenTypeConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJsonTokenTypeConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_user_name_attribute_field_isSet) {
        obj.insert(QString("UserNameAttributeField"), ::OpenAPI::toJsonValue(m_user_name_attribute_field));
    }
    if (m_group_attribute_field_isSet) {
        obj.insert(QString("GroupAttributeField"), ::OpenAPI::toJsonValue(m_group_attribute_field));
    }
    return obj;
}

QString OAIJsonTokenTypeConfiguration::getUserNameAttributeField() const {
    return m_user_name_attribute_field;
}
void OAIJsonTokenTypeConfiguration::setUserNameAttributeField(const QString &user_name_attribute_field) {
    m_user_name_attribute_field = user_name_attribute_field;
    m_user_name_attribute_field_isSet = true;
}

bool OAIJsonTokenTypeConfiguration::is_user_name_attribute_field_Set() const{
    return m_user_name_attribute_field_isSet;
}

bool OAIJsonTokenTypeConfiguration::is_user_name_attribute_field_Valid() const{
    return m_user_name_attribute_field_isValid;
}

QString OAIJsonTokenTypeConfiguration::getGroupAttributeField() const {
    return m_group_attribute_field;
}
void OAIJsonTokenTypeConfiguration::setGroupAttributeField(const QString &group_attribute_field) {
    m_group_attribute_field = group_attribute_field;
    m_group_attribute_field_isSet = true;
}

bool OAIJsonTokenTypeConfiguration::is_group_attribute_field_Set() const{
    return m_group_attribute_field_isSet;
}

bool OAIJsonTokenTypeConfiguration::is_group_attribute_field_Valid() const{
    return m_group_attribute_field_isValid;
}

bool OAIJsonTokenTypeConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_name_attribute_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_attribute_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJsonTokenTypeConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_name_attribute_field_isValid && m_group_attribute_field_isValid && true;
}

} // namespace OpenAPI
