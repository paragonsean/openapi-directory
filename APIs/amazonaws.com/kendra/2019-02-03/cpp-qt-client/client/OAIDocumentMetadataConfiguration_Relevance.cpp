/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentMetadataConfiguration_Relevance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentMetadataConfiguration_Relevance::OAIDocumentMetadataConfiguration_Relevance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentMetadataConfiguration_Relevance::OAIDocumentMetadataConfiguration_Relevance() {
    this->initializeModel();
}

OAIDocumentMetadataConfiguration_Relevance::~OAIDocumentMetadataConfiguration_Relevance() {}

void OAIDocumentMetadataConfiguration_Relevance::initializeModel() {

    m_freshness_isSet = false;
    m_freshness_isValid = false;

    m_importance_isSet = false;
    m_importance_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_rank_order_isSet = false;
    m_rank_order_isValid = false;

    m_value_importance_map_isSet = false;
    m_value_importance_map_isValid = false;
}

void OAIDocumentMetadataConfiguration_Relevance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentMetadataConfiguration_Relevance::fromJsonObject(QJsonObject json) {

    m_freshness_isValid = ::OpenAPI::fromJsonValue(m_freshness, json[QString("Freshness")]);
    m_freshness_isSet = !json[QString("Freshness")].isNull() && m_freshness_isValid;

    m_importance_isValid = ::OpenAPI::fromJsonValue(m_importance, json[QString("Importance")]);
    m_importance_isSet = !json[QString("Importance")].isNull() && m_importance_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("Duration")]);
    m_duration_isSet = !json[QString("Duration")].isNull() && m_duration_isValid;

    m_rank_order_isValid = ::OpenAPI::fromJsonValue(m_rank_order, json[QString("RankOrder")]);
    m_rank_order_isSet = !json[QString("RankOrder")].isNull() && m_rank_order_isValid;

    m_value_importance_map_isValid = ::OpenAPI::fromJsonValue(m_value_importance_map, json[QString("ValueImportanceMap")]);
    m_value_importance_map_isSet = !json[QString("ValueImportanceMap")].isNull() && m_value_importance_map_isValid;
}

QString OAIDocumentMetadataConfiguration_Relevance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentMetadataConfiguration_Relevance::asJsonObject() const {
    QJsonObject obj;
    if (m_freshness_isSet) {
        obj.insert(QString("Freshness"), ::OpenAPI::toJsonValue(m_freshness));
    }
    if (m_importance_isSet) {
        obj.insert(QString("Importance"), ::OpenAPI::toJsonValue(m_importance));
    }
    if (m_duration_isSet) {
        obj.insert(QString("Duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_rank_order.isSet()) {
        obj.insert(QString("RankOrder"), ::OpenAPI::toJsonValue(m_rank_order));
    }
    if (m_value_importance_map.isSet()) {
        obj.insert(QString("ValueImportanceMap"), ::OpenAPI::toJsonValue(m_value_importance_map));
    }
    return obj;
}

bool OAIDocumentMetadataConfiguration_Relevance::getFreshness() const {
    return m_freshness;
}
void OAIDocumentMetadataConfiguration_Relevance::setFreshness(const bool &freshness) {
    m_freshness = freshness;
    m_freshness_isSet = true;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_freshness_Set() const{
    return m_freshness_isSet;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_freshness_Valid() const{
    return m_freshness_isValid;
}

qint32 OAIDocumentMetadataConfiguration_Relevance::getImportance() const {
    return m_importance;
}
void OAIDocumentMetadataConfiguration_Relevance::setImportance(const qint32 &importance) {
    m_importance = importance;
    m_importance_isSet = true;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_importance_Set() const{
    return m_importance_isSet;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_importance_Valid() const{
    return m_importance_isValid;
}

QString OAIDocumentMetadataConfiguration_Relevance::getDuration() const {
    return m_duration;
}
void OAIDocumentMetadataConfiguration_Relevance::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_duration_Valid() const{
    return m_duration_isValid;
}

OAIOrder OAIDocumentMetadataConfiguration_Relevance::getRankOrder() const {
    return m_rank_order;
}
void OAIDocumentMetadataConfiguration_Relevance::setRankOrder(const OAIOrder &rank_order) {
    m_rank_order = rank_order;
    m_rank_order_isSet = true;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_rank_order_Set() const{
    return m_rank_order_isSet;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_rank_order_Valid() const{
    return m_rank_order_isValid;
}

QMap OAIDocumentMetadataConfiguration_Relevance::getValueImportanceMap() const {
    return m_value_importance_map;
}
void OAIDocumentMetadataConfiguration_Relevance::setValueImportanceMap(const QMap &value_importance_map) {
    m_value_importance_map = value_importance_map;
    m_value_importance_map_isSet = true;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_value_importance_map_Set() const{
    return m_value_importance_map_isSet;
}

bool OAIDocumentMetadataConfiguration_Relevance::is_value_importance_map_Valid() const{
    return m_value_importance_map_isValid;
}

bool OAIDocumentMetadataConfiguration_Relevance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_freshness_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_importance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_order.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_importance_map.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentMetadataConfiguration_Relevance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
