/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSnapshotsRequest.h
 *
 * 
 */

#ifndef OAIGetSnapshotsRequest_H
#define OAIGetSnapshotsRequest_H

#include <QJsonObject>

#include "OAIInterval.h"
#include "OAIMetricType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetSnapshotsRequest : public OAIObject {
public:
    OAIGetSnapshotsRequest();
    OAIGetSnapshotsRequest(QString json);
    ~OAIGetSnapshotsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIndexId() const;
    void setIndexId(const QString &index_id);
    bool is_index_id_Set() const;
    bool is_index_id_Valid() const;

    OAIInterval getInterval() const;
    void setInterval(const OAIInterval &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    OAIMetricType getMetricType() const;
    void setMetricType(const OAIMetricType &metric_type);
    bool is_metric_type_Set() const;
    bool is_metric_type_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_index_id;
    bool m_index_id_isSet;
    bool m_index_id_isValid;

    OAIInterval m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    OAIMetricType m_metric_type;
    bool m_metric_type_isSet;
    bool m_metric_type_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSnapshotsRequest)

#endif // OAIGetSnapshotsRequest_H
