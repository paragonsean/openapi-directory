/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseConfiguration_SqlConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseConfiguration_SqlConfiguration::OAIDatabaseConfiguration_SqlConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseConfiguration_SqlConfiguration::OAIDatabaseConfiguration_SqlConfiguration() {
    this->initializeModel();
}

OAIDatabaseConfiguration_SqlConfiguration::~OAIDatabaseConfiguration_SqlConfiguration() {}

void OAIDatabaseConfiguration_SqlConfiguration::initializeModel() {

    m_query_identifiers_enclosing_option_isSet = false;
    m_query_identifiers_enclosing_option_isValid = false;
}

void OAIDatabaseConfiguration_SqlConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseConfiguration_SqlConfiguration::fromJsonObject(QJsonObject json) {

    m_query_identifiers_enclosing_option_isValid = ::OpenAPI::fromJsonValue(m_query_identifiers_enclosing_option, json[QString("QueryIdentifiersEnclosingOption")]);
    m_query_identifiers_enclosing_option_isSet = !json[QString("QueryIdentifiersEnclosingOption")].isNull() && m_query_identifiers_enclosing_option_isValid;
}

QString OAIDatabaseConfiguration_SqlConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseConfiguration_SqlConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_query_identifiers_enclosing_option.isSet()) {
        obj.insert(QString("QueryIdentifiersEnclosingOption"), ::OpenAPI::toJsonValue(m_query_identifiers_enclosing_option));
    }
    return obj;
}

OAIQueryIdentifiersEnclosingOption OAIDatabaseConfiguration_SqlConfiguration::getQueryIdentifiersEnclosingOption() const {
    return m_query_identifiers_enclosing_option;
}
void OAIDatabaseConfiguration_SqlConfiguration::setQueryIdentifiersEnclosingOption(const OAIQueryIdentifiersEnclosingOption &query_identifiers_enclosing_option) {
    m_query_identifiers_enclosing_option = query_identifiers_enclosing_option;
    m_query_identifiers_enclosing_option_isSet = true;
}

bool OAIDatabaseConfiguration_SqlConfiguration::is_query_identifiers_enclosing_option_Set() const{
    return m_query_identifiers_enclosing_option_isSet;
}

bool OAIDatabaseConfiguration_SqlConfiguration::is_query_identifiers_enclosing_option_Valid() const{
    return m_query_identifiers_enclosing_option_isValid;
}

bool OAIDatabaseConfiguration_SqlConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query_identifiers_enclosing_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseConfiguration_SqlConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
