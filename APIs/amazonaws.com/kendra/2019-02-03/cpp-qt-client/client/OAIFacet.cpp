/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacet::OAIFacet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacet::OAIFacet() {
    this->initializeModel();
}

OAIFacet::~OAIFacet() {}

void OAIFacet::initializeModel() {

    m_document_attribute_key_isSet = false;
    m_document_attribute_key_isValid = false;

    m_facets_isSet = false;
    m_facets_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIFacet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFacet::fromJsonObject(QJsonObject json) {

    m_document_attribute_key_isValid = ::OpenAPI::fromJsonValue(m_document_attribute_key, json[QString("DocumentAttributeKey")]);
    m_document_attribute_key_isSet = !json[QString("DocumentAttributeKey")].isNull() && m_document_attribute_key_isValid;

    m_facets_isValid = ::OpenAPI::fromJsonValue(m_facets, json[QString("Facets")]);
    m_facets_isSet = !json[QString("Facets")].isNull() && m_facets_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;
}

QString OAIFacet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFacet::asJsonObject() const {
    QJsonObject obj;
    if (m_document_attribute_key_isSet) {
        obj.insert(QString("DocumentAttributeKey"), ::OpenAPI::toJsonValue(m_document_attribute_key));
    }
    if (m_facets.isSet()) {
        obj.insert(QString("Facets"), ::OpenAPI::toJsonValue(m_facets));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

QString OAIFacet::getDocumentAttributeKey() const {
    return m_document_attribute_key;
}
void OAIFacet::setDocumentAttributeKey(const QString &document_attribute_key) {
    m_document_attribute_key = document_attribute_key;
    m_document_attribute_key_isSet = true;
}

bool OAIFacet::is_document_attribute_key_Set() const{
    return m_document_attribute_key_isSet;
}

bool OAIFacet::is_document_attribute_key_Valid() const{
    return m_document_attribute_key_isValid;
}

QList OAIFacet::getFacets() const {
    return m_facets;
}
void OAIFacet::setFacets(const QList &facets) {
    m_facets = facets;
    m_facets_isSet = true;
}

bool OAIFacet::is_facets_Set() const{
    return m_facets_isSet;
}

bool OAIFacet::is_facets_Valid() const{
    return m_facets_isValid;
}

qint32 OAIFacet::getMaxResults() const {
    return m_max_results;
}
void OAIFacet::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIFacet::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIFacet::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIFacet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_attribute_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFacet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
