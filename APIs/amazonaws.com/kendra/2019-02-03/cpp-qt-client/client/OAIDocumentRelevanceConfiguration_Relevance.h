/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentRelevanceConfiguration_Relevance.h
 *
 * 
 */

#ifndef OAIDocumentRelevanceConfiguration_Relevance_H
#define OAIDocumentRelevanceConfiguration_Relevance_H

#include <QJsonObject>

#include "OAIOrder.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDocumentRelevanceConfiguration_Relevance : public OAIObject {
public:
    OAIDocumentRelevanceConfiguration_Relevance();
    OAIDocumentRelevanceConfiguration_Relevance(QString json);
    ~OAIDocumentRelevanceConfiguration_Relevance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getFreshness() const;
    void setFreshness(const bool &freshness);
    bool is_freshness_Set() const;
    bool is_freshness_Valid() const;

    qint32 getImportance() const;
    void setImportance(const qint32 &importance);
    bool is_importance_Set() const;
    bool is_importance_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIOrder getRankOrder() const;
    void setRankOrder(const OAIOrder &rank_order);
    bool is_rank_order_Set() const;
    bool is_rank_order_Valid() const;

    QMap getValueImportanceMap() const;
    void setValueImportanceMap(const QMap &value_importance_map);
    bool is_value_importance_map_Set() const;
    bool is_value_importance_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_freshness;
    bool m_freshness_isSet;
    bool m_freshness_isValid;

    qint32 m_importance;
    bool m_importance_isSet;
    bool m_importance_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIOrder m_rank_order;
    bool m_rank_order_isSet;
    bool m_rank_order_isValid;

    QMap m_value_importance_map;
    bool m_value_importance_map_isSet;
    bool m_value_importance_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentRelevanceConfiguration_Relevance)

#endif // OAIDocumentRelevanceConfiguration_Relevance_H
