/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFeaturedResultsSetResponse_FeaturedResultsSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::OAICreateFeaturedResultsSetResponse_FeaturedResultsSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::OAICreateFeaturedResultsSetResponse_FeaturedResultsSet() {
    this->initializeModel();
}

OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::~OAICreateFeaturedResultsSetResponse_FeaturedResultsSet() {}

void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::initializeModel() {

    m_featured_results_set_id_isSet = false;
    m_featured_results_set_id_isValid = false;

    m_featured_results_set_name_isSet = false;
    m_featured_results_set_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_query_texts_isSet = false;
    m_query_texts_isValid = false;

    m_featured_documents_isSet = false;
    m_featured_documents_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;

    m_creation_timestamp_isSet = false;
    m_creation_timestamp_isValid = false;
}

void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::fromJsonObject(QJsonObject json) {

    m_featured_results_set_id_isValid = ::OpenAPI::fromJsonValue(m_featured_results_set_id, json[QString("FeaturedResultsSetId")]);
    m_featured_results_set_id_isSet = !json[QString("FeaturedResultsSetId")].isNull() && m_featured_results_set_id_isValid;

    m_featured_results_set_name_isValid = ::OpenAPI::fromJsonValue(m_featured_results_set_name, json[QString("FeaturedResultsSetName")]);
    m_featured_results_set_name_isSet = !json[QString("FeaturedResultsSetName")].isNull() && m_featured_results_set_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_query_texts_isValid = ::OpenAPI::fromJsonValue(m_query_texts, json[QString("QueryTexts")]);
    m_query_texts_isSet = !json[QString("QueryTexts")].isNull() && m_query_texts_isValid;

    m_featured_documents_isValid = ::OpenAPI::fromJsonValue(m_featured_documents, json[QString("FeaturedDocuments")]);
    m_featured_documents_isSet = !json[QString("FeaturedDocuments")].isNull() && m_featured_documents_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("LastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("LastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;

    m_creation_timestamp_isValid = ::OpenAPI::fromJsonValue(m_creation_timestamp, json[QString("CreationTimestamp")]);
    m_creation_timestamp_isSet = !json[QString("CreationTimestamp")].isNull() && m_creation_timestamp_isValid;
}

QString OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::asJsonObject() const {
    QJsonObject obj;
    if (m_featured_results_set_id_isSet) {
        obj.insert(QString("FeaturedResultsSetId"), ::OpenAPI::toJsonValue(m_featured_results_set_id));
    }
    if (m_featured_results_set_name_isSet) {
        obj.insert(QString("FeaturedResultsSetName"), ::OpenAPI::toJsonValue(m_featured_results_set_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_query_texts.isSet()) {
        obj.insert(QString("QueryTexts"), ::OpenAPI::toJsonValue(m_query_texts));
    }
    if (m_featured_documents.isSet()) {
        obj.insert(QString("FeaturedDocuments"), ::OpenAPI::toJsonValue(m_featured_documents));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("LastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    if (m_creation_timestamp_isSet) {
        obj.insert(QString("CreationTimestamp"), ::OpenAPI::toJsonValue(m_creation_timestamp));
    }
    return obj;
}

QString OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getFeaturedResultsSetId() const {
    return m_featured_results_set_id;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setFeaturedResultsSetId(const QString &featured_results_set_id) {
    m_featured_results_set_id = featured_results_set_id;
    m_featured_results_set_id_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_results_set_id_Set() const{
    return m_featured_results_set_id_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_results_set_id_Valid() const{
    return m_featured_results_set_id_isValid;
}

QString OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getFeaturedResultsSetName() const {
    return m_featured_results_set_name;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setFeaturedResultsSetName(const QString &featured_results_set_name) {
    m_featured_results_set_name = featured_results_set_name;
    m_featured_results_set_name_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_results_set_name_Set() const{
    return m_featured_results_set_name_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_results_set_name_Valid() const{
    return m_featured_results_set_name_isValid;
}

QString OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getDescription() const {
    return m_description;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_description_Valid() const{
    return m_description_isValid;
}

OAIFeaturedResultsSetStatus OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getStatus() const {
    return m_status;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setStatus(const OAIFeaturedResultsSetStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_status_Valid() const{
    return m_status_isValid;
}

QList OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getQueryTexts() const {
    return m_query_texts;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setQueryTexts(const QList &query_texts) {
    m_query_texts = query_texts;
    m_query_texts_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_query_texts_Set() const{
    return m_query_texts_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_query_texts_Valid() const{
    return m_query_texts_isValid;
}

QList OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getFeaturedDocuments() const {
    return m_featured_documents;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setFeaturedDocuments(const QList &featured_documents) {
    m_featured_documents = featured_documents;
    m_featured_documents_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_documents_Set() const{
    return m_featured_documents_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_featured_documents_Valid() const{
    return m_featured_documents_isValid;
}

qint32 OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setLastUpdatedTimestamp(const qint32 &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

qint32 OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::getCreationTimestamp() const {
    return m_creation_timestamp;
}
void OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::setCreationTimestamp(const qint32 &creation_timestamp) {
    m_creation_timestamp = creation_timestamp;
    m_creation_timestamp_isSet = true;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_creation_timestamp_Set() const{
    return m_creation_timestamp_isSet;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::is_creation_timestamp_Valid() const{
    return m_creation_timestamp_isValid;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_featured_results_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_featured_results_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_texts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_featured_documents.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFeaturedResultsSetResponse_FeaturedResultsSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
