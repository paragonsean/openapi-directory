/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoxConfiguration.h
 *
 * Provides the configuration information to connect to Box as your data source.
 */

#ifndef OAIBoxConfiguration_H
#define OAIBoxConfiguration_H

#include <QJsonObject>

#include "OAIBoxConfiguration_VpcConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBoxConfiguration_VpcConfiguration;

class OAIBoxConfiguration : public OAIObject {
public:
    OAIBoxConfiguration();
    OAIBoxConfiguration(QString json);
    ~OAIBoxConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnterpriseId() const;
    void setEnterpriseId(const QString &enterprise_id);
    bool is_enterprise_id_Set() const;
    bool is_enterprise_id_Valid() const;

    QString getSecretArn() const;
    void setSecretArn(const QString &secret_arn);
    bool is_secret_arn_Set() const;
    bool is_secret_arn_Valid() const;

    bool getUseChangeLog() const;
    void setUseChangeLog(const bool &use_change_log);
    bool is_use_change_log_Set() const;
    bool is_use_change_log_Valid() const;

    bool getCrawlComments() const;
    void setCrawlComments(const bool &crawl_comments);
    bool is_crawl_comments_Set() const;
    bool is_crawl_comments_Valid() const;

    bool getCrawlTasks() const;
    void setCrawlTasks(const bool &crawl_tasks);
    bool is_crawl_tasks_Set() const;
    bool is_crawl_tasks_Valid() const;

    bool getCrawlWebLinks() const;
    void setCrawlWebLinks(const bool &crawl_web_links);
    bool is_crawl_web_links_Set() const;
    bool is_crawl_web_links_Valid() const;

    QList getFileFieldMappings() const;
    void setFileFieldMappings(const QList &file_field_mappings);
    bool is_file_field_mappings_Set() const;
    bool is_file_field_mappings_Valid() const;

    QList getTaskFieldMappings() const;
    void setTaskFieldMappings(const QList &task_field_mappings);
    bool is_task_field_mappings_Set() const;
    bool is_task_field_mappings_Valid() const;

    QList getCommentFieldMappings() const;
    void setCommentFieldMappings(const QList &comment_field_mappings);
    bool is_comment_field_mappings_Set() const;
    bool is_comment_field_mappings_Valid() const;

    QList getWebLinkFieldMappings() const;
    void setWebLinkFieldMappings(const QList &web_link_field_mappings);
    bool is_web_link_field_mappings_Set() const;
    bool is_web_link_field_mappings_Valid() const;

    QList getInclusionPatterns() const;
    void setInclusionPatterns(const QList &inclusion_patterns);
    bool is_inclusion_patterns_Set() const;
    bool is_inclusion_patterns_Valid() const;

    QList getExclusionPatterns() const;
    void setExclusionPatterns(const QList &exclusion_patterns);
    bool is_exclusion_patterns_Set() const;
    bool is_exclusion_patterns_Valid() const;

    OAIBoxConfiguration_VpcConfiguration getVpcConfiguration() const;
    void setVpcConfiguration(const OAIBoxConfiguration_VpcConfiguration &vpc_configuration);
    bool is_vpc_configuration_Set() const;
    bool is_vpc_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_enterprise_id;
    bool m_enterprise_id_isSet;
    bool m_enterprise_id_isValid;

    QString m_secret_arn;
    bool m_secret_arn_isSet;
    bool m_secret_arn_isValid;

    bool m_use_change_log;
    bool m_use_change_log_isSet;
    bool m_use_change_log_isValid;

    bool m_crawl_comments;
    bool m_crawl_comments_isSet;
    bool m_crawl_comments_isValid;

    bool m_crawl_tasks;
    bool m_crawl_tasks_isSet;
    bool m_crawl_tasks_isValid;

    bool m_crawl_web_links;
    bool m_crawl_web_links_isSet;
    bool m_crawl_web_links_isValid;

    QList m_file_field_mappings;
    bool m_file_field_mappings_isSet;
    bool m_file_field_mappings_isValid;

    QList m_task_field_mappings;
    bool m_task_field_mappings_isSet;
    bool m_task_field_mappings_isValid;

    QList m_comment_field_mappings;
    bool m_comment_field_mappings_isSet;
    bool m_comment_field_mappings_isValid;

    QList m_web_link_field_mappings;
    bool m_web_link_field_mappings_isSet;
    bool m_web_link_field_mappings_isValid;

    QList m_inclusion_patterns;
    bool m_inclusion_patterns_isSet;
    bool m_inclusion_patterns_isValid;

    QList m_exclusion_patterns;
    bool m_exclusion_patterns_isSet;
    bool m_exclusion_patterns_isValid;

    OAIBoxConfiguration_VpcConfiguration m_vpc_configuration;
    bool m_vpc_configuration_isSet;
    bool m_vpc_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoxConfiguration)

#endif // OAIBoxConfiguration_H
