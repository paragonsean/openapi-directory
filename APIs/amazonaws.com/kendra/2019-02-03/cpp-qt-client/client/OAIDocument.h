/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocument.h
 *
 * A document in an index.
 */

#ifndef OAIDocument_H
#define OAIDocument_H

#include <QJsonObject>

#include "OAIContentType.h"
#include "OAIS3Path.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Path;

class OAIDocument : public OAIObject {
public:
    OAIDocument();
    OAIDocument(QString json);
    ~OAIDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getBlob() const;
    void setBlob(const QString &blob);
    bool is_blob_Set() const;
    bool is_blob_Valid() const;

    OAIS3Path getS3Path() const;
    void setS3Path(const OAIS3Path &s3_path);
    bool is_s3_path_Set() const;
    bool is_s3_path_Valid() const;

    QList getAttributes() const;
    void setAttributes(const QList &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QList getAccessControlList() const;
    void setAccessControlList(const QList &access_control_list);
    bool is_access_control_list_Set() const;
    bool is_access_control_list_Valid() const;

    QList getHierarchicalAccessControlList() const;
    void setHierarchicalAccessControlList(const QList &hierarchical_access_control_list);
    bool is_hierarchical_access_control_list_Set() const;
    bool is_hierarchical_access_control_list_Valid() const;

    OAIContentType getContentType() const;
    void setContentType(const OAIContentType &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getAccessControlConfigurationId() const;
    void setAccessControlConfigurationId(const QString &access_control_configuration_id);
    bool is_access_control_configuration_id_Set() const;
    bool is_access_control_configuration_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_blob;
    bool m_blob_isSet;
    bool m_blob_isValid;

    OAIS3Path m_s3_path;
    bool m_s3_path_isSet;
    bool m_s3_path_isValid;

    QList m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QList m_access_control_list;
    bool m_access_control_list_isSet;
    bool m_access_control_list_isValid;

    QList m_hierarchical_access_control_list;
    bool m_hierarchical_access_control_list_isSet;
    bool m_hierarchical_access_control_list_isValid;

    OAIContentType m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_access_control_configuration_id;
    bool m_access_control_configuration_id_isSet;
    bool m_access_control_configuration_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocument)

#endif // OAIDocument_H
