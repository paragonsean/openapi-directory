/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfluenceConfiguration_AttachmentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfluenceConfiguration_AttachmentConfiguration::OAIConfluenceConfiguration_AttachmentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfluenceConfiguration_AttachmentConfiguration::OAIConfluenceConfiguration_AttachmentConfiguration() {
    this->initializeModel();
}

OAIConfluenceConfiguration_AttachmentConfiguration::~OAIConfluenceConfiguration_AttachmentConfiguration() {}

void OAIConfluenceConfiguration_AttachmentConfiguration::initializeModel() {

    m_crawl_attachments_isSet = false;
    m_crawl_attachments_isValid = false;

    m_attachment_field_mappings_isSet = false;
    m_attachment_field_mappings_isValid = false;
}

void OAIConfluenceConfiguration_AttachmentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfluenceConfiguration_AttachmentConfiguration::fromJsonObject(QJsonObject json) {

    m_crawl_attachments_isValid = ::OpenAPI::fromJsonValue(m_crawl_attachments, json[QString("CrawlAttachments")]);
    m_crawl_attachments_isSet = !json[QString("CrawlAttachments")].isNull() && m_crawl_attachments_isValid;

    m_attachment_field_mappings_isValid = ::OpenAPI::fromJsonValue(m_attachment_field_mappings, json[QString("AttachmentFieldMappings")]);
    m_attachment_field_mappings_isSet = !json[QString("AttachmentFieldMappings")].isNull() && m_attachment_field_mappings_isValid;
}

QString OAIConfluenceConfiguration_AttachmentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfluenceConfiguration_AttachmentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_crawl_attachments_isSet) {
        obj.insert(QString("CrawlAttachments"), ::OpenAPI::toJsonValue(m_crawl_attachments));
    }
    if (m_attachment_field_mappings.isSet()) {
        obj.insert(QString("AttachmentFieldMappings"), ::OpenAPI::toJsonValue(m_attachment_field_mappings));
    }
    return obj;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::getCrawlAttachments() const {
    return m_crawl_attachments;
}
void OAIConfluenceConfiguration_AttachmentConfiguration::setCrawlAttachments(const bool &crawl_attachments) {
    m_crawl_attachments = crawl_attachments;
    m_crawl_attachments_isSet = true;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::is_crawl_attachments_Set() const{
    return m_crawl_attachments_isSet;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::is_crawl_attachments_Valid() const{
    return m_crawl_attachments_isValid;
}

QList OAIConfluenceConfiguration_AttachmentConfiguration::getAttachmentFieldMappings() const {
    return m_attachment_field_mappings;
}
void OAIConfluenceConfiguration_AttachmentConfiguration::setAttachmentFieldMappings(const QList &attachment_field_mappings) {
    m_attachment_field_mappings = attachment_field_mappings;
    m_attachment_field_mappings_isSet = true;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::is_attachment_field_mappings_Set() const{
    return m_attachment_field_mappings_isSet;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::is_attachment_field_mappings_Valid() const{
    return m_attachment_field_mappings_isValid;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crawl_attachments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attachment_field_mappings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfluenceConfiguration_AttachmentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
