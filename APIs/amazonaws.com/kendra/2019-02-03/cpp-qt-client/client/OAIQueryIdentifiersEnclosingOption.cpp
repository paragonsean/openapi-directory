/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryIdentifiersEnclosingOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryIdentifiersEnclosingOption::OAIQueryIdentifiersEnclosingOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryIdentifiersEnclosingOption::OAIQueryIdentifiersEnclosingOption() {
    this->initializeModel();
}

OAIQueryIdentifiersEnclosingOption::~OAIQueryIdentifiersEnclosingOption() {}

void OAIQueryIdentifiersEnclosingOption::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQueryIdentifiersEnclosingOption::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQueryIdentifiersEnclosingOption::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DOUBLE_QUOTES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryIdentifiersEnclosingOption::DOUBLE_QUOTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryIdentifiersEnclosingOption::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQueryIdentifiersEnclosingOption::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQueryIdentifiersEnclosingOption::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQueryIdentifiersEnclosingOption::DOUBLE_QUOTES:
            val = "DOUBLE_QUOTES";
            break;
        case eOAIQueryIdentifiersEnclosingOption::NONE:
            val = "NONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQueryIdentifiersEnclosingOption::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQueryIdentifiersEnclosingOption::eOAIQueryIdentifiersEnclosingOption OAIQueryIdentifiersEnclosingOption::getValue() const {
    return m_value;
}

void OAIQueryIdentifiersEnclosingOption::setValue(const OAIQueryIdentifiersEnclosingOption::eOAIQueryIdentifiersEnclosingOption& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQueryIdentifiersEnclosingOption::isSet() const {
    
    return m_value_isSet;
}

bool OAIQueryIdentifiersEnclosingOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
