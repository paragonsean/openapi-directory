/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesforceConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesforceConfiguration::OAISalesforceConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesforceConfiguration::OAISalesforceConfiguration() {
    this->initializeModel();
}

OAISalesforceConfiguration::~OAISalesforceConfiguration() {}

void OAISalesforceConfiguration::initializeModel() {

    m_server_url_isSet = false;
    m_server_url_isValid = false;

    m_secret_arn_isSet = false;
    m_secret_arn_isValid = false;

    m_standard_object_configurations_isSet = false;
    m_standard_object_configurations_isValid = false;

    m_knowledge_article_configuration_isSet = false;
    m_knowledge_article_configuration_isValid = false;

    m_chatter_feed_configuration_isSet = false;
    m_chatter_feed_configuration_isValid = false;

    m_crawl_attachments_isSet = false;
    m_crawl_attachments_isValid = false;

    m_standard_object_attachment_configuration_isSet = false;
    m_standard_object_attachment_configuration_isValid = false;

    m_include_attachment_file_patterns_isSet = false;
    m_include_attachment_file_patterns_isValid = false;

    m_exclude_attachment_file_patterns_isSet = false;
    m_exclude_attachment_file_patterns_isValid = false;
}

void OAISalesforceConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesforceConfiguration::fromJsonObject(QJsonObject json) {

    m_server_url_isValid = ::OpenAPI::fromJsonValue(m_server_url, json[QString("ServerUrl")]);
    m_server_url_isSet = !json[QString("ServerUrl")].isNull() && m_server_url_isValid;

    m_secret_arn_isValid = ::OpenAPI::fromJsonValue(m_secret_arn, json[QString("SecretArn")]);
    m_secret_arn_isSet = !json[QString("SecretArn")].isNull() && m_secret_arn_isValid;

    m_standard_object_configurations_isValid = ::OpenAPI::fromJsonValue(m_standard_object_configurations, json[QString("StandardObjectConfigurations")]);
    m_standard_object_configurations_isSet = !json[QString("StandardObjectConfigurations")].isNull() && m_standard_object_configurations_isValid;

    m_knowledge_article_configuration_isValid = ::OpenAPI::fromJsonValue(m_knowledge_article_configuration, json[QString("KnowledgeArticleConfiguration")]);
    m_knowledge_article_configuration_isSet = !json[QString("KnowledgeArticleConfiguration")].isNull() && m_knowledge_article_configuration_isValid;

    m_chatter_feed_configuration_isValid = ::OpenAPI::fromJsonValue(m_chatter_feed_configuration, json[QString("ChatterFeedConfiguration")]);
    m_chatter_feed_configuration_isSet = !json[QString("ChatterFeedConfiguration")].isNull() && m_chatter_feed_configuration_isValid;

    m_crawl_attachments_isValid = ::OpenAPI::fromJsonValue(m_crawl_attachments, json[QString("CrawlAttachments")]);
    m_crawl_attachments_isSet = !json[QString("CrawlAttachments")].isNull() && m_crawl_attachments_isValid;

    m_standard_object_attachment_configuration_isValid = ::OpenAPI::fromJsonValue(m_standard_object_attachment_configuration, json[QString("StandardObjectAttachmentConfiguration")]);
    m_standard_object_attachment_configuration_isSet = !json[QString("StandardObjectAttachmentConfiguration")].isNull() && m_standard_object_attachment_configuration_isValid;

    m_include_attachment_file_patterns_isValid = ::OpenAPI::fromJsonValue(m_include_attachment_file_patterns, json[QString("IncludeAttachmentFilePatterns")]);
    m_include_attachment_file_patterns_isSet = !json[QString("IncludeAttachmentFilePatterns")].isNull() && m_include_attachment_file_patterns_isValid;

    m_exclude_attachment_file_patterns_isValid = ::OpenAPI::fromJsonValue(m_exclude_attachment_file_patterns, json[QString("ExcludeAttachmentFilePatterns")]);
    m_exclude_attachment_file_patterns_isSet = !json[QString("ExcludeAttachmentFilePatterns")].isNull() && m_exclude_attachment_file_patterns_isValid;
}

QString OAISalesforceConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesforceConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_server_url_isSet) {
        obj.insert(QString("ServerUrl"), ::OpenAPI::toJsonValue(m_server_url));
    }
    if (m_secret_arn_isSet) {
        obj.insert(QString("SecretArn"), ::OpenAPI::toJsonValue(m_secret_arn));
    }
    if (m_standard_object_configurations.isSet()) {
        obj.insert(QString("StandardObjectConfigurations"), ::OpenAPI::toJsonValue(m_standard_object_configurations));
    }
    if (m_knowledge_article_configuration.isSet()) {
        obj.insert(QString("KnowledgeArticleConfiguration"), ::OpenAPI::toJsonValue(m_knowledge_article_configuration));
    }
    if (m_chatter_feed_configuration.isSet()) {
        obj.insert(QString("ChatterFeedConfiguration"), ::OpenAPI::toJsonValue(m_chatter_feed_configuration));
    }
    if (m_crawl_attachments_isSet) {
        obj.insert(QString("CrawlAttachments"), ::OpenAPI::toJsonValue(m_crawl_attachments));
    }
    if (m_standard_object_attachment_configuration.isSet()) {
        obj.insert(QString("StandardObjectAttachmentConfiguration"), ::OpenAPI::toJsonValue(m_standard_object_attachment_configuration));
    }
    if (m_include_attachment_file_patterns.isSet()) {
        obj.insert(QString("IncludeAttachmentFilePatterns"), ::OpenAPI::toJsonValue(m_include_attachment_file_patterns));
    }
    if (m_exclude_attachment_file_patterns.isSet()) {
        obj.insert(QString("ExcludeAttachmentFilePatterns"), ::OpenAPI::toJsonValue(m_exclude_attachment_file_patterns));
    }
    return obj;
}

QString OAISalesforceConfiguration::getServerUrl() const {
    return m_server_url;
}
void OAISalesforceConfiguration::setServerUrl(const QString &server_url) {
    m_server_url = server_url;
    m_server_url_isSet = true;
}

bool OAISalesforceConfiguration::is_server_url_Set() const{
    return m_server_url_isSet;
}

bool OAISalesforceConfiguration::is_server_url_Valid() const{
    return m_server_url_isValid;
}

QString OAISalesforceConfiguration::getSecretArn() const {
    return m_secret_arn;
}
void OAISalesforceConfiguration::setSecretArn(const QString &secret_arn) {
    m_secret_arn = secret_arn;
    m_secret_arn_isSet = true;
}

bool OAISalesforceConfiguration::is_secret_arn_Set() const{
    return m_secret_arn_isSet;
}

bool OAISalesforceConfiguration::is_secret_arn_Valid() const{
    return m_secret_arn_isValid;
}

QList OAISalesforceConfiguration::getStandardObjectConfigurations() const {
    return m_standard_object_configurations;
}
void OAISalesforceConfiguration::setStandardObjectConfigurations(const QList &standard_object_configurations) {
    m_standard_object_configurations = standard_object_configurations;
    m_standard_object_configurations_isSet = true;
}

bool OAISalesforceConfiguration::is_standard_object_configurations_Set() const{
    return m_standard_object_configurations_isSet;
}

bool OAISalesforceConfiguration::is_standard_object_configurations_Valid() const{
    return m_standard_object_configurations_isValid;
}

OAISalesforceConfiguration_KnowledgeArticleConfiguration OAISalesforceConfiguration::getKnowledgeArticleConfiguration() const {
    return m_knowledge_article_configuration;
}
void OAISalesforceConfiguration::setKnowledgeArticleConfiguration(const OAISalesforceConfiguration_KnowledgeArticleConfiguration &knowledge_article_configuration) {
    m_knowledge_article_configuration = knowledge_article_configuration;
    m_knowledge_article_configuration_isSet = true;
}

bool OAISalesforceConfiguration::is_knowledge_article_configuration_Set() const{
    return m_knowledge_article_configuration_isSet;
}

bool OAISalesforceConfiguration::is_knowledge_article_configuration_Valid() const{
    return m_knowledge_article_configuration_isValid;
}

OAISalesforceConfiguration_ChatterFeedConfiguration OAISalesforceConfiguration::getChatterFeedConfiguration() const {
    return m_chatter_feed_configuration;
}
void OAISalesforceConfiguration::setChatterFeedConfiguration(const OAISalesforceConfiguration_ChatterFeedConfiguration &chatter_feed_configuration) {
    m_chatter_feed_configuration = chatter_feed_configuration;
    m_chatter_feed_configuration_isSet = true;
}

bool OAISalesforceConfiguration::is_chatter_feed_configuration_Set() const{
    return m_chatter_feed_configuration_isSet;
}

bool OAISalesforceConfiguration::is_chatter_feed_configuration_Valid() const{
    return m_chatter_feed_configuration_isValid;
}

bool OAISalesforceConfiguration::getCrawlAttachments() const {
    return m_crawl_attachments;
}
void OAISalesforceConfiguration::setCrawlAttachments(const bool &crawl_attachments) {
    m_crawl_attachments = crawl_attachments;
    m_crawl_attachments_isSet = true;
}

bool OAISalesforceConfiguration::is_crawl_attachments_Set() const{
    return m_crawl_attachments_isSet;
}

bool OAISalesforceConfiguration::is_crawl_attachments_Valid() const{
    return m_crawl_attachments_isValid;
}

OAISalesforceConfiguration_StandardObjectAttachmentConfiguration OAISalesforceConfiguration::getStandardObjectAttachmentConfiguration() const {
    return m_standard_object_attachment_configuration;
}
void OAISalesforceConfiguration::setStandardObjectAttachmentConfiguration(const OAISalesforceConfiguration_StandardObjectAttachmentConfiguration &standard_object_attachment_configuration) {
    m_standard_object_attachment_configuration = standard_object_attachment_configuration;
    m_standard_object_attachment_configuration_isSet = true;
}

bool OAISalesforceConfiguration::is_standard_object_attachment_configuration_Set() const{
    return m_standard_object_attachment_configuration_isSet;
}

bool OAISalesforceConfiguration::is_standard_object_attachment_configuration_Valid() const{
    return m_standard_object_attachment_configuration_isValid;
}

QList OAISalesforceConfiguration::getIncludeAttachmentFilePatterns() const {
    return m_include_attachment_file_patterns;
}
void OAISalesforceConfiguration::setIncludeAttachmentFilePatterns(const QList &include_attachment_file_patterns) {
    m_include_attachment_file_patterns = include_attachment_file_patterns;
    m_include_attachment_file_patterns_isSet = true;
}

bool OAISalesforceConfiguration::is_include_attachment_file_patterns_Set() const{
    return m_include_attachment_file_patterns_isSet;
}

bool OAISalesforceConfiguration::is_include_attachment_file_patterns_Valid() const{
    return m_include_attachment_file_patterns_isValid;
}

QList OAISalesforceConfiguration::getExcludeAttachmentFilePatterns() const {
    return m_exclude_attachment_file_patterns;
}
void OAISalesforceConfiguration::setExcludeAttachmentFilePatterns(const QList &exclude_attachment_file_patterns) {
    m_exclude_attachment_file_patterns = exclude_attachment_file_patterns;
    m_exclude_attachment_file_patterns_isSet = true;
}

bool OAISalesforceConfiguration::is_exclude_attachment_file_patterns_Set() const{
    return m_exclude_attachment_file_patterns_isSet;
}

bool OAISalesforceConfiguration::is_exclude_attachment_file_patterns_Valid() const{
    return m_exclude_attachment_file_patterns_isValid;
}

bool OAISalesforceConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_server_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_object_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_knowledge_article_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_chatter_feed_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_crawl_attachments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_object_attachment_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_attachment_file_patterns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_attachment_file_patterns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesforceConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_server_url_isValid && m_secret_arn_isValid && true;
}

} // namespace OpenAPI
