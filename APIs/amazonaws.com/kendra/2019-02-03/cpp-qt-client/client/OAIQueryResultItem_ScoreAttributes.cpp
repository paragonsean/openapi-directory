/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryResultItem_ScoreAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryResultItem_ScoreAttributes::OAIQueryResultItem_ScoreAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryResultItem_ScoreAttributes::OAIQueryResultItem_ScoreAttributes() {
    this->initializeModel();
}

OAIQueryResultItem_ScoreAttributes::~OAIQueryResultItem_ScoreAttributes() {}

void OAIQueryResultItem_ScoreAttributes::initializeModel() {

    m_score_confidence_isSet = false;
    m_score_confidence_isValid = false;
}

void OAIQueryResultItem_ScoreAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryResultItem_ScoreAttributes::fromJsonObject(QJsonObject json) {

    m_score_confidence_isValid = ::OpenAPI::fromJsonValue(m_score_confidence, json[QString("ScoreConfidence")]);
    m_score_confidence_isSet = !json[QString("ScoreConfidence")].isNull() && m_score_confidence_isValid;
}

QString OAIQueryResultItem_ScoreAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryResultItem_ScoreAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_score_confidence.isSet()) {
        obj.insert(QString("ScoreConfidence"), ::OpenAPI::toJsonValue(m_score_confidence));
    }
    return obj;
}

OAIScoreConfidence OAIQueryResultItem_ScoreAttributes::getScoreConfidence() const {
    return m_score_confidence;
}
void OAIQueryResultItem_ScoreAttributes::setScoreConfidence(const OAIScoreConfidence &score_confidence) {
    m_score_confidence = score_confidence;
    m_score_confidence_isSet = true;
}

bool OAIQueryResultItem_ScoreAttributes::is_score_confidence_Set() const{
    return m_score_confidence_isSet;
}

bool OAIQueryResultItem_ScoreAttributes::is_score_confidence_Valid() const{
    return m_score_confidence_isValid;
}

bool OAIQueryResultItem_ScoreAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_score_confidence.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryResultItem_ScoreAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
