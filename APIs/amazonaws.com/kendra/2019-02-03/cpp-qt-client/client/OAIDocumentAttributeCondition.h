/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentAttributeCondition.h
 *
 * &lt;p&gt;The condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. You use this with &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeTarget.html\&quot;&gt;DocumentAttributeTarget to apply the condition&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For example, you can create the &#39;Department&#39; target field and have it prefill department names associated with the documents based on information in the &#39;Source_URI&#39; field. Set the condition that if the &#39;Source_URI&#39; field contains &#39;financial&#39; in its URI value, then prefill the target field &#39;Department&#39; with the target value &#39;Finance&#39; for the document.&lt;/p&gt; &lt;p&gt;Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using &lt;code&gt;DocumentAttributeTarget&lt;/code&gt;. Amazon Kendra then will map your newly created metadata field to your index field.&lt;/p&gt;
 */

#ifndef OAIDocumentAttributeCondition_H
#define OAIDocumentAttributeCondition_H

#include <QJsonObject>

#include "OAIConditionOperator.h"
#include "OAIDocumentAttributeCondition_ConditionOnValue.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentAttributeCondition_ConditionOnValue;

class OAIDocumentAttributeCondition : public OAIObject {
public:
    OAIDocumentAttributeCondition();
    OAIDocumentAttributeCondition(QString json);
    ~OAIDocumentAttributeCondition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConditionDocumentAttributeKey() const;
    void setConditionDocumentAttributeKey(const QString &condition_document_attribute_key);
    bool is_condition_document_attribute_key_Set() const;
    bool is_condition_document_attribute_key_Valid() const;

    OAIConditionOperator getROperator() const;
    void setROperator(const OAIConditionOperator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    OAIDocumentAttributeCondition_ConditionOnValue getConditionOnValue() const;
    void setConditionOnValue(const OAIDocumentAttributeCondition_ConditionOnValue &condition_on_value);
    bool is_condition_on_value_Set() const;
    bool is_condition_on_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_condition_document_attribute_key;
    bool m_condition_document_attribute_key_isSet;
    bool m_condition_document_attribute_key_isValid;

    OAIConditionOperator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    OAIDocumentAttributeCondition_ConditionOnValue m_condition_on_value;
    bool m_condition_on_value_isSet;
    bool m_condition_on_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentAttributeCondition)

#endif // OAIDocumentAttributeCondition_H
