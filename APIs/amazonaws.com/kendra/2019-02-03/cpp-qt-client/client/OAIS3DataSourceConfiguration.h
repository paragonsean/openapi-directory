/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3DataSourceConfiguration.h
 *
 * Provides the configuration information to connect to an Amazon S3 bucket.
 */

#ifndef OAIS3DataSourceConfiguration_H
#define OAIS3DataSourceConfiguration_H

#include <QJsonObject>

#include "OAIDocumentsMetadataConfiguration.h"
#include "OAIS3DataSourceConfiguration_AccessControlListConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentsMetadataConfiguration;
class OAIS3DataSourceConfiguration_AccessControlListConfiguration;

class OAIS3DataSourceConfiguration : public OAIObject {
public:
    OAIS3DataSourceConfiguration();
    OAIS3DataSourceConfiguration(QString json);
    ~OAIS3DataSourceConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    QList getInclusionPrefixes() const;
    void setInclusionPrefixes(const QList &inclusion_prefixes);
    bool is_inclusion_prefixes_Set() const;
    bool is_inclusion_prefixes_Valid() const;

    QList getInclusionPatterns() const;
    void setInclusionPatterns(const QList &inclusion_patterns);
    bool is_inclusion_patterns_Set() const;
    bool is_inclusion_patterns_Valid() const;

    QList getExclusionPatterns() const;
    void setExclusionPatterns(const QList &exclusion_patterns);
    bool is_exclusion_patterns_Set() const;
    bool is_exclusion_patterns_Valid() const;

    OAIDocumentsMetadataConfiguration getDocumentsMetadataConfiguration() const;
    void setDocumentsMetadataConfiguration(const OAIDocumentsMetadataConfiguration &documents_metadata_configuration);
    bool is_documents_metadata_configuration_Set() const;
    bool is_documents_metadata_configuration_Valid() const;

    OAIS3DataSourceConfiguration_AccessControlListConfiguration getAccessControlListConfiguration() const;
    void setAccessControlListConfiguration(const OAIS3DataSourceConfiguration_AccessControlListConfiguration &access_control_list_configuration);
    bool is_access_control_list_configuration_Set() const;
    bool is_access_control_list_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    QList m_inclusion_prefixes;
    bool m_inclusion_prefixes_isSet;
    bool m_inclusion_prefixes_isValid;

    QList m_inclusion_patterns;
    bool m_inclusion_patterns_isSet;
    bool m_inclusion_patterns_isValid;

    QList m_exclusion_patterns;
    bool m_exclusion_patterns_isSet;
    bool m_exclusion_patterns_isValid;

    OAIDocumentsMetadataConfiguration m_documents_metadata_configuration;
    bool m_documents_metadata_configuration_isSet;
    bool m_documents_metadata_configuration_isValid;

    OAIS3DataSourceConfiguration_AccessControlListConfiguration m_access_control_list_configuration;
    bool m_access_control_list_configuration_isSet;
    bool m_access_control_list_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3DataSourceConfiguration)

#endif // OAIS3DataSourceConfiguration_H
