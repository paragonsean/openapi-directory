/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWarningCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWarningCode::OAIWarningCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWarningCode::OAIWarningCode() {
    this->initializeModel();
}

OAIWarningCode::~OAIWarningCode() {}

void OAIWarningCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWarningCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWarningCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("QUERY_LANGUAGE_INVALID_SYNTAX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWarningCode::QUERY_LANGUAGE_INVALID_SYNTAX;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWarningCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWarningCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWarningCode::QUERY_LANGUAGE_INVALID_SYNTAX:
            val = "QUERY_LANGUAGE_INVALID_SYNTAX";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWarningCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWarningCode::eOAIWarningCode OAIWarningCode::getValue() const {
    return m_value;
}

void OAIWarningCode::setValue(const OAIWarningCode::eOAIWarningCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWarningCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIWarningCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
