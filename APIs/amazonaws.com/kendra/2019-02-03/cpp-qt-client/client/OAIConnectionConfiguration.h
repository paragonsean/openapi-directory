/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionConfiguration.h
 *
 * Provides the configuration information that&#39;s required to connect to a database.
 */

#ifndef OAIConnectionConfiguration_H
#define OAIConnectionConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectionConfiguration : public OAIObject {
public:
    OAIConnectionConfiguration();
    OAIConnectionConfiguration(QString json);
    ~OAIConnectionConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseHost() const;
    void setDatabaseHost(const QString &database_host);
    bool is_database_host_Set() const;
    bool is_database_host_Valid() const;

    qint32 getDatabasePort() const;
    void setDatabasePort(const qint32 &database_port);
    bool is_database_port_Set() const;
    bool is_database_port_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QString getSecretArn() const;
    void setSecretArn(const QString &secret_arn);
    bool is_secret_arn_Set() const;
    bool is_secret_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_host;
    bool m_database_host_isSet;
    bool m_database_host_isValid;

    qint32 m_database_port;
    bool m_database_port_isSet;
    bool m_database_port_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QString m_secret_arn;
    bool m_secret_arn_isSet;
    bool m_secret_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionConfiguration)

#endif // OAIConnectionConfiguration_H
