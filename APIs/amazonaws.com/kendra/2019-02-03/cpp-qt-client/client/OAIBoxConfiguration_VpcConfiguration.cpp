/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxConfiguration_VpcConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxConfiguration_VpcConfiguration::OAIBoxConfiguration_VpcConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxConfiguration_VpcConfiguration::OAIBoxConfiguration_VpcConfiguration() {
    this->initializeModel();
}

OAIBoxConfiguration_VpcConfiguration::~OAIBoxConfiguration_VpcConfiguration() {}

void OAIBoxConfiguration_VpcConfiguration::initializeModel() {

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;
}

void OAIBoxConfiguration_VpcConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoxConfiguration_VpcConfiguration::fromJsonObject(QJsonObject json) {

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("SubnetIds")]);
    m_subnet_ids_isSet = !json[QString("SubnetIds")].isNull() && m_subnet_ids_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("SecurityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("SecurityGroupIds")].isNull() && m_security_group_ids_isValid;
}

QString OAIBoxConfiguration_VpcConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoxConfiguration_VpcConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("SubnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("SecurityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    return obj;
}

QList OAIBoxConfiguration_VpcConfiguration::getSubnetIds() const {
    return m_subnet_ids;
}
void OAIBoxConfiguration_VpcConfiguration::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAIBoxConfiguration_VpcConfiguration::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAIBoxConfiguration_VpcConfiguration::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QList OAIBoxConfiguration_VpcConfiguration::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIBoxConfiguration_VpcConfiguration::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIBoxConfiguration_VpcConfiguration::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIBoxConfiguration_VpcConfiguration::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAIBoxConfiguration_VpcConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoxConfiguration_VpcConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_subnet_ids_isValid && m_security_group_ids_isValid && true;
}

} // namespace OpenAPI
