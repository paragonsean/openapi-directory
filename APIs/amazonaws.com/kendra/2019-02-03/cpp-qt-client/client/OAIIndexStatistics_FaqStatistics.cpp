/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexStatistics_FaqStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexStatistics_FaqStatistics::OAIIndexStatistics_FaqStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexStatistics_FaqStatistics::OAIIndexStatistics_FaqStatistics() {
    this->initializeModel();
}

OAIIndexStatistics_FaqStatistics::~OAIIndexStatistics_FaqStatistics() {}

void OAIIndexStatistics_FaqStatistics::initializeModel() {

    m_indexed_question_answers_count_isSet = false;
    m_indexed_question_answers_count_isValid = false;
}

void OAIIndexStatistics_FaqStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndexStatistics_FaqStatistics::fromJsonObject(QJsonObject json) {

    m_indexed_question_answers_count_isValid = ::OpenAPI::fromJsonValue(m_indexed_question_answers_count, json[QString("IndexedQuestionAnswersCount")]);
    m_indexed_question_answers_count_isSet = !json[QString("IndexedQuestionAnswersCount")].isNull() && m_indexed_question_answers_count_isValid;
}

QString OAIIndexStatistics_FaqStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndexStatistics_FaqStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_indexed_question_answers_count_isSet) {
        obj.insert(QString("IndexedQuestionAnswersCount"), ::OpenAPI::toJsonValue(m_indexed_question_answers_count));
    }
    return obj;
}

qint32 OAIIndexStatistics_FaqStatistics::getIndexedQuestionAnswersCount() const {
    return m_indexed_question_answers_count;
}
void OAIIndexStatistics_FaqStatistics::setIndexedQuestionAnswersCount(const qint32 &indexed_question_answers_count) {
    m_indexed_question_answers_count = indexed_question_answers_count;
    m_indexed_question_answers_count_isSet = true;
}

bool OAIIndexStatistics_FaqStatistics::is_indexed_question_answers_count_Set() const{
    return m_indexed_question_answers_count_isSet;
}

bool OAIIndexStatistics_FaqStatistics::is_indexed_question_answers_count_Valid() const{
    return m_indexed_question_answers_count_isValid;
}

bool OAIIndexStatistics_FaqStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexed_question_answers_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndexStatistics_FaqStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_indexed_question_answers_count_isValid && true;
}

} // namespace OpenAPI
