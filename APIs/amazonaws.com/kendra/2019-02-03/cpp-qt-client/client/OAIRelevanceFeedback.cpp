/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelevanceFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelevanceFeedback::OAIRelevanceFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelevanceFeedback::OAIRelevanceFeedback() {
    this->initializeModel();
}

OAIRelevanceFeedback::~OAIRelevanceFeedback() {}

void OAIRelevanceFeedback::initializeModel() {

    m_result_id_isSet = false;
    m_result_id_isValid = false;

    m_relevance_value_isSet = false;
    m_relevance_value_isValid = false;
}

void OAIRelevanceFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelevanceFeedback::fromJsonObject(QJsonObject json) {

    m_result_id_isValid = ::OpenAPI::fromJsonValue(m_result_id, json[QString("ResultId")]);
    m_result_id_isSet = !json[QString("ResultId")].isNull() && m_result_id_isValid;

    m_relevance_value_isValid = ::OpenAPI::fromJsonValue(m_relevance_value, json[QString("RelevanceValue")]);
    m_relevance_value_isSet = !json[QString("RelevanceValue")].isNull() && m_relevance_value_isValid;
}

QString OAIRelevanceFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelevanceFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_result_id_isSet) {
        obj.insert(QString("ResultId"), ::OpenAPI::toJsonValue(m_result_id));
    }
    if (m_relevance_value.isSet()) {
        obj.insert(QString("RelevanceValue"), ::OpenAPI::toJsonValue(m_relevance_value));
    }
    return obj;
}

QString OAIRelevanceFeedback::getResultId() const {
    return m_result_id;
}
void OAIRelevanceFeedback::setResultId(const QString &result_id) {
    m_result_id = result_id;
    m_result_id_isSet = true;
}

bool OAIRelevanceFeedback::is_result_id_Set() const{
    return m_result_id_isSet;
}

bool OAIRelevanceFeedback::is_result_id_Valid() const{
    return m_result_id_isValid;
}

OAIRelevanceType OAIRelevanceFeedback::getRelevanceValue() const {
    return m_relevance_value;
}
void OAIRelevanceFeedback::setRelevanceValue(const OAIRelevanceType &relevance_value) {
    m_relevance_value = relevance_value;
    m_relevance_value_isSet = true;
}

bool OAIRelevanceFeedback::is_relevance_value_Set() const{
    return m_relevance_value_isSet;
}

bool OAIRelevanceFeedback::is_relevance_value_Valid() const{
    return m_relevance_value_isValid;
}

bool OAIRelevanceFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_result_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relevance_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelevanceFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_result_id_isValid && m_relevance_value_isValid && true;
}

} // namespace OpenAPI
