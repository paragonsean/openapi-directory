/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomDocumentEnrichmentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomDocumentEnrichmentConfiguration::OAICustomDocumentEnrichmentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomDocumentEnrichmentConfiguration::OAICustomDocumentEnrichmentConfiguration() {
    this->initializeModel();
}

OAICustomDocumentEnrichmentConfiguration::~OAICustomDocumentEnrichmentConfiguration() {}

void OAICustomDocumentEnrichmentConfiguration::initializeModel() {

    m_inline_configurations_isSet = false;
    m_inline_configurations_isValid = false;

    m_pre_extraction_hook_configuration_isSet = false;
    m_pre_extraction_hook_configuration_isValid = false;

    m_post_extraction_hook_configuration_isSet = false;
    m_post_extraction_hook_configuration_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAICustomDocumentEnrichmentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomDocumentEnrichmentConfiguration::fromJsonObject(QJsonObject json) {

    m_inline_configurations_isValid = ::OpenAPI::fromJsonValue(m_inline_configurations, json[QString("InlineConfigurations")]);
    m_inline_configurations_isSet = !json[QString("InlineConfigurations")].isNull() && m_inline_configurations_isValid;

    m_pre_extraction_hook_configuration_isValid = ::OpenAPI::fromJsonValue(m_pre_extraction_hook_configuration, json[QString("PreExtractionHookConfiguration")]);
    m_pre_extraction_hook_configuration_isSet = !json[QString("PreExtractionHookConfiguration")].isNull() && m_pre_extraction_hook_configuration_isValid;

    m_post_extraction_hook_configuration_isValid = ::OpenAPI::fromJsonValue(m_post_extraction_hook_configuration, json[QString("PostExtractionHookConfiguration")]);
    m_post_extraction_hook_configuration_isSet = !json[QString("PostExtractionHookConfiguration")].isNull() && m_post_extraction_hook_configuration_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAICustomDocumentEnrichmentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomDocumentEnrichmentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_inline_configurations.isSet()) {
        obj.insert(QString("InlineConfigurations"), ::OpenAPI::toJsonValue(m_inline_configurations));
    }
    if (m_pre_extraction_hook_configuration.isSet()) {
        obj.insert(QString("PreExtractionHookConfiguration"), ::OpenAPI::toJsonValue(m_pre_extraction_hook_configuration));
    }
    if (m_post_extraction_hook_configuration.isSet()) {
        obj.insert(QString("PostExtractionHookConfiguration"), ::OpenAPI::toJsonValue(m_post_extraction_hook_configuration));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

QList OAICustomDocumentEnrichmentConfiguration::getInlineConfigurations() const {
    return m_inline_configurations;
}
void OAICustomDocumentEnrichmentConfiguration::setInlineConfigurations(const QList &inline_configurations) {
    m_inline_configurations = inline_configurations;
    m_inline_configurations_isSet = true;
}

bool OAICustomDocumentEnrichmentConfiguration::is_inline_configurations_Set() const{
    return m_inline_configurations_isSet;
}

bool OAICustomDocumentEnrichmentConfiguration::is_inline_configurations_Valid() const{
    return m_inline_configurations_isValid;
}

OAICustomDocumentEnrichmentConfiguration_PreExtractionHookConfiguration OAICustomDocumentEnrichmentConfiguration::getPreExtractionHookConfiguration() const {
    return m_pre_extraction_hook_configuration;
}
void OAICustomDocumentEnrichmentConfiguration::setPreExtractionHookConfiguration(const OAICustomDocumentEnrichmentConfiguration_PreExtractionHookConfiguration &pre_extraction_hook_configuration) {
    m_pre_extraction_hook_configuration = pre_extraction_hook_configuration;
    m_pre_extraction_hook_configuration_isSet = true;
}

bool OAICustomDocumentEnrichmentConfiguration::is_pre_extraction_hook_configuration_Set() const{
    return m_pre_extraction_hook_configuration_isSet;
}

bool OAICustomDocumentEnrichmentConfiguration::is_pre_extraction_hook_configuration_Valid() const{
    return m_pre_extraction_hook_configuration_isValid;
}

OAICustomDocumentEnrichmentConfiguration_PostExtractionHookConfiguration OAICustomDocumentEnrichmentConfiguration::getPostExtractionHookConfiguration() const {
    return m_post_extraction_hook_configuration;
}
void OAICustomDocumentEnrichmentConfiguration::setPostExtractionHookConfiguration(const OAICustomDocumentEnrichmentConfiguration_PostExtractionHookConfiguration &post_extraction_hook_configuration) {
    m_post_extraction_hook_configuration = post_extraction_hook_configuration;
    m_post_extraction_hook_configuration_isSet = true;
}

bool OAICustomDocumentEnrichmentConfiguration::is_post_extraction_hook_configuration_Set() const{
    return m_post_extraction_hook_configuration_isSet;
}

bool OAICustomDocumentEnrichmentConfiguration::is_post_extraction_hook_configuration_Valid() const{
    return m_post_extraction_hook_configuration_isValid;
}

QString OAICustomDocumentEnrichmentConfiguration::getRoleArn() const {
    return m_role_arn;
}
void OAICustomDocumentEnrichmentConfiguration::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAICustomDocumentEnrichmentConfiguration::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAICustomDocumentEnrichmentConfiguration::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAICustomDocumentEnrichmentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inline_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_extraction_hook_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_extraction_hook_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomDocumentEnrichmentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
