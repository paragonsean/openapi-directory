/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITextDocumentStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITextDocumentStatistics::OAITextDocumentStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITextDocumentStatistics::OAITextDocumentStatistics() {
    this->initializeModel();
}

OAITextDocumentStatistics::~OAITextDocumentStatistics() {}

void OAITextDocumentStatistics::initializeModel() {

    m_indexed_text_documents_count_isSet = false;
    m_indexed_text_documents_count_isValid = false;

    m_indexed_text_bytes_isSet = false;
    m_indexed_text_bytes_isValid = false;
}

void OAITextDocumentStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITextDocumentStatistics::fromJsonObject(QJsonObject json) {

    m_indexed_text_documents_count_isValid = ::OpenAPI::fromJsonValue(m_indexed_text_documents_count, json[QString("IndexedTextDocumentsCount")]);
    m_indexed_text_documents_count_isSet = !json[QString("IndexedTextDocumentsCount")].isNull() && m_indexed_text_documents_count_isValid;

    m_indexed_text_bytes_isValid = ::OpenAPI::fromJsonValue(m_indexed_text_bytes, json[QString("IndexedTextBytes")]);
    m_indexed_text_bytes_isSet = !json[QString("IndexedTextBytes")].isNull() && m_indexed_text_bytes_isValid;
}

QString OAITextDocumentStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITextDocumentStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_indexed_text_documents_count_isSet) {
        obj.insert(QString("IndexedTextDocumentsCount"), ::OpenAPI::toJsonValue(m_indexed_text_documents_count));
    }
    if (m_indexed_text_bytes_isSet) {
        obj.insert(QString("IndexedTextBytes"), ::OpenAPI::toJsonValue(m_indexed_text_bytes));
    }
    return obj;
}

qint32 OAITextDocumentStatistics::getIndexedTextDocumentsCount() const {
    return m_indexed_text_documents_count;
}
void OAITextDocumentStatistics::setIndexedTextDocumentsCount(const qint32 &indexed_text_documents_count) {
    m_indexed_text_documents_count = indexed_text_documents_count;
    m_indexed_text_documents_count_isSet = true;
}

bool OAITextDocumentStatistics::is_indexed_text_documents_count_Set() const{
    return m_indexed_text_documents_count_isSet;
}

bool OAITextDocumentStatistics::is_indexed_text_documents_count_Valid() const{
    return m_indexed_text_documents_count_isValid;
}

qint32 OAITextDocumentStatistics::getIndexedTextBytes() const {
    return m_indexed_text_bytes;
}
void OAITextDocumentStatistics::setIndexedTextBytes(const qint32 &indexed_text_bytes) {
    m_indexed_text_bytes = indexed_text_bytes;
    m_indexed_text_bytes_isSet = true;
}

bool OAITextDocumentStatistics::is_indexed_text_bytes_Set() const{
    return m_indexed_text_bytes_isSet;
}

bool OAITextDocumentStatistics::is_indexed_text_bytes_Valid() const{
    return m_indexed_text_bytes_isValid;
}

bool OAITextDocumentStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexed_text_documents_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indexed_text_bytes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITextDocumentStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_indexed_text_documents_count_isValid && m_indexed_text_bytes_isValid && true;
}

} // namespace OpenAPI
