/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentsMetadataConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentsMetadataConfiguration::OAIDocumentsMetadataConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentsMetadataConfiguration::OAIDocumentsMetadataConfiguration() {
    this->initializeModel();
}

OAIDocumentsMetadataConfiguration::~OAIDocumentsMetadataConfiguration() {}

void OAIDocumentsMetadataConfiguration::initializeModel() {

    m_s3_prefix_isSet = false;
    m_s3_prefix_isValid = false;
}

void OAIDocumentsMetadataConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentsMetadataConfiguration::fromJsonObject(QJsonObject json) {

    m_s3_prefix_isValid = ::OpenAPI::fromJsonValue(m_s3_prefix, json[QString("S3Prefix")]);
    m_s3_prefix_isSet = !json[QString("S3Prefix")].isNull() && m_s3_prefix_isValid;
}

QString OAIDocumentsMetadataConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentsMetadataConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_prefix_isSet) {
        obj.insert(QString("S3Prefix"), ::OpenAPI::toJsonValue(m_s3_prefix));
    }
    return obj;
}

QString OAIDocumentsMetadataConfiguration::getS3Prefix() const {
    return m_s3_prefix;
}
void OAIDocumentsMetadataConfiguration::setS3Prefix(const QString &s3_prefix) {
    m_s3_prefix = s3_prefix;
    m_s3_prefix_isSet = true;
}

bool OAIDocumentsMetadataConfiguration::is_s3_prefix_Set() const{
    return m_s3_prefix_isSet;
}

bool OAIDocumentsMetadataConfiguration::is_s3_prefix_Valid() const{
    return m_s3_prefix_isValid;
}

bool OAIDocumentsMetadataConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentsMetadataConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
