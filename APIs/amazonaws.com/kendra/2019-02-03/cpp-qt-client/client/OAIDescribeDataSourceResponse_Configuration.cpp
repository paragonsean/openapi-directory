/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDataSourceResponse_Configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDataSourceResponse_Configuration::OAIDescribeDataSourceResponse_Configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDataSourceResponse_Configuration::OAIDescribeDataSourceResponse_Configuration() {
    this->initializeModel();
}

OAIDescribeDataSourceResponse_Configuration::~OAIDescribeDataSourceResponse_Configuration() {}

void OAIDescribeDataSourceResponse_Configuration::initializeModel() {

    m_s3_configuration_isSet = false;
    m_s3_configuration_isValid = false;

    m_share_point_configuration_isSet = false;
    m_share_point_configuration_isValid = false;

    m_database_configuration_isSet = false;
    m_database_configuration_isValid = false;

    m_salesforce_configuration_isSet = false;
    m_salesforce_configuration_isValid = false;

    m_one_drive_configuration_isSet = false;
    m_one_drive_configuration_isValid = false;

    m_service_now_configuration_isSet = false;
    m_service_now_configuration_isValid = false;

    m_confluence_configuration_isSet = false;
    m_confluence_configuration_isValid = false;

    m_google_drive_configuration_isSet = false;
    m_google_drive_configuration_isValid = false;

    m_web_crawler_configuration_isSet = false;
    m_web_crawler_configuration_isValid = false;

    m_work_docs_configuration_isSet = false;
    m_work_docs_configuration_isValid = false;

    m_fsx_configuration_isSet = false;
    m_fsx_configuration_isValid = false;

    m_slack_configuration_isSet = false;
    m_slack_configuration_isValid = false;

    m_box_configuration_isSet = false;
    m_box_configuration_isValid = false;

    m_quip_configuration_isSet = false;
    m_quip_configuration_isValid = false;

    m_jira_configuration_isSet = false;
    m_jira_configuration_isValid = false;

    m_git_hub_configuration_isSet = false;
    m_git_hub_configuration_isValid = false;

    m_alfresco_configuration_isSet = false;
    m_alfresco_configuration_isValid = false;

    m_template_configuration_isSet = false;
    m_template_configuration_isValid = false;
}

void OAIDescribeDataSourceResponse_Configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDataSourceResponse_Configuration::fromJsonObject(QJsonObject json) {

    m_s3_configuration_isValid = ::OpenAPI::fromJsonValue(m_s3_configuration, json[QString("S3Configuration")]);
    m_s3_configuration_isSet = !json[QString("S3Configuration")].isNull() && m_s3_configuration_isValid;

    m_share_point_configuration_isValid = ::OpenAPI::fromJsonValue(m_share_point_configuration, json[QString("SharePointConfiguration")]);
    m_share_point_configuration_isSet = !json[QString("SharePointConfiguration")].isNull() && m_share_point_configuration_isValid;

    m_database_configuration_isValid = ::OpenAPI::fromJsonValue(m_database_configuration, json[QString("DatabaseConfiguration")]);
    m_database_configuration_isSet = !json[QString("DatabaseConfiguration")].isNull() && m_database_configuration_isValid;

    m_salesforce_configuration_isValid = ::OpenAPI::fromJsonValue(m_salesforce_configuration, json[QString("SalesforceConfiguration")]);
    m_salesforce_configuration_isSet = !json[QString("SalesforceConfiguration")].isNull() && m_salesforce_configuration_isValid;

    m_one_drive_configuration_isValid = ::OpenAPI::fromJsonValue(m_one_drive_configuration, json[QString("OneDriveConfiguration")]);
    m_one_drive_configuration_isSet = !json[QString("OneDriveConfiguration")].isNull() && m_one_drive_configuration_isValid;

    m_service_now_configuration_isValid = ::OpenAPI::fromJsonValue(m_service_now_configuration, json[QString("ServiceNowConfiguration")]);
    m_service_now_configuration_isSet = !json[QString("ServiceNowConfiguration")].isNull() && m_service_now_configuration_isValid;

    m_confluence_configuration_isValid = ::OpenAPI::fromJsonValue(m_confluence_configuration, json[QString("ConfluenceConfiguration")]);
    m_confluence_configuration_isSet = !json[QString("ConfluenceConfiguration")].isNull() && m_confluence_configuration_isValid;

    m_google_drive_configuration_isValid = ::OpenAPI::fromJsonValue(m_google_drive_configuration, json[QString("GoogleDriveConfiguration")]);
    m_google_drive_configuration_isSet = !json[QString("GoogleDriveConfiguration")].isNull() && m_google_drive_configuration_isValid;

    m_web_crawler_configuration_isValid = ::OpenAPI::fromJsonValue(m_web_crawler_configuration, json[QString("WebCrawlerConfiguration")]);
    m_web_crawler_configuration_isSet = !json[QString("WebCrawlerConfiguration")].isNull() && m_web_crawler_configuration_isValid;

    m_work_docs_configuration_isValid = ::OpenAPI::fromJsonValue(m_work_docs_configuration, json[QString("WorkDocsConfiguration")]);
    m_work_docs_configuration_isSet = !json[QString("WorkDocsConfiguration")].isNull() && m_work_docs_configuration_isValid;

    m_fsx_configuration_isValid = ::OpenAPI::fromJsonValue(m_fsx_configuration, json[QString("FsxConfiguration")]);
    m_fsx_configuration_isSet = !json[QString("FsxConfiguration")].isNull() && m_fsx_configuration_isValid;

    m_slack_configuration_isValid = ::OpenAPI::fromJsonValue(m_slack_configuration, json[QString("SlackConfiguration")]);
    m_slack_configuration_isSet = !json[QString("SlackConfiguration")].isNull() && m_slack_configuration_isValid;

    m_box_configuration_isValid = ::OpenAPI::fromJsonValue(m_box_configuration, json[QString("BoxConfiguration")]);
    m_box_configuration_isSet = !json[QString("BoxConfiguration")].isNull() && m_box_configuration_isValid;

    m_quip_configuration_isValid = ::OpenAPI::fromJsonValue(m_quip_configuration, json[QString("QuipConfiguration")]);
    m_quip_configuration_isSet = !json[QString("QuipConfiguration")].isNull() && m_quip_configuration_isValid;

    m_jira_configuration_isValid = ::OpenAPI::fromJsonValue(m_jira_configuration, json[QString("JiraConfiguration")]);
    m_jira_configuration_isSet = !json[QString("JiraConfiguration")].isNull() && m_jira_configuration_isValid;

    m_git_hub_configuration_isValid = ::OpenAPI::fromJsonValue(m_git_hub_configuration, json[QString("GitHubConfiguration")]);
    m_git_hub_configuration_isSet = !json[QString("GitHubConfiguration")].isNull() && m_git_hub_configuration_isValid;

    m_alfresco_configuration_isValid = ::OpenAPI::fromJsonValue(m_alfresco_configuration, json[QString("AlfrescoConfiguration")]);
    m_alfresco_configuration_isSet = !json[QString("AlfrescoConfiguration")].isNull() && m_alfresco_configuration_isValid;

    m_template_configuration_isValid = ::OpenAPI::fromJsonValue(m_template_configuration, json[QString("TemplateConfiguration")]);
    m_template_configuration_isSet = !json[QString("TemplateConfiguration")].isNull() && m_template_configuration_isValid;
}

QString OAIDescribeDataSourceResponse_Configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDataSourceResponse_Configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_configuration.isSet()) {
        obj.insert(QString("S3Configuration"), ::OpenAPI::toJsonValue(m_s3_configuration));
    }
    if (m_share_point_configuration.isSet()) {
        obj.insert(QString("SharePointConfiguration"), ::OpenAPI::toJsonValue(m_share_point_configuration));
    }
    if (m_database_configuration.isSet()) {
        obj.insert(QString("DatabaseConfiguration"), ::OpenAPI::toJsonValue(m_database_configuration));
    }
    if (m_salesforce_configuration.isSet()) {
        obj.insert(QString("SalesforceConfiguration"), ::OpenAPI::toJsonValue(m_salesforce_configuration));
    }
    if (m_one_drive_configuration.isSet()) {
        obj.insert(QString("OneDriveConfiguration"), ::OpenAPI::toJsonValue(m_one_drive_configuration));
    }
    if (m_service_now_configuration.isSet()) {
        obj.insert(QString("ServiceNowConfiguration"), ::OpenAPI::toJsonValue(m_service_now_configuration));
    }
    if (m_confluence_configuration.isSet()) {
        obj.insert(QString("ConfluenceConfiguration"), ::OpenAPI::toJsonValue(m_confluence_configuration));
    }
    if (m_google_drive_configuration.isSet()) {
        obj.insert(QString("GoogleDriveConfiguration"), ::OpenAPI::toJsonValue(m_google_drive_configuration));
    }
    if (m_web_crawler_configuration.isSet()) {
        obj.insert(QString("WebCrawlerConfiguration"), ::OpenAPI::toJsonValue(m_web_crawler_configuration));
    }
    if (m_work_docs_configuration.isSet()) {
        obj.insert(QString("WorkDocsConfiguration"), ::OpenAPI::toJsonValue(m_work_docs_configuration));
    }
    if (m_fsx_configuration.isSet()) {
        obj.insert(QString("FsxConfiguration"), ::OpenAPI::toJsonValue(m_fsx_configuration));
    }
    if (m_slack_configuration.isSet()) {
        obj.insert(QString("SlackConfiguration"), ::OpenAPI::toJsonValue(m_slack_configuration));
    }
    if (m_box_configuration.isSet()) {
        obj.insert(QString("BoxConfiguration"), ::OpenAPI::toJsonValue(m_box_configuration));
    }
    if (m_quip_configuration.isSet()) {
        obj.insert(QString("QuipConfiguration"), ::OpenAPI::toJsonValue(m_quip_configuration));
    }
    if (m_jira_configuration.isSet()) {
        obj.insert(QString("JiraConfiguration"), ::OpenAPI::toJsonValue(m_jira_configuration));
    }
    if (m_git_hub_configuration.isSet()) {
        obj.insert(QString("GitHubConfiguration"), ::OpenAPI::toJsonValue(m_git_hub_configuration));
    }
    if (m_alfresco_configuration.isSet()) {
        obj.insert(QString("AlfrescoConfiguration"), ::OpenAPI::toJsonValue(m_alfresco_configuration));
    }
    if (m_template_configuration.isSet()) {
        obj.insert(QString("TemplateConfiguration"), ::OpenAPI::toJsonValue(m_template_configuration));
    }
    return obj;
}

OAIDataSourceConfiguration_S3Configuration OAIDescribeDataSourceResponse_Configuration::getS3Configuration() const {
    return m_s3_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setS3Configuration(const OAIDataSourceConfiguration_S3Configuration &s3_configuration) {
    m_s3_configuration = s3_configuration;
    m_s3_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_s3_configuration_Set() const{
    return m_s3_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_s3_configuration_Valid() const{
    return m_s3_configuration_isValid;
}

OAIDataSourceConfiguration_SharePointConfiguration OAIDescribeDataSourceResponse_Configuration::getSharePointConfiguration() const {
    return m_share_point_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setSharePointConfiguration(const OAIDataSourceConfiguration_SharePointConfiguration &share_point_configuration) {
    m_share_point_configuration = share_point_configuration;
    m_share_point_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_share_point_configuration_Set() const{
    return m_share_point_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_share_point_configuration_Valid() const{
    return m_share_point_configuration_isValid;
}

OAIDataSourceConfiguration_DatabaseConfiguration OAIDescribeDataSourceResponse_Configuration::getDatabaseConfiguration() const {
    return m_database_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setDatabaseConfiguration(const OAIDataSourceConfiguration_DatabaseConfiguration &database_configuration) {
    m_database_configuration = database_configuration;
    m_database_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_database_configuration_Set() const{
    return m_database_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_database_configuration_Valid() const{
    return m_database_configuration_isValid;
}

OAIDataSourceConfiguration_SalesforceConfiguration OAIDescribeDataSourceResponse_Configuration::getSalesforceConfiguration() const {
    return m_salesforce_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setSalesforceConfiguration(const OAIDataSourceConfiguration_SalesforceConfiguration &salesforce_configuration) {
    m_salesforce_configuration = salesforce_configuration;
    m_salesforce_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_salesforce_configuration_Set() const{
    return m_salesforce_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_salesforce_configuration_Valid() const{
    return m_salesforce_configuration_isValid;
}

OAIDataSourceConfiguration_OneDriveConfiguration OAIDescribeDataSourceResponse_Configuration::getOneDriveConfiguration() const {
    return m_one_drive_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setOneDriveConfiguration(const OAIDataSourceConfiguration_OneDriveConfiguration &one_drive_configuration) {
    m_one_drive_configuration = one_drive_configuration;
    m_one_drive_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_one_drive_configuration_Set() const{
    return m_one_drive_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_one_drive_configuration_Valid() const{
    return m_one_drive_configuration_isValid;
}

OAIDataSourceConfiguration_ServiceNowConfiguration OAIDescribeDataSourceResponse_Configuration::getServiceNowConfiguration() const {
    return m_service_now_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setServiceNowConfiguration(const OAIDataSourceConfiguration_ServiceNowConfiguration &service_now_configuration) {
    m_service_now_configuration = service_now_configuration;
    m_service_now_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_service_now_configuration_Set() const{
    return m_service_now_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_service_now_configuration_Valid() const{
    return m_service_now_configuration_isValid;
}

OAIDataSourceConfiguration_ConfluenceConfiguration OAIDescribeDataSourceResponse_Configuration::getConfluenceConfiguration() const {
    return m_confluence_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setConfluenceConfiguration(const OAIDataSourceConfiguration_ConfluenceConfiguration &confluence_configuration) {
    m_confluence_configuration = confluence_configuration;
    m_confluence_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_confluence_configuration_Set() const{
    return m_confluence_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_confluence_configuration_Valid() const{
    return m_confluence_configuration_isValid;
}

OAIDataSourceConfiguration_GoogleDriveConfiguration OAIDescribeDataSourceResponse_Configuration::getGoogleDriveConfiguration() const {
    return m_google_drive_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setGoogleDriveConfiguration(const OAIDataSourceConfiguration_GoogleDriveConfiguration &google_drive_configuration) {
    m_google_drive_configuration = google_drive_configuration;
    m_google_drive_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_google_drive_configuration_Set() const{
    return m_google_drive_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_google_drive_configuration_Valid() const{
    return m_google_drive_configuration_isValid;
}

OAIWebCrawlerConfiguration OAIDescribeDataSourceResponse_Configuration::getWebCrawlerConfiguration() const {
    return m_web_crawler_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setWebCrawlerConfiguration(const OAIWebCrawlerConfiguration &web_crawler_configuration) {
    m_web_crawler_configuration = web_crawler_configuration;
    m_web_crawler_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_web_crawler_configuration_Set() const{
    return m_web_crawler_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_web_crawler_configuration_Valid() const{
    return m_web_crawler_configuration_isValid;
}

OAIDataSourceConfiguration_WorkDocsConfiguration OAIDescribeDataSourceResponse_Configuration::getWorkDocsConfiguration() const {
    return m_work_docs_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setWorkDocsConfiguration(const OAIDataSourceConfiguration_WorkDocsConfiguration &work_docs_configuration) {
    m_work_docs_configuration = work_docs_configuration;
    m_work_docs_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_work_docs_configuration_Set() const{
    return m_work_docs_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_work_docs_configuration_Valid() const{
    return m_work_docs_configuration_isValid;
}

OAIDataSourceConfiguration_FsxConfiguration OAIDescribeDataSourceResponse_Configuration::getFsxConfiguration() const {
    return m_fsx_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setFsxConfiguration(const OAIDataSourceConfiguration_FsxConfiguration &fsx_configuration) {
    m_fsx_configuration = fsx_configuration;
    m_fsx_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_fsx_configuration_Set() const{
    return m_fsx_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_fsx_configuration_Valid() const{
    return m_fsx_configuration_isValid;
}

OAIDataSourceConfiguration_SlackConfiguration OAIDescribeDataSourceResponse_Configuration::getSlackConfiguration() const {
    return m_slack_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setSlackConfiguration(const OAIDataSourceConfiguration_SlackConfiguration &slack_configuration) {
    m_slack_configuration = slack_configuration;
    m_slack_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_slack_configuration_Set() const{
    return m_slack_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_slack_configuration_Valid() const{
    return m_slack_configuration_isValid;
}

OAIDataSourceConfiguration_BoxConfiguration OAIDescribeDataSourceResponse_Configuration::getBoxConfiguration() const {
    return m_box_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setBoxConfiguration(const OAIDataSourceConfiguration_BoxConfiguration &box_configuration) {
    m_box_configuration = box_configuration;
    m_box_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_box_configuration_Set() const{
    return m_box_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_box_configuration_Valid() const{
    return m_box_configuration_isValid;
}

OAIDataSourceConfiguration_QuipConfiguration OAIDescribeDataSourceResponse_Configuration::getQuipConfiguration() const {
    return m_quip_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setQuipConfiguration(const OAIDataSourceConfiguration_QuipConfiguration &quip_configuration) {
    m_quip_configuration = quip_configuration;
    m_quip_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_quip_configuration_Set() const{
    return m_quip_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_quip_configuration_Valid() const{
    return m_quip_configuration_isValid;
}

OAIDataSourceConfiguration_JiraConfiguration OAIDescribeDataSourceResponse_Configuration::getJiraConfiguration() const {
    return m_jira_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setJiraConfiguration(const OAIDataSourceConfiguration_JiraConfiguration &jira_configuration) {
    m_jira_configuration = jira_configuration;
    m_jira_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_jira_configuration_Set() const{
    return m_jira_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_jira_configuration_Valid() const{
    return m_jira_configuration_isValid;
}

OAIDataSourceConfiguration_GitHubConfiguration OAIDescribeDataSourceResponse_Configuration::getGitHubConfiguration() const {
    return m_git_hub_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setGitHubConfiguration(const OAIDataSourceConfiguration_GitHubConfiguration &git_hub_configuration) {
    m_git_hub_configuration = git_hub_configuration;
    m_git_hub_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_git_hub_configuration_Set() const{
    return m_git_hub_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_git_hub_configuration_Valid() const{
    return m_git_hub_configuration_isValid;
}

OAIDataSourceConfiguration_AlfrescoConfiguration OAIDescribeDataSourceResponse_Configuration::getAlfrescoConfiguration() const {
    return m_alfresco_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setAlfrescoConfiguration(const OAIDataSourceConfiguration_AlfrescoConfiguration &alfresco_configuration) {
    m_alfresco_configuration = alfresco_configuration;
    m_alfresco_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_alfresco_configuration_Set() const{
    return m_alfresco_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_alfresco_configuration_Valid() const{
    return m_alfresco_configuration_isValid;
}

OAIDataSourceConfiguration_TemplateConfiguration OAIDescribeDataSourceResponse_Configuration::getTemplateConfiguration() const {
    return m_template_configuration;
}
void OAIDescribeDataSourceResponse_Configuration::setTemplateConfiguration(const OAIDataSourceConfiguration_TemplateConfiguration &template_configuration) {
    m_template_configuration = template_configuration;
    m_template_configuration_isSet = true;
}

bool OAIDescribeDataSourceResponse_Configuration::is_template_configuration_Set() const{
    return m_template_configuration_isSet;
}

bool OAIDescribeDataSourceResponse_Configuration::is_template_configuration_Valid() const{
    return m_template_configuration_isValid;
}

bool OAIDescribeDataSourceResponse_Configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_share_point_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_salesforce_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_drive_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_now_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confluence_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_drive_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_crawler_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_docs_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fsx_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_slack_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_box_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quip_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_jira_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_git_hub_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_alfresco_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDataSourceResponse_Configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
