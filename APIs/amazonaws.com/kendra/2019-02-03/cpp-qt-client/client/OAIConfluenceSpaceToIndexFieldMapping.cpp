/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfluenceSpaceToIndexFieldMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfluenceSpaceToIndexFieldMapping::OAIConfluenceSpaceToIndexFieldMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfluenceSpaceToIndexFieldMapping::OAIConfluenceSpaceToIndexFieldMapping() {
    this->initializeModel();
}

OAIConfluenceSpaceToIndexFieldMapping::~OAIConfluenceSpaceToIndexFieldMapping() {}

void OAIConfluenceSpaceToIndexFieldMapping::initializeModel() {

    m_data_source_field_name_isSet = false;
    m_data_source_field_name_isValid = false;

    m_date_field_format_isSet = false;
    m_date_field_format_isValid = false;

    m_index_field_name_isSet = false;
    m_index_field_name_isValid = false;
}

void OAIConfluenceSpaceToIndexFieldMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfluenceSpaceToIndexFieldMapping::fromJsonObject(QJsonObject json) {

    m_data_source_field_name_isValid = ::OpenAPI::fromJsonValue(m_data_source_field_name, json[QString("DataSourceFieldName")]);
    m_data_source_field_name_isSet = !json[QString("DataSourceFieldName")].isNull() && m_data_source_field_name_isValid;

    m_date_field_format_isValid = ::OpenAPI::fromJsonValue(m_date_field_format, json[QString("DateFieldFormat")]);
    m_date_field_format_isSet = !json[QString("DateFieldFormat")].isNull() && m_date_field_format_isValid;

    m_index_field_name_isValid = ::OpenAPI::fromJsonValue(m_index_field_name, json[QString("IndexFieldName")]);
    m_index_field_name_isSet = !json[QString("IndexFieldName")].isNull() && m_index_field_name_isValid;
}

QString OAIConfluenceSpaceToIndexFieldMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfluenceSpaceToIndexFieldMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_data_source_field_name.isSet()) {
        obj.insert(QString("DataSourceFieldName"), ::OpenAPI::toJsonValue(m_data_source_field_name));
    }
    if (m_date_field_format_isSet) {
        obj.insert(QString("DateFieldFormat"), ::OpenAPI::toJsonValue(m_date_field_format));
    }
    if (m_index_field_name_isSet) {
        obj.insert(QString("IndexFieldName"), ::OpenAPI::toJsonValue(m_index_field_name));
    }
    return obj;
}

OAIConfluenceSpaceFieldName OAIConfluenceSpaceToIndexFieldMapping::getDataSourceFieldName() const {
    return m_data_source_field_name;
}
void OAIConfluenceSpaceToIndexFieldMapping::setDataSourceFieldName(const OAIConfluenceSpaceFieldName &data_source_field_name) {
    m_data_source_field_name = data_source_field_name;
    m_data_source_field_name_isSet = true;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_data_source_field_name_Set() const{
    return m_data_source_field_name_isSet;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_data_source_field_name_Valid() const{
    return m_data_source_field_name_isValid;
}

QString OAIConfluenceSpaceToIndexFieldMapping::getDateFieldFormat() const {
    return m_date_field_format;
}
void OAIConfluenceSpaceToIndexFieldMapping::setDateFieldFormat(const QString &date_field_format) {
    m_date_field_format = date_field_format;
    m_date_field_format_isSet = true;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_date_field_format_Set() const{
    return m_date_field_format_isSet;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_date_field_format_Valid() const{
    return m_date_field_format_isValid;
}

QString OAIConfluenceSpaceToIndexFieldMapping::getIndexFieldName() const {
    return m_index_field_name;
}
void OAIConfluenceSpaceToIndexFieldMapping::setIndexFieldName(const QString &index_field_name) {
    m_index_field_name = index_field_name;
    m_index_field_name_isSet = true;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_index_field_name_Set() const{
    return m_index_field_name_isSet;
}

bool OAIConfluenceSpaceToIndexFieldMapping::is_index_field_name_Valid() const{
    return m_index_field_name_isValid;
}

bool OAIConfluenceSpaceToIndexFieldMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_source_field_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_field_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfluenceSpaceToIndexFieldMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
