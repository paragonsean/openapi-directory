/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryRequest_SortingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryRequest_SortingConfiguration::OAIQueryRequest_SortingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryRequest_SortingConfiguration::OAIQueryRequest_SortingConfiguration() {
    this->initializeModel();
}

OAIQueryRequest_SortingConfiguration::~OAIQueryRequest_SortingConfiguration() {}

void OAIQueryRequest_SortingConfiguration::initializeModel() {

    m_document_attribute_key_isSet = false;
    m_document_attribute_key_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIQueryRequest_SortingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryRequest_SortingConfiguration::fromJsonObject(QJsonObject json) {

    m_document_attribute_key_isValid = ::OpenAPI::fromJsonValue(m_document_attribute_key, json[QString("DocumentAttributeKey")]);
    m_document_attribute_key_isSet = !json[QString("DocumentAttributeKey")].isNull() && m_document_attribute_key_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("SortOrder")]);
    m_sort_order_isSet = !json[QString("SortOrder")].isNull() && m_sort_order_isValid;
}

QString OAIQueryRequest_SortingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryRequest_SortingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_document_attribute_key_isSet) {
        obj.insert(QString("DocumentAttributeKey"), ::OpenAPI::toJsonValue(m_document_attribute_key));
    }
    if (m_sort_order.isSet()) {
        obj.insert(QString("SortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAIQueryRequest_SortingConfiguration::getDocumentAttributeKey() const {
    return m_document_attribute_key;
}
void OAIQueryRequest_SortingConfiguration::setDocumentAttributeKey(const QString &document_attribute_key) {
    m_document_attribute_key = document_attribute_key;
    m_document_attribute_key_isSet = true;
}

bool OAIQueryRequest_SortingConfiguration::is_document_attribute_key_Set() const{
    return m_document_attribute_key_isSet;
}

bool OAIQueryRequest_SortingConfiguration::is_document_attribute_key_Valid() const{
    return m_document_attribute_key_isValid;
}

OAISortOrder OAIQueryRequest_SortingConfiguration::getSortOrder() const {
    return m_sort_order;
}
void OAIQueryRequest_SortingConfiguration::setSortOrder(const OAISortOrder &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIQueryRequest_SortingConfiguration::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIQueryRequest_SortingConfiguration::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIQueryRequest_SortingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_attribute_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryRequest_SortingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_attribute_key_isValid && m_sort_order_isValid && true;
}

} // namespace OpenAPI
