/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryResultType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryResultType::OAIQueryResultType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryResultType::OAIQueryResultType() {
    this->initializeModel();
}

OAIQueryResultType::~OAIQueryResultType() {}

void OAIQueryResultType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQueryResultType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQueryResultType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DOCUMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryResultType::DOCUMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUESTION_ANSWER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryResultType::QUESTION_ANSWER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ANSWER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryResultType::ANSWER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQueryResultType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQueryResultType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQueryResultType::DOCUMENT:
            val = "DOCUMENT";
            break;
        case eOAIQueryResultType::QUESTION_ANSWER:
            val = "QUESTION_ANSWER";
            break;
        case eOAIQueryResultType::ANSWER:
            val = "ANSWER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQueryResultType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQueryResultType::eOAIQueryResultType OAIQueryResultType::getValue() const {
    return m_value;
}

void OAIQueryResultType::setValue(const OAIQueryResultType::eOAIQueryResultType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQueryResultType::isSet() const {
    
    return m_value_isSet;
}

bool OAIQueryResultType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
