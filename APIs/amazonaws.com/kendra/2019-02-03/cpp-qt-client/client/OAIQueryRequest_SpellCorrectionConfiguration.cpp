/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryRequest_SpellCorrectionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryRequest_SpellCorrectionConfiguration::OAIQueryRequest_SpellCorrectionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryRequest_SpellCorrectionConfiguration::OAIQueryRequest_SpellCorrectionConfiguration() {
    this->initializeModel();
}

OAIQueryRequest_SpellCorrectionConfiguration::~OAIQueryRequest_SpellCorrectionConfiguration() {}

void OAIQueryRequest_SpellCorrectionConfiguration::initializeModel() {

    m_include_query_spell_check_suggestions_isSet = false;
    m_include_query_spell_check_suggestions_isValid = false;
}

void OAIQueryRequest_SpellCorrectionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryRequest_SpellCorrectionConfiguration::fromJsonObject(QJsonObject json) {

    m_include_query_spell_check_suggestions_isValid = ::OpenAPI::fromJsonValue(m_include_query_spell_check_suggestions, json[QString("IncludeQuerySpellCheckSuggestions")]);
    m_include_query_spell_check_suggestions_isSet = !json[QString("IncludeQuerySpellCheckSuggestions")].isNull() && m_include_query_spell_check_suggestions_isValid;
}

QString OAIQueryRequest_SpellCorrectionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryRequest_SpellCorrectionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_include_query_spell_check_suggestions_isSet) {
        obj.insert(QString("IncludeQuerySpellCheckSuggestions"), ::OpenAPI::toJsonValue(m_include_query_spell_check_suggestions));
    }
    return obj;
}

bool OAIQueryRequest_SpellCorrectionConfiguration::getIncludeQuerySpellCheckSuggestions() const {
    return m_include_query_spell_check_suggestions;
}
void OAIQueryRequest_SpellCorrectionConfiguration::setIncludeQuerySpellCheckSuggestions(const bool &include_query_spell_check_suggestions) {
    m_include_query_spell_check_suggestions = include_query_spell_check_suggestions;
    m_include_query_spell_check_suggestions_isSet = true;
}

bool OAIQueryRequest_SpellCorrectionConfiguration::is_include_query_spell_check_suggestions_Set() const{
    return m_include_query_spell_check_suggestions_isSet;
}

bool OAIQueryRequest_SpellCorrectionConfiguration::is_include_query_spell_check_suggestions_Valid() const{
    return m_include_query_spell_check_suggestions_isValid;
}

bool OAIQueryRequest_SpellCorrectionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_include_query_spell_check_suggestions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryRequest_SpellCorrectionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_include_query_spell_check_suggestions_isValid && true;
}

} // namespace OpenAPI
