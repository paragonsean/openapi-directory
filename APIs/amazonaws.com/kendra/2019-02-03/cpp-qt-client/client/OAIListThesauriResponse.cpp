/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListThesauriResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListThesauriResponse::OAIListThesauriResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListThesauriResponse::OAIListThesauriResponse() {
    this->initializeModel();
}

OAIListThesauriResponse::~OAIListThesauriResponse() {}

void OAIListThesauriResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_thesaurus_summary_items_isSet = false;
    m_thesaurus_summary_items_isValid = false;
}

void OAIListThesauriResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListThesauriResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_thesaurus_summary_items_isValid = ::OpenAPI::fromJsonValue(m_thesaurus_summary_items, json[QString("ThesaurusSummaryItems")]);
    m_thesaurus_summary_items_isSet = !json[QString("ThesaurusSummaryItems")].isNull() && m_thesaurus_summary_items_isValid;
}

QString OAIListThesauriResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListThesauriResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_thesaurus_summary_items.isSet()) {
        obj.insert(QString("ThesaurusSummaryItems"), ::OpenAPI::toJsonValue(m_thesaurus_summary_items));
    }
    return obj;
}

QString OAIListThesauriResponse::getNextToken() const {
    return m_next_token;
}
void OAIListThesauriResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListThesauriResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListThesauriResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListThesauriResponse::getThesaurusSummaryItems() const {
    return m_thesaurus_summary_items;
}
void OAIListThesauriResponse::setThesaurusSummaryItems(const QList &thesaurus_summary_items) {
    m_thesaurus_summary_items = thesaurus_summary_items;
    m_thesaurus_summary_items_isSet = true;
}

bool OAIListThesauriResponse::is_thesaurus_summary_items_Set() const{
    return m_thesaurus_summary_items_isSet;
}

bool OAIListThesauriResponse::is_thesaurus_summary_items_Valid() const{
    return m_thesaurus_summary_items_isValid;
}

bool OAIListThesauriResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thesaurus_summary_items.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListThesauriResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
