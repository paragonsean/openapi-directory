/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeThesaurusResponse.h
 *
 * 
 */

#ifndef OAIDescribeThesaurusResponse_H
#define OAIDescribeThesaurusResponse_H

#include <QJsonObject>

#include "OAIS3Path.h"
#include "OAIThesaurusStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Path;

class OAIDescribeThesaurusResponse : public OAIObject {
public:
    OAIDescribeThesaurusResponse();
    OAIDescribeThesaurusResponse(QString json);
    ~OAIDescribeThesaurusResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIndexId() const;
    void setIndexId(const QString &index_id);
    bool is_index_id_Set() const;
    bool is_index_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIThesaurusStatus getStatus() const;
    void setStatus(const OAIThesaurusStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIS3Path getSourceS3Path() const;
    void setSourceS3Path(const OAIS3Path &source_s3_path);
    bool is_source_s3_path_Set() const;
    bool is_source_s3_path_Valid() const;

    qint32 getFileSizeBytes() const;
    void setFileSizeBytes(const qint32 &file_size_bytes);
    bool is_file_size_bytes_Set() const;
    bool is_file_size_bytes_Valid() const;

    qint32 getTermCount() const;
    void setTermCount(const qint32 &term_count);
    bool is_term_count_Set() const;
    bool is_term_count_Valid() const;

    qint32 getSynonymRuleCount() const;
    void setSynonymRuleCount(const qint32 &synonym_rule_count);
    bool is_synonym_rule_count_Set() const;
    bool is_synonym_rule_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_index_id;
    bool m_index_id_isSet;
    bool m_index_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIThesaurusStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIS3Path m_source_s3_path;
    bool m_source_s3_path_isSet;
    bool m_source_s3_path_isValid;

    qint32 m_file_size_bytes;
    bool m_file_size_bytes_isSet;
    bool m_file_size_bytes_isValid;

    qint32 m_term_count;
    bool m_term_count_isSet;
    bool m_term_count_isValid;

    qint32 m_synonym_rule_count;
    bool m_synonym_rule_count_isSet;
    bool m_synonym_rule_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeThesaurusResponse)

#endif // OAIDescribeThesaurusResponse_H
