/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISlackEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISlackEntity::OAISlackEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISlackEntity::OAISlackEntity() {
    this->initializeModel();
}

OAISlackEntity::~OAISlackEntity() {}

void OAISlackEntity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISlackEntity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISlackEntity::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PUBLIC_CHANNEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAISlackEntity::PUBLIC_CHANNEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRIVATE_CHANNEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAISlackEntity::PRIVATE_CHANNEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GROUP_MESSAGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISlackEntity::GROUP_MESSAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DIRECT_MESSAGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISlackEntity::DIRECT_MESSAGE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISlackEntity::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISlackEntity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISlackEntity::PUBLIC_CHANNEL:
            val = "PUBLIC_CHANNEL";
            break;
        case eOAISlackEntity::PRIVATE_CHANNEL:
            val = "PRIVATE_CHANNEL";
            break;
        case eOAISlackEntity::GROUP_MESSAGE:
            val = "GROUP_MESSAGE";
            break;
        case eOAISlackEntity::DIRECT_MESSAGE:
            val = "DIRECT_MESSAGE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISlackEntity::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISlackEntity::eOAISlackEntity OAISlackEntity::getValue() const {
    return m_value;
}

void OAISlackEntity::setValue(const OAISlackEntity::eOAISlackEntity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISlackEntity::isSet() const {
    
    return m_value_isSet;
}

bool OAISlackEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
