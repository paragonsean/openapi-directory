/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInlineCustomDocumentEnrichmentConfiguration_Target.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInlineCustomDocumentEnrichmentConfiguration_Target::OAIInlineCustomDocumentEnrichmentConfiguration_Target(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInlineCustomDocumentEnrichmentConfiguration_Target::OAIInlineCustomDocumentEnrichmentConfiguration_Target() {
    this->initializeModel();
}

OAIInlineCustomDocumentEnrichmentConfiguration_Target::~OAIInlineCustomDocumentEnrichmentConfiguration_Target() {}

void OAIInlineCustomDocumentEnrichmentConfiguration_Target::initializeModel() {

    m_target_document_attribute_key_isSet = false;
    m_target_document_attribute_key_isValid = false;

    m_target_document_attribute_value_deletion_isSet = false;
    m_target_document_attribute_value_deletion_isValid = false;

    m_target_document_attribute_value_isSet = false;
    m_target_document_attribute_value_isValid = false;
}

void OAIInlineCustomDocumentEnrichmentConfiguration_Target::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInlineCustomDocumentEnrichmentConfiguration_Target::fromJsonObject(QJsonObject json) {

    m_target_document_attribute_key_isValid = ::OpenAPI::fromJsonValue(m_target_document_attribute_key, json[QString("TargetDocumentAttributeKey")]);
    m_target_document_attribute_key_isSet = !json[QString("TargetDocumentAttributeKey")].isNull() && m_target_document_attribute_key_isValid;

    m_target_document_attribute_value_deletion_isValid = ::OpenAPI::fromJsonValue(m_target_document_attribute_value_deletion, json[QString("TargetDocumentAttributeValueDeletion")]);
    m_target_document_attribute_value_deletion_isSet = !json[QString("TargetDocumentAttributeValueDeletion")].isNull() && m_target_document_attribute_value_deletion_isValid;

    m_target_document_attribute_value_isValid = ::OpenAPI::fromJsonValue(m_target_document_attribute_value, json[QString("TargetDocumentAttributeValue")]);
    m_target_document_attribute_value_isSet = !json[QString("TargetDocumentAttributeValue")].isNull() && m_target_document_attribute_value_isValid;
}

QString OAIInlineCustomDocumentEnrichmentConfiguration_Target::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInlineCustomDocumentEnrichmentConfiguration_Target::asJsonObject() const {
    QJsonObject obj;
    if (m_target_document_attribute_key_isSet) {
        obj.insert(QString("TargetDocumentAttributeKey"), ::OpenAPI::toJsonValue(m_target_document_attribute_key));
    }
    if (m_target_document_attribute_value_deletion_isSet) {
        obj.insert(QString("TargetDocumentAttributeValueDeletion"), ::OpenAPI::toJsonValue(m_target_document_attribute_value_deletion));
    }
    if (m_target_document_attribute_value.isSet()) {
        obj.insert(QString("TargetDocumentAttributeValue"), ::OpenAPI::toJsonValue(m_target_document_attribute_value));
    }
    return obj;
}

QString OAIInlineCustomDocumentEnrichmentConfiguration_Target::getTargetDocumentAttributeKey() const {
    return m_target_document_attribute_key;
}
void OAIInlineCustomDocumentEnrichmentConfiguration_Target::setTargetDocumentAttributeKey(const QString &target_document_attribute_key) {
    m_target_document_attribute_key = target_document_attribute_key;
    m_target_document_attribute_key_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_key_Set() const{
    return m_target_document_attribute_key_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_key_Valid() const{
    return m_target_document_attribute_key_isValid;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::getTargetDocumentAttributeValueDeletion() const {
    return m_target_document_attribute_value_deletion;
}
void OAIInlineCustomDocumentEnrichmentConfiguration_Target::setTargetDocumentAttributeValueDeletion(const bool &target_document_attribute_value_deletion) {
    m_target_document_attribute_value_deletion = target_document_attribute_value_deletion;
    m_target_document_attribute_value_deletion_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_value_deletion_Set() const{
    return m_target_document_attribute_value_deletion_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_value_deletion_Valid() const{
    return m_target_document_attribute_value_deletion_isValid;
}

OAIDocumentAttributeTarget_TargetDocumentAttributeValue OAIInlineCustomDocumentEnrichmentConfiguration_Target::getTargetDocumentAttributeValue() const {
    return m_target_document_attribute_value;
}
void OAIInlineCustomDocumentEnrichmentConfiguration_Target::setTargetDocumentAttributeValue(const OAIDocumentAttributeTarget_TargetDocumentAttributeValue &target_document_attribute_value) {
    m_target_document_attribute_value = target_document_attribute_value;
    m_target_document_attribute_value_isSet = true;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_value_Set() const{
    return m_target_document_attribute_value_isSet;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::is_target_document_attribute_value_Valid() const{
    return m_target_document_attribute_value_isValid;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_document_attribute_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_document_attribute_value_deletion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_document_attribute_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInlineCustomDocumentEnrichmentConfiguration_Target::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
