/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryResult.h
 *
 * 
 */

#ifndef OAIQueryResult_H
#define OAIQueryResult_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQueryResult : public OAIObject {
public:
    OAIQueryResult();
    OAIQueryResult(QString json);
    ~OAIQueryResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQueryId() const;
    void setQueryId(const QString &query_id);
    bool is_query_id_Set() const;
    bool is_query_id_Valid() const;

    QList getResultItems() const;
    void setResultItems(const QList &result_items);
    bool is_result_items_Set() const;
    bool is_result_items_Valid() const;

    QList getFacetResults() const;
    void setFacetResults(const QList &facet_results);
    bool is_facet_results_Set() const;
    bool is_facet_results_Valid() const;

    qint32 getTotalNumberOfResults() const;
    void setTotalNumberOfResults(const qint32 &total_number_of_results);
    bool is_total_number_of_results_Set() const;
    bool is_total_number_of_results_Valid() const;

    QList getWarnings() const;
    void setWarnings(const QList &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    QList getSpellCorrectedQueries() const;
    void setSpellCorrectedQueries(const QList &spell_corrected_queries);
    bool is_spell_corrected_queries_Set() const;
    bool is_spell_corrected_queries_Valid() const;

    QList getFeaturedResultsItems() const;
    void setFeaturedResultsItems(const QList &featured_results_items);
    bool is_featured_results_items_Set() const;
    bool is_featured_results_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_query_id;
    bool m_query_id_isSet;
    bool m_query_id_isValid;

    QList m_result_items;
    bool m_result_items_isSet;
    bool m_result_items_isValid;

    QList m_facet_results;
    bool m_facet_results_isSet;
    bool m_facet_results_isValid;

    qint32 m_total_number_of_results;
    bool m_total_number_of_results_isSet;
    bool m_total_number_of_results_isValid;

    QList m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;

    QList m_spell_corrected_queries;
    bool m_spell_corrected_queries_isSet;
    bool m_spell_corrected_queries_isValid;

    QList m_featured_results_items;
    bool m_featured_results_items_isSet;
    bool m_featured_results_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryResult)

#endif // OAIQueryResult_H
