/**
 * AWSKendraFrontendService
 * Amazon Kendra is a service for indexing large document sets.
 *
 * The version of the OpenAPI document: 2019-02-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesforceKnowledgeArticleConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesforceKnowledgeArticleConfiguration::OAISalesforceKnowledgeArticleConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesforceKnowledgeArticleConfiguration::OAISalesforceKnowledgeArticleConfiguration() {
    this->initializeModel();
}

OAISalesforceKnowledgeArticleConfiguration::~OAISalesforceKnowledgeArticleConfiguration() {}

void OAISalesforceKnowledgeArticleConfiguration::initializeModel() {

    m_included_states_isSet = false;
    m_included_states_isValid = false;

    m_standard_knowledge_article_type_configuration_isSet = false;
    m_standard_knowledge_article_type_configuration_isValid = false;

    m_custom_knowledge_article_type_configurations_isSet = false;
    m_custom_knowledge_article_type_configurations_isValid = false;
}

void OAISalesforceKnowledgeArticleConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesforceKnowledgeArticleConfiguration::fromJsonObject(QJsonObject json) {

    m_included_states_isValid = ::OpenAPI::fromJsonValue(m_included_states, json[QString("IncludedStates")]);
    m_included_states_isSet = !json[QString("IncludedStates")].isNull() && m_included_states_isValid;

    m_standard_knowledge_article_type_configuration_isValid = ::OpenAPI::fromJsonValue(m_standard_knowledge_article_type_configuration, json[QString("StandardKnowledgeArticleTypeConfiguration")]);
    m_standard_knowledge_article_type_configuration_isSet = !json[QString("StandardKnowledgeArticleTypeConfiguration")].isNull() && m_standard_knowledge_article_type_configuration_isValid;

    m_custom_knowledge_article_type_configurations_isValid = ::OpenAPI::fromJsonValue(m_custom_knowledge_article_type_configurations, json[QString("CustomKnowledgeArticleTypeConfigurations")]);
    m_custom_knowledge_article_type_configurations_isSet = !json[QString("CustomKnowledgeArticleTypeConfigurations")].isNull() && m_custom_knowledge_article_type_configurations_isValid;
}

QString OAISalesforceKnowledgeArticleConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesforceKnowledgeArticleConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_included_states.isSet()) {
        obj.insert(QString("IncludedStates"), ::OpenAPI::toJsonValue(m_included_states));
    }
    if (m_standard_knowledge_article_type_configuration.isSet()) {
        obj.insert(QString("StandardKnowledgeArticleTypeConfiguration"), ::OpenAPI::toJsonValue(m_standard_knowledge_article_type_configuration));
    }
    if (m_custom_knowledge_article_type_configurations.isSet()) {
        obj.insert(QString("CustomKnowledgeArticleTypeConfigurations"), ::OpenAPI::toJsonValue(m_custom_knowledge_article_type_configurations));
    }
    return obj;
}

QList OAISalesforceKnowledgeArticleConfiguration::getIncludedStates() const {
    return m_included_states;
}
void OAISalesforceKnowledgeArticleConfiguration::setIncludedStates(const QList &included_states) {
    m_included_states = included_states;
    m_included_states_isSet = true;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_included_states_Set() const{
    return m_included_states_isSet;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_included_states_Valid() const{
    return m_included_states_isValid;
}

OAISalesforceKnowledgeArticleConfiguration_StandardKnowledgeArticleTypeConfiguration OAISalesforceKnowledgeArticleConfiguration::getStandardKnowledgeArticleTypeConfiguration() const {
    return m_standard_knowledge_article_type_configuration;
}
void OAISalesforceKnowledgeArticleConfiguration::setStandardKnowledgeArticleTypeConfiguration(const OAISalesforceKnowledgeArticleConfiguration_StandardKnowledgeArticleTypeConfiguration &standard_knowledge_article_type_configuration) {
    m_standard_knowledge_article_type_configuration = standard_knowledge_article_type_configuration;
    m_standard_knowledge_article_type_configuration_isSet = true;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_standard_knowledge_article_type_configuration_Set() const{
    return m_standard_knowledge_article_type_configuration_isSet;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_standard_knowledge_article_type_configuration_Valid() const{
    return m_standard_knowledge_article_type_configuration_isValid;
}

QList OAISalesforceKnowledgeArticleConfiguration::getCustomKnowledgeArticleTypeConfigurations() const {
    return m_custom_knowledge_article_type_configurations;
}
void OAISalesforceKnowledgeArticleConfiguration::setCustomKnowledgeArticleTypeConfigurations(const QList &custom_knowledge_article_type_configurations) {
    m_custom_knowledge_article_type_configurations = custom_knowledge_article_type_configurations;
    m_custom_knowledge_article_type_configurations_isSet = true;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_custom_knowledge_article_type_configurations_Set() const{
    return m_custom_knowledge_article_type_configurations_isSet;
}

bool OAISalesforceKnowledgeArticleConfiguration::is_custom_knowledge_article_type_configurations_Valid() const{
    return m_custom_knowledge_article_type_configurations_isValid;
}

bool OAISalesforceKnowledgeArticleConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_included_states.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_knowledge_article_type_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_knowledge_article_type_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesforceKnowledgeArticleConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_included_states_isValid && true;
}

} // namespace OpenAPI
