# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_frequency import SourceFrequency
from openapi_server.models.source_keyword import SourceKeyword
from openapi_server.models.source_set_up_option import SourceSetUpOption
from openapi_server.models.source_type import SourceType
from openapi_server import util


class CreateControlMappingSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_name: str=None, source_description: str=None, source_set_up_option: SourceSetUpOption=None, source_type: SourceType=None, source_keyword: SourceKeyword=None, source_frequency: SourceFrequency=None, troubleshooting_text: str=None):
        """CreateControlMappingSource - a model defined in OpenAPI

        :param source_name: The source_name of this CreateControlMappingSource.
        :param source_description: The source_description of this CreateControlMappingSource.
        :param source_set_up_option: The source_set_up_option of this CreateControlMappingSource.
        :param source_type: The source_type of this CreateControlMappingSource.
        :param source_keyword: The source_keyword of this CreateControlMappingSource.
        :param source_frequency: The source_frequency of this CreateControlMappingSource.
        :param troubleshooting_text: The troubleshooting_text of this CreateControlMappingSource.
        """
        self.openapi_types = {
            'source_name': str,
            'source_description': str,
            'source_set_up_option': SourceSetUpOption,
            'source_type': SourceType,
            'source_keyword': SourceKeyword,
            'source_frequency': SourceFrequency,
            'troubleshooting_text': str
        }

        self.attribute_map = {
            'source_name': 'sourceName',
            'source_description': 'sourceDescription',
            'source_set_up_option': 'sourceSetUpOption',
            'source_type': 'sourceType',
            'source_keyword': 'sourceKeyword',
            'source_frequency': 'sourceFrequency',
            'troubleshooting_text': 'troubleshootingText'
        }

        self._source_name = source_name
        self._source_description = source_description
        self._source_set_up_option = source_set_up_option
        self._source_type = source_type
        self._source_keyword = source_keyword
        self._source_frequency = source_frequency
        self._troubleshooting_text = troubleshooting_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateControlMappingSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateControlMappingSource of this CreateControlMappingSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_name(self):
        """Gets the source_name of this CreateControlMappingSource.


        :return: The source_name of this CreateControlMappingSource.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this CreateControlMappingSource.


        :param source_name: The source_name of this CreateControlMappingSource.
        :type source_name: str
        """

        self._source_name = source_name

    @property
    def source_description(self):
        """Gets the source_description of this CreateControlMappingSource.


        :return: The source_description of this CreateControlMappingSource.
        :rtype: str
        """
        return self._source_description

    @source_description.setter
    def source_description(self, source_description):
        """Sets the source_description of this CreateControlMappingSource.


        :param source_description: The source_description of this CreateControlMappingSource.
        :type source_description: str
        """

        self._source_description = source_description

    @property
    def source_set_up_option(self):
        """Gets the source_set_up_option of this CreateControlMappingSource.


        :return: The source_set_up_option of this CreateControlMappingSource.
        :rtype: SourceSetUpOption
        """
        return self._source_set_up_option

    @source_set_up_option.setter
    def source_set_up_option(self, source_set_up_option):
        """Sets the source_set_up_option of this CreateControlMappingSource.


        :param source_set_up_option: The source_set_up_option of this CreateControlMappingSource.
        :type source_set_up_option: SourceSetUpOption
        """

        self._source_set_up_option = source_set_up_option

    @property
    def source_type(self):
        """Gets the source_type of this CreateControlMappingSource.


        :return: The source_type of this CreateControlMappingSource.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this CreateControlMappingSource.


        :param source_type: The source_type of this CreateControlMappingSource.
        :type source_type: SourceType
        """

        self._source_type = source_type

    @property
    def source_keyword(self):
        """Gets the source_keyword of this CreateControlMappingSource.


        :return: The source_keyword of this CreateControlMappingSource.
        :rtype: SourceKeyword
        """
        return self._source_keyword

    @source_keyword.setter
    def source_keyword(self, source_keyword):
        """Sets the source_keyword of this CreateControlMappingSource.


        :param source_keyword: The source_keyword of this CreateControlMappingSource.
        :type source_keyword: SourceKeyword
        """

        self._source_keyword = source_keyword

    @property
    def source_frequency(self):
        """Gets the source_frequency of this CreateControlMappingSource.


        :return: The source_frequency of this CreateControlMappingSource.
        :rtype: SourceFrequency
        """
        return self._source_frequency

    @source_frequency.setter
    def source_frequency(self, source_frequency):
        """Sets the source_frequency of this CreateControlMappingSource.


        :param source_frequency: The source_frequency of this CreateControlMappingSource.
        :type source_frequency: SourceFrequency
        """

        self._source_frequency = source_frequency

    @property
    def troubleshooting_text(self):
        """Gets the troubleshooting_text of this CreateControlMappingSource.


        :return: The troubleshooting_text of this CreateControlMappingSource.
        :rtype: str
        """
        return self._troubleshooting_text

    @troubleshooting_text.setter
    def troubleshooting_text(self, troubleshooting_text):
        """Sets the troubleshooting_text of this CreateControlMappingSource.


        :param troubleshooting_text: The troubleshooting_text of this CreateControlMappingSource.
        :type troubleshooting_text: str
        """

        self._troubleshooting_text = troubleshooting_text
