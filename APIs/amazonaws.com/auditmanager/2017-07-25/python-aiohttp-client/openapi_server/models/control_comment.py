# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControlComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author_name: str=None, comment_body: str=None, posted_date: datetime=None):
        """ControlComment - a model defined in OpenAPI

        :param author_name: The author_name of this ControlComment.
        :param comment_body: The comment_body of this ControlComment.
        :param posted_date: The posted_date of this ControlComment.
        """
        self.openapi_types = {
            'author_name': str,
            'comment_body': str,
            'posted_date': datetime
        }

        self.attribute_map = {
            'author_name': 'authorName',
            'comment_body': 'commentBody',
            'posted_date': 'postedDate'
        }

        self._author_name = author_name
        self._comment_body = comment_body
        self._posted_date = posted_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControlComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ControlComment of this ControlComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author_name(self):
        """Gets the author_name of this ControlComment.


        :return: The author_name of this ControlComment.
        :rtype: str
        """
        return self._author_name

    @author_name.setter
    def author_name(self, author_name):
        """Sets the author_name of this ControlComment.


        :param author_name: The author_name of this ControlComment.
        :type author_name: str
        """

        self._author_name = author_name

    @property
    def comment_body(self):
        """Gets the comment_body of this ControlComment.


        :return: The comment_body of this ControlComment.
        :rtype: str
        """
        return self._comment_body

    @comment_body.setter
    def comment_body(self, comment_body):
        """Sets the comment_body of this ControlComment.


        :param comment_body: The comment_body of this ControlComment.
        :type comment_body: str
        """

        self._comment_body = comment_body

    @property
    def posted_date(self):
        """Gets the posted_date of this ControlComment.


        :return: The posted_date of this ControlComment.
        :rtype: datetime
        """
        return self._posted_date

    @posted_date.setter
    def posted_date(self, posted_date):
        """Sets the posted_date of this ControlComment.


        :param posted_date: The posted_date of this ControlComment.
        :type posted_date: datetime
        """

        self._posted_date = posted_date
