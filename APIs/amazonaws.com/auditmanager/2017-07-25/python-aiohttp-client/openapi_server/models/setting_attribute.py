# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SettingAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ALL = 'ALL'
    IS_AWS_ORG_ENABLED = 'IS_AWS_ORG_ENABLED'
    SNS_TOPIC = 'SNS_TOPIC'
    DEFAULT_ASSESSMENT_REPORTS_DESTINATION = 'DEFAULT_ASSESSMENT_REPORTS_DESTINATION'
    DEFAULT_PROCESS_OWNERS = 'DEFAULT_PROCESS_OWNERS'
    EVIDENCE_FINDER_ENABLEMENT = 'EVIDENCE_FINDER_ENABLEMENT'
    DEREGISTRATION_POLICY = 'DEREGISTRATION_POLICY'
    DEFAULT_EXPORT_DESTINATION = 'DEFAULT_EXPORT_DESTINATION'

    def __init__(self):
        """SettingAttribute - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettingAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettingAttribute of this SettingAttribute.
        """
        return util.deserialize_model(dikt, cls)
