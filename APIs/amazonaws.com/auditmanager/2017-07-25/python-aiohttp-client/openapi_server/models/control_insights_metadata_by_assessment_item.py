# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.control_insights_metadata_by_assessment_item_evidence_insights import ControlInsightsMetadataByAssessmentItemEvidenceInsights
from openapi_server import util


class ControlInsightsMetadataByAssessmentItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, id: str=None, evidence_insights: ControlInsightsMetadataByAssessmentItemEvidenceInsights=None, control_set_name: str=None, last_updated: datetime=None):
        """ControlInsightsMetadataByAssessmentItem - a model defined in OpenAPI

        :param name: The name of this ControlInsightsMetadataByAssessmentItem.
        :param id: The id of this ControlInsightsMetadataByAssessmentItem.
        :param evidence_insights: The evidence_insights of this ControlInsightsMetadataByAssessmentItem.
        :param control_set_name: The control_set_name of this ControlInsightsMetadataByAssessmentItem.
        :param last_updated: The last_updated of this ControlInsightsMetadataByAssessmentItem.
        """
        self.openapi_types = {
            'name': str,
            'id': str,
            'evidence_insights': ControlInsightsMetadataByAssessmentItemEvidenceInsights,
            'control_set_name': str,
            'last_updated': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'id': 'id',
            'evidence_insights': 'evidenceInsights',
            'control_set_name': 'controlSetName',
            'last_updated': 'lastUpdated'
        }

        self._name = name
        self._id = id
        self._evidence_insights = evidence_insights
        self._control_set_name = control_set_name
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControlInsightsMetadataByAssessmentItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ControlInsightsMetadataByAssessmentItem of this ControlInsightsMetadataByAssessmentItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ControlInsightsMetadataByAssessmentItem.


        :return: The name of this ControlInsightsMetadataByAssessmentItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ControlInsightsMetadataByAssessmentItem.


        :param name: The name of this ControlInsightsMetadataByAssessmentItem.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this ControlInsightsMetadataByAssessmentItem.


        :return: The id of this ControlInsightsMetadataByAssessmentItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ControlInsightsMetadataByAssessmentItem.


        :param id: The id of this ControlInsightsMetadataByAssessmentItem.
        :type id: str
        """

        self._id = id

    @property
    def evidence_insights(self):
        """Gets the evidence_insights of this ControlInsightsMetadataByAssessmentItem.


        :return: The evidence_insights of this ControlInsightsMetadataByAssessmentItem.
        :rtype: ControlInsightsMetadataByAssessmentItemEvidenceInsights
        """
        return self._evidence_insights

    @evidence_insights.setter
    def evidence_insights(self, evidence_insights):
        """Sets the evidence_insights of this ControlInsightsMetadataByAssessmentItem.


        :param evidence_insights: The evidence_insights of this ControlInsightsMetadataByAssessmentItem.
        :type evidence_insights: ControlInsightsMetadataByAssessmentItemEvidenceInsights
        """

        self._evidence_insights = evidence_insights

    @property
    def control_set_name(self):
        """Gets the control_set_name of this ControlInsightsMetadataByAssessmentItem.


        :return: The control_set_name of this ControlInsightsMetadataByAssessmentItem.
        :rtype: str
        """
        return self._control_set_name

    @control_set_name.setter
    def control_set_name(self, control_set_name):
        """Sets the control_set_name of this ControlInsightsMetadataByAssessmentItem.


        :param control_set_name: The control_set_name of this ControlInsightsMetadataByAssessmentItem.
        :type control_set_name: str
        """

        self._control_set_name = control_set_name

    @property
    def last_updated(self):
        """Gets the last_updated of this ControlInsightsMetadataByAssessmentItem.


        :return: The last_updated of this ControlInsightsMetadataByAssessmentItem.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this ControlInsightsMetadataByAssessmentItem.


        :param last_updated: The last_updated of this ControlInsightsMetadataByAssessmentItem.
        :type last_updated: datetime
        """

        self._last_updated = last_updated
