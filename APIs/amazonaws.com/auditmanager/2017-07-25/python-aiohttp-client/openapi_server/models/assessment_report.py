# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assessment_report_status import AssessmentReportStatus
from openapi_server import util


class AssessmentReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, description: str=None, aws_account_id: str=None, assessment_id: str=None, assessment_name: str=None, author: str=None, status: AssessmentReportStatus=None, creation_time: datetime=None):
        """AssessmentReport - a model defined in OpenAPI

        :param id: The id of this AssessmentReport.
        :param name: The name of this AssessmentReport.
        :param description: The description of this AssessmentReport.
        :param aws_account_id: The aws_account_id of this AssessmentReport.
        :param assessment_id: The assessment_id of this AssessmentReport.
        :param assessment_name: The assessment_name of this AssessmentReport.
        :param author: The author of this AssessmentReport.
        :param status: The status of this AssessmentReport.
        :param creation_time: The creation_time of this AssessmentReport.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'description': str,
            'aws_account_id': str,
            'assessment_id': str,
            'assessment_name': str,
            'author': str,
            'status': AssessmentReportStatus,
            'creation_time': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'aws_account_id': 'awsAccountId',
            'assessment_id': 'assessmentId',
            'assessment_name': 'assessmentName',
            'author': 'author',
            'status': 'status',
            'creation_time': 'creationTime'
        }

        self._id = id
        self._name = name
        self._description = description
        self._aws_account_id = aws_account_id
        self._assessment_id = assessment_id
        self._assessment_name = assessment_name
        self._author = author
        self._status = status
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentReport of this AssessmentReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AssessmentReport.


        :return: The id of this AssessmentReport.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AssessmentReport.


        :param id: The id of this AssessmentReport.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AssessmentReport.


        :return: The name of this AssessmentReport.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AssessmentReport.


        :param name: The name of this AssessmentReport.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this AssessmentReport.


        :return: The description of this AssessmentReport.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AssessmentReport.


        :param description: The description of this AssessmentReport.
        :type description: str
        """

        self._description = description

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this AssessmentReport.


        :return: The aws_account_id of this AssessmentReport.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this AssessmentReport.


        :param aws_account_id: The aws_account_id of this AssessmentReport.
        :type aws_account_id: str
        """

        self._aws_account_id = aws_account_id

    @property
    def assessment_id(self):
        """Gets the assessment_id of this AssessmentReport.


        :return: The assessment_id of this AssessmentReport.
        :rtype: str
        """
        return self._assessment_id

    @assessment_id.setter
    def assessment_id(self, assessment_id):
        """Sets the assessment_id of this AssessmentReport.


        :param assessment_id: The assessment_id of this AssessmentReport.
        :type assessment_id: str
        """

        self._assessment_id = assessment_id

    @property
    def assessment_name(self):
        """Gets the assessment_name of this AssessmentReport.


        :return: The assessment_name of this AssessmentReport.
        :rtype: str
        """
        return self._assessment_name

    @assessment_name.setter
    def assessment_name(self, assessment_name):
        """Sets the assessment_name of this AssessmentReport.


        :param assessment_name: The assessment_name of this AssessmentReport.
        :type assessment_name: str
        """

        self._assessment_name = assessment_name

    @property
    def author(self):
        """Gets the author of this AssessmentReport.


        :return: The author of this AssessmentReport.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this AssessmentReport.


        :param author: The author of this AssessmentReport.
        :type author: str
        """

        self._author = author

    @property
    def status(self):
        """Gets the status of this AssessmentReport.


        :return: The status of this AssessmentReport.
        :rtype: AssessmentReportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AssessmentReport.


        :param status: The status of this AssessmentReport.
        :type status: AssessmentReportStatus
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this AssessmentReport.


        :return: The creation_time of this AssessmentReport.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this AssessmentReport.


        :param creation_time: The creation_time of this AssessmentReport.
        :type creation_time: datetime
        """

        self._creation_time = creation_time
