# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_evidence_response_evidence import GetEvidenceResponseEvidence
from openapi_server import util


class GetEvidenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evidence: GetEvidenceResponseEvidence=None):
        """GetEvidenceResponse - a model defined in OpenAPI

        :param evidence: The evidence of this GetEvidenceResponse.
        """
        self.openapi_types = {
            'evidence': GetEvidenceResponseEvidence
        }

        self.attribute_map = {
            'evidence': 'evidence'
        }

        self._evidence = evidence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEvidenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEvidenceResponse of this GetEvidenceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evidence(self):
        """Gets the evidence of this GetEvidenceResponse.


        :return: The evidence of this GetEvidenceResponse.
        :rtype: GetEvidenceResponseEvidence
        """
        return self._evidence

    @evidence.setter
    def evidence(self, evidence):
        """Sets the evidence of this GetEvidenceResponse.


        :param evidence: The evidence of this GetEvidenceResponse.
        :type evidence: GetEvidenceResponseEvidence
        """

        self._evidence = evidence
