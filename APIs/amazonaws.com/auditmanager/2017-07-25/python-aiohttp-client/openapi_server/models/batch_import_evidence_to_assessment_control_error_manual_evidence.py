# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchImportEvidenceToAssessmentControlErrorManualEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_resource_path: str=None, text_response: str=None, evidence_file_name: str=None):
        """BatchImportEvidenceToAssessmentControlErrorManualEvidence - a model defined in OpenAPI

        :param s3_resource_path: The s3_resource_path of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :param text_response: The text_response of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :param evidence_file_name: The evidence_file_name of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        """
        self.openapi_types = {
            's3_resource_path': str,
            'text_response': str,
            'evidence_file_name': str
        }

        self.attribute_map = {
            's3_resource_path': 's3ResourcePath',
            'text_response': 'textResponse',
            'evidence_file_name': 'evidenceFileName'
        }

        self._s3_resource_path = s3_resource_path
        self._text_response = text_response
        self._evidence_file_name = evidence_file_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchImportEvidenceToAssessmentControlErrorManualEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchImportEvidenceToAssessmentControlError_manualEvidence of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_resource_path(self):
        """Gets the s3_resource_path of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :return: The s3_resource_path of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :rtype: str
        """
        return self._s3_resource_path

    @s3_resource_path.setter
    def s3_resource_path(self, s3_resource_path):
        """Sets the s3_resource_path of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :param s3_resource_path: The s3_resource_path of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :type s3_resource_path: str
        """

        self._s3_resource_path = s3_resource_path

    @property
    def text_response(self):
        """Gets the text_response of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :return: The text_response of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :rtype: str
        """
        return self._text_response

    @text_response.setter
    def text_response(self, text_response):
        """Sets the text_response of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :param text_response: The text_response of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :type text_response: str
        """

        self._text_response = text_response

    @property
    def evidence_file_name(self):
        """Gets the evidence_file_name of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :return: The evidence_file_name of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :rtype: str
        """
        return self._evidence_file_name

    @evidence_file_name.setter
    def evidence_file_name(self, evidence_file_name):
        """Sets the evidence_file_name of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.


        :param evidence_file_name: The evidence_file_name of this BatchImportEvidenceToAssessmentControlErrorManualEvidence.
        :type evidence_file_name: str
        """

        self._evidence_file_name = evidence_file_name
