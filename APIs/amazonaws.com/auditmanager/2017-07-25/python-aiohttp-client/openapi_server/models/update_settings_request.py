# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_assessment_request_assessment_reports_destination import CreateAssessmentRequestAssessmentReportsDestination
from openapi_server.models.role import Role
from openapi_server.models.update_settings_request_default_export_destination import UpdateSettingsRequestDefaultExportDestination
from openapi_server.models.update_settings_request_deregistration_policy import UpdateSettingsRequestDeregistrationPolicy
import re
from openapi_server import util


class UpdateSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sns_topic: str=None, default_assessment_reports_destination: CreateAssessmentRequestAssessmentReportsDestination=None, default_process_owners: List[Role]=None, kms_key: str=None, evidence_finder_enabled: bool=None, deregistration_policy: UpdateSettingsRequestDeregistrationPolicy=None, default_export_destination: UpdateSettingsRequestDefaultExportDestination=None):
        """UpdateSettingsRequest - a model defined in OpenAPI

        :param sns_topic: The sns_topic of this UpdateSettingsRequest.
        :param default_assessment_reports_destination: The default_assessment_reports_destination of this UpdateSettingsRequest.
        :param default_process_owners: The default_process_owners of this UpdateSettingsRequest.
        :param kms_key: The kms_key of this UpdateSettingsRequest.
        :param evidence_finder_enabled: The evidence_finder_enabled of this UpdateSettingsRequest.
        :param deregistration_policy: The deregistration_policy of this UpdateSettingsRequest.
        :param default_export_destination: The default_export_destination of this UpdateSettingsRequest.
        """
        self.openapi_types = {
            'sns_topic': str,
            'default_assessment_reports_destination': CreateAssessmentRequestAssessmentReportsDestination,
            'default_process_owners': List[Role],
            'kms_key': str,
            'evidence_finder_enabled': bool,
            'deregistration_policy': UpdateSettingsRequestDeregistrationPolicy,
            'default_export_destination': UpdateSettingsRequestDefaultExportDestination
        }

        self.attribute_map = {
            'sns_topic': 'snsTopic',
            'default_assessment_reports_destination': 'defaultAssessmentReportsDestination',
            'default_process_owners': 'defaultProcessOwners',
            'kms_key': 'kmsKey',
            'evidence_finder_enabled': 'evidenceFinderEnabled',
            'deregistration_policy': 'deregistrationPolicy',
            'default_export_destination': 'defaultExportDestination'
        }

        self._sns_topic = sns_topic
        self._default_assessment_reports_destination = default_assessment_reports_destination
        self._default_process_owners = default_process_owners
        self._kms_key = kms_key
        self._evidence_finder_enabled = evidence_finder_enabled
        self._deregistration_policy = deregistration_policy
        self._default_export_destination = default_export_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSettings_request of this UpdateSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sns_topic(self):
        """Gets the sns_topic of this UpdateSettingsRequest.

         The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. 

        :return: The sns_topic of this UpdateSettingsRequest.
        :rtype: str
        """
        return self._sns_topic

    @sns_topic.setter
    def sns_topic(self, sns_topic):
        """Sets the sns_topic of this UpdateSettingsRequest.

         The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. 

        :param sns_topic: The sns_topic of this UpdateSettingsRequest.
        :type sns_topic: str
        """
        if sns_topic is not None and len(sns_topic) > 2048:
            raise ValueError("Invalid value for `sns_topic`, length must be less than or equal to `2048`")
        if sns_topic is not None and len(sns_topic) < 4:
            raise ValueError("Invalid value for `sns_topic`, length must be greater than or equal to `4`")
        if sns_topic is not None and not re.search(r'^arn:.*:sns:.*|NONE', sns_topic):
            raise ValueError("Invalid value for `sns_topic`, must be a follow pattern or equal to `/^arn:.*:sns:.*|NONE/`")

        self._sns_topic = sns_topic

    @property
    def default_assessment_reports_destination(self):
        """Gets the default_assessment_reports_destination of this UpdateSettingsRequest.


        :return: The default_assessment_reports_destination of this UpdateSettingsRequest.
        :rtype: CreateAssessmentRequestAssessmentReportsDestination
        """
        return self._default_assessment_reports_destination

    @default_assessment_reports_destination.setter
    def default_assessment_reports_destination(self, default_assessment_reports_destination):
        """Sets the default_assessment_reports_destination of this UpdateSettingsRequest.


        :param default_assessment_reports_destination: The default_assessment_reports_destination of this UpdateSettingsRequest.
        :type default_assessment_reports_destination: CreateAssessmentRequestAssessmentReportsDestination
        """

        self._default_assessment_reports_destination = default_assessment_reports_destination

    @property
    def default_process_owners(self):
        """Gets the default_process_owners of this UpdateSettingsRequest.

         A list of the default audit owners. 

        :return: The default_process_owners of this UpdateSettingsRequest.
        :rtype: List[Role]
        """
        return self._default_process_owners

    @default_process_owners.setter
    def default_process_owners(self, default_process_owners):
        """Sets the default_process_owners of this UpdateSettingsRequest.

         A list of the default audit owners. 

        :param default_process_owners: The default_process_owners of this UpdateSettingsRequest.
        :type default_process_owners: List[Role]
        """

        self._default_process_owners = default_process_owners

    @property
    def kms_key(self):
        """Gets the kms_key of this UpdateSettingsRequest.

         The KMS key details. 

        :return: The kms_key of this UpdateSettingsRequest.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this UpdateSettingsRequest.

         The KMS key details. 

        :param kms_key: The kms_key of this UpdateSettingsRequest.
        :type kms_key: str
        """
        if kms_key is not None and len(kms_key) > 2048:
            raise ValueError("Invalid value for `kms_key`, length must be less than or equal to `2048`")
        if kms_key is not None and len(kms_key) < 7:
            raise ValueError("Invalid value for `kms_key`, length must be greater than or equal to `7`")
        if kms_key is not None and not re.search(r'^arn:.*:kms:.*|DEFAULT', kms_key):
            raise ValueError("Invalid value for `kms_key`, must be a follow pattern or equal to `/^arn:.*:kms:.*|DEFAULT/`")

        self._kms_key = kms_key

    @property
    def evidence_finder_enabled(self):
        """Gets the evidence_finder_enabled of this UpdateSettingsRequest.

        <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important> <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html\">deregister</a> and then <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html\">re-register</a> Audit Manager. </p> </important>

        :return: The evidence_finder_enabled of this UpdateSettingsRequest.
        :rtype: bool
        """
        return self._evidence_finder_enabled

    @evidence_finder_enabled.setter
    def evidence_finder_enabled(self, evidence_finder_enabled):
        """Sets the evidence_finder_enabled of this UpdateSettingsRequest.

        <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important> <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html\">deregister</a> and then <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html\">re-register</a> Audit Manager. </p> </important>

        :param evidence_finder_enabled: The evidence_finder_enabled of this UpdateSettingsRequest.
        :type evidence_finder_enabled: bool
        """

        self._evidence_finder_enabled = evidence_finder_enabled

    @property
    def deregistration_policy(self):
        """Gets the deregistration_policy of this UpdateSettingsRequest.


        :return: The deregistration_policy of this UpdateSettingsRequest.
        :rtype: UpdateSettingsRequestDeregistrationPolicy
        """
        return self._deregistration_policy

    @deregistration_policy.setter
    def deregistration_policy(self, deregistration_policy):
        """Sets the deregistration_policy of this UpdateSettingsRequest.


        :param deregistration_policy: The deregistration_policy of this UpdateSettingsRequest.
        :type deregistration_policy: UpdateSettingsRequestDeregistrationPolicy
        """

        self._deregistration_policy = deregistration_policy

    @property
    def default_export_destination(self):
        """Gets the default_export_destination of this UpdateSettingsRequest.


        :return: The default_export_destination of this UpdateSettingsRequest.
        :rtype: UpdateSettingsRequestDefaultExportDestination
        """
        return self._default_export_destination

    @default_export_destination.setter
    def default_export_destination(self, default_export_destination):
        """Sets the default_export_destination of this UpdateSettingsRequest.


        :param default_export_destination: The default_export_destination of this UpdateSettingsRequest.
        :type default_export_destination: UpdateSettingsRequestDefaultExportDestination
        """

        self._default_export_destination = default_export_destination
