# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, assessment_id: str=None, assessment_name: str=None, control_set_id: str=None, control_set_name: str=None, description: str=None, event_time: datetime=None, source: str=None):
        """Notification - a model defined in OpenAPI

        :param id: The id of this Notification.
        :param assessment_id: The assessment_id of this Notification.
        :param assessment_name: The assessment_name of this Notification.
        :param control_set_id: The control_set_id of this Notification.
        :param control_set_name: The control_set_name of this Notification.
        :param description: The description of this Notification.
        :param event_time: The event_time of this Notification.
        :param source: The source of this Notification.
        """
        self.openapi_types = {
            'id': str,
            'assessment_id': str,
            'assessment_name': str,
            'control_set_id': str,
            'control_set_name': str,
            'description': str,
            'event_time': datetime,
            'source': str
        }

        self.attribute_map = {
            'id': 'id',
            'assessment_id': 'assessmentId',
            'assessment_name': 'assessmentName',
            'control_set_id': 'controlSetId',
            'control_set_name': 'controlSetName',
            'description': 'description',
            'event_time': 'eventTime',
            'source': 'source'
        }

        self._id = id
        self._assessment_id = assessment_id
        self._assessment_name = assessment_name
        self._control_set_id = control_set_id
        self._control_set_name = control_set_name
        self._description = description
        self._event_time = event_time
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Notification of this Notification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Notification.


        :return: The id of this Notification.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Notification.


        :param id: The id of this Notification.
        :type id: str
        """

        self._id = id

    @property
    def assessment_id(self):
        """Gets the assessment_id of this Notification.


        :return: The assessment_id of this Notification.
        :rtype: str
        """
        return self._assessment_id

    @assessment_id.setter
    def assessment_id(self, assessment_id):
        """Sets the assessment_id of this Notification.


        :param assessment_id: The assessment_id of this Notification.
        :type assessment_id: str
        """

        self._assessment_id = assessment_id

    @property
    def assessment_name(self):
        """Gets the assessment_name of this Notification.


        :return: The assessment_name of this Notification.
        :rtype: str
        """
        return self._assessment_name

    @assessment_name.setter
    def assessment_name(self, assessment_name):
        """Sets the assessment_name of this Notification.


        :param assessment_name: The assessment_name of this Notification.
        :type assessment_name: str
        """

        self._assessment_name = assessment_name

    @property
    def control_set_id(self):
        """Gets the control_set_id of this Notification.


        :return: The control_set_id of this Notification.
        :rtype: str
        """
        return self._control_set_id

    @control_set_id.setter
    def control_set_id(self, control_set_id):
        """Sets the control_set_id of this Notification.


        :param control_set_id: The control_set_id of this Notification.
        :type control_set_id: str
        """

        self._control_set_id = control_set_id

    @property
    def control_set_name(self):
        """Gets the control_set_name of this Notification.


        :return: The control_set_name of this Notification.
        :rtype: str
        """
        return self._control_set_name

    @control_set_name.setter
    def control_set_name(self, control_set_name):
        """Sets the control_set_name of this Notification.


        :param control_set_name: The control_set_name of this Notification.
        :type control_set_name: str
        """

        self._control_set_name = control_set_name

    @property
    def description(self):
        """Gets the description of this Notification.


        :return: The description of this Notification.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Notification.


        :param description: The description of this Notification.
        :type description: str
        """

        self._description = description

    @property
    def event_time(self):
        """Gets the event_time of this Notification.


        :return: The event_time of this Notification.
        :rtype: datetime
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time):
        """Sets the event_time of this Notification.


        :param event_time: The event_time of this Notification.
        :type event_time: datetime
        """

        self._event_time = event_time

    @property
    def source(self):
        """Gets the source of this Notification.


        :return: The source of this Notification.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Notification.


        :param source: The source of this Notification.
        :type source: str
        """

        self._source = source
