# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.role_type import RoleType
from openapi_server import util


class BatchCreateDelegationByAssessmentErrorCreateDelegationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, control_set_id: str=None, role_arn: str=None, role_type: RoleType=None):
        """BatchCreateDelegationByAssessmentErrorCreateDelegationRequest - a model defined in OpenAPI

        :param comment: The comment of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :param control_set_id: The control_set_id of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :param role_arn: The role_arn of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :param role_type: The role_type of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        """
        self.openapi_types = {
            'comment': str,
            'control_set_id': str,
            'role_arn': str,
            'role_type': RoleType
        }

        self.attribute_map = {
            'comment': 'comment',
            'control_set_id': 'controlSetId',
            'role_arn': 'roleArn',
            'role_type': 'roleType'
        }

        self._comment = comment
        self._control_set_id = control_set_id
        self._role_arn = role_arn
        self._role_type = role_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchCreateDelegationByAssessmentErrorCreateDelegationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchCreateDelegationByAssessmentError_createDelegationRequest of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :return: The comment of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :param comment: The comment of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def control_set_id(self):
        """Gets the control_set_id of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :return: The control_set_id of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :rtype: str
        """
        return self._control_set_id

    @control_set_id.setter
    def control_set_id(self, control_set_id):
        """Sets the control_set_id of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :param control_set_id: The control_set_id of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :type control_set_id: str
        """

        self._control_set_id = control_set_id

    @property
    def role_arn(self):
        """Gets the role_arn of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :return: The role_arn of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :param role_arn: The role_arn of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def role_type(self):
        """Gets the role_type of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :return: The role_type of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :rtype: RoleType
        """
        return self._role_type

    @role_type.setter
    def role_type(self, role_type):
        """Sets the role_type of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.


        :param role_type: The role_type of this BatchCreateDelegationByAssessmentErrorCreateDelegationRequest.
        :type role_type: RoleType
        """

        self._role_type = role_type
