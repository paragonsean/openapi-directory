# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delegation_status import DelegationStatus
from openapi_server.models.role_type import RoleType
from openapi_server import util


class Delegation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, assessment_name: str=None, assessment_id: str=None, status: DelegationStatus=None, role_arn: str=None, role_type: RoleType=None, creation_time: datetime=None, last_updated: datetime=None, control_set_id: str=None, comment: str=None, created_by: str=None):
        """Delegation - a model defined in OpenAPI

        :param id: The id of this Delegation.
        :param assessment_name: The assessment_name of this Delegation.
        :param assessment_id: The assessment_id of this Delegation.
        :param status: The status of this Delegation.
        :param role_arn: The role_arn of this Delegation.
        :param role_type: The role_type of this Delegation.
        :param creation_time: The creation_time of this Delegation.
        :param last_updated: The last_updated of this Delegation.
        :param control_set_id: The control_set_id of this Delegation.
        :param comment: The comment of this Delegation.
        :param created_by: The created_by of this Delegation.
        """
        self.openapi_types = {
            'id': str,
            'assessment_name': str,
            'assessment_id': str,
            'status': DelegationStatus,
            'role_arn': str,
            'role_type': RoleType,
            'creation_time': datetime,
            'last_updated': datetime,
            'control_set_id': str,
            'comment': str,
            'created_by': str
        }

        self.attribute_map = {
            'id': 'id',
            'assessment_name': 'assessmentName',
            'assessment_id': 'assessmentId',
            'status': 'status',
            'role_arn': 'roleArn',
            'role_type': 'roleType',
            'creation_time': 'creationTime',
            'last_updated': 'lastUpdated',
            'control_set_id': 'controlSetId',
            'comment': 'comment',
            'created_by': 'createdBy'
        }

        self._id = id
        self._assessment_name = assessment_name
        self._assessment_id = assessment_id
        self._status = status
        self._role_arn = role_arn
        self._role_type = role_type
        self._creation_time = creation_time
        self._last_updated = last_updated
        self._control_set_id = control_set_id
        self._comment = comment
        self._created_by = created_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Delegation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Delegation of this Delegation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Delegation.


        :return: The id of this Delegation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Delegation.


        :param id: The id of this Delegation.
        :type id: str
        """

        self._id = id

    @property
    def assessment_name(self):
        """Gets the assessment_name of this Delegation.


        :return: The assessment_name of this Delegation.
        :rtype: str
        """
        return self._assessment_name

    @assessment_name.setter
    def assessment_name(self, assessment_name):
        """Sets the assessment_name of this Delegation.


        :param assessment_name: The assessment_name of this Delegation.
        :type assessment_name: str
        """

        self._assessment_name = assessment_name

    @property
    def assessment_id(self):
        """Gets the assessment_id of this Delegation.


        :return: The assessment_id of this Delegation.
        :rtype: str
        """
        return self._assessment_id

    @assessment_id.setter
    def assessment_id(self, assessment_id):
        """Sets the assessment_id of this Delegation.


        :param assessment_id: The assessment_id of this Delegation.
        :type assessment_id: str
        """

        self._assessment_id = assessment_id

    @property
    def status(self):
        """Gets the status of this Delegation.


        :return: The status of this Delegation.
        :rtype: DelegationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Delegation.


        :param status: The status of this Delegation.
        :type status: DelegationStatus
        """

        self._status = status

    @property
    def role_arn(self):
        """Gets the role_arn of this Delegation.


        :return: The role_arn of this Delegation.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this Delegation.


        :param role_arn: The role_arn of this Delegation.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def role_type(self):
        """Gets the role_type of this Delegation.


        :return: The role_type of this Delegation.
        :rtype: RoleType
        """
        return self._role_type

    @role_type.setter
    def role_type(self, role_type):
        """Sets the role_type of this Delegation.


        :param role_type: The role_type of this Delegation.
        :type role_type: RoleType
        """

        self._role_type = role_type

    @property
    def creation_time(self):
        """Gets the creation_time of this Delegation.


        :return: The creation_time of this Delegation.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Delegation.


        :param creation_time: The creation_time of this Delegation.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_updated(self):
        """Gets the last_updated of this Delegation.


        :return: The last_updated of this Delegation.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this Delegation.


        :param last_updated: The last_updated of this Delegation.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def control_set_id(self):
        """Gets the control_set_id of this Delegation.


        :return: The control_set_id of this Delegation.
        :rtype: str
        """
        return self._control_set_id

    @control_set_id.setter
    def control_set_id(self, control_set_id):
        """Sets the control_set_id of this Delegation.


        :param control_set_id: The control_set_id of this Delegation.
        :type control_set_id: str
        """

        self._control_set_id = control_set_id

    @property
    def comment(self):
        """Gets the comment of this Delegation.


        :return: The comment of this Delegation.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Delegation.


        :param comment: The comment of this Delegation.
        :type comment: str
        """

        self._comment = comment

    @property
    def created_by(self):
        """Gets the created_by of this Delegation.


        :return: The created_by of this Delegation.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Delegation.


        :param created_by: The created_by of this Delegation.
        :type created_by: str
        """

        self._created_by = created_by
