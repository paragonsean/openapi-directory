/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsAuditManager);
  }
}(this, function(expect, AwsAuditManager) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessmentFrameworkShareRequest', function() {
    it('should create an instance of AssessmentFrameworkShareRequest', function() {
      // uncomment below and update the code to test AssessmentFrameworkShareRequest
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be.a(AwsAuditManager.AssessmentFrameworkShareRequest);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property frameworkId (base name: "frameworkId")', function() {
      // uncomment below and update the code to test the property frameworkId
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property frameworkName (base name: "frameworkName")', function() {
      // uncomment below and update the code to test the property frameworkName
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property frameworkDescription (base name: "frameworkDescription")', function() {
      // uncomment below and update the code to test the property frameworkDescription
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property sourceAccount (base name: "sourceAccount")', function() {
      // uncomment below and update the code to test the property sourceAccount
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property destinationAccount (base name: "destinationAccount")', function() {
      // uncomment below and update the code to test the property destinationAccount
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property destinationRegion (base name: "destinationRegion")', function() {
      // uncomment below and update the code to test the property destinationRegion
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property expirationTime (base name: "expirationTime")', function() {
      // uncomment below and update the code to test the property expirationTime
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "lastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property standardControlsCount (base name: "standardControlsCount")', function() {
      // uncomment below and update the code to test the property standardControlsCount
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property customControlsCount (base name: "customControlsCount")', function() {
      // uncomment below and update the code to test the property customControlsCount
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

    it('should have the property complianceType (base name: "complianceType")', function() {
      // uncomment below and update the code to test the property complianceType
      //var instance = new AwsAuditManager.AssessmentFrameworkShareRequest();
      //expect(instance).to.be();
    });

  });

}));
