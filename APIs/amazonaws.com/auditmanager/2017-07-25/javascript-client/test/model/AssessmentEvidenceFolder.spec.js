/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsAuditManager);
  }
}(this, function(expect, AwsAuditManager) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsAuditManager.AssessmentEvidenceFolder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessmentEvidenceFolder', function() {
    it('should create an instance of AssessmentEvidenceFolder', function() {
      // uncomment below and update the code to test AssessmentEvidenceFolder
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be.a(AwsAuditManager.AssessmentEvidenceFolder);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property assessmentId (base name: "assessmentId")', function() {
      // uncomment below and update the code to test the property assessmentId
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property controlSetId (base name: "controlSetId")', function() {
      // uncomment below and update the code to test the property controlSetId
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property controlId (base name: "controlId")', function() {
      // uncomment below and update the code to test the property controlId
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property dataSource (base name: "dataSource")', function() {
      // uncomment below and update the code to test the property dataSource
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property author (base name: "author")', function() {
      // uncomment below and update the code to test the property author
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property totalEvidence (base name: "totalEvidence")', function() {
      // uncomment below and update the code to test the property totalEvidence
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property assessmentReportSelectionCount (base name: "assessmentReportSelectionCount")', function() {
      // uncomment below and update the code to test the property assessmentReportSelectionCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property controlName (base name: "controlName")', function() {
      // uncomment below and update the code to test the property controlName
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceResourcesIncludedCount (base name: "evidenceResourcesIncludedCount")', function() {
      // uncomment below and update the code to test the property evidenceResourcesIncludedCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceByTypeConfigurationDataCount (base name: "evidenceByTypeConfigurationDataCount")', function() {
      // uncomment below and update the code to test the property evidenceByTypeConfigurationDataCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceByTypeManualCount (base name: "evidenceByTypeManualCount")', function() {
      // uncomment below and update the code to test the property evidenceByTypeManualCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceByTypeComplianceCheckCount (base name: "evidenceByTypeComplianceCheckCount")', function() {
      // uncomment below and update the code to test the property evidenceByTypeComplianceCheckCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceByTypeComplianceCheckIssuesCount (base name: "evidenceByTypeComplianceCheckIssuesCount")', function() {
      // uncomment below and update the code to test the property evidenceByTypeComplianceCheckIssuesCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceByTypeUserActivityCount (base name: "evidenceByTypeUserActivityCount")', function() {
      // uncomment below and update the code to test the property evidenceByTypeUserActivityCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

    it('should have the property evidenceAwsServiceSourceCount (base name: "evidenceAwsServiceSourceCount")', function() {
      // uncomment below and update the code to test the property evidenceAwsServiceSourceCount
      //var instance = new AwsAuditManager.AssessmentEvidenceFolder();
      //expect(instance).to.be();
    });

  });

}));
