/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Control from './Control';
import ControlType from './ControlType';

/**
 * The GetControlResponseControl model module.
 * @module model/GetControlResponseControl
 * @version 2017-07-25
 */
class GetControlResponseControl {
    /**
     * Constructs a new <code>GetControlResponseControl</code>.
     * @alias module:model/GetControlResponseControl
     * @implements module:model/Control
     */
    constructor() { 
        Control.initialize(this);
        GetControlResponseControl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetControlResponseControl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetControlResponseControl} obj Optional instance to populate.
     * @return {module:model/GetControlResponseControl} The populated <code>GetControlResponseControl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetControlResponseControl();
            Control.constructFromObject(data, obj);

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], ControlType);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('testingInformation')) {
                obj['testingInformation'] = ApiClient.convertToType(data['testingInformation'], 'String');
            }
            if (data.hasOwnProperty('actionPlanTitle')) {
                obj['actionPlanTitle'] = ApiClient.convertToType(data['actionPlanTitle'], 'String');
            }
            if (data.hasOwnProperty('actionPlanInstructions')) {
                obj['actionPlanInstructions'] = ApiClient.convertToType(data['actionPlanInstructions'], 'String');
            }
            if (data.hasOwnProperty('controlSources')) {
                obj['controlSources'] = ApiClient.convertToType(data['controlSources'], 'String');
            }
            if (data.hasOwnProperty('controlMappingSources')) {
                obj['controlMappingSources'] = ApiClient.convertToType(data['controlMappingSources'], Array);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedAt')) {
                obj['lastUpdatedAt'] = ApiClient.convertToType(data['lastUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = ApiClient.convertToType(data['lastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetControlResponseControl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetControlResponseControl</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          ControlType.validateJSON(data['type']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `testingInformation`
        if (data['testingInformation']) { // data not null
          String.validateJSON(data['testingInformation']);
        }
        // validate the optional field `actionPlanTitle`
        if (data['actionPlanTitle']) { // data not null
          String.validateJSON(data['actionPlanTitle']);
        }
        // validate the optional field `actionPlanInstructions`
        if (data['actionPlanInstructions']) { // data not null
          String.validateJSON(data['actionPlanInstructions']);
        }
        // validate the optional field `controlSources`
        if (data['controlSources']) { // data not null
          String.validateJSON(data['controlSources']);
        }
        // validate the optional field `controlMappingSources`
        if (data['controlMappingSources']) { // data not null
          Array.validateJSON(data['controlMappingSources']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `lastUpdatedAt`
        if (data['lastUpdatedAt']) { // data not null
          Date.validateJSON(data['lastUpdatedAt']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          String.validateJSON(data['createdBy']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          String.validateJSON(data['lastUpdatedBy']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
GetControlResponseControl.prototype['arn'] = undefined;

/**
 * @member {String} id
 */
GetControlResponseControl.prototype['id'] = undefined;

/**
 * @member {module:model/ControlType} type
 */
GetControlResponseControl.prototype['type'] = undefined;

/**
 * @member {String} name
 */
GetControlResponseControl.prototype['name'] = undefined;

/**
 * @member {String} description
 */
GetControlResponseControl.prototype['description'] = undefined;

/**
 * @member {String} testingInformation
 */
GetControlResponseControl.prototype['testingInformation'] = undefined;

/**
 * @member {String} actionPlanTitle
 */
GetControlResponseControl.prototype['actionPlanTitle'] = undefined;

/**
 * @member {String} actionPlanInstructions
 */
GetControlResponseControl.prototype['actionPlanInstructions'] = undefined;

/**
 * @member {String} controlSources
 */
GetControlResponseControl.prototype['controlSources'] = undefined;

/**
 * @member {Array} controlMappingSources
 */
GetControlResponseControl.prototype['controlMappingSources'] = undefined;

/**
 * @member {Date} createdAt
 */
GetControlResponseControl.prototype['createdAt'] = undefined;

/**
 * @member {Date} lastUpdatedAt
 */
GetControlResponseControl.prototype['lastUpdatedAt'] = undefined;

/**
 * @member {String} createdBy
 */
GetControlResponseControl.prototype['createdBy'] = undefined;

/**
 * @member {String} lastUpdatedBy
 */
GetControlResponseControl.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Object} tags
 */
GetControlResponseControl.prototype['tags'] = undefined;


// Implement Control interface:
/**
 * @member {String} arn
 */
Control.prototype['arn'] = undefined;
/**
 * @member {String} id
 */
Control.prototype['id'] = undefined;
/**
 * @member {module:model/ControlType} type
 */
Control.prototype['type'] = undefined;
/**
 * @member {String} name
 */
Control.prototype['name'] = undefined;
/**
 * @member {String} description
 */
Control.prototype['description'] = undefined;
/**
 * @member {String} testingInformation
 */
Control.prototype['testingInformation'] = undefined;
/**
 * @member {String} actionPlanTitle
 */
Control.prototype['actionPlanTitle'] = undefined;
/**
 * @member {String} actionPlanInstructions
 */
Control.prototype['actionPlanInstructions'] = undefined;
/**
 * @member {String} controlSources
 */
Control.prototype['controlSources'] = undefined;
/**
 * @member {Array} controlMappingSources
 */
Control.prototype['controlMappingSources'] = undefined;
/**
 * @member {Date} createdAt
 */
Control.prototype['createdAt'] = undefined;
/**
 * @member {Date} lastUpdatedAt
 */
Control.prototype['lastUpdatedAt'] = undefined;
/**
 * @member {String} createdBy
 */
Control.prototype['createdBy'] = undefined;
/**
 * @member {String} lastUpdatedBy
 */
Control.prototype['lastUpdatedBy'] = undefined;
/**
 * @member {Object} tags
 */
Control.prototype['tags'] = undefined;




export default GetControlResponseControl;

