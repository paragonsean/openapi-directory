/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceKeyword.h
 *
 * &lt;p&gt;A keyword that relates to the control data source.&lt;/p&gt; &lt;p&gt;For manual evidence, this keyword indicates if the manual evidence is a file or text.&lt;/p&gt; &lt;p&gt;For automated evidence, this keyword identifies a specific CloudTrail event, Config rule, Security Hub control, or Amazon Web Services API name. &lt;/p&gt; &lt;p&gt; To learn more about the supported keywords that you can use when mapping a control data source, see the following pages in the &lt;i&gt;Audit Manager User Guide&lt;/i&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html\&quot;&gt;Config rules supported by Audit Manager&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html\&quot;&gt;Security Hub controls supported by Audit Manager&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html\&quot;&gt;API calls supported by Audit Manager&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-cloudtrail.html\&quot;&gt;CloudTrail event names supported by Audit Manager&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAISourceKeyword_H
#define OAISourceKeyword_H

#include <QJsonObject>

#include "OAIKeywordInputType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceKeyword : public OAIObject {
public:
    OAISourceKeyword();
    OAISourceKeyword(QString json);
    ~OAISourceKeyword() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKeywordInputType getKeywordInputType() const;
    void setKeywordInputType(const OAIKeywordInputType &keyword_input_type);
    bool is_keyword_input_type_Set() const;
    bool is_keyword_input_type_Valid() const;

    QString getKeywordValue() const;
    void setKeywordValue(const QString &keyword_value);
    bool is_keyword_value_Set() const;
    bool is_keyword_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKeywordInputType m_keyword_input_type;
    bool m_keyword_input_type_isSet;
    bool m_keyword_input_type_isValid;

    QString m_keyword_value;
    bool m_keyword_value_isSet;
    bool m_keyword_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceKeyword)

#endif // OAISourceKeyword_H
