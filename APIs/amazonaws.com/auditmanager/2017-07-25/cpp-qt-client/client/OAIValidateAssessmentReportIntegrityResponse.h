/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValidateAssessmentReportIntegrityResponse.h
 *
 * 
 */

#ifndef OAIValidateAssessmentReportIntegrityResponse_H
#define OAIValidateAssessmentReportIntegrityResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValidateAssessmentReportIntegrityResponse : public OAIObject {
public:
    OAIValidateAssessmentReportIntegrityResponse();
    OAIValidateAssessmentReportIntegrityResponse(QString json);
    ~OAIValidateAssessmentReportIntegrityResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getSignatureValid() const;
    void setSignatureValid(const bool &signature_valid);
    bool is_signature_valid_Set() const;
    bool is_signature_valid_Valid() const;

    QString getSignatureAlgorithm() const;
    void setSignatureAlgorithm(const QString &signature_algorithm);
    bool is_signature_algorithm_Set() const;
    bool is_signature_algorithm_Valid() const;

    QString getSignatureDateTime() const;
    void setSignatureDateTime(const QString &signature_date_time);
    bool is_signature_date_time_Set() const;
    bool is_signature_date_time_Valid() const;

    QString getSignatureKeyId() const;
    void setSignatureKeyId(const QString &signature_key_id);
    bool is_signature_key_id_Set() const;
    bool is_signature_key_id_Valid() const;

    QList getValidationErrors() const;
    void setValidationErrors(const QList &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_signature_valid;
    bool m_signature_valid_isSet;
    bool m_signature_valid_isValid;

    QString m_signature_algorithm;
    bool m_signature_algorithm_isSet;
    bool m_signature_algorithm_isValid;

    QString m_signature_date_time;
    bool m_signature_date_time_isSet;
    bool m_signature_date_time_isValid;

    QString m_signature_key_id;
    bool m_signature_key_id_isSet;
    bool m_signature_key_id_isValid;

    QList m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValidateAssessmentReportIntegrityResponse)

#endif // OAIValidateAssessmentReportIntegrityResponse_H
