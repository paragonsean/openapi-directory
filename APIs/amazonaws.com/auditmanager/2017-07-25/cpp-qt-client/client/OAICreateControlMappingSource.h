/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateControlMappingSource.h
 *
 *  The control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This doesn&#39;t contain &lt;code&gt;mappingID&lt;/code&gt;. 
 */

#ifndef OAICreateControlMappingSource_H
#define OAICreateControlMappingSource_H

#include <QJsonObject>

#include "OAISourceFrequency.h"
#include "OAISourceKeyword.h"
#include "OAISourceSetUpOption.h"
#include "OAISourceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceKeyword;

class OAICreateControlMappingSource : public OAIObject {
public:
    OAICreateControlMappingSource();
    OAICreateControlMappingSource(QString json);
    ~OAICreateControlMappingSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceName() const;
    void setSourceName(const QString &source_name);
    bool is_source_name_Set() const;
    bool is_source_name_Valid() const;

    QString getSourceDescription() const;
    void setSourceDescription(const QString &source_description);
    bool is_source_description_Set() const;
    bool is_source_description_Valid() const;

    OAISourceSetUpOption getSourceSetUpOption() const;
    void setSourceSetUpOption(const OAISourceSetUpOption &source_set_up_option);
    bool is_source_set_up_option_Set() const;
    bool is_source_set_up_option_Valid() const;

    OAISourceType getSourceType() const;
    void setSourceType(const OAISourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    OAISourceKeyword getSourceKeyword() const;
    void setSourceKeyword(const OAISourceKeyword &source_keyword);
    bool is_source_keyword_Set() const;
    bool is_source_keyword_Valid() const;

    OAISourceFrequency getSourceFrequency() const;
    void setSourceFrequency(const OAISourceFrequency &source_frequency);
    bool is_source_frequency_Set() const;
    bool is_source_frequency_Valid() const;

    QString getTroubleshootingText() const;
    void setTroubleshootingText(const QString &troubleshooting_text);
    bool is_troubleshooting_text_Set() const;
    bool is_troubleshooting_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_name;
    bool m_source_name_isSet;
    bool m_source_name_isValid;

    QString m_source_description;
    bool m_source_description_isSet;
    bool m_source_description_isValid;

    OAISourceSetUpOption m_source_set_up_option;
    bool m_source_set_up_option_isSet;
    bool m_source_set_up_option_isValid;

    OAISourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    OAISourceKeyword m_source_keyword;
    bool m_source_keyword_isSet;
    bool m_source_keyword_isValid;

    OAISourceFrequency m_source_frequency;
    bool m_source_frequency_isSet;
    bool m_source_frequency_isValid;

    QString m_troubleshooting_text;
    bool m_troubleshooting_text_isSet;
    bool m_troubleshooting_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateControlMappingSource)

#endif // OAICreateControlMappingSource_H
