/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAssessmentRequest.h
 *
 * 
 */

#ifndef OAICreateAssessmentRequest_H
#define OAICreateAssessmentRequest_H

#include <QJsonObject>

#include "OAICreateAssessmentRequest_assessmentReportsDestination.h"
#include "OAIScope.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAssessmentRequest_assessmentReportsDestination;
class OAIScope;

class OAICreateAssessmentRequest : public OAIObject {
public:
    OAICreateAssessmentRequest();
    OAICreateAssessmentRequest(QString json);
    ~OAICreateAssessmentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateAssessmentRequest_assessmentReportsDestination getAssessmentReportsDestination() const;
    void setAssessmentReportsDestination(const OAICreateAssessmentRequest_assessmentReportsDestination &assessment_reports_destination);
    bool is_assessment_reports_destination_Set() const;
    bool is_assessment_reports_destination_Valid() const;

    OAIScope getScope() const;
    void setScope(const OAIScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QList getRoles() const;
    void setRoles(const QList &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    QString getFrameworkId() const;
    void setFrameworkId(const QString &framework_id);
    bool is_framework_id_Set() const;
    bool is_framework_id_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateAssessmentRequest_assessmentReportsDestination m_assessment_reports_destination;
    bool m_assessment_reports_destination_isSet;
    bool m_assessment_reports_destination_isValid;

    OAIScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QList m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    QString m_framework_id;
    bool m_framework_id_isSet;
    bool m_framework_id_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAssessmentRequest)

#endif // OAICreateAssessmentRequest_H
