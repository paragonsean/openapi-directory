/**
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvidence.h
 *
 *  A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity invoked by a user, or a system configuration snapshot. 
 */

#ifndef OAIEvidence_H
#define OAIEvidence_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvidence : public OAIObject {
public:
    OAIEvidence();
    OAIEvidence(QString json);
    ~OAIEvidence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSource() const;
    void setDataSource(const QString &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QString getEvidenceAwsAccountId() const;
    void setEvidenceAwsAccountId(const QString &evidence_aws_account_id);
    bool is_evidence_aws_account_id_Set() const;
    bool is_evidence_aws_account_id_Valid() const;

    QDateTime getTime() const;
    void setTime(const QDateTime &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getEventSource() const;
    void setEventSource(const QString &event_source);
    bool is_event_source_Set() const;
    bool is_event_source_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getEvidenceByType() const;
    void setEvidenceByType(const QString &evidence_by_type);
    bool is_evidence_by_type_Set() const;
    bool is_evidence_by_type_Valid() const;

    QList getResourcesIncluded() const;
    void setResourcesIncluded(const QList &resources_included);
    bool is_resources_included_Set() const;
    bool is_resources_included_Valid() const;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getIamId() const;
    void setIamId(const QString &iam_id);
    bool is_iam_id_Set() const;
    bool is_iam_id_Valid() const;

    QString getComplianceCheck() const;
    void setComplianceCheck(const QString &compliance_check);
    bool is_compliance_check_Set() const;
    bool is_compliance_check_Valid() const;

    QString getAwsOrganization() const;
    void setAwsOrganization(const QString &aws_organization);
    bool is_aws_organization_Set() const;
    bool is_aws_organization_Valid() const;

    QString getAwsAccountId() const;
    void setAwsAccountId(const QString &aws_account_id);
    bool is_aws_account_id_Set() const;
    bool is_aws_account_id_Valid() const;

    QString getEvidenceFolderId() const;
    void setEvidenceFolderId(const QString &evidence_folder_id);
    bool is_evidence_folder_id_Set() const;
    bool is_evidence_folder_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getAssessmentReportSelection() const;
    void setAssessmentReportSelection(const QString &assessment_report_selection);
    bool is_assessment_report_selection_Set() const;
    bool is_assessment_report_selection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QString m_evidence_aws_account_id;
    bool m_evidence_aws_account_id_isSet;
    bool m_evidence_aws_account_id_isValid;

    QDateTime m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_event_source;
    bool m_event_source_isSet;
    bool m_event_source_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_evidence_by_type;
    bool m_evidence_by_type_isSet;
    bool m_evidence_by_type_isValid;

    QList m_resources_included;
    bool m_resources_included_isSet;
    bool m_resources_included_isValid;

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_iam_id;
    bool m_iam_id_isSet;
    bool m_iam_id_isValid;

    QString m_compliance_check;
    bool m_compliance_check_isSet;
    bool m_compliance_check_isValid;

    QString m_aws_organization;
    bool m_aws_organization_isSet;
    bool m_aws_organization_isValid;

    QString m_aws_account_id;
    bool m_aws_account_id_isSet;
    bool m_aws_account_id_isValid;

    QString m_evidence_folder_id;
    bool m_evidence_folder_id_isSet;
    bool m_evidence_folder_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_assessment_report_selection;
    bool m_assessment_report_selection_isSet;
    bool m_assessment_report_selection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvidence)

#endif // OAIEvidence_H
