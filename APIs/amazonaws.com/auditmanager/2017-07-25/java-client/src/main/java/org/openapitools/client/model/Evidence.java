/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity invoked by a user, or a system configuration snapshot. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Evidence {
  public static final String SERIALIZED_NAME_DATA_SOURCE = "dataSource";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE)
  private String dataSource;

  public static final String SERIALIZED_NAME_EVIDENCE_AWS_ACCOUNT_ID = "evidenceAwsAccountId";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_AWS_ACCOUNT_ID)
  private String evidenceAwsAccountId;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private OffsetDateTime time;

  public static final String SERIALIZED_NAME_EVENT_SOURCE = "eventSource";
  @SerializedName(SERIALIZED_NAME_EVENT_SOURCE)
  private String eventSource;

  public static final String SERIALIZED_NAME_EVENT_NAME = "eventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  private String eventName;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE = "evidenceByType";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE)
  private String evidenceByType;

  public static final String SERIALIZED_NAME_RESOURCES_INCLUDED = "resourcesIncluded";
  @SerializedName(SERIALIZED_NAME_RESOURCES_INCLUDED)
  private List resourcesIncluded;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map attributes;

  public static final String SERIALIZED_NAME_IAM_ID = "iamId";
  @SerializedName(SERIALIZED_NAME_IAM_ID)
  private String iamId;

  public static final String SERIALIZED_NAME_COMPLIANCE_CHECK = "complianceCheck";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_CHECK)
  private String complianceCheck;

  public static final String SERIALIZED_NAME_AWS_ORGANIZATION = "awsOrganization";
  @SerializedName(SERIALIZED_NAME_AWS_ORGANIZATION)
  private String awsOrganization;

  public static final String SERIALIZED_NAME_AWS_ACCOUNT_ID = "awsAccountId";
  @SerializedName(SERIALIZED_NAME_AWS_ACCOUNT_ID)
  private String awsAccountId;

  public static final String SERIALIZED_NAME_EVIDENCE_FOLDER_ID = "evidenceFolderId";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_FOLDER_ID)
  private String evidenceFolderId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ASSESSMENT_REPORT_SELECTION = "assessmentReportSelection";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_REPORT_SELECTION)
  private String assessmentReportSelection;

  public Evidence() {
  }

  public Evidence dataSource(String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Get dataSource
   * @return dataSource
   */
  @javax.annotation.Nullable
  public String getDataSource() {
    return dataSource;
  }

  public void setDataSource(String dataSource) {
    this.dataSource = dataSource;
  }


  public Evidence evidenceAwsAccountId(String evidenceAwsAccountId) {
    this.evidenceAwsAccountId = evidenceAwsAccountId;
    return this;
  }

  /**
   * Get evidenceAwsAccountId
   * @return evidenceAwsAccountId
   */
  @javax.annotation.Nullable
  public String getEvidenceAwsAccountId() {
    return evidenceAwsAccountId;
  }

  public void setEvidenceAwsAccountId(String evidenceAwsAccountId) {
    this.evidenceAwsAccountId = evidenceAwsAccountId;
  }


  public Evidence time(OffsetDateTime time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = time;
  }


  public Evidence eventSource(String eventSource) {
    this.eventSource = eventSource;
    return this;
  }

  /**
   * Get eventSource
   * @return eventSource
   */
  @javax.annotation.Nullable
  public String getEventSource() {
    return eventSource;
  }

  public void setEventSource(String eventSource) {
    this.eventSource = eventSource;
  }


  public Evidence eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

  /**
   * Get eventName
   * @return eventName
   */
  @javax.annotation.Nullable
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }


  public Evidence evidenceByType(String evidenceByType) {
    this.evidenceByType = evidenceByType;
    return this;
  }

  /**
   * Get evidenceByType
   * @return evidenceByType
   */
  @javax.annotation.Nullable
  public String getEvidenceByType() {
    return evidenceByType;
  }

  public void setEvidenceByType(String evidenceByType) {
    this.evidenceByType = evidenceByType;
  }


  public Evidence resourcesIncluded(List resourcesIncluded) {
    this.resourcesIncluded = resourcesIncluded;
    return this;
  }

  /**
   * Get resourcesIncluded
   * @return resourcesIncluded
   */
  @javax.annotation.Nullable
  public List getResourcesIncluded() {
    return resourcesIncluded;
  }

  public void setResourcesIncluded(List resourcesIncluded) {
    this.resourcesIncluded = resourcesIncluded;
  }


  public Evidence attributes(Map attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map getAttributes() {
    return attributes;
  }

  public void setAttributes(Map attributes) {
    this.attributes = attributes;
  }


  public Evidence iamId(String iamId) {
    this.iamId = iamId;
    return this;
  }

  /**
   * Get iamId
   * @return iamId
   */
  @javax.annotation.Nullable
  public String getIamId() {
    return iamId;
  }

  public void setIamId(String iamId) {
    this.iamId = iamId;
  }


  public Evidence complianceCheck(String complianceCheck) {
    this.complianceCheck = complianceCheck;
    return this;
  }

  /**
   * Get complianceCheck
   * @return complianceCheck
   */
  @javax.annotation.Nullable
  public String getComplianceCheck() {
    return complianceCheck;
  }

  public void setComplianceCheck(String complianceCheck) {
    this.complianceCheck = complianceCheck;
  }


  public Evidence awsOrganization(String awsOrganization) {
    this.awsOrganization = awsOrganization;
    return this;
  }

  /**
   * Get awsOrganization
   * @return awsOrganization
   */
  @javax.annotation.Nullable
  public String getAwsOrganization() {
    return awsOrganization;
  }

  public void setAwsOrganization(String awsOrganization) {
    this.awsOrganization = awsOrganization;
  }


  public Evidence awsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

  /**
   * Get awsAccountId
   * @return awsAccountId
   */
  @javax.annotation.Nullable
  public String getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
  }


  public Evidence evidenceFolderId(String evidenceFolderId) {
    this.evidenceFolderId = evidenceFolderId;
    return this;
  }

  /**
   * Get evidenceFolderId
   * @return evidenceFolderId
   */
  @javax.annotation.Nullable
  public String getEvidenceFolderId() {
    return evidenceFolderId;
  }

  public void setEvidenceFolderId(String evidenceFolderId) {
    this.evidenceFolderId = evidenceFolderId;
  }


  public Evidence id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Evidence assessmentReportSelection(String assessmentReportSelection) {
    this.assessmentReportSelection = assessmentReportSelection;
    return this;
  }

  /**
   * Get assessmentReportSelection
   * @return assessmentReportSelection
   */
  @javax.annotation.Nullable
  public String getAssessmentReportSelection() {
    return assessmentReportSelection;
  }

  public void setAssessmentReportSelection(String assessmentReportSelection) {
    this.assessmentReportSelection = assessmentReportSelection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Evidence evidence = (Evidence) o;
    return Objects.equals(this.dataSource, evidence.dataSource) &&
        Objects.equals(this.evidenceAwsAccountId, evidence.evidenceAwsAccountId) &&
        Objects.equals(this.time, evidence.time) &&
        Objects.equals(this.eventSource, evidence.eventSource) &&
        Objects.equals(this.eventName, evidence.eventName) &&
        Objects.equals(this.evidenceByType, evidence.evidenceByType) &&
        Objects.equals(this.resourcesIncluded, evidence.resourcesIncluded) &&
        Objects.equals(this.attributes, evidence.attributes) &&
        Objects.equals(this.iamId, evidence.iamId) &&
        Objects.equals(this.complianceCheck, evidence.complianceCheck) &&
        Objects.equals(this.awsOrganization, evidence.awsOrganization) &&
        Objects.equals(this.awsAccountId, evidence.awsAccountId) &&
        Objects.equals(this.evidenceFolderId, evidence.evidenceFolderId) &&
        Objects.equals(this.id, evidence.id) &&
        Objects.equals(this.assessmentReportSelection, evidence.assessmentReportSelection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataSource, evidenceAwsAccountId, time, eventSource, eventName, evidenceByType, resourcesIncluded, attributes, iamId, complianceCheck, awsOrganization, awsAccountId, evidenceFolderId, id, assessmentReportSelection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Evidence {\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    evidenceAwsAccountId: ").append(toIndentedString(evidenceAwsAccountId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    eventSource: ").append(toIndentedString(eventSource)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    evidenceByType: ").append(toIndentedString(evidenceByType)).append("\n");
    sb.append("    resourcesIncluded: ").append(toIndentedString(resourcesIncluded)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    iamId: ").append(toIndentedString(iamId)).append("\n");
    sb.append("    complianceCheck: ").append(toIndentedString(complianceCheck)).append("\n");
    sb.append("    awsOrganization: ").append(toIndentedString(awsOrganization)).append("\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    evidenceFolderId: ").append(toIndentedString(evidenceFolderId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    assessmentReportSelection: ").append(toIndentedString(assessmentReportSelection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataSource");
    openapiFields.add("evidenceAwsAccountId");
    openapiFields.add("time");
    openapiFields.add("eventSource");
    openapiFields.add("eventName");
    openapiFields.add("evidenceByType");
    openapiFields.add("resourcesIncluded");
    openapiFields.add("attributes");
    openapiFields.add("iamId");
    openapiFields.add("complianceCheck");
    openapiFields.add("awsOrganization");
    openapiFields.add("awsAccountId");
    openapiFields.add("evidenceFolderId");
    openapiFields.add("id");
    openapiFields.add("assessmentReportSelection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Evidence
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Evidence.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Evidence is not found in the empty JSON string", Evidence.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Evidence.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Evidence` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataSource`
      if (jsonObj.get("dataSource") != null && !jsonObj.get("dataSource").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dataSource"));
      }
      // validate the optional field `evidenceAwsAccountId`
      if (jsonObj.get("evidenceAwsAccountId") != null && !jsonObj.get("evidenceAwsAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("evidenceAwsAccountId"));
      }
      // validate the optional field `time`
      if (jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("time"));
      }
      // validate the optional field `eventSource`
      if (jsonObj.get("eventSource") != null && !jsonObj.get("eventSource").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("eventSource"));
      }
      // validate the optional field `eventName`
      if (jsonObj.get("eventName") != null && !jsonObj.get("eventName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("eventName"));
      }
      // validate the optional field `evidenceByType`
      if (jsonObj.get("evidenceByType") != null && !jsonObj.get("evidenceByType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("evidenceByType"));
      }
      // validate the optional field `resourcesIncluded`
      if (jsonObj.get("resourcesIncluded") != null && !jsonObj.get("resourcesIncluded").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourcesIncluded"));
      }
      // validate the optional field `attributes`
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("attributes"));
      }
      // validate the optional field `iamId`
      if (jsonObj.get("iamId") != null && !jsonObj.get("iamId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("iamId"));
      }
      // validate the optional field `complianceCheck`
      if (jsonObj.get("complianceCheck") != null && !jsonObj.get("complianceCheck").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("complianceCheck"));
      }
      // validate the optional field `awsOrganization`
      if (jsonObj.get("awsOrganization") != null && !jsonObj.get("awsOrganization").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("awsOrganization"));
      }
      // validate the optional field `awsAccountId`
      if (jsonObj.get("awsAccountId") != null && !jsonObj.get("awsAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("awsAccountId"));
      }
      // validate the optional field `evidenceFolderId`
      if (jsonObj.get("evidenceFolderId") != null && !jsonObj.get("evidenceFolderId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("evidenceFolderId"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `assessmentReportSelection`
      if (jsonObj.get("assessmentReportSelection") != null && !jsonObj.get("assessmentReportSelection").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assessmentReportSelection"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Evidence.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Evidence' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Evidence> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Evidence.class));

       return (TypeAdapter<T>) new TypeAdapter<Evidence>() {
           @Override
           public void write(JsonWriter out, Evidence value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Evidence read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Evidence given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Evidence
   * @throws IOException if the JSON string is invalid with respect to Evidence
   */
  public static Evidence fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Evidence.class);
  }

  /**
   * Convert an instance of Evidence to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

