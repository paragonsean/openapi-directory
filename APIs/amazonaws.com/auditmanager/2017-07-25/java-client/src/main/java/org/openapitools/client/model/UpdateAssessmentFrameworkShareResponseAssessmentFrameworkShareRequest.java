/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ShareRequestStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_FRAMEWORK_ID = "frameworkId";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK_ID)
  private String frameworkId;

  public static final String SERIALIZED_NAME_FRAMEWORK_NAME = "frameworkName";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK_NAME)
  private String frameworkName;

  public static final String SERIALIZED_NAME_FRAMEWORK_DESCRIPTION = "frameworkDescription";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK_DESCRIPTION)
  private String frameworkDescription;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ShareRequestStatus status;

  public static final String SERIALIZED_NAME_SOURCE_ACCOUNT = "sourceAccount";
  @SerializedName(SERIALIZED_NAME_SOURCE_ACCOUNT)
  private String sourceAccount;

  public static final String SERIALIZED_NAME_DESTINATION_ACCOUNT = "destinationAccount";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ACCOUNT)
  private String destinationAccount;

  public static final String SERIALIZED_NAME_DESTINATION_REGION = "destinationRegion";
  @SerializedName(SERIALIZED_NAME_DESTINATION_REGION)
  private String destinationRegion;

  public static final String SERIALIZED_NAME_EXPIRATION_TIME = "expirationTime";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_TIME)
  private OffsetDateTime expirationTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_STANDARD_CONTROLS_COUNT = "standardControlsCount";
  @SerializedName(SERIALIZED_NAME_STANDARD_CONTROLS_COUNT)
  private Integer standardControlsCount;

  public static final String SERIALIZED_NAME_CUSTOM_CONTROLS_COUNT = "customControlsCount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONTROLS_COUNT)
  private Integer customControlsCount;

  public static final String SERIALIZED_NAME_COMPLIANCE_TYPE = "complianceType";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_TYPE)
  private String complianceType;

  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest() {
  }

  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest frameworkId(String frameworkId) {
    this.frameworkId = frameworkId;
    return this;
  }

  /**
   * Get frameworkId
   * @return frameworkId
   */
  @javax.annotation.Nullable
  public String getFrameworkId() {
    return frameworkId;
  }

  public void setFrameworkId(String frameworkId) {
    this.frameworkId = frameworkId;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest frameworkName(String frameworkName) {
    this.frameworkName = frameworkName;
    return this;
  }

  /**
   * Get frameworkName
   * @return frameworkName
   */
  @javax.annotation.Nullable
  public String getFrameworkName() {
    return frameworkName;
  }

  public void setFrameworkName(String frameworkName) {
    this.frameworkName = frameworkName;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest frameworkDescription(String frameworkDescription) {
    this.frameworkDescription = frameworkDescription;
    return this;
  }

  /**
   * Get frameworkDescription
   * @return frameworkDescription
   */
  @javax.annotation.Nullable
  public String getFrameworkDescription() {
    return frameworkDescription;
  }

  public void setFrameworkDescription(String frameworkDescription) {
    this.frameworkDescription = frameworkDescription;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest status(ShareRequestStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ShareRequestStatus getStatus() {
    return status;
  }

  public void setStatus(ShareRequestStatus status) {
    this.status = status;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest sourceAccount(String sourceAccount) {
    this.sourceAccount = sourceAccount;
    return this;
  }

  /**
   * Get sourceAccount
   * @return sourceAccount
   */
  @javax.annotation.Nullable
  public String getSourceAccount() {
    return sourceAccount;
  }

  public void setSourceAccount(String sourceAccount) {
    this.sourceAccount = sourceAccount;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest destinationAccount(String destinationAccount) {
    this.destinationAccount = destinationAccount;
    return this;
  }

  /**
   * Get destinationAccount
   * @return destinationAccount
   */
  @javax.annotation.Nullable
  public String getDestinationAccount() {
    return destinationAccount;
  }

  public void setDestinationAccount(String destinationAccount) {
    this.destinationAccount = destinationAccount;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest destinationRegion(String destinationRegion) {
    this.destinationRegion = destinationRegion;
    return this;
  }

  /**
   * Get destinationRegion
   * @return destinationRegion
   */
  @javax.annotation.Nullable
  public String getDestinationRegion() {
    return destinationRegion;
  }

  public void setDestinationRegion(String destinationRegion) {
    this.destinationRegion = destinationRegion;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest expirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Get expirationTime
   * @return expirationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest standardControlsCount(Integer standardControlsCount) {
    this.standardControlsCount = standardControlsCount;
    return this;
  }

  /**
   * Get standardControlsCount
   * @return standardControlsCount
   */
  @javax.annotation.Nullable
  public Integer getStandardControlsCount() {
    return standardControlsCount;
  }

  public void setStandardControlsCount(Integer standardControlsCount) {
    this.standardControlsCount = standardControlsCount;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest customControlsCount(Integer customControlsCount) {
    this.customControlsCount = customControlsCount;
    return this;
  }

  /**
   * Get customControlsCount
   * @return customControlsCount
   */
  @javax.annotation.Nullable
  public Integer getCustomControlsCount() {
    return customControlsCount;
  }

  public void setCustomControlsCount(Integer customControlsCount) {
    this.customControlsCount = customControlsCount;
  }


  public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest complianceType(String complianceType) {
    this.complianceType = complianceType;
    return this;
  }

  /**
   * Get complianceType
   * @return complianceType
   */
  @javax.annotation.Nullable
  public String getComplianceType() {
    return complianceType;
  }

  public void setComplianceType(String complianceType) {
    this.complianceType = complianceType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest = (UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest) o;
    return Objects.equals(this.id, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.id) &&
        Objects.equals(this.frameworkId, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.frameworkId) &&
        Objects.equals(this.frameworkName, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.frameworkName) &&
        Objects.equals(this.frameworkDescription, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.frameworkDescription) &&
        Objects.equals(this.status, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.status) &&
        Objects.equals(this.sourceAccount, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.sourceAccount) &&
        Objects.equals(this.destinationAccount, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.destinationAccount) &&
        Objects.equals(this.destinationRegion, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.destinationRegion) &&
        Objects.equals(this.expirationTime, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.expirationTime) &&
        Objects.equals(this.creationTime, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.creationTime) &&
        Objects.equals(this.lastUpdated, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.lastUpdated) &&
        Objects.equals(this.comment, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.comment) &&
        Objects.equals(this.standardControlsCount, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.standardControlsCount) &&
        Objects.equals(this.customControlsCount, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.customControlsCount) &&
        Objects.equals(this.complianceType, updateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.complianceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, frameworkId, frameworkName, frameworkDescription, status, sourceAccount, destinationAccount, destinationRegion, expirationTime, creationTime, lastUpdated, comment, standardControlsCount, customControlsCount, complianceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    frameworkId: ").append(toIndentedString(frameworkId)).append("\n");
    sb.append("    frameworkName: ").append(toIndentedString(frameworkName)).append("\n");
    sb.append("    frameworkDescription: ").append(toIndentedString(frameworkDescription)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sourceAccount: ").append(toIndentedString(sourceAccount)).append("\n");
    sb.append("    destinationAccount: ").append(toIndentedString(destinationAccount)).append("\n");
    sb.append("    destinationRegion: ").append(toIndentedString(destinationRegion)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    standardControlsCount: ").append(toIndentedString(standardControlsCount)).append("\n");
    sb.append("    customControlsCount: ").append(toIndentedString(customControlsCount)).append("\n");
    sb.append("    complianceType: ").append(toIndentedString(complianceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("frameworkId");
    openapiFields.add("frameworkName");
    openapiFields.add("frameworkDescription");
    openapiFields.add("status");
    openapiFields.add("sourceAccount");
    openapiFields.add("destinationAccount");
    openapiFields.add("destinationRegion");
    openapiFields.add("expirationTime");
    openapiFields.add("creationTime");
    openapiFields.add("lastUpdated");
    openapiFields.add("comment");
    openapiFields.add("standardControlsCount");
    openapiFields.add("customControlsCount");
    openapiFields.add("complianceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest is not found in the empty JSON string", UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `frameworkId`
      if (jsonObj.get("frameworkId") != null && !jsonObj.get("frameworkId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("frameworkId"));
      }
      // validate the optional field `frameworkName`
      if (jsonObj.get("frameworkName") != null && !jsonObj.get("frameworkName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("frameworkName"));
      }
      // validate the optional field `frameworkDescription`
      if (jsonObj.get("frameworkDescription") != null && !jsonObj.get("frameworkDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("frameworkDescription"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ShareRequestStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `sourceAccount`
      if (jsonObj.get("sourceAccount") != null && !jsonObj.get("sourceAccount").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sourceAccount"));
      }
      // validate the optional field `destinationAccount`
      if (jsonObj.get("destinationAccount") != null && !jsonObj.get("destinationAccount").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("destinationAccount"));
      }
      // validate the optional field `destinationRegion`
      if (jsonObj.get("destinationRegion") != null && !jsonObj.get("destinationRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("destinationRegion"));
      }
      // validate the optional field `expirationTime`
      if (jsonObj.get("expirationTime") != null && !jsonObj.get("expirationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("expirationTime"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `lastUpdated`
      if (jsonObj.get("lastUpdated") != null && !jsonObj.get("lastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdated"));
      }
      // validate the optional field `comment`
      if (jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("comment"));
      }
      // validate the optional field `standardControlsCount`
      if (jsonObj.get("standardControlsCount") != null && !jsonObj.get("standardControlsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("standardControlsCount"));
      }
      // validate the optional field `customControlsCount`
      if (jsonObj.get("customControlsCount") != null && !jsonObj.get("customControlsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("customControlsCount"));
      }
      // validate the optional field `complianceType`
      if (jsonObj.get("complianceType") != null && !jsonObj.get("complianceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("complianceType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest
   */
  public static UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest.class);
  }

  /**
   * Convert an instance of UpdateAssessmentFrameworkShareResponseAssessmentFrameworkShareRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

