/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SettingsDefaultAssessmentReportsDestination;
import org.openapitools.client.model.SettingsDefaultExportDestination;
import org.openapitools.client.model.SettingsDeregistrationPolicy;
import org.openapitools.client.model.SettingsEvidenceFinderEnablement;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  The settings object that holds all supported Audit Manager settings. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Settings {
  public static final String SERIALIZED_NAME_IS_AWS_ORG_ENABLED = "isAwsOrgEnabled";
  @SerializedName(SERIALIZED_NAME_IS_AWS_ORG_ENABLED)
  private Boolean isAwsOrgEnabled;

  public static final String SERIALIZED_NAME_SNS_TOPIC = "snsTopic";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC)
  private String snsTopic;

  public static final String SERIALIZED_NAME_DEFAULT_ASSESSMENT_REPORTS_DESTINATION = "defaultAssessmentReportsDestination";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ASSESSMENT_REPORTS_DESTINATION)
  private SettingsDefaultAssessmentReportsDestination defaultAssessmentReportsDestination;

  public static final String SERIALIZED_NAME_DEFAULT_PROCESS_OWNERS = "defaultProcessOwners";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PROCESS_OWNERS)
  private List defaultProcessOwners;

  public static final String SERIALIZED_NAME_KMS_KEY = "kmsKey";
  @SerializedName(SERIALIZED_NAME_KMS_KEY)
  private String kmsKey;

  public static final String SERIALIZED_NAME_EVIDENCE_FINDER_ENABLEMENT = "evidenceFinderEnablement";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_FINDER_ENABLEMENT)
  private SettingsEvidenceFinderEnablement evidenceFinderEnablement;

  public static final String SERIALIZED_NAME_DEREGISTRATION_POLICY = "deregistrationPolicy";
  @SerializedName(SERIALIZED_NAME_DEREGISTRATION_POLICY)
  private SettingsDeregistrationPolicy deregistrationPolicy;

  public static final String SERIALIZED_NAME_DEFAULT_EXPORT_DESTINATION = "defaultExportDestination";
  @SerializedName(SERIALIZED_NAME_DEFAULT_EXPORT_DESTINATION)
  private SettingsDefaultExportDestination defaultExportDestination;

  public Settings() {
  }

  public Settings isAwsOrgEnabled(Boolean isAwsOrgEnabled) {
    this.isAwsOrgEnabled = isAwsOrgEnabled;
    return this;
  }

  /**
   * Get isAwsOrgEnabled
   * @return isAwsOrgEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIsAwsOrgEnabled() {
    return isAwsOrgEnabled;
  }

  public void setIsAwsOrgEnabled(Boolean isAwsOrgEnabled) {
    this.isAwsOrgEnabled = isAwsOrgEnabled;
  }


  public Settings snsTopic(String snsTopic) {
    this.snsTopic = snsTopic;
    return this;
  }

  /**
   * Get snsTopic
   * @return snsTopic
   */
  @javax.annotation.Nullable
  public String getSnsTopic() {
    return snsTopic;
  }

  public void setSnsTopic(String snsTopic) {
    this.snsTopic = snsTopic;
  }


  public Settings defaultAssessmentReportsDestination(SettingsDefaultAssessmentReportsDestination defaultAssessmentReportsDestination) {
    this.defaultAssessmentReportsDestination = defaultAssessmentReportsDestination;
    return this;
  }

  /**
   * Get defaultAssessmentReportsDestination
   * @return defaultAssessmentReportsDestination
   */
  @javax.annotation.Nullable
  public SettingsDefaultAssessmentReportsDestination getDefaultAssessmentReportsDestination() {
    return defaultAssessmentReportsDestination;
  }

  public void setDefaultAssessmentReportsDestination(SettingsDefaultAssessmentReportsDestination defaultAssessmentReportsDestination) {
    this.defaultAssessmentReportsDestination = defaultAssessmentReportsDestination;
  }


  public Settings defaultProcessOwners(List defaultProcessOwners) {
    this.defaultProcessOwners = defaultProcessOwners;
    return this;
  }

  /**
   * Get defaultProcessOwners
   * @return defaultProcessOwners
   */
  @javax.annotation.Nullable
  public List getDefaultProcessOwners() {
    return defaultProcessOwners;
  }

  public void setDefaultProcessOwners(List defaultProcessOwners) {
    this.defaultProcessOwners = defaultProcessOwners;
  }


  public Settings kmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Get kmsKey
   * @return kmsKey
   */
  @javax.annotation.Nullable
  public String getKmsKey() {
    return kmsKey;
  }

  public void setKmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
  }


  public Settings evidenceFinderEnablement(SettingsEvidenceFinderEnablement evidenceFinderEnablement) {
    this.evidenceFinderEnablement = evidenceFinderEnablement;
    return this;
  }

  /**
   * Get evidenceFinderEnablement
   * @return evidenceFinderEnablement
   */
  @javax.annotation.Nullable
  public SettingsEvidenceFinderEnablement getEvidenceFinderEnablement() {
    return evidenceFinderEnablement;
  }

  public void setEvidenceFinderEnablement(SettingsEvidenceFinderEnablement evidenceFinderEnablement) {
    this.evidenceFinderEnablement = evidenceFinderEnablement;
  }


  public Settings deregistrationPolicy(SettingsDeregistrationPolicy deregistrationPolicy) {
    this.deregistrationPolicy = deregistrationPolicy;
    return this;
  }

  /**
   * Get deregistrationPolicy
   * @return deregistrationPolicy
   */
  @javax.annotation.Nullable
  public SettingsDeregistrationPolicy getDeregistrationPolicy() {
    return deregistrationPolicy;
  }

  public void setDeregistrationPolicy(SettingsDeregistrationPolicy deregistrationPolicy) {
    this.deregistrationPolicy = deregistrationPolicy;
  }


  public Settings defaultExportDestination(SettingsDefaultExportDestination defaultExportDestination) {
    this.defaultExportDestination = defaultExportDestination;
    return this;
  }

  /**
   * Get defaultExportDestination
   * @return defaultExportDestination
   */
  @javax.annotation.Nullable
  public SettingsDefaultExportDestination getDefaultExportDestination() {
    return defaultExportDestination;
  }

  public void setDefaultExportDestination(SettingsDefaultExportDestination defaultExportDestination) {
    this.defaultExportDestination = defaultExportDestination;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Settings settings = (Settings) o;
    return Objects.equals(this.isAwsOrgEnabled, settings.isAwsOrgEnabled) &&
        Objects.equals(this.snsTopic, settings.snsTopic) &&
        Objects.equals(this.defaultAssessmentReportsDestination, settings.defaultAssessmentReportsDestination) &&
        Objects.equals(this.defaultProcessOwners, settings.defaultProcessOwners) &&
        Objects.equals(this.kmsKey, settings.kmsKey) &&
        Objects.equals(this.evidenceFinderEnablement, settings.evidenceFinderEnablement) &&
        Objects.equals(this.deregistrationPolicy, settings.deregistrationPolicy) &&
        Objects.equals(this.defaultExportDestination, settings.defaultExportDestination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isAwsOrgEnabled, snsTopic, defaultAssessmentReportsDestination, defaultProcessOwners, kmsKey, evidenceFinderEnablement, deregistrationPolicy, defaultExportDestination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Settings {\n");
    sb.append("    isAwsOrgEnabled: ").append(toIndentedString(isAwsOrgEnabled)).append("\n");
    sb.append("    snsTopic: ").append(toIndentedString(snsTopic)).append("\n");
    sb.append("    defaultAssessmentReportsDestination: ").append(toIndentedString(defaultAssessmentReportsDestination)).append("\n");
    sb.append("    defaultProcessOwners: ").append(toIndentedString(defaultProcessOwners)).append("\n");
    sb.append("    kmsKey: ").append(toIndentedString(kmsKey)).append("\n");
    sb.append("    evidenceFinderEnablement: ").append(toIndentedString(evidenceFinderEnablement)).append("\n");
    sb.append("    deregistrationPolicy: ").append(toIndentedString(deregistrationPolicy)).append("\n");
    sb.append("    defaultExportDestination: ").append(toIndentedString(defaultExportDestination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isAwsOrgEnabled");
    openapiFields.add("snsTopic");
    openapiFields.add("defaultAssessmentReportsDestination");
    openapiFields.add("defaultProcessOwners");
    openapiFields.add("kmsKey");
    openapiFields.add("evidenceFinderEnablement");
    openapiFields.add("deregistrationPolicy");
    openapiFields.add("defaultExportDestination");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Settings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Settings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Settings is not found in the empty JSON string", Settings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Settings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Settings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `isAwsOrgEnabled`
      if (jsonObj.get("isAwsOrgEnabled") != null && !jsonObj.get("isAwsOrgEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isAwsOrgEnabled"));
      }
      // validate the optional field `snsTopic`
      if (jsonObj.get("snsTopic") != null && !jsonObj.get("snsTopic").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("snsTopic"));
      }
      // validate the optional field `defaultAssessmentReportsDestination`
      if (jsonObj.get("defaultAssessmentReportsDestination") != null && !jsonObj.get("defaultAssessmentReportsDestination").isJsonNull()) {
        SettingsDefaultAssessmentReportsDestination.validateJsonElement(jsonObj.get("defaultAssessmentReportsDestination"));
      }
      // validate the optional field `defaultProcessOwners`
      if (jsonObj.get("defaultProcessOwners") != null && !jsonObj.get("defaultProcessOwners").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("defaultProcessOwners"));
      }
      // validate the optional field `kmsKey`
      if (jsonObj.get("kmsKey") != null && !jsonObj.get("kmsKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("kmsKey"));
      }
      // validate the optional field `evidenceFinderEnablement`
      if (jsonObj.get("evidenceFinderEnablement") != null && !jsonObj.get("evidenceFinderEnablement").isJsonNull()) {
        SettingsEvidenceFinderEnablement.validateJsonElement(jsonObj.get("evidenceFinderEnablement"));
      }
      // validate the optional field `deregistrationPolicy`
      if (jsonObj.get("deregistrationPolicy") != null && !jsonObj.get("deregistrationPolicy").isJsonNull()) {
        SettingsDeregistrationPolicy.validateJsonElement(jsonObj.get("deregistrationPolicy"));
      }
      // validate the optional field `defaultExportDestination`
      if (jsonObj.get("defaultExportDestination") != null && !jsonObj.get("defaultExportDestination").isJsonNull()) {
        SettingsDefaultExportDestination.validateJsonElement(jsonObj.get("defaultExportDestination"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Settings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Settings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Settings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Settings.class));

       return (TypeAdapter<T>) new TypeAdapter<Settings>() {
           @Override
           public void write(JsonWriter out, Settings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Settings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Settings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Settings
   * @throws IOException if the JSON string is invalid with respect to Settings
   */
  public static Settings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Settings.class);
  }

  /**
   * Convert an instance of Settings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

