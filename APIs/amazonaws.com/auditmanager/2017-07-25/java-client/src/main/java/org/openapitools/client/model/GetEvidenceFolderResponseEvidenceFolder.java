/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetEvidenceFolderResponseEvidenceFolder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetEvidenceFolderResponseEvidenceFolder {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_ASSESSMENT_ID = "assessmentId";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_ID)
  private String assessmentId;

  public static final String SERIALIZED_NAME_CONTROL_SET_ID = "controlSetId";
  @SerializedName(SERIALIZED_NAME_CONTROL_SET_ID)
  private String controlSetId;

  public static final String SERIALIZED_NAME_CONTROL_ID = "controlId";
  @SerializedName(SERIALIZED_NAME_CONTROL_ID)
  private String controlId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DATA_SOURCE = "dataSource";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE)
  private String dataSource;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_TOTAL_EVIDENCE = "totalEvidence";
  @SerializedName(SERIALIZED_NAME_TOTAL_EVIDENCE)
  private Integer totalEvidence;

  public static final String SERIALIZED_NAME_ASSESSMENT_REPORT_SELECTION_COUNT = "assessmentReportSelectionCount";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_REPORT_SELECTION_COUNT)
  private Integer assessmentReportSelectionCount;

  public static final String SERIALIZED_NAME_CONTROL_NAME = "controlName";
  @SerializedName(SERIALIZED_NAME_CONTROL_NAME)
  private String controlName;

  public static final String SERIALIZED_NAME_EVIDENCE_RESOURCES_INCLUDED_COUNT = "evidenceResourcesIncludedCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_RESOURCES_INCLUDED_COUNT)
  private Integer evidenceResourcesIncludedCount;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE_CONFIGURATION_DATA_COUNT = "evidenceByTypeConfigurationDataCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE_CONFIGURATION_DATA_COUNT)
  private Integer evidenceByTypeConfigurationDataCount;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE_MANUAL_COUNT = "evidenceByTypeManualCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE_MANUAL_COUNT)
  private Integer evidenceByTypeManualCount;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE_COMPLIANCE_CHECK_COUNT = "evidenceByTypeComplianceCheckCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE_COMPLIANCE_CHECK_COUNT)
  private Integer evidenceByTypeComplianceCheckCount;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE_COMPLIANCE_CHECK_ISSUES_COUNT = "evidenceByTypeComplianceCheckIssuesCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE_COMPLIANCE_CHECK_ISSUES_COUNT)
  private Integer evidenceByTypeComplianceCheckIssuesCount;

  public static final String SERIALIZED_NAME_EVIDENCE_BY_TYPE_USER_ACTIVITY_COUNT = "evidenceByTypeUserActivityCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_BY_TYPE_USER_ACTIVITY_COUNT)
  private Integer evidenceByTypeUserActivityCount;

  public static final String SERIALIZED_NAME_EVIDENCE_AWS_SERVICE_SOURCE_COUNT = "evidenceAwsServiceSourceCount";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_AWS_SERVICE_SOURCE_COUNT)
  private Integer evidenceAwsServiceSourceCount;

  public GetEvidenceFolderResponseEvidenceFolder() {
  }

  public GetEvidenceFolderResponseEvidenceFolder name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetEvidenceFolderResponseEvidenceFolder date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public GetEvidenceFolderResponseEvidenceFolder assessmentId(String assessmentId) {
    this.assessmentId = assessmentId;
    return this;
  }

  /**
   * Get assessmentId
   * @return assessmentId
   */
  @javax.annotation.Nullable
  public String getAssessmentId() {
    return assessmentId;
  }

  public void setAssessmentId(String assessmentId) {
    this.assessmentId = assessmentId;
  }


  public GetEvidenceFolderResponseEvidenceFolder controlSetId(String controlSetId) {
    this.controlSetId = controlSetId;
    return this;
  }

  /**
   * Get controlSetId
   * @return controlSetId
   */
  @javax.annotation.Nullable
  public String getControlSetId() {
    return controlSetId;
  }

  public void setControlSetId(String controlSetId) {
    this.controlSetId = controlSetId;
  }


  public GetEvidenceFolderResponseEvidenceFolder controlId(String controlId) {
    this.controlId = controlId;
    return this;
  }

  /**
   * Get controlId
   * @return controlId
   */
  @javax.annotation.Nullable
  public String getControlId() {
    return controlId;
  }

  public void setControlId(String controlId) {
    this.controlId = controlId;
  }


  public GetEvidenceFolderResponseEvidenceFolder id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetEvidenceFolderResponseEvidenceFolder dataSource(String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Get dataSource
   * @return dataSource
   */
  @javax.annotation.Nullable
  public String getDataSource() {
    return dataSource;
  }

  public void setDataSource(String dataSource) {
    this.dataSource = dataSource;
  }


  public GetEvidenceFolderResponseEvidenceFolder author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public GetEvidenceFolderResponseEvidenceFolder totalEvidence(Integer totalEvidence) {
    this.totalEvidence = totalEvidence;
    return this;
  }

  /**
   * Get totalEvidence
   * @return totalEvidence
   */
  @javax.annotation.Nullable
  public Integer getTotalEvidence() {
    return totalEvidence;
  }

  public void setTotalEvidence(Integer totalEvidence) {
    this.totalEvidence = totalEvidence;
  }


  public GetEvidenceFolderResponseEvidenceFolder assessmentReportSelectionCount(Integer assessmentReportSelectionCount) {
    this.assessmentReportSelectionCount = assessmentReportSelectionCount;
    return this;
  }

  /**
   * Get assessmentReportSelectionCount
   * @return assessmentReportSelectionCount
   */
  @javax.annotation.Nullable
  public Integer getAssessmentReportSelectionCount() {
    return assessmentReportSelectionCount;
  }

  public void setAssessmentReportSelectionCount(Integer assessmentReportSelectionCount) {
    this.assessmentReportSelectionCount = assessmentReportSelectionCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder controlName(String controlName) {
    this.controlName = controlName;
    return this;
  }

  /**
   * Get controlName
   * @return controlName
   */
  @javax.annotation.Nullable
  public String getControlName() {
    return controlName;
  }

  public void setControlName(String controlName) {
    this.controlName = controlName;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceResourcesIncludedCount(Integer evidenceResourcesIncludedCount) {
    this.evidenceResourcesIncludedCount = evidenceResourcesIncludedCount;
    return this;
  }

  /**
   * Get evidenceResourcesIncludedCount
   * @return evidenceResourcesIncludedCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceResourcesIncludedCount() {
    return evidenceResourcesIncludedCount;
  }

  public void setEvidenceResourcesIncludedCount(Integer evidenceResourcesIncludedCount) {
    this.evidenceResourcesIncludedCount = evidenceResourcesIncludedCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceByTypeConfigurationDataCount(Integer evidenceByTypeConfigurationDataCount) {
    this.evidenceByTypeConfigurationDataCount = evidenceByTypeConfigurationDataCount;
    return this;
  }

  /**
   * Get evidenceByTypeConfigurationDataCount
   * @return evidenceByTypeConfigurationDataCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceByTypeConfigurationDataCount() {
    return evidenceByTypeConfigurationDataCount;
  }

  public void setEvidenceByTypeConfigurationDataCount(Integer evidenceByTypeConfigurationDataCount) {
    this.evidenceByTypeConfigurationDataCount = evidenceByTypeConfigurationDataCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceByTypeManualCount(Integer evidenceByTypeManualCount) {
    this.evidenceByTypeManualCount = evidenceByTypeManualCount;
    return this;
  }

  /**
   * Get evidenceByTypeManualCount
   * @return evidenceByTypeManualCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceByTypeManualCount() {
    return evidenceByTypeManualCount;
  }

  public void setEvidenceByTypeManualCount(Integer evidenceByTypeManualCount) {
    this.evidenceByTypeManualCount = evidenceByTypeManualCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceByTypeComplianceCheckCount(Integer evidenceByTypeComplianceCheckCount) {
    this.evidenceByTypeComplianceCheckCount = evidenceByTypeComplianceCheckCount;
    return this;
  }

  /**
   * Get evidenceByTypeComplianceCheckCount
   * @return evidenceByTypeComplianceCheckCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceByTypeComplianceCheckCount() {
    return evidenceByTypeComplianceCheckCount;
  }

  public void setEvidenceByTypeComplianceCheckCount(Integer evidenceByTypeComplianceCheckCount) {
    this.evidenceByTypeComplianceCheckCount = evidenceByTypeComplianceCheckCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceByTypeComplianceCheckIssuesCount(Integer evidenceByTypeComplianceCheckIssuesCount) {
    this.evidenceByTypeComplianceCheckIssuesCount = evidenceByTypeComplianceCheckIssuesCount;
    return this;
  }

  /**
   * Get evidenceByTypeComplianceCheckIssuesCount
   * @return evidenceByTypeComplianceCheckIssuesCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceByTypeComplianceCheckIssuesCount() {
    return evidenceByTypeComplianceCheckIssuesCount;
  }

  public void setEvidenceByTypeComplianceCheckIssuesCount(Integer evidenceByTypeComplianceCheckIssuesCount) {
    this.evidenceByTypeComplianceCheckIssuesCount = evidenceByTypeComplianceCheckIssuesCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceByTypeUserActivityCount(Integer evidenceByTypeUserActivityCount) {
    this.evidenceByTypeUserActivityCount = evidenceByTypeUserActivityCount;
    return this;
  }

  /**
   * Get evidenceByTypeUserActivityCount
   * @return evidenceByTypeUserActivityCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceByTypeUserActivityCount() {
    return evidenceByTypeUserActivityCount;
  }

  public void setEvidenceByTypeUserActivityCount(Integer evidenceByTypeUserActivityCount) {
    this.evidenceByTypeUserActivityCount = evidenceByTypeUserActivityCount;
  }


  public GetEvidenceFolderResponseEvidenceFolder evidenceAwsServiceSourceCount(Integer evidenceAwsServiceSourceCount) {
    this.evidenceAwsServiceSourceCount = evidenceAwsServiceSourceCount;
    return this;
  }

  /**
   * Get evidenceAwsServiceSourceCount
   * @return evidenceAwsServiceSourceCount
   */
  @javax.annotation.Nullable
  public Integer getEvidenceAwsServiceSourceCount() {
    return evidenceAwsServiceSourceCount;
  }

  public void setEvidenceAwsServiceSourceCount(Integer evidenceAwsServiceSourceCount) {
    this.evidenceAwsServiceSourceCount = evidenceAwsServiceSourceCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEvidenceFolderResponseEvidenceFolder getEvidenceFolderResponseEvidenceFolder = (GetEvidenceFolderResponseEvidenceFolder) o;
    return Objects.equals(this.name, getEvidenceFolderResponseEvidenceFolder.name) &&
        Objects.equals(this.date, getEvidenceFolderResponseEvidenceFolder.date) &&
        Objects.equals(this.assessmentId, getEvidenceFolderResponseEvidenceFolder.assessmentId) &&
        Objects.equals(this.controlSetId, getEvidenceFolderResponseEvidenceFolder.controlSetId) &&
        Objects.equals(this.controlId, getEvidenceFolderResponseEvidenceFolder.controlId) &&
        Objects.equals(this.id, getEvidenceFolderResponseEvidenceFolder.id) &&
        Objects.equals(this.dataSource, getEvidenceFolderResponseEvidenceFolder.dataSource) &&
        Objects.equals(this.author, getEvidenceFolderResponseEvidenceFolder.author) &&
        Objects.equals(this.totalEvidence, getEvidenceFolderResponseEvidenceFolder.totalEvidence) &&
        Objects.equals(this.assessmentReportSelectionCount, getEvidenceFolderResponseEvidenceFolder.assessmentReportSelectionCount) &&
        Objects.equals(this.controlName, getEvidenceFolderResponseEvidenceFolder.controlName) &&
        Objects.equals(this.evidenceResourcesIncludedCount, getEvidenceFolderResponseEvidenceFolder.evidenceResourcesIncludedCount) &&
        Objects.equals(this.evidenceByTypeConfigurationDataCount, getEvidenceFolderResponseEvidenceFolder.evidenceByTypeConfigurationDataCount) &&
        Objects.equals(this.evidenceByTypeManualCount, getEvidenceFolderResponseEvidenceFolder.evidenceByTypeManualCount) &&
        Objects.equals(this.evidenceByTypeComplianceCheckCount, getEvidenceFolderResponseEvidenceFolder.evidenceByTypeComplianceCheckCount) &&
        Objects.equals(this.evidenceByTypeComplianceCheckIssuesCount, getEvidenceFolderResponseEvidenceFolder.evidenceByTypeComplianceCheckIssuesCount) &&
        Objects.equals(this.evidenceByTypeUserActivityCount, getEvidenceFolderResponseEvidenceFolder.evidenceByTypeUserActivityCount) &&
        Objects.equals(this.evidenceAwsServiceSourceCount, getEvidenceFolderResponseEvidenceFolder.evidenceAwsServiceSourceCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, date, assessmentId, controlSetId, controlId, id, dataSource, author, totalEvidence, assessmentReportSelectionCount, controlName, evidenceResourcesIncludedCount, evidenceByTypeConfigurationDataCount, evidenceByTypeManualCount, evidenceByTypeComplianceCheckCount, evidenceByTypeComplianceCheckIssuesCount, evidenceByTypeUserActivityCount, evidenceAwsServiceSourceCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEvidenceFolderResponseEvidenceFolder {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    assessmentId: ").append(toIndentedString(assessmentId)).append("\n");
    sb.append("    controlSetId: ").append(toIndentedString(controlSetId)).append("\n");
    sb.append("    controlId: ").append(toIndentedString(controlId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    totalEvidence: ").append(toIndentedString(totalEvidence)).append("\n");
    sb.append("    assessmentReportSelectionCount: ").append(toIndentedString(assessmentReportSelectionCount)).append("\n");
    sb.append("    controlName: ").append(toIndentedString(controlName)).append("\n");
    sb.append("    evidenceResourcesIncludedCount: ").append(toIndentedString(evidenceResourcesIncludedCount)).append("\n");
    sb.append("    evidenceByTypeConfigurationDataCount: ").append(toIndentedString(evidenceByTypeConfigurationDataCount)).append("\n");
    sb.append("    evidenceByTypeManualCount: ").append(toIndentedString(evidenceByTypeManualCount)).append("\n");
    sb.append("    evidenceByTypeComplianceCheckCount: ").append(toIndentedString(evidenceByTypeComplianceCheckCount)).append("\n");
    sb.append("    evidenceByTypeComplianceCheckIssuesCount: ").append(toIndentedString(evidenceByTypeComplianceCheckIssuesCount)).append("\n");
    sb.append("    evidenceByTypeUserActivityCount: ").append(toIndentedString(evidenceByTypeUserActivityCount)).append("\n");
    sb.append("    evidenceAwsServiceSourceCount: ").append(toIndentedString(evidenceAwsServiceSourceCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("date");
    openapiFields.add("assessmentId");
    openapiFields.add("controlSetId");
    openapiFields.add("controlId");
    openapiFields.add("id");
    openapiFields.add("dataSource");
    openapiFields.add("author");
    openapiFields.add("totalEvidence");
    openapiFields.add("assessmentReportSelectionCount");
    openapiFields.add("controlName");
    openapiFields.add("evidenceResourcesIncludedCount");
    openapiFields.add("evidenceByTypeConfigurationDataCount");
    openapiFields.add("evidenceByTypeManualCount");
    openapiFields.add("evidenceByTypeComplianceCheckCount");
    openapiFields.add("evidenceByTypeComplianceCheckIssuesCount");
    openapiFields.add("evidenceByTypeUserActivityCount");
    openapiFields.add("evidenceAwsServiceSourceCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetEvidenceFolderResponseEvidenceFolder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetEvidenceFolderResponseEvidenceFolder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetEvidenceFolderResponseEvidenceFolder is not found in the empty JSON string", GetEvidenceFolderResponseEvidenceFolder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetEvidenceFolderResponseEvidenceFolder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetEvidenceFolderResponseEvidenceFolder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `date`
      if (jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("date"));
      }
      // validate the optional field `assessmentId`
      if (jsonObj.get("assessmentId") != null && !jsonObj.get("assessmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assessmentId"));
      }
      // validate the optional field `controlSetId`
      if (jsonObj.get("controlSetId") != null && !jsonObj.get("controlSetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("controlSetId"));
      }
      // validate the optional field `controlId`
      if (jsonObj.get("controlId") != null && !jsonObj.get("controlId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("controlId"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `dataSource`
      if (jsonObj.get("dataSource") != null && !jsonObj.get("dataSource").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dataSource"));
      }
      // validate the optional field `author`
      if (jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("author"));
      }
      // validate the optional field `totalEvidence`
      if (jsonObj.get("totalEvidence") != null && !jsonObj.get("totalEvidence").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalEvidence"));
      }
      // validate the optional field `assessmentReportSelectionCount`
      if (jsonObj.get("assessmentReportSelectionCount") != null && !jsonObj.get("assessmentReportSelectionCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("assessmentReportSelectionCount"));
      }
      // validate the optional field `controlName`
      if (jsonObj.get("controlName") != null && !jsonObj.get("controlName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("controlName"));
      }
      // validate the optional field `evidenceResourcesIncludedCount`
      if (jsonObj.get("evidenceResourcesIncludedCount") != null && !jsonObj.get("evidenceResourcesIncludedCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceResourcesIncludedCount"));
      }
      // validate the optional field `evidenceByTypeConfigurationDataCount`
      if (jsonObj.get("evidenceByTypeConfigurationDataCount") != null && !jsonObj.get("evidenceByTypeConfigurationDataCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceByTypeConfigurationDataCount"));
      }
      // validate the optional field `evidenceByTypeManualCount`
      if (jsonObj.get("evidenceByTypeManualCount") != null && !jsonObj.get("evidenceByTypeManualCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceByTypeManualCount"));
      }
      // validate the optional field `evidenceByTypeComplianceCheckCount`
      if (jsonObj.get("evidenceByTypeComplianceCheckCount") != null && !jsonObj.get("evidenceByTypeComplianceCheckCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceByTypeComplianceCheckCount"));
      }
      // validate the optional field `evidenceByTypeComplianceCheckIssuesCount`
      if (jsonObj.get("evidenceByTypeComplianceCheckIssuesCount") != null && !jsonObj.get("evidenceByTypeComplianceCheckIssuesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceByTypeComplianceCheckIssuesCount"));
      }
      // validate the optional field `evidenceByTypeUserActivityCount`
      if (jsonObj.get("evidenceByTypeUserActivityCount") != null && !jsonObj.get("evidenceByTypeUserActivityCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceByTypeUserActivityCount"));
      }
      // validate the optional field `evidenceAwsServiceSourceCount`
      if (jsonObj.get("evidenceAwsServiceSourceCount") != null && !jsonObj.get("evidenceAwsServiceSourceCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("evidenceAwsServiceSourceCount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetEvidenceFolderResponseEvidenceFolder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetEvidenceFolderResponseEvidenceFolder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetEvidenceFolderResponseEvidenceFolder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetEvidenceFolderResponseEvidenceFolder.class));

       return (TypeAdapter<T>) new TypeAdapter<GetEvidenceFolderResponseEvidenceFolder>() {
           @Override
           public void write(JsonWriter out, GetEvidenceFolderResponseEvidenceFolder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetEvidenceFolderResponseEvidenceFolder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetEvidenceFolderResponseEvidenceFolder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetEvidenceFolderResponseEvidenceFolder
   * @throws IOException if the JSON string is invalid with respect to GetEvidenceFolderResponseEvidenceFolder
   */
  public static GetEvidenceFolderResponseEvidenceFolder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetEvidenceFolderResponseEvidenceFolder.class);
  }

  /**
   * Convert an instance of GetEvidenceFolderResponseEvidenceFolder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

