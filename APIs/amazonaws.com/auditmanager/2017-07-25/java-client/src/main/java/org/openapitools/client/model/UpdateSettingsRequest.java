/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAssessmentRequestAssessmentReportsDestination;
import org.openapitools.client.model.Role;
import org.openapitools.client.model.UpdateSettingsRequestDefaultExportDestination;
import org.openapitools.client.model.UpdateSettingsRequestDeregistrationPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSettingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSettingsRequest {
  public static final String SERIALIZED_NAME_SNS_TOPIC = "snsTopic";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC)
  private String snsTopic;

  public static final String SERIALIZED_NAME_DEFAULT_ASSESSMENT_REPORTS_DESTINATION = "defaultAssessmentReportsDestination";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ASSESSMENT_REPORTS_DESTINATION)
  private CreateAssessmentRequestAssessmentReportsDestination defaultAssessmentReportsDestination;

  public static final String SERIALIZED_NAME_DEFAULT_PROCESS_OWNERS = "defaultProcessOwners";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PROCESS_OWNERS)
  private List<Role> defaultProcessOwners = new ArrayList<>();

  public static final String SERIALIZED_NAME_KMS_KEY = "kmsKey";
  @SerializedName(SERIALIZED_NAME_KMS_KEY)
  private String kmsKey;

  public static final String SERIALIZED_NAME_EVIDENCE_FINDER_ENABLED = "evidenceFinderEnabled";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_FINDER_ENABLED)
  private Boolean evidenceFinderEnabled;

  public static final String SERIALIZED_NAME_DEREGISTRATION_POLICY = "deregistrationPolicy";
  @SerializedName(SERIALIZED_NAME_DEREGISTRATION_POLICY)
  private UpdateSettingsRequestDeregistrationPolicy deregistrationPolicy;

  public static final String SERIALIZED_NAME_DEFAULT_EXPORT_DESTINATION = "defaultExportDestination";
  @SerializedName(SERIALIZED_NAME_DEFAULT_EXPORT_DESTINATION)
  private UpdateSettingsRequestDefaultExportDestination defaultExportDestination;

  public UpdateSettingsRequest() {
  }

  public UpdateSettingsRequest snsTopic(String snsTopic) {
    this.snsTopic = snsTopic;
    return this;
  }

  /**
   *  The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. 
   * @return snsTopic
   */
  @javax.annotation.Nullable
  public String getSnsTopic() {
    return snsTopic;
  }

  public void setSnsTopic(String snsTopic) {
    this.snsTopic = snsTopic;
  }


  public UpdateSettingsRequest defaultAssessmentReportsDestination(CreateAssessmentRequestAssessmentReportsDestination defaultAssessmentReportsDestination) {
    this.defaultAssessmentReportsDestination = defaultAssessmentReportsDestination;
    return this;
  }

  /**
   * Get defaultAssessmentReportsDestination
   * @return defaultAssessmentReportsDestination
   */
  @javax.annotation.Nullable
  public CreateAssessmentRequestAssessmentReportsDestination getDefaultAssessmentReportsDestination() {
    return defaultAssessmentReportsDestination;
  }

  public void setDefaultAssessmentReportsDestination(CreateAssessmentRequestAssessmentReportsDestination defaultAssessmentReportsDestination) {
    this.defaultAssessmentReportsDestination = defaultAssessmentReportsDestination;
  }


  public UpdateSettingsRequest defaultProcessOwners(List<Role> defaultProcessOwners) {
    this.defaultProcessOwners = defaultProcessOwners;
    return this;
  }

  public UpdateSettingsRequest addDefaultProcessOwnersItem(Role defaultProcessOwnersItem) {
    if (this.defaultProcessOwners == null) {
      this.defaultProcessOwners = new ArrayList<>();
    }
    this.defaultProcessOwners.add(defaultProcessOwnersItem);
    return this;
  }

  /**
   *  A list of the default audit owners. 
   * @return defaultProcessOwners
   */
  @javax.annotation.Nullable
  public List<Role> getDefaultProcessOwners() {
    return defaultProcessOwners;
  }

  public void setDefaultProcessOwners(List<Role> defaultProcessOwners) {
    this.defaultProcessOwners = defaultProcessOwners;
  }


  public UpdateSettingsRequest kmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   *  The KMS key details. 
   * @return kmsKey
   */
  @javax.annotation.Nullable
  public String getKmsKey() {
    return kmsKey;
  }

  public void setKmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
  }


  public UpdateSettingsRequest evidenceFinderEnabled(Boolean evidenceFinderEnabled) {
    this.evidenceFinderEnabled = evidenceFinderEnabled;
    return this;
  }

  /**
   * &lt;p&gt;Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.&lt;/p&gt; &lt;important&gt; &lt;p&gt;When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html\&quot;&gt;deregister&lt;/a&gt; and then &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html\&quot;&gt;re-register&lt;/a&gt; Audit Manager. &lt;/p&gt; &lt;/important&gt;
   * @return evidenceFinderEnabled
   */
  @javax.annotation.Nullable
  public Boolean getEvidenceFinderEnabled() {
    return evidenceFinderEnabled;
  }

  public void setEvidenceFinderEnabled(Boolean evidenceFinderEnabled) {
    this.evidenceFinderEnabled = evidenceFinderEnabled;
  }


  public UpdateSettingsRequest deregistrationPolicy(UpdateSettingsRequestDeregistrationPolicy deregistrationPolicy) {
    this.deregistrationPolicy = deregistrationPolicy;
    return this;
  }

  /**
   * Get deregistrationPolicy
   * @return deregistrationPolicy
   */
  @javax.annotation.Nullable
  public UpdateSettingsRequestDeregistrationPolicy getDeregistrationPolicy() {
    return deregistrationPolicy;
  }

  public void setDeregistrationPolicy(UpdateSettingsRequestDeregistrationPolicy deregistrationPolicy) {
    this.deregistrationPolicy = deregistrationPolicy;
  }


  public UpdateSettingsRequest defaultExportDestination(UpdateSettingsRequestDefaultExportDestination defaultExportDestination) {
    this.defaultExportDestination = defaultExportDestination;
    return this;
  }

  /**
   * Get defaultExportDestination
   * @return defaultExportDestination
   */
  @javax.annotation.Nullable
  public UpdateSettingsRequestDefaultExportDestination getDefaultExportDestination() {
    return defaultExportDestination;
  }

  public void setDefaultExportDestination(UpdateSettingsRequestDefaultExportDestination defaultExportDestination) {
    this.defaultExportDestination = defaultExportDestination;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSettingsRequest updateSettingsRequest = (UpdateSettingsRequest) o;
    return Objects.equals(this.snsTopic, updateSettingsRequest.snsTopic) &&
        Objects.equals(this.defaultAssessmentReportsDestination, updateSettingsRequest.defaultAssessmentReportsDestination) &&
        Objects.equals(this.defaultProcessOwners, updateSettingsRequest.defaultProcessOwners) &&
        Objects.equals(this.kmsKey, updateSettingsRequest.kmsKey) &&
        Objects.equals(this.evidenceFinderEnabled, updateSettingsRequest.evidenceFinderEnabled) &&
        Objects.equals(this.deregistrationPolicy, updateSettingsRequest.deregistrationPolicy) &&
        Objects.equals(this.defaultExportDestination, updateSettingsRequest.defaultExportDestination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snsTopic, defaultAssessmentReportsDestination, defaultProcessOwners, kmsKey, evidenceFinderEnabled, deregistrationPolicy, defaultExportDestination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSettingsRequest {\n");
    sb.append("    snsTopic: ").append(toIndentedString(snsTopic)).append("\n");
    sb.append("    defaultAssessmentReportsDestination: ").append(toIndentedString(defaultAssessmentReportsDestination)).append("\n");
    sb.append("    defaultProcessOwners: ").append(toIndentedString(defaultProcessOwners)).append("\n");
    sb.append("    kmsKey: ").append(toIndentedString(kmsKey)).append("\n");
    sb.append("    evidenceFinderEnabled: ").append(toIndentedString(evidenceFinderEnabled)).append("\n");
    sb.append("    deregistrationPolicy: ").append(toIndentedString(deregistrationPolicy)).append("\n");
    sb.append("    defaultExportDestination: ").append(toIndentedString(defaultExportDestination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("snsTopic");
    openapiFields.add("defaultAssessmentReportsDestination");
    openapiFields.add("defaultProcessOwners");
    openapiFields.add("kmsKey");
    openapiFields.add("evidenceFinderEnabled");
    openapiFields.add("deregistrationPolicy");
    openapiFields.add("defaultExportDestination");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSettingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSettingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSettingsRequest is not found in the empty JSON string", UpdateSettingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSettingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSettingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("snsTopic") != null && !jsonObj.get("snsTopic").isJsonNull()) && !jsonObj.get("snsTopic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `snsTopic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("snsTopic").toString()));
      }
      // validate the optional field `defaultAssessmentReportsDestination`
      if (jsonObj.get("defaultAssessmentReportsDestination") != null && !jsonObj.get("defaultAssessmentReportsDestination").isJsonNull()) {
        CreateAssessmentRequestAssessmentReportsDestination.validateJsonElement(jsonObj.get("defaultAssessmentReportsDestination"));
      }
      if (jsonObj.get("defaultProcessOwners") != null && !jsonObj.get("defaultProcessOwners").isJsonNull()) {
        JsonArray jsonArraydefaultProcessOwners = jsonObj.getAsJsonArray("defaultProcessOwners");
        if (jsonArraydefaultProcessOwners != null) {
          // ensure the json data is an array
          if (!jsonObj.get("defaultProcessOwners").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `defaultProcessOwners` to be an array in the JSON string but got `%s`", jsonObj.get("defaultProcessOwners").toString()));
          }

          // validate the optional field `defaultProcessOwners` (array)
          for (int i = 0; i < jsonArraydefaultProcessOwners.size(); i++) {
            Role.validateJsonElement(jsonArraydefaultProcessOwners.get(i));
          };
        }
      }
      if ((jsonObj.get("kmsKey") != null && !jsonObj.get("kmsKey").isJsonNull()) && !jsonObj.get("kmsKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kmsKey").toString()));
      }
      // validate the optional field `deregistrationPolicy`
      if (jsonObj.get("deregistrationPolicy") != null && !jsonObj.get("deregistrationPolicy").isJsonNull()) {
        UpdateSettingsRequestDeregistrationPolicy.validateJsonElement(jsonObj.get("deregistrationPolicy"));
      }
      // validate the optional field `defaultExportDestination`
      if (jsonObj.get("defaultExportDestination") != null && !jsonObj.get("defaultExportDestination").isJsonNull()) {
        UpdateSettingsRequestDefaultExportDestination.validateJsonElement(jsonObj.get("defaultExportDestination"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSettingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSettingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSettingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSettingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSettingsRequest>() {
           @Override
           public void write(JsonWriter out, UpdateSettingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSettingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSettingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSettingsRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateSettingsRequest
   */
  public static UpdateSettingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSettingsRequest.class);
  }

  /**
   * Convert an instance of UpdateSettingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

