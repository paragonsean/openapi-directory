/*
 * AWS Audit Manager
 * <p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BatchAssociateAssessmentReportEvidenceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:17.469617-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchAssociateAssessmentReportEvidenceRequest {
  public static final String SERIALIZED_NAME_EVIDENCE_FOLDER_ID = "evidenceFolderId";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_FOLDER_ID)
  private String evidenceFolderId;

  public static final String SERIALIZED_NAME_EVIDENCE_IDS = "evidenceIds";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_IDS)
  private List<String> evidenceIds = new ArrayList<>();

  public BatchAssociateAssessmentReportEvidenceRequest() {
  }

  public BatchAssociateAssessmentReportEvidenceRequest evidenceFolderId(String evidenceFolderId) {
    this.evidenceFolderId = evidenceFolderId;
    return this;
  }

  /**
   *  The identifier for the folder that the evidence is stored in. 
   * @return evidenceFolderId
   */
  @javax.annotation.Nonnull
  public String getEvidenceFolderId() {
    return evidenceFolderId;
  }

  public void setEvidenceFolderId(String evidenceFolderId) {
    this.evidenceFolderId = evidenceFolderId;
  }


  public BatchAssociateAssessmentReportEvidenceRequest evidenceIds(List<String> evidenceIds) {
    this.evidenceIds = evidenceIds;
    return this;
  }

  public BatchAssociateAssessmentReportEvidenceRequest addEvidenceIdsItem(String evidenceIdsItem) {
    if (this.evidenceIds == null) {
      this.evidenceIds = new ArrayList<>();
    }
    this.evidenceIds.add(evidenceIdsItem);
    return this;
  }

  /**
   *  The list of evidence identifiers. 
   * @return evidenceIds
   */
  @javax.annotation.Nonnull
  public List<String> getEvidenceIds() {
    return evidenceIds;
  }

  public void setEvidenceIds(List<String> evidenceIds) {
    this.evidenceIds = evidenceIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchAssociateAssessmentReportEvidenceRequest batchAssociateAssessmentReportEvidenceRequest = (BatchAssociateAssessmentReportEvidenceRequest) o;
    return Objects.equals(this.evidenceFolderId, batchAssociateAssessmentReportEvidenceRequest.evidenceFolderId) &&
        Objects.equals(this.evidenceIds, batchAssociateAssessmentReportEvidenceRequest.evidenceIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evidenceFolderId, evidenceIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchAssociateAssessmentReportEvidenceRequest {\n");
    sb.append("    evidenceFolderId: ").append(toIndentedString(evidenceFolderId)).append("\n");
    sb.append("    evidenceIds: ").append(toIndentedString(evidenceIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("evidenceFolderId");
    openapiFields.add("evidenceIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("evidenceFolderId");
    openapiRequiredFields.add("evidenceIds");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchAssociateAssessmentReportEvidenceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchAssociateAssessmentReportEvidenceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchAssociateAssessmentReportEvidenceRequest is not found in the empty JSON string", BatchAssociateAssessmentReportEvidenceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchAssociateAssessmentReportEvidenceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchAssociateAssessmentReportEvidenceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BatchAssociateAssessmentReportEvidenceRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("evidenceFolderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evidenceFolderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evidenceFolderId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("evidenceIds") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("evidenceIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `evidenceIds` to be an array in the JSON string but got `%s`", jsonObj.get("evidenceIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchAssociateAssessmentReportEvidenceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchAssociateAssessmentReportEvidenceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchAssociateAssessmentReportEvidenceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchAssociateAssessmentReportEvidenceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchAssociateAssessmentReportEvidenceRequest>() {
           @Override
           public void write(JsonWriter out, BatchAssociateAssessmentReportEvidenceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchAssociateAssessmentReportEvidenceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchAssociateAssessmentReportEvidenceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchAssociateAssessmentReportEvidenceRequest
   * @throws IOException if the JSON string is invalid with respect to BatchAssociateAssessmentReportEvidenceRequest
   */
  public static BatchAssociateAssessmentReportEvidenceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchAssociateAssessmentReportEvidenceRequest.class);
  }

  /**
   * Convert an instance of BatchAssociateAssessmentReportEvidenceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

