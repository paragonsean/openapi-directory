/*
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnvironmentDescriptionResources;
import org.openapitools.client.model.EnvironmentDescriptionTier;
import org.openapitools.client.model.EnvironmentHealth;
import org.openapitools.client.model.EnvironmentHealthStatus;
import org.openapitools.client.model.EnvironmentStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the properties of an environment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:45.656965-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnvironmentDescription {
  public static final String SERIALIZED_NAME_ENVIRONMENT_NAME = "EnvironmentName";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_NAME)
  private String environmentName;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "EnvironmentId";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_APPLICATION_NAME = "ApplicationName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_NAME)
  private String applicationName;

  public static final String SERIALIZED_NAME_VERSION_LABEL = "VersionLabel";
  @SerializedName(SERIALIZED_NAME_VERSION_LABEL)
  private String versionLabel;

  public static final String SERIALIZED_NAME_SOLUTION_STACK_NAME = "SolutionStackName";
  @SerializedName(SERIALIZED_NAME_SOLUTION_STACK_NAME)
  private String solutionStackName;

  public static final String SERIALIZED_NAME_PLATFORM_ARN = "PlatformArn";
  @SerializedName(SERIALIZED_NAME_PLATFORM_ARN)
  private String platformArn;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "TemplateName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENDPOINT_U_R_L = "EndpointURL";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_U_R_L)
  private String endpointURL;

  public static final String SERIALIZED_NAME_C_N_A_M_E = "CNAME";
  @SerializedName(SERIALIZED_NAME_C_N_A_M_E)
  private String CNAME;

  public static final String SERIALIZED_NAME_DATE_CREATED = "DateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "DateUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EnvironmentStatus status;

  public static final String SERIALIZED_NAME_ABORTABLE_OPERATION_IN_PROGRESS = "AbortableOperationInProgress";
  @SerializedName(SERIALIZED_NAME_ABORTABLE_OPERATION_IN_PROGRESS)
  private Boolean abortableOperationInProgress;

  public static final String SERIALIZED_NAME_HEALTH = "Health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private EnvironmentHealth health;

  public static final String SERIALIZED_NAME_HEALTH_STATUS = "HealthStatus";
  @SerializedName(SERIALIZED_NAME_HEALTH_STATUS)
  private EnvironmentHealthStatus healthStatus;

  public static final String SERIALIZED_NAME_RESOURCES = "Resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private EnvironmentDescriptionResources resources;

  public static final String SERIALIZED_NAME_TIER = "Tier";
  @SerializedName(SERIALIZED_NAME_TIER)
  private EnvironmentDescriptionTier tier;

  public static final String SERIALIZED_NAME_ENVIRONMENT_LINKS = "EnvironmentLinks";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_LINKS)
  private List environmentLinks;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ARN = "EnvironmentArn";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ARN)
  private String environmentArn;

  public static final String SERIALIZED_NAME_OPERATIONS_ROLE = "OperationsRole";
  @SerializedName(SERIALIZED_NAME_OPERATIONS_ROLE)
  private String operationsRole;

  public EnvironmentDescription() {
  }

  public EnvironmentDescription environmentName(String environmentName) {
    this.environmentName = environmentName;
    return this;
  }

  /**
   * Get environmentName
   * @return environmentName
   */
  @javax.annotation.Nullable
  public String getEnvironmentName() {
    return environmentName;
  }

  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public EnvironmentDescription environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Get environmentId
   * @return environmentId
   */
  @javax.annotation.Nullable
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public EnvironmentDescription applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

  /**
   * Get applicationName
   * @return applicationName
   */
  @javax.annotation.Nullable
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  public EnvironmentDescription versionLabel(String versionLabel) {
    this.versionLabel = versionLabel;
    return this;
  }

  /**
   * Get versionLabel
   * @return versionLabel
   */
  @javax.annotation.Nullable
  public String getVersionLabel() {
    return versionLabel;
  }

  public void setVersionLabel(String versionLabel) {
    this.versionLabel = versionLabel;
  }


  public EnvironmentDescription solutionStackName(String solutionStackName) {
    this.solutionStackName = solutionStackName;
    return this;
  }

  /**
   * Get solutionStackName
   * @return solutionStackName
   */
  @javax.annotation.Nullable
  public String getSolutionStackName() {
    return solutionStackName;
  }

  public void setSolutionStackName(String solutionStackName) {
    this.solutionStackName = solutionStackName;
  }


  public EnvironmentDescription platformArn(String platformArn) {
    this.platformArn = platformArn;
    return this;
  }

  /**
   * Get platformArn
   * @return platformArn
   */
  @javax.annotation.Nullable
  public String getPlatformArn() {
    return platformArn;
  }

  public void setPlatformArn(String platformArn) {
    this.platformArn = platformArn;
  }


  public EnvironmentDescription templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

  /**
   * Get templateName
   * @return templateName
   */
  @javax.annotation.Nullable
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public EnvironmentDescription description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public EnvironmentDescription endpointURL(String endpointURL) {
    this.endpointURL = endpointURL;
    return this;
  }

  /**
   * Get endpointURL
   * @return endpointURL
   */
  @javax.annotation.Nullable
  public String getEndpointURL() {
    return endpointURL;
  }

  public void setEndpointURL(String endpointURL) {
    this.endpointURL = endpointURL;
  }


  public EnvironmentDescription CNAME(String CNAME) {
    this.CNAME = CNAME;
    return this;
  }

  /**
   * Get CNAME
   * @return CNAME
   */
  @javax.annotation.Nullable
  public String getCNAME() {
    return CNAME;
  }

  public void setCNAME(String CNAME) {
    this.CNAME = CNAME;
  }


  public EnvironmentDescription dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public EnvironmentDescription dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * Get dateUpdated
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public EnvironmentDescription status(EnvironmentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EnvironmentStatus getStatus() {
    return status;
  }

  public void setStatus(EnvironmentStatus status) {
    this.status = status;
  }


  public EnvironmentDescription abortableOperationInProgress(Boolean abortableOperationInProgress) {
    this.abortableOperationInProgress = abortableOperationInProgress;
    return this;
  }

  /**
   * Get abortableOperationInProgress
   * @return abortableOperationInProgress
   */
  @javax.annotation.Nullable
  public Boolean getAbortableOperationInProgress() {
    return abortableOperationInProgress;
  }

  public void setAbortableOperationInProgress(Boolean abortableOperationInProgress) {
    this.abortableOperationInProgress = abortableOperationInProgress;
  }


  public EnvironmentDescription health(EnvironmentHealth health) {
    this.health = health;
    return this;
  }

  /**
   * Get health
   * @return health
   */
  @javax.annotation.Nullable
  public EnvironmentHealth getHealth() {
    return health;
  }

  public void setHealth(EnvironmentHealth health) {
    this.health = health;
  }


  public EnvironmentDescription healthStatus(EnvironmentHealthStatus healthStatus) {
    this.healthStatus = healthStatus;
    return this;
  }

  /**
   * Get healthStatus
   * @return healthStatus
   */
  @javax.annotation.Nullable
  public EnvironmentHealthStatus getHealthStatus() {
    return healthStatus;
  }

  public void setHealthStatus(EnvironmentHealthStatus healthStatus) {
    this.healthStatus = healthStatus;
  }


  public EnvironmentDescription resources(EnvironmentDescriptionResources resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public EnvironmentDescriptionResources getResources() {
    return resources;
  }

  public void setResources(EnvironmentDescriptionResources resources) {
    this.resources = resources;
  }


  public EnvironmentDescription tier(EnvironmentDescriptionTier tier) {
    this.tier = tier;
    return this;
  }

  /**
   * Get tier
   * @return tier
   */
  @javax.annotation.Nullable
  public EnvironmentDescriptionTier getTier() {
    return tier;
  }

  public void setTier(EnvironmentDescriptionTier tier) {
    this.tier = tier;
  }


  public EnvironmentDescription environmentLinks(List environmentLinks) {
    this.environmentLinks = environmentLinks;
    return this;
  }

  /**
   * Get environmentLinks
   * @return environmentLinks
   */
  @javax.annotation.Nullable
  public List getEnvironmentLinks() {
    return environmentLinks;
  }

  public void setEnvironmentLinks(List environmentLinks) {
    this.environmentLinks = environmentLinks;
  }


  public EnvironmentDescription environmentArn(String environmentArn) {
    this.environmentArn = environmentArn;
    return this;
  }

  /**
   * Get environmentArn
   * @return environmentArn
   */
  @javax.annotation.Nullable
  public String getEnvironmentArn() {
    return environmentArn;
  }

  public void setEnvironmentArn(String environmentArn) {
    this.environmentArn = environmentArn;
  }


  public EnvironmentDescription operationsRole(String operationsRole) {
    this.operationsRole = operationsRole;
    return this;
  }

  /**
   * Get operationsRole
   * @return operationsRole
   */
  @javax.annotation.Nullable
  public String getOperationsRole() {
    return operationsRole;
  }

  public void setOperationsRole(String operationsRole) {
    this.operationsRole = operationsRole;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentDescription environmentDescription = (EnvironmentDescription) o;
    return Objects.equals(this.environmentName, environmentDescription.environmentName) &&
        Objects.equals(this.environmentId, environmentDescription.environmentId) &&
        Objects.equals(this.applicationName, environmentDescription.applicationName) &&
        Objects.equals(this.versionLabel, environmentDescription.versionLabel) &&
        Objects.equals(this.solutionStackName, environmentDescription.solutionStackName) &&
        Objects.equals(this.platformArn, environmentDescription.platformArn) &&
        Objects.equals(this.templateName, environmentDescription.templateName) &&
        Objects.equals(this.description, environmentDescription.description) &&
        Objects.equals(this.endpointURL, environmentDescription.endpointURL) &&
        Objects.equals(this.CNAME, environmentDescription.CNAME) &&
        Objects.equals(this.dateCreated, environmentDescription.dateCreated) &&
        Objects.equals(this.dateUpdated, environmentDescription.dateUpdated) &&
        Objects.equals(this.status, environmentDescription.status) &&
        Objects.equals(this.abortableOperationInProgress, environmentDescription.abortableOperationInProgress) &&
        Objects.equals(this.health, environmentDescription.health) &&
        Objects.equals(this.healthStatus, environmentDescription.healthStatus) &&
        Objects.equals(this.resources, environmentDescription.resources) &&
        Objects.equals(this.tier, environmentDescription.tier) &&
        Objects.equals(this.environmentLinks, environmentDescription.environmentLinks) &&
        Objects.equals(this.environmentArn, environmentDescription.environmentArn) &&
        Objects.equals(this.operationsRole, environmentDescription.operationsRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentName, environmentId, applicationName, versionLabel, solutionStackName, platformArn, templateName, description, endpointURL, CNAME, dateCreated, dateUpdated, status, abortableOperationInProgress, health, healthStatus, resources, tier, environmentLinks, environmentArn, operationsRole);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentDescription {\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    versionLabel: ").append(toIndentedString(versionLabel)).append("\n");
    sb.append("    solutionStackName: ").append(toIndentedString(solutionStackName)).append("\n");
    sb.append("    platformArn: ").append(toIndentedString(platformArn)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endpointURL: ").append(toIndentedString(endpointURL)).append("\n");
    sb.append("    CNAME: ").append(toIndentedString(CNAME)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    abortableOperationInProgress: ").append(toIndentedString(abortableOperationInProgress)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    healthStatus: ").append(toIndentedString(healthStatus)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    environmentLinks: ").append(toIndentedString(environmentLinks)).append("\n");
    sb.append("    environmentArn: ").append(toIndentedString(environmentArn)).append("\n");
    sb.append("    operationsRole: ").append(toIndentedString(operationsRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EnvironmentName");
    openapiFields.add("EnvironmentId");
    openapiFields.add("ApplicationName");
    openapiFields.add("VersionLabel");
    openapiFields.add("SolutionStackName");
    openapiFields.add("PlatformArn");
    openapiFields.add("TemplateName");
    openapiFields.add("Description");
    openapiFields.add("EndpointURL");
    openapiFields.add("CNAME");
    openapiFields.add("DateCreated");
    openapiFields.add("DateUpdated");
    openapiFields.add("Status");
    openapiFields.add("AbortableOperationInProgress");
    openapiFields.add("Health");
    openapiFields.add("HealthStatus");
    openapiFields.add("Resources");
    openapiFields.add("Tier");
    openapiFields.add("EnvironmentLinks");
    openapiFields.add("EnvironmentArn");
    openapiFields.add("OperationsRole");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnvironmentDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnvironmentDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnvironmentDescription is not found in the empty JSON string", EnvironmentDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnvironmentDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnvironmentDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EnvironmentName`
      if (jsonObj.get("EnvironmentName") != null && !jsonObj.get("EnvironmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnvironmentName"));
      }
      // validate the optional field `EnvironmentId`
      if (jsonObj.get("EnvironmentId") != null && !jsonObj.get("EnvironmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnvironmentId"));
      }
      // validate the optional field `ApplicationName`
      if (jsonObj.get("ApplicationName") != null && !jsonObj.get("ApplicationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationName"));
      }
      // validate the optional field `VersionLabel`
      if (jsonObj.get("VersionLabel") != null && !jsonObj.get("VersionLabel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VersionLabel"));
      }
      // validate the optional field `SolutionStackName`
      if (jsonObj.get("SolutionStackName") != null && !jsonObj.get("SolutionStackName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SolutionStackName"));
      }
      // validate the optional field `PlatformArn`
      if (jsonObj.get("PlatformArn") != null && !jsonObj.get("PlatformArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlatformArn"));
      }
      // validate the optional field `TemplateName`
      if (jsonObj.get("TemplateName") != null && !jsonObj.get("TemplateName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TemplateName"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `EndpointURL`
      if (jsonObj.get("EndpointURL") != null && !jsonObj.get("EndpointURL").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointURL"));
      }
      // validate the optional field `CNAME`
      if (jsonObj.get("CNAME") != null && !jsonObj.get("CNAME").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CNAME"));
      }
      // validate the optional field `DateCreated`
      if (jsonObj.get("DateCreated") != null && !jsonObj.get("DateCreated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DateCreated"));
      }
      // validate the optional field `DateUpdated`
      if (jsonObj.get("DateUpdated") != null && !jsonObj.get("DateUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DateUpdated"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        EnvironmentStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `AbortableOperationInProgress`
      if (jsonObj.get("AbortableOperationInProgress") != null && !jsonObj.get("AbortableOperationInProgress").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AbortableOperationInProgress"));
      }
      // validate the optional field `Health`
      if (jsonObj.get("Health") != null && !jsonObj.get("Health").isJsonNull()) {
        EnvironmentHealth.validateJsonElement(jsonObj.get("Health"));
      }
      // validate the optional field `HealthStatus`
      if (jsonObj.get("HealthStatus") != null && !jsonObj.get("HealthStatus").isJsonNull()) {
        EnvironmentHealthStatus.validateJsonElement(jsonObj.get("HealthStatus"));
      }
      // validate the optional field `Resources`
      if (jsonObj.get("Resources") != null && !jsonObj.get("Resources").isJsonNull()) {
        EnvironmentDescriptionResources.validateJsonElement(jsonObj.get("Resources"));
      }
      // validate the optional field `Tier`
      if (jsonObj.get("Tier") != null && !jsonObj.get("Tier").isJsonNull()) {
        EnvironmentDescriptionTier.validateJsonElement(jsonObj.get("Tier"));
      }
      // validate the optional field `EnvironmentLinks`
      if (jsonObj.get("EnvironmentLinks") != null && !jsonObj.get("EnvironmentLinks").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnvironmentLinks"));
      }
      // validate the optional field `EnvironmentArn`
      if (jsonObj.get("EnvironmentArn") != null && !jsonObj.get("EnvironmentArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnvironmentArn"));
      }
      // validate the optional field `OperationsRole`
      if (jsonObj.get("OperationsRole") != null && !jsonObj.get("OperationsRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationsRole"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnvironmentDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnvironmentDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnvironmentDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnvironmentDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<EnvironmentDescription>() {
           @Override
           public void write(JsonWriter out, EnvironmentDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnvironmentDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnvironmentDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnvironmentDescription
   * @throws IOException if the JSON string is invalid with respect to EnvironmentDescription
   */
  public static EnvironmentDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnvironmentDescription.class);
  }

  /**
   * Convert an instance of EnvironmentDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

