/*
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the AWS resources in use by this environment. This data is live.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:45.656965-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnvironmentResourceDescription {
  public static final String SERIALIZED_NAME_ENVIRONMENT_NAME = "EnvironmentName";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_NAME)
  private String environmentName;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUPS = "AutoScalingGroups";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUPS)
  private List autoScalingGroups;

  public static final String SERIALIZED_NAME_INSTANCES = "Instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List instances;

  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATIONS = "LaunchConfigurations";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATIONS)
  private List launchConfigurations;

  public static final String SERIALIZED_NAME_LAUNCH_TEMPLATES = "LaunchTemplates";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TEMPLATES)
  private List launchTemplates;

  public static final String SERIALIZED_NAME_LOAD_BALANCERS = "LoadBalancers";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCERS)
  private List loadBalancers;

  public static final String SERIALIZED_NAME_TRIGGERS = "Triggers";
  @SerializedName(SERIALIZED_NAME_TRIGGERS)
  private List triggers;

  public static final String SERIALIZED_NAME_QUEUES = "Queues";
  @SerializedName(SERIALIZED_NAME_QUEUES)
  private List queues;

  public EnvironmentResourceDescription() {
  }

  public EnvironmentResourceDescription environmentName(String environmentName) {
    this.environmentName = environmentName;
    return this;
  }

  /**
   * Get environmentName
   * @return environmentName
   */
  @javax.annotation.Nullable
  public String getEnvironmentName() {
    return environmentName;
  }

  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public EnvironmentResourceDescription autoScalingGroups(List autoScalingGroups) {
    this.autoScalingGroups = autoScalingGroups;
    return this;
  }

  /**
   * Get autoScalingGroups
   * @return autoScalingGroups
   */
  @javax.annotation.Nullable
  public List getAutoScalingGroups() {
    return autoScalingGroups;
  }

  public void setAutoScalingGroups(List autoScalingGroups) {
    this.autoScalingGroups = autoScalingGroups;
  }


  public EnvironmentResourceDescription instances(List instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Get instances
   * @return instances
   */
  @javax.annotation.Nullable
  public List getInstances() {
    return instances;
  }

  public void setInstances(List instances) {
    this.instances = instances;
  }


  public EnvironmentResourceDescription launchConfigurations(List launchConfigurations) {
    this.launchConfigurations = launchConfigurations;
    return this;
  }

  /**
   * Get launchConfigurations
   * @return launchConfigurations
   */
  @javax.annotation.Nullable
  public List getLaunchConfigurations() {
    return launchConfigurations;
  }

  public void setLaunchConfigurations(List launchConfigurations) {
    this.launchConfigurations = launchConfigurations;
  }


  public EnvironmentResourceDescription launchTemplates(List launchTemplates) {
    this.launchTemplates = launchTemplates;
    return this;
  }

  /**
   * Get launchTemplates
   * @return launchTemplates
   */
  @javax.annotation.Nullable
  public List getLaunchTemplates() {
    return launchTemplates;
  }

  public void setLaunchTemplates(List launchTemplates) {
    this.launchTemplates = launchTemplates;
  }


  public EnvironmentResourceDescription loadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
    return this;
  }

  /**
   * Get loadBalancers
   * @return loadBalancers
   */
  @javax.annotation.Nullable
  public List getLoadBalancers() {
    return loadBalancers;
  }

  public void setLoadBalancers(List loadBalancers) {
    this.loadBalancers = loadBalancers;
  }


  public EnvironmentResourceDescription triggers(List triggers) {
    this.triggers = triggers;
    return this;
  }

  /**
   * Get triggers
   * @return triggers
   */
  @javax.annotation.Nullable
  public List getTriggers() {
    return triggers;
  }

  public void setTriggers(List triggers) {
    this.triggers = triggers;
  }


  public EnvironmentResourceDescription queues(List queues) {
    this.queues = queues;
    return this;
  }

  /**
   * Get queues
   * @return queues
   */
  @javax.annotation.Nullable
  public List getQueues() {
    return queues;
  }

  public void setQueues(List queues) {
    this.queues = queues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentResourceDescription environmentResourceDescription = (EnvironmentResourceDescription) o;
    return Objects.equals(this.environmentName, environmentResourceDescription.environmentName) &&
        Objects.equals(this.autoScalingGroups, environmentResourceDescription.autoScalingGroups) &&
        Objects.equals(this.instances, environmentResourceDescription.instances) &&
        Objects.equals(this.launchConfigurations, environmentResourceDescription.launchConfigurations) &&
        Objects.equals(this.launchTemplates, environmentResourceDescription.launchTemplates) &&
        Objects.equals(this.loadBalancers, environmentResourceDescription.loadBalancers) &&
        Objects.equals(this.triggers, environmentResourceDescription.triggers) &&
        Objects.equals(this.queues, environmentResourceDescription.queues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentName, autoScalingGroups, instances, launchConfigurations, launchTemplates, loadBalancers, triggers, queues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentResourceDescription {\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    autoScalingGroups: ").append(toIndentedString(autoScalingGroups)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    launchConfigurations: ").append(toIndentedString(launchConfigurations)).append("\n");
    sb.append("    launchTemplates: ").append(toIndentedString(launchTemplates)).append("\n");
    sb.append("    loadBalancers: ").append(toIndentedString(loadBalancers)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    queues: ").append(toIndentedString(queues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EnvironmentName");
    openapiFields.add("AutoScalingGroups");
    openapiFields.add("Instances");
    openapiFields.add("LaunchConfigurations");
    openapiFields.add("LaunchTemplates");
    openapiFields.add("LoadBalancers");
    openapiFields.add("Triggers");
    openapiFields.add("Queues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnvironmentResourceDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnvironmentResourceDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnvironmentResourceDescription is not found in the empty JSON string", EnvironmentResourceDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnvironmentResourceDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnvironmentResourceDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EnvironmentName`
      if (jsonObj.get("EnvironmentName") != null && !jsonObj.get("EnvironmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnvironmentName"));
      }
      // validate the optional field `AutoScalingGroups`
      if (jsonObj.get("AutoScalingGroups") != null && !jsonObj.get("AutoScalingGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AutoScalingGroups"));
      }
      // validate the optional field `Instances`
      if (jsonObj.get("Instances") != null && !jsonObj.get("Instances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Instances"));
      }
      // validate the optional field `LaunchConfigurations`
      if (jsonObj.get("LaunchConfigurations") != null && !jsonObj.get("LaunchConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LaunchConfigurations"));
      }
      // validate the optional field `LaunchTemplates`
      if (jsonObj.get("LaunchTemplates") != null && !jsonObj.get("LaunchTemplates").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LaunchTemplates"));
      }
      // validate the optional field `LoadBalancers`
      if (jsonObj.get("LoadBalancers") != null && !jsonObj.get("LoadBalancers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LoadBalancers"));
      }
      // validate the optional field `Triggers`
      if (jsonObj.get("Triggers") != null && !jsonObj.get("Triggers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Triggers"));
      }
      // validate the optional field `Queues`
      if (jsonObj.get("Queues") != null && !jsonObj.get("Queues").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Queues"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnvironmentResourceDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnvironmentResourceDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnvironmentResourceDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnvironmentResourceDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<EnvironmentResourceDescription>() {
           @Override
           public void write(JsonWriter out, EnvironmentResourceDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnvironmentResourceDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnvironmentResourceDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnvironmentResourceDescription
   * @throws IOException if the JSON string is invalid with respect to EnvironmentResourceDescription
   */
  public static EnvironmentResourceDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnvironmentResourceDescription.class);
  }

  /**
   * Convert an instance of EnvironmentResourceDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

