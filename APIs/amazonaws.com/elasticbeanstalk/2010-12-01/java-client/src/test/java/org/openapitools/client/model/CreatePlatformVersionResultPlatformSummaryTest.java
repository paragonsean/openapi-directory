/*
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PlatformStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreatePlatformVersionResultPlatformSummary
 */
public class CreatePlatformVersionResultPlatformSummaryTest {
    private final CreatePlatformVersionResultPlatformSummary model = new CreatePlatformVersionResultPlatformSummary();

    /**
     * Model tests for CreatePlatformVersionResultPlatformSummary
     */
    @Test
    public void testCreatePlatformVersionResultPlatformSummary() {
        // TODO: test CreatePlatformVersionResultPlatformSummary
    }

    /**
     * Test the property 'platformArn'
     */
    @Test
    public void platformArnTest() {
        // TODO: test platformArn
    }

    /**
     * Test the property 'platformOwner'
     */
    @Test
    public void platformOwnerTest() {
        // TODO: test platformOwner
    }

    /**
     * Test the property 'platformStatus'
     */
    @Test
    public void platformStatusTest() {
        // TODO: test platformStatus
    }

    /**
     * Test the property 'platformCategory'
     */
    @Test
    public void platformCategoryTest() {
        // TODO: test platformCategory
    }

    /**
     * Test the property 'operatingSystemName'
     */
    @Test
    public void operatingSystemNameTest() {
        // TODO: test operatingSystemName
    }

    /**
     * Test the property 'operatingSystemVersion'
     */
    @Test
    public void operatingSystemVersionTest() {
        // TODO: test operatingSystemVersion
    }

    /**
     * Test the property 'supportedTierList'
     */
    @Test
    public void supportedTierListTest() {
        // TODO: test supportedTierList
    }

    /**
     * Test the property 'supportedAddonList'
     */
    @Test
    public void supportedAddonListTest() {
        // TODO: test supportedAddonList
    }

    /**
     * Test the property 'platformLifecycleState'
     */
    @Test
    public void platformLifecycleStateTest() {
        // TODO: test platformLifecycleState
    }

    /**
     * Test the property 'platformVersion'
     */
    @Test
    public void platformVersionTest() {
        // TODO: test platformVersion
    }

    /**
     * Test the property 'platformBranchName'
     */
    @Test
    public void platformBranchNameTest() {
        // TODO: test platformBranchName
    }

    /**
     * Test the property 'platformBranchLifecycleState'
     */
    @Test
    public void platformBranchLifecycleStateTest() {
        // TODO: test platformBranchLifecycleState
    }

}
