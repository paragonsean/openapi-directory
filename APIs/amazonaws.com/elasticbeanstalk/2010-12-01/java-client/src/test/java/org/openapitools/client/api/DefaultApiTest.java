/*
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AbortEnvironmentUpdateMessage;
import org.openapitools.client.model.ApplicationDescriptionMessage;
import org.openapitools.client.model.ApplicationDescriptionsMessage;
import org.openapitools.client.model.ApplicationResourceLifecycleDescriptionMessage;
import org.openapitools.client.model.ApplicationVersionDescriptionMessage;
import org.openapitools.client.model.ApplicationVersionDescriptionsMessage;
import org.openapitools.client.model.ApplyEnvironmentManagedActionRequest;
import org.openapitools.client.model.ApplyEnvironmentManagedActionResult;
import org.openapitools.client.model.AssociateEnvironmentOperationsRoleMessage;
import org.openapitools.client.model.CheckDNSAvailabilityMessage;
import org.openapitools.client.model.CheckDNSAvailabilityResultMessage;
import org.openapitools.client.model.ComposeEnvironmentsMessage;
import org.openapitools.client.model.ConfigurationOptionSetting;
import org.openapitools.client.model.ConfigurationOptionsDescription;
import org.openapitools.client.model.ConfigurationSettingsDescription;
import org.openapitools.client.model.ConfigurationSettingsDescriptions;
import org.openapitools.client.model.ConfigurationSettingsValidationMessages;
import org.openapitools.client.model.CreateApplicationMessage;
import org.openapitools.client.model.CreateApplicationVersionMessage;
import org.openapitools.client.model.CreateConfigurationTemplateMessage;
import org.openapitools.client.model.CreateEnvironmentMessage;
import org.openapitools.client.model.CreatePlatformVersionRequest;
import org.openapitools.client.model.CreatePlatformVersionResult;
import org.openapitools.client.model.CreateStorageLocationResultMessage;
import org.openapitools.client.model.DeleteApplicationMessage;
import org.openapitools.client.model.DeleteApplicationVersionMessage;
import org.openapitools.client.model.DeleteConfigurationTemplateMessage;
import org.openapitools.client.model.DeleteEnvironmentConfigurationMessage;
import org.openapitools.client.model.DeletePlatformVersionRequest;
import org.openapitools.client.model.DeletePlatformVersionResult;
import org.openapitools.client.model.DescribeAccountAttributesResult;
import org.openapitools.client.model.DescribeApplicationVersionsMessage;
import org.openapitools.client.model.DescribeApplicationsMessage;
import org.openapitools.client.model.DescribeConfigurationOptionsMessage;
import org.openapitools.client.model.DescribeConfigurationSettingsMessage;
import org.openapitools.client.model.DescribeEnvironmentHealthRequest;
import org.openapitools.client.model.DescribeEnvironmentHealthResult;
import org.openapitools.client.model.DescribeEnvironmentManagedActionHistoryRequest;
import org.openapitools.client.model.DescribeEnvironmentManagedActionHistoryResult;
import org.openapitools.client.model.DescribeEnvironmentManagedActionsRequest;
import org.openapitools.client.model.DescribeEnvironmentManagedActionsResult;
import org.openapitools.client.model.DescribeEnvironmentResourcesMessage;
import org.openapitools.client.model.DescribeEnvironmentsMessage;
import org.openapitools.client.model.DescribeEventsMessage;
import org.openapitools.client.model.DescribeInstancesHealthRequest;
import org.openapitools.client.model.DescribeInstancesHealthResult;
import org.openapitools.client.model.DescribePlatformVersionRequest;
import org.openapitools.client.model.DescribePlatformVersionResult;
import org.openapitools.client.model.DisassociateEnvironmentOperationsRoleMessage;
import org.openapitools.client.model.EnvironmentDescription;
import org.openapitools.client.model.EnvironmentDescriptionsMessage;
import org.openapitools.client.model.EnvironmentHealthAttribute;
import org.openapitools.client.model.EnvironmentResourceDescriptionsMessage;
import org.openapitools.client.model.EventDescriptionsMessage;
import org.openapitools.client.model.GETCreateApplicationResourceLifecycleConfigParameter;
import org.openapitools.client.model.GETCreateApplicationVersionBuildConfigurationParameter;
import org.openapitools.client.model.GETCreateApplicationVersionSourceBuildInformationParameter;
import org.openapitools.client.model.GETCreateApplicationVersionSourceBundleParameter;
import org.openapitools.client.model.GETCreateConfigurationTemplateSourceConfigurationParameter;
import org.openapitools.client.model.GETCreateEnvironmentTierParameter;
import org.openapitools.client.model.InstancesHealthAttribute;
import org.openapitools.client.model.ListAvailableSolutionStacksResultMessage;
import org.openapitools.client.model.ListPlatformBranchesRequest;
import org.openapitools.client.model.ListPlatformBranchesResult;
import org.openapitools.client.model.ListPlatformVersionsRequest;
import org.openapitools.client.model.ListPlatformVersionsResult;
import org.openapitools.client.model.ListTagsForResourceMessage;
import java.time.OffsetDateTime;
import org.openapitools.client.model.OptionSpecification;
import org.openapitools.client.model.PlatformFilter;
import org.openapitools.client.model.RebuildEnvironmentMessage;
import org.openapitools.client.model.RequestEnvironmentInfoMessage;
import org.openapitools.client.model.ResourceTagsDescriptionMessage;
import org.openapitools.client.model.RestartAppServerMessage;
import org.openapitools.client.model.RetrieveEnvironmentInfoMessage;
import org.openapitools.client.model.RetrieveEnvironmentInfoResultMessage;
import org.openapitools.client.model.SearchFilter;
import org.openapitools.client.model.SwapEnvironmentCNAMEsMessage;
import org.openapitools.client.model.Tag;
import org.openapitools.client.model.TerminateEnvironmentMessage;
import org.openapitools.client.model.UpdateApplicationMessage;
import org.openapitools.client.model.UpdateApplicationResourceLifecycleMessage;
import org.openapitools.client.model.UpdateApplicationVersionMessage;
import org.openapitools.client.model.UpdateConfigurationTemplateMessage;
import org.openapitools.client.model.UpdateEnvironmentMessage;
import org.openapitools.client.model.UpdateTagsForResourceMessage;
import org.openapitools.client.model.ValidateConfigurationSettingsMessage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Cancels in-progress environment configuration update or application version deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETAbortEnvironmentUpdateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        api.gETAbortEnvironmentUpdate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * Applies a scheduled managed action immediately. A managed action can be applied only if its status is &lt;code&gt;Scheduled&lt;/code&gt;. Get the status and action ID of a managed action with &lt;a&gt;DescribeEnvironmentManagedActions&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETApplyEnvironmentManagedActionTest() throws ApiException {
        String actionId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String environmentId = null;
        ApplyEnvironmentManagedActionResult response = api.gETApplyEnvironmentManagedAction(actionId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, environmentId);
        // TODO: test validations
    }

    /**
     * Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\&quot;&gt;Operations roles&lt;/a&gt; in the &lt;i&gt;AWS Elastic Beanstalk Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETAssociateEnvironmentOperationsRoleTest() throws ApiException {
        String environmentName = null;
        String operationsRole = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.gETAssociateEnvironmentOperationsRole(environmentName, operationsRole, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Checks if the specified CNAME is available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCheckDNSAvailabilityTest() throws ApiException {
        String cnAMEPrefix = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CheckDNSAvailabilityResultMessage response = api.gETCheckDNSAvailability(cnAMEPrefix, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named &lt;code&gt;env.yaml&lt;/code&gt;. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\&quot;&gt;Compose Environments&lt;/a&gt; for details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETComposeEnvironmentsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        String groupName = null;
        List<String> versionLabels = null;
        EnvironmentDescriptionsMessage response = api.gETComposeEnvironments(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, groupName, versionLabels);
        // TODO: test validations
    }

    /**
     * Creates an application that has one configuration template named &lt;code&gt;default&lt;/code&gt; and no application versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateApplicationTest() throws ApiException {
        String applicationName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        GETCreateApplicationResourceLifecycleConfigParameter resourceLifecycleConfig = null;
        List<Tag> tags = null;
        ApplicationDescriptionMessage response = api.gETCreateApplication(applicationName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description, resourceLifecycleConfig, tags);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:&lt;/p&gt; &lt;p&gt;Specify a commit in an AWS CodeCommit repository with &lt;code&gt;SourceBuildInformation&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Specify a build in an AWS CodeBuild with &lt;code&gt;SourceBuildInformation&lt;/code&gt; and &lt;code&gt;BuildConfiguration&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Specify a source bundle in S3 with &lt;code&gt;SourceBundle&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Omit both &lt;code&gt;SourceBuildInformation&lt;/code&gt; and &lt;code&gt;SourceBundle&lt;/code&gt; to use the default sample application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;After you create an application version with a specified Amazon S3 bucket and key location, you can&#39;t change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateApplicationVersionTest() throws ApiException {
        String applicationName = null;
        String versionLabel = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        GETCreateApplicationVersionSourceBuildInformationParameter sourceBuildInformation = null;
        GETCreateApplicationVersionSourceBundleParameter sourceBundle = null;
        GETCreateApplicationVersionBuildConfigurationParameter buildConfiguration = null;
        Boolean autoCreateApplication = null;
        Boolean process = null;
        List<Tag> tags = null;
        ApplicationVersionDescriptionMessage response = api.gETCreateApplicationVersion(applicationName, versionLabel, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description, sourceBuildInformation, sourceBundle, buildConfiguration, autoCreateApplication, process, tags);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.&lt;/p&gt; &lt;p&gt;Templates aren&#39;t associated with any environment. The &lt;code&gt;EnvironmentName&lt;/code&gt; response element is always &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationOptions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListAvailableSolutionStacks&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateConfigurationTemplateTest() throws ApiException {
        String applicationName = null;
        String templateName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String solutionStackName = null;
        String platformArn = null;
        GETCreateConfigurationTemplateSourceConfigurationParameter sourceConfiguration = null;
        String environmentId = null;
        String description = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        List<Tag> tags = null;
        ConfigurationSettingsDescription response = api.gETCreateConfigurationTemplate(applicationName, templateName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, solutionStackName, platformArn, sourceConfiguration, environmentId, description, optionSettings, tags);
        // TODO: test validations
    }

    /**
     * Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateEnvironmentTest() throws ApiException {
        String applicationName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String groupName = null;
        String description = null;
        String cnAMEPrefix = null;
        GETCreateEnvironmentTierParameter tier = null;
        List<Tag> tags = null;
        String versionLabel = null;
        String templateName = null;
        String solutionStackName = null;
        String platformArn = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        List<OptionSpecification> optionsToRemove = null;
        String operationsRole = null;
        EnvironmentDescription response = api.gETCreateEnvironment(applicationName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, groupName, description, cnAMEPrefix, tier, tags, versionLabel, templateName, solutionStackName, platformArn, optionSettings, optionsToRemove, operationsRole);
        // TODO: test validations
    }

    /**
     * Create a new version of your custom platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreatePlatformVersionTest() throws ApiException {
        String platformName = null;
        String platformVersion = null;
        GETCreateApplicationVersionSourceBundleParameter platformDefinitionBundle = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        List<Tag> tags = null;
        CreatePlatformVersionResult response = api.gETCreatePlatformVersion(platformName, platformVersion, platformDefinitionBundle, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, optionSettings, tags);
        // TODO: test validations
    }

    /**
     * Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, &lt;code&gt;CreateStorageLocation&lt;/code&gt; still returns the bucket name but does not create a new bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateStorageLocationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateStorageLocationResultMessage response = api.gETCreateStorageLocation(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot delete an application that has a running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteApplicationTest() throws ApiException {
        String applicationName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean terminateEnvByForce = null;
        api.gETDeleteApplication(applicationName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, terminateEnvByForce);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified version from the specified application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot delete an application version that is associated with a running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteApplicationVersionTest() throws ApiException {
        String applicationName = null;
        String versionLabel = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean deleteSourceBundle = null;
        api.gETDeleteApplicationVersion(applicationName, versionLabel, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteSourceBundle);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified configuration template.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment&#39;s copy of the template without affecting the running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteConfigurationTemplateTest() throws ApiException {
        String applicationName = null;
        String templateName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.gETDeleteConfigurationTemplate(applicationName, templateName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the draft configuration associated with the running environment.&lt;/p&gt; &lt;p&gt;Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; while the update is in progress or if the update fails. The &lt;code&gt;DeploymentStatus&lt;/code&gt; for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteEnvironmentConfigurationTest() throws ApiException {
        String applicationName = null;
        String environmentName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.gETDeleteEnvironmentConfiguration(applicationName, environmentName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes the specified version of a custom platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeletePlatformVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String platformArn = null;
        DeletePlatformVersionResult response = api.gETDeletePlatformVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, platformArn);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.&lt;/p&gt; &lt;p&gt;The result currently has one set of attributes—resource quotas.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeAccountAttributesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAccountAttributesResult response = api.gETDescribeAccountAttributes(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieve a list of application versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeApplicationVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        List<String> versionLabels = null;
        Integer maxRecords = null;
        String nextToken = null;
        ApplicationVersionDescriptionsMessage response = api.gETDescribeApplicationVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, versionLabels, maxRecords, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the descriptions of existing applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeApplicationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> applicationNames = null;
        ApplicationDescriptionsMessage response = api.gETDescribeApplications(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationNames);
        // TODO: test validations
    }

    /**
     * Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeConfigurationOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        String templateName = null;
        String environmentName = null;
        String solutionStackName = null;
        String platformArn = null;
        List<OptionSpecification> options = null;
        ConfigurationOptionsDescription response = api.gETDescribeConfigurationOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, templateName, environmentName, solutionStackName, platformArn, options);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.&lt;/p&gt; &lt;p&gt;When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteEnvironmentConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeConfigurationSettingsTest() throws ApiException {
        String applicationName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateName = null;
        String environmentName = null;
        ConfigurationSettingsDescriptions response = api.gETDescribeConfigurationSettings(applicationName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateName, environmentName);
        // TODO: test validations
    }

    /**
     * Returns information about the overall health of the specified environment. The &lt;b&gt;DescribeEnvironmentHealth&lt;/b&gt; operation is only available with AWS Elastic Beanstalk Enhanced Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEnvironmentHealthTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String environmentId = null;
        List<EnvironmentHealthAttribute> attributeNames = null;
        DescribeEnvironmentHealthResult response = api.gETDescribeEnvironmentHealth(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, environmentId, attributeNames);
        // TODO: test validations
    }

    /**
     * Lists an environment&#39;s completed and failed managed actions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEnvironmentManagedActionHistoryTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        String nextToken = null;
        Integer maxItems = null;
        DescribeEnvironmentManagedActionHistoryResult response = api.gETDescribeEnvironmentManagedActionHistory(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName, nextToken, maxItems);
        // TODO: test validations
    }

    /**
     * Lists an environment&#39;s upcoming and in-progress managed actions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEnvironmentManagedActionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String environmentId = null;
        String status = null;
        DescribeEnvironmentManagedActionsResult response = api.gETDescribeEnvironmentManagedActions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, environmentId, status);
        // TODO: test validations
    }

    /**
     * Returns AWS resources for this environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEnvironmentResourcesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        EnvironmentResourceDescriptionsMessage response = api.gETDescribeEnvironmentResources(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * Returns descriptions for existing environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEnvironmentsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        String versionLabel = null;
        List<String> environmentIds = null;
        List<String> environmentNames = null;
        Boolean includeDeleted = null;
        OffsetDateTime includedDeletedBackTo = null;
        Integer maxRecords = null;
        String nextToken = null;
        EnvironmentDescriptionsMessage response = api.gETDescribeEnvironments(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, versionLabel, environmentIds, environmentNames, includeDeleted, includedDeletedBackTo, maxRecords, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns list of event descriptions matching criteria up to the last 6 weeks.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This action returns the most recent 1,000 events from the specified &lt;code&gt;NextToken&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeEventsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        String versionLabel = null;
        String templateName = null;
        String environmentId = null;
        String environmentName = null;
        String platformArn = null;
        String requestId = null;
        String severity = null;
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        Integer maxRecords = null;
        String nextToken = null;
        EventDescriptionsMessage response = api.gETDescribeEvents(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, versionLabel, templateName, environmentId, environmentName, platformArn, requestId, severity, startTime, endTime, maxRecords, nextToken);
        // TODO: test validations
    }

    /**
     * Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\&quot;&gt;enhanced health reporting&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeInstancesHealthTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String environmentId = null;
        List<InstancesHealthAttribute> attributeNames = null;
        String nextToken = null;
        DescribeInstancesHealthResult response = api.gETDescribeInstancesHealth(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, environmentId, attributeNames, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a platform version. Provides full details. Compare to &lt;a&gt;ListPlatformVersions&lt;/a&gt;, which provides summary information about a list of platform versions.&lt;/p&gt; &lt;p&gt;For definitions of platform version and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribePlatformVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String platformArn = null;
        DescribePlatformVersionResult response = api.gETDescribePlatformVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, platformArn);
        // TODO: test validations
    }

    /**
     * Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller&#39;s permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\&quot;&gt;Operations roles&lt;/a&gt; in the &lt;i&gt;AWS Elastic Beanstalk Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDisassociateEnvironmentOperationsRoleTest() throws ApiException {
        String environmentName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.gETDisassociateEnvironmentOperationsRole(environmentName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListAvailableSolutionStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListAvailableSolutionStacksResultMessage response = api.gETListAvailableSolutionStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.&lt;/p&gt; &lt;p&gt;For definitions of platform branch and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListPlatformBranchesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<SearchFilter> filters = null;
        Integer maxRecords = null;
        String nextToken = null;
        ListPlatformBranchesResult response = api.gETListPlatformBranches(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, filters, maxRecords, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to &lt;a&gt;DescribePlatformVersion&lt;/a&gt;, which provides full details about a single platform version.&lt;/p&gt; &lt;p&gt;For definitions of platform version and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListPlatformVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<PlatformFilter> filters = null;
        Integer maxRecords = null;
        String nextToken = null;
        ListPlatformVersionsResult response = api.gETListPlatformVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, filters, maxRecords, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.&lt;/p&gt; &lt;p&gt;Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\&quot;&gt;Tagging Application Resources&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ResourceTagsDescriptionMessage response = api.gETListTagsForResource(resourceArn, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRebuildEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        api.gETRebuildEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Initiates a request to compile the specified type of information of the deployed environment.&lt;/p&gt; &lt;p&gt; Setting the &lt;code&gt;InfoType&lt;/code&gt; to &lt;code&gt;tail&lt;/code&gt; compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. &lt;/p&gt; &lt;p&gt; Setting the &lt;code&gt;InfoType&lt;/code&gt; to &lt;code&gt;bundle&lt;/code&gt; compresses the application server log files for every Amazon EC2 instance into a &lt;code&gt;.zip&lt;/code&gt; file. Legacy and .NET containers do not support bundle logs. &lt;/p&gt; &lt;p&gt; Use &lt;a&gt;RetrieveEnvironmentInfo&lt;/a&gt; to obtain the set of logs. &lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;RetrieveEnvironmentInfo&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRequestEnvironmentInfoTest() throws ApiException {
        String infoType = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        api.gETRequestEnvironmentInfo(infoType, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * Causes the environment to restart the application container server running on each Amazon EC2 instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRestartAppServerTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        api.gETRestartAppServer(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the compiled information from a &lt;a&gt;RequestEnvironmentInfo&lt;/a&gt; request.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;RequestEnvironmentInfo&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRetrieveEnvironmentInfoTest() throws ApiException {
        String infoType = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        RetrieveEnvironmentInfoResultMessage response = api.gETRetrieveEnvironmentInfo(infoType, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName);
        // TODO: test validations
    }

    /**
     * Swaps the CNAMEs of two environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETSwapEnvironmentCNAMEsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String sourceEnvironmentId = null;
        String sourceEnvironmentName = null;
        String destinationEnvironmentId = null;
        String destinationEnvironmentName = null;
        api.gETSwapEnvironmentCNAMEs(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, sourceEnvironmentId, sourceEnvironmentName, destinationEnvironmentId, destinationEnvironmentName);
        // TODO: test validations
    }

    /**
     * Terminates the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETTerminateEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentId = null;
        String environmentName = null;
        Boolean terminateResources = null;
        Boolean forceTerminate = null;
        EnvironmentDescription response = api.gETTerminateEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentId, environmentName, terminateResources, forceTerminate);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified application to have the specified properties.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;description&lt;/code&gt;) is not provided, the value remains unchanged. To clear these properties, specify an empty string.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateApplicationTest() throws ApiException {
        String applicationName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        ApplicationDescriptionMessage response = api.gETUpdateApplication(applicationName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description);
        // TODO: test validations
    }

    /**
     * Modifies lifecycle settings for an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateApplicationResourceLifecycleTest() throws ApiException {
        String applicationName = null;
        GETCreateApplicationResourceLifecycleConfigParameter resourceLifecycleConfig = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ApplicationResourceLifecycleDescriptionMessage response = api.gETUpdateApplicationResourceLifecycle(applicationName, resourceLifecycleConfig, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified application version to have the specified properties.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;description&lt;/code&gt;) is not provided, the value remains unchanged. To clear properties, specify an empty string.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateApplicationVersionTest() throws ApiException {
        String applicationName = null;
        String versionLabel = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        ApplicationVersionDescriptionMessage response = api.gETUpdateApplicationVersion(applicationName, versionLabel, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified configuration template to have the specified properties or configuration option values.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;ApplicationName&lt;/code&gt;) is not provided, its value remains unchanged. To clear such properties, specify an empty string.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationOptions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateConfigurationTemplateTest() throws ApiException {
        String applicationName = null;
        String templateName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        List<OptionSpecification> optionsToRemove = null;
        ConfigurationSettingsDescription response = api.gETUpdateConfigurationTemplate(applicationName, templateName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description, optionSettings, optionsToRemove);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.&lt;/p&gt; &lt;p&gt; Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an &lt;code&gt;InvalidParameterCombination&lt;/code&gt; error. &lt;/p&gt; &lt;p&gt; When updating the configuration settings to a new template or individual settings, a draft configuration is created and &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; for this environment returns two setting descriptions with different &lt;code&gt;DeploymentStatus&lt;/code&gt; values. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String applicationName = null;
        String environmentId = null;
        String environmentName = null;
        String groupName = null;
        String description = null;
        GETCreateEnvironmentTierParameter tier = null;
        String versionLabel = null;
        String templateName = null;
        String solutionStackName = null;
        String platformArn = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        List<OptionSpecification> optionsToRemove = null;
        EnvironmentDescription response = api.gETUpdateEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applicationName, environmentId, environmentName, groupName, description, tier, versionLabel, templateName, solutionStackName, platformArn, optionSettings, optionsToRemove);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: &lt;code&gt;TagsToAdd&lt;/code&gt; for tags to add or update, and &lt;code&gt;TagsToRemove&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\&quot;&gt;Tagging Application Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;elasticbeanstalk:AddTags&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Controls permission to call &lt;code&gt;UpdateTagsForResource&lt;/code&gt; and pass a list of tags to add in the &lt;code&gt;TagsToAdd&lt;/code&gt; parameter.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;elasticbeanstalk:RemoveTags&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Controls permission to call &lt;code&gt;UpdateTagsForResource&lt;/code&gt; and pass a list of tag keys to remove in the &lt;code&gt;TagsToRemove&lt;/code&gt; parameter.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;For details about creating a custom user policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\&quot;&gt;Creating a Custom User Policy&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<Tag> tagsToAdd = null;
        List<String> tagsToRemove = null;
        api.gETUpdateTagsForResource(resourceArn, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, tagsToAdd, tagsToRemove);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.&lt;/p&gt; &lt;p&gt;This action returns a list of messages indicating any errors or warnings associated with the selection of option values.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETValidateConfigurationSettingsTest() throws ApiException {
        String applicationName = null;
        List<ConfigurationOptionSetting> optionSettings = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateName = null;
        String environmentName = null;
        ConfigurationSettingsValidationMessages response = api.gETValidateConfigurationSettings(applicationName, optionSettings, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateName, environmentName);
        // TODO: test validations
    }

    /**
     * Cancels in-progress environment configuration update or application version deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTAbortEnvironmentUpdateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AbortEnvironmentUpdateMessage abortEnvironmentUpdateMessage = null;
        api.pOSTAbortEnvironmentUpdate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, abortEnvironmentUpdateMessage);
        // TODO: test validations
    }

    /**
     * Applies a scheduled managed action immediately. A managed action can be applied only if its status is &lt;code&gt;Scheduled&lt;/code&gt;. Get the status and action ID of a managed action with &lt;a&gt;DescribeEnvironmentManagedActions&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTApplyEnvironmentManagedActionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ApplyEnvironmentManagedActionRequest applyEnvironmentManagedActionRequest = null;
        ApplyEnvironmentManagedActionResult response = api.pOSTApplyEnvironmentManagedAction(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, applyEnvironmentManagedActionRequest);
        // TODO: test validations
    }

    /**
     * Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\&quot;&gt;Operations roles&lt;/a&gt; in the &lt;i&gt;AWS Elastic Beanstalk Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTAssociateEnvironmentOperationsRoleTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AssociateEnvironmentOperationsRoleMessage associateEnvironmentOperationsRoleMessage = null;
        api.pOSTAssociateEnvironmentOperationsRole(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, associateEnvironmentOperationsRoleMessage);
        // TODO: test validations
    }

    /**
     * Checks if the specified CNAME is available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCheckDNSAvailabilityTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CheckDNSAvailabilityMessage checkDNSAvailabilityMessage = null;
        CheckDNSAvailabilityResultMessage response = api.pOSTCheckDNSAvailability(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, checkDNSAvailabilityMessage);
        // TODO: test validations
    }

    /**
     * Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named &lt;code&gt;env.yaml&lt;/code&gt;. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\&quot;&gt;Compose Environments&lt;/a&gt; for details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTComposeEnvironmentsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ComposeEnvironmentsMessage composeEnvironmentsMessage = null;
        EnvironmentDescriptionsMessage response = api.pOSTComposeEnvironments(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, composeEnvironmentsMessage);
        // TODO: test validations
    }

    /**
     * Creates an application that has one configuration template named &lt;code&gt;default&lt;/code&gt; and no application versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateApplicationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateApplicationMessage createApplicationMessage = null;
        ApplicationDescriptionMessage response = api.pOSTCreateApplication(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createApplicationMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:&lt;/p&gt; &lt;p&gt;Specify a commit in an AWS CodeCommit repository with &lt;code&gt;SourceBuildInformation&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Specify a build in an AWS CodeBuild with &lt;code&gt;SourceBuildInformation&lt;/code&gt; and &lt;code&gt;BuildConfiguration&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Specify a source bundle in S3 with &lt;code&gt;SourceBundle&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Omit both &lt;code&gt;SourceBuildInformation&lt;/code&gt; and &lt;code&gt;SourceBundle&lt;/code&gt; to use the default sample application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;After you create an application version with a specified Amazon S3 bucket and key location, you can&#39;t change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateApplicationVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateApplicationVersionMessage createApplicationVersionMessage = null;
        ApplicationVersionDescriptionMessage response = api.pOSTCreateApplicationVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createApplicationVersionMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.&lt;/p&gt; &lt;p&gt;Templates aren&#39;t associated with any environment. The &lt;code&gt;EnvironmentName&lt;/code&gt; response element is always &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationOptions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListAvailableSolutionStacks&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateConfigurationTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateConfigurationTemplateMessage createConfigurationTemplateMessage = null;
        ConfigurationSettingsDescription response = api.pOSTCreateConfigurationTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createConfigurationTemplateMessage);
        // TODO: test validations
    }

    /**
     * Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateEnvironmentMessage createEnvironmentMessage = null;
        EnvironmentDescription response = api.pOSTCreateEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createEnvironmentMessage);
        // TODO: test validations
    }

    /**
     * Create a new version of your custom platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreatePlatformVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreatePlatformVersionRequest createPlatformVersionRequest = null;
        CreatePlatformVersionResult response = api.pOSTCreatePlatformVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createPlatformVersionRequest);
        // TODO: test validations
    }

    /**
     * Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, &lt;code&gt;CreateStorageLocation&lt;/code&gt; still returns the bucket name but does not create a new bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateStorageLocationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateStorageLocationResultMessage response = api.pOSTCreateStorageLocation(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot delete an application that has a running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteApplicationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteApplicationMessage deleteApplicationMessage = null;
        api.pOSTDeleteApplication(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteApplicationMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified version from the specified application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot delete an application version that is associated with a running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteApplicationVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteApplicationVersionMessage deleteApplicationVersionMessage = null;
        api.pOSTDeleteApplicationVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteApplicationVersionMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified configuration template.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment&#39;s copy of the template without affecting the running environment.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteConfigurationTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteConfigurationTemplateMessage deleteConfigurationTemplateMessage = null;
        api.pOSTDeleteConfigurationTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteConfigurationTemplateMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the draft configuration associated with the running environment.&lt;/p&gt; &lt;p&gt;Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; while the update is in progress or if the update fails. The &lt;code&gt;DeploymentStatus&lt;/code&gt; for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteEnvironmentConfigurationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteEnvironmentConfigurationMessage deleteEnvironmentConfigurationMessage = null;
        api.pOSTDeleteEnvironmentConfiguration(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteEnvironmentConfigurationMessage);
        // TODO: test validations
    }

    /**
     * Deletes the specified version of a custom platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeletePlatformVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeletePlatformVersionRequest deletePlatformVersionRequest = null;
        DeletePlatformVersionResult response = api.pOSTDeletePlatformVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deletePlatformVersionRequest);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.&lt;/p&gt; &lt;p&gt;The result currently has one set of attributes—resource quotas.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeAccountAttributesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAccountAttributesResult response = api.pOSTDescribeAccountAttributes(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieve a list of application versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeApplicationVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeApplicationVersionsMessage describeApplicationVersionsMessage = null;
        ApplicationVersionDescriptionsMessage response = api.pOSTDescribeApplicationVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeApplicationVersionsMessage);
        // TODO: test validations
    }

    /**
     * Returns the descriptions of existing applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeApplicationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeApplicationsMessage describeApplicationsMessage = null;
        ApplicationDescriptionsMessage response = api.pOSTDescribeApplications(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeApplicationsMessage);
        // TODO: test validations
    }

    /**
     * Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeConfigurationOptionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeConfigurationOptionsMessage describeConfigurationOptionsMessage = null;
        ConfigurationOptionsDescription response = api.pOSTDescribeConfigurationOptions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeConfigurationOptionsMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.&lt;/p&gt; &lt;p&gt;When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteEnvironmentConfiguration&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeConfigurationSettingsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeConfigurationSettingsMessage describeConfigurationSettingsMessage = null;
        ConfigurationSettingsDescriptions response = api.pOSTDescribeConfigurationSettings(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeConfigurationSettingsMessage);
        // TODO: test validations
    }

    /**
     * Returns information about the overall health of the specified environment. The &lt;b&gt;DescribeEnvironmentHealth&lt;/b&gt; operation is only available with AWS Elastic Beanstalk Enhanced Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEnvironmentHealthTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEnvironmentHealthRequest describeEnvironmentHealthRequest = null;
        DescribeEnvironmentHealthResult response = api.pOSTDescribeEnvironmentHealth(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeEnvironmentHealthRequest);
        // TODO: test validations
    }

    /**
     * Lists an environment&#39;s completed and failed managed actions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEnvironmentManagedActionHistoryTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxItems = null;
        String nextToken = null;
        DescribeEnvironmentManagedActionHistoryRequest describeEnvironmentManagedActionHistoryRequest = null;
        DescribeEnvironmentManagedActionHistoryResult response = api.pOSTDescribeEnvironmentManagedActionHistory(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxItems, nextToken, describeEnvironmentManagedActionHistoryRequest);
        // TODO: test validations
    }

    /**
     * Lists an environment&#39;s upcoming and in-progress managed actions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEnvironmentManagedActionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEnvironmentManagedActionsRequest describeEnvironmentManagedActionsRequest = null;
        DescribeEnvironmentManagedActionsResult response = api.pOSTDescribeEnvironmentManagedActions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeEnvironmentManagedActionsRequest);
        // TODO: test validations
    }

    /**
     * Returns AWS resources for this environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEnvironmentResourcesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEnvironmentResourcesMessage describeEnvironmentResourcesMessage = null;
        EnvironmentResourceDescriptionsMessage response = api.pOSTDescribeEnvironmentResources(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeEnvironmentResourcesMessage);
        // TODO: test validations
    }

    /**
     * Returns descriptions for existing environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEnvironmentsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEnvironmentsMessage describeEnvironmentsMessage = null;
        EnvironmentDescriptionsMessage response = api.pOSTDescribeEnvironments(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeEnvironmentsMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns list of event descriptions matching criteria up to the last 6 weeks.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This action returns the most recent 1,000 events from the specified &lt;code&gt;NextToken&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeEventsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxRecords = null;
        String nextToken = null;
        DescribeEventsMessage describeEventsMessage = null;
        EventDescriptionsMessage response = api.pOSTDescribeEvents(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxRecords, nextToken, describeEventsMessage);
        // TODO: test validations
    }

    /**
     * Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\&quot;&gt;enhanced health reporting&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeInstancesHealthTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeInstancesHealthRequest describeInstancesHealthRequest = null;
        DescribeInstancesHealthResult response = api.pOSTDescribeInstancesHealth(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeInstancesHealthRequest);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a platform version. Provides full details. Compare to &lt;a&gt;ListPlatformVersions&lt;/a&gt;, which provides summary information about a list of platform versions.&lt;/p&gt; &lt;p&gt;For definitions of platform version and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribePlatformVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribePlatformVersionRequest describePlatformVersionRequest = null;
        DescribePlatformVersionResult response = api.pOSTDescribePlatformVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describePlatformVersionRequest);
        // TODO: test validations
    }

    /**
     * Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller&#39;s permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\&quot;&gt;Operations roles&lt;/a&gt; in the &lt;i&gt;AWS Elastic Beanstalk Developer Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDisassociateEnvironmentOperationsRoleTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DisassociateEnvironmentOperationsRoleMessage disassociateEnvironmentOperationsRoleMessage = null;
        api.pOSTDisassociateEnvironmentOperationsRole(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, disassociateEnvironmentOperationsRoleMessage);
        // TODO: test validations
    }

    /**
     * Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListAvailableSolutionStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListAvailableSolutionStacksResultMessage response = api.pOSTListAvailableSolutionStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.&lt;/p&gt; &lt;p&gt;For definitions of platform branch and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListPlatformBranchesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxRecords = null;
        String nextToken = null;
        ListPlatformBranchesRequest listPlatformBranchesRequest = null;
        ListPlatformBranchesResult response = api.pOSTListPlatformBranches(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxRecords, nextToken, listPlatformBranchesRequest);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to &lt;a&gt;DescribePlatformVersion&lt;/a&gt;, which provides full details about a single platform version.&lt;/p&gt; &lt;p&gt;For definitions of platform version and other platform-related terms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\&quot;&gt;AWS Elastic Beanstalk Platforms Glossary&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListPlatformVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxRecords = null;
        String nextToken = null;
        ListPlatformVersionsRequest listPlatformVersionsRequest = null;
        ListPlatformVersionsResult response = api.pOSTListPlatformVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxRecords, nextToken, listPlatformVersionsRequest);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.&lt;/p&gt; &lt;p&gt;Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\&quot;&gt;Tagging Application Resources&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListTagsForResourceTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceMessage listTagsForResourceMessage = null;
        ResourceTagsDescriptionMessage response = api.pOSTListTagsForResource(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, listTagsForResourceMessage);
        // TODO: test validations
    }

    /**
     * Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRebuildEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RebuildEnvironmentMessage rebuildEnvironmentMessage = null;
        api.pOSTRebuildEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, rebuildEnvironmentMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Initiates a request to compile the specified type of information of the deployed environment.&lt;/p&gt; &lt;p&gt; Setting the &lt;code&gt;InfoType&lt;/code&gt; to &lt;code&gt;tail&lt;/code&gt; compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. &lt;/p&gt; &lt;p&gt; Setting the &lt;code&gt;InfoType&lt;/code&gt; to &lt;code&gt;bundle&lt;/code&gt; compresses the application server log files for every Amazon EC2 instance into a &lt;code&gt;.zip&lt;/code&gt; file. Legacy and .NET containers do not support bundle logs. &lt;/p&gt; &lt;p&gt; Use &lt;a&gt;RetrieveEnvironmentInfo&lt;/a&gt; to obtain the set of logs. &lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;RetrieveEnvironmentInfo&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRequestEnvironmentInfoTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RequestEnvironmentInfoMessage requestEnvironmentInfoMessage = null;
        api.pOSTRequestEnvironmentInfo(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, requestEnvironmentInfoMessage);
        // TODO: test validations
    }

    /**
     * Causes the environment to restart the application container server running on each Amazon EC2 instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRestartAppServerTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RestartAppServerMessage restartAppServerMessage = null;
        api.pOSTRestartAppServer(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, restartAppServerMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the compiled information from a &lt;a&gt;RequestEnvironmentInfo&lt;/a&gt; request.&lt;/p&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;RequestEnvironmentInfo&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRetrieveEnvironmentInfoTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RetrieveEnvironmentInfoMessage retrieveEnvironmentInfoMessage = null;
        RetrieveEnvironmentInfoResultMessage response = api.pOSTRetrieveEnvironmentInfo(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, retrieveEnvironmentInfoMessage);
        // TODO: test validations
    }

    /**
     * Swaps the CNAMEs of two environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTSwapEnvironmentCNAMEsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SwapEnvironmentCNAMEsMessage swapEnvironmentCNAMEsMessage = null;
        api.pOSTSwapEnvironmentCNAMEs(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, swapEnvironmentCNAMEsMessage);
        // TODO: test validations
    }

    /**
     * Terminates the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTTerminateEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        TerminateEnvironmentMessage terminateEnvironmentMessage = null;
        EnvironmentDescription response = api.pOSTTerminateEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, terminateEnvironmentMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified application to have the specified properties.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;description&lt;/code&gt;) is not provided, the value remains unchanged. To clear these properties, specify an empty string.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateApplicationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateApplicationMessage updateApplicationMessage = null;
        ApplicationDescriptionMessage response = api.pOSTUpdateApplication(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateApplicationMessage);
        // TODO: test validations
    }

    /**
     * Modifies lifecycle settings for an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateApplicationResourceLifecycleTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateApplicationResourceLifecycleMessage updateApplicationResourceLifecycleMessage = null;
        ApplicationResourceLifecycleDescriptionMessage response = api.pOSTUpdateApplicationResourceLifecycle(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateApplicationResourceLifecycleMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified application version to have the specified properties.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;description&lt;/code&gt;) is not provided, the value remains unchanged. To clear properties, specify an empty string.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateApplicationVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateApplicationVersionMessage updateApplicationVersionMessage = null;
        ApplicationVersionDescriptionMessage response = api.pOSTUpdateApplicationVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateApplicationVersionMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the specified configuration template to have the specified properties or configuration option values.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If a property (for example, &lt;code&gt;ApplicationName&lt;/code&gt;) is not provided, its value remains unchanged. To clear such properties, specify an empty string.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Related Topics&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeConfigurationOptions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateConfigurationTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateConfigurationTemplateMessage updateConfigurationTemplateMessage = null;
        ConfigurationSettingsDescription response = api.pOSTUpdateConfigurationTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateConfigurationTemplateMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.&lt;/p&gt; &lt;p&gt; Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an &lt;code&gt;InvalidParameterCombination&lt;/code&gt; error. &lt;/p&gt; &lt;p&gt; When updating the configuration settings to a new template or individual settings, a draft configuration is created and &lt;a&gt;DescribeConfigurationSettings&lt;/a&gt; for this environment returns two setting descriptions with different &lt;code&gt;DeploymentStatus&lt;/code&gt; values. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateEnvironmentTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateEnvironmentMessage updateEnvironmentMessage = null;
        EnvironmentDescription response = api.pOSTUpdateEnvironment(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateEnvironmentMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: &lt;code&gt;TagsToAdd&lt;/code&gt; for tags to add or update, and &lt;code&gt;TagsToRemove&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\&quot;&gt;Tagging Application Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;elasticbeanstalk:AddTags&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Controls permission to call &lt;code&gt;UpdateTagsForResource&lt;/code&gt; and pass a list of tags to add in the &lt;code&gt;TagsToAdd&lt;/code&gt; parameter.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;elasticbeanstalk:RemoveTags&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Controls permission to call &lt;code&gt;UpdateTagsForResource&lt;/code&gt; and pass a list of tag keys to remove in the &lt;code&gt;TagsToRemove&lt;/code&gt; parameter.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;For details about creating a custom user policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\&quot;&gt;Creating a Custom User Policy&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateTagsForResourceTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateTagsForResourceMessage updateTagsForResourceMessage = null;
        api.pOSTUpdateTagsForResource(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateTagsForResourceMessage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.&lt;/p&gt; &lt;p&gt;This action returns a list of messages indicating any errors or warnings associated with the selection of option values.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTValidateConfigurationSettingsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ValidateConfigurationSettingsMessage validateConfigurationSettingsMessage = null;
        ConfigurationSettingsValidationMessages response = api.pOSTValidateConfigurationSettings(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, validateConfigurationSettingsMessage);
        // TODO: test validations
    }

}
