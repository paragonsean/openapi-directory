/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SingleInstanceHealthApplicationMetrics from './SingleInstanceHealthApplicationMetrics';
import SingleInstanceHealthDeployment from './SingleInstanceHealthDeployment';
import SingleInstanceHealthSystem from './SingleInstanceHealthSystem';

/**
 * The SingleInstanceHealth model module.
 * @module model/SingleInstanceHealth
 * @version 2010-12-01
 */
class SingleInstanceHealth {
    /**
     * Constructs a new <code>SingleInstanceHealth</code>.
     * Detailed health information about an Amazon EC2 instance in your Elastic Beanstalk environment.
     * @alias module:model/SingleInstanceHealth
     */
    constructor() { 
        
        SingleInstanceHealth.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SingleInstanceHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SingleInstanceHealth} obj Optional instance to populate.
     * @return {module:model/SingleInstanceHealth} The populated <code>SingleInstanceHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SingleInstanceHealth();

            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('HealthStatus')) {
                obj['HealthStatus'] = ApiClient.convertToType(data['HealthStatus'], 'String');
            }
            if (data.hasOwnProperty('Color')) {
                obj['Color'] = ApiClient.convertToType(data['Color'], 'String');
            }
            if (data.hasOwnProperty('Causes')) {
                obj['Causes'] = ApiClient.convertToType(data['Causes'], Array);
            }
            if (data.hasOwnProperty('LaunchedAt')) {
                obj['LaunchedAt'] = ApiClient.convertToType(data['LaunchedAt'], 'Date');
            }
            if (data.hasOwnProperty('ApplicationMetrics')) {
                obj['ApplicationMetrics'] = SingleInstanceHealthApplicationMetrics.constructFromObject(data['ApplicationMetrics']);
            }
            if (data.hasOwnProperty('System')) {
                obj['System'] = SingleInstanceHealthSystem.constructFromObject(data['System']);
            }
            if (data.hasOwnProperty('Deployment')) {
                obj['Deployment'] = SingleInstanceHealthDeployment.constructFromObject(data['Deployment']);
            }
            if (data.hasOwnProperty('AvailabilityZone')) {
                obj['AvailabilityZone'] = ApiClient.convertToType(data['AvailabilityZone'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SingleInstanceHealth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SingleInstanceHealth</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InstanceId`
        if (data['InstanceId']) { // data not null
          String.validateJSON(data['InstanceId']);
        }
        // validate the optional field `HealthStatus`
        if (data['HealthStatus']) { // data not null
          String.validateJSON(data['HealthStatus']);
        }
        // validate the optional field `Color`
        if (data['Color']) { // data not null
          String.validateJSON(data['Color']);
        }
        // validate the optional field `Causes`
        if (data['Causes']) { // data not null
          Array.validateJSON(data['Causes']);
        }
        // validate the optional field `LaunchedAt`
        if (data['LaunchedAt']) { // data not null
          Date.validateJSON(data['LaunchedAt']);
        }
        // validate the optional field `ApplicationMetrics`
        if (data['ApplicationMetrics']) { // data not null
          SingleInstanceHealthApplicationMetrics.validateJSON(data['ApplicationMetrics']);
        }
        // validate the optional field `System`
        if (data['System']) { // data not null
          SingleInstanceHealthSystem.validateJSON(data['System']);
        }
        // validate the optional field `Deployment`
        if (data['Deployment']) { // data not null
          SingleInstanceHealthDeployment.validateJSON(data['Deployment']);
        }
        // validate the optional field `AvailabilityZone`
        if (data['AvailabilityZone']) { // data not null
          String.validateJSON(data['AvailabilityZone']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          String.validateJSON(data['InstanceType']);
        }

        return true;
    }


}



/**
 * @member {String} InstanceId
 */
SingleInstanceHealth.prototype['InstanceId'] = undefined;

/**
 * @member {String} HealthStatus
 */
SingleInstanceHealth.prototype['HealthStatus'] = undefined;

/**
 * @member {String} Color
 */
SingleInstanceHealth.prototype['Color'] = undefined;

/**
 * @member {Array} Causes
 */
SingleInstanceHealth.prototype['Causes'] = undefined;

/**
 * @member {Date} LaunchedAt
 */
SingleInstanceHealth.prototype['LaunchedAt'] = undefined;

/**
 * @member {module:model/SingleInstanceHealthApplicationMetrics} ApplicationMetrics
 */
SingleInstanceHealth.prototype['ApplicationMetrics'] = undefined;

/**
 * @member {module:model/SingleInstanceHealthSystem} System
 */
SingleInstanceHealth.prototype['System'] = undefined;

/**
 * @member {module:model/SingleInstanceHealthDeployment} Deployment
 */
SingleInstanceHealth.prototype['Deployment'] = undefined;

/**
 * @member {String} AvailabilityZone
 */
SingleInstanceHealth.prototype['AvailabilityZone'] = undefined;

/**
 * @member {String} InstanceType
 */
SingleInstanceHealth.prototype['InstanceType'] = undefined;






export default SingleInstanceHealth;

