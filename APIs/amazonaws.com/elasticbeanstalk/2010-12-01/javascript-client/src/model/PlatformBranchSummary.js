/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlatformBranchSummary model module.
 * @module model/PlatformBranchSummary
 * @version 2010-12-01
 */
class PlatformBranchSummary {
    /**
     * Constructs a new <code>PlatformBranchSummary</code>.
     * Summary information about a platform branch.
     * @alias module:model/PlatformBranchSummary
     */
    constructor() { 
        
        PlatformBranchSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlatformBranchSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlatformBranchSummary} obj Optional instance to populate.
     * @return {module:model/PlatformBranchSummary} The populated <code>PlatformBranchSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlatformBranchSummary();

            if (data.hasOwnProperty('PlatformName')) {
                obj['PlatformName'] = ApiClient.convertToType(data['PlatformName'], 'String');
            }
            if (data.hasOwnProperty('BranchName')) {
                obj['BranchName'] = ApiClient.convertToType(data['BranchName'], 'String');
            }
            if (data.hasOwnProperty('LifecycleState')) {
                obj['LifecycleState'] = ApiClient.convertToType(data['LifecycleState'], 'String');
            }
            if (data.hasOwnProperty('BranchOrder')) {
                obj['BranchOrder'] = ApiClient.convertToType(data['BranchOrder'], 'Number');
            }
            if (data.hasOwnProperty('SupportedTierList')) {
                obj['SupportedTierList'] = ApiClient.convertToType(data['SupportedTierList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlatformBranchSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlatformBranchSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PlatformName`
        if (data['PlatformName']) { // data not null
          String.validateJSON(data['PlatformName']);
        }
        // validate the optional field `BranchName`
        if (data['BranchName']) { // data not null
          String.validateJSON(data['BranchName']);
        }
        // validate the optional field `LifecycleState`
        if (data['LifecycleState']) { // data not null
          String.validateJSON(data['LifecycleState']);
        }
        // validate the optional field `BranchOrder`
        if (data['BranchOrder']) { // data not null
          Number.validateJSON(data['BranchOrder']);
        }
        // validate the optional field `SupportedTierList`
        if (data['SupportedTierList']) { // data not null
          Array.validateJSON(data['SupportedTierList']);
        }

        return true;
    }


}



/**
 * @member {String} PlatformName
 */
PlatformBranchSummary.prototype['PlatformName'] = undefined;

/**
 * @member {String} BranchName
 */
PlatformBranchSummary.prototype['BranchName'] = undefined;

/**
 * @member {String} LifecycleState
 */
PlatformBranchSummary.prototype['LifecycleState'] = undefined;

/**
 * @member {Number} BranchOrder
 */
PlatformBranchSummary.prototype['BranchOrder'] = undefined;

/**
 * @member {Array} SupportedTierList
 */
PlatformBranchSummary.prototype['SupportedTierList'] = undefined;






export default PlatformBranchSummary;

