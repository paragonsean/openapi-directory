/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CPUUtilization from './CPUUtilization';

/**
 * The SystemStatusCPUUtilization model module.
 * @module model/SystemStatusCPUUtilization
 * @version 2010-12-01
 */
class SystemStatusCPUUtilization {
    /**
     * Constructs a new <code>SystemStatusCPUUtilization</code>.
     * @alias module:model/SystemStatusCPUUtilization
     * @implements module:model/CPUUtilization
     */
    constructor() { 
        CPUUtilization.initialize(this);
        SystemStatusCPUUtilization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SystemStatusCPUUtilization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemStatusCPUUtilization} obj Optional instance to populate.
     * @return {module:model/SystemStatusCPUUtilization} The populated <code>SystemStatusCPUUtilization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemStatusCPUUtilization();
            CPUUtilization.constructFromObject(data, obj);

            if (data.hasOwnProperty('User')) {
                obj['User'] = ApiClient.convertToType(data['User'], 'Number');
            }
            if (data.hasOwnProperty('Nice')) {
                obj['Nice'] = ApiClient.convertToType(data['Nice'], 'Number');
            }
            if (data.hasOwnProperty('System')) {
                obj['System'] = ApiClient.convertToType(data['System'], 'Number');
            }
            if (data.hasOwnProperty('Idle')) {
                obj['Idle'] = ApiClient.convertToType(data['Idle'], 'Number');
            }
            if (data.hasOwnProperty('IOWait')) {
                obj['IOWait'] = ApiClient.convertToType(data['IOWait'], 'Number');
            }
            if (data.hasOwnProperty('IRQ')) {
                obj['IRQ'] = ApiClient.convertToType(data['IRQ'], 'Number');
            }
            if (data.hasOwnProperty('SoftIRQ')) {
                obj['SoftIRQ'] = ApiClient.convertToType(data['SoftIRQ'], 'Number');
            }
            if (data.hasOwnProperty('Privileged')) {
                obj['Privileged'] = ApiClient.convertToType(data['Privileged'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemStatusCPUUtilization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemStatusCPUUtilization</code>.
     */
    static validateJSON(data) {
        // validate the optional field `User`
        if (data['User']) { // data not null
          Number.validateJSON(data['User']);
        }
        // validate the optional field `Nice`
        if (data['Nice']) { // data not null
          Number.validateJSON(data['Nice']);
        }
        // validate the optional field `System`
        if (data['System']) { // data not null
          Number.validateJSON(data['System']);
        }
        // validate the optional field `Idle`
        if (data['Idle']) { // data not null
          Number.validateJSON(data['Idle']);
        }
        // validate the optional field `IOWait`
        if (data['IOWait']) { // data not null
          Number.validateJSON(data['IOWait']);
        }
        // validate the optional field `IRQ`
        if (data['IRQ']) { // data not null
          Number.validateJSON(data['IRQ']);
        }
        // validate the optional field `SoftIRQ`
        if (data['SoftIRQ']) { // data not null
          Number.validateJSON(data['SoftIRQ']);
        }
        // validate the optional field `Privileged`
        if (data['Privileged']) { // data not null
          Number.validateJSON(data['Privileged']);
        }

        return true;
    }


}



/**
 * @member {Number} User
 */
SystemStatusCPUUtilization.prototype['User'] = undefined;

/**
 * @member {Number} Nice
 */
SystemStatusCPUUtilization.prototype['Nice'] = undefined;

/**
 * @member {Number} System
 */
SystemStatusCPUUtilization.prototype['System'] = undefined;

/**
 * @member {Number} Idle
 */
SystemStatusCPUUtilization.prototype['Idle'] = undefined;

/**
 * @member {Number} IOWait
 */
SystemStatusCPUUtilization.prototype['IOWait'] = undefined;

/**
 * @member {Number} IRQ
 */
SystemStatusCPUUtilization.prototype['IRQ'] = undefined;

/**
 * @member {Number} SoftIRQ
 */
SystemStatusCPUUtilization.prototype['SoftIRQ'] = undefined;

/**
 * @member {Number} Privileged
 */
SystemStatusCPUUtilization.prototype['Privileged'] = undefined;


// Implement CPUUtilization interface:
/**
 * @member {Number} User
 */
CPUUtilization.prototype['User'] = undefined;
/**
 * @member {Number} Nice
 */
CPUUtilization.prototype['Nice'] = undefined;
/**
 * @member {Number} System
 */
CPUUtilization.prototype['System'] = undefined;
/**
 * @member {Number} Idle
 */
CPUUtilization.prototype['Idle'] = undefined;
/**
 * @member {Number} IOWait
 */
CPUUtilization.prototype['IOWait'] = undefined;
/**
 * @member {Number} IRQ
 */
CPUUtilization.prototype['IRQ'] = undefined;
/**
 * @member {Number} SoftIRQ
 */
CPUUtilization.prototype['SoftIRQ'] = undefined;
/**
 * @member {Number} Privileged
 */
CPUUtilization.prototype['Privileged'] = undefined;




export default SystemStatusCPUUtilization;

