/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlatformStatus from './PlatformStatus';

/**
 * The PlatformSummary model module.
 * @module model/PlatformSummary
 * @version 2010-12-01
 */
class PlatformSummary {
    /**
     * Constructs a new <code>PlatformSummary</code>.
     * Summary information about a platform version.
     * @alias module:model/PlatformSummary
     */
    constructor() { 
        
        PlatformSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlatformSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlatformSummary} obj Optional instance to populate.
     * @return {module:model/PlatformSummary} The populated <code>PlatformSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlatformSummary();

            if (data.hasOwnProperty('PlatformArn')) {
                obj['PlatformArn'] = ApiClient.convertToType(data['PlatformArn'], 'String');
            }
            if (data.hasOwnProperty('PlatformOwner')) {
                obj['PlatformOwner'] = ApiClient.convertToType(data['PlatformOwner'], 'String');
            }
            if (data.hasOwnProperty('PlatformStatus')) {
                obj['PlatformStatus'] = ApiClient.convertToType(data['PlatformStatus'], PlatformStatus);
            }
            if (data.hasOwnProperty('PlatformCategory')) {
                obj['PlatformCategory'] = ApiClient.convertToType(data['PlatformCategory'], 'String');
            }
            if (data.hasOwnProperty('OperatingSystemName')) {
                obj['OperatingSystemName'] = ApiClient.convertToType(data['OperatingSystemName'], 'String');
            }
            if (data.hasOwnProperty('OperatingSystemVersion')) {
                obj['OperatingSystemVersion'] = ApiClient.convertToType(data['OperatingSystemVersion'], 'String');
            }
            if (data.hasOwnProperty('SupportedTierList')) {
                obj['SupportedTierList'] = ApiClient.convertToType(data['SupportedTierList'], Array);
            }
            if (data.hasOwnProperty('SupportedAddonList')) {
                obj['SupportedAddonList'] = ApiClient.convertToType(data['SupportedAddonList'], Array);
            }
            if (data.hasOwnProperty('PlatformLifecycleState')) {
                obj['PlatformLifecycleState'] = ApiClient.convertToType(data['PlatformLifecycleState'], 'String');
            }
            if (data.hasOwnProperty('PlatformVersion')) {
                obj['PlatformVersion'] = ApiClient.convertToType(data['PlatformVersion'], 'String');
            }
            if (data.hasOwnProperty('PlatformBranchName')) {
                obj['PlatformBranchName'] = ApiClient.convertToType(data['PlatformBranchName'], 'String');
            }
            if (data.hasOwnProperty('PlatformBranchLifecycleState')) {
                obj['PlatformBranchLifecycleState'] = ApiClient.convertToType(data['PlatformBranchLifecycleState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlatformSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlatformSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PlatformArn`
        if (data['PlatformArn']) { // data not null
          String.validateJSON(data['PlatformArn']);
        }
        // validate the optional field `PlatformOwner`
        if (data['PlatformOwner']) { // data not null
          String.validateJSON(data['PlatformOwner']);
        }
        // validate the optional field `PlatformStatus`
        if (data['PlatformStatus']) { // data not null
          PlatformStatus.validateJSON(data['PlatformStatus']);
        }
        // validate the optional field `PlatformCategory`
        if (data['PlatformCategory']) { // data not null
          String.validateJSON(data['PlatformCategory']);
        }
        // validate the optional field `OperatingSystemName`
        if (data['OperatingSystemName']) { // data not null
          String.validateJSON(data['OperatingSystemName']);
        }
        // validate the optional field `OperatingSystemVersion`
        if (data['OperatingSystemVersion']) { // data not null
          String.validateJSON(data['OperatingSystemVersion']);
        }
        // validate the optional field `SupportedTierList`
        if (data['SupportedTierList']) { // data not null
          Array.validateJSON(data['SupportedTierList']);
        }
        // validate the optional field `SupportedAddonList`
        if (data['SupportedAddonList']) { // data not null
          Array.validateJSON(data['SupportedAddonList']);
        }
        // validate the optional field `PlatformLifecycleState`
        if (data['PlatformLifecycleState']) { // data not null
          String.validateJSON(data['PlatformLifecycleState']);
        }
        // validate the optional field `PlatformVersion`
        if (data['PlatformVersion']) { // data not null
          String.validateJSON(data['PlatformVersion']);
        }
        // validate the optional field `PlatformBranchName`
        if (data['PlatformBranchName']) { // data not null
          String.validateJSON(data['PlatformBranchName']);
        }
        // validate the optional field `PlatformBranchLifecycleState`
        if (data['PlatformBranchLifecycleState']) { // data not null
          String.validateJSON(data['PlatformBranchLifecycleState']);
        }

        return true;
    }


}



/**
 * @member {String} PlatformArn
 */
PlatformSummary.prototype['PlatformArn'] = undefined;

/**
 * @member {String} PlatformOwner
 */
PlatformSummary.prototype['PlatformOwner'] = undefined;

/**
 * @member {module:model/PlatformStatus} PlatformStatus
 */
PlatformSummary.prototype['PlatformStatus'] = undefined;

/**
 * @member {String} PlatformCategory
 */
PlatformSummary.prototype['PlatformCategory'] = undefined;

/**
 * @member {String} OperatingSystemName
 */
PlatformSummary.prototype['OperatingSystemName'] = undefined;

/**
 * @member {String} OperatingSystemVersion
 */
PlatformSummary.prototype['OperatingSystemVersion'] = undefined;

/**
 * @member {Array} SupportedTierList
 */
PlatformSummary.prototype['SupportedTierList'] = undefined;

/**
 * @member {Array} SupportedAddonList
 */
PlatformSummary.prototype['SupportedAddonList'] = undefined;

/**
 * @member {String} PlatformLifecycleState
 */
PlatformSummary.prototype['PlatformLifecycleState'] = undefined;

/**
 * @member {String} PlatformVersion
 */
PlatformSummary.prototype['PlatformVersion'] = undefined;

/**
 * @member {String} PlatformBranchName
 */
PlatformSummary.prototype['PlatformBranchName'] = undefined;

/**
 * @member {String} PlatformBranchLifecycleState
 */
PlatformSummary.prototype['PlatformBranchLifecycleState'] = undefined;






export default PlatformSummary;

