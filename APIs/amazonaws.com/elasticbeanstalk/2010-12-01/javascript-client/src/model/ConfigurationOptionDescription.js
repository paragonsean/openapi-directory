/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationOptionDescriptionRegex from './ConfigurationOptionDescriptionRegex';
import ConfigurationOptionValueType from './ConfigurationOptionValueType';

/**
 * The ConfigurationOptionDescription model module.
 * @module model/ConfigurationOptionDescription
 * @version 2010-12-01
 */
class ConfigurationOptionDescription {
    /**
     * Constructs a new <code>ConfigurationOptionDescription</code>.
     * Describes the possible values for a configuration option.
     * @alias module:model/ConfigurationOptionDescription
     */
    constructor() { 
        
        ConfigurationOptionDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConfigurationOptionDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigurationOptionDescription} obj Optional instance to populate.
     * @return {module:model/ConfigurationOptionDescription} The populated <code>ConfigurationOptionDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigurationOptionDescription();

            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('DefaultValue')) {
                obj['DefaultValue'] = ApiClient.convertToType(data['DefaultValue'], 'String');
            }
            if (data.hasOwnProperty('ChangeSeverity')) {
                obj['ChangeSeverity'] = ApiClient.convertToType(data['ChangeSeverity'], 'String');
            }
            if (data.hasOwnProperty('UserDefined')) {
                obj['UserDefined'] = ApiClient.convertToType(data['UserDefined'], 'Boolean');
            }
            if (data.hasOwnProperty('ValueType')) {
                obj['ValueType'] = ApiClient.convertToType(data['ValueType'], ConfigurationOptionValueType);
            }
            if (data.hasOwnProperty('ValueOptions')) {
                obj['ValueOptions'] = ApiClient.convertToType(data['ValueOptions'], Array);
            }
            if (data.hasOwnProperty('MinValue')) {
                obj['MinValue'] = ApiClient.convertToType(data['MinValue'], 'Number');
            }
            if (data.hasOwnProperty('MaxValue')) {
                obj['MaxValue'] = ApiClient.convertToType(data['MaxValue'], 'Number');
            }
            if (data.hasOwnProperty('MaxLength')) {
                obj['MaxLength'] = ApiClient.convertToType(data['MaxLength'], 'Number');
            }
            if (data.hasOwnProperty('Regex')) {
                obj['Regex'] = ConfigurationOptionDescriptionRegex.constructFromObject(data['Regex']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigurationOptionDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigurationOptionDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Namespace`
        if (data['Namespace']) { // data not null
          String.validateJSON(data['Namespace']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `DefaultValue`
        if (data['DefaultValue']) { // data not null
          String.validateJSON(data['DefaultValue']);
        }
        // validate the optional field `ChangeSeverity`
        if (data['ChangeSeverity']) { // data not null
          String.validateJSON(data['ChangeSeverity']);
        }
        // validate the optional field `UserDefined`
        if (data['UserDefined']) { // data not null
          Boolean.validateJSON(data['UserDefined']);
        }
        // validate the optional field `ValueType`
        if (data['ValueType']) { // data not null
          ConfigurationOptionValueType.validateJSON(data['ValueType']);
        }
        // validate the optional field `ValueOptions`
        if (data['ValueOptions']) { // data not null
          Array.validateJSON(data['ValueOptions']);
        }
        // validate the optional field `MinValue`
        if (data['MinValue']) { // data not null
          Number.validateJSON(data['MinValue']);
        }
        // validate the optional field `MaxValue`
        if (data['MaxValue']) { // data not null
          Number.validateJSON(data['MaxValue']);
        }
        // validate the optional field `MaxLength`
        if (data['MaxLength']) { // data not null
          Number.validateJSON(data['MaxLength']);
        }
        // validate the optional field `Regex`
        if (data['Regex']) { // data not null
          ConfigurationOptionDescriptionRegex.validateJSON(data['Regex']);
        }

        return true;
    }


}



/**
 * @member {String} Namespace
 */
ConfigurationOptionDescription.prototype['Namespace'] = undefined;

/**
 * @member {String} Name
 */
ConfigurationOptionDescription.prototype['Name'] = undefined;

/**
 * @member {String} DefaultValue
 */
ConfigurationOptionDescription.prototype['DefaultValue'] = undefined;

/**
 * @member {String} ChangeSeverity
 */
ConfigurationOptionDescription.prototype['ChangeSeverity'] = undefined;

/**
 * @member {Boolean} UserDefined
 */
ConfigurationOptionDescription.prototype['UserDefined'] = undefined;

/**
 * @member {module:model/ConfigurationOptionValueType} ValueType
 */
ConfigurationOptionDescription.prototype['ValueType'] = undefined;

/**
 * @member {Array} ValueOptions
 */
ConfigurationOptionDescription.prototype['ValueOptions'] = undefined;

/**
 * @member {Number} MinValue
 */
ConfigurationOptionDescription.prototype['MinValue'] = undefined;

/**
 * @member {Number} MaxValue
 */
ConfigurationOptionDescription.prototype['MaxValue'] = undefined;

/**
 * @member {Number} MaxLength
 */
ConfigurationOptionDescription.prototype['MaxLength'] = undefined;

/**
 * @member {module:model/ConfigurationOptionDescriptionRegex} Regex
 */
ConfigurationOptionDescription.prototype['Regex'] = undefined;






export default ConfigurationOptionDescription;

