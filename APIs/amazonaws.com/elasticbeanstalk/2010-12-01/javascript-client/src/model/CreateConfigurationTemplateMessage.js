/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateConfigurationTemplateMessageSourceConfiguration from './CreateConfigurationTemplateMessageSourceConfiguration';

/**
 * The CreateConfigurationTemplateMessage model module.
 * @module model/CreateConfigurationTemplateMessage
 * @version 2010-12-01
 */
class CreateConfigurationTemplateMessage {
    /**
     * Constructs a new <code>CreateConfigurationTemplateMessage</code>.
     * Request to create a configuration template.
     * @alias module:model/CreateConfigurationTemplateMessage
     * @param applicationName {String} 
     * @param templateName {String} 
     */
    constructor(applicationName, templateName) { 
        
        CreateConfigurationTemplateMessage.initialize(this, applicationName, templateName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationName, templateName) { 
        obj['ApplicationName'] = applicationName;
        obj['TemplateName'] = templateName;
    }

    /**
     * Constructs a <code>CreateConfigurationTemplateMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateConfigurationTemplateMessage} obj Optional instance to populate.
     * @return {module:model/CreateConfigurationTemplateMessage} The populated <code>CreateConfigurationTemplateMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateConfigurationTemplateMessage();

            if (data.hasOwnProperty('ApplicationName')) {
                obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
            }
            if (data.hasOwnProperty('TemplateName')) {
                obj['TemplateName'] = ApiClient.convertToType(data['TemplateName'], 'String');
            }
            if (data.hasOwnProperty('SolutionStackName')) {
                obj['SolutionStackName'] = ApiClient.convertToType(data['SolutionStackName'], 'String');
            }
            if (data.hasOwnProperty('PlatformArn')) {
                obj['PlatformArn'] = ApiClient.convertToType(data['PlatformArn'], 'String');
            }
            if (data.hasOwnProperty('SourceConfiguration')) {
                obj['SourceConfiguration'] = CreateConfigurationTemplateMessageSourceConfiguration.constructFromObject(data['SourceConfiguration']);
            }
            if (data.hasOwnProperty('EnvironmentId')) {
                obj['EnvironmentId'] = ApiClient.convertToType(data['EnvironmentId'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('OptionSettings')) {
                obj['OptionSettings'] = ApiClient.convertToType(data['OptionSettings'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateConfigurationTemplateMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateConfigurationTemplateMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateConfigurationTemplateMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationName`
        if (data['ApplicationName']) { // data not null
          String.validateJSON(data['ApplicationName']);
        }
        // validate the optional field `TemplateName`
        if (data['TemplateName']) { // data not null
          String.validateJSON(data['TemplateName']);
        }
        // validate the optional field `SolutionStackName`
        if (data['SolutionStackName']) { // data not null
          String.validateJSON(data['SolutionStackName']);
        }
        // validate the optional field `PlatformArn`
        if (data['PlatformArn']) { // data not null
          String.validateJSON(data['PlatformArn']);
        }
        // validate the optional field `SourceConfiguration`
        if (data['SourceConfiguration']) { // data not null
          CreateConfigurationTemplateMessageSourceConfiguration.validateJSON(data['SourceConfiguration']);
        }
        // validate the optional field `EnvironmentId`
        if (data['EnvironmentId']) { // data not null
          String.validateJSON(data['EnvironmentId']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `OptionSettings`
        if (data['OptionSettings']) { // data not null
          Array.validateJSON(data['OptionSettings']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateConfigurationTemplateMessage.RequiredProperties = ["ApplicationName", "TemplateName"];

/**
 * @member {String} ApplicationName
 */
CreateConfigurationTemplateMessage.prototype['ApplicationName'] = undefined;

/**
 * @member {String} TemplateName
 */
CreateConfigurationTemplateMessage.prototype['TemplateName'] = undefined;

/**
 * @member {String} SolutionStackName
 */
CreateConfigurationTemplateMessage.prototype['SolutionStackName'] = undefined;

/**
 * @member {String} PlatformArn
 */
CreateConfigurationTemplateMessage.prototype['PlatformArn'] = undefined;

/**
 * @member {module:model/CreateConfigurationTemplateMessageSourceConfiguration} SourceConfiguration
 */
CreateConfigurationTemplateMessage.prototype['SourceConfiguration'] = undefined;

/**
 * @member {String} EnvironmentId
 */
CreateConfigurationTemplateMessage.prototype['EnvironmentId'] = undefined;

/**
 * @member {String} Description
 */
CreateConfigurationTemplateMessage.prototype['Description'] = undefined;

/**
 * @member {Array} OptionSettings
 */
CreateConfigurationTemplateMessage.prototype['OptionSettings'] = undefined;

/**
 * @member {Array} Tags
 */
CreateConfigurationTemplateMessage.prototype['Tags'] = undefined;






export default CreateConfigurationTemplateMessage;

