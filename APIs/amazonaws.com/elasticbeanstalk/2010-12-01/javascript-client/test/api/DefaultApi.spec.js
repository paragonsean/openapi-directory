/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElasticBeanstalk);
  }
}(this, function(expect, AwsElasticBeanstalk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElasticBeanstalk.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETAbortEnvironmentUpdate', function() {
      it('should call gETAbortEnvironmentUpdate successfully', function(done) {
        //uncomment below and update the code to test gETAbortEnvironmentUpdate
        //instance.gETAbortEnvironmentUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETApplyEnvironmentManagedAction', function() {
      it('should call gETApplyEnvironmentManagedAction successfully', function(done) {
        //uncomment below and update the code to test gETApplyEnvironmentManagedAction
        //instance.gETApplyEnvironmentManagedAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAssociateEnvironmentOperationsRole', function() {
      it('should call gETAssociateEnvironmentOperationsRole successfully', function(done) {
        //uncomment below and update the code to test gETAssociateEnvironmentOperationsRole
        //instance.gETAssociateEnvironmentOperationsRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCheckDNSAvailability', function() {
      it('should call gETCheckDNSAvailability successfully', function(done) {
        //uncomment below and update the code to test gETCheckDNSAvailability
        //instance.gETCheckDNSAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETComposeEnvironments', function() {
      it('should call gETComposeEnvironments successfully', function(done) {
        //uncomment below and update the code to test gETComposeEnvironments
        //instance.gETComposeEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateApplication', function() {
      it('should call gETCreateApplication successfully', function(done) {
        //uncomment below and update the code to test gETCreateApplication
        //instance.gETCreateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateApplicationVersion', function() {
      it('should call gETCreateApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test gETCreateApplicationVersion
        //instance.gETCreateApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateConfigurationTemplate', function() {
      it('should call gETCreateConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test gETCreateConfigurationTemplate
        //instance.gETCreateConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateEnvironment', function() {
      it('should call gETCreateEnvironment successfully', function(done) {
        //uncomment below and update the code to test gETCreateEnvironment
        //instance.gETCreateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreatePlatformVersion', function() {
      it('should call gETCreatePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test gETCreatePlatformVersion
        //instance.gETCreatePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateStorageLocation', function() {
      it('should call gETCreateStorageLocation successfully', function(done) {
        //uncomment below and update the code to test gETCreateStorageLocation
        //instance.gETCreateStorageLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteApplication', function() {
      it('should call gETDeleteApplication successfully', function(done) {
        //uncomment below and update the code to test gETDeleteApplication
        //instance.gETDeleteApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteApplicationVersion', function() {
      it('should call gETDeleteApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test gETDeleteApplicationVersion
        //instance.gETDeleteApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteConfigurationTemplate', function() {
      it('should call gETDeleteConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test gETDeleteConfigurationTemplate
        //instance.gETDeleteConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteEnvironmentConfiguration', function() {
      it('should call gETDeleteEnvironmentConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETDeleteEnvironmentConfiguration
        //instance.gETDeleteEnvironmentConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeletePlatformVersion', function() {
      it('should call gETDeletePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test gETDeletePlatformVersion
        //instance.gETDeletePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAccountAttributes', function() {
      it('should call gETDescribeAccountAttributes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAccountAttributes
        //instance.gETDescribeAccountAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeApplicationVersions', function() {
      it('should call gETDescribeApplicationVersions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeApplicationVersions
        //instance.gETDescribeApplicationVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeApplications', function() {
      it('should call gETDescribeApplications successfully', function(done) {
        //uncomment below and update the code to test gETDescribeApplications
        //instance.gETDescribeApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeConfigurationOptions', function() {
      it('should call gETDescribeConfigurationOptions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeConfigurationOptions
        //instance.gETDescribeConfigurationOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeConfigurationSettings', function() {
      it('should call gETDescribeConfigurationSettings successfully', function(done) {
        //uncomment below and update the code to test gETDescribeConfigurationSettings
        //instance.gETDescribeConfigurationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEnvironmentHealth', function() {
      it('should call gETDescribeEnvironmentHealth successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEnvironmentHealth
        //instance.gETDescribeEnvironmentHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEnvironmentManagedActionHistory', function() {
      it('should call gETDescribeEnvironmentManagedActionHistory successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEnvironmentManagedActionHistory
        //instance.gETDescribeEnvironmentManagedActionHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEnvironmentManagedActions', function() {
      it('should call gETDescribeEnvironmentManagedActions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEnvironmentManagedActions
        //instance.gETDescribeEnvironmentManagedActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEnvironmentResources', function() {
      it('should call gETDescribeEnvironmentResources successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEnvironmentResources
        //instance.gETDescribeEnvironmentResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEnvironments', function() {
      it('should call gETDescribeEnvironments successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEnvironments
        //instance.gETDescribeEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEvents', function() {
      it('should call gETDescribeEvents successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEvents
        //instance.gETDescribeEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeInstancesHealth', function() {
      it('should call gETDescribeInstancesHealth successfully', function(done) {
        //uncomment below and update the code to test gETDescribeInstancesHealth
        //instance.gETDescribeInstancesHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribePlatformVersion', function() {
      it('should call gETDescribePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test gETDescribePlatformVersion
        //instance.gETDescribePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDisassociateEnvironmentOperationsRole', function() {
      it('should call gETDisassociateEnvironmentOperationsRole successfully', function(done) {
        //uncomment below and update the code to test gETDisassociateEnvironmentOperationsRole
        //instance.gETDisassociateEnvironmentOperationsRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListAvailableSolutionStacks', function() {
      it('should call gETListAvailableSolutionStacks successfully', function(done) {
        //uncomment below and update the code to test gETListAvailableSolutionStacks
        //instance.gETListAvailableSolutionStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListPlatformBranches', function() {
      it('should call gETListPlatformBranches successfully', function(done) {
        //uncomment below and update the code to test gETListPlatformBranches
        //instance.gETListPlatformBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListPlatformVersions', function() {
      it('should call gETListPlatformVersions successfully', function(done) {
        //uncomment below and update the code to test gETListPlatformVersions
        //instance.gETListPlatformVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListTagsForResource', function() {
      it('should call gETListTagsForResource successfully', function(done) {
        //uncomment below and update the code to test gETListTagsForResource
        //instance.gETListTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRebuildEnvironment', function() {
      it('should call gETRebuildEnvironment successfully', function(done) {
        //uncomment below and update the code to test gETRebuildEnvironment
        //instance.gETRebuildEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRequestEnvironmentInfo', function() {
      it('should call gETRequestEnvironmentInfo successfully', function(done) {
        //uncomment below and update the code to test gETRequestEnvironmentInfo
        //instance.gETRequestEnvironmentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRestartAppServer', function() {
      it('should call gETRestartAppServer successfully', function(done) {
        //uncomment below and update the code to test gETRestartAppServer
        //instance.gETRestartAppServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRetrieveEnvironmentInfo', function() {
      it('should call gETRetrieveEnvironmentInfo successfully', function(done) {
        //uncomment below and update the code to test gETRetrieveEnvironmentInfo
        //instance.gETRetrieveEnvironmentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSwapEnvironmentCNAMEs', function() {
      it('should call gETSwapEnvironmentCNAMEs successfully', function(done) {
        //uncomment below and update the code to test gETSwapEnvironmentCNAMEs
        //instance.gETSwapEnvironmentCNAMEs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETTerminateEnvironment', function() {
      it('should call gETTerminateEnvironment successfully', function(done) {
        //uncomment below and update the code to test gETTerminateEnvironment
        //instance.gETTerminateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateApplication', function() {
      it('should call gETUpdateApplication successfully', function(done) {
        //uncomment below and update the code to test gETUpdateApplication
        //instance.gETUpdateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateApplicationResourceLifecycle', function() {
      it('should call gETUpdateApplicationResourceLifecycle successfully', function(done) {
        //uncomment below and update the code to test gETUpdateApplicationResourceLifecycle
        //instance.gETUpdateApplicationResourceLifecycle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateApplicationVersion', function() {
      it('should call gETUpdateApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test gETUpdateApplicationVersion
        //instance.gETUpdateApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateConfigurationTemplate', function() {
      it('should call gETUpdateConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test gETUpdateConfigurationTemplate
        //instance.gETUpdateConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateEnvironment', function() {
      it('should call gETUpdateEnvironment successfully', function(done) {
        //uncomment below and update the code to test gETUpdateEnvironment
        //instance.gETUpdateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateTagsForResource', function() {
      it('should call gETUpdateTagsForResource successfully', function(done) {
        //uncomment below and update the code to test gETUpdateTagsForResource
        //instance.gETUpdateTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETValidateConfigurationSettings', function() {
      it('should call gETValidateConfigurationSettings successfully', function(done) {
        //uncomment below and update the code to test gETValidateConfigurationSettings
        //instance.gETValidateConfigurationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAbortEnvironmentUpdate', function() {
      it('should call pOSTAbortEnvironmentUpdate successfully', function(done) {
        //uncomment below and update the code to test pOSTAbortEnvironmentUpdate
        //instance.pOSTAbortEnvironmentUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTApplyEnvironmentManagedAction', function() {
      it('should call pOSTApplyEnvironmentManagedAction successfully', function(done) {
        //uncomment below and update the code to test pOSTApplyEnvironmentManagedAction
        //instance.pOSTApplyEnvironmentManagedAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAssociateEnvironmentOperationsRole', function() {
      it('should call pOSTAssociateEnvironmentOperationsRole successfully', function(done) {
        //uncomment below and update the code to test pOSTAssociateEnvironmentOperationsRole
        //instance.pOSTAssociateEnvironmentOperationsRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCheckDNSAvailability', function() {
      it('should call pOSTCheckDNSAvailability successfully', function(done) {
        //uncomment below and update the code to test pOSTCheckDNSAvailability
        //instance.pOSTCheckDNSAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTComposeEnvironments', function() {
      it('should call pOSTComposeEnvironments successfully', function(done) {
        //uncomment below and update the code to test pOSTComposeEnvironments
        //instance.pOSTComposeEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateApplication', function() {
      it('should call pOSTCreateApplication successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateApplication
        //instance.pOSTCreateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateApplicationVersion', function() {
      it('should call pOSTCreateApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateApplicationVersion
        //instance.pOSTCreateApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateConfigurationTemplate', function() {
      it('should call pOSTCreateConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateConfigurationTemplate
        //instance.pOSTCreateConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateEnvironment', function() {
      it('should call pOSTCreateEnvironment successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateEnvironment
        //instance.pOSTCreateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreatePlatformVersion', function() {
      it('should call pOSTCreatePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTCreatePlatformVersion
        //instance.pOSTCreatePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateStorageLocation', function() {
      it('should call pOSTCreateStorageLocation successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateStorageLocation
        //instance.pOSTCreateStorageLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteApplication', function() {
      it('should call pOSTDeleteApplication successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteApplication
        //instance.pOSTDeleteApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteApplicationVersion', function() {
      it('should call pOSTDeleteApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteApplicationVersion
        //instance.pOSTDeleteApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteConfigurationTemplate', function() {
      it('should call pOSTDeleteConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteConfigurationTemplate
        //instance.pOSTDeleteConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteEnvironmentConfiguration', function() {
      it('should call pOSTDeleteEnvironmentConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteEnvironmentConfiguration
        //instance.pOSTDeleteEnvironmentConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeletePlatformVersion', function() {
      it('should call pOSTDeletePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTDeletePlatformVersion
        //instance.pOSTDeletePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAccountAttributes', function() {
      it('should call pOSTDescribeAccountAttributes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAccountAttributes
        //instance.pOSTDescribeAccountAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeApplicationVersions', function() {
      it('should call pOSTDescribeApplicationVersions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeApplicationVersions
        //instance.pOSTDescribeApplicationVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeApplications', function() {
      it('should call pOSTDescribeApplications successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeApplications
        //instance.pOSTDescribeApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeConfigurationOptions', function() {
      it('should call pOSTDescribeConfigurationOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeConfigurationOptions
        //instance.pOSTDescribeConfigurationOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeConfigurationSettings', function() {
      it('should call pOSTDescribeConfigurationSettings successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeConfigurationSettings
        //instance.pOSTDescribeConfigurationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEnvironmentHealth', function() {
      it('should call pOSTDescribeEnvironmentHealth successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEnvironmentHealth
        //instance.pOSTDescribeEnvironmentHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEnvironmentManagedActionHistory', function() {
      it('should call pOSTDescribeEnvironmentManagedActionHistory successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEnvironmentManagedActionHistory
        //instance.pOSTDescribeEnvironmentManagedActionHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEnvironmentManagedActions', function() {
      it('should call pOSTDescribeEnvironmentManagedActions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEnvironmentManagedActions
        //instance.pOSTDescribeEnvironmentManagedActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEnvironmentResources', function() {
      it('should call pOSTDescribeEnvironmentResources successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEnvironmentResources
        //instance.pOSTDescribeEnvironmentResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEnvironments', function() {
      it('should call pOSTDescribeEnvironments successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEnvironments
        //instance.pOSTDescribeEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEvents', function() {
      it('should call pOSTDescribeEvents successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEvents
        //instance.pOSTDescribeEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeInstancesHealth', function() {
      it('should call pOSTDescribeInstancesHealth successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeInstancesHealth
        //instance.pOSTDescribeInstancesHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribePlatformVersion', function() {
      it('should call pOSTDescribePlatformVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribePlatformVersion
        //instance.pOSTDescribePlatformVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDisassociateEnvironmentOperationsRole', function() {
      it('should call pOSTDisassociateEnvironmentOperationsRole successfully', function(done) {
        //uncomment below and update the code to test pOSTDisassociateEnvironmentOperationsRole
        //instance.pOSTDisassociateEnvironmentOperationsRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListAvailableSolutionStacks', function() {
      it('should call pOSTListAvailableSolutionStacks successfully', function(done) {
        //uncomment below and update the code to test pOSTListAvailableSolutionStacks
        //instance.pOSTListAvailableSolutionStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListPlatformBranches', function() {
      it('should call pOSTListPlatformBranches successfully', function(done) {
        //uncomment below and update the code to test pOSTListPlatformBranches
        //instance.pOSTListPlatformBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListPlatformVersions', function() {
      it('should call pOSTListPlatformVersions successfully', function(done) {
        //uncomment below and update the code to test pOSTListPlatformVersions
        //instance.pOSTListPlatformVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListTagsForResource', function() {
      it('should call pOSTListTagsForResource successfully', function(done) {
        //uncomment below and update the code to test pOSTListTagsForResource
        //instance.pOSTListTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRebuildEnvironment', function() {
      it('should call pOSTRebuildEnvironment successfully', function(done) {
        //uncomment below and update the code to test pOSTRebuildEnvironment
        //instance.pOSTRebuildEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRequestEnvironmentInfo', function() {
      it('should call pOSTRequestEnvironmentInfo successfully', function(done) {
        //uncomment below and update the code to test pOSTRequestEnvironmentInfo
        //instance.pOSTRequestEnvironmentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRestartAppServer', function() {
      it('should call pOSTRestartAppServer successfully', function(done) {
        //uncomment below and update the code to test pOSTRestartAppServer
        //instance.pOSTRestartAppServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRetrieveEnvironmentInfo', function() {
      it('should call pOSTRetrieveEnvironmentInfo successfully', function(done) {
        //uncomment below and update the code to test pOSTRetrieveEnvironmentInfo
        //instance.pOSTRetrieveEnvironmentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSwapEnvironmentCNAMEs', function() {
      it('should call pOSTSwapEnvironmentCNAMEs successfully', function(done) {
        //uncomment below and update the code to test pOSTSwapEnvironmentCNAMEs
        //instance.pOSTSwapEnvironmentCNAMEs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTTerminateEnvironment', function() {
      it('should call pOSTTerminateEnvironment successfully', function(done) {
        //uncomment below and update the code to test pOSTTerminateEnvironment
        //instance.pOSTTerminateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateApplication', function() {
      it('should call pOSTUpdateApplication successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateApplication
        //instance.pOSTUpdateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateApplicationResourceLifecycle', function() {
      it('should call pOSTUpdateApplicationResourceLifecycle successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateApplicationResourceLifecycle
        //instance.pOSTUpdateApplicationResourceLifecycle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateApplicationVersion', function() {
      it('should call pOSTUpdateApplicationVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateApplicationVersion
        //instance.pOSTUpdateApplicationVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateConfigurationTemplate', function() {
      it('should call pOSTUpdateConfigurationTemplate successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateConfigurationTemplate
        //instance.pOSTUpdateConfigurationTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateEnvironment', function() {
      it('should call pOSTUpdateEnvironment successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateEnvironment
        //instance.pOSTUpdateEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateTagsForResource', function() {
      it('should call pOSTUpdateTagsForResource successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateTagsForResource
        //instance.pOSTUpdateTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTValidateConfigurationSettings', function() {
      it('should call pOSTValidateConfigurationSettings successfully', function(done) {
        //uncomment below and update the code to test pOSTValidateConfigurationSettings
        //instance.pOSTValidateConfigurationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
