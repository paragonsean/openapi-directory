/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElasticBeanstalk);
  }
}(this, function(expect, AwsElasticBeanstalk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeEnvironmentHealthResult', function() {
    it('should create an instance of DescribeEnvironmentHealthResult', function() {
      // uncomment below and update the code to test DescribeEnvironmentHealthResult
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be.a(AwsElasticBeanstalk.DescribeEnvironmentHealthResult);
    });

    it('should have the property environmentName (base name: "EnvironmentName")', function() {
      // uncomment below and update the code to test the property environmentName
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property healthStatus (base name: "HealthStatus")', function() {
      // uncomment below and update the code to test the property healthStatus
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "Color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property causes (base name: "Causes")', function() {
      // uncomment below and update the code to test the property causes
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property applicationMetrics (base name: "ApplicationMetrics")', function() {
      // uncomment below and update the code to test the property applicationMetrics
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property instancesHealth (base name: "InstancesHealth")', function() {
      // uncomment below and update the code to test the property instancesHealth
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

    it('should have the property refreshedAt (base name: "RefreshedAt")', function() {
      // uncomment below and update the code to test the property refreshedAt
      //var instance = new AwsElasticBeanstalk.DescribeEnvironmentHealthResult();
      //expect(instance).to.be();
    });

  });

}));
