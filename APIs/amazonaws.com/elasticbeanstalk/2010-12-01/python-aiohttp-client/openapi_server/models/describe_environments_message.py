# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeEnvironmentsMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, version_label: str=None, environment_ids: List=None, environment_names: List=None, include_deleted: bool=None, included_deleted_back_to: datetime=None, max_records: int=None, next_token: str=None):
        """DescribeEnvironmentsMessage - a model defined in OpenAPI

        :param application_name: The application_name of this DescribeEnvironmentsMessage.
        :param version_label: The version_label of this DescribeEnvironmentsMessage.
        :param environment_ids: The environment_ids of this DescribeEnvironmentsMessage.
        :param environment_names: The environment_names of this DescribeEnvironmentsMessage.
        :param include_deleted: The include_deleted of this DescribeEnvironmentsMessage.
        :param included_deleted_back_to: The included_deleted_back_to of this DescribeEnvironmentsMessage.
        :param max_records: The max_records of this DescribeEnvironmentsMessage.
        :param next_token: The next_token of this DescribeEnvironmentsMessage.
        """
        self.openapi_types = {
            'application_name': str,
            'version_label': str,
            'environment_ids': List,
            'environment_names': List,
            'include_deleted': bool,
            'included_deleted_back_to': datetime,
            'max_records': int,
            'next_token': str
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'version_label': 'VersionLabel',
            'environment_ids': 'EnvironmentIds',
            'environment_names': 'EnvironmentNames',
            'include_deleted': 'IncludeDeleted',
            'included_deleted_back_to': 'IncludedDeletedBackTo',
            'max_records': 'MaxRecords',
            'next_token': 'NextToken'
        }

        self._application_name = application_name
        self._version_label = version_label
        self._environment_ids = environment_ids
        self._environment_names = environment_names
        self._include_deleted = include_deleted
        self._included_deleted_back_to = included_deleted_back_to
        self._max_records = max_records
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEnvironmentsMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEnvironmentsMessage of this DescribeEnvironmentsMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this DescribeEnvironmentsMessage.


        :return: The application_name of this DescribeEnvironmentsMessage.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DescribeEnvironmentsMessage.


        :param application_name: The application_name of this DescribeEnvironmentsMessage.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def version_label(self):
        """Gets the version_label of this DescribeEnvironmentsMessage.


        :return: The version_label of this DescribeEnvironmentsMessage.
        :rtype: str
        """
        return self._version_label

    @version_label.setter
    def version_label(self, version_label):
        """Sets the version_label of this DescribeEnvironmentsMessage.


        :param version_label: The version_label of this DescribeEnvironmentsMessage.
        :type version_label: str
        """

        self._version_label = version_label

    @property
    def environment_ids(self):
        """Gets the environment_ids of this DescribeEnvironmentsMessage.


        :return: The environment_ids of this DescribeEnvironmentsMessage.
        :rtype: List
        """
        return self._environment_ids

    @environment_ids.setter
    def environment_ids(self, environment_ids):
        """Sets the environment_ids of this DescribeEnvironmentsMessage.


        :param environment_ids: The environment_ids of this DescribeEnvironmentsMessage.
        :type environment_ids: List
        """

        self._environment_ids = environment_ids

    @property
    def environment_names(self):
        """Gets the environment_names of this DescribeEnvironmentsMessage.


        :return: The environment_names of this DescribeEnvironmentsMessage.
        :rtype: List
        """
        return self._environment_names

    @environment_names.setter
    def environment_names(self, environment_names):
        """Sets the environment_names of this DescribeEnvironmentsMessage.


        :param environment_names: The environment_names of this DescribeEnvironmentsMessage.
        :type environment_names: List
        """

        self._environment_names = environment_names

    @property
    def include_deleted(self):
        """Gets the include_deleted of this DescribeEnvironmentsMessage.


        :return: The include_deleted of this DescribeEnvironmentsMessage.
        :rtype: bool
        """
        return self._include_deleted

    @include_deleted.setter
    def include_deleted(self, include_deleted):
        """Sets the include_deleted of this DescribeEnvironmentsMessage.


        :param include_deleted: The include_deleted of this DescribeEnvironmentsMessage.
        :type include_deleted: bool
        """

        self._include_deleted = include_deleted

    @property
    def included_deleted_back_to(self):
        """Gets the included_deleted_back_to of this DescribeEnvironmentsMessage.


        :return: The included_deleted_back_to of this DescribeEnvironmentsMessage.
        :rtype: datetime
        """
        return self._included_deleted_back_to

    @included_deleted_back_to.setter
    def included_deleted_back_to(self, included_deleted_back_to):
        """Sets the included_deleted_back_to of this DescribeEnvironmentsMessage.


        :param included_deleted_back_to: The included_deleted_back_to of this DescribeEnvironmentsMessage.
        :type included_deleted_back_to: datetime
        """

        self._included_deleted_back_to = included_deleted_back_to

    @property
    def max_records(self):
        """Gets the max_records of this DescribeEnvironmentsMessage.


        :return: The max_records of this DescribeEnvironmentsMessage.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeEnvironmentsMessage.


        :param max_records: The max_records of this DescribeEnvironmentsMessage.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def next_token(self):
        """Gets the next_token of this DescribeEnvironmentsMessage.


        :return: The next_token of this DescribeEnvironmentsMessage.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeEnvironmentsMessage.


        :param next_token: The next_token of this DescribeEnvironmentsMessage.
        :type next_token: str
        """

        self._next_token = next_token
