# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_type import ComputeType
from openapi_server import util


class GETCreateApplicationVersionBuildConfigurationParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_name: str=None, code_build_service_role: str=None, compute_type: ComputeType=None, image: str=None, timeout_in_minutes: int=None):
        """GETCreateApplicationVersionBuildConfigurationParameter - a model defined in OpenAPI

        :param artifact_name: The artifact_name of this GETCreateApplicationVersionBuildConfigurationParameter.
        :param code_build_service_role: The code_build_service_role of this GETCreateApplicationVersionBuildConfigurationParameter.
        :param compute_type: The compute_type of this GETCreateApplicationVersionBuildConfigurationParameter.
        :param image: The image of this GETCreateApplicationVersionBuildConfigurationParameter.
        :param timeout_in_minutes: The timeout_in_minutes of this GETCreateApplicationVersionBuildConfigurationParameter.
        """
        self.openapi_types = {
            'artifact_name': str,
            'code_build_service_role': str,
            'compute_type': ComputeType,
            'image': str,
            'timeout_in_minutes': int
        }

        self.attribute_map = {
            'artifact_name': 'ArtifactName',
            'code_build_service_role': 'CodeBuildServiceRole',
            'compute_type': 'ComputeType',
            'image': 'Image',
            'timeout_in_minutes': 'TimeoutInMinutes'
        }

        self._artifact_name = artifact_name
        self._code_build_service_role = code_build_service_role
        self._compute_type = compute_type
        self._image = image
        self._timeout_in_minutes = timeout_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETCreateApplicationVersionBuildConfigurationParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_CreateApplicationVersion_BuildConfiguration_parameter of this GETCreateApplicationVersionBuildConfigurationParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_name(self):
        """Gets the artifact_name of this GETCreateApplicationVersionBuildConfigurationParameter.


        :return: The artifact_name of this GETCreateApplicationVersionBuildConfigurationParameter.
        :rtype: str
        """
        return self._artifact_name

    @artifact_name.setter
    def artifact_name(self, artifact_name):
        """Sets the artifact_name of this GETCreateApplicationVersionBuildConfigurationParameter.


        :param artifact_name: The artifact_name of this GETCreateApplicationVersionBuildConfigurationParameter.
        :type artifact_name: str
        """

        self._artifact_name = artifact_name

    @property
    def code_build_service_role(self):
        """Gets the code_build_service_role of this GETCreateApplicationVersionBuildConfigurationParameter.


        :return: The code_build_service_role of this GETCreateApplicationVersionBuildConfigurationParameter.
        :rtype: str
        """
        return self._code_build_service_role

    @code_build_service_role.setter
    def code_build_service_role(self, code_build_service_role):
        """Sets the code_build_service_role of this GETCreateApplicationVersionBuildConfigurationParameter.


        :param code_build_service_role: The code_build_service_role of this GETCreateApplicationVersionBuildConfigurationParameter.
        :type code_build_service_role: str
        """
        if code_build_service_role is None:
            raise ValueError("Invalid value for `code_build_service_role`, must not be `None`")

        self._code_build_service_role = code_build_service_role

    @property
    def compute_type(self):
        """Gets the compute_type of this GETCreateApplicationVersionBuildConfigurationParameter.


        :return: The compute_type of this GETCreateApplicationVersionBuildConfigurationParameter.
        :rtype: ComputeType
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this GETCreateApplicationVersionBuildConfigurationParameter.


        :param compute_type: The compute_type of this GETCreateApplicationVersionBuildConfigurationParameter.
        :type compute_type: ComputeType
        """

        self._compute_type = compute_type

    @property
    def image(self):
        """Gets the image of this GETCreateApplicationVersionBuildConfigurationParameter.


        :return: The image of this GETCreateApplicationVersionBuildConfigurationParameter.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this GETCreateApplicationVersionBuildConfigurationParameter.


        :param image: The image of this GETCreateApplicationVersionBuildConfigurationParameter.
        :type image: str
        """
        if image is None:
            raise ValueError("Invalid value for `image`, must not be `None`")

        self._image = image

    @property
    def timeout_in_minutes(self):
        """Gets the timeout_in_minutes of this GETCreateApplicationVersionBuildConfigurationParameter.


        :return: The timeout_in_minutes of this GETCreateApplicationVersionBuildConfigurationParameter.
        :rtype: int
        """
        return self._timeout_in_minutes

    @timeout_in_minutes.setter
    def timeout_in_minutes(self, timeout_in_minutes):
        """Sets the timeout_in_minutes of this GETCreateApplicationVersionBuildConfigurationParameter.


        :param timeout_in_minutes: The timeout_in_minutes of this GETCreateApplicationVersionBuildConfigurationParameter.
        :type timeout_in_minutes: int
        """

        self._timeout_in_minutes = timeout_in_minutes
