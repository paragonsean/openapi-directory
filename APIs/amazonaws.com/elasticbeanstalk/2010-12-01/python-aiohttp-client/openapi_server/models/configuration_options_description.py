# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationOptionsDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solution_stack_name: str=None, platform_arn: str=None, options: List=None):
        """ConfigurationOptionsDescription - a model defined in OpenAPI

        :param solution_stack_name: The solution_stack_name of this ConfigurationOptionsDescription.
        :param platform_arn: The platform_arn of this ConfigurationOptionsDescription.
        :param options: The options of this ConfigurationOptionsDescription.
        """
        self.openapi_types = {
            'solution_stack_name': str,
            'platform_arn': str,
            'options': List
        }

        self.attribute_map = {
            'solution_stack_name': 'SolutionStackName',
            'platform_arn': 'PlatformArn',
            'options': 'Options'
        }

        self._solution_stack_name = solution_stack_name
        self._platform_arn = platform_arn
        self._options = options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationOptionsDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationOptionsDescription of this ConfigurationOptionsDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solution_stack_name(self):
        """Gets the solution_stack_name of this ConfigurationOptionsDescription.


        :return: The solution_stack_name of this ConfigurationOptionsDescription.
        :rtype: str
        """
        return self._solution_stack_name

    @solution_stack_name.setter
    def solution_stack_name(self, solution_stack_name):
        """Sets the solution_stack_name of this ConfigurationOptionsDescription.


        :param solution_stack_name: The solution_stack_name of this ConfigurationOptionsDescription.
        :type solution_stack_name: str
        """

        self._solution_stack_name = solution_stack_name

    @property
    def platform_arn(self):
        """Gets the platform_arn of this ConfigurationOptionsDescription.


        :return: The platform_arn of this ConfigurationOptionsDescription.
        :rtype: str
        """
        return self._platform_arn

    @platform_arn.setter
    def platform_arn(self, platform_arn):
        """Sets the platform_arn of this ConfigurationOptionsDescription.


        :param platform_arn: The platform_arn of this ConfigurationOptionsDescription.
        :type platform_arn: str
        """

        self._platform_arn = platform_arn

    @property
    def options(self):
        """Gets the options of this ConfigurationOptionsDescription.


        :return: The options of this ConfigurationOptionsDescription.
        :rtype: List
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this ConfigurationOptionsDescription.


        :param options: The options of this ConfigurationOptionsDescription.
        :type options: List
        """

        self._options = options
