# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SolutionStackDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solution_stack_name: str=None, permitted_file_types: List=None):
        """SolutionStackDescription - a model defined in OpenAPI

        :param solution_stack_name: The solution_stack_name of this SolutionStackDescription.
        :param permitted_file_types: The permitted_file_types of this SolutionStackDescription.
        """
        self.openapi_types = {
            'solution_stack_name': str,
            'permitted_file_types': List
        }

        self.attribute_map = {
            'solution_stack_name': 'SolutionStackName',
            'permitted_file_types': 'PermittedFileTypes'
        }

        self._solution_stack_name = solution_stack_name
        self._permitted_file_types = permitted_file_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SolutionStackDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SolutionStackDescription of this SolutionStackDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solution_stack_name(self):
        """Gets the solution_stack_name of this SolutionStackDescription.


        :return: The solution_stack_name of this SolutionStackDescription.
        :rtype: str
        """
        return self._solution_stack_name

    @solution_stack_name.setter
    def solution_stack_name(self, solution_stack_name):
        """Sets the solution_stack_name of this SolutionStackDescription.


        :param solution_stack_name: The solution_stack_name of this SolutionStackDescription.
        :type solution_stack_name: str
        """

        self._solution_stack_name = solution_stack_name

    @property
    def permitted_file_types(self):
        """Gets the permitted_file_types of this SolutionStackDescription.


        :return: The permitted_file_types of this SolutionStackDescription.
        :rtype: List
        """
        return self._permitted_file_types

    @permitted_file_types.setter
    def permitted_file_types(self, permitted_file_types):
        """Sets the permitted_file_types of this SolutionStackDescription.


        :param permitted_file_types: The permitted_file_types of this SolutionStackDescription.
        :type permitted_file_types: List
        """

        self._permitted_file_types = permitted_file_types
