# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_type import ActionType
from openapi_server import util


class ApplyEnvironmentManagedActionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_id: str=None, action_description: str=None, action_type: ActionType=None, status: str=None):
        """ApplyEnvironmentManagedActionResult - a model defined in OpenAPI

        :param action_id: The action_id of this ApplyEnvironmentManagedActionResult.
        :param action_description: The action_description of this ApplyEnvironmentManagedActionResult.
        :param action_type: The action_type of this ApplyEnvironmentManagedActionResult.
        :param status: The status of this ApplyEnvironmentManagedActionResult.
        """
        self.openapi_types = {
            'action_id': str,
            'action_description': str,
            'action_type': ActionType,
            'status': str
        }

        self.attribute_map = {
            'action_id': 'ActionId',
            'action_description': 'ActionDescription',
            'action_type': 'ActionType',
            'status': 'Status'
        }

        self._action_id = action_id
        self._action_description = action_description
        self._action_type = action_type
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplyEnvironmentManagedActionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplyEnvironmentManagedActionResult of this ApplyEnvironmentManagedActionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_id(self):
        """Gets the action_id of this ApplyEnvironmentManagedActionResult.


        :return: The action_id of this ApplyEnvironmentManagedActionResult.
        :rtype: str
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this ApplyEnvironmentManagedActionResult.


        :param action_id: The action_id of this ApplyEnvironmentManagedActionResult.
        :type action_id: str
        """

        self._action_id = action_id

    @property
    def action_description(self):
        """Gets the action_description of this ApplyEnvironmentManagedActionResult.


        :return: The action_description of this ApplyEnvironmentManagedActionResult.
        :rtype: str
        """
        return self._action_description

    @action_description.setter
    def action_description(self, action_description):
        """Sets the action_description of this ApplyEnvironmentManagedActionResult.


        :param action_description: The action_description of this ApplyEnvironmentManagedActionResult.
        :type action_description: str
        """

        self._action_description = action_description

    @property
    def action_type(self):
        """Gets the action_type of this ApplyEnvironmentManagedActionResult.


        :return: The action_type of this ApplyEnvironmentManagedActionResult.
        :rtype: ActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this ApplyEnvironmentManagedActionResult.


        :param action_type: The action_type of this ApplyEnvironmentManagedActionResult.
        :type action_type: ActionType
        """

        self._action_type = action_type

    @property
    def status(self):
        """Gets the status of this ApplyEnvironmentManagedActionResult.


        :return: The status of this ApplyEnvironmentManagedActionResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplyEnvironmentManagedActionResult.


        :param status: The status of this ApplyEnvironmentManagedActionResult.
        :type status: str
        """

        self._status = status
