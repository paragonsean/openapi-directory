# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.platform_status import PlatformStatus
from openapi_server import util


class DescribePlatformVersionResultPlatformDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platform_arn: str=None, platform_owner: str=None, platform_name: str=None, platform_version: str=None, solution_stack_name: str=None, platform_status: PlatformStatus=None, date_created: datetime=None, date_updated: datetime=None, platform_category: str=None, description: str=None, maintainer: str=None, operating_system_name: str=None, operating_system_version: str=None, programming_languages: List=None, frameworks: List=None, custom_ami_list: List=None, supported_tier_list: List=None, supported_addon_list: List=None, platform_lifecycle_state: str=None, platform_branch_name: str=None, platform_branch_lifecycle_state: str=None):
        """DescribePlatformVersionResultPlatformDescription - a model defined in OpenAPI

        :param platform_arn: The platform_arn of this DescribePlatformVersionResultPlatformDescription.
        :param platform_owner: The platform_owner of this DescribePlatformVersionResultPlatformDescription.
        :param platform_name: The platform_name of this DescribePlatformVersionResultPlatformDescription.
        :param platform_version: The platform_version of this DescribePlatformVersionResultPlatformDescription.
        :param solution_stack_name: The solution_stack_name of this DescribePlatformVersionResultPlatformDescription.
        :param platform_status: The platform_status of this DescribePlatformVersionResultPlatformDescription.
        :param date_created: The date_created of this DescribePlatformVersionResultPlatformDescription.
        :param date_updated: The date_updated of this DescribePlatformVersionResultPlatformDescription.
        :param platform_category: The platform_category of this DescribePlatformVersionResultPlatformDescription.
        :param description: The description of this DescribePlatformVersionResultPlatformDescription.
        :param maintainer: The maintainer of this DescribePlatformVersionResultPlatformDescription.
        :param operating_system_name: The operating_system_name of this DescribePlatformVersionResultPlatformDescription.
        :param operating_system_version: The operating_system_version of this DescribePlatformVersionResultPlatformDescription.
        :param programming_languages: The programming_languages of this DescribePlatformVersionResultPlatformDescription.
        :param frameworks: The frameworks of this DescribePlatformVersionResultPlatformDescription.
        :param custom_ami_list: The custom_ami_list of this DescribePlatformVersionResultPlatformDescription.
        :param supported_tier_list: The supported_tier_list of this DescribePlatformVersionResultPlatformDescription.
        :param supported_addon_list: The supported_addon_list of this DescribePlatformVersionResultPlatformDescription.
        :param platform_lifecycle_state: The platform_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        :param platform_branch_name: The platform_branch_name of this DescribePlatformVersionResultPlatformDescription.
        :param platform_branch_lifecycle_state: The platform_branch_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        """
        self.openapi_types = {
            'platform_arn': str,
            'platform_owner': str,
            'platform_name': str,
            'platform_version': str,
            'solution_stack_name': str,
            'platform_status': PlatformStatus,
            'date_created': datetime,
            'date_updated': datetime,
            'platform_category': str,
            'description': str,
            'maintainer': str,
            'operating_system_name': str,
            'operating_system_version': str,
            'programming_languages': List,
            'frameworks': List,
            'custom_ami_list': List,
            'supported_tier_list': List,
            'supported_addon_list': List,
            'platform_lifecycle_state': str,
            'platform_branch_name': str,
            'platform_branch_lifecycle_state': str
        }

        self.attribute_map = {
            'platform_arn': 'PlatformArn',
            'platform_owner': 'PlatformOwner',
            'platform_name': 'PlatformName',
            'platform_version': 'PlatformVersion',
            'solution_stack_name': 'SolutionStackName',
            'platform_status': 'PlatformStatus',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'platform_category': 'PlatformCategory',
            'description': 'Description',
            'maintainer': 'Maintainer',
            'operating_system_name': 'OperatingSystemName',
            'operating_system_version': 'OperatingSystemVersion',
            'programming_languages': 'ProgrammingLanguages',
            'frameworks': 'Frameworks',
            'custom_ami_list': 'CustomAmiList',
            'supported_tier_list': 'SupportedTierList',
            'supported_addon_list': 'SupportedAddonList',
            'platform_lifecycle_state': 'PlatformLifecycleState',
            'platform_branch_name': 'PlatformBranchName',
            'platform_branch_lifecycle_state': 'PlatformBranchLifecycleState'
        }

        self._platform_arn = platform_arn
        self._platform_owner = platform_owner
        self._platform_name = platform_name
        self._platform_version = platform_version
        self._solution_stack_name = solution_stack_name
        self._platform_status = platform_status
        self._date_created = date_created
        self._date_updated = date_updated
        self._platform_category = platform_category
        self._description = description
        self._maintainer = maintainer
        self._operating_system_name = operating_system_name
        self._operating_system_version = operating_system_version
        self._programming_languages = programming_languages
        self._frameworks = frameworks
        self._custom_ami_list = custom_ami_list
        self._supported_tier_list = supported_tier_list
        self._supported_addon_list = supported_addon_list
        self._platform_lifecycle_state = platform_lifecycle_state
        self._platform_branch_name = platform_branch_name
        self._platform_branch_lifecycle_state = platform_branch_lifecycle_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePlatformVersionResultPlatformDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePlatformVersionResult_PlatformDescription of this DescribePlatformVersionResultPlatformDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platform_arn(self):
        """Gets the platform_arn of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_arn of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_arn

    @platform_arn.setter
    def platform_arn(self, platform_arn):
        """Sets the platform_arn of this DescribePlatformVersionResultPlatformDescription.


        :param platform_arn: The platform_arn of this DescribePlatformVersionResultPlatformDescription.
        :type platform_arn: str
        """

        self._platform_arn = platform_arn

    @property
    def platform_owner(self):
        """Gets the platform_owner of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_owner of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_owner

    @platform_owner.setter
    def platform_owner(self, platform_owner):
        """Sets the platform_owner of this DescribePlatformVersionResultPlatformDescription.


        :param platform_owner: The platform_owner of this DescribePlatformVersionResultPlatformDescription.
        :type platform_owner: str
        """

        self._platform_owner = platform_owner

    @property
    def platform_name(self):
        """Gets the platform_name of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_name of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_name

    @platform_name.setter
    def platform_name(self, platform_name):
        """Sets the platform_name of this DescribePlatformVersionResultPlatformDescription.


        :param platform_name: The platform_name of this DescribePlatformVersionResultPlatformDescription.
        :type platform_name: str
        """

        self._platform_name = platform_name

    @property
    def platform_version(self):
        """Gets the platform_version of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_version of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_version

    @platform_version.setter
    def platform_version(self, platform_version):
        """Sets the platform_version of this DescribePlatformVersionResultPlatformDescription.


        :param platform_version: The platform_version of this DescribePlatformVersionResultPlatformDescription.
        :type platform_version: str
        """

        self._platform_version = platform_version

    @property
    def solution_stack_name(self):
        """Gets the solution_stack_name of this DescribePlatformVersionResultPlatformDescription.


        :return: The solution_stack_name of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._solution_stack_name

    @solution_stack_name.setter
    def solution_stack_name(self, solution_stack_name):
        """Sets the solution_stack_name of this DescribePlatformVersionResultPlatformDescription.


        :param solution_stack_name: The solution_stack_name of this DescribePlatformVersionResultPlatformDescription.
        :type solution_stack_name: str
        """

        self._solution_stack_name = solution_stack_name

    @property
    def platform_status(self):
        """Gets the platform_status of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_status of this DescribePlatformVersionResultPlatformDescription.
        :rtype: PlatformStatus
        """
        return self._platform_status

    @platform_status.setter
    def platform_status(self, platform_status):
        """Sets the platform_status of this DescribePlatformVersionResultPlatformDescription.


        :param platform_status: The platform_status of this DescribePlatformVersionResultPlatformDescription.
        :type platform_status: PlatformStatus
        """

        self._platform_status = platform_status

    @property
    def date_created(self):
        """Gets the date_created of this DescribePlatformVersionResultPlatformDescription.


        :return: The date_created of this DescribePlatformVersionResultPlatformDescription.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this DescribePlatformVersionResultPlatformDescription.


        :param date_created: The date_created of this DescribePlatformVersionResultPlatformDescription.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this DescribePlatformVersionResultPlatformDescription.


        :return: The date_updated of this DescribePlatformVersionResultPlatformDescription.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this DescribePlatformVersionResultPlatformDescription.


        :param date_updated: The date_updated of this DescribePlatformVersionResultPlatformDescription.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def platform_category(self):
        """Gets the platform_category of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_category of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_category

    @platform_category.setter
    def platform_category(self, platform_category):
        """Sets the platform_category of this DescribePlatformVersionResultPlatformDescription.


        :param platform_category: The platform_category of this DescribePlatformVersionResultPlatformDescription.
        :type platform_category: str
        """

        self._platform_category = platform_category

    @property
    def description(self):
        """Gets the description of this DescribePlatformVersionResultPlatformDescription.


        :return: The description of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribePlatformVersionResultPlatformDescription.


        :param description: The description of this DescribePlatformVersionResultPlatformDescription.
        :type description: str
        """

        self._description = description

    @property
    def maintainer(self):
        """Gets the maintainer of this DescribePlatformVersionResultPlatformDescription.


        :return: The maintainer of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._maintainer

    @maintainer.setter
    def maintainer(self, maintainer):
        """Sets the maintainer of this DescribePlatformVersionResultPlatformDescription.


        :param maintainer: The maintainer of this DescribePlatformVersionResultPlatformDescription.
        :type maintainer: str
        """

        self._maintainer = maintainer

    @property
    def operating_system_name(self):
        """Gets the operating_system_name of this DescribePlatformVersionResultPlatformDescription.


        :return: The operating_system_name of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._operating_system_name

    @operating_system_name.setter
    def operating_system_name(self, operating_system_name):
        """Sets the operating_system_name of this DescribePlatformVersionResultPlatformDescription.


        :param operating_system_name: The operating_system_name of this DescribePlatformVersionResultPlatformDescription.
        :type operating_system_name: str
        """

        self._operating_system_name = operating_system_name

    @property
    def operating_system_version(self):
        """Gets the operating_system_version of this DescribePlatformVersionResultPlatformDescription.


        :return: The operating_system_version of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._operating_system_version

    @operating_system_version.setter
    def operating_system_version(self, operating_system_version):
        """Sets the operating_system_version of this DescribePlatformVersionResultPlatformDescription.


        :param operating_system_version: The operating_system_version of this DescribePlatformVersionResultPlatformDescription.
        :type operating_system_version: str
        """

        self._operating_system_version = operating_system_version

    @property
    def programming_languages(self):
        """Gets the programming_languages of this DescribePlatformVersionResultPlatformDescription.


        :return: The programming_languages of this DescribePlatformVersionResultPlatformDescription.
        :rtype: List
        """
        return self._programming_languages

    @programming_languages.setter
    def programming_languages(self, programming_languages):
        """Sets the programming_languages of this DescribePlatformVersionResultPlatformDescription.


        :param programming_languages: The programming_languages of this DescribePlatformVersionResultPlatformDescription.
        :type programming_languages: List
        """

        self._programming_languages = programming_languages

    @property
    def frameworks(self):
        """Gets the frameworks of this DescribePlatformVersionResultPlatformDescription.


        :return: The frameworks of this DescribePlatformVersionResultPlatformDescription.
        :rtype: List
        """
        return self._frameworks

    @frameworks.setter
    def frameworks(self, frameworks):
        """Sets the frameworks of this DescribePlatformVersionResultPlatformDescription.


        :param frameworks: The frameworks of this DescribePlatformVersionResultPlatformDescription.
        :type frameworks: List
        """

        self._frameworks = frameworks

    @property
    def custom_ami_list(self):
        """Gets the custom_ami_list of this DescribePlatformVersionResultPlatformDescription.


        :return: The custom_ami_list of this DescribePlatformVersionResultPlatformDescription.
        :rtype: List
        """
        return self._custom_ami_list

    @custom_ami_list.setter
    def custom_ami_list(self, custom_ami_list):
        """Sets the custom_ami_list of this DescribePlatformVersionResultPlatformDescription.


        :param custom_ami_list: The custom_ami_list of this DescribePlatformVersionResultPlatformDescription.
        :type custom_ami_list: List
        """

        self._custom_ami_list = custom_ami_list

    @property
    def supported_tier_list(self):
        """Gets the supported_tier_list of this DescribePlatformVersionResultPlatformDescription.


        :return: The supported_tier_list of this DescribePlatformVersionResultPlatformDescription.
        :rtype: List
        """
        return self._supported_tier_list

    @supported_tier_list.setter
    def supported_tier_list(self, supported_tier_list):
        """Sets the supported_tier_list of this DescribePlatformVersionResultPlatformDescription.


        :param supported_tier_list: The supported_tier_list of this DescribePlatformVersionResultPlatformDescription.
        :type supported_tier_list: List
        """

        self._supported_tier_list = supported_tier_list

    @property
    def supported_addon_list(self):
        """Gets the supported_addon_list of this DescribePlatformVersionResultPlatformDescription.


        :return: The supported_addon_list of this DescribePlatformVersionResultPlatformDescription.
        :rtype: List
        """
        return self._supported_addon_list

    @supported_addon_list.setter
    def supported_addon_list(self, supported_addon_list):
        """Sets the supported_addon_list of this DescribePlatformVersionResultPlatformDescription.


        :param supported_addon_list: The supported_addon_list of this DescribePlatformVersionResultPlatformDescription.
        :type supported_addon_list: List
        """

        self._supported_addon_list = supported_addon_list

    @property
    def platform_lifecycle_state(self):
        """Gets the platform_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_lifecycle_state

    @platform_lifecycle_state.setter
    def platform_lifecycle_state(self, platform_lifecycle_state):
        """Sets the platform_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.


        :param platform_lifecycle_state: The platform_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        :type platform_lifecycle_state: str
        """

        self._platform_lifecycle_state = platform_lifecycle_state

    @property
    def platform_branch_name(self):
        """Gets the platform_branch_name of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_branch_name of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_branch_name

    @platform_branch_name.setter
    def platform_branch_name(self, platform_branch_name):
        """Sets the platform_branch_name of this DescribePlatformVersionResultPlatformDescription.


        :param platform_branch_name: The platform_branch_name of this DescribePlatformVersionResultPlatformDescription.
        :type platform_branch_name: str
        """

        self._platform_branch_name = platform_branch_name

    @property
    def platform_branch_lifecycle_state(self):
        """Gets the platform_branch_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.


        :return: The platform_branch_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        :rtype: str
        """
        return self._platform_branch_lifecycle_state

    @platform_branch_lifecycle_state.setter
    def platform_branch_lifecycle_state(self, platform_branch_lifecycle_state):
        """Sets the platform_branch_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.


        :param platform_branch_lifecycle_state: The platform_branch_lifecycle_state of this DescribePlatformVersionResultPlatformDescription.
        :type platform_branch_lifecycle_state: str
        """

        self._platform_branch_lifecycle_state = platform_branch_lifecycle_state
