# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlatformFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, operator: str=None, values: List=None):
        """PlatformFilter - a model defined in OpenAPI

        :param type: The type of this PlatformFilter.
        :param operator: The operator of this PlatformFilter.
        :param values: The values of this PlatformFilter.
        """
        self.openapi_types = {
            'type': str,
            'operator': str,
            'values': List
        }

        self.attribute_map = {
            'type': 'Type',
            'operator': 'Operator',
            'values': 'Values'
        }

        self._type = type
        self._operator = operator
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlatformFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlatformFilter of this PlatformFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this PlatformFilter.


        :return: The type of this PlatformFilter.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PlatformFilter.


        :param type: The type of this PlatformFilter.
        :type type: str
        """

        self._type = type

    @property
    def operator(self):
        """Gets the operator of this PlatformFilter.


        :return: The operator of this PlatformFilter.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this PlatformFilter.


        :param operator: The operator of this PlatformFilter.
        :type operator: str
        """

        self._operator = operator

    @property
    def values(self):
        """Gets the values of this PlatformFilter.


        :return: The values of this PlatformFilter.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this PlatformFilter.


        :param values: The values of this PlatformFilter.
        :type values: List
        """

        self._values = values
