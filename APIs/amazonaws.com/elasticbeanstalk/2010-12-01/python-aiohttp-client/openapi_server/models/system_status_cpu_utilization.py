# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemStatusCPUUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user: float=None, nice: float=None, system: float=None, idle: float=None, io_wait: float=None, irq: float=None, soft_irq: float=None, privileged: float=None):
        """SystemStatusCPUUtilization - a model defined in OpenAPI

        :param user: The user of this SystemStatusCPUUtilization.
        :param nice: The nice of this SystemStatusCPUUtilization.
        :param system: The system of this SystemStatusCPUUtilization.
        :param idle: The idle of this SystemStatusCPUUtilization.
        :param io_wait: The io_wait of this SystemStatusCPUUtilization.
        :param irq: The irq of this SystemStatusCPUUtilization.
        :param soft_irq: The soft_irq of this SystemStatusCPUUtilization.
        :param privileged: The privileged of this SystemStatusCPUUtilization.
        """
        self.openapi_types = {
            'user': float,
            'nice': float,
            'system': float,
            'idle': float,
            'io_wait': float,
            'irq': float,
            'soft_irq': float,
            'privileged': float
        }

        self.attribute_map = {
            'user': 'User',
            'nice': 'Nice',
            'system': 'System',
            'idle': 'Idle',
            'io_wait': 'IOWait',
            'irq': 'IRQ',
            'soft_irq': 'SoftIRQ',
            'privileged': 'Privileged'
        }

        self._user = user
        self._nice = nice
        self._system = system
        self._idle = idle
        self._io_wait = io_wait
        self._irq = irq
        self._soft_irq = soft_irq
        self._privileged = privileged

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemStatusCPUUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemStatus_CPUUtilization of this SystemStatusCPUUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self):
        """Gets the user of this SystemStatusCPUUtilization.


        :return: The user of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this SystemStatusCPUUtilization.


        :param user: The user of this SystemStatusCPUUtilization.
        :type user: float
        """

        self._user = user

    @property
    def nice(self):
        """Gets the nice of this SystemStatusCPUUtilization.


        :return: The nice of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._nice

    @nice.setter
    def nice(self, nice):
        """Sets the nice of this SystemStatusCPUUtilization.


        :param nice: The nice of this SystemStatusCPUUtilization.
        :type nice: float
        """

        self._nice = nice

    @property
    def system(self):
        """Gets the system of this SystemStatusCPUUtilization.


        :return: The system of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this SystemStatusCPUUtilization.


        :param system: The system of this SystemStatusCPUUtilization.
        :type system: float
        """

        self._system = system

    @property
    def idle(self):
        """Gets the idle of this SystemStatusCPUUtilization.


        :return: The idle of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._idle

    @idle.setter
    def idle(self, idle):
        """Sets the idle of this SystemStatusCPUUtilization.


        :param idle: The idle of this SystemStatusCPUUtilization.
        :type idle: float
        """

        self._idle = idle

    @property
    def io_wait(self):
        """Gets the io_wait of this SystemStatusCPUUtilization.


        :return: The io_wait of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._io_wait

    @io_wait.setter
    def io_wait(self, io_wait):
        """Sets the io_wait of this SystemStatusCPUUtilization.


        :param io_wait: The io_wait of this SystemStatusCPUUtilization.
        :type io_wait: float
        """

        self._io_wait = io_wait

    @property
    def irq(self):
        """Gets the irq of this SystemStatusCPUUtilization.


        :return: The irq of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._irq

    @irq.setter
    def irq(self, irq):
        """Sets the irq of this SystemStatusCPUUtilization.


        :param irq: The irq of this SystemStatusCPUUtilization.
        :type irq: float
        """

        self._irq = irq

    @property
    def soft_irq(self):
        """Gets the soft_irq of this SystemStatusCPUUtilization.


        :return: The soft_irq of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._soft_irq

    @soft_irq.setter
    def soft_irq(self, soft_irq):
        """Sets the soft_irq of this SystemStatusCPUUtilization.


        :param soft_irq: The soft_irq of this SystemStatusCPUUtilization.
        :type soft_irq: float
        """

        self._soft_irq = soft_irq

    @property
    def privileged(self):
        """Gets the privileged of this SystemStatusCPUUtilization.


        :return: The privileged of this SystemStatusCPUUtilization.
        :rtype: float
        """
        return self._privileged

    @privileged.setter
    def privileged(self, privileged):
        """Sets the privileged of this SystemStatusCPUUtilization.


        :param privileged: The privileged of this SystemStatusCPUUtilization.
        :type privileged: float
        """

        self._privileged = privileged
