# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteApplicationVersionMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, version_label: str=None, delete_source_bundle: bool=None):
        """DeleteApplicationVersionMessage - a model defined in OpenAPI

        :param application_name: The application_name of this DeleteApplicationVersionMessage.
        :param version_label: The version_label of this DeleteApplicationVersionMessage.
        :param delete_source_bundle: The delete_source_bundle of this DeleteApplicationVersionMessage.
        """
        self.openapi_types = {
            'application_name': str,
            'version_label': str,
            'delete_source_bundle': bool
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'version_label': 'VersionLabel',
            'delete_source_bundle': 'DeleteSourceBundle'
        }

        self._application_name = application_name
        self._version_label = version_label
        self._delete_source_bundle = delete_source_bundle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteApplicationVersionMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteApplicationVersionMessage of this DeleteApplicationVersionMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this DeleteApplicationVersionMessage.


        :return: The application_name of this DeleteApplicationVersionMessage.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DeleteApplicationVersionMessage.


        :param application_name: The application_name of this DeleteApplicationVersionMessage.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def version_label(self):
        """Gets the version_label of this DeleteApplicationVersionMessage.


        :return: The version_label of this DeleteApplicationVersionMessage.
        :rtype: str
        """
        return self._version_label

    @version_label.setter
    def version_label(self, version_label):
        """Sets the version_label of this DeleteApplicationVersionMessage.


        :param version_label: The version_label of this DeleteApplicationVersionMessage.
        :type version_label: str
        """
        if version_label is None:
            raise ValueError("Invalid value for `version_label`, must not be `None`")

        self._version_label = version_label

    @property
    def delete_source_bundle(self):
        """Gets the delete_source_bundle of this DeleteApplicationVersionMessage.


        :return: The delete_source_bundle of this DeleteApplicationVersionMessage.
        :rtype: bool
        """
        return self._delete_source_bundle

    @delete_source_bundle.setter
    def delete_source_bundle(self, delete_source_bundle):
        """Sets the delete_source_bundle of this DeleteApplicationVersionMessage.


        :param delete_source_bundle: The delete_source_bundle of this DeleteApplicationVersionMessage.
        :type delete_source_bundle: bool
        """

        self._delete_source_bundle = delete_source_bundle
