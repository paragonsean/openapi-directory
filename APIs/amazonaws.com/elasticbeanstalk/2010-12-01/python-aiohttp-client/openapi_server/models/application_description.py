# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_description_resource_lifecycle_config import ApplicationDescriptionResourceLifecycleConfig
from openapi_server import util


class ApplicationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_arn: str=None, application_name: str=None, description: str=None, date_created: datetime=None, date_updated: datetime=None, versions: List=None, configuration_templates: List=None, resource_lifecycle_config: ApplicationDescriptionResourceLifecycleConfig=None):
        """ApplicationDescription - a model defined in OpenAPI

        :param application_arn: The application_arn of this ApplicationDescription.
        :param application_name: The application_name of this ApplicationDescription.
        :param description: The description of this ApplicationDescription.
        :param date_created: The date_created of this ApplicationDescription.
        :param date_updated: The date_updated of this ApplicationDescription.
        :param versions: The versions of this ApplicationDescription.
        :param configuration_templates: The configuration_templates of this ApplicationDescription.
        :param resource_lifecycle_config: The resource_lifecycle_config of this ApplicationDescription.
        """
        self.openapi_types = {
            'application_arn': str,
            'application_name': str,
            'description': str,
            'date_created': datetime,
            'date_updated': datetime,
            'versions': List,
            'configuration_templates': List,
            'resource_lifecycle_config': ApplicationDescriptionResourceLifecycleConfig
        }

        self.attribute_map = {
            'application_arn': 'ApplicationArn',
            'application_name': 'ApplicationName',
            'description': 'Description',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'versions': 'Versions',
            'configuration_templates': 'ConfigurationTemplates',
            'resource_lifecycle_config': 'ResourceLifecycleConfig'
        }

        self._application_arn = application_arn
        self._application_name = application_name
        self._description = description
        self._date_created = date_created
        self._date_updated = date_updated
        self._versions = versions
        self._configuration_templates = configuration_templates
        self._resource_lifecycle_config = resource_lifecycle_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationDescription of this ApplicationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_arn(self):
        """Gets the application_arn of this ApplicationDescription.


        :return: The application_arn of this ApplicationDescription.
        :rtype: str
        """
        return self._application_arn

    @application_arn.setter
    def application_arn(self, application_arn):
        """Sets the application_arn of this ApplicationDescription.


        :param application_arn: The application_arn of this ApplicationDescription.
        :type application_arn: str
        """

        self._application_arn = application_arn

    @property
    def application_name(self):
        """Gets the application_name of this ApplicationDescription.


        :return: The application_name of this ApplicationDescription.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ApplicationDescription.


        :param application_name: The application_name of this ApplicationDescription.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def description(self):
        """Gets the description of this ApplicationDescription.


        :return: The description of this ApplicationDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationDescription.


        :param description: The description of this ApplicationDescription.
        :type description: str
        """

        self._description = description

    @property
    def date_created(self):
        """Gets the date_created of this ApplicationDescription.


        :return: The date_created of this ApplicationDescription.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApplicationDescription.


        :param date_created: The date_created of this ApplicationDescription.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApplicationDescription.


        :return: The date_updated of this ApplicationDescription.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApplicationDescription.


        :param date_updated: The date_updated of this ApplicationDescription.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def versions(self):
        """Gets the versions of this ApplicationDescription.


        :return: The versions of this ApplicationDescription.
        :rtype: List
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this ApplicationDescription.


        :param versions: The versions of this ApplicationDescription.
        :type versions: List
        """

        self._versions = versions

    @property
    def configuration_templates(self):
        """Gets the configuration_templates of this ApplicationDescription.


        :return: The configuration_templates of this ApplicationDescription.
        :rtype: List
        """
        return self._configuration_templates

    @configuration_templates.setter
    def configuration_templates(self, configuration_templates):
        """Sets the configuration_templates of this ApplicationDescription.


        :param configuration_templates: The configuration_templates of this ApplicationDescription.
        :type configuration_templates: List
        """

        self._configuration_templates = configuration_templates

    @property
    def resource_lifecycle_config(self):
        """Gets the resource_lifecycle_config of this ApplicationDescription.


        :return: The resource_lifecycle_config of this ApplicationDescription.
        :rtype: ApplicationDescriptionResourceLifecycleConfig
        """
        return self._resource_lifecycle_config

    @resource_lifecycle_config.setter
    def resource_lifecycle_config(self, resource_lifecycle_config):
        """Sets the resource_lifecycle_config of this ApplicationDescription.


        :param resource_lifecycle_config: The resource_lifecycle_config of this ApplicationDescription.
        :type resource_lifecycle_config: ApplicationDescriptionResourceLifecycleConfig
        """

        self._resource_lifecycle_config = resource_lifecycle_config
