# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlatformBranchSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platform_name: str=None, branch_name: str=None, lifecycle_state: str=None, branch_order: int=None, supported_tier_list: List=None):
        """PlatformBranchSummary - a model defined in OpenAPI

        :param platform_name: The platform_name of this PlatformBranchSummary.
        :param branch_name: The branch_name of this PlatformBranchSummary.
        :param lifecycle_state: The lifecycle_state of this PlatformBranchSummary.
        :param branch_order: The branch_order of this PlatformBranchSummary.
        :param supported_tier_list: The supported_tier_list of this PlatformBranchSummary.
        """
        self.openapi_types = {
            'platform_name': str,
            'branch_name': str,
            'lifecycle_state': str,
            'branch_order': int,
            'supported_tier_list': List
        }

        self.attribute_map = {
            'platform_name': 'PlatformName',
            'branch_name': 'BranchName',
            'lifecycle_state': 'LifecycleState',
            'branch_order': 'BranchOrder',
            'supported_tier_list': 'SupportedTierList'
        }

        self._platform_name = platform_name
        self._branch_name = branch_name
        self._lifecycle_state = lifecycle_state
        self._branch_order = branch_order
        self._supported_tier_list = supported_tier_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlatformBranchSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlatformBranchSummary of this PlatformBranchSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platform_name(self):
        """Gets the platform_name of this PlatformBranchSummary.


        :return: The platform_name of this PlatformBranchSummary.
        :rtype: str
        """
        return self._platform_name

    @platform_name.setter
    def platform_name(self, platform_name):
        """Sets the platform_name of this PlatformBranchSummary.


        :param platform_name: The platform_name of this PlatformBranchSummary.
        :type platform_name: str
        """

        self._platform_name = platform_name

    @property
    def branch_name(self):
        """Gets the branch_name of this PlatformBranchSummary.


        :return: The branch_name of this PlatformBranchSummary.
        :rtype: str
        """
        return self._branch_name

    @branch_name.setter
    def branch_name(self, branch_name):
        """Sets the branch_name of this PlatformBranchSummary.


        :param branch_name: The branch_name of this PlatformBranchSummary.
        :type branch_name: str
        """

        self._branch_name = branch_name

    @property
    def lifecycle_state(self):
        """Gets the lifecycle_state of this PlatformBranchSummary.


        :return: The lifecycle_state of this PlatformBranchSummary.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """Sets the lifecycle_state of this PlatformBranchSummary.


        :param lifecycle_state: The lifecycle_state of this PlatformBranchSummary.
        :type lifecycle_state: str
        """

        self._lifecycle_state = lifecycle_state

    @property
    def branch_order(self):
        """Gets the branch_order of this PlatformBranchSummary.


        :return: The branch_order of this PlatformBranchSummary.
        :rtype: int
        """
        return self._branch_order

    @branch_order.setter
    def branch_order(self, branch_order):
        """Sets the branch_order of this PlatformBranchSummary.


        :param branch_order: The branch_order of this PlatformBranchSummary.
        :type branch_order: int
        """

        self._branch_order = branch_order

    @property
    def supported_tier_list(self):
        """Gets the supported_tier_list of this PlatformBranchSummary.


        :return: The supported_tier_list of this PlatformBranchSummary.
        :rtype: List
        """
        return self._supported_tier_list

    @supported_tier_list.setter
    def supported_tier_list(self, supported_tier_list):
        """Sets the supported_tier_list of this PlatformBranchSummary.


        :param supported_tier_list: The supported_tier_list of this PlatformBranchSummary.
        :type supported_tier_list: List
        """

        self._supported_tier_list = supported_tier_list
