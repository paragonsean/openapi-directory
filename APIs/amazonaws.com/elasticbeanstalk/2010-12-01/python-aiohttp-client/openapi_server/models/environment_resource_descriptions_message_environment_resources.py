# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnvironmentResourceDescriptionsMessageEnvironmentResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_name: str=None, auto_scaling_groups: List=None, instances: List=None, launch_configurations: List=None, launch_templates: List=None, load_balancers: List=None, triggers: List=None, queues: List=None):
        """EnvironmentResourceDescriptionsMessageEnvironmentResources - a model defined in OpenAPI

        :param environment_name: The environment_name of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param auto_scaling_groups: The auto_scaling_groups of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param instances: The instances of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param launch_configurations: The launch_configurations of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param launch_templates: The launch_templates of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param load_balancers: The load_balancers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param triggers: The triggers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :param queues: The queues of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        """
        self.openapi_types = {
            'environment_name': str,
            'auto_scaling_groups': List,
            'instances': List,
            'launch_configurations': List,
            'launch_templates': List,
            'load_balancers': List,
            'triggers': List,
            'queues': List
        }

        self.attribute_map = {
            'environment_name': 'EnvironmentName',
            'auto_scaling_groups': 'AutoScalingGroups',
            'instances': 'Instances',
            'launch_configurations': 'LaunchConfigurations',
            'launch_templates': 'LaunchTemplates',
            'load_balancers': 'LoadBalancers',
            'triggers': 'Triggers',
            'queues': 'Queues'
        }

        self._environment_name = environment_name
        self._auto_scaling_groups = auto_scaling_groups
        self._instances = instances
        self._launch_configurations = launch_configurations
        self._launch_templates = launch_templates
        self._load_balancers = load_balancers
        self._triggers = triggers
        self._queues = queues

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentResourceDescriptionsMessageEnvironmentResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentResourceDescriptionsMessage_EnvironmentResources of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_name(self):
        """Gets the environment_name of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The environment_name of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param environment_name: The environment_name of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def auto_scaling_groups(self):
        """Gets the auto_scaling_groups of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The auto_scaling_groups of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._auto_scaling_groups

    @auto_scaling_groups.setter
    def auto_scaling_groups(self, auto_scaling_groups):
        """Sets the auto_scaling_groups of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param auto_scaling_groups: The auto_scaling_groups of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type auto_scaling_groups: List
        """

        self._auto_scaling_groups = auto_scaling_groups

    @property
    def instances(self):
        """Gets the instances of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The instances of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param instances: The instances of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type instances: List
        """

        self._instances = instances

    @property
    def launch_configurations(self):
        """Gets the launch_configurations of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The launch_configurations of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._launch_configurations

    @launch_configurations.setter
    def launch_configurations(self, launch_configurations):
        """Sets the launch_configurations of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param launch_configurations: The launch_configurations of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type launch_configurations: List
        """

        self._launch_configurations = launch_configurations

    @property
    def launch_templates(self):
        """Gets the launch_templates of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The launch_templates of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._launch_templates

    @launch_templates.setter
    def launch_templates(self, launch_templates):
        """Sets the launch_templates of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param launch_templates: The launch_templates of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type launch_templates: List
        """

        self._launch_templates = launch_templates

    @property
    def load_balancers(self):
        """Gets the load_balancers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The load_balancers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._load_balancers

    @load_balancers.setter
    def load_balancers(self, load_balancers):
        """Sets the load_balancers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param load_balancers: The load_balancers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type load_balancers: List
        """

        self._load_balancers = load_balancers

    @property
    def triggers(self):
        """Gets the triggers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The triggers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._triggers

    @triggers.setter
    def triggers(self, triggers):
        """Sets the triggers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param triggers: The triggers of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type triggers: List
        """

        self._triggers = triggers

    @property
    def queues(self):
        """Gets the queues of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :return: The queues of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :rtype: List
        """
        return self._queues

    @queues.setter
    def queues(self, queues):
        """Sets the queues of this EnvironmentResourceDescriptionsMessageEnvironmentResources.


        :param queues: The queues of this EnvironmentResourceDescriptionsMessageEnvironmentResources.
        :type queues: List
        """

        self._queues = queues
