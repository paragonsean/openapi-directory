# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_resource_lifecycle_description_message_resource_lifecycle_config import ApplicationResourceLifecycleDescriptionMessageResourceLifecycleConfig
from openapi_server import util


class UpdateApplicationResourceLifecycleMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, resource_lifecycle_config: ApplicationResourceLifecycleDescriptionMessageResourceLifecycleConfig=None):
        """UpdateApplicationResourceLifecycleMessage - a model defined in OpenAPI

        :param application_name: The application_name of this UpdateApplicationResourceLifecycleMessage.
        :param resource_lifecycle_config: The resource_lifecycle_config of this UpdateApplicationResourceLifecycleMessage.
        """
        self.openapi_types = {
            'application_name': str,
            'resource_lifecycle_config': ApplicationResourceLifecycleDescriptionMessageResourceLifecycleConfig
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'resource_lifecycle_config': 'ResourceLifecycleConfig'
        }

        self._application_name = application_name
        self._resource_lifecycle_config = resource_lifecycle_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApplicationResourceLifecycleMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApplicationResourceLifecycleMessage of this UpdateApplicationResourceLifecycleMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this UpdateApplicationResourceLifecycleMessage.


        :return: The application_name of this UpdateApplicationResourceLifecycleMessage.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this UpdateApplicationResourceLifecycleMessage.


        :param application_name: The application_name of this UpdateApplicationResourceLifecycleMessage.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def resource_lifecycle_config(self):
        """Gets the resource_lifecycle_config of this UpdateApplicationResourceLifecycleMessage.


        :return: The resource_lifecycle_config of this UpdateApplicationResourceLifecycleMessage.
        :rtype: ApplicationResourceLifecycleDescriptionMessageResourceLifecycleConfig
        """
        return self._resource_lifecycle_config

    @resource_lifecycle_config.setter
    def resource_lifecycle_config(self, resource_lifecycle_config):
        """Sets the resource_lifecycle_config of this UpdateApplicationResourceLifecycleMessage.


        :param resource_lifecycle_config: The resource_lifecycle_config of this UpdateApplicationResourceLifecycleMessage.
        :type resource_lifecycle_config: ApplicationResourceLifecycleDescriptionMessageResourceLifecycleConfig
        """
        if resource_lifecycle_config is None:
            raise ValueError("Invalid value for `resource_lifecycle_config`, must not be `None`")

        self._resource_lifecycle_config = resource_lifecycle_config
