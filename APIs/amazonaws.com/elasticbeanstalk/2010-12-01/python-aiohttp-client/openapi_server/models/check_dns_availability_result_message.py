# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckDNSAvailabilityResultMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: bool=None, fully_qualified_cname: str=None):
        """CheckDNSAvailabilityResultMessage - a model defined in OpenAPI

        :param available: The available of this CheckDNSAvailabilityResultMessage.
        :param fully_qualified_cname: The fully_qualified_cname of this CheckDNSAvailabilityResultMessage.
        """
        self.openapi_types = {
            'available': bool,
            'fully_qualified_cname': str
        }

        self.attribute_map = {
            'available': 'Available',
            'fully_qualified_cname': 'FullyQualifiedCNAME'
        }

        self._available = available
        self._fully_qualified_cname = fully_qualified_cname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckDNSAvailabilityResultMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckDNSAvailabilityResultMessage of this CheckDNSAvailabilityResultMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this CheckDNSAvailabilityResultMessage.


        :return: The available of this CheckDNSAvailabilityResultMessage.
        :rtype: bool
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this CheckDNSAvailabilityResultMessage.


        :param available: The available of this CheckDNSAvailabilityResultMessage.
        :type available: bool
        """

        self._available = available

    @property
    def fully_qualified_cname(self):
        """Gets the fully_qualified_cname of this CheckDNSAvailabilityResultMessage.


        :return: The fully_qualified_cname of this CheckDNSAvailabilityResultMessage.
        :rtype: str
        """
        return self._fully_qualified_cname

    @fully_qualified_cname.setter
    def fully_qualified_cname(self, fully_qualified_cname):
        """Sets the fully_qualified_cname of this CheckDNSAvailabilityResultMessage.


        :param fully_qualified_cname: The fully_qualified_cname of this CheckDNSAvailabilityResultMessage.
        :type fully_qualified_cname: str
        """

        self._fully_qualified_cname = fully_qualified_cname
