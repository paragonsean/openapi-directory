# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.environment_description_resources import EnvironmentDescriptionResources
from openapi_server.models.environment_description_tier import EnvironmentDescriptionTier
from openapi_server.models.environment_health import EnvironmentHealth
from openapi_server.models.environment_health_status import EnvironmentHealthStatus
from openapi_server.models.environment_status import EnvironmentStatus
from openapi_server import util


class EnvironmentDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_name: str=None, environment_id: str=None, application_name: str=None, version_label: str=None, solution_stack_name: str=None, platform_arn: str=None, template_name: str=None, description: str=None, endpoint_url: str=None, cname: str=None, date_created: datetime=None, date_updated: datetime=None, status: EnvironmentStatus=None, abortable_operation_in_progress: bool=None, health: EnvironmentHealth=None, health_status: EnvironmentHealthStatus=None, resources: EnvironmentDescriptionResources=None, tier: EnvironmentDescriptionTier=None, environment_links: List=None, environment_arn: str=None, operations_role: str=None):
        """EnvironmentDescription - a model defined in OpenAPI

        :param environment_name: The environment_name of this EnvironmentDescription.
        :param environment_id: The environment_id of this EnvironmentDescription.
        :param application_name: The application_name of this EnvironmentDescription.
        :param version_label: The version_label of this EnvironmentDescription.
        :param solution_stack_name: The solution_stack_name of this EnvironmentDescription.
        :param platform_arn: The platform_arn of this EnvironmentDescription.
        :param template_name: The template_name of this EnvironmentDescription.
        :param description: The description of this EnvironmentDescription.
        :param endpoint_url: The endpoint_url of this EnvironmentDescription.
        :param cname: The cname of this EnvironmentDescription.
        :param date_created: The date_created of this EnvironmentDescription.
        :param date_updated: The date_updated of this EnvironmentDescription.
        :param status: The status of this EnvironmentDescription.
        :param abortable_operation_in_progress: The abortable_operation_in_progress of this EnvironmentDescription.
        :param health: The health of this EnvironmentDescription.
        :param health_status: The health_status of this EnvironmentDescription.
        :param resources: The resources of this EnvironmentDescription.
        :param tier: The tier of this EnvironmentDescription.
        :param environment_links: The environment_links of this EnvironmentDescription.
        :param environment_arn: The environment_arn of this EnvironmentDescription.
        :param operations_role: The operations_role of this EnvironmentDescription.
        """
        self.openapi_types = {
            'environment_name': str,
            'environment_id': str,
            'application_name': str,
            'version_label': str,
            'solution_stack_name': str,
            'platform_arn': str,
            'template_name': str,
            'description': str,
            'endpoint_url': str,
            'cname': str,
            'date_created': datetime,
            'date_updated': datetime,
            'status': EnvironmentStatus,
            'abortable_operation_in_progress': bool,
            'health': EnvironmentHealth,
            'health_status': EnvironmentHealthStatus,
            'resources': EnvironmentDescriptionResources,
            'tier': EnvironmentDescriptionTier,
            'environment_links': List,
            'environment_arn': str,
            'operations_role': str
        }

        self.attribute_map = {
            'environment_name': 'EnvironmentName',
            'environment_id': 'EnvironmentId',
            'application_name': 'ApplicationName',
            'version_label': 'VersionLabel',
            'solution_stack_name': 'SolutionStackName',
            'platform_arn': 'PlatformArn',
            'template_name': 'TemplateName',
            'description': 'Description',
            'endpoint_url': 'EndpointURL',
            'cname': 'CNAME',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'status': 'Status',
            'abortable_operation_in_progress': 'AbortableOperationInProgress',
            'health': 'Health',
            'health_status': 'HealthStatus',
            'resources': 'Resources',
            'tier': 'Tier',
            'environment_links': 'EnvironmentLinks',
            'environment_arn': 'EnvironmentArn',
            'operations_role': 'OperationsRole'
        }

        self._environment_name = environment_name
        self._environment_id = environment_id
        self._application_name = application_name
        self._version_label = version_label
        self._solution_stack_name = solution_stack_name
        self._platform_arn = platform_arn
        self._template_name = template_name
        self._description = description
        self._endpoint_url = endpoint_url
        self._cname = cname
        self._date_created = date_created
        self._date_updated = date_updated
        self._status = status
        self._abortable_operation_in_progress = abortable_operation_in_progress
        self._health = health
        self._health_status = health_status
        self._resources = resources
        self._tier = tier
        self._environment_links = environment_links
        self._environment_arn = environment_arn
        self._operations_role = operations_role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentDescription of this EnvironmentDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_name(self):
        """Gets the environment_name of this EnvironmentDescription.


        :return: The environment_name of this EnvironmentDescription.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this EnvironmentDescription.


        :param environment_name: The environment_name of this EnvironmentDescription.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def environment_id(self):
        """Gets the environment_id of this EnvironmentDescription.


        :return: The environment_id of this EnvironmentDescription.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this EnvironmentDescription.


        :param environment_id: The environment_id of this EnvironmentDescription.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def application_name(self):
        """Gets the application_name of this EnvironmentDescription.


        :return: The application_name of this EnvironmentDescription.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this EnvironmentDescription.


        :param application_name: The application_name of this EnvironmentDescription.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def version_label(self):
        """Gets the version_label of this EnvironmentDescription.


        :return: The version_label of this EnvironmentDescription.
        :rtype: str
        """
        return self._version_label

    @version_label.setter
    def version_label(self, version_label):
        """Sets the version_label of this EnvironmentDescription.


        :param version_label: The version_label of this EnvironmentDescription.
        :type version_label: str
        """

        self._version_label = version_label

    @property
    def solution_stack_name(self):
        """Gets the solution_stack_name of this EnvironmentDescription.


        :return: The solution_stack_name of this EnvironmentDescription.
        :rtype: str
        """
        return self._solution_stack_name

    @solution_stack_name.setter
    def solution_stack_name(self, solution_stack_name):
        """Sets the solution_stack_name of this EnvironmentDescription.


        :param solution_stack_name: The solution_stack_name of this EnvironmentDescription.
        :type solution_stack_name: str
        """

        self._solution_stack_name = solution_stack_name

    @property
    def platform_arn(self):
        """Gets the platform_arn of this EnvironmentDescription.


        :return: The platform_arn of this EnvironmentDescription.
        :rtype: str
        """
        return self._platform_arn

    @platform_arn.setter
    def platform_arn(self, platform_arn):
        """Sets the platform_arn of this EnvironmentDescription.


        :param platform_arn: The platform_arn of this EnvironmentDescription.
        :type platform_arn: str
        """

        self._platform_arn = platform_arn

    @property
    def template_name(self):
        """Gets the template_name of this EnvironmentDescription.


        :return: The template_name of this EnvironmentDescription.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this EnvironmentDescription.


        :param template_name: The template_name of this EnvironmentDescription.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def description(self):
        """Gets the description of this EnvironmentDescription.


        :return: The description of this EnvironmentDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EnvironmentDescription.


        :param description: The description of this EnvironmentDescription.
        :type description: str
        """

        self._description = description

    @property
    def endpoint_url(self):
        """Gets the endpoint_url of this EnvironmentDescription.


        :return: The endpoint_url of this EnvironmentDescription.
        :rtype: str
        """
        return self._endpoint_url

    @endpoint_url.setter
    def endpoint_url(self, endpoint_url):
        """Sets the endpoint_url of this EnvironmentDescription.


        :param endpoint_url: The endpoint_url of this EnvironmentDescription.
        :type endpoint_url: str
        """

        self._endpoint_url = endpoint_url

    @property
    def cname(self):
        """Gets the cname of this EnvironmentDescription.


        :return: The cname of this EnvironmentDescription.
        :rtype: str
        """
        return self._cname

    @cname.setter
    def cname(self, cname):
        """Sets the cname of this EnvironmentDescription.


        :param cname: The cname of this EnvironmentDescription.
        :type cname: str
        """

        self._cname = cname

    @property
    def date_created(self):
        """Gets the date_created of this EnvironmentDescription.


        :return: The date_created of this EnvironmentDescription.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this EnvironmentDescription.


        :param date_created: The date_created of this EnvironmentDescription.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this EnvironmentDescription.


        :return: The date_updated of this EnvironmentDescription.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this EnvironmentDescription.


        :param date_updated: The date_updated of this EnvironmentDescription.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def status(self):
        """Gets the status of this EnvironmentDescription.


        :return: The status of this EnvironmentDescription.
        :rtype: EnvironmentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EnvironmentDescription.


        :param status: The status of this EnvironmentDescription.
        :type status: EnvironmentStatus
        """

        self._status = status

    @property
    def abortable_operation_in_progress(self):
        """Gets the abortable_operation_in_progress of this EnvironmentDescription.


        :return: The abortable_operation_in_progress of this EnvironmentDescription.
        :rtype: bool
        """
        return self._abortable_operation_in_progress

    @abortable_operation_in_progress.setter
    def abortable_operation_in_progress(self, abortable_operation_in_progress):
        """Sets the abortable_operation_in_progress of this EnvironmentDescription.


        :param abortable_operation_in_progress: The abortable_operation_in_progress of this EnvironmentDescription.
        :type abortable_operation_in_progress: bool
        """

        self._abortable_operation_in_progress = abortable_operation_in_progress

    @property
    def health(self):
        """Gets the health of this EnvironmentDescription.


        :return: The health of this EnvironmentDescription.
        :rtype: EnvironmentHealth
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this EnvironmentDescription.


        :param health: The health of this EnvironmentDescription.
        :type health: EnvironmentHealth
        """

        self._health = health

    @property
    def health_status(self):
        """Gets the health_status of this EnvironmentDescription.


        :return: The health_status of this EnvironmentDescription.
        :rtype: EnvironmentHealthStatus
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this EnvironmentDescription.


        :param health_status: The health_status of this EnvironmentDescription.
        :type health_status: EnvironmentHealthStatus
        """

        self._health_status = health_status

    @property
    def resources(self):
        """Gets the resources of this EnvironmentDescription.


        :return: The resources of this EnvironmentDescription.
        :rtype: EnvironmentDescriptionResources
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this EnvironmentDescription.


        :param resources: The resources of this EnvironmentDescription.
        :type resources: EnvironmentDescriptionResources
        """

        self._resources = resources

    @property
    def tier(self):
        """Gets the tier of this EnvironmentDescription.


        :return: The tier of this EnvironmentDescription.
        :rtype: EnvironmentDescriptionTier
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this EnvironmentDescription.


        :param tier: The tier of this EnvironmentDescription.
        :type tier: EnvironmentDescriptionTier
        """

        self._tier = tier

    @property
    def environment_links(self):
        """Gets the environment_links of this EnvironmentDescription.


        :return: The environment_links of this EnvironmentDescription.
        :rtype: List
        """
        return self._environment_links

    @environment_links.setter
    def environment_links(self, environment_links):
        """Sets the environment_links of this EnvironmentDescription.


        :param environment_links: The environment_links of this EnvironmentDescription.
        :type environment_links: List
        """

        self._environment_links = environment_links

    @property
    def environment_arn(self):
        """Gets the environment_arn of this EnvironmentDescription.


        :return: The environment_arn of this EnvironmentDescription.
        :rtype: str
        """
        return self._environment_arn

    @environment_arn.setter
    def environment_arn(self, environment_arn):
        """Sets the environment_arn of this EnvironmentDescription.


        :param environment_arn: The environment_arn of this EnvironmentDescription.
        :type environment_arn: str
        """

        self._environment_arn = environment_arn

    @property
    def operations_role(self):
        """Gets the operations_role of this EnvironmentDescription.


        :return: The operations_role of this EnvironmentDescription.
        :rtype: str
        """
        return self._operations_role

    @operations_role.setter
    def operations_role(self, operations_role):
        """Sets the operations_role of this EnvironmentDescription.


        :param operations_role: The operations_role of this EnvironmentDescription.
        :type operations_role: str
        """

        self._operations_role = operations_role
