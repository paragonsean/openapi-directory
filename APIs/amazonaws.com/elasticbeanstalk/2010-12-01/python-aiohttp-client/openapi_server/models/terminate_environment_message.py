# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminateEnvironmentMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_id: str=None, environment_name: str=None, terminate_resources: bool=None, force_terminate: bool=None):
        """TerminateEnvironmentMessage - a model defined in OpenAPI

        :param environment_id: The environment_id of this TerminateEnvironmentMessage.
        :param environment_name: The environment_name of this TerminateEnvironmentMessage.
        :param terminate_resources: The terminate_resources of this TerminateEnvironmentMessage.
        :param force_terminate: The force_terminate of this TerminateEnvironmentMessage.
        """
        self.openapi_types = {
            'environment_id': str,
            'environment_name': str,
            'terminate_resources': bool,
            'force_terminate': bool
        }

        self.attribute_map = {
            'environment_id': 'EnvironmentId',
            'environment_name': 'EnvironmentName',
            'terminate_resources': 'TerminateResources',
            'force_terminate': 'ForceTerminate'
        }

        self._environment_id = environment_id
        self._environment_name = environment_name
        self._terminate_resources = terminate_resources
        self._force_terminate = force_terminate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminateEnvironmentMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminateEnvironmentMessage of this TerminateEnvironmentMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_id(self):
        """Gets the environment_id of this TerminateEnvironmentMessage.


        :return: The environment_id of this TerminateEnvironmentMessage.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this TerminateEnvironmentMessage.


        :param environment_id: The environment_id of this TerminateEnvironmentMessage.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def environment_name(self):
        """Gets the environment_name of this TerminateEnvironmentMessage.


        :return: The environment_name of this TerminateEnvironmentMessage.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this TerminateEnvironmentMessage.


        :param environment_name: The environment_name of this TerminateEnvironmentMessage.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def terminate_resources(self):
        """Gets the terminate_resources of this TerminateEnvironmentMessage.


        :return: The terminate_resources of this TerminateEnvironmentMessage.
        :rtype: bool
        """
        return self._terminate_resources

    @terminate_resources.setter
    def terminate_resources(self, terminate_resources):
        """Sets the terminate_resources of this TerminateEnvironmentMessage.


        :param terminate_resources: The terminate_resources of this TerminateEnvironmentMessage.
        :type terminate_resources: bool
        """

        self._terminate_resources = terminate_resources

    @property
    def force_terminate(self):
        """Gets the force_terminate of this TerminateEnvironmentMessage.


        :return: The force_terminate of this TerminateEnvironmentMessage.
        :rtype: bool
        """
        return self._force_terminate

    @force_terminate.setter
    def force_terminate(self, force_terminate):
        """Sets the force_terminate of this TerminateEnvironmentMessage.


        :param force_terminate: The force_terminate of this TerminateEnvironmentMessage.
        :type force_terminate: bool
        """

        self._force_terminate = force_terminate
