# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceHealthSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, no_data: int=None, unknown: int=None, pending: int=None, ok: int=None, info: int=None, warning: int=None, degraded: int=None, severe: int=None):
        """InstanceHealthSummary - a model defined in OpenAPI

        :param no_data: The no_data of this InstanceHealthSummary.
        :param unknown: The unknown of this InstanceHealthSummary.
        :param pending: The pending of this InstanceHealthSummary.
        :param ok: The ok of this InstanceHealthSummary.
        :param info: The info of this InstanceHealthSummary.
        :param warning: The warning of this InstanceHealthSummary.
        :param degraded: The degraded of this InstanceHealthSummary.
        :param severe: The severe of this InstanceHealthSummary.
        """
        self.openapi_types = {
            'no_data': int,
            'unknown': int,
            'pending': int,
            'ok': int,
            'info': int,
            'warning': int,
            'degraded': int,
            'severe': int
        }

        self.attribute_map = {
            'no_data': 'NoData',
            'unknown': 'Unknown',
            'pending': 'Pending',
            'ok': 'Ok',
            'info': 'Info',
            'warning': 'Warning',
            'degraded': 'Degraded',
            'severe': 'Severe'
        }

        self._no_data = no_data
        self._unknown = unknown
        self._pending = pending
        self._ok = ok
        self._info = info
        self._warning = warning
        self._degraded = degraded
        self._severe = severe

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceHealthSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceHealthSummary of this InstanceHealthSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def no_data(self):
        """Gets the no_data of this InstanceHealthSummary.


        :return: The no_data of this InstanceHealthSummary.
        :rtype: int
        """
        return self._no_data

    @no_data.setter
    def no_data(self, no_data):
        """Sets the no_data of this InstanceHealthSummary.


        :param no_data: The no_data of this InstanceHealthSummary.
        :type no_data: int
        """

        self._no_data = no_data

    @property
    def unknown(self):
        """Gets the unknown of this InstanceHealthSummary.


        :return: The unknown of this InstanceHealthSummary.
        :rtype: int
        """
        return self._unknown

    @unknown.setter
    def unknown(self, unknown):
        """Sets the unknown of this InstanceHealthSummary.


        :param unknown: The unknown of this InstanceHealthSummary.
        :type unknown: int
        """

        self._unknown = unknown

    @property
    def pending(self):
        """Gets the pending of this InstanceHealthSummary.


        :return: The pending of this InstanceHealthSummary.
        :rtype: int
        """
        return self._pending

    @pending.setter
    def pending(self, pending):
        """Sets the pending of this InstanceHealthSummary.


        :param pending: The pending of this InstanceHealthSummary.
        :type pending: int
        """

        self._pending = pending

    @property
    def ok(self):
        """Gets the ok of this InstanceHealthSummary.


        :return: The ok of this InstanceHealthSummary.
        :rtype: int
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this InstanceHealthSummary.


        :param ok: The ok of this InstanceHealthSummary.
        :type ok: int
        """

        self._ok = ok

    @property
    def info(self):
        """Gets the info of this InstanceHealthSummary.


        :return: The info of this InstanceHealthSummary.
        :rtype: int
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this InstanceHealthSummary.


        :param info: The info of this InstanceHealthSummary.
        :type info: int
        """

        self._info = info

    @property
    def warning(self):
        """Gets the warning of this InstanceHealthSummary.


        :return: The warning of this InstanceHealthSummary.
        :rtype: int
        """
        return self._warning

    @warning.setter
    def warning(self, warning):
        """Sets the warning of this InstanceHealthSummary.


        :param warning: The warning of this InstanceHealthSummary.
        :type warning: int
        """

        self._warning = warning

    @property
    def degraded(self):
        """Gets the degraded of this InstanceHealthSummary.


        :return: The degraded of this InstanceHealthSummary.
        :rtype: int
        """
        return self._degraded

    @degraded.setter
    def degraded(self, degraded):
        """Sets the degraded of this InstanceHealthSummary.


        :param degraded: The degraded of this InstanceHealthSummary.
        :type degraded: int
        """

        self._degraded = degraded

    @property
    def severe(self):
        """Gets the severe of this InstanceHealthSummary.


        :return: The severe of this InstanceHealthSummary.
        :rtype: int
        """
        return self._severe

    @severe.setter
    def severe(self, severe):
        """Sets the severe of this InstanceHealthSummary.


        :param severe: The severe of this InstanceHealthSummary.
        :type severe: int
        """

        self._severe = severe
