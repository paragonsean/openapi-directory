# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation_severity import ValidationSeverity
from openapi_server import util


class ValidationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, severity: ValidationSeverity=None, namespace: str=None, option_name: str=None):
        """ValidationMessage - a model defined in OpenAPI

        :param message: The message of this ValidationMessage.
        :param severity: The severity of this ValidationMessage.
        :param namespace: The namespace of this ValidationMessage.
        :param option_name: The option_name of this ValidationMessage.
        """
        self.openapi_types = {
            'message': str,
            'severity': ValidationSeverity,
            'namespace': str,
            'option_name': str
        }

        self.attribute_map = {
            'message': 'Message',
            'severity': 'Severity',
            'namespace': 'Namespace',
            'option_name': 'OptionName'
        }

        self._message = message
        self._severity = severity
        self._namespace = namespace
        self._option_name = option_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidationMessage of this ValidationMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this ValidationMessage.


        :return: The message of this ValidationMessage.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ValidationMessage.


        :param message: The message of this ValidationMessage.
        :type message: str
        """

        self._message = message

    @property
    def severity(self):
        """Gets the severity of this ValidationMessage.


        :return: The severity of this ValidationMessage.
        :rtype: ValidationSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ValidationMessage.


        :param severity: The severity of this ValidationMessage.
        :type severity: ValidationSeverity
        """

        self._severity = severity

    @property
    def namespace(self):
        """Gets the namespace of this ValidationMessage.


        :return: The namespace of this ValidationMessage.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ValidationMessage.


        :param namespace: The namespace of this ValidationMessage.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def option_name(self):
        """Gets the option_name of this ValidationMessage.


        :return: The option_name of this ValidationMessage.
        :rtype: str
        """
        return self._option_name

    @option_name.setter
    def option_name(self, option_name):
        """Sets the option_name of this ValidationMessage.


        :param option_name: The option_name of this ValidationMessage.
        :type option_name: str
        """

        self._option_name = option_name
