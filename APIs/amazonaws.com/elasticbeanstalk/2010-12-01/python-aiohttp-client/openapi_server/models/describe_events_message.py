# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_severity import EventSeverity
from openapi_server import util


class DescribeEventsMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, version_label: str=None, template_name: str=None, environment_id: str=None, environment_name: str=None, platform_arn: str=None, request_id: str=None, severity: EventSeverity=None, start_time: datetime=None, end_time: datetime=None, max_records: int=None, next_token: str=None):
        """DescribeEventsMessage - a model defined in OpenAPI

        :param application_name: The application_name of this DescribeEventsMessage.
        :param version_label: The version_label of this DescribeEventsMessage.
        :param template_name: The template_name of this DescribeEventsMessage.
        :param environment_id: The environment_id of this DescribeEventsMessage.
        :param environment_name: The environment_name of this DescribeEventsMessage.
        :param platform_arn: The platform_arn of this DescribeEventsMessage.
        :param request_id: The request_id of this DescribeEventsMessage.
        :param severity: The severity of this DescribeEventsMessage.
        :param start_time: The start_time of this DescribeEventsMessage.
        :param end_time: The end_time of this DescribeEventsMessage.
        :param max_records: The max_records of this DescribeEventsMessage.
        :param next_token: The next_token of this DescribeEventsMessage.
        """
        self.openapi_types = {
            'application_name': str,
            'version_label': str,
            'template_name': str,
            'environment_id': str,
            'environment_name': str,
            'platform_arn': str,
            'request_id': str,
            'severity': EventSeverity,
            'start_time': datetime,
            'end_time': datetime,
            'max_records': int,
            'next_token': str
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'version_label': 'VersionLabel',
            'template_name': 'TemplateName',
            'environment_id': 'EnvironmentId',
            'environment_name': 'EnvironmentName',
            'platform_arn': 'PlatformArn',
            'request_id': 'RequestId',
            'severity': 'Severity',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'max_records': 'MaxRecords',
            'next_token': 'NextToken'
        }

        self._application_name = application_name
        self._version_label = version_label
        self._template_name = template_name
        self._environment_id = environment_id
        self._environment_name = environment_name
        self._platform_arn = platform_arn
        self._request_id = request_id
        self._severity = severity
        self._start_time = start_time
        self._end_time = end_time
        self._max_records = max_records
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEventsMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEventsMessage of this DescribeEventsMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this DescribeEventsMessage.


        :return: The application_name of this DescribeEventsMessage.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DescribeEventsMessage.


        :param application_name: The application_name of this DescribeEventsMessage.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def version_label(self):
        """Gets the version_label of this DescribeEventsMessage.


        :return: The version_label of this DescribeEventsMessage.
        :rtype: str
        """
        return self._version_label

    @version_label.setter
    def version_label(self, version_label):
        """Sets the version_label of this DescribeEventsMessage.


        :param version_label: The version_label of this DescribeEventsMessage.
        :type version_label: str
        """

        self._version_label = version_label

    @property
    def template_name(self):
        """Gets the template_name of this DescribeEventsMessage.


        :return: The template_name of this DescribeEventsMessage.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this DescribeEventsMessage.


        :param template_name: The template_name of this DescribeEventsMessage.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def environment_id(self):
        """Gets the environment_id of this DescribeEventsMessage.


        :return: The environment_id of this DescribeEventsMessage.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this DescribeEventsMessage.


        :param environment_id: The environment_id of this DescribeEventsMessage.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def environment_name(self):
        """Gets the environment_name of this DescribeEventsMessage.


        :return: The environment_name of this DescribeEventsMessage.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this DescribeEventsMessage.


        :param environment_name: The environment_name of this DescribeEventsMessage.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def platform_arn(self):
        """Gets the platform_arn of this DescribeEventsMessage.


        :return: The platform_arn of this DescribeEventsMessage.
        :rtype: str
        """
        return self._platform_arn

    @platform_arn.setter
    def platform_arn(self, platform_arn):
        """Sets the platform_arn of this DescribeEventsMessage.


        :param platform_arn: The platform_arn of this DescribeEventsMessage.
        :type platform_arn: str
        """

        self._platform_arn = platform_arn

    @property
    def request_id(self):
        """Gets the request_id of this DescribeEventsMessage.


        :return: The request_id of this DescribeEventsMessage.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this DescribeEventsMessage.


        :param request_id: The request_id of this DescribeEventsMessage.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def severity(self):
        """Gets the severity of this DescribeEventsMessage.


        :return: The severity of this DescribeEventsMessage.
        :rtype: EventSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this DescribeEventsMessage.


        :param severity: The severity of this DescribeEventsMessage.
        :type severity: EventSeverity
        """

        self._severity = severity

    @property
    def start_time(self):
        """Gets the start_time of this DescribeEventsMessage.


        :return: The start_time of this DescribeEventsMessage.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DescribeEventsMessage.


        :param start_time: The start_time of this DescribeEventsMessage.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this DescribeEventsMessage.


        :return: The end_time of this DescribeEventsMessage.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DescribeEventsMessage.


        :param end_time: The end_time of this DescribeEventsMessage.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def max_records(self):
        """Gets the max_records of this DescribeEventsMessage.


        :return: The max_records of this DescribeEventsMessage.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeEventsMessage.


        :param max_records: The max_records of this DescribeEventsMessage.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def next_token(self):
        """Gets the next_token of this DescribeEventsMessage.


        :return: The next_token of this DescribeEventsMessage.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeEventsMessage.


        :param next_token: The next_token of this DescribeEventsMessage.
        :type next_token: str
        """

        self._next_token = next_token
