# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_environment_health_result_application_metrics import DescribeEnvironmentHealthResultApplicationMetrics
from openapi_server.models.describe_environment_health_result_instances_health import DescribeEnvironmentHealthResultInstancesHealth
from openapi_server.models.environment_health import EnvironmentHealth
from openapi_server import util


class DescribeEnvironmentHealthResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_name: str=None, health_status: str=None, status: EnvironmentHealth=None, color: str=None, causes: List=None, application_metrics: DescribeEnvironmentHealthResultApplicationMetrics=None, instances_health: DescribeEnvironmentHealthResultInstancesHealth=None, refreshed_at: datetime=None):
        """DescribeEnvironmentHealthResult - a model defined in OpenAPI

        :param environment_name: The environment_name of this DescribeEnvironmentHealthResult.
        :param health_status: The health_status of this DescribeEnvironmentHealthResult.
        :param status: The status of this DescribeEnvironmentHealthResult.
        :param color: The color of this DescribeEnvironmentHealthResult.
        :param causes: The causes of this DescribeEnvironmentHealthResult.
        :param application_metrics: The application_metrics of this DescribeEnvironmentHealthResult.
        :param instances_health: The instances_health of this DescribeEnvironmentHealthResult.
        :param refreshed_at: The refreshed_at of this DescribeEnvironmentHealthResult.
        """
        self.openapi_types = {
            'environment_name': str,
            'health_status': str,
            'status': EnvironmentHealth,
            'color': str,
            'causes': List,
            'application_metrics': DescribeEnvironmentHealthResultApplicationMetrics,
            'instances_health': DescribeEnvironmentHealthResultInstancesHealth,
            'refreshed_at': datetime
        }

        self.attribute_map = {
            'environment_name': 'EnvironmentName',
            'health_status': 'HealthStatus',
            'status': 'Status',
            'color': 'Color',
            'causes': 'Causes',
            'application_metrics': 'ApplicationMetrics',
            'instances_health': 'InstancesHealth',
            'refreshed_at': 'RefreshedAt'
        }

        self._environment_name = environment_name
        self._health_status = health_status
        self._status = status
        self._color = color
        self._causes = causes
        self._application_metrics = application_metrics
        self._instances_health = instances_health
        self._refreshed_at = refreshed_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEnvironmentHealthResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEnvironmentHealthResult of this DescribeEnvironmentHealthResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_name(self):
        """Gets the environment_name of this DescribeEnvironmentHealthResult.


        :return: The environment_name of this DescribeEnvironmentHealthResult.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this DescribeEnvironmentHealthResult.


        :param environment_name: The environment_name of this DescribeEnvironmentHealthResult.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def health_status(self):
        """Gets the health_status of this DescribeEnvironmentHealthResult.


        :return: The health_status of this DescribeEnvironmentHealthResult.
        :rtype: str
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this DescribeEnvironmentHealthResult.


        :param health_status: The health_status of this DescribeEnvironmentHealthResult.
        :type health_status: str
        """

        self._health_status = health_status

    @property
    def status(self):
        """Gets the status of this DescribeEnvironmentHealthResult.


        :return: The status of this DescribeEnvironmentHealthResult.
        :rtype: EnvironmentHealth
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeEnvironmentHealthResult.


        :param status: The status of this DescribeEnvironmentHealthResult.
        :type status: EnvironmentHealth
        """

        self._status = status

    @property
    def color(self):
        """Gets the color of this DescribeEnvironmentHealthResult.


        :return: The color of this DescribeEnvironmentHealthResult.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this DescribeEnvironmentHealthResult.


        :param color: The color of this DescribeEnvironmentHealthResult.
        :type color: str
        """

        self._color = color

    @property
    def causes(self):
        """Gets the causes of this DescribeEnvironmentHealthResult.


        :return: The causes of this DescribeEnvironmentHealthResult.
        :rtype: List
        """
        return self._causes

    @causes.setter
    def causes(self, causes):
        """Sets the causes of this DescribeEnvironmentHealthResult.


        :param causes: The causes of this DescribeEnvironmentHealthResult.
        :type causes: List
        """

        self._causes = causes

    @property
    def application_metrics(self):
        """Gets the application_metrics of this DescribeEnvironmentHealthResult.


        :return: The application_metrics of this DescribeEnvironmentHealthResult.
        :rtype: DescribeEnvironmentHealthResultApplicationMetrics
        """
        return self._application_metrics

    @application_metrics.setter
    def application_metrics(self, application_metrics):
        """Sets the application_metrics of this DescribeEnvironmentHealthResult.


        :param application_metrics: The application_metrics of this DescribeEnvironmentHealthResult.
        :type application_metrics: DescribeEnvironmentHealthResultApplicationMetrics
        """

        self._application_metrics = application_metrics

    @property
    def instances_health(self):
        """Gets the instances_health of this DescribeEnvironmentHealthResult.


        :return: The instances_health of this DescribeEnvironmentHealthResult.
        :rtype: DescribeEnvironmentHealthResultInstancesHealth
        """
        return self._instances_health

    @instances_health.setter
    def instances_health(self, instances_health):
        """Sets the instances_health of this DescribeEnvironmentHealthResult.


        :param instances_health: The instances_health of this DescribeEnvironmentHealthResult.
        :type instances_health: DescribeEnvironmentHealthResultInstancesHealth
        """

        self._instances_health = instances_health

    @property
    def refreshed_at(self):
        """Gets the refreshed_at of this DescribeEnvironmentHealthResult.


        :return: The refreshed_at of this DescribeEnvironmentHealthResult.
        :rtype: datetime
        """
        return self._refreshed_at

    @refreshed_at.setter
    def refreshed_at(self, refreshed_at):
        """Sets the refreshed_at of this DescribeEnvironmentHealthResult.


        :param refreshed_at: The refreshed_at of this DescribeEnvironmentHealthResult.
        :type refreshed_at: datetime
        """

        self._refreshed_at = refreshed_at
