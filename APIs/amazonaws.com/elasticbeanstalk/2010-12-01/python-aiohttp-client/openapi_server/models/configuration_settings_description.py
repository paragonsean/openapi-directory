# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_deployment_status import ConfigurationDeploymentStatus
from openapi_server import util


class ConfigurationSettingsDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solution_stack_name: str=None, platform_arn: str=None, application_name: str=None, template_name: str=None, description: str=None, environment_name: str=None, deployment_status: ConfigurationDeploymentStatus=None, date_created: datetime=None, date_updated: datetime=None, option_settings: List=None):
        """ConfigurationSettingsDescription - a model defined in OpenAPI

        :param solution_stack_name: The solution_stack_name of this ConfigurationSettingsDescription.
        :param platform_arn: The platform_arn of this ConfigurationSettingsDescription.
        :param application_name: The application_name of this ConfigurationSettingsDescription.
        :param template_name: The template_name of this ConfigurationSettingsDescription.
        :param description: The description of this ConfigurationSettingsDescription.
        :param environment_name: The environment_name of this ConfigurationSettingsDescription.
        :param deployment_status: The deployment_status of this ConfigurationSettingsDescription.
        :param date_created: The date_created of this ConfigurationSettingsDescription.
        :param date_updated: The date_updated of this ConfigurationSettingsDescription.
        :param option_settings: The option_settings of this ConfigurationSettingsDescription.
        """
        self.openapi_types = {
            'solution_stack_name': str,
            'platform_arn': str,
            'application_name': str,
            'template_name': str,
            'description': str,
            'environment_name': str,
            'deployment_status': ConfigurationDeploymentStatus,
            'date_created': datetime,
            'date_updated': datetime,
            'option_settings': List
        }

        self.attribute_map = {
            'solution_stack_name': 'SolutionStackName',
            'platform_arn': 'PlatformArn',
            'application_name': 'ApplicationName',
            'template_name': 'TemplateName',
            'description': 'Description',
            'environment_name': 'EnvironmentName',
            'deployment_status': 'DeploymentStatus',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'option_settings': 'OptionSettings'
        }

        self._solution_stack_name = solution_stack_name
        self._platform_arn = platform_arn
        self._application_name = application_name
        self._template_name = template_name
        self._description = description
        self._environment_name = environment_name
        self._deployment_status = deployment_status
        self._date_created = date_created
        self._date_updated = date_updated
        self._option_settings = option_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationSettingsDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationSettingsDescription of this ConfigurationSettingsDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solution_stack_name(self):
        """Gets the solution_stack_name of this ConfigurationSettingsDescription.


        :return: The solution_stack_name of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._solution_stack_name

    @solution_stack_name.setter
    def solution_stack_name(self, solution_stack_name):
        """Sets the solution_stack_name of this ConfigurationSettingsDescription.


        :param solution_stack_name: The solution_stack_name of this ConfigurationSettingsDescription.
        :type solution_stack_name: str
        """

        self._solution_stack_name = solution_stack_name

    @property
    def platform_arn(self):
        """Gets the platform_arn of this ConfigurationSettingsDescription.


        :return: The platform_arn of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._platform_arn

    @platform_arn.setter
    def platform_arn(self, platform_arn):
        """Sets the platform_arn of this ConfigurationSettingsDescription.


        :param platform_arn: The platform_arn of this ConfigurationSettingsDescription.
        :type platform_arn: str
        """

        self._platform_arn = platform_arn

    @property
    def application_name(self):
        """Gets the application_name of this ConfigurationSettingsDescription.


        :return: The application_name of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ConfigurationSettingsDescription.


        :param application_name: The application_name of this ConfigurationSettingsDescription.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def template_name(self):
        """Gets the template_name of this ConfigurationSettingsDescription.


        :return: The template_name of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this ConfigurationSettingsDescription.


        :param template_name: The template_name of this ConfigurationSettingsDescription.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def description(self):
        """Gets the description of this ConfigurationSettingsDescription.


        :return: The description of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ConfigurationSettingsDescription.


        :param description: The description of this ConfigurationSettingsDescription.
        :type description: str
        """

        self._description = description

    @property
    def environment_name(self):
        """Gets the environment_name of this ConfigurationSettingsDescription.


        :return: The environment_name of this ConfigurationSettingsDescription.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this ConfigurationSettingsDescription.


        :param environment_name: The environment_name of this ConfigurationSettingsDescription.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def deployment_status(self):
        """Gets the deployment_status of this ConfigurationSettingsDescription.


        :return: The deployment_status of this ConfigurationSettingsDescription.
        :rtype: ConfigurationDeploymentStatus
        """
        return self._deployment_status

    @deployment_status.setter
    def deployment_status(self, deployment_status):
        """Sets the deployment_status of this ConfigurationSettingsDescription.


        :param deployment_status: The deployment_status of this ConfigurationSettingsDescription.
        :type deployment_status: ConfigurationDeploymentStatus
        """

        self._deployment_status = deployment_status

    @property
    def date_created(self):
        """Gets the date_created of this ConfigurationSettingsDescription.


        :return: The date_created of this ConfigurationSettingsDescription.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ConfigurationSettingsDescription.


        :param date_created: The date_created of this ConfigurationSettingsDescription.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ConfigurationSettingsDescription.


        :return: The date_updated of this ConfigurationSettingsDescription.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ConfigurationSettingsDescription.


        :param date_updated: The date_updated of this ConfigurationSettingsDescription.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def option_settings(self):
        """Gets the option_settings of this ConfigurationSettingsDescription.


        :return: The option_settings of this ConfigurationSettingsDescription.
        :rtype: List
        """
        return self._option_settings

    @option_settings.setter
    def option_settings(self, option_settings):
        """Sets the option_settings of this ConfigurationSettingsDescription.


        :param option_settings: The option_settings of this ConfigurationSettingsDescription.
        :type option_settings: List
        """

        self._option_settings = option_settings
