/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceBuildInformation.h
 *
 * Location of the source code for an application version.
 */

#ifndef OAISourceBuildInformation_H
#define OAISourceBuildInformation_H

#include <QJsonObject>

#include "OAISourceRepository.h"
#include "OAISourceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceBuildInformation : public OAIObject {
public:
    OAISourceBuildInformation();
    OAISourceBuildInformation(QString json);
    ~OAISourceBuildInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceType getSourceType() const;
    void setSourceType(const OAISourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    OAISourceRepository getSourceRepository() const;
    void setSourceRepository(const OAISourceRepository &source_repository);
    bool is_source_repository_Set() const;
    bool is_source_repository_Valid() const;

    QString getSourceLocation() const;
    void setSourceLocation(const QString &source_location);
    bool is_source_location_Set() const;
    bool is_source_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    OAISourceRepository m_source_repository;
    bool m_source_repository_isSet;
    bool m_source_repository_isValid;

    QString m_source_location;
    bool m_source_location_isSet;
    bool m_source_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceBuildInformation)

#endif // OAISourceBuildInformation_H
