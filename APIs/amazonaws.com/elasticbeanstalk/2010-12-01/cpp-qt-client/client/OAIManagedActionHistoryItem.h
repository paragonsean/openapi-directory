/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedActionHistoryItem.h
 *
 * The record of a completed or failed managed action.
 */

#ifndef OAIManagedActionHistoryItem_H
#define OAIManagedActionHistoryItem_H

#include <QJsonObject>

#include "OAIActionHistoryStatus.h"
#include "OAIActionType.h"
#include "OAIFailureType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagedActionHistoryItem : public OAIObject {
public:
    OAIManagedActionHistoryItem();
    OAIManagedActionHistoryItem(QString json);
    ~OAIManagedActionHistoryItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionId() const;
    void setActionId(const QString &action_id);
    bool is_action_id_Set() const;
    bool is_action_id_Valid() const;

    OAIActionType getActionType() const;
    void setActionType(const OAIActionType &action_type);
    bool is_action_type_Set() const;
    bool is_action_type_Valid() const;

    QString getActionDescription() const;
    void setActionDescription(const QString &action_description);
    bool is_action_description_Set() const;
    bool is_action_description_Valid() const;

    OAIFailureType getFailureType() const;
    void setFailureType(const OAIFailureType &failure_type);
    bool is_failure_type_Set() const;
    bool is_failure_type_Valid() const;

    OAIActionHistoryStatus getStatus() const;
    void setStatus(const OAIActionHistoryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getFailureDescription() const;
    void setFailureDescription(const QString &failure_description);
    bool is_failure_description_Set() const;
    bool is_failure_description_Valid() const;

    QDateTime getExecutedTime() const;
    void setExecutedTime(const QDateTime &executed_time);
    bool is_executed_time_Set() const;
    bool is_executed_time_Valid() const;

    QDateTime getFinishedTime() const;
    void setFinishedTime(const QDateTime &finished_time);
    bool is_finished_time_Set() const;
    bool is_finished_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_id;
    bool m_action_id_isSet;
    bool m_action_id_isValid;

    OAIActionType m_action_type;
    bool m_action_type_isSet;
    bool m_action_type_isValid;

    QString m_action_description;
    bool m_action_description_isSet;
    bool m_action_description_isValid;

    OAIFailureType m_failure_type;
    bool m_failure_type_isSet;
    bool m_failure_type_isValid;

    OAIActionHistoryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_failure_description;
    bool m_failure_description_isSet;
    bool m_failure_description_isValid;

    QDateTime m_executed_time;
    bool m_executed_time_isSet;
    bool m_executed_time_isValid;

    QDateTime m_finished_time;
    bool m_finished_time_isSet;
    bool m_finished_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedActionHistoryItem)

#endif // OAIManagedActionHistoryItem_H
