/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateApplicationVersionMessage.h
 *
 * &lt;p/&gt;
 */

#ifndef OAICreateApplicationVersionMessage_H
#define OAICreateApplicationVersionMessage_H

#include <QJsonObject>

#include "OAICreateApplicationVersionMessage_BuildConfiguration.h"
#include "OAICreateApplicationVersionMessage_SourceBuildInformation.h"
#include "OAICreateApplicationVersionMessage_SourceBundle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateApplicationVersionMessage_SourceBuildInformation;
class OAICreateApplicationVersionMessage_SourceBundle;
class OAICreateApplicationVersionMessage_BuildConfiguration;

class OAICreateApplicationVersionMessage : public OAIObject {
public:
    OAICreateApplicationVersionMessage();
    OAICreateApplicationVersionMessage(QString json);
    ~OAICreateApplicationVersionMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getVersionLabel() const;
    void setVersionLabel(const QString &version_label);
    bool is_version_label_Set() const;
    bool is_version_label_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateApplicationVersionMessage_SourceBuildInformation getSourceBuildInformation() const;
    void setSourceBuildInformation(const OAICreateApplicationVersionMessage_SourceBuildInformation &source_build_information);
    bool is_source_build_information_Set() const;
    bool is_source_build_information_Valid() const;

    OAICreateApplicationVersionMessage_SourceBundle getSourceBundle() const;
    void setSourceBundle(const OAICreateApplicationVersionMessage_SourceBundle &source_bundle);
    bool is_source_bundle_Set() const;
    bool is_source_bundle_Valid() const;

    OAICreateApplicationVersionMessage_BuildConfiguration getBuildConfiguration() const;
    void setBuildConfiguration(const OAICreateApplicationVersionMessage_BuildConfiguration &build_configuration);
    bool is_build_configuration_Set() const;
    bool is_build_configuration_Valid() const;

    bool getAutoCreateApplication() const;
    void setAutoCreateApplication(const bool &auto_create_application);
    bool is_auto_create_application_Set() const;
    bool is_auto_create_application_Valid() const;

    bool getProcess() const;
    void setProcess(const bool &process);
    bool is_process_Set() const;
    bool is_process_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_version_label;
    bool m_version_label_isSet;
    bool m_version_label_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateApplicationVersionMessage_SourceBuildInformation m_source_build_information;
    bool m_source_build_information_isSet;
    bool m_source_build_information_isValid;

    OAICreateApplicationVersionMessage_SourceBundle m_source_bundle;
    bool m_source_bundle_isSet;
    bool m_source_bundle_isValid;

    OAICreateApplicationVersionMessage_BuildConfiguration m_build_configuration;
    bool m_build_configuration_isSet;
    bool m_build_configuration_isValid;

    bool m_auto_create_application;
    bool m_auto_create_application_isSet;
    bool m_auto_create_application_isValid;

    bool m_process;
    bool m_process_isSet;
    bool m_process_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateApplicationVersionMessage)

#endif // OAICreateApplicationVersionMessage_H
