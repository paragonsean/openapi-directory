/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlatformBranchSummary.h
 *
 * Summary information about a platform branch.
 */

#ifndef OAIPlatformBranchSummary_H
#define OAIPlatformBranchSummary_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlatformBranchSummary : public OAIObject {
public:
    OAIPlatformBranchSummary();
    OAIPlatformBranchSummary(QString json);
    ~OAIPlatformBranchSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPlatformName() const;
    void setPlatformName(const QString &platform_name);
    bool is_platform_name_Set() const;
    bool is_platform_name_Valid() const;

    QString getBranchName() const;
    void setBranchName(const QString &branch_name);
    bool is_branch_name_Set() const;
    bool is_branch_name_Valid() const;

    QString getLifecycleState() const;
    void setLifecycleState(const QString &lifecycle_state);
    bool is_lifecycle_state_Set() const;
    bool is_lifecycle_state_Valid() const;

    qint32 getBranchOrder() const;
    void setBranchOrder(const qint32 &branch_order);
    bool is_branch_order_Set() const;
    bool is_branch_order_Valid() const;

    QList getSupportedTierList() const;
    void setSupportedTierList(const QList &supported_tier_list);
    bool is_supported_tier_list_Set() const;
    bool is_supported_tier_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_platform_name;
    bool m_platform_name_isSet;
    bool m_platform_name_isValid;

    QString m_branch_name;
    bool m_branch_name_isSet;
    bool m_branch_name_isValid;

    QString m_lifecycle_state;
    bool m_lifecycle_state_isSet;
    bool m_lifecycle_state_isValid;

    qint32 m_branch_order;
    bool m_branch_order_isSet;
    bool m_branch_order_isValid;

    QList m_supported_tier_list;
    bool m_supported_tier_list_isSet;
    bool m_supported_tier_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlatformBranchSummary)

#endif // OAIPlatformBranchSummary_H
