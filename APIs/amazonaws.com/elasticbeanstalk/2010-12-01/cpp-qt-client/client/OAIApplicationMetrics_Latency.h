/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationMetrics_Latency.h
 *
 * 
 */

#ifndef OAIApplicationMetrics_Latency_H
#define OAIApplicationMetrics_Latency_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationMetrics_Latency : public OAIObject {
public:
    OAIApplicationMetrics_Latency();
    OAIApplicationMetrics_Latency(QString json);
    ~OAIApplicationMetrics_Latency() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getP999() const;
    void setP999(const double &p999);
    bool is_p999_Set() const;
    bool is_p999_Valid() const;

    double getP99() const;
    void setP99(const double &p99);
    bool is_p99_Set() const;
    bool is_p99_Valid() const;

    double getP95() const;
    void setP95(const double &p95);
    bool is_p95_Set() const;
    bool is_p95_Valid() const;

    double getP90() const;
    void setP90(const double &p90);
    bool is_p90_Set() const;
    bool is_p90_Valid() const;

    double getP85() const;
    void setP85(const double &p85);
    bool is_p85_Set() const;
    bool is_p85_Valid() const;

    double getP75() const;
    void setP75(const double &p75);
    bool is_p75_Set() const;
    bool is_p75_Valid() const;

    double getP50() const;
    void setP50(const double &p50);
    bool is_p50_Set() const;
    bool is_p50_Valid() const;

    double getP10() const;
    void setP10(const double &p10);
    bool is_p10_Set() const;
    bool is_p10_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_p999;
    bool m_p999_isSet;
    bool m_p999_isValid;

    double m_p99;
    bool m_p99_isSet;
    bool m_p99_isValid;

    double m_p95;
    bool m_p95_isSet;
    bool m_p95_isValid;

    double m_p90;
    bool m_p90_isSet;
    bool m_p90_isValid;

    double m_p85;
    bool m_p85_isSet;
    bool m_p85_isValid;

    double m_p75;
    bool m_p75_isSet;
    bool m_p75_isValid;

    double m_p50;
    bool m_p50_isSet;
    bool m_p50_isValid;

    double m_p10;
    bool m_p10_isSet;
    bool m_p10_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationMetrics_Latency)

#endif // OAIApplicationMetrics_Latency_H
