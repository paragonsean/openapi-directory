/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateEnvironmentMessage.h
 *
 * Request to update an environment.
 */

#ifndef OAIUpdateEnvironmentMessage_H
#define OAIUpdateEnvironmentMessage_H

#include <QJsonObject>

#include "OAIUpdateEnvironmentMessage_Tier.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateEnvironmentMessage_Tier;

class OAIUpdateEnvironmentMessage : public OAIObject {
public:
    OAIUpdateEnvironmentMessage();
    OAIUpdateEnvironmentMessage(QString json);
    ~OAIUpdateEnvironmentMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getEnvironmentId() const;
    void setEnvironmentId(const QString &environment_id);
    bool is_environment_id_Set() const;
    bool is_environment_id_Valid() const;

    QString getEnvironmentName() const;
    void setEnvironmentName(const QString &environment_name);
    bool is_environment_name_Set() const;
    bool is_environment_name_Valid() const;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIUpdateEnvironmentMessage_Tier getTier() const;
    void setTier(const OAIUpdateEnvironmentMessage_Tier &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    QString getVersionLabel() const;
    void setVersionLabel(const QString &version_label);
    bool is_version_label_Set() const;
    bool is_version_label_Valid() const;

    QString getTemplateName() const;
    void setTemplateName(const QString &template_name);
    bool is_template_name_Set() const;
    bool is_template_name_Valid() const;

    QString getSolutionStackName() const;
    void setSolutionStackName(const QString &solution_stack_name);
    bool is_solution_stack_name_Set() const;
    bool is_solution_stack_name_Valid() const;

    QString getPlatformArn() const;
    void setPlatformArn(const QString &platform_arn);
    bool is_platform_arn_Set() const;
    bool is_platform_arn_Valid() const;

    QList getOptionSettings() const;
    void setOptionSettings(const QList &option_settings);
    bool is_option_settings_Set() const;
    bool is_option_settings_Valid() const;

    QList getOptionsToRemove() const;
    void setOptionsToRemove(const QList &options_to_remove);
    bool is_options_to_remove_Set() const;
    bool is_options_to_remove_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_environment_id;
    bool m_environment_id_isSet;
    bool m_environment_id_isValid;

    QString m_environment_name;
    bool m_environment_name_isSet;
    bool m_environment_name_isValid;

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIUpdateEnvironmentMessage_Tier m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;

    QString m_version_label;
    bool m_version_label_isSet;
    bool m_version_label_isValid;

    QString m_template_name;
    bool m_template_name_isSet;
    bool m_template_name_isValid;

    QString m_solution_stack_name;
    bool m_solution_stack_name_isSet;
    bool m_solution_stack_name_isValid;

    QString m_platform_arn;
    bool m_platform_arn_isSet;
    bool m_platform_arn_isValid;

    QList m_option_settings;
    bool m_option_settings_isSet;
    bool m_option_settings_isValid;

    QList m_options_to_remove;
    bool m_options_to_remove_isSet;
    bool m_options_to_remove_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateEnvironmentMessage)

#endif // OAIUpdateEnvironmentMessage_H
