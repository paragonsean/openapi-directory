/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeEnvironmentHealthResult.h
 *
 * Health details for an AWS Elastic Beanstalk environment.
 */

#ifndef OAIDescribeEnvironmentHealthResult_H
#define OAIDescribeEnvironmentHealthResult_H

#include <QJsonObject>

#include "OAIDescribeEnvironmentHealthResult_ApplicationMetrics.h"
#include "OAIDescribeEnvironmentHealthResult_InstancesHealth.h"
#include "OAIEnvironmentHealth.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeEnvironmentHealthResult_ApplicationMetrics;
class OAIDescribeEnvironmentHealthResult_InstancesHealth;

class OAIDescribeEnvironmentHealthResult : public OAIObject {
public:
    OAIDescribeEnvironmentHealthResult();
    OAIDescribeEnvironmentHealthResult(QString json);
    ~OAIDescribeEnvironmentHealthResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnvironmentName() const;
    void setEnvironmentName(const QString &environment_name);
    bool is_environment_name_Set() const;
    bool is_environment_name_Valid() const;

    QString getHealthStatus() const;
    void setHealthStatus(const QString &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    OAIEnvironmentHealth getStatus() const;
    void setStatus(const OAIEnvironmentHealth &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QList getCauses() const;
    void setCauses(const QList &causes);
    bool is_causes_Set() const;
    bool is_causes_Valid() const;

    OAIDescribeEnvironmentHealthResult_ApplicationMetrics getApplicationMetrics() const;
    void setApplicationMetrics(const OAIDescribeEnvironmentHealthResult_ApplicationMetrics &application_metrics);
    bool is_application_metrics_Set() const;
    bool is_application_metrics_Valid() const;

    OAIDescribeEnvironmentHealthResult_InstancesHealth getInstancesHealth() const;
    void setInstancesHealth(const OAIDescribeEnvironmentHealthResult_InstancesHealth &instances_health);
    bool is_instances_health_Set() const;
    bool is_instances_health_Valid() const;

    QDateTime getRefreshedAt() const;
    void setRefreshedAt(const QDateTime &refreshed_at);
    bool is_refreshed_at_Set() const;
    bool is_refreshed_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_environment_name;
    bool m_environment_name_isSet;
    bool m_environment_name_isValid;

    QString m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    OAIEnvironmentHealth m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QList m_causes;
    bool m_causes_isSet;
    bool m_causes_isValid;

    OAIDescribeEnvironmentHealthResult_ApplicationMetrics m_application_metrics;
    bool m_application_metrics_isSet;
    bool m_application_metrics_isValid;

    OAIDescribeEnvironmentHealthResult_InstancesHealth m_instances_health;
    bool m_instances_health_isSet;
    bool m_instances_health_isValid;

    QDateTime m_refreshed_at;
    bool m_refreshed_at_isSet;
    bool m_refreshed_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeEnvironmentHealthResult)

#endif // OAIDescribeEnvironmentHealthResult_H
