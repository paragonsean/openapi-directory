/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListAvailableSolutionStacksResultMessage.h
 *
 * A list of available AWS Elastic Beanstalk solution stacks.
 */

#ifndef OAIListAvailableSolutionStacksResultMessage_H
#define OAIListAvailableSolutionStacksResultMessage_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListAvailableSolutionStacksResultMessage : public OAIObject {
public:
    OAIListAvailableSolutionStacksResultMessage();
    OAIListAvailableSolutionStacksResultMessage(QString json);
    ~OAIListAvailableSolutionStacksResultMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSolutionStacks() const;
    void setSolutionStacks(const QList &solution_stacks);
    bool is_solution_stacks_Set() const;
    bool is_solution_stacks_Valid() const;

    QList getSolutionStackDetails() const;
    void setSolutionStackDetails(const QList &solution_stack_details);
    bool is_solution_stack_details_Set() const;
    bool is_solution_stack_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_solution_stacks;
    bool m_solution_stacks_isSet;
    bool m_solution_stacks_isValid;

    QList m_solution_stack_details;
    bool m_solution_stack_details_isSet;
    bool m_solution_stack_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListAvailableSolutionStacksResultMessage)

#endif // OAIListAvailableSolutionStacksResultMessage_H
