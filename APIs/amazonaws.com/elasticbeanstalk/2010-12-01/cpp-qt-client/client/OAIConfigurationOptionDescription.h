/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigurationOptionDescription.h
 *
 * Describes the possible values for a configuration option.
 */

#ifndef OAIConfigurationOptionDescription_H
#define OAIConfigurationOptionDescription_H

#include <QJsonObject>

#include "OAIConfigurationOptionDescription_Regex.h"
#include "OAIConfigurationOptionValueType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigurationOptionDescription_Regex;

class OAIConfigurationOptionDescription : public OAIObject {
public:
    OAIConfigurationOptionDescription();
    OAIConfigurationOptionDescription(QString json);
    ~OAIConfigurationOptionDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getChangeSeverity() const;
    void setChangeSeverity(const QString &change_severity);
    bool is_change_severity_Set() const;
    bool is_change_severity_Valid() const;

    bool getUserDefined() const;
    void setUserDefined(const bool &user_defined);
    bool is_user_defined_Set() const;
    bool is_user_defined_Valid() const;

    OAIConfigurationOptionValueType getValueType() const;
    void setValueType(const OAIConfigurationOptionValueType &value_type);
    bool is_value_type_Set() const;
    bool is_value_type_Valid() const;

    QList getValueOptions() const;
    void setValueOptions(const QList &value_options);
    bool is_value_options_Set() const;
    bool is_value_options_Valid() const;

    qint32 getMinValue() const;
    void setMinValue(const qint32 &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    qint32 getMaxValue() const;
    void setMaxValue(const qint32 &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    qint32 getMaxLength() const;
    void setMaxLength(const qint32 &max_length);
    bool is_max_length_Set() const;
    bool is_max_length_Valid() const;

    OAIConfigurationOptionDescription_Regex getRegex() const;
    void setRegex(const OAIConfigurationOptionDescription_Regex &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_change_severity;
    bool m_change_severity_isSet;
    bool m_change_severity_isValid;

    bool m_user_defined;
    bool m_user_defined_isSet;
    bool m_user_defined_isValid;

    OAIConfigurationOptionValueType m_value_type;
    bool m_value_type_isSet;
    bool m_value_type_isValid;

    QList m_value_options;
    bool m_value_options_isSet;
    bool m_value_options_isValid;

    qint32 m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    qint32 m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    qint32 m_max_length;
    bool m_max_length_isSet;
    bool m_max_length_isValid;

    OAIConfigurationOptionDescription_Regex m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigurationOptionDescription)

#endif // OAIConfigurationOptionDescription_H
