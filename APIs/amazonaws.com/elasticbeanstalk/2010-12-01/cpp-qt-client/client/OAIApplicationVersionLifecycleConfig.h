/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationVersionLifecycleConfig.h
 *
 * &lt;p&gt;The application version lifecycle settings for an application. Defines the rules that Elastic Beanstalk applies to an application&#39;s versions in order to avoid hitting the per-region limit for application versions.&lt;/p&gt; &lt;p&gt;When Elastic Beanstalk deletes an application version from its database, you can no longer deploy that version to an environment. The source bundle remains in S3 unless you configure the rule to delete it.&lt;/p&gt;
 */

#ifndef OAIApplicationVersionLifecycleConfig_H
#define OAIApplicationVersionLifecycleConfig_H

#include <QJsonObject>

#include "OAIApplicationVersionLifecycleConfig_MaxAgeRule.h"
#include "OAIApplicationVersionLifecycleConfig_MaxCountRule.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationVersionLifecycleConfig_MaxCountRule;
class OAIApplicationVersionLifecycleConfig_MaxAgeRule;

class OAIApplicationVersionLifecycleConfig : public OAIObject {
public:
    OAIApplicationVersionLifecycleConfig();
    OAIApplicationVersionLifecycleConfig(QString json);
    ~OAIApplicationVersionLifecycleConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationVersionLifecycleConfig_MaxCountRule getMaxCountRule() const;
    void setMaxCountRule(const OAIApplicationVersionLifecycleConfig_MaxCountRule &max_count_rule);
    bool is_max_count_rule_Set() const;
    bool is_max_count_rule_Valid() const;

    OAIApplicationVersionLifecycleConfig_MaxAgeRule getMaxAgeRule() const;
    void setMaxAgeRule(const OAIApplicationVersionLifecycleConfig_MaxAgeRule &max_age_rule);
    bool is_max_age_rule_Set() const;
    bool is_max_age_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationVersionLifecycleConfig_MaxCountRule m_max_count_rule;
    bool m_max_count_rule_isSet;
    bool m_max_count_rule_isValid;

    OAIApplicationVersionLifecycleConfig_MaxAgeRule m_max_age_rule;
    bool m_max_age_rule_isSet;
    bool m_max_age_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationVersionLifecycleConfig)

#endif // OAIApplicationVersionLifecycleConfig_H
