/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationVersionDescription.h
 *
 * Describes the properties of an application version.
 */

#ifndef OAIApplicationVersionDescription_H
#define OAIApplicationVersionDescription_H

#include <QJsonObject>

#include "OAIApplicationVersionDescription_SourceBuildInformation.h"
#include "OAIApplicationVersionDescription_SourceBundle.h"
#include "OAIApplicationVersionStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationVersionDescription_SourceBuildInformation;
class OAIApplicationVersionDescription_SourceBundle;

class OAIApplicationVersionDescription : public OAIObject {
public:
    OAIApplicationVersionDescription();
    OAIApplicationVersionDescription(QString json);
    ~OAIApplicationVersionDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationVersionArn() const;
    void setApplicationVersionArn(const QString &application_version_arn);
    bool is_application_version_arn_Set() const;
    bool is_application_version_arn_Valid() const;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getVersionLabel() const;
    void setVersionLabel(const QString &version_label);
    bool is_version_label_Set() const;
    bool is_version_label_Valid() const;

    OAIApplicationVersionDescription_SourceBuildInformation getSourceBuildInformation() const;
    void setSourceBuildInformation(const OAIApplicationVersionDescription_SourceBuildInformation &source_build_information);
    bool is_source_build_information_Set() const;
    bool is_source_build_information_Valid() const;

    QString getBuildArn() const;
    void setBuildArn(const QString &build_arn);
    bool is_build_arn_Set() const;
    bool is_build_arn_Valid() const;

    OAIApplicationVersionDescription_SourceBundle getSourceBundle() const;
    void setSourceBundle(const OAIApplicationVersionDescription_SourceBundle &source_bundle);
    bool is_source_bundle_Set() const;
    bool is_source_bundle_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    OAIApplicationVersionStatus getStatus() const;
    void setStatus(const OAIApplicationVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_version_arn;
    bool m_application_version_arn_isSet;
    bool m_application_version_arn_isValid;

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_version_label;
    bool m_version_label_isSet;
    bool m_version_label_isValid;

    OAIApplicationVersionDescription_SourceBuildInformation m_source_build_information;
    bool m_source_build_information_isSet;
    bool m_source_build_information_isValid;

    QString m_build_arn;
    bool m_build_arn_isSet;
    bool m_build_arn_isValid;

    OAIApplicationVersionDescription_SourceBundle m_source_bundle;
    bool m_source_bundle_isSet;
    bool m_source_bundle_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    OAIApplicationVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationVersionDescription)

#endif // OAIApplicationVersionDescription_H
