/**
 * AWS Elastic Beanstalk
 * <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">https://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
 *
 * The version of the OpenAPI document: 2010-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources.h
 *
 * 
 */

#ifndef OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources_H
#define OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources : public OAIObject {
public:
    OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources();
    OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources(QString json);
    ~OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnvironmentName() const;
    void setEnvironmentName(const QString &environment_name);
    bool is_environment_name_Set() const;
    bool is_environment_name_Valid() const;

    QList getAutoScalingGroups() const;
    void setAutoScalingGroups(const QList &auto_scaling_groups);
    bool is_auto_scaling_groups_Set() const;
    bool is_auto_scaling_groups_Valid() const;

    QList getInstances() const;
    void setInstances(const QList &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QList getLaunchConfigurations() const;
    void setLaunchConfigurations(const QList &launch_configurations);
    bool is_launch_configurations_Set() const;
    bool is_launch_configurations_Valid() const;

    QList getLaunchTemplates() const;
    void setLaunchTemplates(const QList &launch_templates);
    bool is_launch_templates_Set() const;
    bool is_launch_templates_Valid() const;

    QList getLoadBalancers() const;
    void setLoadBalancers(const QList &load_balancers);
    bool is_load_balancers_Set() const;
    bool is_load_balancers_Valid() const;

    QList getTriggers() const;
    void setTriggers(const QList &triggers);
    bool is_triggers_Set() const;
    bool is_triggers_Valid() const;

    QList getQueues() const;
    void setQueues(const QList &queues);
    bool is_queues_Set() const;
    bool is_queues_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_environment_name;
    bool m_environment_name_isSet;
    bool m_environment_name_isValid;

    QList m_auto_scaling_groups;
    bool m_auto_scaling_groups_isSet;
    bool m_auto_scaling_groups_isValid;

    QList m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QList m_launch_configurations;
    bool m_launch_configurations_isSet;
    bool m_launch_configurations_isValid;

    QList m_launch_templates;
    bool m_launch_templates_isSet;
    bool m_launch_templates_isValid;

    QList m_load_balancers;
    bool m_load_balancers_isSet;
    bool m_load_balancers_isValid;

    QList m_triggers;
    bool m_triggers_isSet;
    bool m_triggers_isValid;

    QList m_queues;
    bool m_queues_isSet;
    bool m_queues_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources)

#endif // OAIEnvironmentResourceDescriptionsMessage_EnvironmentResources_H
