/*
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AccountAccessType;
import org.openapitools.client.model.LicenseType;
import org.openapitools.client.model.PermissionType;
import org.openapitools.client.model.WorkspaceDescriptionAuthentication;
import org.openapitools.client.model.WorkspaceDescriptionNetworkAccessControl;
import org.openapitools.client.model.WorkspaceDescriptionVpcConfiguration;
import org.openapitools.client.model.WorkspaceStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeleteWorkspaceResponseWorkspace
 */
public class DeleteWorkspaceResponseWorkspaceTest {
    private final DeleteWorkspaceResponseWorkspace model = new DeleteWorkspaceResponseWorkspace();

    /**
     * Model tests for DeleteWorkspaceResponseWorkspace
     */
    @Test
    public void testDeleteWorkspaceResponseWorkspace() {
        // TODO: test DeleteWorkspaceResponseWorkspace
    }

    /**
     * Test the property 'accountAccessType'
     */
    @Test
    public void accountAccessTypeTest() {
        // TODO: test accountAccessType
    }

    /**
     * Test the property 'authentication'
     */
    @Test
    public void authenticationTest() {
        // TODO: test authentication
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'dataSources'
     */
    @Test
    public void dataSourcesTest() {
        // TODO: test dataSources
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'freeTrialConsumed'
     */
    @Test
    public void freeTrialConsumedTest() {
        // TODO: test freeTrialConsumed
    }

    /**
     * Test the property 'freeTrialExpiration'
     */
    @Test
    public void freeTrialExpirationTest() {
        // TODO: test freeTrialExpiration
    }

    /**
     * Test the property 'grafanaVersion'
     */
    @Test
    public void grafanaVersionTest() {
        // TODO: test grafanaVersion
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'licenseExpiration'
     */
    @Test
    public void licenseExpirationTest() {
        // TODO: test licenseExpiration
    }

    /**
     * Test the property 'licenseType'
     */
    @Test
    public void licenseTypeTest() {
        // TODO: test licenseType
    }

    /**
     * Test the property 'modified'
     */
    @Test
    public void modifiedTest() {
        // TODO: test modified
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkAccessControl'
     */
    @Test
    public void networkAccessControlTest() {
        // TODO: test networkAccessControl
    }

    /**
     * Test the property 'notificationDestinations'
     */
    @Test
    public void notificationDestinationsTest() {
        // TODO: test notificationDestinations
    }

    /**
     * Test the property 'organizationRoleName'
     */
    @Test
    public void organizationRoleNameTest() {
        // TODO: test organizationRoleName
    }

    /**
     * Test the property 'organizationalUnits'
     */
    @Test
    public void organizationalUnitsTest() {
        // TODO: test organizationalUnits
    }

    /**
     * Test the property 'permissionType'
     */
    @Test
    public void permissionTypeTest() {
        // TODO: test permissionType
    }

    /**
     * Test the property 'stackSetName'
     */
    @Test
    public void stackSetNameTest() {
        // TODO: test stackSetName
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'vpcConfiguration'
     */
    @Test
    public void vpcConfigurationTest() {
        // TODO: test vpcConfiguration
    }

    /**
     * Test the property 'workspaceRoleArn'
     */
    @Test
    public void workspaceRoleArnTest() {
        // TODO: test workspaceRoleArn
    }

}
