/*
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes;
import org.openapitools.client.model.UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata;
import org.openapitools.client.model.UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateWorkspaceAuthenticationRequestSamlConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:13.859303-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateWorkspaceAuthenticationRequestSamlConfiguration {
  public static final String SERIALIZED_NAME_ALLOWED_ORGANIZATIONS = "allowedOrganizations";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ORGANIZATIONS)
  private List allowedOrganizations;

  public static final String SERIALIZED_NAME_ASSERTION_ATTRIBUTES = "assertionAttributes";
  @SerializedName(SERIALIZED_NAME_ASSERTION_ATTRIBUTES)
  private UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes assertionAttributes;

  public static final String SERIALIZED_NAME_IDP_METADATA = "idpMetadata";
  @SerializedName(SERIALIZED_NAME_IDP_METADATA)
  private UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata idpMetadata;

  public static final String SERIALIZED_NAME_LOGIN_VALIDITY_DURATION = "loginValidityDuration";
  @SerializedName(SERIALIZED_NAME_LOGIN_VALIDITY_DURATION)
  private Integer loginValidityDuration;

  public static final String SERIALIZED_NAME_ROLE_VALUES = "roleValues";
  @SerializedName(SERIALIZED_NAME_ROLE_VALUES)
  private UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues roleValues;

  public UpdateWorkspaceAuthenticationRequestSamlConfiguration() {
  }

  public UpdateWorkspaceAuthenticationRequestSamlConfiguration allowedOrganizations(List allowedOrganizations) {
    this.allowedOrganizations = allowedOrganizations;
    return this;
  }

  /**
   * Get allowedOrganizations
   * @return allowedOrganizations
   */
  @javax.annotation.Nullable
  public List getAllowedOrganizations() {
    return allowedOrganizations;
  }

  public void setAllowedOrganizations(List allowedOrganizations) {
    this.allowedOrganizations = allowedOrganizations;
  }


  public UpdateWorkspaceAuthenticationRequestSamlConfiguration assertionAttributes(UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes assertionAttributes) {
    this.assertionAttributes = assertionAttributes;
    return this;
  }

  /**
   * Get assertionAttributes
   * @return assertionAttributes
   */
  @javax.annotation.Nullable
  public UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes getAssertionAttributes() {
    return assertionAttributes;
  }

  public void setAssertionAttributes(UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes assertionAttributes) {
    this.assertionAttributes = assertionAttributes;
  }


  public UpdateWorkspaceAuthenticationRequestSamlConfiguration idpMetadata(UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata idpMetadata) {
    this.idpMetadata = idpMetadata;
    return this;
  }

  /**
   * Get idpMetadata
   * @return idpMetadata
   */
  @javax.annotation.Nonnull
  public UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata getIdpMetadata() {
    return idpMetadata;
  }

  public void setIdpMetadata(UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata idpMetadata) {
    this.idpMetadata = idpMetadata;
  }


  public UpdateWorkspaceAuthenticationRequestSamlConfiguration loginValidityDuration(Integer loginValidityDuration) {
    this.loginValidityDuration = loginValidityDuration;
    return this;
  }

  /**
   * Get loginValidityDuration
   * @return loginValidityDuration
   */
  @javax.annotation.Nullable
  public Integer getLoginValidityDuration() {
    return loginValidityDuration;
  }

  public void setLoginValidityDuration(Integer loginValidityDuration) {
    this.loginValidityDuration = loginValidityDuration;
  }


  public UpdateWorkspaceAuthenticationRequestSamlConfiguration roleValues(UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues roleValues) {
    this.roleValues = roleValues;
    return this;
  }

  /**
   * Get roleValues
   * @return roleValues
   */
  @javax.annotation.Nullable
  public UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues getRoleValues() {
    return roleValues;
  }

  public void setRoleValues(UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues roleValues) {
    this.roleValues = roleValues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWorkspaceAuthenticationRequestSamlConfiguration updateWorkspaceAuthenticationRequestSamlConfiguration = (UpdateWorkspaceAuthenticationRequestSamlConfiguration) o;
    return Objects.equals(this.allowedOrganizations, updateWorkspaceAuthenticationRequestSamlConfiguration.allowedOrganizations) &&
        Objects.equals(this.assertionAttributes, updateWorkspaceAuthenticationRequestSamlConfiguration.assertionAttributes) &&
        Objects.equals(this.idpMetadata, updateWorkspaceAuthenticationRequestSamlConfiguration.idpMetadata) &&
        Objects.equals(this.loginValidityDuration, updateWorkspaceAuthenticationRequestSamlConfiguration.loginValidityDuration) &&
        Objects.equals(this.roleValues, updateWorkspaceAuthenticationRequestSamlConfiguration.roleValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedOrganizations, assertionAttributes, idpMetadata, loginValidityDuration, roleValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWorkspaceAuthenticationRequestSamlConfiguration {\n");
    sb.append("    allowedOrganizations: ").append(toIndentedString(allowedOrganizations)).append("\n");
    sb.append("    assertionAttributes: ").append(toIndentedString(assertionAttributes)).append("\n");
    sb.append("    idpMetadata: ").append(toIndentedString(idpMetadata)).append("\n");
    sb.append("    loginValidityDuration: ").append(toIndentedString(loginValidityDuration)).append("\n");
    sb.append("    roleValues: ").append(toIndentedString(roleValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowedOrganizations");
    openapiFields.add("assertionAttributes");
    openapiFields.add("idpMetadata");
    openapiFields.add("loginValidityDuration");
    openapiFields.add("roleValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("idpMetadata");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateWorkspaceAuthenticationRequestSamlConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateWorkspaceAuthenticationRequestSamlConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateWorkspaceAuthenticationRequestSamlConfiguration is not found in the empty JSON string", UpdateWorkspaceAuthenticationRequestSamlConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateWorkspaceAuthenticationRequestSamlConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateWorkspaceAuthenticationRequestSamlConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateWorkspaceAuthenticationRequestSamlConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `allowedOrganizations`
      if (jsonObj.get("allowedOrganizations") != null && !jsonObj.get("allowedOrganizations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("allowedOrganizations"));
      }
      // validate the optional field `assertionAttributes`
      if (jsonObj.get("assertionAttributes") != null && !jsonObj.get("assertionAttributes").isJsonNull()) {
        UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.validateJsonElement(jsonObj.get("assertionAttributes"));
      }
      // validate the required field `idpMetadata`
      UpdateWorkspaceAuthenticationRequestSamlConfigurationIdpMetadata.validateJsonElement(jsonObj.get("idpMetadata"));
      // validate the optional field `loginValidityDuration`
      if (jsonObj.get("loginValidityDuration") != null && !jsonObj.get("loginValidityDuration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("loginValidityDuration"));
      }
      // validate the optional field `roleValues`
      if (jsonObj.get("roleValues") != null && !jsonObj.get("roleValues").isJsonNull()) {
        UpdateWorkspaceAuthenticationRequestSamlConfigurationRoleValues.validateJsonElement(jsonObj.get("roleValues"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateWorkspaceAuthenticationRequestSamlConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateWorkspaceAuthenticationRequestSamlConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateWorkspaceAuthenticationRequestSamlConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateWorkspaceAuthenticationRequestSamlConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateWorkspaceAuthenticationRequestSamlConfiguration>() {
           @Override
           public void write(JsonWriter out, UpdateWorkspaceAuthenticationRequestSamlConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateWorkspaceAuthenticationRequestSamlConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateWorkspaceAuthenticationRequestSamlConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateWorkspaceAuthenticationRequestSamlConfiguration
   * @throws IOException if the JSON string is invalid with respect to UpdateWorkspaceAuthenticationRequestSamlConfiguration
   */
  public static UpdateWorkspaceAuthenticationRequestSamlConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateWorkspaceAuthenticationRequestSamlConfiguration.class);
  }

  /**
   * Convert an instance of UpdateWorkspaceAuthenticationRequestSamlConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

