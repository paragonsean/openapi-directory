/*
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateWorkspaceRequestNetworkAccessControl;
import org.openapitools.client.model.CreateWorkspaceRequestVpcConfiguration;
import org.openapitools.client.model.DataSourceType;
import org.openapitools.client.model.NotificationDestinationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateWorkspaceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:13.859303-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateWorkspaceRequest {
  /**
   * Specifies whether the workspace can access Amazon Web Services resources in this Amazon Web Services account only, or whether it can also access Amazon Web Services resources in other accounts in the same organization. If you specify &lt;code&gt;ORGANIZATION&lt;/code&gt;, you must specify which organizational units the workspace can access in the &lt;code&gt;workspaceOrganizationalUnits&lt;/code&gt; parameter.
   */
  @JsonAdapter(AccountAccessTypeEnum.Adapter.class)
  public enum AccountAccessTypeEnum {
    CURRENT_ACCOUNT("CURRENT_ACCOUNT"),
    
    ORGANIZATION("ORGANIZATION");

    private String value;

    AccountAccessTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccountAccessTypeEnum fromValue(String value) {
      for (AccountAccessTypeEnum b : AccountAccessTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccountAccessTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccountAccessTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccountAccessTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AccountAccessTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AccountAccessTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACCOUNT_ACCESS_TYPE = "accountAccessType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ACCESS_TYPE)
  private AccountAccessTypeEnum accountAccessType;

  public static final String SERIALIZED_NAME_NETWORK_ACCESS_CONTROL = "networkAccessControl";
  @SerializedName(SERIALIZED_NAME_NETWORK_ACCESS_CONTROL)
  private CreateWorkspaceRequestNetworkAccessControl networkAccessControl;

  public static final String SERIALIZED_NAME_ORGANIZATION_ROLE_NAME = "organizationRoleName";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ROLE_NAME)
  private String organizationRoleName;

  /**
   * &lt;p&gt;Use this parameter if you want to change a workspace from &lt;code&gt;SERVICE_MANAGED&lt;/code&gt; to &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;. This allows you to manage the permissions that the workspace uses to access datasources and notification channels. If the workspace is in a member Amazon Web Services account of an organization, and that account is not a delegated administrator account, and you want the workspace to access data sources in other Amazon Web Services accounts in the organization, you must choose &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you specify this as &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;, you must also specify a &lt;code&gt;workspaceRoleArn&lt;/code&gt; that the workspace will use for accessing Amazon Web Services resources.&lt;/p&gt; &lt;p&gt;For more information on the role and permissions needed, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\&quot;&gt;Amazon Managed Grafana permissions and policies for Amazon Web Services data sources and notification channels&lt;/a&gt; &lt;/p&gt; &lt;note&gt; &lt;p&gt;Do not use this to convert a &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt; workspace to &lt;code&gt;SERVICE_MANAGED&lt;/code&gt;. Do not include this parameter if you want to leave the workspace as &lt;code&gt;SERVICE_MANAGED&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can convert a &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt; workspace to &lt;code&gt;SERVICE_MANAGED&lt;/code&gt; using the Amazon Managed Grafana console. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html\&quot;&gt;Managing permissions for data sources and notification channels&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
   */
  @JsonAdapter(PermissionTypeEnum.Adapter.class)
  public enum PermissionTypeEnum {
    CUSTOMER_MANAGED("CUSTOMER_MANAGED"),
    
    SERVICE_MANAGED("SERVICE_MANAGED");

    private String value;

    PermissionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionTypeEnum fromValue(String value) {
      for (PermissionTypeEnum b : PermissionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PermissionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PermissionTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PermissionTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PERMISSION_TYPE = "permissionType";
  @SerializedName(SERIALIZED_NAME_PERMISSION_TYPE)
  private PermissionTypeEnum permissionType;

  public static final String SERIALIZED_NAME_REMOVE_NETWORK_ACCESS_CONFIGURATION = "removeNetworkAccessConfiguration";
  @SerializedName(SERIALIZED_NAME_REMOVE_NETWORK_ACCESS_CONFIGURATION)
  private Boolean removeNetworkAccessConfiguration;

  public static final String SERIALIZED_NAME_REMOVE_VPC_CONFIGURATION = "removeVpcConfiguration";
  @SerializedName(SERIALIZED_NAME_REMOVE_VPC_CONFIGURATION)
  private Boolean removeVpcConfiguration;

  public static final String SERIALIZED_NAME_STACK_SET_NAME = "stackSetName";
  @SerializedName(SERIALIZED_NAME_STACK_SET_NAME)
  private String stackSetName;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION = "vpcConfiguration";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION)
  private CreateWorkspaceRequestVpcConfiguration vpcConfiguration;

  public static final String SERIALIZED_NAME_WORKSPACE_DATA_SOURCES = "workspaceDataSources";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_DATA_SOURCES)
  private List<DataSourceType> workspaceDataSources = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORKSPACE_DESCRIPTION = "workspaceDescription";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_DESCRIPTION)
  private String workspaceDescription;

  public static final String SERIALIZED_NAME_WORKSPACE_NAME = "workspaceName";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_NAME)
  private String workspaceName;

  public static final String SERIALIZED_NAME_WORKSPACE_NOTIFICATION_DESTINATIONS = "workspaceNotificationDestinations";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_NOTIFICATION_DESTINATIONS)
  private List<NotificationDestinationType> workspaceNotificationDestinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORKSPACE_ORGANIZATIONAL_UNITS = "workspaceOrganizationalUnits";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_ORGANIZATIONAL_UNITS)
  private List<String> workspaceOrganizationalUnits = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORKSPACE_ROLE_ARN = "workspaceRoleArn";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_ROLE_ARN)
  private String workspaceRoleArn;

  public UpdateWorkspaceRequest() {
  }

  public UpdateWorkspaceRequest accountAccessType(AccountAccessTypeEnum accountAccessType) {
    this.accountAccessType = accountAccessType;
    return this;
  }

  /**
   * Specifies whether the workspace can access Amazon Web Services resources in this Amazon Web Services account only, or whether it can also access Amazon Web Services resources in other accounts in the same organization. If you specify &lt;code&gt;ORGANIZATION&lt;/code&gt;, you must specify which organizational units the workspace can access in the &lt;code&gt;workspaceOrganizationalUnits&lt;/code&gt; parameter.
   * @return accountAccessType
   */
  @javax.annotation.Nullable
  public AccountAccessTypeEnum getAccountAccessType() {
    return accountAccessType;
  }

  public void setAccountAccessType(AccountAccessTypeEnum accountAccessType) {
    this.accountAccessType = accountAccessType;
  }


  public UpdateWorkspaceRequest networkAccessControl(CreateWorkspaceRequestNetworkAccessControl networkAccessControl) {
    this.networkAccessControl = networkAccessControl;
    return this;
  }

  /**
   * Get networkAccessControl
   * @return networkAccessControl
   */
  @javax.annotation.Nullable
  public CreateWorkspaceRequestNetworkAccessControl getNetworkAccessControl() {
    return networkAccessControl;
  }

  public void setNetworkAccessControl(CreateWorkspaceRequestNetworkAccessControl networkAccessControl) {
    this.networkAccessControl = networkAccessControl;
  }


  public UpdateWorkspaceRequest organizationRoleName(String organizationRoleName) {
    this.organizationRoleName = organizationRoleName;
    return this;
  }

  /**
   * The name of an IAM role that already exists to use to access resources through Organizations. This can only be used with a workspace that has the &lt;code&gt;permissionType&lt;/code&gt; set to &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;.
   * @return organizationRoleName
   */
  @javax.annotation.Nullable
  public String getOrganizationRoleName() {
    return organizationRoleName;
  }

  public void setOrganizationRoleName(String organizationRoleName) {
    this.organizationRoleName = organizationRoleName;
  }


  public UpdateWorkspaceRequest permissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
    return this;
  }

  /**
   * &lt;p&gt;Use this parameter if you want to change a workspace from &lt;code&gt;SERVICE_MANAGED&lt;/code&gt; to &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;. This allows you to manage the permissions that the workspace uses to access datasources and notification channels. If the workspace is in a member Amazon Web Services account of an organization, and that account is not a delegated administrator account, and you want the workspace to access data sources in other Amazon Web Services accounts in the organization, you must choose &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you specify this as &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;, you must also specify a &lt;code&gt;workspaceRoleArn&lt;/code&gt; that the workspace will use for accessing Amazon Web Services resources.&lt;/p&gt; &lt;p&gt;For more information on the role and permissions needed, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\&quot;&gt;Amazon Managed Grafana permissions and policies for Amazon Web Services data sources and notification channels&lt;/a&gt; &lt;/p&gt; &lt;note&gt; &lt;p&gt;Do not use this to convert a &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt; workspace to &lt;code&gt;SERVICE_MANAGED&lt;/code&gt;. Do not include this parameter if you want to leave the workspace as &lt;code&gt;SERVICE_MANAGED&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can convert a &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt; workspace to &lt;code&gt;SERVICE_MANAGED&lt;/code&gt; using the Amazon Managed Grafana console. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html\&quot;&gt;Managing permissions for data sources and notification channels&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
   * @return permissionType
   */
  @javax.annotation.Nullable
  public PermissionTypeEnum getPermissionType() {
    return permissionType;
  }

  public void setPermissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
  }


  public UpdateWorkspaceRequest removeNetworkAccessConfiguration(Boolean removeNetworkAccessConfiguration) {
    this.removeNetworkAccessConfiguration = removeNetworkAccessConfiguration;
    return this;
  }

  /**
   * &lt;p&gt;Whether to remove the network access configuration from the workspace.&lt;/p&gt; &lt;p&gt;Setting this to &lt;code&gt;true&lt;/code&gt; and providing a &lt;code&gt;networkAccessControl&lt;/code&gt; to set will return an error.&lt;/p&gt; &lt;p&gt;If you remove this configuration by setting this to &lt;code&gt;true&lt;/code&gt;, then all IP addresses and VPC endpoints will be allowed. Standard Grafana authentication and authorization will still be required.&lt;/p&gt;
   * @return removeNetworkAccessConfiguration
   */
  @javax.annotation.Nullable
  public Boolean getRemoveNetworkAccessConfiguration() {
    return removeNetworkAccessConfiguration;
  }

  public void setRemoveNetworkAccessConfiguration(Boolean removeNetworkAccessConfiguration) {
    this.removeNetworkAccessConfiguration = removeNetworkAccessConfiguration;
  }


  public UpdateWorkspaceRequest removeVpcConfiguration(Boolean removeVpcConfiguration) {
    this.removeVpcConfiguration = removeVpcConfiguration;
    return this;
  }

  /**
   * &lt;p&gt;Whether to remove the VPC configuration from the workspace.&lt;/p&gt; &lt;p&gt;Setting this to &lt;code&gt;true&lt;/code&gt; and providing a &lt;code&gt;vpcConfiguration&lt;/code&gt; to set will return an error.&lt;/p&gt;
   * @return removeVpcConfiguration
   */
  @javax.annotation.Nullable
  public Boolean getRemoveVpcConfiguration() {
    return removeVpcConfiguration;
  }

  public void setRemoveVpcConfiguration(Boolean removeVpcConfiguration) {
    this.removeVpcConfiguration = removeVpcConfiguration;
  }


  public UpdateWorkspaceRequest stackSetName(String stackSetName) {
    this.stackSetName = stackSetName;
    return this;
  }

  /**
   * The name of the CloudFormation stack set to use to generate IAM roles to be used for this workspace.
   * @return stackSetName
   */
  @javax.annotation.Nullable
  public String getStackSetName() {
    return stackSetName;
  }

  public void setStackSetName(String stackSetName) {
    this.stackSetName = stackSetName;
  }


  public UpdateWorkspaceRequest vpcConfiguration(CreateWorkspaceRequestVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
    return this;
  }

  /**
   * Get vpcConfiguration
   * @return vpcConfiguration
   */
  @javax.annotation.Nullable
  public CreateWorkspaceRequestVpcConfiguration getVpcConfiguration() {
    return vpcConfiguration;
  }

  public void setVpcConfiguration(CreateWorkspaceRequestVpcConfiguration vpcConfiguration) {
    this.vpcConfiguration = vpcConfiguration;
  }


  public UpdateWorkspaceRequest workspaceDataSources(List<DataSourceType> workspaceDataSources) {
    this.workspaceDataSources = workspaceDataSources;
    return this;
  }

  public UpdateWorkspaceRequest addWorkspaceDataSourcesItem(DataSourceType workspaceDataSourcesItem) {
    if (this.workspaceDataSources == null) {
      this.workspaceDataSources = new ArrayList<>();
    }
    this.workspaceDataSources.add(workspaceDataSourcesItem);
    return this;
  }

  /**
   * This parameter is for internal use only, and should not be used.
   * @return workspaceDataSources
   */
  @javax.annotation.Nullable
  public List<DataSourceType> getWorkspaceDataSources() {
    return workspaceDataSources;
  }

  public void setWorkspaceDataSources(List<DataSourceType> workspaceDataSources) {
    this.workspaceDataSources = workspaceDataSources;
  }


  public UpdateWorkspaceRequest workspaceDescription(String workspaceDescription) {
    this.workspaceDescription = workspaceDescription;
    return this;
  }

  /**
   * A description for the workspace. This is used only to help you identify this workspace.
   * @return workspaceDescription
   */
  @javax.annotation.Nullable
  public String getWorkspaceDescription() {
    return workspaceDescription;
  }

  public void setWorkspaceDescription(String workspaceDescription) {
    this.workspaceDescription = workspaceDescription;
  }


  public UpdateWorkspaceRequest workspaceName(String workspaceName) {
    this.workspaceName = workspaceName;
    return this;
  }

  /**
   * A new name for the workspace to update.
   * @return workspaceName
   */
  @javax.annotation.Nullable
  public String getWorkspaceName() {
    return workspaceName;
  }

  public void setWorkspaceName(String workspaceName) {
    this.workspaceName = workspaceName;
  }


  public UpdateWorkspaceRequest workspaceNotificationDestinations(List<NotificationDestinationType> workspaceNotificationDestinations) {
    this.workspaceNotificationDestinations = workspaceNotificationDestinations;
    return this;
  }

  public UpdateWorkspaceRequest addWorkspaceNotificationDestinationsItem(NotificationDestinationType workspaceNotificationDestinationsItem) {
    if (this.workspaceNotificationDestinations == null) {
      this.workspaceNotificationDestinations = new ArrayList<>();
    }
    this.workspaceNotificationDestinations.add(workspaceNotificationDestinationsItem);
    return this;
  }

  /**
   * Specify the Amazon Web Services notification channels that you plan to use in this workspace. Specifying these data sources here enables Amazon Managed Grafana to create IAM roles and permissions that allow Amazon Managed Grafana to use these channels.
   * @return workspaceNotificationDestinations
   */
  @javax.annotation.Nullable
  public List<NotificationDestinationType> getWorkspaceNotificationDestinations() {
    return workspaceNotificationDestinations;
  }

  public void setWorkspaceNotificationDestinations(List<NotificationDestinationType> workspaceNotificationDestinations) {
    this.workspaceNotificationDestinations = workspaceNotificationDestinations;
  }


  public UpdateWorkspaceRequest workspaceOrganizationalUnits(List<String> workspaceOrganizationalUnits) {
    this.workspaceOrganizationalUnits = workspaceOrganizationalUnits;
    return this;
  }

  public UpdateWorkspaceRequest addWorkspaceOrganizationalUnitsItem(String workspaceOrganizationalUnitsItem) {
    if (this.workspaceOrganizationalUnits == null) {
      this.workspaceOrganizationalUnits = new ArrayList<>();
    }
    this.workspaceOrganizationalUnits.add(workspaceOrganizationalUnitsItem);
    return this;
  }

  /**
   * Specifies the organizational units that this workspace is allowed to use data sources from, if this workspace is in an account that is part of an organization.
   * @return workspaceOrganizationalUnits
   */
  @javax.annotation.Nullable
  public List<String> getWorkspaceOrganizationalUnits() {
    return workspaceOrganizationalUnits;
  }

  public void setWorkspaceOrganizationalUnits(List<String> workspaceOrganizationalUnits) {
    this.workspaceOrganizationalUnits = workspaceOrganizationalUnits;
  }


  public UpdateWorkspaceRequest workspaceRoleArn(String workspaceRoleArn) {
    this.workspaceRoleArn = workspaceRoleArn;
    return this;
  }

  /**
   * Specifies an IAM role that grants permissions to Amazon Web Services resources that the workspace accesses, such as data sources and notification channels. If this workspace has &lt;code&gt;permissionType&lt;/code&gt; &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt;, then this role is required.
   * @return workspaceRoleArn
   */
  @javax.annotation.Nullable
  public String getWorkspaceRoleArn() {
    return workspaceRoleArn;
  }

  public void setWorkspaceRoleArn(String workspaceRoleArn) {
    this.workspaceRoleArn = workspaceRoleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWorkspaceRequest updateWorkspaceRequest = (UpdateWorkspaceRequest) o;
    return Objects.equals(this.accountAccessType, updateWorkspaceRequest.accountAccessType) &&
        Objects.equals(this.networkAccessControl, updateWorkspaceRequest.networkAccessControl) &&
        Objects.equals(this.organizationRoleName, updateWorkspaceRequest.organizationRoleName) &&
        Objects.equals(this.permissionType, updateWorkspaceRequest.permissionType) &&
        Objects.equals(this.removeNetworkAccessConfiguration, updateWorkspaceRequest.removeNetworkAccessConfiguration) &&
        Objects.equals(this.removeVpcConfiguration, updateWorkspaceRequest.removeVpcConfiguration) &&
        Objects.equals(this.stackSetName, updateWorkspaceRequest.stackSetName) &&
        Objects.equals(this.vpcConfiguration, updateWorkspaceRequest.vpcConfiguration) &&
        Objects.equals(this.workspaceDataSources, updateWorkspaceRequest.workspaceDataSources) &&
        Objects.equals(this.workspaceDescription, updateWorkspaceRequest.workspaceDescription) &&
        Objects.equals(this.workspaceName, updateWorkspaceRequest.workspaceName) &&
        Objects.equals(this.workspaceNotificationDestinations, updateWorkspaceRequest.workspaceNotificationDestinations) &&
        Objects.equals(this.workspaceOrganizationalUnits, updateWorkspaceRequest.workspaceOrganizationalUnits) &&
        Objects.equals(this.workspaceRoleArn, updateWorkspaceRequest.workspaceRoleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAccessType, networkAccessControl, organizationRoleName, permissionType, removeNetworkAccessConfiguration, removeVpcConfiguration, stackSetName, vpcConfiguration, workspaceDataSources, workspaceDescription, workspaceName, workspaceNotificationDestinations, workspaceOrganizationalUnits, workspaceRoleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWorkspaceRequest {\n");
    sb.append("    accountAccessType: ").append(toIndentedString(accountAccessType)).append("\n");
    sb.append("    networkAccessControl: ").append(toIndentedString(networkAccessControl)).append("\n");
    sb.append("    organizationRoleName: ").append("*").append("\n");
    sb.append("    permissionType: ").append(toIndentedString(permissionType)).append("\n");
    sb.append("    removeNetworkAccessConfiguration: ").append(toIndentedString(removeNetworkAccessConfiguration)).append("\n");
    sb.append("    removeVpcConfiguration: ").append(toIndentedString(removeVpcConfiguration)).append("\n");
    sb.append("    stackSetName: ").append(toIndentedString(stackSetName)).append("\n");
    sb.append("    vpcConfiguration: ").append(toIndentedString(vpcConfiguration)).append("\n");
    sb.append("    workspaceDataSources: ").append(toIndentedString(workspaceDataSources)).append("\n");
    sb.append("    workspaceDescription: ").append("*").append("\n");
    sb.append("    workspaceName: ").append("*").append("\n");
    sb.append("    workspaceNotificationDestinations: ").append(toIndentedString(workspaceNotificationDestinations)).append("\n");
    sb.append("    workspaceOrganizationalUnits: ").append(toIndentedString(workspaceOrganizationalUnits)).append("\n");
    sb.append("    workspaceRoleArn: ").append("*").append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountAccessType");
    openapiFields.add("networkAccessControl");
    openapiFields.add("organizationRoleName");
    openapiFields.add("permissionType");
    openapiFields.add("removeNetworkAccessConfiguration");
    openapiFields.add("removeVpcConfiguration");
    openapiFields.add("stackSetName");
    openapiFields.add("vpcConfiguration");
    openapiFields.add("workspaceDataSources");
    openapiFields.add("workspaceDescription");
    openapiFields.add("workspaceName");
    openapiFields.add("workspaceNotificationDestinations");
    openapiFields.add("workspaceOrganizationalUnits");
    openapiFields.add("workspaceRoleArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateWorkspaceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateWorkspaceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateWorkspaceRequest is not found in the empty JSON string", UpdateWorkspaceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateWorkspaceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateWorkspaceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountAccessType") != null && !jsonObj.get("accountAccessType").isJsonNull()) && !jsonObj.get("accountAccessType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountAccessType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountAccessType").toString()));
      }
      // validate the optional field `accountAccessType`
      if (jsonObj.get("accountAccessType") != null && !jsonObj.get("accountAccessType").isJsonNull()) {
        AccountAccessTypeEnum.validateJsonElement(jsonObj.get("accountAccessType"));
      }
      // validate the optional field `networkAccessControl`
      if (jsonObj.get("networkAccessControl") != null && !jsonObj.get("networkAccessControl").isJsonNull()) {
        CreateWorkspaceRequestNetworkAccessControl.validateJsonElement(jsonObj.get("networkAccessControl"));
      }
      if ((jsonObj.get("organizationRoleName") != null && !jsonObj.get("organizationRoleName").isJsonNull()) && !jsonObj.get("organizationRoleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationRoleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationRoleName").toString()));
      }
      if ((jsonObj.get("permissionType") != null && !jsonObj.get("permissionType").isJsonNull()) && !jsonObj.get("permissionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permissionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permissionType").toString()));
      }
      // validate the optional field `permissionType`
      if (jsonObj.get("permissionType") != null && !jsonObj.get("permissionType").isJsonNull()) {
        PermissionTypeEnum.validateJsonElement(jsonObj.get("permissionType"));
      }
      if ((jsonObj.get("stackSetName") != null && !jsonObj.get("stackSetName").isJsonNull()) && !jsonObj.get("stackSetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stackSetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stackSetName").toString()));
      }
      // validate the optional field `vpcConfiguration`
      if (jsonObj.get("vpcConfiguration") != null && !jsonObj.get("vpcConfiguration").isJsonNull()) {
        CreateWorkspaceRequestVpcConfiguration.validateJsonElement(jsonObj.get("vpcConfiguration"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("workspaceDataSources") != null && !jsonObj.get("workspaceDataSources").isJsonNull() && !jsonObj.get("workspaceDataSources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceDataSources` to be an array in the JSON string but got `%s`", jsonObj.get("workspaceDataSources").toString()));
      }
      if ((jsonObj.get("workspaceDescription") != null && !jsonObj.get("workspaceDescription").isJsonNull()) && !jsonObj.get("workspaceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspaceDescription").toString()));
      }
      if ((jsonObj.get("workspaceName") != null && !jsonObj.get("workspaceName").isJsonNull()) && !jsonObj.get("workspaceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspaceName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("workspaceNotificationDestinations") != null && !jsonObj.get("workspaceNotificationDestinations").isJsonNull() && !jsonObj.get("workspaceNotificationDestinations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceNotificationDestinations` to be an array in the JSON string but got `%s`", jsonObj.get("workspaceNotificationDestinations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("workspaceOrganizationalUnits") != null && !jsonObj.get("workspaceOrganizationalUnits").isJsonNull() && !jsonObj.get("workspaceOrganizationalUnits").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceOrganizationalUnits` to be an array in the JSON string but got `%s`", jsonObj.get("workspaceOrganizationalUnits").toString()));
      }
      if ((jsonObj.get("workspaceRoleArn") != null && !jsonObj.get("workspaceRoleArn").isJsonNull()) && !jsonObj.get("workspaceRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspaceRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspaceRoleArn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateWorkspaceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateWorkspaceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateWorkspaceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateWorkspaceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateWorkspaceRequest>() {
           @Override
           public void write(JsonWriter out, UpdateWorkspaceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateWorkspaceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateWorkspaceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateWorkspaceRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateWorkspaceRequest
   */
  public static UpdateWorkspaceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateWorkspaceRequest.class);
  }

  /**
   * Convert an instance of UpdateWorkspaceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

