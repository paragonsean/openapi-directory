# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateWorkspaceRequestNetworkAccessControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prefix_list_ids: List=None, vpce_ids: List=None):
        """CreateWorkspaceRequestNetworkAccessControl - a model defined in OpenAPI

        :param prefix_list_ids: The prefix_list_ids of this CreateWorkspaceRequestNetworkAccessControl.
        :param vpce_ids: The vpce_ids of this CreateWorkspaceRequestNetworkAccessControl.
        """
        self.openapi_types = {
            'prefix_list_ids': List,
            'vpce_ids': List
        }

        self.attribute_map = {
            'prefix_list_ids': 'prefixListIds',
            'vpce_ids': 'vpceIds'
        }

        self._prefix_list_ids = prefix_list_ids
        self._vpce_ids = vpce_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWorkspaceRequestNetworkAccessControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWorkspaceRequest_networkAccessControl of this CreateWorkspaceRequestNetworkAccessControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prefix_list_ids(self):
        """Gets the prefix_list_ids of this CreateWorkspaceRequestNetworkAccessControl.


        :return: The prefix_list_ids of this CreateWorkspaceRequestNetworkAccessControl.
        :rtype: List
        """
        return self._prefix_list_ids

    @prefix_list_ids.setter
    def prefix_list_ids(self, prefix_list_ids):
        """Sets the prefix_list_ids of this CreateWorkspaceRequestNetworkAccessControl.


        :param prefix_list_ids: The prefix_list_ids of this CreateWorkspaceRequestNetworkAccessControl.
        :type prefix_list_ids: List
        """
        if prefix_list_ids is None:
            raise ValueError("Invalid value for `prefix_list_ids`, must not be `None`")

        self._prefix_list_ids = prefix_list_ids

    @property
    def vpce_ids(self):
        """Gets the vpce_ids of this CreateWorkspaceRequestNetworkAccessControl.


        :return: The vpce_ids of this CreateWorkspaceRequestNetworkAccessControl.
        :rtype: List
        """
        return self._vpce_ids

    @vpce_ids.setter
    def vpce_ids(self, vpce_ids):
        """Sets the vpce_ids of this CreateWorkspaceRequestNetworkAccessControl.


        :param vpce_ids: The vpce_ids of this CreateWorkspaceRequestNetworkAccessControl.
        :type vpce_ids: List
        """
        if vpce_ids is None:
            raise ValueError("Invalid value for `vpce_ids`, must not be `None`")

        self._vpce_ids = vpce_ids
