# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, groups: str=None, login: str=None, name: str=None, org: str=None, role: str=None):
        """UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes - a model defined in OpenAPI

        :param email: The email of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :param groups: The groups of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :param login: The login of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :param name: The name of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :param org: The org of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :param role: The role of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        """
        self.openapi_types = {
            'email': str,
            'groups': str,
            'login': str,
            'name': str,
            'org': str,
            'role': str
        }

        self.attribute_map = {
            'email': 'email',
            'groups': 'groups',
            'login': 'login',
            'name': 'name',
            'org': 'org',
            'role': 'role'
        }

        self._email = email
        self._groups = groups
        self._login = login
        self._name = name
        self._org = org
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWorkspaceAuthentication_request_samlConfiguration_assertionAttributes of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The email of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param email: The email of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type email: str
        """

        self._email = email

    @property
    def groups(self):
        """Gets the groups of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The groups of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param groups: The groups of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type groups: str
        """

        self._groups = groups

    @property
    def login(self):
        """Gets the login of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The login of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param login: The login of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type login: str
        """

        self._login = login

    @property
    def name(self):
        """Gets the name of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The name of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param name: The name of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type name: str
        """

        self._name = name

    @property
    def org(self):
        """Gets the org of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The org of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._org

    @org.setter
    def org(self, org):
        """Sets the org of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param org: The org of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type org: str
        """

        self._org = org

    @property
    def role(self):
        """Gets the role of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :return: The role of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.


        :param role: The role of this UpdateWorkspaceAuthenticationRequestSamlConfigurationAssertionAttributes.
        :type role: str
        """

        self._role = role
