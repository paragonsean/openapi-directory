# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateWorkspaceConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration: str=None, grafana_version: str=None):
        """UpdateWorkspaceConfigurationRequest - a model defined in OpenAPI

        :param configuration: The configuration of this UpdateWorkspaceConfigurationRequest.
        :param grafana_version: The grafana_version of this UpdateWorkspaceConfigurationRequest.
        """
        self.openapi_types = {
            'configuration': str,
            'grafana_version': str
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'grafana_version': 'grafanaVersion'
        }

        self._configuration = configuration
        self._grafana_version = grafana_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWorkspaceConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWorkspaceConfiguration_request of this UpdateWorkspaceConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self):
        """Gets the configuration of this UpdateWorkspaceConfigurationRequest.

        The new configuration string for the workspace. For more information about the format and configuration options available, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\">Working in your Grafana workspace</a>.

        :return: The configuration of this UpdateWorkspaceConfigurationRequest.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this UpdateWorkspaceConfigurationRequest.

        The new configuration string for the workspace. For more information about the format and configuration options available, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\">Working in your Grafana workspace</a>.

        :param configuration: The configuration of this UpdateWorkspaceConfigurationRequest.
        :type configuration: str
        """
        if configuration is None:
            raise ValueError("Invalid value for `configuration`, must not be `None`")
        if configuration is not None and len(configuration) > 65536:
            raise ValueError("Invalid value for `configuration`, length must be less than or equal to `65536`")
        if configuration is not None and len(configuration) < 2:
            raise ValueError("Invalid value for `configuration`, length must be greater than or equal to `2`")

        self._configuration = configuration

    @property
    def grafana_version(self):
        """Gets the grafana_version of this UpdateWorkspaceConfigurationRequest.

        <p>Specifies the version of Grafana to support in the new workspace.</p> <p>Can only be used to upgrade (for example, from 8.4 to 9.4), not downgrade (for example, from 9.4 to 8.4).</p> <p>To know what versions are available to upgrade to for a specific workspace, see the <code>ListVersions</code> operation.</p>

        :return: The grafana_version of this UpdateWorkspaceConfigurationRequest.
        :rtype: str
        """
        return self._grafana_version

    @grafana_version.setter
    def grafana_version(self, grafana_version):
        """Sets the grafana_version of this UpdateWorkspaceConfigurationRequest.

        <p>Specifies the version of Grafana to support in the new workspace.</p> <p>Can only be used to upgrade (for example, from 8.4 to 9.4), not downgrade (for example, from 9.4 to 8.4).</p> <p>To know what versions are available to upgrade to for a specific workspace, see the <code>ListVersions</code> operation.</p>

        :param grafana_version: The grafana_version of this UpdateWorkspaceConfigurationRequest.
        :type grafana_version: str
        """
        if grafana_version is not None and len(grafana_version) > 255:
            raise ValueError("Invalid value for `grafana_version`, length must be less than or equal to `255`")
        if grafana_version is not None and len(grafana_version) < 1:
            raise ValueError("Invalid value for `grafana_version`, length must be greater than or equal to `1`")

        self._grafana_version = grafana_version
