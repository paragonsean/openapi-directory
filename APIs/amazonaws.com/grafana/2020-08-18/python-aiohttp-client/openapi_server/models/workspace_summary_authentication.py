# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.saml_configuration_status import SamlConfigurationStatus
from openapi_server import util


class WorkspaceSummaryAuthentication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, providers: List=None, saml_configuration_status: SamlConfigurationStatus=None):
        """WorkspaceSummaryAuthentication - a model defined in OpenAPI

        :param providers: The providers of this WorkspaceSummaryAuthentication.
        :param saml_configuration_status: The saml_configuration_status of this WorkspaceSummaryAuthentication.
        """
        self.openapi_types = {
            'providers': List,
            'saml_configuration_status': SamlConfigurationStatus
        }

        self.attribute_map = {
            'providers': 'providers',
            'saml_configuration_status': 'samlConfigurationStatus'
        }

        self._providers = providers
        self._saml_configuration_status = saml_configuration_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspaceSummaryAuthentication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspaceSummary_authentication of this WorkspaceSummaryAuthentication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def providers(self):
        """Gets the providers of this WorkspaceSummaryAuthentication.


        :return: The providers of this WorkspaceSummaryAuthentication.
        :rtype: List
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this WorkspaceSummaryAuthentication.


        :param providers: The providers of this WorkspaceSummaryAuthentication.
        :type providers: List
        """
        if providers is None:
            raise ValueError("Invalid value for `providers`, must not be `None`")

        self._providers = providers

    @property
    def saml_configuration_status(self):
        """Gets the saml_configuration_status of this WorkspaceSummaryAuthentication.


        :return: The saml_configuration_status of this WorkspaceSummaryAuthentication.
        :rtype: SamlConfigurationStatus
        """
        return self._saml_configuration_status

    @saml_configuration_status.setter
    def saml_configuration_status(self, saml_configuration_status):
        """Sets the saml_configuration_status of this WorkspaceSummaryAuthentication.


        :param saml_configuration_status: The saml_configuration_status of this WorkspaceSummaryAuthentication.
        :type saml_configuration_status: SamlConfigurationStatus
        """

        self._saml_configuration_status = saml_configuration_status
