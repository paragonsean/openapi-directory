# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_access_type import AccountAccessType
from openapi_server.models.license_type import LicenseType
from openapi_server.models.permission_type import PermissionType
from openapi_server.models.workspace_description_authentication import WorkspaceDescriptionAuthentication
from openapi_server.models.workspace_description_network_access_control import WorkspaceDescriptionNetworkAccessControl
from openapi_server.models.workspace_description_vpc_configuration import WorkspaceDescriptionVpcConfiguration
from openapi_server.models.workspace_status import WorkspaceStatus
from openapi_server import util


class DeleteWorkspaceResponseWorkspace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_access_type: AccountAccessType=None, authentication: WorkspaceDescriptionAuthentication=None, created: datetime=None, data_sources: List=None, description: str=None, endpoint: str=None, free_trial_consumed: bool=None, free_trial_expiration: datetime=None, grafana_version: str=None, id: str=None, license_expiration: datetime=None, license_type: LicenseType=None, modified: datetime=None, name: str=None, network_access_control: WorkspaceDescriptionNetworkAccessControl=None, notification_destinations: List=None, organization_role_name: str=None, organizational_units: List=None, permission_type: PermissionType=None, stack_set_name: str=None, status: WorkspaceStatus=None, tags: Dict=None, vpc_configuration: WorkspaceDescriptionVpcConfiguration=None, workspace_role_arn: str=None):
        """DeleteWorkspaceResponseWorkspace - a model defined in OpenAPI

        :param account_access_type: The account_access_type of this DeleteWorkspaceResponseWorkspace.
        :param authentication: The authentication of this DeleteWorkspaceResponseWorkspace.
        :param created: The created of this DeleteWorkspaceResponseWorkspace.
        :param data_sources: The data_sources of this DeleteWorkspaceResponseWorkspace.
        :param description: The description of this DeleteWorkspaceResponseWorkspace.
        :param endpoint: The endpoint of this DeleteWorkspaceResponseWorkspace.
        :param free_trial_consumed: The free_trial_consumed of this DeleteWorkspaceResponseWorkspace.
        :param free_trial_expiration: The free_trial_expiration of this DeleteWorkspaceResponseWorkspace.
        :param grafana_version: The grafana_version of this DeleteWorkspaceResponseWorkspace.
        :param id: The id of this DeleteWorkspaceResponseWorkspace.
        :param license_expiration: The license_expiration of this DeleteWorkspaceResponseWorkspace.
        :param license_type: The license_type of this DeleteWorkspaceResponseWorkspace.
        :param modified: The modified of this DeleteWorkspaceResponseWorkspace.
        :param name: The name of this DeleteWorkspaceResponseWorkspace.
        :param network_access_control: The network_access_control of this DeleteWorkspaceResponseWorkspace.
        :param notification_destinations: The notification_destinations of this DeleteWorkspaceResponseWorkspace.
        :param organization_role_name: The organization_role_name of this DeleteWorkspaceResponseWorkspace.
        :param organizational_units: The organizational_units of this DeleteWorkspaceResponseWorkspace.
        :param permission_type: The permission_type of this DeleteWorkspaceResponseWorkspace.
        :param stack_set_name: The stack_set_name of this DeleteWorkspaceResponseWorkspace.
        :param status: The status of this DeleteWorkspaceResponseWorkspace.
        :param tags: The tags of this DeleteWorkspaceResponseWorkspace.
        :param vpc_configuration: The vpc_configuration of this DeleteWorkspaceResponseWorkspace.
        :param workspace_role_arn: The workspace_role_arn of this DeleteWorkspaceResponseWorkspace.
        """
        self.openapi_types = {
            'account_access_type': AccountAccessType,
            'authentication': WorkspaceDescriptionAuthentication,
            'created': datetime,
            'data_sources': List,
            'description': str,
            'endpoint': str,
            'free_trial_consumed': bool,
            'free_trial_expiration': datetime,
            'grafana_version': str,
            'id': str,
            'license_expiration': datetime,
            'license_type': LicenseType,
            'modified': datetime,
            'name': str,
            'network_access_control': WorkspaceDescriptionNetworkAccessControl,
            'notification_destinations': List,
            'organization_role_name': str,
            'organizational_units': List,
            'permission_type': PermissionType,
            'stack_set_name': str,
            'status': WorkspaceStatus,
            'tags': Dict,
            'vpc_configuration': WorkspaceDescriptionVpcConfiguration,
            'workspace_role_arn': str
        }

        self.attribute_map = {
            'account_access_type': 'accountAccessType',
            'authentication': 'authentication',
            'created': 'created',
            'data_sources': 'dataSources',
            'description': 'description',
            'endpoint': 'endpoint',
            'free_trial_consumed': 'freeTrialConsumed',
            'free_trial_expiration': 'freeTrialExpiration',
            'grafana_version': 'grafanaVersion',
            'id': 'id',
            'license_expiration': 'licenseExpiration',
            'license_type': 'licenseType',
            'modified': 'modified',
            'name': 'name',
            'network_access_control': 'networkAccessControl',
            'notification_destinations': 'notificationDestinations',
            'organization_role_name': 'organizationRoleName',
            'organizational_units': 'organizationalUnits',
            'permission_type': 'permissionType',
            'stack_set_name': 'stackSetName',
            'status': 'status',
            'tags': 'tags',
            'vpc_configuration': 'vpcConfiguration',
            'workspace_role_arn': 'workspaceRoleArn'
        }

        self._account_access_type = account_access_type
        self._authentication = authentication
        self._created = created
        self._data_sources = data_sources
        self._description = description
        self._endpoint = endpoint
        self._free_trial_consumed = free_trial_consumed
        self._free_trial_expiration = free_trial_expiration
        self._grafana_version = grafana_version
        self._id = id
        self._license_expiration = license_expiration
        self._license_type = license_type
        self._modified = modified
        self._name = name
        self._network_access_control = network_access_control
        self._notification_destinations = notification_destinations
        self._organization_role_name = organization_role_name
        self._organizational_units = organizational_units
        self._permission_type = permission_type
        self._stack_set_name = stack_set_name
        self._status = status
        self._tags = tags
        self._vpc_configuration = vpc_configuration
        self._workspace_role_arn = workspace_role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteWorkspaceResponseWorkspace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteWorkspaceResponse_workspace of this DeleteWorkspaceResponseWorkspace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_access_type(self):
        """Gets the account_access_type of this DeleteWorkspaceResponseWorkspace.


        :return: The account_access_type of this DeleteWorkspaceResponseWorkspace.
        :rtype: AccountAccessType
        """
        return self._account_access_type

    @account_access_type.setter
    def account_access_type(self, account_access_type):
        """Sets the account_access_type of this DeleteWorkspaceResponseWorkspace.


        :param account_access_type: The account_access_type of this DeleteWorkspaceResponseWorkspace.
        :type account_access_type: AccountAccessType
        """

        self._account_access_type = account_access_type

    @property
    def authentication(self):
        """Gets the authentication of this DeleteWorkspaceResponseWorkspace.


        :return: The authentication of this DeleteWorkspaceResponseWorkspace.
        :rtype: WorkspaceDescriptionAuthentication
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this DeleteWorkspaceResponseWorkspace.


        :param authentication: The authentication of this DeleteWorkspaceResponseWorkspace.
        :type authentication: WorkspaceDescriptionAuthentication
        """
        if authentication is None:
            raise ValueError("Invalid value for `authentication`, must not be `None`")

        self._authentication = authentication

    @property
    def created(self):
        """Gets the created of this DeleteWorkspaceResponseWorkspace.


        :return: The created of this DeleteWorkspaceResponseWorkspace.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this DeleteWorkspaceResponseWorkspace.


        :param created: The created of this DeleteWorkspaceResponseWorkspace.
        :type created: datetime
        """
        if created is None:
            raise ValueError("Invalid value for `created`, must not be `None`")

        self._created = created

    @property
    def data_sources(self):
        """Gets the data_sources of this DeleteWorkspaceResponseWorkspace.


        :return: The data_sources of this DeleteWorkspaceResponseWorkspace.
        :rtype: List
        """
        return self._data_sources

    @data_sources.setter
    def data_sources(self, data_sources):
        """Sets the data_sources of this DeleteWorkspaceResponseWorkspace.


        :param data_sources: The data_sources of this DeleteWorkspaceResponseWorkspace.
        :type data_sources: List
        """
        if data_sources is None:
            raise ValueError("Invalid value for `data_sources`, must not be `None`")

        self._data_sources = data_sources

    @property
    def description(self):
        """Gets the description of this DeleteWorkspaceResponseWorkspace.


        :return: The description of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DeleteWorkspaceResponseWorkspace.


        :param description: The description of this DeleteWorkspaceResponseWorkspace.
        :type description: str
        """

        self._description = description

    @property
    def endpoint(self):
        """Gets the endpoint of this DeleteWorkspaceResponseWorkspace.


        :return: The endpoint of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this DeleteWorkspaceResponseWorkspace.


        :param endpoint: The endpoint of this DeleteWorkspaceResponseWorkspace.
        :type endpoint: str
        """
        if endpoint is None:
            raise ValueError("Invalid value for `endpoint`, must not be `None`")

        self._endpoint = endpoint

    @property
    def free_trial_consumed(self):
        """Gets the free_trial_consumed of this DeleteWorkspaceResponseWorkspace.


        :return: The free_trial_consumed of this DeleteWorkspaceResponseWorkspace.
        :rtype: bool
        """
        return self._free_trial_consumed

    @free_trial_consumed.setter
    def free_trial_consumed(self, free_trial_consumed):
        """Sets the free_trial_consumed of this DeleteWorkspaceResponseWorkspace.


        :param free_trial_consumed: The free_trial_consumed of this DeleteWorkspaceResponseWorkspace.
        :type free_trial_consumed: bool
        """

        self._free_trial_consumed = free_trial_consumed

    @property
    def free_trial_expiration(self):
        """Gets the free_trial_expiration of this DeleteWorkspaceResponseWorkspace.


        :return: The free_trial_expiration of this DeleteWorkspaceResponseWorkspace.
        :rtype: datetime
        """
        return self._free_trial_expiration

    @free_trial_expiration.setter
    def free_trial_expiration(self, free_trial_expiration):
        """Sets the free_trial_expiration of this DeleteWorkspaceResponseWorkspace.


        :param free_trial_expiration: The free_trial_expiration of this DeleteWorkspaceResponseWorkspace.
        :type free_trial_expiration: datetime
        """

        self._free_trial_expiration = free_trial_expiration

    @property
    def grafana_version(self):
        """Gets the grafana_version of this DeleteWorkspaceResponseWorkspace.


        :return: The grafana_version of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._grafana_version

    @grafana_version.setter
    def grafana_version(self, grafana_version):
        """Sets the grafana_version of this DeleteWorkspaceResponseWorkspace.


        :param grafana_version: The grafana_version of this DeleteWorkspaceResponseWorkspace.
        :type grafana_version: str
        """
        if grafana_version is None:
            raise ValueError("Invalid value for `grafana_version`, must not be `None`")

        self._grafana_version = grafana_version

    @property
    def id(self):
        """Gets the id of this DeleteWorkspaceResponseWorkspace.


        :return: The id of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeleteWorkspaceResponseWorkspace.


        :param id: The id of this DeleteWorkspaceResponseWorkspace.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def license_expiration(self):
        """Gets the license_expiration of this DeleteWorkspaceResponseWorkspace.


        :return: The license_expiration of this DeleteWorkspaceResponseWorkspace.
        :rtype: datetime
        """
        return self._license_expiration

    @license_expiration.setter
    def license_expiration(self, license_expiration):
        """Sets the license_expiration of this DeleteWorkspaceResponseWorkspace.


        :param license_expiration: The license_expiration of this DeleteWorkspaceResponseWorkspace.
        :type license_expiration: datetime
        """

        self._license_expiration = license_expiration

    @property
    def license_type(self):
        """Gets the license_type of this DeleteWorkspaceResponseWorkspace.


        :return: The license_type of this DeleteWorkspaceResponseWorkspace.
        :rtype: LicenseType
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this DeleteWorkspaceResponseWorkspace.


        :param license_type: The license_type of this DeleteWorkspaceResponseWorkspace.
        :type license_type: LicenseType
        """

        self._license_type = license_type

    @property
    def modified(self):
        """Gets the modified of this DeleteWorkspaceResponseWorkspace.


        :return: The modified of this DeleteWorkspaceResponseWorkspace.
        :rtype: datetime
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this DeleteWorkspaceResponseWorkspace.


        :param modified: The modified of this DeleteWorkspaceResponseWorkspace.
        :type modified: datetime
        """
        if modified is None:
            raise ValueError("Invalid value for `modified`, must not be `None`")

        self._modified = modified

    @property
    def name(self):
        """Gets the name of this DeleteWorkspaceResponseWorkspace.


        :return: The name of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeleteWorkspaceResponseWorkspace.


        :param name: The name of this DeleteWorkspaceResponseWorkspace.
        :type name: str
        """

        self._name = name

    @property
    def network_access_control(self):
        """Gets the network_access_control of this DeleteWorkspaceResponseWorkspace.


        :return: The network_access_control of this DeleteWorkspaceResponseWorkspace.
        :rtype: WorkspaceDescriptionNetworkAccessControl
        """
        return self._network_access_control

    @network_access_control.setter
    def network_access_control(self, network_access_control):
        """Sets the network_access_control of this DeleteWorkspaceResponseWorkspace.


        :param network_access_control: The network_access_control of this DeleteWorkspaceResponseWorkspace.
        :type network_access_control: WorkspaceDescriptionNetworkAccessControl
        """

        self._network_access_control = network_access_control

    @property
    def notification_destinations(self):
        """Gets the notification_destinations of this DeleteWorkspaceResponseWorkspace.


        :return: The notification_destinations of this DeleteWorkspaceResponseWorkspace.
        :rtype: List
        """
        return self._notification_destinations

    @notification_destinations.setter
    def notification_destinations(self, notification_destinations):
        """Sets the notification_destinations of this DeleteWorkspaceResponseWorkspace.


        :param notification_destinations: The notification_destinations of this DeleteWorkspaceResponseWorkspace.
        :type notification_destinations: List
        """

        self._notification_destinations = notification_destinations

    @property
    def organization_role_name(self):
        """Gets the organization_role_name of this DeleteWorkspaceResponseWorkspace.


        :return: The organization_role_name of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._organization_role_name

    @organization_role_name.setter
    def organization_role_name(self, organization_role_name):
        """Sets the organization_role_name of this DeleteWorkspaceResponseWorkspace.


        :param organization_role_name: The organization_role_name of this DeleteWorkspaceResponseWorkspace.
        :type organization_role_name: str
        """

        self._organization_role_name = organization_role_name

    @property
    def organizational_units(self):
        """Gets the organizational_units of this DeleteWorkspaceResponseWorkspace.


        :return: The organizational_units of this DeleteWorkspaceResponseWorkspace.
        :rtype: List
        """
        return self._organizational_units

    @organizational_units.setter
    def organizational_units(self, organizational_units):
        """Sets the organizational_units of this DeleteWorkspaceResponseWorkspace.


        :param organizational_units: The organizational_units of this DeleteWorkspaceResponseWorkspace.
        :type organizational_units: List
        """

        self._organizational_units = organizational_units

    @property
    def permission_type(self):
        """Gets the permission_type of this DeleteWorkspaceResponseWorkspace.


        :return: The permission_type of this DeleteWorkspaceResponseWorkspace.
        :rtype: PermissionType
        """
        return self._permission_type

    @permission_type.setter
    def permission_type(self, permission_type):
        """Sets the permission_type of this DeleteWorkspaceResponseWorkspace.


        :param permission_type: The permission_type of this DeleteWorkspaceResponseWorkspace.
        :type permission_type: PermissionType
        """

        self._permission_type = permission_type

    @property
    def stack_set_name(self):
        """Gets the stack_set_name of this DeleteWorkspaceResponseWorkspace.


        :return: The stack_set_name of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._stack_set_name

    @stack_set_name.setter
    def stack_set_name(self, stack_set_name):
        """Sets the stack_set_name of this DeleteWorkspaceResponseWorkspace.


        :param stack_set_name: The stack_set_name of this DeleteWorkspaceResponseWorkspace.
        :type stack_set_name: str
        """

        self._stack_set_name = stack_set_name

    @property
    def status(self):
        """Gets the status of this DeleteWorkspaceResponseWorkspace.


        :return: The status of this DeleteWorkspaceResponseWorkspace.
        :rtype: WorkspaceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeleteWorkspaceResponseWorkspace.


        :param status: The status of this DeleteWorkspaceResponseWorkspace.
        :type status: WorkspaceStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def tags(self):
        """Gets the tags of this DeleteWorkspaceResponseWorkspace.


        :return: The tags of this DeleteWorkspaceResponseWorkspace.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeleteWorkspaceResponseWorkspace.


        :param tags: The tags of this DeleteWorkspaceResponseWorkspace.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def vpc_configuration(self):
        """Gets the vpc_configuration of this DeleteWorkspaceResponseWorkspace.


        :return: The vpc_configuration of this DeleteWorkspaceResponseWorkspace.
        :rtype: WorkspaceDescriptionVpcConfiguration
        """
        return self._vpc_configuration

    @vpc_configuration.setter
    def vpc_configuration(self, vpc_configuration):
        """Sets the vpc_configuration of this DeleteWorkspaceResponseWorkspace.


        :param vpc_configuration: The vpc_configuration of this DeleteWorkspaceResponseWorkspace.
        :type vpc_configuration: WorkspaceDescriptionVpcConfiguration
        """

        self._vpc_configuration = vpc_configuration

    @property
    def workspace_role_arn(self):
        """Gets the workspace_role_arn of this DeleteWorkspaceResponseWorkspace.


        :return: The workspace_role_arn of this DeleteWorkspaceResponseWorkspace.
        :rtype: str
        """
        return self._workspace_role_arn

    @workspace_role_arn.setter
    def workspace_role_arn(self, workspace_role_arn):
        """Sets the workspace_role_arn of this DeleteWorkspaceResponseWorkspace.


        :param workspace_role_arn: The workspace_role_arn of this DeleteWorkspaceResponseWorkspace.
        :type workspace_role_arn: str
        """

        self._workspace_role_arn = workspace_role_arn
