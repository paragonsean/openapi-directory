openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon Managed Grafana is a fully managed and secure data visualization\
    \ service that you can use to instantly query, correlate, and visualize operational\
    \ metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes\
    \ it easy to deploy, operate, and scale Grafana, a widely deployed data visualization\
    \ tool that is popular for its extensible data support.</p> <p>With Amazon Managed\
    \ Grafana, you create logically isolated Grafana servers called <i>workspaces</i>.\
    \ In a workspace, you can create Grafana dashboards and visualizations to analyze\
    \ your metrics, logs, and traces without having to build, package, or deploy any\
    \ hardware to run Grafana servers. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Managed Grafana
  version: 2020-08-18
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: grafana
  x-aws-signingName: grafana
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/grafana-2020-08-18.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/grafana/
servers:
- description: The Amazon Managed Grafana multi-region endpoint
  url: "http://grafana.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Managed Grafana multi-region endpoint
  url: "https://grafana.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Managed Grafana endpoint for China (Beijing) and China (Ningxia)
  url: "http://grafana.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Managed Grafana endpoint for China (Beijing) and China (Ningxia)
  url: "https://grafana.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /tags/{resourceArn}:
    get:
      description: "The <code>ListTagsForResource</code> operation returns the tags\
        \ that are associated with the Amazon Managed Service for Grafana resource\
        \ specified by the <code>resourceArn</code>. Currently, the only resource\
        \ that can be tagged is a workspace. "
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource the list of tags are associated with.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>The <code>TagResource</code> operation associates tags with\
        \ an Amazon Managed Grafana resource. Currently, the only resource that can\
        \ be tagged is workspaces. </p> <p>If you specify a new tag key for the resource,\
        \ this tag is appended to the list of tags associated with the resource. If\
        \ you specify a tag key that is already associated with the resource, the\
        \ new tag value that you specify replaces the previous value for that tag.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource the tag is associated with.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: 'The <code>UntagResource</code> operation removes the association
        of the tag with the Amazon Managed Grafana resource. '
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ARN of the resource the tag association is removed from. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: The key values of the tag to be removed from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /versions:
    get:
      description: "Lists available versions of Grafana. These are available when\
        \ calling <code>CreateWorkspace</code>. Optionally, include a workspace to\
        \ list the versions to which it can be upgraded."
      operationId: list_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          receive this token from a previous <code>ListVersions</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The ID of the workspace to list the available upgrade versions.\
          \ If not included, lists all versions of Grafana that are supported for\
          \ <code>CreateWorkspace</code>."
        explode: true
        in: query
        name: workspace-id
        required: false
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /workspaces:
    get:
      description: "Returns a list of Amazon Managed Grafana workspaces in the account,\
        \ with some information about each workspace. For more complete information\
        \ about one workspace, use <a href=\"https://docs.aws.amazon.com/AAMG/latest/APIReference/API_DescribeWorkspace.html\"\
        >DescribeWorkspace</a>."
      operationId: list_workspaces
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of workspaces to include in the results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of workspaces to return. (You receive
          this token from a previous <code>ListWorkspaces</code> operation.)
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a <i>workspace</i>. In a workspace, you can create\
        \ Grafana dashboards and visualizations to analyze your metrics, logs, and\
        \ traces. You don't have to build, package, or deploy any hardware to run\
        \ the Grafana server.</p> <p>Don't use <code>CreateWorkspace</code> to modify\
        \ an existing workspace. Instead, use <a href=\"https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateWorkspace.html\"\
        >UpdateWorkspace</a>.</p>"
      operationId: create_workspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspace_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /workspaces/{workspaceId}:
    delete:
      description: Deletes an Amazon Managed Grafana workspace.
      operationId: delete_workspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to delete.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Displays information about one Amazon Managed Grafana workspace.
      operationId: describe_workspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to display information about.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Modifies an existing Amazon Managed Grafana workspace. If you\
        \ use this operation and omit any optional parameters, the existing values\
        \ of those parameters are not changed.</p> <p>To modify the user authentication\
        \ methods that the workspace uses, such as SAML or IAM Identity Center, use\
        \ <a href=\"https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateWorkspaceAuthentication.html\"\
        >UpdateWorkspaceAuthentication</a>.</p> <p>To modify which users in the workspace\
        \ have the <code>Admin</code> and <code>Editor</code> Grafana roles, use <a\
        \ href=\"https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdatePermissions.html\"\
        >UpdatePermissions</a>.</p>"
      operationId: update_workspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to update.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspace_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /workspaces/{workspaceId}/apikeys:
    post:
      description: Creates a Grafana API key for the workspace. This key can be used
        to authenticate requests sent to the workspace's HTTP API. See <a href="https://docs.aws.amazon.com/grafana/latest/userguide/Using-Grafana-APIs.html">https://docs.aws.amazon.com/grafana/latest/userguide/Using-Grafana-APIs.html</a>
        for available APIs and example requests.
      operationId: create_workspace_api_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to create an API key.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceApiKey_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceApiKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /workspaces/{workspaceId}/apikeys/{keyName}:
    delete:
      description: Deletes a Grafana API key for the workspace.
      operationId: delete_workspace_api_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the API key to delete.
        explode: false
        in: path
        name: keyName
        required: true
        schema:
          maxLength: 100
          minLength: 1
          type: string
        style: simple
      - description: The ID of the workspace to delete.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspaceApiKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /workspaces/{workspaceId}/authentication:
    get:
      description: Displays information about the authentication methods used in one
        Amazon Managed Grafana workspace.
      operationId: describe_workspace_authentication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to return authentication information
          about.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceAuthenticationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Use this operation to define the identity provider (IdP) that\
        \ this workspace authenticates users from, using SAML. You can also map SAML\
        \ assertion attributes to workspace user information and define which groups\
        \ in the assertion attribute are to have the <code>Admin</code> and <code>Editor</code>\
        \ roles in the workspace.</p> <note> <p>Changes to the authentication method\
        \ for a workspace may take a few minutes to take effect.</p> </note>"
      operationId: update_workspace_authentication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to update the authentication for.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceAuthenticationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /workspaces/{workspaceId}/configuration:
    get:
      description: Gets the current configuration string for the given workspace.
      operationId: describe_workspace_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to get configuration information for.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the configuration string for the given workspace
      operationId: update_workspace_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to update.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /workspaces/{workspaceId}/licenses/{licenseType}:
    delete:
      description: Removes the Grafana Enterprise license from a workspace.
      operationId: disassociate_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The type of license to remove from the workspace.
        explode: false
        in: path
        name: licenseType
        required: true
        schema:
          enum:
          - ENTERPRISE
          - ENTERPRISE_FREE_TRIAL
          type: string
        style: simple
      - description: The ID of the workspace to remove the Grafana Enterprise license
          from.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Assigns a Grafana Enterprise license to a workspace. Upgrading\
        \ to Grafana Enterprise incurs additional fees. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/upgrade-to-Grafana-Enterprise.html\"\
        >Upgrade a workspace to Grafana Enterprise</a>."
      operationId: associate_license
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The type of license to associate with the workspace.
        explode: false
        in: path
        name: licenseType
        required: true
        schema:
          enum:
          - ENTERPRISE
          - ENTERPRISE_FREE_TRIAL
          type: string
        style: simple
      - description: The ID of the workspace to associate the license with.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateLicenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /workspaces/{workspaceId}/permissions:
    get:
      description: "Lists the users and groups who have the Grafana <code>Admin</code>\
        \ and <code>Editor</code> roles in this workspace. If you use this operation\
        \ without specifying <code>userId</code> or <code>groupId</code>, the operation\
        \ returns the roles of all users and groups. If you specify a <code>userId</code>\
        \ or a <code>groupId</code>, only the roles for that user or group are returned.\
        \ If you do this, you can specify only one <code>userId</code> or one <code>groupId</code>."
      operationId: list_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: (Optional) Limits the results to only the group that matches
          this ID.
        explode: true
        in: query
        name: groupId
        required: false
        schema:
          maxLength: 47
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListPermissions</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: (Optional) Limits the results to only the user that matches this
          ID.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          maxLength: 47
          minLength: 1
          type: string
        style: form
      - description: "(Optional) If you specify <code>SSO_USER</code>, then only the\
          \ permissions of IAM Identity Center users are returned. If you specify\
          \ <code>SSO_GROUP</code>, only the permissions of IAM Identity Center groups\
          \ are returned."
        explode: true
        in: query
        name: userType
        required: false
        schema:
          enum:
          - SSO_USER
          - SSO_GROUP
          type: string
        style: form
      - description: The ID of the workspace to list permissions for. This parameter
          is required.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates which users in a workspace have the Grafana <code>Admin</code>
        or <code>Editor</code> roles.
      operationId: update_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the workspace to update.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          pattern: "^g-[0-9a-f]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateLicenseResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/AssociateLicenseResponse_workspace'
      required:
      - workspace
      title: AssociateLicenseResponse
      type: object
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    CreateWorkspaceResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/CreateWorkspaceResponse_workspace'
      required:
      - workspace
      title: CreateWorkspaceResponse
      type: object
    AuthenticationProviderTypes:
      enum:
      - AWS_SSO
      - SAML
      title: AuthenticationProviderTypes
      type: string
    PrefixListIds:
      items:
        $ref: '#/components/schemas/PrefixListId'
      type: array
    VpceIds:
      items:
        $ref: '#/components/schemas/VpceId'
      type: array
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 100
      minItems: 1
      type: array
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 100
      minItems: 1
      type: array
    DataSourceType:
      enum:
      - AMAZON_OPENSEARCH_SERVICE
      - CLOUDWATCH
      - PROMETHEUS
      - XRAY
      - TIMESTREAM
      - SITEWISE
      - ATHENA
      - REDSHIFT
      - TWINMAKER
      title: DataSourceType
      type: string
    NotificationDestinationType:
      enum:
      - SNS
      title: NotificationDestinationType
      type: string
    OrganizationalUnit:
      title: OrganizationalUnit
      type: string
    ConflictException: {}
    ServiceQuotaExceededException: {}
    CreateWorkspaceApiKeyResponse:
      example:
        keyName: ""
        key: ""
        workspaceId: ""
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/ApiKeyToken'
          - description: The key token. Use this value as a bearer token to authenticate
              HTTP requests to the workspace.
          title: key
        keyName:
          allOf:
          - $ref: '#/components/schemas/ApiKeyName'
          - description: The name of the key that was created.
          title: keyName
        workspaceId:
          allOf:
          - $ref: '#/components/schemas/WorkspaceId'
          - description: The ID of the workspace that the key is valid for.
          title: workspaceId
      required:
      - key
      - keyName
      - workspaceId
      title: CreateWorkspaceApiKeyResponse
      type: object
    DeleteWorkspaceResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/DeleteWorkspaceResponse_workspace'
      required:
      - workspace
      title: DeleteWorkspaceResponse
      type: object
    DeleteWorkspaceApiKeyResponse:
      example:
        keyName: ""
        workspaceId: ""
      properties:
        keyName:
          allOf:
          - $ref: '#/components/schemas/ApiKeyName'
          - description: The name of the key that was deleted.
          title: keyName
        workspaceId:
          allOf:
          - $ref: '#/components/schemas/WorkspaceId'
          - description: The ID of the workspace where the key was deleted.
          title: workspaceId
      required:
      - keyName
      - workspaceId
      title: DeleteWorkspaceApiKeyResponse
      type: object
    DescribeWorkspaceResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/DescribeWorkspaceResponse_workspace'
      required:
      - workspace
      title: DescribeWorkspaceResponse
      type: object
    DescribeWorkspaceAuthenticationResponse:
      example:
        authentication:
          saml:
            configuration:
              idpMetadata:
                xml: ""
                url: ""
              allowedOrganizations: ""
              roleValues:
                editor: ""
                admin: ""
              assertionAttributes:
                role: ""
                org: ""
                name: ""
                groups: ""
                login: ""
                email: ""
              loginValidityDuration: ""
            status: ""
          awsSso:
            ssoClientId: ""
          providers: ""
      properties:
        authentication:
          $ref: '#/components/schemas/DescribeWorkspaceAuthenticationResponse_authentication'
      required:
      - authentication
      title: DescribeWorkspaceAuthenticationResponse
      type: object
    DescribeWorkspaceConfigurationResponse:
      example:
        configuration: ""
        grafanaVersion: ""
      properties:
        configuration:
          allOf:
          - $ref: '#/components/schemas/OverridableConfigurationJson'
          - description: "The configuration string for the workspace that you requested.\
              \ For more information about the format and configuration options available,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\"\
              >Working in your Grafana workspace</a>."
          title: configuration
        grafanaVersion:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersion'
          - description: The supported Grafana version for the workspace.
          title: grafanaVersion
      required:
      - configuration
      title: DescribeWorkspaceConfigurationResponse
      type: object
    DisassociateLicenseResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/DescribeWorkspaceResponse_workspace'
      required:
      - workspace
      title: DisassociateLicenseResponse
      type: object
    ListPermissionsResponse:
      example:
        nextToken: ""
        permissions: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use in a subsequent <code>ListPermissions</code>
              operation to return the next set of results.
          title: nextToken
        permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionEntryList'
          - description: The permissions returned by the operation.
          title: permissions
      required:
      - permissions
      title: ListPermissionsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags that are associated with the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListVersionsResponse:
      example:
        nextToken: ""
        grafanaVersions: ""
      properties:
        grafanaVersions:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersionList'
          - description: "The Grafana versions available to create. If a workspace\
              \ ID is included in the request, the Grafana versions to which this\
              \ workspace can be upgraded."
          title: grafanaVersions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use in a subsequent <code>ListVersions</code>
              operation to return the next set of results.
          title: nextToken
      title: ListVersionsResponse
      type: object
    ListWorkspacesResponse:
      example:
        nextToken: ""
        workspaces: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use when requesting the next set of workspaces.
          title: nextToken
        workspaces:
          allOf:
          - $ref: '#/components/schemas/WorkspaceList'
          - description: An array of structures that contain some information about
              the workspaces in the account.
          title: workspaces
      required:
      - workspaces
      title: ListWorkspacesResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdatePermissionsResponse:
      example:
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/UpdateErrorList'
          - description: "An array of structures that contain the errors from the\
              \ operation, if any."
          title: errors
      required:
      - errors
      title: UpdatePermissionsResponse
      type: object
    UpdateInstruction:
      description: Contains the instructions for one Grafana role permission update
        in a <a href="https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdatePermissions.html">UpdatePermissions</a>
        operation.
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/UpdateAction'
          - description: Specifies whether this update is to add or revoke role permissions.
          title: action
        role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The role to add or revoke for the user or the group specified
              in <code>users</code>.
          title: role
        users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          - description: A structure that specifies the user or group to add or revoke
              the role for.
          title: users
      required:
      - action
      - role
      - users
      title: UpdateInstruction
      type: object
    UpdateWorkspaceResponse:
      example:
        workspace:
          permissionType: ""
          freeTrialConsumed: ""
          freeTrialExpiration: ""
          licenseExpiration: ""
          created: ""
          accountAccessType: ""
          description: ""
          organizationRoleName: ""
          grafanaVersion: ""
          workspaceRoleArn: ""
          tags: ""
          licenseType: ""
          endpoint: ""
          notificationDestinations: ""
          name: ""
          stackSetName: ""
          modified: ""
          networkAccessControl:
            prefixListIds: ""
            vpceIds: ""
          organizationalUnits: ""
          id: ""
          dataSources: ""
          authentication:
            samlConfigurationStatus: ""
            providers: ""
          status: ""
          vpcConfiguration:
            securityGroupIds: ""
            subnetIds: ""
      properties:
        workspace:
          $ref: '#/components/schemas/CreateWorkspaceResponse_workspace'
      required:
      - workspace
      title: UpdateWorkspaceResponse
      type: object
    UpdateWorkspaceAuthenticationResponse:
      example:
        authentication:
          saml:
            configuration:
              idpMetadata:
                xml: ""
                url: ""
              allowedOrganizations: ""
              roleValues:
                editor: ""
                admin: ""
              assertionAttributes:
                role: ""
                org: ""
                name: ""
                groups: ""
                login: ""
                email: ""
              loginValidityDuration: ""
            status: ""
          awsSso:
            ssoClientId: ""
          providers: ""
      properties:
        authentication:
          $ref: '#/components/schemas/UpdateWorkspaceAuthenticationResponse_authentication'
      required:
      - authentication
      title: UpdateWorkspaceAuthenticationResponse
      type: object
    AllowedOrganizations:
      items:
        $ref: '#/components/schemas/AllowedOrganization'
      type: array
    AssertionAttributes:
      description: A structure that defines which attributes in the IdP assertion
        are to be used to define information about the users authenticated by the
        IdP to use the workspace.
      properties:
        email:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the email names for SAML users.
          title: email
        groups:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the user full "friendly" names for user groups.
          title: groups
        login:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the login names for SAML users.
          title: login
        name:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the user full "friendly" names for SAML users.
          title: name
        org:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the user full "friendly" names for the users' organizations.
          title: org
        role:
          allOf:
          - $ref: '#/components/schemas/AssertionAttribute'
          - description: The name of the attribute within the SAML assertion to use
              as the user roles.
          title: role
      title: AssertionAttributes
      type: object
    IdpMetadata:
      description: "A structure containing the identity provider (IdP) metadata used\
        \ to integrate the identity provider with this workspace. You can specify\
        \ the metadata either by providing a URL to its location in the <code>url</code>\
        \ parameter, or by specifying the full metadata in XML format in the <code>xml</code>\
        \ parameter. Specifying both will cause an error."
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/IdpMetadataUrl'
          - description: The URL of the location containing the IdP metadata.
          title: url
        xml:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The full IdP metadata, in XML format."
          title: xml
      title: IdpMetadata
      type: object
    LoginValidityDuration:
      type: integer
    RoleValues:
      description: This structure defines which groups defined in the SAML assertion
        attribute are to be mapped to the Grafana <code>Admin</code> and <code>Editor</code>
        roles in the workspace. SAML authenticated users not part of <code>Admin</code>
        or <code>Editor</code> role groups have <code>Viewer</code> permission over
        the workspace.
      properties:
        admin:
          allOf:
          - $ref: '#/components/schemas/RoleValueList'
          - description: A list of groups from the SAML assertion attribute to grant
              the Grafana <code>Admin</code> role to.
          title: admin
        editor:
          allOf:
          - $ref: '#/components/schemas/RoleValueList'
          - description: A list of groups from the SAML assertion attribute to grant
              the Grafana <code>Editor</code> role to.
          title: editor
      title: RoleValues
      type: object
    UpdateWorkspaceConfigurationResponse:
      properties: {}
      type: object
    AccountAccessType:
      enum:
      - CURRENT_ACCOUNT
      - ORGANIZATION
      title: AccountAccessType
      type: string
    AllowedOrganization:
      maxLength: 256
      minLength: 1
      title: AllowedOrganization
      type: string
    ApiKeyName:
      maxLength: 100
      minLength: 1
      type: string
    ApiKeyToken:
      format: password
      type: string
    AssertionAttribute:
      maxLength: 256
      minLength: 1
      type: string
    LicenseType:
      enum:
      - ENTERPRISE
      - ENTERPRISE_FREE_TRIAL
      title: LicenseType
      type: string
    WorkspaceId:
      pattern: "^g-[0-9a-f]{10}$"
      type: string
    AssociateLicenseRequest:
      properties: {}
      title: AssociateLicenseRequest
      type: object
    WorkspaceDescription:
      description: A structure containing information about an Amazon Managed Grafana
        workspace in your account.
      properties:
        accountAccessType:
          allOf:
          - $ref: '#/components/schemas/AccountAccessType'
          - description: "Specifies whether the workspace can access Amazon Web Services\
              \ resources in this Amazon Web Services account only, or whether it\
              \ can also access Amazon Web Services resources in other accounts in\
              \ the same organization. If this is <code>ORGANIZATION</code>, the <code>workspaceOrganizationalUnits</code>\
              \ parameter specifies which organizational units the workspace can access."
          title: accountAccessType
        authentication:
          $ref: '#/components/schemas/WorkspaceDescription_authentication'
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date that the workspace was created.
          title: created
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceTypesList'
          - description: "<p>Specifies the Amazon Web Services data sources that have\
              \ been configured to have IAM roles and permissions created to allow\
              \ Amazon Managed Grafana to read data from these sources.</p> <p>This\
              \ list is only used when the workspace was created through the Amazon\
              \ Web Services console, and the <code>permissionType</code> is <code>SERVICE_MANAGED</code>.</p>"
          title: dataSources
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The user-defined description of the workspace.
          title: description
        endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          - description: The URL that users can use to access the Grafana console
              in the workspace.
          title: endpoint
        freeTrialConsumed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether this workspace has already fully used its
              free trial for Grafana Enterprise.
          title: freeTrialConsumed
        freeTrialExpiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "If this workspace is currently in the free trial period\
              \ for Grafana Enterprise, this value specifies when that free trial\
              \ ends."
          title: freeTrialExpiration
        grafanaVersion:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersion'
          - description: The version of Grafana supported in this workspace.
          title: grafanaVersion
        id:
          allOf:
          - $ref: '#/components/schemas/WorkspaceId'
          - description: The unique ID of this workspace.
          title: id
        licenseExpiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "If this workspace has a full Grafana Enterprise license,\
              \ this specifies when the license ends and will need to be renewed."
          title: licenseExpiration
        licenseType:
          allOf:
          - $ref: '#/components/schemas/LicenseType'
          - description: Specifies whether this workspace has a full Grafana Enterprise
              license or a free trial license.
          title: licenseType
        modified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The most recent date that the workspace was modified.
          title: modified
        name:
          allOf:
          - $ref: '#/components/schemas/WorkspaceName'
          - description: The name of the workspace.
          title: name
        networkAccessControl:
          $ref: '#/components/schemas/WorkspaceDescription_networkAccessControl'
        notificationDestinations:
          allOf:
          - $ref: '#/components/schemas/NotificationDestinationsList'
          - description: "The Amazon Web Services notification channels that Amazon\
              \ Managed Grafana can automatically create IAM roles and permissions\
              \ for, to allow Amazon Managed Grafana to use these channels."
          title: notificationDestinations
        organizationRoleName:
          allOf:
          - $ref: '#/components/schemas/OrganizationRoleName'
          - description: The name of the IAM role that is used to access resources
              through Organizations.
          title: organizationRoleName
        organizationalUnits:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitList'
          - description: "Specifies the organizational units that this workspace is\
              \ allowed to use data sources from, if this workspace is in an account\
              \ that is part of an organization."
          title: organizationalUnits
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionType'
          - description: "<p>If this is <code>SERVICE_MANAGED</code>, and the workplace\
              \ was created through the Amazon Managed Grafana console, then Amazon\
              \ Managed Grafana automatically creates the IAM roles and provisions\
              \ the permissions that the workspace needs to use Amazon Web Services\
              \ data sources and notification channels.</p> <p>If this is <code>CUSTOMER_MANAGED</code>,\
              \ you must manage those roles and permissions yourself.</p> <p>If you\
              \ are working with a workspace in a member account of an organization\
              \ and that account is not a delegated administrator account, and you\
              \ want the workspace to access data sources in other Amazon Web Services\
              \ accounts in the organization, this parameter must be set to <code>CUSTOMER_MANAGED</code>.</p>\
              \ <p>For more information about converting between customer and service\
              \ managed, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html\"\
              >Managing permissions for data sources and notification channels</a>.\
              \ For more information about the roles and permissions that must be\
              \ managed for customer managed workspaces, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\"\
              >Amazon Managed Grafana permissions and policies for Amazon Web Services\
              \ data sources and notification channels</a> </p>"
          title: permissionType
        stackSetName:
          allOf:
          - $ref: '#/components/schemas/StackSetName'
          - description: The name of the CloudFormation stack set that is used to
              generate IAM roles to be used for this workspace.
          title: stackSetName
        status:
          allOf:
          - $ref: '#/components/schemas/WorkspaceStatus'
          - description: The current status of the workspace.
          title: status
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags associated with the workspace.
          title: tags
        vpcConfiguration:
          $ref: '#/components/schemas/WorkspaceDescription_vpcConfiguration'
        workspaceRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The IAM role that grants permissions to the Amazon Web Services
              resources that the workspace will view data from. This role must already
              exist.
          title: workspaceRoleArn
      required:
      - authentication
      - created
      - dataSources
      - endpoint
      - grafanaVersion
      - id
      - modified
      - status
      title: WorkspaceDescription
      type: object
    AwsSsoAuthentication:
      description: 'A structure containing information about how this workspace works
        with IAM Identity Center. '
      properties:
        ssoClientId:
          allOf:
          - $ref: '#/components/schemas/SSOClientId'
          - description: The ID of the IAM Identity Center-managed application that
              is created by Amazon Managed Grafana.
          title: ssoClientId
      title: AwsSsoAuthentication
      type: object
    AuthenticationProviders:
      items:
        $ref: '#/components/schemas/AuthenticationProviderTypes'
      type: array
    SamlAuthentication:
      description: 'A structure containing information about how this workspace works
        with SAML. '
      properties:
        configuration:
          $ref: '#/components/schemas/SamlAuthentication_configuration'
        status:
          allOf:
          - $ref: '#/components/schemas/SamlConfigurationStatus'
          - description: Specifies whether the workspace's SAML configuration is complete.
          title: status
      required:
      - status
      title: SamlAuthentication
      type: object
    AuthenticationDescription:
      description: A structure containing information about the user authentication
        methods used by the workspace.
      properties:
        awsSso:
          $ref: '#/components/schemas/AuthenticationDescription_awsSso'
        providers:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProviders'
          - description: "Specifies whether this workspace uses IAM Identity Center,\
              \ SAML, or both methods to authenticate users to use the Grafana console\
              \ in the Amazon Managed Grafana workspace."
          title: providers
        saml:
          $ref: '#/components/schemas/AuthenticationDescription_saml'
      required:
      - providers
      title: AuthenticationDescription
      type: object
    SamlConfigurationStatus:
      enum:
      - CONFIGURED
      - NOT_CONFIGURED
      title: SamlConfigurationStatus
      type: string
    AuthenticationSummary:
      description: "A structure that describes whether the workspace uses SAML, IAM\
        \ Identity Center, or both methods for user authentication, and whether that\
        \ authentication is fully configured."
      properties:
        providers:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProviders'
          - description: "Specifies whether the workspace uses SAML, IAM Identity\
              \ Center, or both methods for user authentication."
          title: providers
        samlConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/SamlConfigurationStatus'
          - description: Specifies whether the workplace's user authentication method
              is fully configured.
          title: samlConfigurationStatus
      required:
      - providers
      title: AuthenticationSummary
      type: object
    SSOClientId:
      type: string
    Boolean:
      type: boolean
    ClientToken:
      pattern: "^[!-~]{1,64}$"
      type: string
    String:
      type: string
    CreateWorkspaceApiKeyRequestSecondsToLiveInteger:
      maximum: 2592000
      minimum: 1
      type: integer
    CreateWorkspaceApiKeyRequest:
      example:
        keyRole: ""
        keyName: ""
        secondsToLive: ""
      properties:
        keyName:
          allOf:
          - $ref: '#/components/schemas/ApiKeyName'
          - description: Specifies the name of the key. Keynames must be unique to
              the workspace.
        keyRole:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the permission level of the key.</p> <p> Valid\
              \ values: <code>VIEWER</code>|<code>EDITOR</code>|<code>ADMIN</code>\
              \ </p>"
        secondsToLive:
          allOf:
          - $ref: '#/components/schemas/CreateWorkspaceApiKeyRequestSecondsToLiveInteger'
          - description: Specifies the time in seconds until the key expires. Keys
              can be valid for up to 30 days.
      required:
      - keyName
      - keyRole
      - secondsToLive
      title: CreateWorkspaceApiKeyRequest
      type: object
    OverridableConfigurationJson:
      maxLength: 65536
      minLength: 2
      type: string
    GrafanaVersion:
      maxLength: 255
      minLength: 1
      title: GrafanaVersion
      type: string
    NetworkAccessConfiguration:
      description: "<p>The configuration settings for in-bound network access to your\
        \ workspace.</p> <p>When this is configured, only listed IP addresses and\
        \ VPC endpoints will be able to access your workspace. Standard Grafana authentication\
        \ and authorization are still required.</p> <p>Access is granted to a caller\
        \ that is in either the IP address list or the VPC endpoint list - they do\
        \ not need to be in both.</p> <p>If this is not configured, or is removed,\
        \ then all IP addresses and VPC endpoints are allowed. Standard Grafana authentication\
        \ and authorization are still required.</p> <note> <p>While both <code>prefixListIds</code>\
        \ and <code>vpceIds</code> are required, you can pass in an empty array of\
        \ strings for either parameter if you do not want to allow any of that type.</p>\
        \ <p>If both are passed as empty arrays, no traffic is allowed to the workspace,\
        \ because only <i>explicitly</i> allowed connections are accepted.</p> </note>"
      properties:
        prefixListIds:
          allOf:
          - $ref: '#/components/schemas/PrefixListIds'
          - description: "<p>An array of prefix list IDs. A prefix list is a list\
              \ of CIDR ranges of IP addresses. The IP addresses specified are allowed\
              \ to access your workspace. If the list is not included in the configuration\
              \ (passed an empty array) then no IP addresses are allowed to access\
              \ the workspace. You create a prefix list using the Amazon VPC console.</p>\
              \ <p>Prefix list IDs have the format <code>pl-<i>1a2b3c4d</i> </code>.</p>\
              \ <p>For more information about prefix lists, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html\"\
              >Group CIDR blocks using managed prefix lists</a>in the <i>Amazon Virtual\
              \ Private Cloud User Guide</i>.</p>"
          title: prefixListIds
        vpceIds:
          allOf:
          - $ref: '#/components/schemas/VpceIds'
          - description: "<p>An array of Amazon VPC endpoint IDs for the workspace.\
              \ You can create VPC endpoints to your Amazon Managed Grafana workspace\
              \ for access from within a VPC. If a <code>NetworkAccessConfiguration</code>\
              \ is specified then only VPC endpoints specified here are allowed to\
              \ access the workspace. If you pass in an empty array of strings, then\
              \ no VPCs are allowed to access the workspace.</p> <p>VPC endpoint IDs\
              \ have the format <code>vpce-<i>1a2b3c4d</i> </code>.</p> <p>For more\
              \ information about creating an interface VPC endpoint, see <a href=\"\
              https://docs.aws.amazon.com/grafana/latest/userguide/VPC-endpoints\"\
              >Interface VPC endpoints</a> in the <i>Amazon Managed Grafana User Guide</i>.</p>\
              \ <note> <p>The only VPC endpoints that can be specified here are interface\
              \ VPC endpoints for Grafana workspaces (using the <code>com.amazonaws.[region].grafana-workspace</code>\
              \ service endpoint). Other VPC endpoints are ignored.</p> </note>"
          title: vpceIds
      required:
      - prefixListIds
      - vpceIds
      title: NetworkAccessConfiguration
      type: object
    OrganizationRoleName:
      format: password
      maxLength: 2048
      minLength: 1
      type: string
    PermissionType:
      enum:
      - CUSTOMER_MANAGED
      - SERVICE_MANAGED
      title: PermissionType
      type: string
    StackSetName:
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    VpcConfiguration:
      description: <p>The configuration settings for an Amazon VPC that contains data
        sources for your Grafana workspace to connect to.</p> <note> <p>Provided <code>securityGroupIds</code>
        and <code>subnetIds</code> must be part of the same VPC.</p> <p>Connecting
        to a private VPC is not yet available in the Asia Pacific (Seoul) Region (ap-northeast-2).</p>
        </note>
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The list of Amazon EC2 security group IDs attached to the
              Amazon VPC for your Grafana workspace to connect. Duplicates not allowed.
          title: securityGroupIds
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The list of Amazon EC2 subnet IDs created in the Amazon VPC
              for your Grafana workspace to connect. Duplicates not allowed.
          title: subnetIds
      required:
      - securityGroupIds
      - subnetIds
      title: VpcConfiguration
      type: object
    DataSourceTypesList:
      items:
        $ref: '#/components/schemas/DataSourceType'
      type: array
    Description:
      format: password
      maxLength: 2048
      minLength: 0
      type: string
    WorkspaceName:
      format: password
      pattern: "^[a-zA-Z0-9-._~]{1,255}$"
      type: string
    NotificationDestinationsList:
      items:
        $ref: '#/components/schemas/NotificationDestinationType'
      type: array
    OrganizationalUnitList:
      items:
        $ref: '#/components/schemas/OrganizationalUnit'
      type: array
    IamRoleArn:
      format: password
      maxLength: 2048
      minLength: 1
      type: string
    CreateWorkspaceRequest:
      example:
        permissionType: ""
        workspaceNotificationDestinations: ""
        configuration: ""
        workspaceOrganizationalUnits: ""
        clientToken: ""
        workspaceDescription: ""
        workspaceDataSources: ""
        accountAccessType: ""
        organizationRoleName: ""
        grafanaVersion: ""
        workspaceRoleArn: ""
        tags: ""
        authenticationProviders: ""
        stackSetName: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        workspaceName: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      properties:
        accountAccessType:
          allOf:
          - $ref: '#/components/schemas/AccountAccessType'
          - description: "Specifies whether the workspace can access Amazon Web Services\
              \ resources in this Amazon Web Services account only, or whether it\
              \ can also access Amazon Web Services resources in other accounts in\
              \ the same organization. If you specify <code>ORGANIZATION</code>, you\
              \ must specify which organizational units the workspace can access in\
              \ the <code>workspaceOrganizationalUnits</code> parameter."
        authenticationProviders:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProviders'
          - description: "Specifies whether this workspace uses SAML 2.0, IAM Identity\
              \ Center (successor to Single Sign-On), or both to authenticate users\
              \ for using the Grafana console within a workspace. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/authentication-in-AMG.html\"\
              >User authentication in Amazon Managed Grafana</a>."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive, user-provided identifier to ensure\
              \ the idempotency of the request."
        configuration:
          allOf:
          - $ref: '#/components/schemas/OverridableConfigurationJson'
          - description: "The configuration string for the workspace that you create.\
              \ For more information about the format and configuration options available,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\"\
              >Working in your Grafana workspace</a>."
        grafanaVersion:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersion'
          - description: "<p>Specifies the version of Grafana to support in the new\
              \ workspace.</p> <p>To get a list of supported version, use the <code>ListVersions</code>\
              \ operation.</p>"
        networkAccessControl:
          $ref: '#/components/schemas/CreateWorkspaceRequest_networkAccessControl'
        organizationRoleName:
          allOf:
          - $ref: '#/components/schemas/OrganizationRoleName'
          - description: The name of an IAM role that already exists to use with Organizations
              to access Amazon Web Services data sources and notification channels
              in other accounts in an organization.
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionType'
          - description: "<p>When creating a workspace through the Amazon Web Services\
              \ API, CLI or Amazon Web Services CloudFormation, you must manage IAM\
              \ roles and provision the permissions that the workspace needs to use\
              \ Amazon Web Services data sources and notification channels.</p> <p>You\
              \ must also specify a <code>workspaceRoleArn</code> for a role that\
              \ you will manage for the workspace to use when accessing those datasources\
              \ and notification channels.</p> <p>The ability for Amazon Managed Grafana\
              \ to create and update IAM roles on behalf of the user is supported\
              \ only in the Amazon Managed Grafana console, where this value may be\
              \ set to <code>SERVICE_MANAGED</code>.</p> <note> <p>Use only the <code>CUSTOMER_MANAGED</code>\
              \ permission type when creating a workspace with the API, CLI or Amazon\
              \ Web Services CloudFormation. </p> </note> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\"\
              >Amazon Managed Grafana permissions and policies for Amazon Web Services\
              \ data sources and notification channels</a>.</p>"
        stackSetName:
          allOf:
          - $ref: '#/components/schemas/StackSetName'
          - description: The name of the CloudFormation stack set to use to generate
              IAM roles to be used for this workspace.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags associated with the workspace.
        vpcConfiguration:
          $ref: '#/components/schemas/CreateWorkspaceRequest_vpcConfiguration'
        workspaceDataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceTypesList'
          - description: "This parameter is for internal use only, and should not\
              \ be used."
        workspaceDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "<p>A description for the workspace. This is used only to\
              \ help you identify this workspace.</p> <p>Pattern: <code>^[\\\\p{L}\\\
              \\p{Z}\\\\p{N}\\\\p{P}]{0,2048}$</code> </p>"
        workspaceName:
          allOf:
          - $ref: '#/components/schemas/WorkspaceName'
          - description: The name for the workspace. It does not have to be unique.
        workspaceNotificationDestinations:
          allOf:
          - $ref: '#/components/schemas/NotificationDestinationsList'
          - description: Specify the Amazon Web Services notification channels that
              you plan to use in this workspace. Specifying these data sources here
              enables Amazon Managed Grafana to create IAM roles and permissions that
              allow Amazon Managed Grafana to use these channels.
        workspaceOrganizationalUnits:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitList'
          - description: "Specifies the organizational units that this workspace is\
              \ allowed to use data sources from, if this workspace is in an account\
              \ that is part of an organization."
        workspaceRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: "Specified the IAM role that grants permissions to the Amazon\
              \ Web Services resources that the workspace will view data from, including\
              \ both data sources and notification channels. You are responsible for\
              \ managing the permissions for this role as new data sources or notification\
              \ channels are added. "
      required:
      - accountAccessType
      - authenticationProviders
      - permissionType
      title: CreateWorkspaceRequest
      type: object
    DeleteWorkspaceApiKeyRequest:
      properties: {}
      title: DeleteWorkspaceApiKeyRequest
      type: object
    DeleteWorkspaceRequest:
      properties: {}
      title: DeleteWorkspaceRequest
      type: object
    DescribeWorkspaceAuthenticationRequest:
      properties: {}
      title: DescribeWorkspaceAuthenticationRequest
      type: object
    DescribeWorkspaceConfigurationRequest:
      properties: {}
      title: DescribeWorkspaceConfigurationRequest
      type: object
    DescribeWorkspaceRequest:
      properties: {}
      title: DescribeWorkspaceRequest
      type: object
    DisassociateLicenseRequest:
      properties: {}
      title: DisassociateLicenseRequest
      type: object
    Endpoint:
      maxLength: 2048
      minLength: 1
      type: string
    GrafanaVersionList:
      items:
        $ref: '#/components/schemas/GrafanaVersion'
      type: array
    IdpMetadataUrl:
      maxLength: 2048
      minLength: 1
      type: string
    SsoId:
      maxLength: 47
      minLength: 1
      type: string
    ListPermissionsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    PaginationToken:
      type: string
    UserType:
      enum:
      - SSO_USER
      - SSO_GROUP
      title: UserType
      type: string
    ListPermissionsRequest:
      properties: {}
      title: ListPermissionsRequest
      type: object
    PermissionEntryList:
      items:
        $ref: '#/components/schemas/PermissionEntry'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListVersionsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListVersionsRequest:
      properties: {}
      title: ListVersionsRequest
      type: object
    ListWorkspacesRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListWorkspacesRequest:
      properties: {}
      title: ListWorkspacesRequest
      type: object
    WorkspaceList:
      items:
        $ref: '#/components/schemas/WorkspaceSummary'
      type: array
    Role:
      enum:
      - ADMIN
      - EDITOR
      - VIEWER
      title: Role
      type: string
    User:
      description: A structure that specifies one user or group in the workspace.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/SsoId'
          - description: "<p>The ID of the user or group.</p> <p>Pattern: <code>^([0-9a-fA-F]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$</code>\
              \ </p>"
          title: id
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: Specifies whether this is a single user or a group.
          title: type
      required:
      - id
      - type
      title: User
      type: object
    PermissionEntry:
      description: "A structure containing the identity of one user or group and the\
        \ <code>Admin</code>, <code>Editor</code>, or <code>Viewer</code> role that\
        \ they have."
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "Specifies whether the user or group has the <code>Admin</code>,\
              \ <code>Editor</code>, or <code>Viewer</code> role."
          title: role
        user:
          $ref: '#/components/schemas/PermissionEntry_user'
      required:
      - role
      - user
      title: PermissionEntry
      type: object
    PrefixListId:
      maxLength: 100
      minLength: 1
      title: PrefixListId
      type: string
    RoleValue:
      maxLength: 256
      minLength: 1
      title: RoleValue
      type: string
    RoleValueList:
      items:
        $ref: '#/components/schemas/RoleValue'
      type: array
    SamlConfiguration:
      description: 'A structure containing information about how this workspace works
        with SAML. '
      properties:
        allowedOrganizations:
          allOf:
          - $ref: '#/components/schemas/AllowedOrganizations'
          - description: "Lists which organizations defined in the SAML assertion\
              \ are allowed to use the Amazon Managed Grafana workspace. If this is\
              \ empty, all organizations in the assertion attribute have access."
          title: allowedOrganizations
        assertionAttributes:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_assertionAttributes'
        idpMetadata:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_idpMetadata'
        loginValidityDuration:
          allOf:
          - $ref: '#/components/schemas/LoginValidityDuration'
          - description: "How long a sign-on session by a SAML user is valid, before\
              \ the user has to sign on again."
          title: loginValidityDuration
        roleValues:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_roleValues'
      required:
      - idpMetadata
      title: SamlConfiguration
      type: object
    SecurityGroupId:
      maxLength: 255
      minLength: 0
      title: SecurityGroupId
      type: string
    SubnetId:
      maxLength: 255
      minLength: 0
      title: SubnetId
      type: string
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The list of tag keys and values to associate with the resource.\
              \ You can associate tag keys only, tags (key and values) only or a combination\
              \ of tag keys and tags."
      required:
      - tags
      title: TagResourceRequest
      type: object
    Timestamp:
      format: date-time
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAction:
      enum:
      - ADD
      - REVOKE
      title: UpdateAction
      type: string
    UpdateErrorCodeInteger:
      maximum: 999
      minimum: 100
      type: integer
    UpdateError:
      description: A structure containing information about one error encountered
        while performing an <a href="https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdatePermissions.html">UpdatePermissions</a>
        operation.
      properties:
        causedBy:
          $ref: '#/components/schemas/UpdateError_causedBy'
        code:
          allOf:
          - $ref: '#/components/schemas/UpdateErrorCodeInteger'
          - description: The error code.
          title: code
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The message for this error.
          title: message
      required:
      - causedBy
      - code
      - message
      title: UpdateError
      type: object
    UpdateErrorList:
      items:
        $ref: '#/components/schemas/UpdateError'
      type: array
    UserList:
      items:
        $ref: '#/components/schemas/User'
      type: array
    UpdateInstructionBatch:
      items:
        $ref: '#/components/schemas/UpdateInstruction'
      maxItems: 20
      minItems: 0
      type: array
    UpdatePermissionsRequest:
      example:
        updateInstructionBatch: ""
      properties:
        updateInstructionBatch:
          allOf:
          - $ref: '#/components/schemas/UpdateInstructionBatch'
          - description: An array of structures that contain the permission updates
              to make.
      required:
      - updateInstructionBatch
      title: UpdatePermissionsRequest
      type: object
    UpdateWorkspaceAuthenticationRequest:
      example:
        authenticationProviders: ""
        samlConfiguration:
          idpMetadata:
            xml: ""
            url: ""
          allowedOrganizations: ""
          roleValues:
            editor: ""
            admin: ""
          assertionAttributes:
            role: ""
            org: ""
            name: ""
            groups: ""
            login: ""
            email: ""
          loginValidityDuration: ""
      properties:
        authenticationProviders:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProviders'
          - description: "Specifies whether this workspace uses SAML 2.0, IAM Identity\
              \ Center (successor to Single Sign-On), or both to authenticate users\
              \ for using the Grafana console within a workspace. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/authentication-in-AMG.html\"\
              >User authentication in Amazon Managed Grafana</a>."
        samlConfiguration:
          $ref: '#/components/schemas/UpdateWorkspaceAuthenticationRequest_samlConfiguration'
      required:
      - authenticationProviders
      title: UpdateWorkspaceAuthenticationRequest
      type: object
    UpdateWorkspaceConfigurationRequest:
      example:
        configuration: ""
        grafanaVersion: ""
      properties:
        configuration:
          allOf:
          - $ref: '#/components/schemas/OverridableConfigurationJson'
          - description: "The new configuration string for the workspace. For more\
              \ information about the format and configuration options available,\
              \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\"\
              >Working in your Grafana workspace</a>."
        grafanaVersion:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersion'
          - description: "<p>Specifies the version of Grafana to support in the new\
              \ workspace.</p> <p>Can only be used to upgrade (for example, from 8.4\
              \ to 9.4), not downgrade (for example, from 9.4 to 8.4).</p> <p>To know\
              \ what versions are available to upgrade to for a specific workspace,\
              \ see the <code>ListVersions</code> operation.</p>"
      required:
      - configuration
      title: UpdateWorkspaceConfigurationRequest
      type: object
    UpdateWorkspaceRequest:
      example:
        permissionType: ""
        workspaceNotificationDestinations: ""
        workspaceOrganizationalUnits: ""
        workspaceDescription: ""
        workspaceDataSources: ""
        accountAccessType: ""
        organizationRoleName: ""
        workspaceRoleArn: ""
        removeNetworkAccessConfiguration: ""
        stackSetName: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        removeVpcConfiguration: ""
        workspaceName: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      properties:
        accountAccessType:
          allOf:
          - $ref: '#/components/schemas/AccountAccessType'
          - description: "Specifies whether the workspace can access Amazon Web Services\
              \ resources in this Amazon Web Services account only, or whether it\
              \ can also access Amazon Web Services resources in other accounts in\
              \ the same organization. If you specify <code>ORGANIZATION</code>, you\
              \ must specify which organizational units the workspace can access in\
              \ the <code>workspaceOrganizationalUnits</code> parameter."
        networkAccessControl:
          $ref: '#/components/schemas/UpdateWorkspaceRequest_networkAccessControl'
        organizationRoleName:
          allOf:
          - $ref: '#/components/schemas/OrganizationRoleName'
          - description: The name of an IAM role that already exists to use to access
              resources through Organizations. This can only be used with a workspace
              that has the <code>permissionType</code> set to <code>CUSTOMER_MANAGED</code>.
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionType'
          - description: "<p>Use this parameter if you want to change a workspace\
              \ from <code>SERVICE_MANAGED</code> to <code>CUSTOMER_MANAGED</code>.\
              \ This allows you to manage the permissions that the workspace uses\
              \ to access datasources and notification channels. If the workspace\
              \ is in a member Amazon Web Services account of an organization, and\
              \ that account is not a delegated administrator account, and you want\
              \ the workspace to access data sources in other Amazon Web Services\
              \ accounts in the organization, you must choose <code>CUSTOMER_MANAGED</code>.</p>\
              \ <p>If you specify this as <code>CUSTOMER_MANAGED</code>, you must\
              \ also specify a <code>workspaceRoleArn</code> that the workspace will\
              \ use for accessing Amazon Web Services resources.</p> <p>For more information\
              \ on the role and permissions needed, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\"\
              >Amazon Managed Grafana permissions and policies for Amazon Web Services\
              \ data sources and notification channels</a> </p> <note> <p>Do not use\
              \ this to convert a <code>CUSTOMER_MANAGED</code> workspace to <code>SERVICE_MANAGED</code>.\
              \ Do not include this parameter if you want to leave the workspace as\
              \ <code>SERVICE_MANAGED</code>.</p> <p>You can convert a <code>CUSTOMER_MANAGED</code>\
              \ workspace to <code>SERVICE_MANAGED</code> using the Amazon Managed\
              \ Grafana console. For more information, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html\"\
              >Managing permissions for data sources and notification channels</a>.</p>\
              \ </note>"
        removeNetworkAccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Whether to remove the network access configuration from\
              \ the workspace.</p> <p>Setting this to <code>true</code> and providing\
              \ a <code>networkAccessControl</code> to set will return an error.</p>\
              \ <p>If you remove this configuration by setting this to <code>true</code>,\
              \ then all IP addresses and VPC endpoints will be allowed. Standard\
              \ Grafana authentication and authorization will still be required.</p>"
        removeVpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p>Whether to remove the VPC configuration from the workspace.</p>
              <p>Setting this to <code>true</code> and providing a <code>vpcConfiguration</code>
              to set will return an error.</p>
        stackSetName:
          allOf:
          - $ref: '#/components/schemas/StackSetName'
          - description: The name of the CloudFormation stack set to use to generate
              IAM roles to be used for this workspace.
        vpcConfiguration:
          $ref: '#/components/schemas/UpdateWorkspaceRequest_vpcConfiguration'
        workspaceDataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceTypesList'
          - description: "This parameter is for internal use only, and should not\
              \ be used."
        workspaceDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the workspace. This is used only to help
              you identify this workspace.
        workspaceName:
          allOf:
          - $ref: '#/components/schemas/WorkspaceName'
          - description: A new name for the workspace to update.
        workspaceNotificationDestinations:
          allOf:
          - $ref: '#/components/schemas/NotificationDestinationsList'
          - description: Specify the Amazon Web Services notification channels that
              you plan to use in this workspace. Specifying these data sources here
              enables Amazon Managed Grafana to create IAM roles and permissions that
              allow Amazon Managed Grafana to use these channels.
        workspaceOrganizationalUnits:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitList'
          - description: "Specifies the organizational units that this workspace is\
              \ allowed to use data sources from, if this workspace is in an account\
              \ that is part of an organization."
        workspaceRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: "Specifies an IAM role that grants permissions to Amazon\
              \ Web Services resources that the workspace accesses, such as data sources\
              \ and notification channels. If this workspace has <code>permissionType</code>\
              \ <code>CUSTOMER_MANAGED</code>, then this role is required."
      title: UpdateWorkspaceRequest
      type: object
    VpceId:
      maxLength: 100
      minLength: 1
      title: VpceId
      type: string
    WorkspaceStatus:
      enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
      - UPDATING
      - UPGRADING
      - DELETION_FAILED
      - CREATION_FAILED
      - UPDATE_FAILED
      - UPGRADE_FAILED
      - LICENSE_REMOVAL_FAILED
      - VERSION_UPDATING
      - VERSION_UPDATE_FAILED
      title: WorkspaceStatus
      type: string
    WorkspaceSummary:
      description: A structure that contains some information about one workspace
        in the account.
      properties:
        authentication:
          $ref: '#/components/schemas/WorkspaceSummary_authentication'
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date that the workspace was created.
          title: created
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The customer-entered description of the workspace.
          title: description
        endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          - description: The URL endpoint to use to access the Grafana console in
              the workspace.
          title: endpoint
        grafanaVersion:
          allOf:
          - $ref: '#/components/schemas/GrafanaVersion'
          - description: The Grafana version that the workspace is running.
          title: grafanaVersion
        id:
          allOf:
          - $ref: '#/components/schemas/WorkspaceId'
          - description: The unique ID of the workspace.
          title: id
        modified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The most recent date that the workspace was modified.
          title: modified
        name:
          allOf:
          - $ref: '#/components/schemas/WorkspaceName'
          - description: The name of the workspace.
          title: name
        notificationDestinations:
          allOf:
          - $ref: '#/components/schemas/NotificationDestinationsList'
          - description: "The Amazon Web Services notification channels that Amazon\
              \ Managed Grafana can automatically create IAM roles and permissions\
              \ for, which allows Amazon Managed Grafana to use these channels."
          title: notificationDestinations
        status:
          allOf:
          - $ref: '#/components/schemas/WorkspaceStatus'
          - description: The current status of the workspace.
          title: status
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags associated with the workspace.
          title: tags
      required:
      - authentication
      - created
      - endpoint
      - grafanaVersion
      - id
      - modified
      - status
      title: WorkspaceSummary
      type: object
    CreateWorkspace_request_networkAccessControl:
      description: "<p>The configuration settings for in-bound network access to your\
        \ workspace.</p> <p>When this is configured, only listed IP addresses and\
        \ VPC endpoints will be able to access your workspace. Standard Grafana authentication\
        \ and authorization are still required.</p> <p>Access is granted to a caller\
        \ that is in either the IP address list or the VPC endpoint list - they do\
        \ not need to be in both.</p> <p>If this is not configured, or is removed,\
        \ then all IP addresses and VPC endpoints are allowed. Standard Grafana authentication\
        \ and authorization are still required.</p> <note> <p>While both <code>prefixListIds</code>\
        \ and <code>vpceIds</code> are required, you can pass in an empty array of\
        \ strings for either parameter if you do not want to allow any of that type.</p>\
        \ <p>If both are passed as empty arrays, no traffic is allowed to the workspace,\
        \ because only <i>explicitly</i> allowed connections are accepted.</p> </note>"
      properties:
        prefixListIds:
          allOf:
          - $ref: '#/components/schemas/PrefixListIds'
          - description: "<p>An array of prefix list IDs. A prefix list is a list\
              \ of CIDR ranges of IP addresses. The IP addresses specified are allowed\
              \ to access your workspace. If the list is not included in the configuration\
              \ (passed an empty array) then no IP addresses are allowed to access\
              \ the workspace. You create a prefix list using the Amazon VPC console.</p>\
              \ <p>Prefix list IDs have the format <code>pl-<i>1a2b3c4d</i> </code>.</p>\
              \ <p>For more information about prefix lists, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html\"\
              >Group CIDR blocks using managed prefix lists</a>in the <i>Amazon Virtual\
              \ Private Cloud User Guide</i>.</p>"
          title: prefixListIds
        vpceIds:
          allOf:
          - $ref: '#/components/schemas/VpceIds'
          - description: "<p>An array of Amazon VPC endpoint IDs for the workspace.\
              \ You can create VPC endpoints to your Amazon Managed Grafana workspace\
              \ for access from within a VPC. If a <code>NetworkAccessConfiguration</code>\
              \ is specified then only VPC endpoints specified here are allowed to\
              \ access the workspace. If you pass in an empty array of strings, then\
              \ no VPCs are allowed to access the workspace.</p> <p>VPC endpoint IDs\
              \ have the format <code>vpce-<i>1a2b3c4d</i> </code>.</p> <p>For more\
              \ information about creating an interface VPC endpoint, see <a href=\"\
              https://docs.aws.amazon.com/grafana/latest/userguide/VPC-endpoints\"\
              >Interface VPC endpoints</a> in the <i>Amazon Managed Grafana User Guide</i>.</p>\
              \ <note> <p>The only VPC endpoints that can be specified here are interface\
              \ VPC endpoints for Grafana workspaces (using the <code>com.amazonaws.[region].grafana-workspace</code>\
              \ service endpoint). Other VPC endpoints are ignored.</p> </note>"
          title: vpceIds
      title: CreateWorkspace_request_networkAccessControl
      type: object
    CreateWorkspace_request_vpcConfiguration:
      description: <p>The configuration settings for an Amazon VPC that contains data
        sources for your Grafana workspace to connect to.</p> <note> <p>Provided <code>securityGroupIds</code>
        and <code>subnetIds</code> must be part of the same VPC.</p> <p>Connecting
        to a private VPC is not yet available in the Asia Pacific (Seoul) Region (ap-northeast-2).</p>
        </note>
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The list of Amazon EC2 security group IDs attached to the
              Amazon VPC for your Grafana workspace to connect. Duplicates not allowed.
          title: securityGroupIds
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The list of Amazon EC2 subnet IDs created in the Amazon VPC
              for your Grafana workspace to connect. Duplicates not allowed.
          title: subnetIds
      title: CreateWorkspace_request_vpcConfiguration
      type: object
    CreateWorkspace_request:
      properties:
        accountAccessType:
          description: "Specifies whether the workspace can access Amazon Web Services\
            \ resources in this Amazon Web Services account only, or whether it can\
            \ also access Amazon Web Services resources in other accounts in the same\
            \ organization. If you specify <code>ORGANIZATION</code>, you must specify\
            \ which organizational units the workspace can access in the <code>workspaceOrganizationalUnits</code>\
            \ parameter."
          enum:
          - CURRENT_ACCOUNT
          - ORGANIZATION
          title: accountAccessType
          type: string
        authenticationProviders:
          description: "Specifies whether this workspace uses SAML 2.0, IAM Identity\
            \ Center (successor to Single Sign-On), or both to authenticate users\
            \ for using the Grafana console within a workspace. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/authentication-in-AMG.html\"\
            >User authentication in Amazon Managed Grafana</a>."
          items:
            $ref: '#/components/schemas/AuthenticationProviderTypes'
          title: authenticationProviders
          type: array
        clientToken:
          description: "A unique, case-sensitive, user-provided identifier to ensure\
            \ the idempotency of the request."
          pattern: "^[!-~]{1,64}$"
          title: clientToken
          type: string
        configuration:
          description: "The configuration string for the workspace that you create.\
            \ For more information about the format and configuration options available,\
            \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\"\
            >Working in your Grafana workspace</a>."
          maxLength: 65536
          minLength: 2
          title: configuration
          type: string
        grafanaVersion:
          description: "<p>Specifies the version of Grafana to support in the new\
            \ workspace.</p> <p>To get a list of supported version, use the <code>ListVersions</code>\
            \ operation.</p>"
          maxLength: 255
          minLength: 1
          title: grafanaVersion
          type: string
        networkAccessControl:
          $ref: '#/components/schemas/CreateWorkspace_request_networkAccessControl'
        organizationRoleName:
          description: The name of an IAM role that already exists to use with Organizations
            to access Amazon Web Services data sources and notification channels in
            other accounts in an organization.
          format: password
          maxLength: 2048
          minLength: 1
          title: organizationRoleName
          type: string
        permissionType:
          description: "<p>When creating a workspace through the Amazon Web Services\
            \ API, CLI or Amazon Web Services CloudFormation, you must manage IAM\
            \ roles and provision the permissions that the workspace needs to use\
            \ Amazon Web Services data sources and notification channels.</p> <p>You\
            \ must also specify a <code>workspaceRoleArn</code> for a role that you\
            \ will manage for the workspace to use when accessing those datasources\
            \ and notification channels.</p> <p>The ability for Amazon Managed Grafana\
            \ to create and update IAM roles on behalf of the user is supported only\
            \ in the Amazon Managed Grafana console, where this value may be set to\
            \ <code>SERVICE_MANAGED</code>.</p> <note> <p>Use only the <code>CUSTOMER_MANAGED</code>\
            \ permission type when creating a workspace with the API, CLI or Amazon\
            \ Web Services CloudFormation. </p> </note> <p>For more information, see\
            \ <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\"\
            >Amazon Managed Grafana permissions and policies for Amazon Web Services\
            \ data sources and notification channels</a>.</p>"
          enum:
          - CUSTOMER_MANAGED
          - SERVICE_MANAGED
          title: permissionType
          type: string
        stackSetName:
          description: The name of the CloudFormation stack set to use to generate
            IAM roles to be used for this workspace.
          title: stackSetName
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of tags associated with the workspace.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        vpcConfiguration:
          $ref: '#/components/schemas/CreateWorkspace_request_vpcConfiguration'
        workspaceDataSources:
          description: "This parameter is for internal use only, and should not be\
            \ used."
          items:
            $ref: '#/components/schemas/DataSourceType'
          title: workspaceDataSources
          type: array
        workspaceDescription:
          description: "<p>A description for the workspace. This is used only to help\
            \ you identify this workspace.</p> <p>Pattern: <code>^[\\\\p{L}\\\\p{Z}\\\
            \\p{N}\\\\p{P}]{0,2048}$</code> </p>"
          format: password
          maxLength: 2048
          minLength: 0
          title: workspaceDescription
          type: string
        workspaceName:
          description: The name for the workspace. It does not have to be unique.
          format: password
          pattern: "^[a-zA-Z0-9-._~]{1,255}$"
          title: workspaceName
          type: string
        workspaceNotificationDestinations:
          description: Specify the Amazon Web Services notification channels that
            you plan to use in this workspace. Specifying these data sources here
            enables Amazon Managed Grafana to create IAM roles and permissions that
            allow Amazon Managed Grafana to use these channels.
          items:
            $ref: '#/components/schemas/NotificationDestinationType'
          title: workspaceNotificationDestinations
          type: array
        workspaceOrganizationalUnits:
          description: "Specifies the organizational units that this workspace is\
            \ allowed to use data sources from, if this workspace is in an account\
            \ that is part of an organization."
          items:
            $ref: '#/components/schemas/OrganizationalUnit'
          title: workspaceOrganizationalUnits
          type: array
        workspaceRoleArn:
          description: "Specified the IAM role that grants permissions to the Amazon\
            \ Web Services resources that the workspace will view data from, including\
            \ both data sources and notification channels. You are responsible for\
            \ managing the permissions for this role as new data sources or notification\
            \ channels are added. "
          format: password
          maxLength: 2048
          minLength: 1
          title: workspaceRoleArn
          type: string
      required:
      - accountAccessType
      - authenticationProviders
      - permissionType
      title: CreateWorkspace_request
      type: object
    CreateWorkspaceApiKey_request:
      properties:
        keyName:
          description: Specifies the name of the key. Keynames must be unique to the
            workspace.
          maxLength: 100
          minLength: 1
          title: keyName
          type: string
        keyRole:
          description: "<p>Specifies the permission level of the key.</p> <p> Valid\
            \ values: <code>VIEWER</code>|<code>EDITOR</code>|<code>ADMIN</code> </p>"
          title: keyRole
          type: string
        secondsToLive:
          description: Specifies the time in seconds until the key expires. Keys can
            be valid for up to 30 days.
          maximum: 2592000
          minimum: 1
          title: secondsToLive
          type: integer
      required:
      - keyName
      - keyRole
      - secondsToLive
      title: CreateWorkspaceApiKey_request
      type: object
    UpdateWorkspace_request:
      properties:
        accountAccessType:
          description: "Specifies whether the workspace can access Amazon Web Services\
            \ resources in this Amazon Web Services account only, or whether it can\
            \ also access Amazon Web Services resources in other accounts in the same\
            \ organization. If you specify <code>ORGANIZATION</code>, you must specify\
            \ which organizational units the workspace can access in the <code>workspaceOrganizationalUnits</code>\
            \ parameter."
          enum:
          - CURRENT_ACCOUNT
          - ORGANIZATION
          title: accountAccessType
          type: string
        networkAccessControl:
          $ref: '#/components/schemas/CreateWorkspace_request_networkAccessControl'
        organizationRoleName:
          description: The name of an IAM role that already exists to use to access
            resources through Organizations. This can only be used with a workspace
            that has the <code>permissionType</code> set to <code>CUSTOMER_MANAGED</code>.
          format: password
          maxLength: 2048
          minLength: 1
          title: organizationRoleName
          type: string
        permissionType:
          description: "<p>Use this parameter if you want to change a workspace from\
            \ <code>SERVICE_MANAGED</code> to <code>CUSTOMER_MANAGED</code>. This\
            \ allows you to manage the permissions that the workspace uses to access\
            \ datasources and notification channels. If the workspace is in a member\
            \ Amazon Web Services account of an organization, and that account is\
            \ not a delegated administrator account, and you want the workspace to\
            \ access data sources in other Amazon Web Services accounts in the organization,\
            \ you must choose <code>CUSTOMER_MANAGED</code>.</p> <p>If you specify\
            \ this as <code>CUSTOMER_MANAGED</code>, you must also specify a <code>workspaceRoleArn</code>\
            \ that the workspace will use for accessing Amazon Web Services resources.</p>\
            \ <p>For more information on the role and permissions needed, see <a href=\"\
            https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html\"\
            >Amazon Managed Grafana permissions and policies for Amazon Web Services\
            \ data sources and notification channels</a> </p> <note> <p>Do not use\
            \ this to convert a <code>CUSTOMER_MANAGED</code> workspace to <code>SERVICE_MANAGED</code>.\
            \ Do not include this parameter if you want to leave the workspace as\
            \ <code>SERVICE_MANAGED</code>.</p> <p>You can convert a <code>CUSTOMER_MANAGED</code>\
            \ workspace to <code>SERVICE_MANAGED</code> using the Amazon Managed Grafana\
            \ console. For more information, see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html\"\
            >Managing permissions for data sources and notification channels</a>.</p>\
            \ </note>"
          enum:
          - CUSTOMER_MANAGED
          - SERVICE_MANAGED
          title: permissionType
          type: string
        removeNetworkAccessConfiguration:
          description: "<p>Whether to remove the network access configuration from\
            \ the workspace.</p> <p>Setting this to <code>true</code> and providing\
            \ a <code>networkAccessControl</code> to set will return an error.</p>\
            \ <p>If you remove this configuration by setting this to <code>true</code>,\
            \ then all IP addresses and VPC endpoints will be allowed. Standard Grafana\
            \ authentication and authorization will still be required.</p>"
          title: removeNetworkAccessConfiguration
          type: boolean
        removeVpcConfiguration:
          description: <p>Whether to remove the VPC configuration from the workspace.</p>
            <p>Setting this to <code>true</code> and providing a <code>vpcConfiguration</code>
            to set will return an error.</p>
          title: removeVpcConfiguration
          type: boolean
        stackSetName:
          description: The name of the CloudFormation stack set to use to generate
            IAM roles to be used for this workspace.
          title: stackSetName
          type: string
        vpcConfiguration:
          $ref: '#/components/schemas/CreateWorkspace_request_vpcConfiguration'
        workspaceDataSources:
          description: "This parameter is for internal use only, and should not be\
            \ used."
          items:
            $ref: '#/components/schemas/DataSourceType'
          title: workspaceDataSources
          type: array
        workspaceDescription:
          description: A description for the workspace. This is used only to help
            you identify this workspace.
          format: password
          maxLength: 2048
          minLength: 0
          title: workspaceDescription
          type: string
        workspaceName:
          description: A new name for the workspace to update.
          format: password
          pattern: "^[a-zA-Z0-9-._~]{1,255}$"
          title: workspaceName
          type: string
        workspaceNotificationDestinations:
          description: Specify the Amazon Web Services notification channels that
            you plan to use in this workspace. Specifying these data sources here
            enables Amazon Managed Grafana to create IAM roles and permissions that
            allow Amazon Managed Grafana to use these channels.
          items:
            $ref: '#/components/schemas/NotificationDestinationType'
          title: workspaceNotificationDestinations
          type: array
        workspaceOrganizationalUnits:
          description: "Specifies the organizational units that this workspace is\
            \ allowed to use data sources from, if this workspace is in an account\
            \ that is part of an organization."
          items:
            $ref: '#/components/schemas/OrganizationalUnit'
          title: workspaceOrganizationalUnits
          type: array
        workspaceRoleArn:
          description: "Specifies an IAM role that grants permissions to Amazon Web\
            \ Services resources that the workspace accesses, such as data sources\
            \ and notification channels. If this workspace has <code>permissionType</code>\
            \ <code>CUSTOMER_MANAGED</code>, then this role is required."
          format: password
          maxLength: 2048
          minLength: 1
          title: workspaceRoleArn
          type: string
      title: UpdateWorkspace_request
      type: object
    UpdateWorkspaceAuthentication_request_samlConfiguration_assertionAttributes:
      allOf:
      - $ref: '#/components/schemas/AssertionAttributes'
      - description: A structure that defines which attributes in the SAML assertion
          are to be used to define information about the users authenticated by that
          IdP to use the workspace.
      example:
        role: ""
        org: ""
        name: ""
        groups: ""
        login: ""
        email: ""
      title: UpdateWorkspaceAuthentication_request_samlConfiguration_assertionAttributes
    UpdateWorkspaceAuthentication_request_samlConfiguration_idpMetadata:
      allOf:
      - $ref: '#/components/schemas/IdpMetadata'
      - description: A structure containing the identity provider (IdP) metadata used
          to integrate the identity provider with this workspace.
      example:
        xml: ""
        url: ""
      title: UpdateWorkspaceAuthentication_request_samlConfiguration_idpMetadata
    UpdateWorkspaceAuthentication_request_samlConfiguration_roleValues:
      allOf:
      - $ref: '#/components/schemas/RoleValues'
      - description: A structure containing arrays that map group names in the SAML
          assertion to the Grafana <code>Admin</code> and <code>Editor</code> roles
          in the workspace.
      example:
        editor: ""
        admin: ""
      title: UpdateWorkspaceAuthentication_request_samlConfiguration_roleValues
    UpdateWorkspaceAuthentication_request_samlConfiguration:
      description: 'A structure containing information about how this workspace works
        with SAML. '
      properties:
        allowedOrganizations:
          allOf:
          - $ref: '#/components/schemas/AllowedOrganizations'
          - description: "Lists which organizations defined in the SAML assertion\
              \ are allowed to use the Amazon Managed Grafana workspace. If this is\
              \ empty, all organizations in the assertion attribute have access."
          title: allowedOrganizations
        assertionAttributes:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_assertionAttributes'
        idpMetadata:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_idpMetadata'
        loginValidityDuration:
          allOf:
          - $ref: '#/components/schemas/LoginValidityDuration'
          - description: "How long a sign-on session by a SAML user is valid, before\
              \ the user has to sign on again."
          title: loginValidityDuration
        roleValues:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration_roleValues'
      title: UpdateWorkspaceAuthentication_request_samlConfiguration
      type: object
    UpdateWorkspaceAuthentication_request:
      properties:
        authenticationProviders:
          description: "Specifies whether this workspace uses SAML 2.0, IAM Identity\
            \ Center (successor to Single Sign-On), or both to authenticate users\
            \ for using the Grafana console within a workspace. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/grafana/latest/userguide/authentication-in-AMG.html\"\
            >User authentication in Amazon Managed Grafana</a>."
          items:
            $ref: '#/components/schemas/AuthenticationProviderTypes'
          title: authenticationProviders
          type: array
        samlConfiguration:
          $ref: '#/components/schemas/UpdateWorkspaceAuthentication_request_samlConfiguration'
      required:
      - authenticationProviders
      title: UpdateWorkspaceAuthentication_request
      type: object
    UpdateWorkspaceConfiguration_request:
      properties:
        configuration:
          description: "The new configuration string for the workspace. For more information\
            \ about the format and configuration options available, see <a href=\"\
            https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html\"\
            >Working in your Grafana workspace</a>."
          maxLength: 65536
          minLength: 2
          title: configuration
          type: string
        grafanaVersion:
          description: "<p>Specifies the version of Grafana to support in the new\
            \ workspace.</p> <p>Can only be used to upgrade (for example, from 8.4\
            \ to 9.4), not downgrade (for example, from 9.4 to 8.4).</p> <p>To know\
            \ what versions are available to upgrade to for a specific workspace,\
            \ see the <code>ListVersions</code> operation.</p>"
          maxLength: 255
          minLength: 1
          title: grafanaVersion
          type: string
      required:
      - configuration
      title: UpdateWorkspaceConfiguration_request
      type: object
    UpdatePermissions_request:
      properties:
        updateInstructionBatch:
          description: An array of structures that contain the permission updates
            to make.
          items:
            $ref: '#/components/schemas/UpdateInstruction'
          maxItems: 20
          minItems: 0
          title: updateInstructionBatch
          type: array
      required:
      - updateInstructionBatch
      title: UpdatePermissions_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The list of tag keys and values to associate with the resource.\
            \ You can associate tag keys only, tags (key and values) only or a combination\
            \ of tag keys and tags."
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    AssociateLicenseResponse_workspace:
      allOf:
      - $ref: '#/components/schemas/WorkspaceDescription'
      - description: A structure containing data about the workspace.
      example:
        permissionType: ""
        freeTrialConsumed: ""
        freeTrialExpiration: ""
        licenseExpiration: ""
        created: ""
        accountAccessType: ""
        description: ""
        organizationRoleName: ""
        grafanaVersion: ""
        workspaceRoleArn: ""
        tags: ""
        licenseType: ""
        endpoint: ""
        notificationDestinations: ""
        name: ""
        stackSetName: ""
        modified: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        organizationalUnits: ""
        id: ""
        dataSources: ""
        authentication:
          samlConfigurationStatus: ""
          providers: ""
        status: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      title: AssociateLicenseResponse_workspace
    CreateWorkspaceResponse_workspace:
      allOf:
      - $ref: '#/components/schemas/WorkspaceDescription'
      - description: A structure containing data about the workspace that was created.
      example:
        permissionType: ""
        freeTrialConsumed: ""
        freeTrialExpiration: ""
        licenseExpiration: ""
        created: ""
        accountAccessType: ""
        description: ""
        organizationRoleName: ""
        grafanaVersion: ""
        workspaceRoleArn: ""
        tags: ""
        licenseType: ""
        endpoint: ""
        notificationDestinations: ""
        name: ""
        stackSetName: ""
        modified: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        organizationalUnits: ""
        id: ""
        dataSources: ""
        authentication:
          samlConfigurationStatus: ""
          providers: ""
        status: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      title: CreateWorkspaceResponse_workspace
    DeleteWorkspaceResponse_workspace:
      allOf:
      - $ref: '#/components/schemas/WorkspaceDescription'
      - description: A structure containing information about the workspace that was
          deleted.
      example:
        permissionType: ""
        freeTrialConsumed: ""
        freeTrialExpiration: ""
        licenseExpiration: ""
        created: ""
        accountAccessType: ""
        description: ""
        organizationRoleName: ""
        grafanaVersion: ""
        workspaceRoleArn: ""
        tags: ""
        licenseType: ""
        endpoint: ""
        notificationDestinations: ""
        name: ""
        stackSetName: ""
        modified: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        organizationalUnits: ""
        id: ""
        dataSources: ""
        authentication:
          samlConfigurationStatus: ""
          providers: ""
        status: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      title: DeleteWorkspaceResponse_workspace
    DescribeWorkspaceResponse_workspace:
      allOf:
      - $ref: '#/components/schemas/WorkspaceDescription'
      - description: A structure containing information about the workspace.
      example:
        permissionType: ""
        freeTrialConsumed: ""
        freeTrialExpiration: ""
        licenseExpiration: ""
        created: ""
        accountAccessType: ""
        description: ""
        organizationRoleName: ""
        grafanaVersion: ""
        workspaceRoleArn: ""
        tags: ""
        licenseType: ""
        endpoint: ""
        notificationDestinations: ""
        name: ""
        stackSetName: ""
        modified: ""
        networkAccessControl:
          prefixListIds: ""
          vpceIds: ""
        organizationalUnits: ""
        id: ""
        dataSources: ""
        authentication:
          samlConfigurationStatus: ""
          providers: ""
        status: ""
        vpcConfiguration:
          securityGroupIds: ""
          subnetIds: ""
      title: DescribeWorkspaceResponse_workspace
    DescribeWorkspaceAuthenticationResponse_authentication:
      allOf:
      - $ref: '#/components/schemas/AuthenticationDescription'
      - description: A structure containing information about the authentication methods
          used in the workspace.
      example:
        saml:
          configuration:
            idpMetadata:
              xml: ""
              url: ""
            allowedOrganizations: ""
            roleValues:
              editor: ""
              admin: ""
            assertionAttributes:
              role: ""
              org: ""
              name: ""
              groups: ""
              login: ""
              email: ""
            loginValidityDuration: ""
          status: ""
        awsSso:
          ssoClientId: ""
        providers: ""
      title: DescribeWorkspaceAuthenticationResponse_authentication
    UpdateWorkspaceAuthenticationResponse_authentication:
      allOf:
      - $ref: '#/components/schemas/AuthenticationDescription'
      - description: A structure that describes the user authentication for this workspace
          after the update is made.
      example:
        saml:
          configuration:
            idpMetadata:
              xml: ""
              url: ""
            allowedOrganizations: ""
            roleValues:
              editor: ""
              admin: ""
            assertionAttributes:
              role: ""
              org: ""
              name: ""
              groups: ""
              login: ""
              email: ""
            loginValidityDuration: ""
          status: ""
        awsSso:
          ssoClientId: ""
        providers: ""
      title: UpdateWorkspaceAuthenticationResponse_authentication
    WorkspaceDescription_authentication:
      allOf:
      - $ref: '#/components/schemas/AuthenticationSummary'
      - description: "A structure that describes whether the workspace uses SAML,\
          \ IAM Identity Center, or both methods for user authentication."
      example:
        samlConfigurationStatus: ""
        providers: ""
      title: WorkspaceDescription_authentication
    WorkspaceDescription_networkAccessControl:
      allOf:
      - $ref: '#/components/schemas/NetworkAccessConfiguration'
      - description: The configuration settings for network access to your workspace.
      example:
        prefixListIds: ""
        vpceIds: ""
      title: WorkspaceDescription_networkAccessControl
    WorkspaceDescription_vpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The configuration for connecting to data sources in a private
          VPC (Amazon Virtual Private Cloud).
      example:
        securityGroupIds: ""
        subnetIds: ""
      title: WorkspaceDescription_vpcConfiguration
    SamlAuthentication_configuration:
      allOf:
      - $ref: '#/components/schemas/SamlConfiguration'
      - description: 'A structure containing details about how this workspace works
          with SAML. '
      example:
        idpMetadata:
          xml: ""
          url: ""
        allowedOrganizations: ""
        roleValues:
          editor: ""
          admin: ""
        assertionAttributes:
          role: ""
          org: ""
          name: ""
          groups: ""
          login: ""
          email: ""
        loginValidityDuration: ""
      title: SamlAuthentication_configuration
    AuthenticationDescription_awsSso:
      allOf:
      - $ref: '#/components/schemas/AwsSsoAuthentication'
      - description: 'A structure containing information about how this workspace
          works with IAM Identity Center. '
      example:
        ssoClientId: ""
      title: AuthenticationDescription_awsSso
    AuthenticationDescription_saml:
      allOf:
      - $ref: '#/components/schemas/SamlAuthentication'
      - description: "A structure containing information about how this workspace\
          \ works with SAML, including what attributes within the assertion are to\
          \ be mapped to user information in the workspace. "
      example:
        configuration:
          idpMetadata:
            xml: ""
            url: ""
          allowedOrganizations: ""
          roleValues:
            editor: ""
            admin: ""
          assertionAttributes:
            role: ""
            org: ""
            name: ""
            groups: ""
            login: ""
            email: ""
          loginValidityDuration: ""
        status: ""
      title: AuthenticationDescription_saml
    CreateWorkspaceRequest_networkAccessControl:
      allOf:
      - $ref: '#/components/schemas/NetworkAccessConfiguration'
      - description: "<p>Configuration for network access to your workspace.</p> <p>When\
          \ this is configured, only listed IP addresses and VPC endpoints will be\
          \ able to access your workspace. Standard Grafana authentication and authorization\
          \ will still be required.</p> <p>If this is not configured, or is removed,\
          \ then all IP addresses and VPC endpoints will be allowed. Standard Grafana\
          \ authentication and authorization will still be required.</p>"
      example:
        prefixListIds: ""
        vpceIds: ""
      title: CreateWorkspaceRequest_networkAccessControl
    CreateWorkspaceRequest_vpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: <p>The configuration settings for an Amazon VPC that contains
          data sources for your Grafana workspace to connect to.</p> <note> <p>Connecting
          to a private VPC is not yet available in the Asia Pacific (Seoul) Region
          (ap-northeast-2).</p> </note>
      example:
        securityGroupIds: ""
        subnetIds: ""
      title: CreateWorkspaceRequest_vpcConfiguration
    PermissionEntry_user:
      allOf:
      - $ref: '#/components/schemas/User'
      - description: A structure with the ID of the user or group with this role.
      title: PermissionEntry_user
    UpdateError_causedBy:
      allOf:
      - $ref: '#/components/schemas/UpdateInstruction'
      - description: Specifies which permission update caused the error.
      title: UpdateError_causedBy
    UpdateWorkspaceAuthenticationRequest_samlConfiguration:
      allOf:
      - $ref: '#/components/schemas/SamlConfiguration'
      - description: "If the workspace uses SAML, use this structure to map SAML assertion\
          \ attributes to workspace user information and define which groups in the\
          \ assertion attribute are to have the <code>Admin</code> and <code>Editor</code>\
          \ roles in the workspace."
      example:
        idpMetadata:
          xml: ""
          url: ""
        allowedOrganizations: ""
        roleValues:
          editor: ""
          admin: ""
        assertionAttributes:
          role: ""
          org: ""
          name: ""
          groups: ""
          login: ""
          email: ""
        loginValidityDuration: ""
      title: UpdateWorkspaceAuthenticationRequest_samlConfiguration
    UpdateWorkspaceRequest_networkAccessControl:
      allOf:
      - $ref: '#/components/schemas/NetworkAccessConfiguration'
      - description: "<p>The configuration settings for network access to your workspace.</p>\
          \ <p>When this is configured, only listed IP addresses and VPC endpoints\
          \ will be able to access your workspace. Standard Grafana authentication\
          \ and authorization will still be required.</p> <p>If this is not configured,\
          \ or is removed, then all IP addresses and VPC endpoints will be allowed.\
          \ Standard Grafana authentication and authorization will still be required.</p>"
      example:
        prefixListIds: ""
        vpceIds: ""
      title: UpdateWorkspaceRequest_networkAccessControl
    UpdateWorkspaceRequest_vpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: The configuration settings for an Amazon VPC that contains data
          sources for your Grafana workspace to connect to.
      example:
        securityGroupIds: ""
        subnetIds: ""
      title: UpdateWorkspaceRequest_vpcConfiguration
    WorkspaceSummary_authentication:
      allOf:
      - $ref: '#/components/schemas/AuthenticationSummary'
      - description: A structure containing information about the authentication methods
          used in the workspace.
      title: WorkspaceSummary_authentication
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
