/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthenticationDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthenticationDescription::OAIAuthenticationDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthenticationDescription::OAIAuthenticationDescription() {
    this->initializeModel();
}

OAIAuthenticationDescription::~OAIAuthenticationDescription() {}

void OAIAuthenticationDescription::initializeModel() {

    m_aws_sso_isSet = false;
    m_aws_sso_isValid = false;

    m_providers_isSet = false;
    m_providers_isValid = false;

    m_saml_isSet = false;
    m_saml_isValid = false;
}

void OAIAuthenticationDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthenticationDescription::fromJsonObject(QJsonObject json) {

    m_aws_sso_isValid = ::OpenAPI::fromJsonValue(m_aws_sso, json[QString("awsSso")]);
    m_aws_sso_isSet = !json[QString("awsSso")].isNull() && m_aws_sso_isValid;

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("providers")]);
    m_providers_isSet = !json[QString("providers")].isNull() && m_providers_isValid;

    m_saml_isValid = ::OpenAPI::fromJsonValue(m_saml, json[QString("saml")]);
    m_saml_isSet = !json[QString("saml")].isNull() && m_saml_isValid;
}

QString OAIAuthenticationDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthenticationDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_sso.isSet()) {
        obj.insert(QString("awsSso"), ::OpenAPI::toJsonValue(m_aws_sso));
    }
    if (m_providers.isSet()) {
        obj.insert(QString("providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    if (m_saml.isSet()) {
        obj.insert(QString("saml"), ::OpenAPI::toJsonValue(m_saml));
    }
    return obj;
}

OAIAuthenticationDescription_awsSso OAIAuthenticationDescription::getAwsSso() const {
    return m_aws_sso;
}
void OAIAuthenticationDescription::setAwsSso(const OAIAuthenticationDescription_awsSso &aws_sso) {
    m_aws_sso = aws_sso;
    m_aws_sso_isSet = true;
}

bool OAIAuthenticationDescription::is_aws_sso_Set() const{
    return m_aws_sso_isSet;
}

bool OAIAuthenticationDescription::is_aws_sso_Valid() const{
    return m_aws_sso_isValid;
}

QList OAIAuthenticationDescription::getProviders() const {
    return m_providers;
}
void OAIAuthenticationDescription::setProviders(const QList &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIAuthenticationDescription::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIAuthenticationDescription::is_providers_Valid() const{
    return m_providers_isValid;
}

OAIAuthenticationDescription_saml OAIAuthenticationDescription::getSaml() const {
    return m_saml;
}
void OAIAuthenticationDescription::setSaml(const OAIAuthenticationDescription_saml &saml) {
    m_saml = saml;
    m_saml_isSet = true;
}

bool OAIAuthenticationDescription::is_saml_Set() const{
    return m_saml_isSet;
}

bool OAIAuthenticationDescription::is_saml_Valid() const{
    return m_saml_isValid;
}

bool OAIAuthenticationDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_sso.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_providers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_saml.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthenticationDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_providers_isValid && true;
}

} // namespace OpenAPI
