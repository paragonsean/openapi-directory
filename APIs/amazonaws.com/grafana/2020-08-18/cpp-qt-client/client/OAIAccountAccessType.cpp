/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountAccessType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountAccessType::OAIAccountAccessType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountAccessType::OAIAccountAccessType() {
    this->initializeModel();
}

OAIAccountAccessType::~OAIAccountAccessType() {}

void OAIAccountAccessType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAccountAccessType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAccountAccessType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CURRENT_ACCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountAccessType::CURRENT_ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORGANIZATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountAccessType::ORGANIZATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAccountAccessType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAccountAccessType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAccountAccessType::CURRENT_ACCOUNT:
            val = "CURRENT_ACCOUNT";
            break;
        case eOAIAccountAccessType::ORGANIZATION:
            val = "ORGANIZATION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAccountAccessType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAccountAccessType::eOAIAccountAccessType OAIAccountAccessType::getValue() const {
    return m_value;
}

void OAIAccountAccessType::setValue(const OAIAccountAccessType::eOAIAccountAccessType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAccountAccessType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAccountAccessType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
