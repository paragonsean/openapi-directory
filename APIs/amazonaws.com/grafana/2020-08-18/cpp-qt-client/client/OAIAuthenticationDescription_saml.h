/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthenticationDescription_saml.h
 *
 * 
 */

#ifndef OAIAuthenticationDescription_saml_H
#define OAIAuthenticationDescription_saml_H

#include <QJsonObject>

#include "OAISamlAuthentication_configuration.h"
#include "OAISamlConfigurationStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISamlAuthentication_configuration;

class OAIAuthenticationDescription_saml : public OAIObject {
public:
    OAIAuthenticationDescription_saml();
    OAIAuthenticationDescription_saml(QString json);
    ~OAIAuthenticationDescription_saml() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISamlAuthentication_configuration getConfiguration() const;
    void setConfiguration(const OAISamlAuthentication_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    OAISamlConfigurationStatus getStatus() const;
    void setStatus(const OAISamlConfigurationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISamlAuthentication_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    OAISamlConfigurationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthenticationDescription_saml)

#endif // OAIAuthenticationDescription_saml_H
