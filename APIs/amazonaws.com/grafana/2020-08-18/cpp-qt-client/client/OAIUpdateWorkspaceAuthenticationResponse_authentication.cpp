/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateWorkspaceAuthenticationResponse_authentication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateWorkspaceAuthenticationResponse_authentication::OAIUpdateWorkspaceAuthenticationResponse_authentication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateWorkspaceAuthenticationResponse_authentication::OAIUpdateWorkspaceAuthenticationResponse_authentication() {
    this->initializeModel();
}

OAIUpdateWorkspaceAuthenticationResponse_authentication::~OAIUpdateWorkspaceAuthenticationResponse_authentication() {}

void OAIUpdateWorkspaceAuthenticationResponse_authentication::initializeModel() {

    m_aws_sso_isSet = false;
    m_aws_sso_isValid = false;

    m_providers_isSet = false;
    m_providers_isValid = false;

    m_saml_isSet = false;
    m_saml_isValid = false;
}

void OAIUpdateWorkspaceAuthenticationResponse_authentication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateWorkspaceAuthenticationResponse_authentication::fromJsonObject(QJsonObject json) {

    m_aws_sso_isValid = ::OpenAPI::fromJsonValue(m_aws_sso, json[QString("awsSso")]);
    m_aws_sso_isSet = !json[QString("awsSso")].isNull() && m_aws_sso_isValid;

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("providers")]);
    m_providers_isSet = !json[QString("providers")].isNull() && m_providers_isValid;

    m_saml_isValid = ::OpenAPI::fromJsonValue(m_saml, json[QString("saml")]);
    m_saml_isSet = !json[QString("saml")].isNull() && m_saml_isValid;
}

QString OAIUpdateWorkspaceAuthenticationResponse_authentication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateWorkspaceAuthenticationResponse_authentication::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_sso.isSet()) {
        obj.insert(QString("awsSso"), ::OpenAPI::toJsonValue(m_aws_sso));
    }
    if (m_providers.isSet()) {
        obj.insert(QString("providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    if (m_saml.isSet()) {
        obj.insert(QString("saml"), ::OpenAPI::toJsonValue(m_saml));
    }
    return obj;
}

OAIAuthenticationDescription_awsSso OAIUpdateWorkspaceAuthenticationResponse_authentication::getAwsSso() const {
    return m_aws_sso;
}
void OAIUpdateWorkspaceAuthenticationResponse_authentication::setAwsSso(const OAIAuthenticationDescription_awsSso &aws_sso) {
    m_aws_sso = aws_sso;
    m_aws_sso_isSet = true;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_aws_sso_Set() const{
    return m_aws_sso_isSet;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_aws_sso_Valid() const{
    return m_aws_sso_isValid;
}

QList OAIUpdateWorkspaceAuthenticationResponse_authentication::getProviders() const {
    return m_providers;
}
void OAIUpdateWorkspaceAuthenticationResponse_authentication::setProviders(const QList &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_providers_Valid() const{
    return m_providers_isValid;
}

OAIAuthenticationDescription_saml OAIUpdateWorkspaceAuthenticationResponse_authentication::getSaml() const {
    return m_saml;
}
void OAIUpdateWorkspaceAuthenticationResponse_authentication::setSaml(const OAIAuthenticationDescription_saml &saml) {
    m_saml = saml;
    m_saml_isSet = true;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_saml_Set() const{
    return m_saml_isSet;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::is_saml_Valid() const{
    return m_saml_isValid;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_sso.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_providers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_saml.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateWorkspaceAuthenticationResponse_authentication::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_providers_isValid && true;
}

} // namespace OpenAPI
