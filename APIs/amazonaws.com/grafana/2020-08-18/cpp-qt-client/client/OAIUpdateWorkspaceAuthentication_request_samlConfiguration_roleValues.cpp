/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues() {
    this->initializeModel();
}

OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::~OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues() {}

void OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_editor_isSet = false;
    m_editor_isValid = false;
}

void OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("admin")]);
    m_admin_isSet = !json[QString("admin")].isNull() && m_admin_isValid;

    m_editor_isValid = ::OpenAPI::fromJsonValue(m_editor, json[QString("editor")]);
    m_editor_isSet = !json[QString("editor")].isNull() && m_editor_isValid;
}

QString OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::asJsonObject() const {
    QJsonObject obj;
    if (m_admin.isSet()) {
        obj.insert(QString("admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_editor.isSet()) {
        obj.insert(QString("editor"), ::OpenAPI::toJsonValue(m_editor));
    }
    return obj;
}

QList OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::getAdmin() const {
    return m_admin;
}
void OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::setAdmin(const QList &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::is_admin_Valid() const{
    return m_admin_isValid;
}

QList OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::getEditor() const {
    return m_editor;
}
void OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::setEditor(const QList &editor) {
    m_editor = editor;
    m_editor_isSet = true;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::is_editor_Set() const{
    return m_editor_isSet;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::is_editor_Valid() const{
    return m_editor_isValid;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_editor.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateWorkspaceAuthentication_request_samlConfiguration_roleValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
