/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateInstruction.h
 *
 * Contains the instructions for one Grafana role permission update in a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdatePermissions.html\&quot;&gt;UpdatePermissions&lt;/a&gt; operation.
 */

#ifndef OAIUpdateInstruction_H
#define OAIUpdateInstruction_H

#include <QJsonObject>

#include "OAIRole.h"
#include "OAIUpdateAction.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateInstruction : public OAIObject {
public:
    OAIUpdateInstruction();
    OAIUpdateInstruction(QString json);
    ~OAIUpdateInstruction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateAction getAction() const;
    void setAction(const OAIUpdateAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIRole getRole() const;
    void setRole(const OAIRole &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QList getUsers() const;
    void setUsers(const QList &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIRole m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QList m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateInstruction)

#endif // OAIUpdateInstruction_H
