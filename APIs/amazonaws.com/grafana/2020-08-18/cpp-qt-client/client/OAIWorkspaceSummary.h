/**
 * Amazon Managed Grafana
 * <p>Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources. Amazon Managed Grafana makes it easy to deploy, operate, and scale Grafana, a widely deployed data visualization tool that is popular for its extensible data support.</p> <p>With Amazon Managed Grafana, you create logically isolated Grafana servers called <i>workspaces</i>. In a workspace, you can create Grafana dashboards and visualizations to analyze your metrics, logs, and traces without having to build, package, or deploy any hardware to run Grafana servers. </p>
 *
 * The version of the OpenAPI document: 2020-08-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceSummary.h
 *
 * A structure that contains some information about one workspace in the account.
 */

#ifndef OAIWorkspaceSummary_H
#define OAIWorkspaceSummary_H

#include <QJsonObject>

#include "OAIWorkspaceStatus.h"
#include "OAIWorkspaceSummary_authentication.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkspaceSummary_authentication;

class OAIWorkspaceSummary : public OAIObject {
public:
    OAIWorkspaceSummary();
    OAIWorkspaceSummary(QString json);
    ~OAIWorkspaceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWorkspaceSummary_authentication getAuthentication() const;
    void setAuthentication(const OAIWorkspaceSummary_authentication &authentication);
    bool is_authentication_Set() const;
    bool is_authentication_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getGrafanaVersion() const;
    void setGrafanaVersion(const QString &grafana_version);
    bool is_grafana_version_Set() const;
    bool is_grafana_version_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getModified() const;
    void setModified(const QDateTime &modified);
    bool is_modified_Set() const;
    bool is_modified_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getNotificationDestinations() const;
    void setNotificationDestinations(const QList &notification_destinations);
    bool is_notification_destinations_Set() const;
    bool is_notification_destinations_Valid() const;

    OAIWorkspaceStatus getStatus() const;
    void setStatus(const OAIWorkspaceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWorkspaceSummary_authentication m_authentication;
    bool m_authentication_isSet;
    bool m_authentication_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_grafana_version;
    bool m_grafana_version_isSet;
    bool m_grafana_version_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_modified;
    bool m_modified_isSet;
    bool m_modified_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_notification_destinations;
    bool m_notification_destinations_isSet;
    bool m_notification_destinations_isValid;

    OAIWorkspaceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceSummary)

#endif // OAIWorkspaceSummary_H
