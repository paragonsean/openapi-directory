# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Outpost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outpost_arn: str=None, outpost_id: str=None, owner_id: str=None, capacity_in_bytes: int=None):
        """Outpost - a model defined in OpenAPI

        :param outpost_arn: The outpost_arn of this Outpost.
        :param outpost_id: The outpost_id of this Outpost.
        :param owner_id: The owner_id of this Outpost.
        :param capacity_in_bytes: The capacity_in_bytes of this Outpost.
        """
        self.openapi_types = {
            'outpost_arn': str,
            'outpost_id': str,
            'owner_id': str,
            'capacity_in_bytes': int
        }

        self.attribute_map = {
            'outpost_arn': 'OutpostArn',
            'outpost_id': 'OutpostId',
            'owner_id': 'OwnerId',
            'capacity_in_bytes': 'CapacityInBytes'
        }

        self._outpost_arn = outpost_arn
        self._outpost_id = outpost_id
        self._owner_id = owner_id
        self._capacity_in_bytes = capacity_in_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Outpost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Outpost of this Outpost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outpost_arn(self):
        """Gets the outpost_arn of this Outpost.


        :return: The outpost_arn of this Outpost.
        :rtype: str
        """
        return self._outpost_arn

    @outpost_arn.setter
    def outpost_arn(self, outpost_arn):
        """Sets the outpost_arn of this Outpost.


        :param outpost_arn: The outpost_arn of this Outpost.
        :type outpost_arn: str
        """

        self._outpost_arn = outpost_arn

    @property
    def outpost_id(self):
        """Gets the outpost_id of this Outpost.


        :return: The outpost_id of this Outpost.
        :rtype: str
        """
        return self._outpost_id

    @outpost_id.setter
    def outpost_id(self, outpost_id):
        """Sets the outpost_id of this Outpost.


        :param outpost_id: The outpost_id of this Outpost.
        :type outpost_id: str
        """

        self._outpost_id = outpost_id

    @property
    def owner_id(self):
        """Gets the owner_id of this Outpost.


        :return: The owner_id of this Outpost.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this Outpost.


        :param owner_id: The owner_id of this Outpost.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def capacity_in_bytes(self):
        """Gets the capacity_in_bytes of this Outpost.


        :return: The capacity_in_bytes of this Outpost.
        :rtype: int
        """
        return self._capacity_in_bytes

    @capacity_in_bytes.setter
    def capacity_in_bytes(self, capacity_in_bytes):
        """Sets the capacity_in_bytes of this Outpost.


        :param capacity_in_bytes: The capacity_in_bytes of this Outpost.
        :type capacity_in_bytes: int
        """

        self._capacity_in_bytes = capacity_in_bytes
