/**
 * Amazon S3 on Outposts
 * Amazon S3 on Outposts provides access to S3 on Outposts operations.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpoint.h
 *
 * Amazon S3 on Outposts Access Points simplify managing data access at scale for shared datasets in S3 on Outposts. S3 on Outposts uses endpoints to connect to Outposts buckets so that you can perform actions within your virtual private cloud (VPC). For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/WorkingWithS3Outposts.html\&quot;&gt; Accessing S3 on Outposts using VPC-only access points&lt;/a&gt; in the &lt;i&gt;Amazon Simple Storage Service User Guide&lt;/i&gt;.
 */

#ifndef OAIEndpoint_H
#define OAIEndpoint_H

#include <QJsonObject>

#include "OAIEndpointAccessType.h"
#include "OAIEndpointStatus.h"
#include "OAIEndpoint_FailedReason.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEndpoint_FailedReason;

class OAIEndpoint : public OAIObject {
public:
    OAIEndpoint();
    OAIEndpoint(QString json);
    ~OAIEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointArn() const;
    void setEndpointArn(const QString &endpoint_arn);
    bool is_endpoint_arn_Set() const;
    bool is_endpoint_arn_Valid() const;

    QString getOutpostsId() const;
    void setOutpostsId(const QString &outposts_id);
    bool is_outposts_id_Set() const;
    bool is_outposts_id_Valid() const;

    QString getCidrBlock() const;
    void setCidrBlock(const QString &cidr_block);
    bool is_cidr_block_Set() const;
    bool is_cidr_block_Valid() const;

    OAIEndpointStatus getStatus() const;
    void setStatus(const OAIEndpointStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QList getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QString getSecurityGroupId() const;
    void setSecurityGroupId(const QString &security_group_id);
    bool is_security_group_id_Set() const;
    bool is_security_group_id_Valid() const;

    OAIEndpointAccessType getAccessType() const;
    void setAccessType(const OAIEndpointAccessType &access_type);
    bool is_access_type_Set() const;
    bool is_access_type_Valid() const;

    QString getCustomerOwnedIpv4Pool() const;
    void setCustomerOwnedIpv4Pool(const QString &customer_owned_ipv4_pool);
    bool is_customer_owned_ipv4_pool_Set() const;
    bool is_customer_owned_ipv4_pool_Valid() const;

    OAIEndpoint_FailedReason getFailedReason() const;
    void setFailedReason(const OAIEndpoint_FailedReason &failed_reason);
    bool is_failed_reason_Set() const;
    bool is_failed_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_arn;
    bool m_endpoint_arn_isSet;
    bool m_endpoint_arn_isValid;

    QString m_outposts_id;
    bool m_outposts_id_isSet;
    bool m_outposts_id_isValid;

    QString m_cidr_block;
    bool m_cidr_block_isSet;
    bool m_cidr_block_isValid;

    OAIEndpointStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QList m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QString m_security_group_id;
    bool m_security_group_id_isSet;
    bool m_security_group_id_isValid;

    OAIEndpointAccessType m_access_type;
    bool m_access_type_isSet;
    bool m_access_type_isValid;

    QString m_customer_owned_ipv4_pool;
    bool m_customer_owned_ipv4_pool_isSet;
    bool m_customer_owned_ipv4_pool_isValid;

    OAIEndpoint_FailedReason m_failed_reason;
    bool m_failed_reason_isSet;
    bool m_failed_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpoint)

#endif // OAIEndpoint_H
