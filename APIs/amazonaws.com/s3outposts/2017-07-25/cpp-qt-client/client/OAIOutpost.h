/**
 * Amazon S3 on Outposts
 * Amazon S3 on Outposts provides access to S3 on Outposts operations.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutpost.h
 *
 * Contains the details for the Outpost object.
 */

#ifndef OAIOutpost_H
#define OAIOutpost_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOutpost : public OAIObject {
public:
    OAIOutpost();
    OAIOutpost(QString json);
    ~OAIOutpost() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOutpostArn() const;
    void setOutpostArn(const QString &outpost_arn);
    bool is_outpost_arn_Set() const;
    bool is_outpost_arn_Valid() const;

    QString getOutpostId() const;
    void setOutpostId(const QString &outpost_id);
    bool is_outpost_id_Set() const;
    bool is_outpost_id_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    qint32 getCapacityInBytes() const;
    void setCapacityInBytes(const qint32 &capacity_in_bytes);
    bool is_capacity_in_bytes_Set() const;
    bool is_capacity_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_outpost_arn;
    bool m_outpost_arn_isSet;
    bool m_outpost_arn_isValid;

    QString m_outpost_id;
    bool m_outpost_id_isSet;
    bool m_outpost_id_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    qint32 m_capacity_in_bytes;
    bool m_capacity_in_bytes_isSet;
    bool m_capacity_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutpost)

#endif // OAIOutpost_H
