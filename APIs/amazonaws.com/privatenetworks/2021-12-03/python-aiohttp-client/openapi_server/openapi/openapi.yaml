openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon Web Services Private 5G is a managed service that makes it\
    \ easy to deploy, operate, and scale your own private mobile network at your on-premises\
    \ location. Private 5G provides the pre-configured hardware and software for mobile\
    \ networks, helps automate setup, and scales capacity on demand to support additional\
    \ devices as needed."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Private 5G
  version: 2021-12-03
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: privatenetworks
  x-aws-signingName: private-networks
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/privatenetworks-2021-12-03.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/private-networks/
servers:
- description: The AWS Private 5G multi-region endpoint
  url: "http://private-networks.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Private 5G multi-region endpoint
  url: "https://private-networks.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Private 5G endpoint for China (Beijing) and China (Ningxia)
  url: "http://private-networks.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Private 5G endpoint for China (Beijing) and China (Ningxia)
  url: "https://private-networks.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /ping:
    get:
      description: Checks the health of the service.
      operationId: ping
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Lists the tags for the specified resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: ' Adds tags to the specified resource. '
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the resource. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      - description: The tag keys.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/device-identifiers/activate:
    post:
      description: Activates the specified device identifier.
      operationId: activate_device_identifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateDeviceIdentifier_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateDeviceIdentifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/device-identifiers/deactivate:
    post:
      description: Deactivates the specified device identifier.
      operationId: deactivate_device_identifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateDeviceIdentifier_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateDeviceIdentifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/device-identifiers/list:
    post:
      description: "<p>Lists device identifiers. Add filters to your request to return\
        \ a more specific list of results. Use filters to match the Amazon Resource\
        \ Name (ARN) of an order, the status of device identifiers, or the ARN of\
        \ the traffic group.</p> <p>If you specify multiple filters, filters are joined\
        \ with an OR, and the request returns results that match all of the specified\
        \ filters.</p>"
      operationId: list_device_identifiers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: startToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceIdentifiers_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceIdentifiersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/device-identifiers/{deviceIdentifierArn}:
    get:
      description: Gets the specified device identifier.
      operationId: get_device_identifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the device identifier.
        explode: false
        in: path
        name: deviceIdentifierArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceIdentifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/network-resources:
    post:
      description: "<p>Lists network resources. Add filters to your request to return\
        \ a more specific list of results. Use filters to match the Amazon Resource\
        \ Name (ARN) of an order or the status of network resources.</p> <p>If you\
        \ specify multiple filters, filters are joined with an OR, and the request\
        \ returns results that match all of the specified filters.</p>"
      operationId: list_network_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: startToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNetworkResources_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkResourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-resources/configure:
    post:
      description: "<p>Configures the specified network resource. </p> <p> Use this\
        \ action to specify the geographic position of the hardware. You must provide\
        \ Certified Professional Installer (CPI) credentials in the request so that\
        \ we can obtain spectrum grants. For more information, see <a href=\"https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html\"\
        >Radio units</a> in the <i>Amazon Web Services Private 5G User Guide</i>.\
        \ </p>"
      operationId: configure_access_point
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureAccessPoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureAccessPointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-resources/update:
    post:
      description: "<p>Use this action to do the following tasks:</p> <ul> <li> <p>Update\
        \ the duration and renewal status of the commitment period for a radio unit.\
        \ The update goes into effect immediately.</p> </li> <li> <p>Request a replacement\
        \ for a network resource.</p> </li> <li> <p>Request that you return a network\
        \ resource.</p> </li> </ul> <p>After you submit a request to replace or return\
        \ a network resource, the status of the network resource changes to <code>CREATING_SHIPPING_LABEL</code>.\
        \ The shipping label is available when the status of the network resource\
        \ is <code>PENDING_RETURN</code>. After the network resource is successfully\
        \ returned, its status changes to <code>DELETED</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit\"\
        >Return a radio unit</a>.</p>"
      operationId: start_network_resource_update
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNetworkResourceUpdate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartNetworkResourceUpdateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-resources/{networkResourceArn}:
    get:
      description: Gets the specified network resource.
      operationId: get_network_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the network resource.
        explode: false
        in: path
        name: networkResourceArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/network-sites:
    post:
      description: Creates a network site.
      operationId: create_network_site
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkSite_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-sites/activate:
    post:
      description: Activates the specified network site.
      operationId: activate_network_site
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateNetworkSite_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-sites/list:
    post:
      description: Lists network sites. Add filters to your request to return a more
        specific list of results. Use filters to match the status of the network site.
      operationId: list_network_sites
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: startToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNetworkSites_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkSitesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-sites/plan:
    put:
      description: Updates the specified network site plan.
      operationId: update_network_site_plan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkSitePlan_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-sites/site:
    put:
      description: Updates the specified network site.
      operationId: update_network_site
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkSite_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/network-sites/{networkSiteArn}:
    delete:
      description: "Deletes the specified network site. Return the hardware after\
        \ you delete the network site. You are responsible for minimum charges. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/private-networks/latest/userguide/hardware-maintenance.html\"\
        >Hardware returns</a> in the <i>Amazon Web Services Private 5G User Guide</i>. "
      operationId: delete_network_site
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
          >How to ensure idempotency</a>."
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the network site.
        explode: false
        in: path
        name: networkSiteArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets the specified network site.
      operationId: get_network_site
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the network site.
        explode: false
        in: path
        name: networkSiteArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkSiteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/networks:
    post:
      description: Creates a network.
      operationId: create_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetwork_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/networks/list:
    post:
      description: Lists networks. Add filters to your request to return a more specific
        list of results. Use filters to match the status of the network.
      operationId: list_networks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: startToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNetworks_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/networks/{networkArn}:
    delete:
      description: "Deletes the specified network. You must delete network sites before\
        \ you delete the network. For more information, see <a href=\"https://docs.aws.amazon.com/private-networks/latest/APIReference/API_DeleteNetworkSite.html\"\
        >DeleteNetworkSite</a> in the <i>API Reference for Amazon Web Services Private\
        \ 5G</i>."
      operationId: delete_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
          >How to ensure idempotency</a>."
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the network.
        explode: false
        in: path
        name: networkArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets the specified network.
      operationId: get_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the network.
        explode: false
        in: path
        name: networkArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/orders/acknowledge:
    post:
      description: Acknowledges that the specified network order was received.
      operationId: acknowledge_order_receipt
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeOrderReceipt_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeOrderReceiptResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/orders/list:
    post:
      description: "<p>Lists orders. Add filters to your request to return a more\
        \ specific list of results. Use filters to match the Amazon Resource Name\
        \ (ARN) of the network site or the status of the order.</p> <p>If you specify\
        \ multiple filters, filters are joined with an OR, and the request returns\
        \ results that match all of the specified filters.</p>"
      operationId: list_orders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: startToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrders_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/orders/{orderArn}:
    get:
      description: Gets the specified order.
      operationId: get_order
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the order.
        explode: false
        in: path
        name: orderArn
        required: true
        schema:
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcknowledgeOrderReceiptResponse:
      example:
        order:
          createdAt: ""
          networkArn: ""
          trackingInformation: ""
          orderedResources: ""
          networkSiteArn: ""
          acknowledgmentStatus: ""
          shippingAddress:
            country: ""
            emailAddress: ""
            phoneNumber: ""
            stateOrProvince: ""
            street3: ""
            city: ""
            postalCode: ""
            name: ""
            company: ""
            street1: ""
            street2: ""
          orderArn: ""
      properties:
        order:
          $ref: '#/components/schemas/AcknowledgeOrderReceiptResponse_order'
      required:
      - order
      title: AcknowledgeOrderReceiptResponse
      type: object
    ResourceNotFoundException: {}
    ValidationException: {}
    InternalServerException: {}
    ActivateDeviceIdentifierResponse:
      example:
        deviceIdentifier:
          trafficGroupArn: ""
          createdAt: ""
          networkArn: ""
          deviceIdentifierArn: ""
          iccid: ""
          vendor: ""
          imsi: ""
          orderArn: ""
          status: ""
        tags: ""
      properties:
        deviceIdentifier:
          $ref: '#/components/schemas/ActivateDeviceIdentifierResponse_deviceIdentifier'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tags on the device identifier. '
          title: tags
      required:
      - deviceIdentifier
      title: ActivateDeviceIdentifierResponse
      type: object
    ActivateNetworkSiteResponse:
      example:
        networkSite:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          availabilityZoneId: ""
          currentPlan:
            options: ""
            resourceDefinitions: ""
          networkSiteArn: ""
          description: ""
          networkSiteName: ""
          pendingPlan:
            options: ""
            resourceDefinitions: ""
          availabilityZone: ""
          status: ""
      properties:
        networkSite:
          $ref: '#/components/schemas/ActivateNetworkSiteResponse_networkSite'
      title: ActivateNetworkSiteResponse
      type: object
    Boolean:
      type: boolean
    CommitmentLength:
      enum:
      - SIXTY_DAYS
      - ONE_YEAR
      - THREE_YEARS
      title: CommitmentLength
      type: string
    AddressContent:
      format: password
      maxLength: 1024
      minLength: 1
      type: string
    ConfigureAccessPointResponse:
      example:
        accessPoint:
          serialNumber: ""
          description: ""
          health: ""
          type: ""
          networkResourceArn: ""
          commitmentInformation:
            commitmentConfiguration:
              commitmentLength: ""
              automaticRenewal: ""
            expiresOn: ""
            startAt: ""
          createdAt: ""
          networkArn: ""
          statusReason: ""
          returnInformation:
            returnReason: ""
            shippingAddress:
              country: ""
              emailAddress: ""
              phoneNumber: ""
              stateOrProvince: ""
              street3: ""
              city: ""
              postalCode: ""
              name: ""
              company: ""
              street1: ""
              street2: ""
            shippingLabel: ""
            replacementOrderArn: ""
          vendor: ""
          networkSiteArn: ""
          attributes: ""
          model: ""
          position:
            elevation: ""
            latitude: ""
            elevationReference: ""
            elevationUnit: ""
            longitude: ""
          orderArn: ""
          status: ""
      properties:
        accessPoint:
          $ref: '#/components/schemas/ConfigureAccessPointResponse_accessPoint'
      required:
      - accessPoint
      title: ConfigureAccessPointResponse
      type: object
    Double:
      format: double
      type: number
    ElevationReference:
      enum:
      - AGL
      - AMSL
      title: ElevationReference
      type: string
    ElevationUnit:
      enum:
      - FEET
      title: ElevationUnit
      type: string
    CreateNetworkResponse:
      example:
        network:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          networkName: ""
          description: ""
          status: ""
        tags: ""
      properties:
        network:
          $ref: '#/components/schemas/CreateNetworkResponse_network'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network tags. '
          title: tags
      required:
      - network
      title: CreateNetworkResponse
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^[^\\x00-\\x1f\\x22]*$"
      title: TagValue
      type: string
    LimitExceededException: {}
    CreateNetworkSiteResponse:
      example:
        networkSite:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          availabilityZoneId: ""
          currentPlan:
            options: ""
            resourceDefinitions: ""
          networkSiteArn: ""
          description: ""
          networkSiteName: ""
          pendingPlan:
            options: ""
            resourceDefinitions: ""
          availabilityZone: ""
          status: ""
        tags: ""
      properties:
        networkSite:
          $ref: '#/components/schemas/ActivateNetworkSiteResponse_networkSite'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network site tags. '
          title: tags
      title: CreateNetworkSiteResponse
      type: object
    Options:
      items:
        $ref: '#/components/schemas/NameValuePair'
      type: array
    NetworkResourceDefinitions:
      items:
        $ref: '#/components/schemas/NetworkResourceDefinition'
      type: array
    DeactivateDeviceIdentifierResponse:
      example:
        deviceIdentifier:
          trafficGroupArn: ""
          createdAt: ""
          networkArn: ""
          deviceIdentifierArn: ""
          iccid: ""
          vendor: ""
          imsi: ""
          orderArn: ""
          status: ""
      properties:
        deviceIdentifier:
          $ref: '#/components/schemas/ActivateDeviceIdentifierResponse_deviceIdentifier'
      required:
      - deviceIdentifier
      title: DeactivateDeviceIdentifierResponse
      type: object
    DeleteNetworkResponse:
      example:
        network:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          networkName: ""
          description: ""
          status: ""
      properties:
        network:
          $ref: '#/components/schemas/CreateNetworkResponse_network'
      required:
      - network
      title: DeleteNetworkResponse
      type: object
    AccessDeniedException: {}
    DeleteNetworkSiteResponse:
      example:
        networkSite:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          availabilityZoneId: ""
          currentPlan:
            options: ""
            resourceDefinitions: ""
          networkSiteArn: ""
          description: ""
          networkSiteName: ""
          pendingPlan:
            options: ""
            resourceDefinitions: ""
          availabilityZone: ""
          status: ""
      properties:
        networkSite:
          $ref: '#/components/schemas/ActivateNetworkSiteResponse_networkSite'
      title: DeleteNetworkSiteResponse
      type: object
    GetDeviceIdentifierResponse:
      example:
        deviceIdentifier:
          trafficGroupArn: ""
          createdAt: ""
          networkArn: ""
          deviceIdentifierArn: ""
          iccid: ""
          vendor: ""
          imsi: ""
          orderArn: ""
          status: ""
        tags: ""
      properties:
        deviceIdentifier:
          $ref: '#/components/schemas/ActivateDeviceIdentifierResponse_deviceIdentifier'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The device identifier tags. '
          title: tags
      title: GetDeviceIdentifierResponse
      type: object
    GetNetworkResponse:
      example:
        network:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          networkName: ""
          description: ""
          status: ""
        tags: ""
      properties:
        network:
          $ref: '#/components/schemas/CreateNetworkResponse_network'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network tags. '
          title: tags
      required:
      - network
      title: GetNetworkResponse
      type: object
    GetNetworkResourceResponse:
      example:
        networkResource:
          serialNumber: ""
          description: ""
          health: ""
          type: ""
          networkResourceArn: ""
          commitmentInformation:
            commitmentConfiguration:
              commitmentLength: ""
              automaticRenewal: ""
            expiresOn: ""
            startAt: ""
          createdAt: ""
          networkArn: ""
          statusReason: ""
          returnInformation:
            returnReason: ""
            shippingAddress:
              country: ""
              emailAddress: ""
              phoneNumber: ""
              stateOrProvince: ""
              street3: ""
              city: ""
              postalCode: ""
              name: ""
              company: ""
              street1: ""
              street2: ""
            shippingLabel: ""
            replacementOrderArn: ""
          vendor: ""
          networkSiteArn: ""
          attributes: ""
          model: ""
          position:
            elevation: ""
            latitude: ""
            elevationReference: ""
            elevationUnit: ""
            longitude: ""
          orderArn: ""
          status: ""
        tags: ""
      properties:
        networkResource:
          $ref: '#/components/schemas/ConfigureAccessPointResponse_accessPoint'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network resource tags. '
          title: tags
      required:
      - networkResource
      title: GetNetworkResourceResponse
      type: object
    GetNetworkSiteResponse:
      example:
        networkSite:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          availabilityZoneId: ""
          currentPlan:
            options: ""
            resourceDefinitions: ""
          networkSiteArn: ""
          description: ""
          networkSiteName: ""
          pendingPlan:
            options: ""
            resourceDefinitions: ""
          availabilityZone: ""
          status: ""
        tags: ""
      properties:
        networkSite:
          $ref: '#/components/schemas/ActivateNetworkSiteResponse_networkSite'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network site tags. '
          title: tags
      title: GetNetworkSiteResponse
      type: object
    GetOrderResponse:
      example:
        order:
          createdAt: ""
          networkArn: ""
          trackingInformation: ""
          orderedResources: ""
          networkSiteArn: ""
          acknowledgmentStatus: ""
          shippingAddress:
            country: ""
            emailAddress: ""
            phoneNumber: ""
            stateOrProvince: ""
            street3: ""
            city: ""
            postalCode: ""
            name: ""
            company: ""
            street1: ""
            street2: ""
          orderArn: ""
        tags: ""
      properties:
        order:
          $ref: '#/components/schemas/AcknowledgeOrderReceiptResponse_order'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The order tags. '
          title: tags
      required:
      - order
      title: GetOrderResponse
      type: object
    ListDeviceIdentifiersResponse:
      example:
        nextToken: ""
        deviceIdentifiers: ""
      properties:
        deviceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierList'
          - description: Information about the device identifiers.
          title: deviceIdentifiers
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
          title: nextToken
      title: ListDeviceIdentifiersResponse
      type: object
    DeviceIdentifierFilterValues:
      items:
        $ref: '#/components/schemas/String'
      title: DeviceIdentifierFilterValues
      type: array
    ListNetworkResourcesResponse:
      example:
        networkResources: ""
        nextToken: ""
      properties:
        networkResources:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceList'
          - description: Information about network resources.
          title: networkResources
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
          title: nextToken
      title: ListNetworkResourcesResponse
      type: object
    NetworkResourceFilterValues:
      items:
        $ref: '#/components/schemas/String'
      title: NetworkResourceFilterValues
      type: array
    ListNetworkSitesResponse:
      example:
        networkSites: ""
        nextToken: ""
      properties:
        networkSites:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteList'
          - description: Information about the network sites.
          title: networkSites
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
          title: nextToken
      title: ListNetworkSitesResponse
      type: object
    NetworkSiteFilterValues:
      items:
        $ref: '#/components/schemas/String'
      title: NetworkSiteFilterValues
      type: array
    ListNetworksResponse:
      example:
        nextToken: ""
        networks: ""
      properties:
        networks:
          allOf:
          - $ref: '#/components/schemas/NetworkList'
          - description: The networks.
          title: networks
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
          title: nextToken
      title: ListNetworksResponse
      type: object
    NetworkFilterValues:
      items:
        $ref: '#/components/schemas/String'
      title: NetworkFilterValues
      type: array
    ListOrdersResponse:
      example:
        nextToken: ""
        orders: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
          title: nextToken
        orders:
          allOf:
          - $ref: '#/components/schemas/OrderList'
          - description: Information about the orders.
          title: orders
      title: ListOrdersResponse
      type: object
    OrderFilterValues:
      items:
        $ref: '#/components/schemas/String'
      title: OrderFilterValues
      type: array
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The resource tags.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ThrottlingException: {}
    PingResponse:
      example:
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the health of the service.
          title: status
      title: PingResponse
      type: object
    StartNetworkResourceUpdateResponse:
      example:
        networkResource:
          serialNumber: ""
          description: ""
          health: ""
          type: ""
          networkResourceArn: ""
          commitmentInformation:
            commitmentConfiguration:
              commitmentLength: ""
              automaticRenewal: ""
            expiresOn: ""
            startAt: ""
          createdAt: ""
          networkArn: ""
          statusReason: ""
          returnInformation:
            returnReason: ""
            shippingAddress:
              country: ""
              emailAddress: ""
              phoneNumber: ""
              stateOrProvince: ""
              street3: ""
              city: ""
              postalCode: ""
              name: ""
              company: ""
              street1: ""
              street2: ""
            shippingLabel: ""
            replacementOrderArn: ""
          vendor: ""
          networkSiteArn: ""
          attributes: ""
          model: ""
          position:
            elevation: ""
            latitude: ""
            elevationReference: ""
            elevationUnit: ""
            longitude: ""
          orderArn: ""
          status: ""
      properties:
        networkResource:
          $ref: '#/components/schemas/StartNetworkResourceUpdateResponse_networkResource'
      title: StartNetworkResourceUpdateResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[^\\x00-\\x1f\\x22]+$"
      title: TagKey
      type: string
    UpdateNetworkSiteResponse:
      example:
        networkSite:
          createdAt: ""
          networkArn: ""
          statusReason: ""
          availabilityZoneId: ""
          currentPlan:
            options: ""
            resourceDefinitions: ""
          networkSiteArn: ""
          description: ""
          networkSiteName: ""
          pendingPlan:
            options: ""
            resourceDefinitions: ""
          availabilityZone: ""
          status: ""
        tags: ""
      properties:
        networkSite:
          $ref: '#/components/schemas/ActivateNetworkSiteResponse_networkSite'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The network site tags. '
          title: tags
      title: UpdateNetworkSiteResponse
      type: object
    Arn:
      pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
      type: string
    AcknowledgeOrderReceiptRequest:
      example:
        orderArn: ""
      properties:
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the order.
      required:
      - orderArn
      title: AcknowledgeOrderReceiptRequest
      type: object
    Order:
      description: Information about an order.
      properties:
        acknowledgmentStatus:
          allOf:
          - $ref: '#/components/schemas/AcknowledgmentStatus'
          - description: The acknowledgement status of the order.
          title: acknowledgmentStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the order.
          title: createdAt
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network associated
              with this order.
          title: networkArn
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site associated
              with this order.
          title: networkSiteArn
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the order.
          title: orderArn
        orderedResources:
          allOf:
          - $ref: '#/components/schemas/OrderedResourceDefinitions'
          - description: A list of the network resources placed in the order.
          title: orderedResources
        shippingAddress:
          $ref: '#/components/schemas/Order_shippingAddress'
        trackingInformation:
          allOf:
          - $ref: '#/components/schemas/TrackingInformationList'
          - description: The tracking information of the order.
          title: trackingInformation
      title: Order
      type: object
    AcknowledgmentStatus:
      enum:
      - ACKNOWLEDGING
      - ACKNOWLEDGED
      - UNACKNOWLEDGED
      title: AcknowledgmentStatus
      type: string
    ClientToken:
      maxLength: 100
      minLength: 1
      type: string
    ActivateDeviceIdentifierRequest:
      example:
        deviceIdentifierArn: ""
        clientToken: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the device identifier.
      required:
      - deviceIdentifierArn
      title: ActivateDeviceIdentifierRequest
      type: object
    DeviceIdentifier:
      description: Information about a subscriber of a device that can use a network.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of this device identifier.
          title: createdAt
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the device identifier.
          title: deviceIdentifierArn
        iccid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Integrated Circuit Card Identifier of the device identifier.
          title: iccid
        imsi:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierImsiString'
          - description: The International Mobile Subscriber Identity of the device
              identifier.
          title: imsi
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network on which the
              device identifier appears.
          title: networkArn
        orderArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the order used to purchase
              the device identifier.
          title: orderArn
        status:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierStatus'
          - description: The status of the device identifier.
          title: status
        trafficGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the traffic group to which
              the device identifier belongs.
          title: trafficGroupArn
        vendor:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The vendor of the device identifier.
          title: vendor
      title: DeviceIdentifier
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    CommitmentConfiguration:
      description: "<p>Determines the duration and renewal status of the commitment\
        \ period for a radio unit.</p> <p>For pricing, see <a href=\"http://aws.amazon.com/private5g/pricing\"\
        >Amazon Web Services Private 5G Pricing</a>.</p>"
      properties:
        automaticRenewal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Determines whether the commitment period for a radio\
              \ unit is set to automatically renew for an additional 1 year after\
              \ your current commitment period expires.</p> <p>Set to <code>True</code>,\
              \ if you want your commitment period to automatically renew. Set to\
              \ <code>False</code> if you do not want your commitment to automatically\
              \ renew.</p> <p>You can do the following:</p> <ul> <li> <p>Set a 1-year\
              \ commitment to automatically renew for an additional 1 year. The hourly\
              \ rate for the additional year will continue to be the same as your\
              \ existing 1-year rate.</p> </li> <li> <p>Set a 3-year commitment to\
              \ automatically renew for an additional 1 year. The hourly rate for\
              \ the additional year will continue to be the same as your existing\
              \ 3-year rate.</p> </li> <li> <p>Turn off a previously-enabled automatic\
              \ renewal on a 1-year or 3-year commitment.</p> </li> </ul> <p>You cannot\
              \ use the automatic-renewal option for a 60-day commitment.</p>"
          title: automaticRenewal
        commitmentLength:
          allOf:
          - $ref: '#/components/schemas/CommitmentLength'
          - description: "The duration of the commitment period for the radio unit.\
              \ You can choose a 60-day, 1-year, or 3-year period."
          title: commitmentLength
      required:
      - automaticRenewal
      - commitmentLength
      title: CommitmentConfiguration
      type: object
    Address:
      description: Information about an address.
      properties:
        city:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The city for this address.
          title: city
        company:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The company name for this address.
          title: company
        country:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The country for this address.
          title: country
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's email address.
          title: emailAddress
        name:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's name for this address.
          title: name
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's phone number.
          title: phoneNumber
        postalCode:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The postal code for this address.
          title: postalCode
        stateOrProvince:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The state or province for this address.
          title: stateOrProvince
        street1:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The first line of the street address.
          title: street1
        street2:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The second line of the street address.
          title: street2
        street3:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The third line of the street address.
          title: street3
      required:
      - city
      - country
      - name
      - postalCode
      - stateOrProvince
      - street1
      title: Address
      type: object
    ActivateNetworkSiteRequest:
      example:
        clientToken: ""
        networkSiteArn: ""
        commitmentConfiguration:
          commitmentLength: ""
          automaticRenewal: ""
        shippingAddress:
          country: ""
          emailAddress: ""
          phoneNumber: ""
          stateOrProvince: ""
          street3: ""
          city: ""
          postalCode: ""
          name: ""
          company: ""
          street1: ""
          street2: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        commitmentConfiguration:
          $ref: '#/components/schemas/ActivateNetworkSiteRequest_commitmentConfiguration'
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site.
        shippingAddress:
          $ref: '#/components/schemas/ActivateNetworkSiteRequest_shippingAddress'
      required:
      - networkSiteArn
      - shippingAddress
      title: ActivateNetworkSiteRequest
      type: object
    NetworkSite:
      description: Information about a network site.
      properties:
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The parent Availability Zone for the network site. '
          title: availabilityZone
        availabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The parent Availability Zone ID for the network site. '
          title: availabilityZoneId
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the network site.
          title: createdAt
        currentPlan:
          $ref: '#/components/schemas/NetworkSite_currentPlan'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the network site.
          title: description
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network to which the
              network site belongs.
          title: networkArn
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site.
          title: networkSiteArn
        networkSiteName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the network site.
          title: networkSiteName
        pendingPlan:
          $ref: '#/components/schemas/NetworkSite_pendingPlan'
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteStatus'
          - description: The status of the network site.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status reason of the network site.
          title: statusReason
      required:
      - networkArn
      - networkSiteArn
      - networkSiteName
      - status
      title: NetworkSite
      type: object
    Timestamp:
      format: date-time
      type: string
    CommitmentInformation:
      description: "Shows the duration, the date and time that the contract started\
        \ and ends, and the renewal status of the commitment period for the radio\
        \ unit."
      properties:
        commitmentConfiguration:
          $ref: '#/components/schemas/CommitmentInformation_commitmentConfiguration'
        expiresOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the commitment period ends. If you\
              \ do not cancel or renew the commitment before the expiration date,\
              \ you will be billed at the 60-day-commitment rate."
          title: expiresOn
        startAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the commitment period started.
          title: startAt
      required:
      - commitmentConfiguration
      title: CommitmentInformation
      type: object
    ConfigureAccessPointRequestCpiSecretKeyString:
      format: password
      maxLength: 100000
      minLength: 1
      type: string
    ConfigureAccessPointRequestCpiUserIdString:
      format: password
      maxLength: 4096
      minLength: 1
      type: string
    ConfigureAccessPointRequestCpiUserPasswordString:
      format: password
      maxLength: 4096
      minLength: 1
      type: string
    ConfigureAccessPointRequestCpiUsernameString:
      format: password
      maxLength: 4096
      minLength: 1
      type: string
    Position:
      description: Information about a position.
      properties:
        elevation:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The elevation of the equipment at this position.
          title: elevation
        elevationReference:
          allOf:
          - $ref: '#/components/schemas/ElevationReference'
          - description: The reference point from which elevation is reported.
          title: elevationReference
        elevationUnit:
          allOf:
          - $ref: '#/components/schemas/ElevationUnit'
          - description: The units used to measure the elevation of the position.
          title: elevationUnit
        latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The latitude of the position.
          title: latitude
        longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The longitude of the position.
          title: longitude
      title: Position
      type: object
    ConfigureAccessPointRequest:
      example:
        accessPointArn: ""
        cpiUserId: ""
        cpiUsername: ""
        position:
          elevation: ""
          latitude: ""
          elevationReference: ""
          elevationUnit: ""
          longitude: ""
        cpiUserPassword: ""
        cpiSecretKey: ""
      properties:
        accessPointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network resource.
        cpiSecretKey:
          allOf:
          - $ref: '#/components/schemas/ConfigureAccessPointRequestCpiSecretKeyString'
          - description: 'A Base64 encoded string of the CPI certificate associated
              with the CPI user who is certifying the coordinates of the network resource. '
        cpiUserId:
          allOf:
          - $ref: '#/components/schemas/ConfigureAccessPointRequestCpiUserIdString'
          - description: 'The CPI user ID of the CPI user who is certifying the coordinates
              of the network resource. '
        cpiUserPassword:
          allOf:
          - $ref: '#/components/schemas/ConfigureAccessPointRequestCpiUserPasswordString'
          - description: The CPI password associated with the CPI certificate in <code>cpiSecretKey</code>.
        cpiUsername:
          allOf:
          - $ref: '#/components/schemas/ConfigureAccessPointRequestCpiUsernameString'
          - description: The CPI user name of the CPI user who is certifying the coordinates
              of the radio unit.
        position:
          $ref: '#/components/schemas/ConfigureAccessPointRequest_position'
      required:
      - accessPointArn
      title: ConfigureAccessPointRequest
      type: object
    NetworkResource:
      description: Information about a network resource.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/NameValuePairs'
          - description: The attributes of the network resource.
          title: attributes
        commitmentInformation:
          $ref: '#/components/schemas/NetworkResource_commitmentInformation'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the network resource.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the network resource.
          title: description
        health:
          allOf:
          - $ref: '#/components/schemas/HealthStatus'
          - description: The health of the network resource.
          title: health
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The model of the network resource.
          title: model
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network on which this
              network resource appears.
          title: networkArn
        networkResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network resource.
          title: networkResourceArn
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site on which
              this network resource appears.
          title: networkSiteArn
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the order used to purchase
              this network resource.
          title: orderArn
        position:
          $ref: '#/components/schemas/ConfigureAccessPointRequest_position'
        returnInformation:
          $ref: '#/components/schemas/NetworkResource_returnInformation'
        serialNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The serial number of the network resource.
          title: serialNumber
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceStatus'
          - description: The status of the network resource.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status reason of the network resource.
          title: statusReason
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceType'
          - description: The type of the network resource.
          title: type
        vendor:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The vendor of the network resource.
          title: vendor
      title: NetworkResource
      type: object
    Description:
      maxLength: 100
      minLength: 0
      type: string
    Name:
      maxLength: 64
      minLength: 1
      pattern: "^[0-9a-zA-Z-]*$"
      type: string
    CreateNetworkRequest:
      example:
        clientToken: ""
        networkName: ""
        description: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the network.
        networkName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the network. You can't change the name after
              you create the network.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tags to apply to the network. '
      required:
      - networkName
      title: CreateNetworkRequest
      type: object
    Network:
      description: Information about a network.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the network.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the network.
          title: description
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
          title: networkArn
        networkName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the network.
          title: networkName
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkStatus'
          - description: The status of the network.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status reason of the network.
          title: statusReason
      required:
      - networkArn
      - networkName
      - status
      title: Network
      type: object
    String:
      title: String
      type: string
    SitePlan:
      description: Information about a site plan.
      properties:
        options:
          allOf:
          - $ref: '#/components/schemas/Options'
          - description: The options of the plan.
          title: options
        resourceDefinitions:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitions'
          - description: The resource definitions of the plan.
          title: resourceDefinitions
      title: SitePlan
      type: object
    CreateNetworkSiteRequest:
      example:
        networkArn: ""
        availabilityZoneId: ""
        clientToken: ""
        description: ""
        networkSiteName: ""
        pendingPlan:
          options: ""
          resourceDefinitions: ""
        availabilityZone: ""
        tags: ""
      properties:
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Availability Zone that is the parent of this site. You
              can't change the Availability Zone after you create the site.
        availabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the Availability Zone that is the parent of this
              site. You can't change the Availability Zone after you create the site.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the site.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
        networkSiteName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the site. You can't change the name after you
              create the site.
        pendingPlan:
          $ref: '#/components/schemas/CreateNetworkSiteRequest_pendingPlan'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tags to apply to the network site. '
      required:
      - networkArn
      - networkSiteName
      title: CreateNetworkSiteRequest
      type: object
    DeactivateDeviceIdentifierRequest:
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the device identifier.
      required:
      - deviceIdentifierArn
      title: DeactivateDeviceIdentifierRequest
      type: object
    DeleteNetworkRequest:
      properties: {}
      title: DeleteNetworkRequest
      type: object
    DeleteNetworkSiteRequest:
      properties: {}
      title: DeleteNetworkSiteRequest
      type: object
    DeviceIdentifierImsiString:
      format: password
      pattern: "^[0-9]{15}$"
      type: string
    DeviceIdentifierStatus:
      enum:
      - ACTIVE
      - INACTIVE
      title: DeviceIdentifierStatus
      type: string
    DeviceIdentifierFilterKeys:
      enum:
      - STATUS
      - ORDER
      - TRAFFIC_GROUP
      type: string
    DeviceIdentifierFilters:
      additionalProperties:
        $ref: '#/components/schemas/DeviceIdentifierFilterValues'
      type: object
    DeviceIdentifierList:
      items:
        $ref: '#/components/schemas/DeviceIdentifier'
      type: array
    GetDeviceIdentifierRequest:
      properties: {}
      title: GetDeviceIdentifierRequest
      type: object
    GetNetworkRequest:
      properties: {}
      title: GetNetworkRequest
      type: object
    GetNetworkResourceRequest:
      properties: {}
      title: GetNetworkResourceRequest
      type: object
    GetNetworkSiteRequest:
      properties: {}
      title: GetNetworkSiteRequest
      type: object
    GetOrderRequest:
      properties: {}
      title: GetOrderRequest
      type: object
    HealthStatus:
      enum:
      - INITIAL
      - HEALTHY
      - UNHEALTHY
      title: HealthStatus
      type: string
    ListDeviceIdentifiersRequestMaxResultsInteger:
      maximum: 20
      minimum: 1
      type: integer
    PaginationToken:
      type: string
    ListDeviceIdentifiersRequest:
      example:
        networkArn: ""
        maxResults: ""
        startToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierFilters'
          - description: "<p>The filters.</p> <ul> <li> <p> <code>ORDER</code> - The\
              \ Amazon Resource Name (ARN) of the order.</p> </li> <li> <p> <code>STATUS</code>\
              \ - The status (<code>ACTIVE</code> | <code>INACTIVE</code>).</p> </li>\
              \ <li> <p> <code>TRAFFIC_GROUP</code> - The Amazon Resource Name (ARN)\
              \ of the traffic group.</p> </li> </ul> <p>Filter values are case sensitive.\
              \ If you specify multiple values for a filter, the values are joined\
              \ with an <code>OR</code>, and the request returns all results that\
              \ match any of the specified values.</p>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListDeviceIdentifiersRequestMaxResultsInteger'
          - description: The maximum number of results to return.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
      required:
      - networkArn
      title: ListDeviceIdentifiersRequest
      type: object
    NetworkResourceFilters:
      additionalProperties:
        $ref: '#/components/schemas/NetworkResourceFilterValues'
      type: object
    ListNetworkResourcesRequestMaxResultsInteger:
      maximum: 20
      minimum: 1
      type: integer
    ListNetworkResourcesRequest:
      example:
        networkArn: ""
        maxResults: ""
        startToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceFilters'
          - description: "<p>The filters.</p> <ul> <li> <p> <code>ORDER</code> - The\
              \ Amazon Resource Name (ARN) of the order.</p> </li> <li> <p> <code>STATUS</code>\
              \ - The status (<code>AVAILABLE</code> | <code>DELETED</code> | <code>DELETING</code>\
              \ | <code>PENDING</code> | <code>PENDING_RETURN</code> | <code>PROVISIONING</code>\
              \ | <code>SHIPPED</code>).</p> </li> </ul> <p>Filter values are case\
              \ sensitive. If you specify multiple values for a filter, the values\
              \ are joined with an <code>OR</code>, and the request returns all results\
              \ that match any of the specified values.</p>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListNetworkResourcesRequestMaxResultsInteger'
          - description: The maximum number of results to return.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
      required:
      - networkArn
      title: ListNetworkResourcesRequest
      type: object
    NetworkResourceList:
      items:
        $ref: '#/components/schemas/NetworkResource'
      type: array
    NetworkSiteFilters:
      additionalProperties:
        $ref: '#/components/schemas/NetworkSiteFilterValues'
      type: object
    ListNetworkSitesRequestMaxResultsInteger:
      maximum: 20
      minimum: 1
      type: integer
    ListNetworkSitesRequest:
      example:
        networkArn: ""
        maxResults: ""
        startToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteFilters'
          - description: "<p>The filters. Add filters to your request to return a\
              \ more specific list of results. Use filters to match the status of\
              \ the network sites.</p> <ul> <li> <p> <code>STATUS</code> - The status\
              \ (<code>AVAILABLE</code> | <code>CREATED</code> | <code>DELETED</code>\
              \ | <code>DEPROVISIONING</code> | <code>PROVISIONING</code>).</p> </li>\
              \ </ul> <p>Filter values are case sensitive. If you specify multiple\
              \ values for a filter, the values are joined with an <code>OR</code>,\
              \ and the request returns all results that match any of the specified\
              \ values.</p>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListNetworkSitesRequestMaxResultsInteger'
          - description: The maximum number of results to return.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
      required:
      - networkArn
      title: ListNetworkSitesRequest
      type: object
    NetworkSiteList:
      items:
        $ref: '#/components/schemas/NetworkSite'
      type: array
    NetworkFilters:
      additionalProperties:
        $ref: '#/components/schemas/NetworkFilterValues'
      type: object
    ListNetworksRequestMaxResultsInteger:
      maximum: 20
      minimum: 1
      type: integer
    ListNetworksRequest:
      example:
        maxResults: ""
        startToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkFilters'
          - description: "<p>The filters.</p> <ul> <li> <p> <code>STATUS</code> -\
              \ The status (<code>AVAILABLE</code> | <code>CREATED</code> | <code>DELETED</code>\
              \ | <code>DEPROVISIONING</code> | <code>PROVISIONING</code>).</p> </li>\
              \ </ul> <p>Filter values are case sensitive. If you specify multiple\
              \ values for a filter, the values are joined with an <code>OR</code>,\
              \ and the request returns all results that match any of the specified\
              \ values.</p>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListNetworksRequestMaxResultsInteger'
          - description: The maximum number of results to return.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
      title: ListNetworksRequest
      type: object
    NetworkList:
      items:
        $ref: '#/components/schemas/Network'
      type: array
    OrderFilters:
      additionalProperties:
        $ref: '#/components/schemas/OrderFilterValues'
      type: object
    ListOrdersRequestMaxResultsInteger:
      maximum: 20
      minimum: 1
      type: integer
    ListOrdersRequest:
      example:
        networkArn: ""
        maxResults: ""
        startToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/OrderFilters'
          - description: "<p>The filters.</p> <ul> <li> <p> <code>NETWORK_SITE</code>\
              \ - The Amazon Resource Name (ARN) of the network site.</p> </li> <li>\
              \ <p> <code>STATUS</code> - The status (<code>ACKNOWLEDGING</code> |\
              \ <code>ACKNOWLEDGED</code> | <code>UNACKNOWLEDGED</code>).</p> </li>\
              \ </ul> <p>Filter values are case sensitive. If you specify multiple\
              \ values for a filter, the values are joined with an <code>OR</code>,\
              \ and the request returns all results that match any of the specified\
              \ values.</p>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListOrdersRequestMaxResultsInteger'
          - description: The maximum number of results to return.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token for the next page of results.
      required:
      - networkArn
      title: ListOrdersRequest
      type: object
    OrderList:
      items:
        $ref: '#/components/schemas/Order'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    NameValuePair:
      description: Information about a name/value pair.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the pair.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the pair.
          title: value
      required:
      - name
      title: NameValuePair
      type: object
    NameValuePairs:
      items:
        $ref: '#/components/schemas/NameValuePair'
      type: array
    NetworkStatus:
      enum:
      - CREATED
      - PROVISIONING
      - AVAILABLE
      - DEPROVISIONING
      - DELETED
      title: NetworkStatus
      type: string
    NetworkFilterKeys:
      enum:
      - STATUS
      type: string
    ReturnInformation:
      description: Information about a request to return a network resource.
      properties:
        replacementOrderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the replacement order.
          title: replacementOrderArn
        returnReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The reason for the return. If the return request did not\
              \ include a reason for the return, this value is null."
          title: returnReason
        shippingAddress:
          $ref: '#/components/schemas/ReturnInformation_shippingAddress'
        shippingLabel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The URL of the shipping label. The shipping label is available\
              \ for download only if the status of the network resource is <code>PENDING_RETURN</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit\"\
              >Return a radio unit</a>."
          title: shippingLabel
      title: ReturnInformation
      type: object
    NetworkResourceStatus:
      enum:
      - PENDING
      - SHIPPED
      - PROVISIONING
      - PROVISIONED
      - AVAILABLE
      - DELETING
      - PENDING_RETURN
      - DELETED
      - CREATING_SHIPPING_LABEL
      title: NetworkResourceStatus
      type: string
    NetworkResourceType:
      enum:
      - RADIO_UNIT
      title: NetworkResourceType
      type: string
    NetworkResourceDefinitionCountInteger:
      minimum: 0
      type: integer
    NetworkResourceDefinitionType:
      enum:
      - RADIO_UNIT
      - DEVICE_IDENTIFIER
      title: NetworkResourceDefinitionType
      type: string
    NetworkResourceDefinition:
      description: Information about a network resource definition.
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitionCountInteger'
          - description: The count in the network resource definition.
          title: count
        options:
          allOf:
          - $ref: '#/components/schemas/Options'
          - description: The options in the network resource definition.
          title: options
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitionType'
          - description: The type in the network resource definition.
          title: type
      required:
      - count
      - type
      title: NetworkResourceDefinition
      type: object
    NetworkResourceFilterKeys:
      enum:
      - ORDER
      - STATUS
      type: string
    NetworkSiteStatus:
      enum:
      - CREATED
      - PROVISIONING
      - AVAILABLE
      - DEPROVISIONING
      - DELETED
      title: NetworkSiteStatus
      type: string
    NetworkSiteFilterKeys:
      enum:
      - STATUS
      type: string
    OrderedResourceDefinitions:
      items:
        $ref: '#/components/schemas/OrderedResourceDefinition'
      type: array
    TrackingInformationList:
      items:
        $ref: '#/components/schemas/TrackingInformation'
      type: array
    OrderFilterKeys:
      enum:
      - STATUS
      - NETWORK_SITE
      type: string
    OrderedResourceDefinitionCountInteger:
      minimum: 0
      type: integer
    OrderedResourceDefinition:
      description: Details of the network resources in the order.
      properties:
        commitmentConfiguration:
          $ref: '#/components/schemas/OrderedResourceDefinition_commitmentConfiguration'
        count:
          allOf:
          - $ref: '#/components/schemas/OrderedResourceDefinitionCountInteger'
          - description: The number of network resources in the order.
          title: count
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitionType'
          - description: The type of network resource in the order.
          title: type
      required:
      - count
      - type
      title: OrderedResourceDefinition
      type: object
    StartNetworkResourceUpdateRequestReturnReasonString:
      maxLength: 1000
      minLength: 0
      type: string
    UpdateType:
      enum:
      - REPLACE
      - RETURN
      - COMMITMENT
      title: UpdateType
      type: string
    StartNetworkResourceUpdateRequest:
      example:
        returnReason: ""
        commitmentConfiguration:
          commitmentLength: ""
          automaticRenewal: ""
        shippingAddress:
          country: ""
          emailAddress: ""
          phoneNumber: ""
          stateOrProvince: ""
          street3: ""
          city: ""
          postalCode: ""
          name: ""
          company: ""
          street1: ""
          street2: ""
        networkResourceArn: ""
        updateType: ""
      properties:
        commitmentConfiguration:
          $ref: '#/components/schemas/StartNetworkResourceUpdateRequest_commitmentConfiguration'
        networkResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network resource.
        returnReason:
          allOf:
          - $ref: '#/components/schemas/StartNetworkResourceUpdateRequestReturnReasonString'
          - description: The reason for the return. Providing a reason for a return
              is optional.
        shippingAddress:
          $ref: '#/components/schemas/StartNetworkResourceUpdateRequest_shippingAddress'
        updateType:
          allOf:
          - $ref: '#/components/schemas/UpdateType'
          - description: "<p>The update type.</p> <ul> <li> <p> <code>REPLACE</code>\
              \ - Submits a request to replace a defective radio unit. We provide\
              \ a shipping label that you can use for the return process and we ship\
              \ a replacement radio unit to you.</p> </li> <li> <p> <code>RETURN</code>\
              \ - Submits a request to return a radio unit that you no longer need.\
              \ We provide a shipping label that you can use for the return process.</p>\
              \ </li> <li> <p> <code>COMMITMENT</code> - Submits a request to change\
              \ or renew the commitment period. If you choose this value, then you\
              \ must set <a href=\"https://docs.aws.amazon.com/private-networks/latest/APIReference/API_StartNetworkResourceUpdate.html#privatenetworks-StartNetworkResourceUpdate-request-commitmentConfiguration\"\
              > <code>commitmentConfiguration</code> </a>.</p> </li> </ul>"
      required:
      - networkResourceArn
      - updateType
      title: StartNetworkResourceUpdateRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to add to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TrackingInformation:
      description: Information about tracking a shipment.
      properties:
        trackingNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tracking number of the shipment.
          title: trackingNumber
      title: TrackingInformation
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateNetworkSitePlanRequest:
      example:
        clientToken: ""
        networkSiteArn: ""
        pendingPlan:
          options: ""
          resourceDefinitions: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site.
        pendingPlan:
          $ref: '#/components/schemas/UpdateNetworkSitePlanRequest_pendingPlan'
      required:
      - networkSiteArn
      - pendingPlan
      title: UpdateNetworkSitePlanRequest
      type: object
    UpdateNetworkSiteRequest:
      example:
        clientToken: ""
        networkSiteArn: ""
        description: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
              >How to ensure idempotency</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description.
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the network site.
      required:
      - networkSiteArn
      title: UpdateNetworkSiteRequest
      type: object
    AcknowledgeOrderReceipt_request:
      properties:
        orderArn:
          description: The Amazon Resource Name (ARN) of the order.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: orderArn
          type: string
      required:
      - orderArn
      title: AcknowledgeOrderReceipt_request
      type: object
    ActivateDeviceIdentifier_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        deviceIdentifierArn:
          description: The Amazon Resource Name (ARN) of the device identifier.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: deviceIdentifierArn
          type: string
      required:
      - deviceIdentifierArn
      title: ActivateDeviceIdentifier_request
      type: object
    ActivateNetworkSite_request_commitmentConfiguration:
      description: "<p>Determines the duration and renewal status of the commitment\
        \ period for a radio unit.</p> <p>For pricing, see <a href=\"http://aws.amazon.com/private5g/pricing\"\
        >Amazon Web Services Private 5G Pricing</a>.</p>"
      properties:
        automaticRenewal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Determines whether the commitment period for a radio\
              \ unit is set to automatically renew for an additional 1 year after\
              \ your current commitment period expires.</p> <p>Set to <code>True</code>,\
              \ if you want your commitment period to automatically renew. Set to\
              \ <code>False</code> if you do not want your commitment to automatically\
              \ renew.</p> <p>You can do the following:</p> <ul> <li> <p>Set a 1-year\
              \ commitment to automatically renew for an additional 1 year. The hourly\
              \ rate for the additional year will continue to be the same as your\
              \ existing 1-year rate.</p> </li> <li> <p>Set a 3-year commitment to\
              \ automatically renew for an additional 1 year. The hourly rate for\
              \ the additional year will continue to be the same as your existing\
              \ 3-year rate.</p> </li> <li> <p>Turn off a previously-enabled automatic\
              \ renewal on a 1-year or 3-year commitment.</p> </li> </ul> <p>You cannot\
              \ use the automatic-renewal option for a 60-day commitment.</p>"
          title: automaticRenewal
        commitmentLength:
          allOf:
          - $ref: '#/components/schemas/CommitmentLength'
          - description: "The duration of the commitment period for the radio unit.\
              \ You can choose a 60-day, 1-year, or 3-year period."
          title: commitmentLength
      title: ActivateNetworkSite_request_commitmentConfiguration
      type: object
    ActivateNetworkSite_request_shippingAddress:
      description: Information about an address.
      properties:
        city:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The city for this address.
          title: city
        company:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The company name for this address.
          title: company
        country:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The country for this address.
          title: country
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's email address.
          title: emailAddress
        name:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's name for this address.
          title: name
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The recipient's phone number.
          title: phoneNumber
        postalCode:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The postal code for this address.
          title: postalCode
        stateOrProvince:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The state or province for this address.
          title: stateOrProvince
        street1:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The first line of the street address.
          title: street1
        street2:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The second line of the street address.
          title: street2
        street3:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          - description: The third line of the street address.
          title: street3
      title: ActivateNetworkSite_request_shippingAddress
      type: object
    ActivateNetworkSite_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        commitmentConfiguration:
          $ref: '#/components/schemas/ActivateNetworkSite_request_commitmentConfiguration'
        networkSiteArn:
          description: The Amazon Resource Name (ARN) of the network site.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkSiteArn
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ActivateNetworkSite_request_shippingAddress'
      required:
      - networkSiteArn
      - shippingAddress
      title: ActivateNetworkSite_request
      type: object
    ConfigureAccessPoint_request_position:
      description: Information about a position.
      properties:
        elevation:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The elevation of the equipment at this position.
          title: elevation
        elevationReference:
          allOf:
          - $ref: '#/components/schemas/ElevationReference'
          - description: The reference point from which elevation is reported.
          title: elevationReference
        elevationUnit:
          allOf:
          - $ref: '#/components/schemas/ElevationUnit'
          - description: The units used to measure the elevation of the position.
          title: elevationUnit
        latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The latitude of the position.
          title: latitude
        longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The longitude of the position.
          title: longitude
      title: ConfigureAccessPoint_request_position
      type: object
    ConfigureAccessPoint_request:
      properties:
        accessPointArn:
          description: The Amazon Resource Name (ARN) of the network resource.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: accessPointArn
          type: string
        cpiSecretKey:
          description: 'A Base64 encoded string of the CPI certificate associated
            with the CPI user who is certifying the coordinates of the network resource. '
          format: password
          maxLength: 100000
          minLength: 1
          title: cpiSecretKey
          type: string
        cpiUserId:
          description: 'The CPI user ID of the CPI user who is certifying the coordinates
            of the network resource. '
          format: password
          maxLength: 4096
          minLength: 1
          title: cpiUserId
          type: string
        cpiUserPassword:
          description: The CPI password associated with the CPI certificate in <code>cpiSecretKey</code>.
          format: password
          maxLength: 4096
          minLength: 1
          title: cpiUserPassword
          type: string
        cpiUsername:
          description: The CPI user name of the CPI user who is certifying the coordinates
            of the radio unit.
          format: password
          maxLength: 4096
          minLength: 1
          title: cpiUsername
          type: string
        position:
          $ref: '#/components/schemas/ConfigureAccessPoint_request_position'
      required:
      - accessPointArn
      title: ConfigureAccessPoint_request
      type: object
    CreateNetwork_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        description:
          description: The description of the network.
          maxLength: 100
          minLength: 0
          title: description
          type: string
        networkName:
          description: The name of the network. You can't change the name after you
            create the network.
          maxLength: 64
          minLength: 1
          pattern: "^[0-9a-zA-Z-]*$"
          title: networkName
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tags to apply to the network. '
          maxProperties: 50
          minProperties: 1
          title: tags
          type: object
      required:
      - networkName
      title: CreateNetwork_request
      type: object
    CreateNetworkSite_request_pendingPlan:
      description: Information about a site plan.
      properties:
        options:
          allOf:
          - $ref: '#/components/schemas/Options'
          - description: The options of the plan.
          title: options
        resourceDefinitions:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitions'
          - description: The resource definitions of the plan.
          title: resourceDefinitions
      title: CreateNetworkSite_request_pendingPlan
      type: object
    CreateNetworkSite_request:
      properties:
        availabilityZone:
          description: The Availability Zone that is the parent of this site. You
            can't change the Availability Zone after you create the site.
          title: availabilityZone
          type: string
        availabilityZoneId:
          description: The ID of the Availability Zone that is the parent of this
            site. You can't change the Availability Zone after you create the site.
          title: availabilityZoneId
          type: string
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        description:
          description: The description of the site.
          maxLength: 100
          minLength: 0
          title: description
          type: string
        networkArn:
          description: The Amazon Resource Name (ARN) of the network.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkArn
          type: string
        networkSiteName:
          description: The name of the site. You can't change the name after you create
            the site.
          maxLength: 64
          minLength: 1
          pattern: "^[0-9a-zA-Z-]*$"
          title: networkSiteName
          type: string
        pendingPlan:
          $ref: '#/components/schemas/CreateNetworkSite_request_pendingPlan'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tags to apply to the network site. '
          maxProperties: 50
          minProperties: 1
          title: tags
          type: object
      required:
      - networkArn
      - networkSiteName
      title: CreateNetworkSite_request
      type: object
    ListDeviceIdentifiers_request:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/DeviceIdentifierFilterValues'
          description: "<p>The filters.</p> <ul> <li> <p> <code>ORDER</code> - The\
            \ Amazon Resource Name (ARN) of the order.</p> </li> <li> <p> <code>STATUS</code>\
            \ - The status (<code>ACTIVE</code> | <code>INACTIVE</code>).</p> </li>\
            \ <li> <p> <code>TRAFFIC_GROUP</code> - The Amazon Resource Name (ARN)\
            \ of the traffic group.</p> </li> </ul> <p>Filter values are case sensitive.\
            \ If you specify multiple values for a filter, the values are joined with\
            \ an <code>OR</code>, and the request returns all results that match any\
            \ of the specified values.</p>"
          title: filters
          type: object
        maxResults:
          description: The maximum number of results to return.
          maximum: 20
          minimum: 1
          title: maxResults
          type: integer
        networkArn:
          description: The Amazon Resource Name (ARN) of the network.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkArn
          type: string
        startToken:
          description: The token for the next page of results.
          title: startToken
          type: string
      required:
      - networkArn
      title: ListDeviceIdentifiers_request
      type: object
    ListNetworkResources_request:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/NetworkResourceFilterValues'
          description: "<p>The filters.</p> <ul> <li> <p> <code>ORDER</code> - The\
            \ Amazon Resource Name (ARN) of the order.</p> </li> <li> <p> <code>STATUS</code>\
            \ - The status (<code>AVAILABLE</code> | <code>DELETED</code> | <code>DELETING</code>\
            \ | <code>PENDING</code> | <code>PENDING_RETURN</code> | <code>PROVISIONING</code>\
            \ | <code>SHIPPED</code>).</p> </li> </ul> <p>Filter values are case sensitive.\
            \ If you specify multiple values for a filter, the values are joined with\
            \ an <code>OR</code>, and the request returns all results that match any\
            \ of the specified values.</p>"
          title: filters
          type: object
        maxResults:
          description: The maximum number of results to return.
          maximum: 20
          minimum: 1
          title: maxResults
          type: integer
        networkArn:
          description: The Amazon Resource Name (ARN) of the network.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkArn
          type: string
        startToken:
          description: The token for the next page of results.
          title: startToken
          type: string
      required:
      - networkArn
      title: ListNetworkResources_request
      type: object
    ListNetworkSites_request:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/NetworkSiteFilterValues'
          description: "<p>The filters. Add filters to your request to return a more\
            \ specific list of results. Use filters to match the status of the network\
            \ sites.</p> <ul> <li> <p> <code>STATUS</code> - The status (<code>AVAILABLE</code>\
            \ | <code>CREATED</code> | <code>DELETED</code> | <code>DEPROVISIONING</code>\
            \ | <code>PROVISIONING</code>).</p> </li> </ul> <p>Filter values are case\
            \ sensitive. If you specify multiple values for a filter, the values are\
            \ joined with an <code>OR</code>, and the request returns all results\
            \ that match any of the specified values.</p>"
          title: filters
          type: object
        maxResults:
          description: The maximum number of results to return.
          maximum: 20
          minimum: 1
          title: maxResults
          type: integer
        networkArn:
          description: The Amazon Resource Name (ARN) of the network.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkArn
          type: string
        startToken:
          description: The token for the next page of results.
          title: startToken
          type: string
      required:
      - networkArn
      title: ListNetworkSites_request
      type: object
    ListNetworks_request:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/NetworkFilterValues'
          description: "<p>The filters.</p> <ul> <li> <p> <code>STATUS</code> - The\
            \ status (<code>AVAILABLE</code> | <code>CREATED</code> | <code>DELETED</code>\
            \ | <code>DEPROVISIONING</code> | <code>PROVISIONING</code>).</p> </li>\
            \ </ul> <p>Filter values are case sensitive. If you specify multiple values\
            \ for a filter, the values are joined with an <code>OR</code>, and the\
            \ request returns all results that match any of the specified values.</p>"
          title: filters
          type: object
        maxResults:
          description: The maximum number of results to return.
          maximum: 20
          minimum: 1
          title: maxResults
          type: integer
        startToken:
          description: The token for the next page of results.
          title: startToken
          type: string
      title: ListNetworks_request
      type: object
    ListOrders_request:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/OrderFilterValues'
          description: "<p>The filters.</p> <ul> <li> <p> <code>NETWORK_SITE</code>\
            \ - The Amazon Resource Name (ARN) of the network site.</p> </li> <li>\
            \ <p> <code>STATUS</code> - The status (<code>ACKNOWLEDGING</code> | <code>ACKNOWLEDGED</code>\
            \ | <code>UNACKNOWLEDGED</code>).</p> </li> </ul> <p>Filter values are\
            \ case sensitive. If you specify multiple values for a filter, the values\
            \ are joined with an <code>OR</code>, and the request returns all results\
            \ that match any of the specified values.</p>"
          title: filters
          type: object
        maxResults:
          description: The maximum number of results to return.
          maximum: 20
          minimum: 1
          title: maxResults
          type: integer
        networkArn:
          description: The Amazon Resource Name (ARN) of the network.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkArn
          type: string
        startToken:
          description: The token for the next page of results.
          title: startToken
          type: string
      required:
      - networkArn
      title: ListOrders_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the resource.
          maxProperties: 50
          minProperties: 1
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    StartNetworkResourceUpdate_request:
      properties:
        commitmentConfiguration:
          $ref: '#/components/schemas/ActivateNetworkSite_request_commitmentConfiguration'
        networkResourceArn:
          description: The Amazon Resource Name (ARN) of the network resource.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkResourceArn
          type: string
        returnReason:
          description: The reason for the return. Providing a reason for a return
            is optional.
          maxLength: 1000
          minLength: 0
          title: returnReason
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ActivateNetworkSite_request_shippingAddress'
        updateType:
          description: "<p>The update type.</p> <ul> <li> <p> <code>REPLACE</code>\
            \ - Submits a request to replace a defective radio unit. We provide a\
            \ shipping label that you can use for the return process and we ship a\
            \ replacement radio unit to you.</p> </li> <li> <p> <code>RETURN</code>\
            \ - Submits a request to return a radio unit that you no longer need.\
            \ We provide a shipping label that you can use for the return process.</p>\
            \ </li> <li> <p> <code>COMMITMENT</code> - Submits a request to change\
            \ or renew the commitment period. If you choose this value, then you must\
            \ set <a href=\"https://docs.aws.amazon.com/private-networks/latest/APIReference/API_StartNetworkResourceUpdate.html#privatenetworks-StartNetworkResourceUpdate-request-commitmentConfiguration\"\
            > <code>commitmentConfiguration</code> </a>.</p> </li> </ul>"
          enum:
          - REPLACE
          - RETURN
          - COMMITMENT
          title: updateType
          type: string
      required:
      - networkResourceArn
      - updateType
      title: StartNetworkResourceUpdate_request
      type: object
    UpdateNetworkSite_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        description:
          description: The description.
          maxLength: 100
          minLength: 0
          title: description
          type: string
        networkSiteArn:
          description: The Amazon Resource Name (ARN) of the network site.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkSiteArn
          type: string
      required:
      - networkSiteArn
      title: UpdateNetworkSite_request
      type: object
    UpdateNetworkSitePlan_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. For more information, see <a href=\"\
            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\
            >How to ensure idempotency</a>."
          maxLength: 100
          minLength: 1
          title: clientToken
          type: string
        networkSiteArn:
          description: The Amazon Resource Name (ARN) of the network site.
          pattern: "^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$"
          title: networkSiteArn
          type: string
        pendingPlan:
          $ref: '#/components/schemas/CreateNetworkSite_request_pendingPlan'
      required:
      - networkSiteArn
      - pendingPlan
      title: UpdateNetworkSitePlan_request
      type: object
    AcknowledgeOrderReceiptResponse_order:
      allOf:
      - $ref: '#/components/schemas/Order'
      - description: Information about the order.
      example:
        createdAt: ""
        networkArn: ""
        trackingInformation: ""
        orderedResources: ""
        networkSiteArn: ""
        acknowledgmentStatus: ""
        shippingAddress:
          country: ""
          emailAddress: ""
          phoneNumber: ""
          stateOrProvince: ""
          street3: ""
          city: ""
          postalCode: ""
          name: ""
          company: ""
          street1: ""
          street2: ""
        orderArn: ""
      title: AcknowledgeOrderReceiptResponse_order
    ActivateDeviceIdentifierResponse_deviceIdentifier:
      allOf:
      - $ref: '#/components/schemas/DeviceIdentifier'
      - description: Information about the device identifier.
      example:
        trafficGroupArn: ""
        createdAt: ""
        networkArn: ""
        deviceIdentifierArn: ""
        iccid: ""
        vendor: ""
        imsi: ""
        orderArn: ""
        status: ""
      title: ActivateDeviceIdentifierResponse_deviceIdentifier
    ActivateNetworkSiteResponse_networkSite:
      allOf:
      - $ref: '#/components/schemas/NetworkSite'
      - description: Information about the network site.
      example:
        createdAt: ""
        networkArn: ""
        statusReason: ""
        availabilityZoneId: ""
        currentPlan:
          options: ""
          resourceDefinitions: ""
        networkSiteArn: ""
        description: ""
        networkSiteName: ""
        pendingPlan:
          options: ""
          resourceDefinitions: ""
        availabilityZone: ""
        status: ""
      title: ActivateNetworkSiteResponse_networkSite
    ConfigureAccessPointResponse_accessPoint:
      allOf:
      - $ref: '#/components/schemas/NetworkResource'
      - description: Information about the network resource.
      example:
        serialNumber: ""
        description: ""
        health: ""
        type: ""
        networkResourceArn: ""
        commitmentInformation:
          commitmentConfiguration:
            commitmentLength: ""
            automaticRenewal: ""
          expiresOn: ""
          startAt: ""
        createdAt: ""
        networkArn: ""
        statusReason: ""
        returnInformation:
          returnReason: ""
          shippingAddress:
            country: ""
            emailAddress: ""
            phoneNumber: ""
            stateOrProvince: ""
            street3: ""
            city: ""
            postalCode: ""
            name: ""
            company: ""
            street1: ""
            street2: ""
          shippingLabel: ""
          replacementOrderArn: ""
        vendor: ""
        networkSiteArn: ""
        attributes: ""
        model: ""
        position:
          elevation: ""
          latitude: ""
          elevationReference: ""
          elevationUnit: ""
          longitude: ""
        orderArn: ""
        status: ""
      title: ConfigureAccessPointResponse_accessPoint
    CreateNetworkResponse_network:
      allOf:
      - $ref: '#/components/schemas/Network'
      - description: Information about the network.
      example:
        createdAt: ""
        networkArn: ""
        statusReason: ""
        networkName: ""
        description: ""
        status: ""
      title: CreateNetworkResponse_network
    StartNetworkResourceUpdateResponse_networkResource:
      allOf:
      - $ref: '#/components/schemas/NetworkResource'
      - description: The network resource.
      example:
        serialNumber: ""
        description: ""
        health: ""
        type: ""
        networkResourceArn: ""
        commitmentInformation:
          commitmentConfiguration:
            commitmentLength: ""
            automaticRenewal: ""
          expiresOn: ""
          startAt: ""
        createdAt: ""
        networkArn: ""
        statusReason: ""
        returnInformation:
          returnReason: ""
          shippingAddress:
            country: ""
            emailAddress: ""
            phoneNumber: ""
            stateOrProvince: ""
            street3: ""
            city: ""
            postalCode: ""
            name: ""
            company: ""
            street1: ""
            street2: ""
          shippingLabel: ""
          replacementOrderArn: ""
        vendor: ""
        networkSiteArn: ""
        attributes: ""
        model: ""
        position:
          elevation: ""
          latitude: ""
          elevationReference: ""
          elevationUnit: ""
          longitude: ""
        orderArn: ""
        status: ""
      title: StartNetworkResourceUpdateResponse_networkResource
    Order_shippingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The shipping address of the order.
      example:
        country: ""
        emailAddress: ""
        phoneNumber: ""
        stateOrProvince: ""
        street3: ""
        city: ""
        postalCode: ""
        name: ""
        company: ""
        street1: ""
        street2: ""
      title: Order_shippingAddress
    ActivateNetworkSiteRequest_commitmentConfiguration:
      allOf:
      - $ref: '#/components/schemas/CommitmentConfiguration'
      - description: "<p>Determines the duration and renewal status of the commitment\
          \ period for all pending radio units.</p> <p>If you include <code>commitmentConfiguration</code>\
          \ in the <code>ActivateNetworkSiteRequest</code> action, you must specify\
          \ the following:</p> <ul> <li> <p>The commitment period for the radio unit.\
          \ You can choose a 60-day, 1-year, or 3-year period.</p> </li> <li> <p>Whether\
          \ you want your commitment period to automatically renew for one more year\
          \ after your current commitment period expires.</p> </li> </ul> <p>For pricing,\
          \ see <a href=\"http://aws.amazon.com/private5g/pricing\">Amazon Web Services\
          \ Private 5G Pricing</a>.</p> <p>If you do not include <code>commitmentConfiguration</code>\
          \ in the <code>ActivateNetworkSiteRequest</code> action, the commitment\
          \ period is set to 60-days.</p>"
      example:
        commitmentLength: ""
        automaticRenewal: ""
      title: ActivateNetworkSiteRequest_commitmentConfiguration
    ActivateNetworkSiteRequest_shippingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The shipping address of the network site.
      example:
        country: ""
        emailAddress: ""
        phoneNumber: ""
        stateOrProvince: ""
        street3: ""
        city: ""
        postalCode: ""
        name: ""
        company: ""
        street1: ""
        street2: ""
      title: ActivateNetworkSiteRequest_shippingAddress
    NetworkSite_currentPlan:
      allOf:
      - $ref: '#/components/schemas/SitePlan'
      - description: The current plan of the network site.
      example:
        options: ""
        resourceDefinitions: ""
      title: NetworkSite_currentPlan
    NetworkSite_pendingPlan:
      allOf:
      - $ref: '#/components/schemas/SitePlan'
      - description: The pending plan of the network site.
      example:
        options: ""
        resourceDefinitions: ""
      title: NetworkSite_pendingPlan
    CommitmentInformation_commitmentConfiguration:
      allOf:
      - $ref: '#/components/schemas/CommitmentConfiguration'
      - description: The duration and renewal status of the commitment period for
          the radio unit.
      example:
        commitmentLength: ""
        automaticRenewal: ""
      title: CommitmentInformation_commitmentConfiguration
    ConfigureAccessPointRequest_position:
      allOf:
      - $ref: '#/components/schemas/Position'
      - description: The position of the network resource.
      example:
        elevation: ""
        latitude: ""
        elevationReference: ""
        elevationUnit: ""
        longitude: ""
      title: ConfigureAccessPointRequest_position
    NetworkResource_commitmentInformation:
      allOf:
      - $ref: '#/components/schemas/CommitmentInformation'
      - description: "Information about the commitment period for the radio unit.\
          \ Shows the duration, the date and time that the contract started and ends,\
          \ and the renewal status of the commitment period."
      example:
        commitmentConfiguration:
          commitmentLength: ""
          automaticRenewal: ""
        expiresOn: ""
        startAt: ""
      title: NetworkResource_commitmentInformation
    NetworkResource_returnInformation:
      allOf:
      - $ref: '#/components/schemas/ReturnInformation'
      - description: Information about a request to return the network resource.
      example:
        returnReason: ""
        shippingAddress:
          country: ""
          emailAddress: ""
          phoneNumber: ""
          stateOrProvince: ""
          street3: ""
          city: ""
          postalCode: ""
          name: ""
          company: ""
          street1: ""
          street2: ""
        shippingLabel: ""
        replacementOrderArn: ""
      title: NetworkResource_returnInformation
    CreateNetworkSiteRequest_pendingPlan:
      allOf:
      - $ref: '#/components/schemas/SitePlan'
      - description: Information about the pending plan for this site.
      example:
        options: ""
        resourceDefinitions: ""
      title: CreateNetworkSiteRequest_pendingPlan
    ReturnInformation_shippingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The shipping address.
      example:
        country: ""
        emailAddress: ""
        phoneNumber: ""
        stateOrProvince: ""
        street3: ""
        city: ""
        postalCode: ""
        name: ""
        company: ""
        street1: ""
        street2: ""
      title: ReturnInformation_shippingAddress
    OrderedResourceDefinition_commitmentConfiguration:
      allOf:
      - $ref: '#/components/schemas/CommitmentConfiguration'
      - description: The duration and renewal status of the commitment period for
          each radio unit in the order. Does not show details if the resource type
          is DEVICE_IDENTIFIER.
      title: OrderedResourceDefinition_commitmentConfiguration
    StartNetworkResourceUpdateRequest_commitmentConfiguration:
      allOf:
      - $ref: '#/components/schemas/CommitmentConfiguration'
      - description: "<p>Use this action to extend and automatically renew the commitment\
          \ period for the radio unit. You can do the following:</p> <ul> <li> <p>Change\
          \ a 60-day commitment to a 1-year or 3-year commitment. The change is immediate\
          \ and the hourly rate decreases to the rate for the new commitment period.</p>\
          \ </li> <li> <p>Change a 1-year commitment to a 3-year commitment. The change\
          \ is immediate and the hourly rate decreases to the rate for the 3-year\
          \ commitment period.</p> </li> <li> <p>Set a 1-year commitment to automatically\
          \ renew for an additional 1 year. The hourly rate for the additional year\
          \ will continue to be the same as your existing 1-year rate.</p> </li> <li>\
          \ <p>Set a 3-year commitment to automatically renew for an additional 1\
          \ year. The hourly rate for the additional year will continue to be the\
          \ same as your existing 3-year rate.</p> </li> <li> <p>Turn off a previously-enabled\
          \ automatic renewal on a 1-year or 3-year commitment. You cannot use the\
          \ automatic-renewal option for a 60-day commitment.</p> </li> </ul> <p>For\
          \ pricing, see <a href=\"http://aws.amazon.com/private5g/pricing\">Amazon\
          \ Web Services Private 5G Pricing</a>.</p>"
      example:
        commitmentLength: ""
        automaticRenewal: ""
      title: StartNetworkResourceUpdateRequest_commitmentConfiguration
    StartNetworkResourceUpdateRequest_shippingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: "The shipping address. If you don't provide a shipping address\
          \ when replacing or returning a network resource, we use the address from\
          \ the original order for the network resource."
      example:
        country: ""
        emailAddress: ""
        phoneNumber: ""
        stateOrProvince: ""
        street3: ""
        city: ""
        postalCode: ""
        name: ""
        company: ""
        street1: ""
        street2: ""
      title: StartNetworkResourceUpdateRequest_shippingAddress
    UpdateNetworkSitePlanRequest_pendingPlan:
      allOf:
      - $ref: '#/components/schemas/SitePlan'
      - description: The pending plan.
      example:
        options: ""
        resourceDefinitions: ""
      title: UpdateNetworkSitePlanRequest_pendingPlan
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
