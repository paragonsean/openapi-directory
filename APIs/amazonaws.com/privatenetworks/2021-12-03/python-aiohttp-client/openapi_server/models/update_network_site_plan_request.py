# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_site_request_pending_plan import CreateNetworkSiteRequestPendingPlan
import re
from openapi_server import util


class UpdateNetworkSitePlanRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, network_site_arn: str=None, pending_plan: CreateNetworkSiteRequestPendingPlan=None):
        """UpdateNetworkSitePlanRequest - a model defined in OpenAPI

        :param client_token: The client_token of this UpdateNetworkSitePlanRequest.
        :param network_site_arn: The network_site_arn of this UpdateNetworkSitePlanRequest.
        :param pending_plan: The pending_plan of this UpdateNetworkSitePlanRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'network_site_arn': str,
            'pending_plan': CreateNetworkSiteRequestPendingPlan
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'network_site_arn': 'networkSiteArn',
            'pending_plan': 'pendingPlan'
        }

        self._client_token = client_token
        self._network_site_arn = network_site_arn
        self._pending_plan = pending_plan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSitePlanRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNetworkSitePlan_request of this UpdateNetworkSitePlanRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this UpdateNetworkSitePlanRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :return: The client_token of this UpdateNetworkSitePlanRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this UpdateNetworkSitePlanRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :param client_token: The client_token of this UpdateNetworkSitePlanRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 100:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `100`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token

    @property
    def network_site_arn(self):
        """Gets the network_site_arn of this UpdateNetworkSitePlanRequest.

        The Amazon Resource Name (ARN) of the network site.

        :return: The network_site_arn of this UpdateNetworkSitePlanRequest.
        :rtype: str
        """
        return self._network_site_arn

    @network_site_arn.setter
    def network_site_arn(self, network_site_arn):
        """Sets the network_site_arn of this UpdateNetworkSitePlanRequest.

        The Amazon Resource Name (ARN) of the network site.

        :param network_site_arn: The network_site_arn of this UpdateNetworkSitePlanRequest.
        :type network_site_arn: str
        """
        if network_site_arn is None:
            raise ValueError("Invalid value for `network_site_arn`, must not be `None`")
        if network_site_arn is not None and not re.search(r'^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$', network_site_arn):
            raise ValueError("Invalid value for `network_site_arn`, must be a follow pattern or equal to `/^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$/`")

        self._network_site_arn = network_site_arn

    @property
    def pending_plan(self):
        """Gets the pending_plan of this UpdateNetworkSitePlanRequest.


        :return: The pending_plan of this UpdateNetworkSitePlanRequest.
        :rtype: CreateNetworkSiteRequestPendingPlan
        """
        return self._pending_plan

    @pending_plan.setter
    def pending_plan(self, pending_plan):
        """Sets the pending_plan of this UpdateNetworkSitePlanRequest.


        :param pending_plan: The pending_plan of this UpdateNetworkSitePlanRequest.
        :type pending_plan: CreateNetworkSiteRequestPendingPlan
        """
        if pending_plan is None:
            raise ValueError("Invalid value for `pending_plan`, must not be `None`")

        self._pending_plan = pending_plan
