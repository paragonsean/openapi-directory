# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activate_network_site_request_commitment_configuration import ActivateNetworkSiteRequestCommitmentConfiguration
from openapi_server.models.activate_network_site_request_shipping_address import ActivateNetworkSiteRequestShippingAddress
import re
from openapi_server import util


class ActivateNetworkSiteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, commitment_configuration: ActivateNetworkSiteRequestCommitmentConfiguration=None, network_site_arn: str=None, shipping_address: ActivateNetworkSiteRequestShippingAddress=None):
        """ActivateNetworkSiteRequest - a model defined in OpenAPI

        :param client_token: The client_token of this ActivateNetworkSiteRequest.
        :param commitment_configuration: The commitment_configuration of this ActivateNetworkSiteRequest.
        :param network_site_arn: The network_site_arn of this ActivateNetworkSiteRequest.
        :param shipping_address: The shipping_address of this ActivateNetworkSiteRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'commitment_configuration': ActivateNetworkSiteRequestCommitmentConfiguration,
            'network_site_arn': str,
            'shipping_address': ActivateNetworkSiteRequestShippingAddress
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'commitment_configuration': 'commitmentConfiguration',
            'network_site_arn': 'networkSiteArn',
            'shipping_address': 'shippingAddress'
        }

        self._client_token = client_token
        self._commitment_configuration = commitment_configuration
        self._network_site_arn = network_site_arn
        self._shipping_address = shipping_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivateNetworkSiteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivateNetworkSite_request of this ActivateNetworkSiteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this ActivateNetworkSiteRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :return: The client_token of this ActivateNetworkSiteRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this ActivateNetworkSiteRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :param client_token: The client_token of this ActivateNetworkSiteRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 100:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `100`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token

    @property
    def commitment_configuration(self):
        """Gets the commitment_configuration of this ActivateNetworkSiteRequest.


        :return: The commitment_configuration of this ActivateNetworkSiteRequest.
        :rtype: ActivateNetworkSiteRequestCommitmentConfiguration
        """
        return self._commitment_configuration

    @commitment_configuration.setter
    def commitment_configuration(self, commitment_configuration):
        """Sets the commitment_configuration of this ActivateNetworkSiteRequest.


        :param commitment_configuration: The commitment_configuration of this ActivateNetworkSiteRequest.
        :type commitment_configuration: ActivateNetworkSiteRequestCommitmentConfiguration
        """

        self._commitment_configuration = commitment_configuration

    @property
    def network_site_arn(self):
        """Gets the network_site_arn of this ActivateNetworkSiteRequest.

        The Amazon Resource Name (ARN) of the network site.

        :return: The network_site_arn of this ActivateNetworkSiteRequest.
        :rtype: str
        """
        return self._network_site_arn

    @network_site_arn.setter
    def network_site_arn(self, network_site_arn):
        """Sets the network_site_arn of this ActivateNetworkSiteRequest.

        The Amazon Resource Name (ARN) of the network site.

        :param network_site_arn: The network_site_arn of this ActivateNetworkSiteRequest.
        :type network_site_arn: str
        """
        if network_site_arn is None:
            raise ValueError("Invalid value for `network_site_arn`, must not be `None`")
        if network_site_arn is not None and not re.search(r'^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$', network_site_arn):
            raise ValueError("Invalid value for `network_site_arn`, must be a follow pattern or equal to `/^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$/`")

        self._network_site_arn = network_site_arn

    @property
    def shipping_address(self):
        """Gets the shipping_address of this ActivateNetworkSiteRequest.


        :return: The shipping_address of this ActivateNetworkSiteRequest.
        :rtype: ActivateNetworkSiteRequestShippingAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this ActivateNetworkSiteRequest.


        :param shipping_address: The shipping_address of this ActivateNetworkSiteRequest.
        :type shipping_address: ActivateNetworkSiteRequestShippingAddress
        """
        if shipping_address is None:
            raise ValueError("Invalid value for `shipping_address`, must not be `None`")

        self._shipping_address = shipping_address
