# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ActivateDeviceIdentifierRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, device_identifier_arn: str=None):
        """ActivateDeviceIdentifierRequest - a model defined in OpenAPI

        :param client_token: The client_token of this ActivateDeviceIdentifierRequest.
        :param device_identifier_arn: The device_identifier_arn of this ActivateDeviceIdentifierRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'device_identifier_arn': str
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'device_identifier_arn': 'deviceIdentifierArn'
        }

        self._client_token = client_token
        self._device_identifier_arn = device_identifier_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivateDeviceIdentifierRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivateDeviceIdentifier_request of this ActivateDeviceIdentifierRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this ActivateDeviceIdentifierRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :return: The client_token of this ActivateDeviceIdentifierRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this ActivateDeviceIdentifierRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to ensure idempotency</a>.

        :param client_token: The client_token of this ActivateDeviceIdentifierRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 100:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `100`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token

    @property
    def device_identifier_arn(self):
        """Gets the device_identifier_arn of this ActivateDeviceIdentifierRequest.

        The Amazon Resource Name (ARN) of the device identifier.

        :return: The device_identifier_arn of this ActivateDeviceIdentifierRequest.
        :rtype: str
        """
        return self._device_identifier_arn

    @device_identifier_arn.setter
    def device_identifier_arn(self, device_identifier_arn):
        """Sets the device_identifier_arn of this ActivateDeviceIdentifierRequest.

        The Amazon Resource Name (ARN) of the device identifier.

        :param device_identifier_arn: The device_identifier_arn of this ActivateDeviceIdentifierRequest.
        :type device_identifier_arn: str
        """
        if device_identifier_arn is None:
            raise ValueError("Invalid value for `device_identifier_arn`, must not be `None`")
        if device_identifier_arn is not None and not re.search(r'^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$', device_identifier_arn):
            raise ValueError("Invalid value for `device_identifier_arn`, must be a follow pattern or equal to `/^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$/`")

        self._device_identifier_arn = device_identifier_arn
