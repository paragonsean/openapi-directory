# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.elevation_reference import ElevationReference
from openapi_server.models.elevation_unit import ElevationUnit
from openapi_server import util


class ConfigureAccessPointRequestPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elevation: float=None, elevation_reference: ElevationReference=None, elevation_unit: ElevationUnit=None, latitude: float=None, longitude: float=None):
        """ConfigureAccessPointRequestPosition - a model defined in OpenAPI

        :param elevation: The elevation of this ConfigureAccessPointRequestPosition.
        :param elevation_reference: The elevation_reference of this ConfigureAccessPointRequestPosition.
        :param elevation_unit: The elevation_unit of this ConfigureAccessPointRequestPosition.
        :param latitude: The latitude of this ConfigureAccessPointRequestPosition.
        :param longitude: The longitude of this ConfigureAccessPointRequestPosition.
        """
        self.openapi_types = {
            'elevation': float,
            'elevation_reference': ElevationReference,
            'elevation_unit': ElevationUnit,
            'latitude': float,
            'longitude': float
        }

        self.attribute_map = {
            'elevation': 'elevation',
            'elevation_reference': 'elevationReference',
            'elevation_unit': 'elevationUnit',
            'latitude': 'latitude',
            'longitude': 'longitude'
        }

        self._elevation = elevation
        self._elevation_reference = elevation_reference
        self._elevation_unit = elevation_unit
        self._latitude = latitude
        self._longitude = longitude

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureAccessPointRequestPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureAccessPointRequest_position of this ConfigureAccessPointRequestPosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elevation(self):
        """Gets the elevation of this ConfigureAccessPointRequestPosition.


        :return: The elevation of this ConfigureAccessPointRequestPosition.
        :rtype: float
        """
        return self._elevation

    @elevation.setter
    def elevation(self, elevation):
        """Sets the elevation of this ConfigureAccessPointRequestPosition.


        :param elevation: The elevation of this ConfigureAccessPointRequestPosition.
        :type elevation: float
        """

        self._elevation = elevation

    @property
    def elevation_reference(self):
        """Gets the elevation_reference of this ConfigureAccessPointRequestPosition.


        :return: The elevation_reference of this ConfigureAccessPointRequestPosition.
        :rtype: ElevationReference
        """
        return self._elevation_reference

    @elevation_reference.setter
    def elevation_reference(self, elevation_reference):
        """Sets the elevation_reference of this ConfigureAccessPointRequestPosition.


        :param elevation_reference: The elevation_reference of this ConfigureAccessPointRequestPosition.
        :type elevation_reference: ElevationReference
        """

        self._elevation_reference = elevation_reference

    @property
    def elevation_unit(self):
        """Gets the elevation_unit of this ConfigureAccessPointRequestPosition.


        :return: The elevation_unit of this ConfigureAccessPointRequestPosition.
        :rtype: ElevationUnit
        """
        return self._elevation_unit

    @elevation_unit.setter
    def elevation_unit(self, elevation_unit):
        """Sets the elevation_unit of this ConfigureAccessPointRequestPosition.


        :param elevation_unit: The elevation_unit of this ConfigureAccessPointRequestPosition.
        :type elevation_unit: ElevationUnit
        """

        self._elevation_unit = elevation_unit

    @property
    def latitude(self):
        """Gets the latitude of this ConfigureAccessPointRequestPosition.


        :return: The latitude of this ConfigureAccessPointRequestPosition.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this ConfigureAccessPointRequestPosition.


        :param latitude: The latitude of this ConfigureAccessPointRequestPosition.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this ConfigureAccessPointRequestPosition.


        :return: The longitude of this ConfigureAccessPointRequestPosition.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this ConfigureAccessPointRequestPosition.


        :param longitude: The longitude of this ConfigureAccessPointRequestPosition.
        :type longitude: float
        """

        self._longitude = longitude
