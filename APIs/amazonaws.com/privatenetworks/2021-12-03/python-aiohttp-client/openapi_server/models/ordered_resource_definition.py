# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_resource_definition_type import NetworkResourceDefinitionType
from openapi_server.models.ordered_resource_definition_commitment_configuration import OrderedResourceDefinitionCommitmentConfiguration
from openapi_server import util


class OrderedResourceDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commitment_configuration: OrderedResourceDefinitionCommitmentConfiguration=None, count: int=None, type: NetworkResourceDefinitionType=None):
        """OrderedResourceDefinition - a model defined in OpenAPI

        :param commitment_configuration: The commitment_configuration of this OrderedResourceDefinition.
        :param count: The count of this OrderedResourceDefinition.
        :param type: The type of this OrderedResourceDefinition.
        """
        self.openapi_types = {
            'commitment_configuration': OrderedResourceDefinitionCommitmentConfiguration,
            'count': int,
            'type': NetworkResourceDefinitionType
        }

        self.attribute_map = {
            'commitment_configuration': 'commitmentConfiguration',
            'count': 'count',
            'type': 'type'
        }

        self._commitment_configuration = commitment_configuration
        self._count = count
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderedResourceDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderedResourceDefinition of this OrderedResourceDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commitment_configuration(self):
        """Gets the commitment_configuration of this OrderedResourceDefinition.


        :return: The commitment_configuration of this OrderedResourceDefinition.
        :rtype: OrderedResourceDefinitionCommitmentConfiguration
        """
        return self._commitment_configuration

    @commitment_configuration.setter
    def commitment_configuration(self, commitment_configuration):
        """Sets the commitment_configuration of this OrderedResourceDefinition.


        :param commitment_configuration: The commitment_configuration of this OrderedResourceDefinition.
        :type commitment_configuration: OrderedResourceDefinitionCommitmentConfiguration
        """

        self._commitment_configuration = commitment_configuration

    @property
    def count(self):
        """Gets the count of this OrderedResourceDefinition.


        :return: The count of this OrderedResourceDefinition.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this OrderedResourceDefinition.


        :param count: The count of this OrderedResourceDefinition.
        :type count: int
        """
        if count is None:
            raise ValueError("Invalid value for `count`, must not be `None`")

        self._count = count

    @property
    def type(self):
        """Gets the type of this OrderedResourceDefinition.


        :return: The type of this OrderedResourceDefinition.
        :rtype: NetworkResourceDefinitionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderedResourceDefinition.


        :param type: The type of this OrderedResourceDefinition.
        :type type: NetworkResourceDefinitionType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
