# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeactivateDeviceIdentifierRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, device_identifier_arn: str=None):
        """DeactivateDeviceIdentifierRequest - a model defined in OpenAPI

        :param client_token: The client_token of this DeactivateDeviceIdentifierRequest.
        :param device_identifier_arn: The device_identifier_arn of this DeactivateDeviceIdentifierRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'device_identifier_arn': str
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'device_identifier_arn': 'deviceIdentifierArn'
        }

        self._client_token = client_token
        self._device_identifier_arn = device_identifier_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeactivateDeviceIdentifierRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeactivateDeviceIdentifierRequest of this DeactivateDeviceIdentifierRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this DeactivateDeviceIdentifierRequest.


        :return: The client_token of this DeactivateDeviceIdentifierRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this DeactivateDeviceIdentifierRequest.


        :param client_token: The client_token of this DeactivateDeviceIdentifierRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def device_identifier_arn(self):
        """Gets the device_identifier_arn of this DeactivateDeviceIdentifierRequest.


        :return: The device_identifier_arn of this DeactivateDeviceIdentifierRequest.
        :rtype: str
        """
        return self._device_identifier_arn

    @device_identifier_arn.setter
    def device_identifier_arn(self, device_identifier_arn):
        """Sets the device_identifier_arn of this DeactivateDeviceIdentifierRequest.


        :param device_identifier_arn: The device_identifier_arn of this DeactivateDeviceIdentifierRequest.
        :type device_identifier_arn: str
        """
        if device_identifier_arn is None:
            raise ValueError("Invalid value for `device_identifier_arn`, must not be `None`")

        self._device_identifier_arn = device_identifier_arn
