# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.return_information_shipping_address import ReturnInformationShippingAddress
from openapi_server import util


class NetworkResourceReturnInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replacement_order_arn: str=None, return_reason: str=None, shipping_address: ReturnInformationShippingAddress=None, shipping_label: str=None):
        """NetworkResourceReturnInformation - a model defined in OpenAPI

        :param replacement_order_arn: The replacement_order_arn of this NetworkResourceReturnInformation.
        :param return_reason: The return_reason of this NetworkResourceReturnInformation.
        :param shipping_address: The shipping_address of this NetworkResourceReturnInformation.
        :param shipping_label: The shipping_label of this NetworkResourceReturnInformation.
        """
        self.openapi_types = {
            'replacement_order_arn': str,
            'return_reason': str,
            'shipping_address': ReturnInformationShippingAddress,
            'shipping_label': str
        }

        self.attribute_map = {
            'replacement_order_arn': 'replacementOrderArn',
            'return_reason': 'returnReason',
            'shipping_address': 'shippingAddress',
            'shipping_label': 'shippingLabel'
        }

        self._replacement_order_arn = replacement_order_arn
        self._return_reason = return_reason
        self._shipping_address = shipping_address
        self._shipping_label = shipping_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkResourceReturnInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkResource_returnInformation of this NetworkResourceReturnInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replacement_order_arn(self):
        """Gets the replacement_order_arn of this NetworkResourceReturnInformation.


        :return: The replacement_order_arn of this NetworkResourceReturnInformation.
        :rtype: str
        """
        return self._replacement_order_arn

    @replacement_order_arn.setter
    def replacement_order_arn(self, replacement_order_arn):
        """Sets the replacement_order_arn of this NetworkResourceReturnInformation.


        :param replacement_order_arn: The replacement_order_arn of this NetworkResourceReturnInformation.
        :type replacement_order_arn: str
        """

        self._replacement_order_arn = replacement_order_arn

    @property
    def return_reason(self):
        """Gets the return_reason of this NetworkResourceReturnInformation.


        :return: The return_reason of this NetworkResourceReturnInformation.
        :rtype: str
        """
        return self._return_reason

    @return_reason.setter
    def return_reason(self, return_reason):
        """Sets the return_reason of this NetworkResourceReturnInformation.


        :param return_reason: The return_reason of this NetworkResourceReturnInformation.
        :type return_reason: str
        """

        self._return_reason = return_reason

    @property
    def shipping_address(self):
        """Gets the shipping_address of this NetworkResourceReturnInformation.


        :return: The shipping_address of this NetworkResourceReturnInformation.
        :rtype: ReturnInformationShippingAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this NetworkResourceReturnInformation.


        :param shipping_address: The shipping_address of this NetworkResourceReturnInformation.
        :type shipping_address: ReturnInformationShippingAddress
        """

        self._shipping_address = shipping_address

    @property
    def shipping_label(self):
        """Gets the shipping_label of this NetworkResourceReturnInformation.


        :return: The shipping_label of this NetworkResourceReturnInformation.
        :rtype: str
        """
        return self._shipping_label

    @shipping_label.setter
    def shipping_label(self, shipping_label):
        """Sets the shipping_label of this NetworkResourceReturnInformation.


        :param shipping_label: The shipping_label of this NetworkResourceReturnInformation.
        :type shipping_label: str
        """

        self._shipping_label = shipping_label
