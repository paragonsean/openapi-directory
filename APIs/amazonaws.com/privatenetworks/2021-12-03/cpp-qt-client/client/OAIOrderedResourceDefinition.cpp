/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderedResourceDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderedResourceDefinition::OAIOrderedResourceDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderedResourceDefinition::OAIOrderedResourceDefinition() {
    this->initializeModel();
}

OAIOrderedResourceDefinition::~OAIOrderedResourceDefinition() {}

void OAIOrderedResourceDefinition::initializeModel() {

    m_commitment_configuration_isSet = false;
    m_commitment_configuration_isValid = false;

    m_count_isSet = false;
    m_count_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIOrderedResourceDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderedResourceDefinition::fromJsonObject(QJsonObject json) {

    m_commitment_configuration_isValid = ::OpenAPI::fromJsonValue(m_commitment_configuration, json[QString("commitmentConfiguration")]);
    m_commitment_configuration_isSet = !json[QString("commitmentConfiguration")].isNull() && m_commitment_configuration_isValid;

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIOrderedResourceDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderedResourceDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_commitment_configuration.isSet()) {
        obj.insert(QString("commitmentConfiguration"), ::OpenAPI::toJsonValue(m_commitment_configuration));
    }
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIOrderedResourceDefinition_commitmentConfiguration OAIOrderedResourceDefinition::getCommitmentConfiguration() const {
    return m_commitment_configuration;
}
void OAIOrderedResourceDefinition::setCommitmentConfiguration(const OAIOrderedResourceDefinition_commitmentConfiguration &commitment_configuration) {
    m_commitment_configuration = commitment_configuration;
    m_commitment_configuration_isSet = true;
}

bool OAIOrderedResourceDefinition::is_commitment_configuration_Set() const{
    return m_commitment_configuration_isSet;
}

bool OAIOrderedResourceDefinition::is_commitment_configuration_Valid() const{
    return m_commitment_configuration_isValid;
}

qint32 OAIOrderedResourceDefinition::getCount() const {
    return m_count;
}
void OAIOrderedResourceDefinition::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIOrderedResourceDefinition::is_count_Set() const{
    return m_count_isSet;
}

bool OAIOrderedResourceDefinition::is_count_Valid() const{
    return m_count_isValid;
}

OAINetworkResourceDefinitionType OAIOrderedResourceDefinition::getType() const {
    return m_type;
}
void OAIOrderedResourceDefinition::setType(const OAINetworkResourceDefinitionType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrderedResourceDefinition::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrderedResourceDefinition::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIOrderedResourceDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commitment_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderedResourceDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_count_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
