/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateNetworkSiteRequest_pendingPlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateNetworkSiteRequest_pendingPlan::OAICreateNetworkSiteRequest_pendingPlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateNetworkSiteRequest_pendingPlan::OAICreateNetworkSiteRequest_pendingPlan() {
    this->initializeModel();
}

OAICreateNetworkSiteRequest_pendingPlan::~OAICreateNetworkSiteRequest_pendingPlan() {}

void OAICreateNetworkSiteRequest_pendingPlan::initializeModel() {

    m_options_isSet = false;
    m_options_isValid = false;

    m_resource_definitions_isSet = false;
    m_resource_definitions_isValid = false;
}

void OAICreateNetworkSiteRequest_pendingPlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateNetworkSiteRequest_pendingPlan::fromJsonObject(QJsonObject json) {

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_resource_definitions_isValid = ::OpenAPI::fromJsonValue(m_resource_definitions, json[QString("resourceDefinitions")]);
    m_resource_definitions_isSet = !json[QString("resourceDefinitions")].isNull() && m_resource_definitions_isValid;
}

QString OAICreateNetworkSiteRequest_pendingPlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateNetworkSiteRequest_pendingPlan::asJsonObject() const {
    QJsonObject obj;
    if (m_options.isSet()) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_resource_definitions.isSet()) {
        obj.insert(QString("resourceDefinitions"), ::OpenAPI::toJsonValue(m_resource_definitions));
    }
    return obj;
}

QList OAICreateNetworkSiteRequest_pendingPlan::getOptions() const {
    return m_options;
}
void OAICreateNetworkSiteRequest_pendingPlan::setOptions(const QList &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAICreateNetworkSiteRequest_pendingPlan::is_options_Set() const{
    return m_options_isSet;
}

bool OAICreateNetworkSiteRequest_pendingPlan::is_options_Valid() const{
    return m_options_isValid;
}

QList OAICreateNetworkSiteRequest_pendingPlan::getResourceDefinitions() const {
    return m_resource_definitions;
}
void OAICreateNetworkSiteRequest_pendingPlan::setResourceDefinitions(const QList &resource_definitions) {
    m_resource_definitions = resource_definitions;
    m_resource_definitions_isSet = true;
}

bool OAICreateNetworkSiteRequest_pendingPlan::is_resource_definitions_Set() const{
    return m_resource_definitions_isSet;
}

bool OAICreateNetworkSiteRequest_pendingPlan::is_resource_definitions_Valid() const{
    return m_resource_definitions_isValid;
}

bool OAICreateNetworkSiteRequest_pendingPlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_definitions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateNetworkSiteRequest_pendingPlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
