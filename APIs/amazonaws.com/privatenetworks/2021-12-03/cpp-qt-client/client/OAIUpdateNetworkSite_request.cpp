/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkSite_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkSite_request::OAIUpdateNetworkSite_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkSite_request::OAIUpdateNetworkSite_request() {
    this->initializeModel();
}

OAIUpdateNetworkSite_request::~OAIUpdateNetworkSite_request() {}

void OAIUpdateNetworkSite_request::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_network_site_arn_isSet = false;
    m_network_site_arn_isValid = false;
}

void OAIUpdateNetworkSite_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkSite_request::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_network_site_arn_isValid = ::OpenAPI::fromJsonValue(m_network_site_arn, json[QString("networkSiteArn")]);
    m_network_site_arn_isSet = !json[QString("networkSiteArn")].isNull() && m_network_site_arn_isValid;
}

QString OAIUpdateNetworkSite_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkSite_request::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_network_site_arn_isSet) {
        obj.insert(QString("networkSiteArn"), ::OpenAPI::toJsonValue(m_network_site_arn));
    }
    return obj;
}

QString OAIUpdateNetworkSite_request::getClientToken() const {
    return m_client_token;
}
void OAIUpdateNetworkSite_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateNetworkSite_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateNetworkSite_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QString OAIUpdateNetworkSite_request::getDescription() const {
    return m_description;
}
void OAIUpdateNetworkSite_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateNetworkSite_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateNetworkSite_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateNetworkSite_request::getNetworkSiteArn() const {
    return m_network_site_arn;
}
void OAIUpdateNetworkSite_request::setNetworkSiteArn(const QString &network_site_arn) {
    m_network_site_arn = network_site_arn;
    m_network_site_arn_isSet = true;
}

bool OAIUpdateNetworkSite_request::is_network_site_arn_Set() const{
    return m_network_site_arn_isSet;
}

bool OAIUpdateNetworkSite_request::is_network_site_arn_Valid() const{
    return m_network_site_arn_isValid;
}

bool OAIUpdateNetworkSite_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_site_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkSite_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_network_site_arn_isValid && true;
}

} // namespace OpenAPI
