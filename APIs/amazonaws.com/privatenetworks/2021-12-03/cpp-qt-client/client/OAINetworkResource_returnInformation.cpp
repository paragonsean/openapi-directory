/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkResource_returnInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkResource_returnInformation::OAINetworkResource_returnInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkResource_returnInformation::OAINetworkResource_returnInformation() {
    this->initializeModel();
}

OAINetworkResource_returnInformation::~OAINetworkResource_returnInformation() {}

void OAINetworkResource_returnInformation::initializeModel() {

    m_replacement_order_arn_isSet = false;
    m_replacement_order_arn_isValid = false;

    m_return_reason_isSet = false;
    m_return_reason_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;

    m_shipping_label_isSet = false;
    m_shipping_label_isValid = false;
}

void OAINetworkResource_returnInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkResource_returnInformation::fromJsonObject(QJsonObject json) {

    m_replacement_order_arn_isValid = ::OpenAPI::fromJsonValue(m_replacement_order_arn, json[QString("replacementOrderArn")]);
    m_replacement_order_arn_isSet = !json[QString("replacementOrderArn")].isNull() && m_replacement_order_arn_isValid;

    m_return_reason_isValid = ::OpenAPI::fromJsonValue(m_return_reason, json[QString("returnReason")]);
    m_return_reason_isSet = !json[QString("returnReason")].isNull() && m_return_reason_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("shippingAddress")]);
    m_shipping_address_isSet = !json[QString("shippingAddress")].isNull() && m_shipping_address_isValid;

    m_shipping_label_isValid = ::OpenAPI::fromJsonValue(m_shipping_label, json[QString("shippingLabel")]);
    m_shipping_label_isSet = !json[QString("shippingLabel")].isNull() && m_shipping_label_isValid;
}

QString OAINetworkResource_returnInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkResource_returnInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_replacement_order_arn_isSet) {
        obj.insert(QString("replacementOrderArn"), ::OpenAPI::toJsonValue(m_replacement_order_arn));
    }
    if (m_return_reason_isSet) {
        obj.insert(QString("returnReason"), ::OpenAPI::toJsonValue(m_return_reason));
    }
    if (m_shipping_address.isSet()) {
        obj.insert(QString("shippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    if (m_shipping_label_isSet) {
        obj.insert(QString("shippingLabel"), ::OpenAPI::toJsonValue(m_shipping_label));
    }
    return obj;
}

QString OAINetworkResource_returnInformation::getReplacementOrderArn() const {
    return m_replacement_order_arn;
}
void OAINetworkResource_returnInformation::setReplacementOrderArn(const QString &replacement_order_arn) {
    m_replacement_order_arn = replacement_order_arn;
    m_replacement_order_arn_isSet = true;
}

bool OAINetworkResource_returnInformation::is_replacement_order_arn_Set() const{
    return m_replacement_order_arn_isSet;
}

bool OAINetworkResource_returnInformation::is_replacement_order_arn_Valid() const{
    return m_replacement_order_arn_isValid;
}

QString OAINetworkResource_returnInformation::getReturnReason() const {
    return m_return_reason;
}
void OAINetworkResource_returnInformation::setReturnReason(const QString &return_reason) {
    m_return_reason = return_reason;
    m_return_reason_isSet = true;
}

bool OAINetworkResource_returnInformation::is_return_reason_Set() const{
    return m_return_reason_isSet;
}

bool OAINetworkResource_returnInformation::is_return_reason_Valid() const{
    return m_return_reason_isValid;
}

OAIReturnInformation_shippingAddress OAINetworkResource_returnInformation::getShippingAddress() const {
    return m_shipping_address;
}
void OAINetworkResource_returnInformation::setShippingAddress(const OAIReturnInformation_shippingAddress &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAINetworkResource_returnInformation::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAINetworkResource_returnInformation::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

QString OAINetworkResource_returnInformation::getShippingLabel() const {
    return m_shipping_label;
}
void OAINetworkResource_returnInformation::setShippingLabel(const QString &shipping_label) {
    m_shipping_label = shipping_label;
    m_shipping_label_isSet = true;
}

bool OAINetworkResource_returnInformation::is_shipping_label_Set() const{
    return m_shipping_label_isSet;
}

bool OAINetworkResource_returnInformation::is_shipping_label_Valid() const{
    return m_shipping_label_isValid;
}

bool OAINetworkResource_returnInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replacement_order_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkResource_returnInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
