/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder::OAIOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder::OAIOrder() {
    this->initializeModel();
}

OAIOrder::~OAIOrder() {}

void OAIOrder::initializeModel() {

    m_acknowledgment_status_isSet = false;
    m_acknowledgment_status_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_network_arn_isSet = false;
    m_network_arn_isValid = false;

    m_network_site_arn_isSet = false;
    m_network_site_arn_isValid = false;

    m_order_arn_isSet = false;
    m_order_arn_isValid = false;

    m_ordered_resources_isSet = false;
    m_ordered_resources_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;

    m_tracking_information_isSet = false;
    m_tracking_information_isValid = false;
}

void OAIOrder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder::fromJsonObject(QJsonObject json) {

    m_acknowledgment_status_isValid = ::OpenAPI::fromJsonValue(m_acknowledgment_status, json[QString("acknowledgmentStatus")]);
    m_acknowledgment_status_isSet = !json[QString("acknowledgmentStatus")].isNull() && m_acknowledgment_status_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_network_arn_isValid = ::OpenAPI::fromJsonValue(m_network_arn, json[QString("networkArn")]);
    m_network_arn_isSet = !json[QString("networkArn")].isNull() && m_network_arn_isValid;

    m_network_site_arn_isValid = ::OpenAPI::fromJsonValue(m_network_site_arn, json[QString("networkSiteArn")]);
    m_network_site_arn_isSet = !json[QString("networkSiteArn")].isNull() && m_network_site_arn_isValid;

    m_order_arn_isValid = ::OpenAPI::fromJsonValue(m_order_arn, json[QString("orderArn")]);
    m_order_arn_isSet = !json[QString("orderArn")].isNull() && m_order_arn_isValid;

    m_ordered_resources_isValid = ::OpenAPI::fromJsonValue(m_ordered_resources, json[QString("orderedResources")]);
    m_ordered_resources_isSet = !json[QString("orderedResources")].isNull() && m_ordered_resources_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("shippingAddress")]);
    m_shipping_address_isSet = !json[QString("shippingAddress")].isNull() && m_shipping_address_isValid;

    m_tracking_information_isValid = ::OpenAPI::fromJsonValue(m_tracking_information, json[QString("trackingInformation")]);
    m_tracking_information_isSet = !json[QString("trackingInformation")].isNull() && m_tracking_information_isValid;
}

QString OAIOrder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder::asJsonObject() const {
    QJsonObject obj;
    if (m_acknowledgment_status.isSet()) {
        obj.insert(QString("acknowledgmentStatus"), ::OpenAPI::toJsonValue(m_acknowledgment_status));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_network_arn_isSet) {
        obj.insert(QString("networkArn"), ::OpenAPI::toJsonValue(m_network_arn));
    }
    if (m_network_site_arn_isSet) {
        obj.insert(QString("networkSiteArn"), ::OpenAPI::toJsonValue(m_network_site_arn));
    }
    if (m_order_arn_isSet) {
        obj.insert(QString("orderArn"), ::OpenAPI::toJsonValue(m_order_arn));
    }
    if (m_ordered_resources.isSet()) {
        obj.insert(QString("orderedResources"), ::OpenAPI::toJsonValue(m_ordered_resources));
    }
    if (m_shipping_address.isSet()) {
        obj.insert(QString("shippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    if (m_tracking_information.isSet()) {
        obj.insert(QString("trackingInformation"), ::OpenAPI::toJsonValue(m_tracking_information));
    }
    return obj;
}

OAIAcknowledgmentStatus OAIOrder::getAcknowledgmentStatus() const {
    return m_acknowledgment_status;
}
void OAIOrder::setAcknowledgmentStatus(const OAIAcknowledgmentStatus &acknowledgment_status) {
    m_acknowledgment_status = acknowledgment_status;
    m_acknowledgment_status_isSet = true;
}

bool OAIOrder::is_acknowledgment_status_Set() const{
    return m_acknowledgment_status_isSet;
}

bool OAIOrder::is_acknowledgment_status_Valid() const{
    return m_acknowledgment_status_isValid;
}

QDateTime OAIOrder::getCreatedAt() const {
    return m_created_at;
}
void OAIOrder::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIOrder::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIOrder::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIOrder::getNetworkArn() const {
    return m_network_arn;
}
void OAIOrder::setNetworkArn(const QString &network_arn) {
    m_network_arn = network_arn;
    m_network_arn_isSet = true;
}

bool OAIOrder::is_network_arn_Set() const{
    return m_network_arn_isSet;
}

bool OAIOrder::is_network_arn_Valid() const{
    return m_network_arn_isValid;
}

QString OAIOrder::getNetworkSiteArn() const {
    return m_network_site_arn;
}
void OAIOrder::setNetworkSiteArn(const QString &network_site_arn) {
    m_network_site_arn = network_site_arn;
    m_network_site_arn_isSet = true;
}

bool OAIOrder::is_network_site_arn_Set() const{
    return m_network_site_arn_isSet;
}

bool OAIOrder::is_network_site_arn_Valid() const{
    return m_network_site_arn_isValid;
}

QString OAIOrder::getOrderArn() const {
    return m_order_arn;
}
void OAIOrder::setOrderArn(const QString &order_arn) {
    m_order_arn = order_arn;
    m_order_arn_isSet = true;
}

bool OAIOrder::is_order_arn_Set() const{
    return m_order_arn_isSet;
}

bool OAIOrder::is_order_arn_Valid() const{
    return m_order_arn_isValid;
}

QList OAIOrder::getOrderedResources() const {
    return m_ordered_resources;
}
void OAIOrder::setOrderedResources(const QList &ordered_resources) {
    m_ordered_resources = ordered_resources;
    m_ordered_resources_isSet = true;
}

bool OAIOrder::is_ordered_resources_Set() const{
    return m_ordered_resources_isSet;
}

bool OAIOrder::is_ordered_resources_Valid() const{
    return m_ordered_resources_isValid;
}

OAIOrder_shippingAddress OAIOrder::getShippingAddress() const {
    return m_shipping_address;
}
void OAIOrder::setShippingAddress(const OAIOrder_shippingAddress &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAIOrder::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAIOrder::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

QList OAIOrder::getTrackingInformation() const {
    return m_tracking_information;
}
void OAIOrder::setTrackingInformation(const QList &tracking_information) {
    m_tracking_information = tracking_information;
    m_tracking_information_isSet = true;
}

bool OAIOrder::is_tracking_information_Set() const{
    return m_tracking_information_isSet;
}

bool OAIOrder::is_tracking_information_Valid() const{
    return m_tracking_information_isValid;
}

bool OAIOrder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acknowledgment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_site_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ordered_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_information.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
