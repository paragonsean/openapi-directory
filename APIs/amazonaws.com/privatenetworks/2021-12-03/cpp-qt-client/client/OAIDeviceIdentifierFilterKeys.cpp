/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceIdentifierFilterKeys.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceIdentifierFilterKeys::OAIDeviceIdentifierFilterKeys(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceIdentifierFilterKeys::OAIDeviceIdentifierFilterKeys() {
    this->initializeModel();
}

OAIDeviceIdentifierFilterKeys::~OAIDeviceIdentifierFilterKeys() {}

void OAIDeviceIdentifierFilterKeys::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeviceIdentifierFilterKeys::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeviceIdentifierFilterKeys::fromJson(QString jsonString) {
    
    if ( jsonString.compare("STATUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceIdentifierFilterKeys::STATUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORDER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceIdentifierFilterKeys::ORDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRAFFIC_GROUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceIdentifierFilterKeys::TRAFFIC_GROUP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeviceIdentifierFilterKeys::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeviceIdentifierFilterKeys::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeviceIdentifierFilterKeys::STATUS:
            val = "STATUS";
            break;
        case eOAIDeviceIdentifierFilterKeys::ORDER:
            val = "ORDER";
            break;
        case eOAIDeviceIdentifierFilterKeys::TRAFFIC_GROUP:
            val = "TRAFFIC_GROUP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeviceIdentifierFilterKeys::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeviceIdentifierFilterKeys::eOAIDeviceIdentifierFilterKeys OAIDeviceIdentifierFilterKeys::getValue() const {
    return m_value;
}

void OAIDeviceIdentifierFilterKeys::setValue(const OAIDeviceIdentifierFilterKeys::eOAIDeviceIdentifierFilterKeys& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeviceIdentifierFilterKeys::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeviceIdentifierFilterKeys::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
