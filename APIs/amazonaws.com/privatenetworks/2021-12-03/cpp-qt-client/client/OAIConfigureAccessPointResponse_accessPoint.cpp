/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigureAccessPointResponse_accessPoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigureAccessPointResponse_accessPoint::OAIConfigureAccessPointResponse_accessPoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigureAccessPointResponse_accessPoint::OAIConfigureAccessPointResponse_accessPoint() {
    this->initializeModel();
}

OAIConfigureAccessPointResponse_accessPoint::~OAIConfigureAccessPointResponse_accessPoint() {}

void OAIConfigureAccessPointResponse_accessPoint::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_commitment_information_isSet = false;
    m_commitment_information_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_health_isSet = false;
    m_health_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;

    m_network_arn_isSet = false;
    m_network_arn_isValid = false;

    m_network_resource_arn_isSet = false;
    m_network_resource_arn_isValid = false;

    m_network_site_arn_isSet = false;
    m_network_site_arn_isValid = false;

    m_order_arn_isSet = false;
    m_order_arn_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_return_information_isSet = false;
    m_return_information_isValid = false;

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_reason_isSet = false;
    m_status_reason_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_vendor_isSet = false;
    m_vendor_isValid = false;
}

void OAIConfigureAccessPointResponse_accessPoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigureAccessPointResponse_accessPoint::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_commitment_information_isValid = ::OpenAPI::fromJsonValue(m_commitment_information, json[QString("commitmentInformation")]);
    m_commitment_information_isSet = !json[QString("commitmentInformation")].isNull() && m_commitment_information_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_health_isValid = ::OpenAPI::fromJsonValue(m_health, json[QString("health")]);
    m_health_isSet = !json[QString("health")].isNull() && m_health_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_network_arn_isValid = ::OpenAPI::fromJsonValue(m_network_arn, json[QString("networkArn")]);
    m_network_arn_isSet = !json[QString("networkArn")].isNull() && m_network_arn_isValid;

    m_network_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_network_resource_arn, json[QString("networkResourceArn")]);
    m_network_resource_arn_isSet = !json[QString("networkResourceArn")].isNull() && m_network_resource_arn_isValid;

    m_network_site_arn_isValid = ::OpenAPI::fromJsonValue(m_network_site_arn, json[QString("networkSiteArn")]);
    m_network_site_arn_isSet = !json[QString("networkSiteArn")].isNull() && m_network_site_arn_isValid;

    m_order_arn_isValid = ::OpenAPI::fromJsonValue(m_order_arn, json[QString("orderArn")]);
    m_order_arn_isSet = !json[QString("orderArn")].isNull() && m_order_arn_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_return_information_isValid = ::OpenAPI::fromJsonValue(m_return_information, json[QString("returnInformation")]);
    m_return_information_isSet = !json[QString("returnInformation")].isNull() && m_return_information_isValid;

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("serialNumber")]);
    m_serial_number_isSet = !json[QString("serialNumber")].isNull() && m_serial_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_reason_isValid = ::OpenAPI::fromJsonValue(m_status_reason, json[QString("statusReason")]);
    m_status_reason_isSet = !json[QString("statusReason")].isNull() && m_status_reason_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_vendor_isValid = ::OpenAPI::fromJsonValue(m_vendor, json[QString("vendor")]);
    m_vendor_isSet = !json[QString("vendor")].isNull() && m_vendor_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigureAccessPointResponse_accessPoint::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.isSet()) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_commitment_information.isSet()) {
        obj.insert(QString("commitmentInformation"), ::OpenAPI::toJsonValue(m_commitment_information));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_health.isSet()) {
        obj.insert(QString("health"), ::OpenAPI::toJsonValue(m_health));
    }
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_network_arn_isSet) {
        obj.insert(QString("networkArn"), ::OpenAPI::toJsonValue(m_network_arn));
    }
    if (m_network_resource_arn_isSet) {
        obj.insert(QString("networkResourceArn"), ::OpenAPI::toJsonValue(m_network_resource_arn));
    }
    if (m_network_site_arn_isSet) {
        obj.insert(QString("networkSiteArn"), ::OpenAPI::toJsonValue(m_network_site_arn));
    }
    if (m_order_arn_isSet) {
        obj.insert(QString("orderArn"), ::OpenAPI::toJsonValue(m_order_arn));
    }
    if (m_position.isSet()) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_return_information.isSet()) {
        obj.insert(QString("returnInformation"), ::OpenAPI::toJsonValue(m_return_information));
    }
    if (m_serial_number_isSet) {
        obj.insert(QString("serialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_reason_isSet) {
        obj.insert(QString("statusReason"), ::OpenAPI::toJsonValue(m_status_reason));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_vendor_isSet) {
        obj.insert(QString("vendor"), ::OpenAPI::toJsonValue(m_vendor));
    }
    return obj;
}

QList OAIConfigureAccessPointResponse_accessPoint::getAttributes() const {
    return m_attributes;
}
void OAIConfigureAccessPointResponse_accessPoint::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_attributes_Valid() const{
    return m_attributes_isValid;
}

OAINetworkResource_commitmentInformation OAIConfigureAccessPointResponse_accessPoint::getCommitmentInformation() const {
    return m_commitment_information;
}
void OAIConfigureAccessPointResponse_accessPoint::setCommitmentInformation(const OAINetworkResource_commitmentInformation &commitment_information) {
    m_commitment_information = commitment_information;
    m_commitment_information_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_commitment_information_Set() const{
    return m_commitment_information_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_commitment_information_Valid() const{
    return m_commitment_information_isValid;
}

QDateTime OAIConfigureAccessPointResponse_accessPoint::getCreatedAt() const {
    return m_created_at;
}
void OAIConfigureAccessPointResponse_accessPoint::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getDescription() const {
    return m_description;
}
void OAIConfigureAccessPointResponse_accessPoint::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_description_Valid() const{
    return m_description_isValid;
}

OAIHealthStatus OAIConfigureAccessPointResponse_accessPoint::getHealth() const {
    return m_health;
}
void OAIConfigureAccessPointResponse_accessPoint::setHealth(const OAIHealthStatus &health) {
    m_health = health;
    m_health_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_health_Set() const{
    return m_health_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_health_Valid() const{
    return m_health_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getModel() const {
    return m_model;
}
void OAIConfigureAccessPointResponse_accessPoint::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_model_Set() const{
    return m_model_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_model_Valid() const{
    return m_model_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getNetworkArn() const {
    return m_network_arn;
}
void OAIConfigureAccessPointResponse_accessPoint::setNetworkArn(const QString &network_arn) {
    m_network_arn = network_arn;
    m_network_arn_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_arn_Set() const{
    return m_network_arn_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_arn_Valid() const{
    return m_network_arn_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getNetworkResourceArn() const {
    return m_network_resource_arn;
}
void OAIConfigureAccessPointResponse_accessPoint::setNetworkResourceArn(const QString &network_resource_arn) {
    m_network_resource_arn = network_resource_arn;
    m_network_resource_arn_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_resource_arn_Set() const{
    return m_network_resource_arn_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_resource_arn_Valid() const{
    return m_network_resource_arn_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getNetworkSiteArn() const {
    return m_network_site_arn;
}
void OAIConfigureAccessPointResponse_accessPoint::setNetworkSiteArn(const QString &network_site_arn) {
    m_network_site_arn = network_site_arn;
    m_network_site_arn_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_site_arn_Set() const{
    return m_network_site_arn_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_network_site_arn_Valid() const{
    return m_network_site_arn_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getOrderArn() const {
    return m_order_arn;
}
void OAIConfigureAccessPointResponse_accessPoint::setOrderArn(const QString &order_arn) {
    m_order_arn = order_arn;
    m_order_arn_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_order_arn_Set() const{
    return m_order_arn_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_order_arn_Valid() const{
    return m_order_arn_isValid;
}

OAIConfigureAccessPointRequest_position OAIConfigureAccessPointResponse_accessPoint::getPosition() const {
    return m_position;
}
void OAIConfigureAccessPointResponse_accessPoint::setPosition(const OAIConfigureAccessPointRequest_position &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_position_Set() const{
    return m_position_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_position_Valid() const{
    return m_position_isValid;
}

OAINetworkResource_returnInformation OAIConfigureAccessPointResponse_accessPoint::getReturnInformation() const {
    return m_return_information;
}
void OAIConfigureAccessPointResponse_accessPoint::setReturnInformation(const OAINetworkResource_returnInformation &return_information) {
    m_return_information = return_information;
    m_return_information_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_return_information_Set() const{
    return m_return_information_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_return_information_Valid() const{
    return m_return_information_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getSerialNumber() const {
    return m_serial_number;
}
void OAIConfigureAccessPointResponse_accessPoint::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

OAINetworkResourceStatus OAIConfigureAccessPointResponse_accessPoint::getStatus() const {
    return m_status;
}
void OAIConfigureAccessPointResponse_accessPoint::setStatus(const OAINetworkResourceStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_status_Set() const{
    return m_status_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getStatusReason() const {
    return m_status_reason;
}
void OAIConfigureAccessPointResponse_accessPoint::setStatusReason(const QString &status_reason) {
    m_status_reason = status_reason;
    m_status_reason_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_status_reason_Set() const{
    return m_status_reason_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_status_reason_Valid() const{
    return m_status_reason_isValid;
}

OAINetworkResourceType OAIConfigureAccessPointResponse_accessPoint::getType() const {
    return m_type;
}
void OAIConfigureAccessPointResponse_accessPoint::setType(const OAINetworkResourceType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_type_Set() const{
    return m_type_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIConfigureAccessPointResponse_accessPoint::getVendor() const {
    return m_vendor;
}
void OAIConfigureAccessPointResponse_accessPoint::setVendor(const QString &vendor) {
    m_vendor = vendor;
    m_vendor_isSet = true;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_vendor_Set() const{
    return m_vendor_isSet;
}

bool OAIConfigureAccessPointResponse_accessPoint::is_vendor_Valid() const{
    return m_vendor_isValid;
}

bool OAIConfigureAccessPointResponse_accessPoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_commitment_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_site_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigureAccessPointResponse_accessPoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
