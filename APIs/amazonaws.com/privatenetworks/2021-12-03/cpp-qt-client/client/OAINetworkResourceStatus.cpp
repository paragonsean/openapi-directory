/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkResourceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkResourceStatus::OAINetworkResourceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkResourceStatus::OAINetworkResourceStatus() {
    this->initializeModel();
}

OAINetworkResourceStatus::~OAINetworkResourceStatus() {}

void OAINetworkResourceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINetworkResourceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINetworkResourceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHIPPED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::SHIPPED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PROVISIONING", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::PROVISIONING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PROVISIONED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::PROVISIONED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AVAILABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PENDING_RETURN", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::PENDING_RETURN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::DELETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATING_SHIPPING_LABEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkResourceStatus::CREATING_SHIPPING_LABEL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINetworkResourceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINetworkResourceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINetworkResourceStatus::PENDING:
            val = "PENDING";
            break;
        case eOAINetworkResourceStatus::SHIPPED:
            val = "SHIPPED";
            break;
        case eOAINetworkResourceStatus::PROVISIONING:
            val = "PROVISIONING";
            break;
        case eOAINetworkResourceStatus::PROVISIONED:
            val = "PROVISIONED";
            break;
        case eOAINetworkResourceStatus::AVAILABLE:
            val = "AVAILABLE";
            break;
        case eOAINetworkResourceStatus::DELETING:
            val = "DELETING";
            break;
        case eOAINetworkResourceStatus::PENDING_RETURN:
            val = "PENDING_RETURN";
            break;
        case eOAINetworkResourceStatus::DELETED:
            val = "DELETED";
            break;
        case eOAINetworkResourceStatus::CREATING_SHIPPING_LABEL:
            val = "CREATING_SHIPPING_LABEL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINetworkResourceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINetworkResourceStatus::eOAINetworkResourceStatus OAINetworkResourceStatus::getValue() const {
    return m_value;
}

void OAINetworkResourceStatus::setValue(const OAINetworkResourceStatus::eOAINetworkResourceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINetworkResourceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAINetworkResourceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
