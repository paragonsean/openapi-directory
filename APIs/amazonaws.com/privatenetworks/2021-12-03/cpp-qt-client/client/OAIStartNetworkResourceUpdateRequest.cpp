/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartNetworkResourceUpdateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartNetworkResourceUpdateRequest::OAIStartNetworkResourceUpdateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartNetworkResourceUpdateRequest::OAIStartNetworkResourceUpdateRequest() {
    this->initializeModel();
}

OAIStartNetworkResourceUpdateRequest::~OAIStartNetworkResourceUpdateRequest() {}

void OAIStartNetworkResourceUpdateRequest::initializeModel() {

    m_commitment_configuration_isSet = false;
    m_commitment_configuration_isValid = false;

    m_network_resource_arn_isSet = false;
    m_network_resource_arn_isValid = false;

    m_return_reason_isSet = false;
    m_return_reason_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;

    m_update_type_isSet = false;
    m_update_type_isValid = false;
}

void OAIStartNetworkResourceUpdateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartNetworkResourceUpdateRequest::fromJsonObject(QJsonObject json) {

    m_commitment_configuration_isValid = ::OpenAPI::fromJsonValue(m_commitment_configuration, json[QString("commitmentConfiguration")]);
    m_commitment_configuration_isSet = !json[QString("commitmentConfiguration")].isNull() && m_commitment_configuration_isValid;

    m_network_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_network_resource_arn, json[QString("networkResourceArn")]);
    m_network_resource_arn_isSet = !json[QString("networkResourceArn")].isNull() && m_network_resource_arn_isValid;

    m_return_reason_isValid = ::OpenAPI::fromJsonValue(m_return_reason, json[QString("returnReason")]);
    m_return_reason_isSet = !json[QString("returnReason")].isNull() && m_return_reason_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("shippingAddress")]);
    m_shipping_address_isSet = !json[QString("shippingAddress")].isNull() && m_shipping_address_isValid;

    m_update_type_isValid = ::OpenAPI::fromJsonValue(m_update_type, json[QString("updateType")]);
    m_update_type_isSet = !json[QString("updateType")].isNull() && m_update_type_isValid;
}

QString OAIStartNetworkResourceUpdateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartNetworkResourceUpdateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_commitment_configuration.isSet()) {
        obj.insert(QString("commitmentConfiguration"), ::OpenAPI::toJsonValue(m_commitment_configuration));
    }
    if (m_network_resource_arn_isSet) {
        obj.insert(QString("networkResourceArn"), ::OpenAPI::toJsonValue(m_network_resource_arn));
    }
    if (m_return_reason_isSet) {
        obj.insert(QString("returnReason"), ::OpenAPI::toJsonValue(m_return_reason));
    }
    if (m_shipping_address.isSet()) {
        obj.insert(QString("shippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    if (m_update_type.isSet()) {
        obj.insert(QString("updateType"), ::OpenAPI::toJsonValue(m_update_type));
    }
    return obj;
}

OAIStartNetworkResourceUpdateRequest_commitmentConfiguration OAIStartNetworkResourceUpdateRequest::getCommitmentConfiguration() const {
    return m_commitment_configuration;
}
void OAIStartNetworkResourceUpdateRequest::setCommitmentConfiguration(const OAIStartNetworkResourceUpdateRequest_commitmentConfiguration &commitment_configuration) {
    m_commitment_configuration = commitment_configuration;
    m_commitment_configuration_isSet = true;
}

bool OAIStartNetworkResourceUpdateRequest::is_commitment_configuration_Set() const{
    return m_commitment_configuration_isSet;
}

bool OAIStartNetworkResourceUpdateRequest::is_commitment_configuration_Valid() const{
    return m_commitment_configuration_isValid;
}

QString OAIStartNetworkResourceUpdateRequest::getNetworkResourceArn() const {
    return m_network_resource_arn;
}
void OAIStartNetworkResourceUpdateRequest::setNetworkResourceArn(const QString &network_resource_arn) {
    m_network_resource_arn = network_resource_arn;
    m_network_resource_arn_isSet = true;
}

bool OAIStartNetworkResourceUpdateRequest::is_network_resource_arn_Set() const{
    return m_network_resource_arn_isSet;
}

bool OAIStartNetworkResourceUpdateRequest::is_network_resource_arn_Valid() const{
    return m_network_resource_arn_isValid;
}

QString OAIStartNetworkResourceUpdateRequest::getReturnReason() const {
    return m_return_reason;
}
void OAIStartNetworkResourceUpdateRequest::setReturnReason(const QString &return_reason) {
    m_return_reason = return_reason;
    m_return_reason_isSet = true;
}

bool OAIStartNetworkResourceUpdateRequest::is_return_reason_Set() const{
    return m_return_reason_isSet;
}

bool OAIStartNetworkResourceUpdateRequest::is_return_reason_Valid() const{
    return m_return_reason_isValid;
}

OAIStartNetworkResourceUpdateRequest_shippingAddress OAIStartNetworkResourceUpdateRequest::getShippingAddress() const {
    return m_shipping_address;
}
void OAIStartNetworkResourceUpdateRequest::setShippingAddress(const OAIStartNetworkResourceUpdateRequest_shippingAddress &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAIStartNetworkResourceUpdateRequest::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAIStartNetworkResourceUpdateRequest::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

OAIUpdateType OAIStartNetworkResourceUpdateRequest::getUpdateType() const {
    return m_update_type;
}
void OAIStartNetworkResourceUpdateRequest::setUpdateType(const OAIUpdateType &update_type) {
    m_update_type = update_type;
    m_update_type_isSet = true;
}

bool OAIStartNetworkResourceUpdateRequest::is_update_type_Set() const{
    return m_update_type_isSet;
}

bool OAIStartNetworkResourceUpdateRequest::is_update_type_Valid() const{
    return m_update_type_isValid;
}

bool OAIStartNetworkResourceUpdateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commitment_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartNetworkResourceUpdateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_network_resource_arn_isValid && m_update_type_isValid && true;
}

} // namespace OpenAPI
