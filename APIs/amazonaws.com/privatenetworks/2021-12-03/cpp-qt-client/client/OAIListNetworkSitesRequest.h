/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListNetworkSitesRequest.h
 *
 * 
 */

#ifndef OAIListNetworkSitesRequest_H
#define OAIListNetworkSitesRequest_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListNetworkSitesRequest : public OAIObject {
public:
    OAIListNetworkSitesRequest();
    OAIListNetworkSitesRequest(QString json);
    ~OAIListNetworkSitesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getFilters() const;
    void setFilters(const QMap &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNetworkArn() const;
    void setNetworkArn(const QString &network_arn);
    bool is_network_arn_Set() const;
    bool is_network_arn_Valid() const;

    QString getStartToken() const;
    void setStartToken(const QString &start_token);
    bool is_start_token_Set() const;
    bool is_start_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_network_arn;
    bool m_network_arn_isSet;
    bool m_network_arn_isValid;

    QString m_start_token;
    bool m_start_token_isSet;
    bool m_start_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListNetworkSitesRequest)

#endif // OAIListNetworkSitesRequest_H
