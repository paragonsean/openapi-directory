/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitmentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitmentConfiguration::OAICommitmentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitmentConfiguration::OAICommitmentConfiguration() {
    this->initializeModel();
}

OAICommitmentConfiguration::~OAICommitmentConfiguration() {}

void OAICommitmentConfiguration::initializeModel() {

    m_automatic_renewal_isSet = false;
    m_automatic_renewal_isValid = false;

    m_commitment_length_isSet = false;
    m_commitment_length_isValid = false;
}

void OAICommitmentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitmentConfiguration::fromJsonObject(QJsonObject json) {

    m_automatic_renewal_isValid = ::OpenAPI::fromJsonValue(m_automatic_renewal, json[QString("automaticRenewal")]);
    m_automatic_renewal_isSet = !json[QString("automaticRenewal")].isNull() && m_automatic_renewal_isValid;

    m_commitment_length_isValid = ::OpenAPI::fromJsonValue(m_commitment_length, json[QString("commitmentLength")]);
    m_commitment_length_isSet = !json[QString("commitmentLength")].isNull() && m_commitment_length_isValid;
}

QString OAICommitmentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitmentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_automatic_renewal_isSet) {
        obj.insert(QString("automaticRenewal"), ::OpenAPI::toJsonValue(m_automatic_renewal));
    }
    if (m_commitment_length.isSet()) {
        obj.insert(QString("commitmentLength"), ::OpenAPI::toJsonValue(m_commitment_length));
    }
    return obj;
}

bool OAICommitmentConfiguration::getAutomaticRenewal() const {
    return m_automatic_renewal;
}
void OAICommitmentConfiguration::setAutomaticRenewal(const bool &automatic_renewal) {
    m_automatic_renewal = automatic_renewal;
    m_automatic_renewal_isSet = true;
}

bool OAICommitmentConfiguration::is_automatic_renewal_Set() const{
    return m_automatic_renewal_isSet;
}

bool OAICommitmentConfiguration::is_automatic_renewal_Valid() const{
    return m_automatic_renewal_isValid;
}

OAICommitmentLength OAICommitmentConfiguration::getCommitmentLength() const {
    return m_commitment_length;
}
void OAICommitmentConfiguration::setCommitmentLength(const OAICommitmentLength &commitment_length) {
    m_commitment_length = commitment_length;
    m_commitment_length_isSet = true;
}

bool OAICommitmentConfiguration::is_commitment_length_Set() const{
    return m_commitment_length_isSet;
}

bool OAICommitmentConfiguration::is_commitment_length_Valid() const{
    return m_commitment_length_isValid;
}

bool OAICommitmentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automatic_renewal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commitment_length.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitmentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_automatic_renewal_isValid && m_commitment_length_isValid && true;
}

} // namespace OpenAPI
