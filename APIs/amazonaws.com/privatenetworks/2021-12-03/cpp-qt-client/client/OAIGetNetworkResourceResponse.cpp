/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkResourceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkResourceResponse::OAIGetNetworkResourceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkResourceResponse::OAIGetNetworkResourceResponse() {
    this->initializeModel();
}

OAIGetNetworkResourceResponse::~OAIGetNetworkResourceResponse() {}

void OAIGetNetworkResourceResponse::initializeModel() {

    m_network_resource_isSet = false;
    m_network_resource_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIGetNetworkResourceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkResourceResponse::fromJsonObject(QJsonObject json) {

    m_network_resource_isValid = ::OpenAPI::fromJsonValue(m_network_resource, json[QString("networkResource")]);
    m_network_resource_isSet = !json[QString("networkResource")].isNull() && m_network_resource_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIGetNetworkResourceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkResourceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_network_resource.isSet()) {
        obj.insert(QString("networkResource"), ::OpenAPI::toJsonValue(m_network_resource));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAIConfigureAccessPointResponse_accessPoint OAIGetNetworkResourceResponse::getNetworkResource() const {
    return m_network_resource;
}
void OAIGetNetworkResourceResponse::setNetworkResource(const OAIConfigureAccessPointResponse_accessPoint &network_resource) {
    m_network_resource = network_resource;
    m_network_resource_isSet = true;
}

bool OAIGetNetworkResourceResponse::is_network_resource_Set() const{
    return m_network_resource_isSet;
}

bool OAIGetNetworkResourceResponse::is_network_resource_Valid() const{
    return m_network_resource_isValid;
}

QMap OAIGetNetworkResourceResponse::getTags() const {
    return m_tags;
}
void OAIGetNetworkResourceResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGetNetworkResourceResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGetNetworkResourceResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIGetNetworkResourceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_resource.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkResourceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_network_resource_isValid && true;
}

} // namespace OpenAPI
