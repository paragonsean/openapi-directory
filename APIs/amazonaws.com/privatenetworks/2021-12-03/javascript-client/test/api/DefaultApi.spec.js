/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsPrivate5G);
  }
}(this, function(expect, AwsPrivate5G) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsPrivate5G.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('acknowledgeOrderReceipt', function() {
      it('should call acknowledgeOrderReceipt successfully', function(done) {
        //uncomment below and update the code to test acknowledgeOrderReceipt
        //instance.acknowledgeOrderReceipt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('activateDeviceIdentifier', function() {
      it('should call activateDeviceIdentifier successfully', function(done) {
        //uncomment below and update the code to test activateDeviceIdentifier
        //instance.activateDeviceIdentifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('activateNetworkSite', function() {
      it('should call activateNetworkSite successfully', function(done) {
        //uncomment below and update the code to test activateNetworkSite
        //instance.activateNetworkSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configureAccessPoint', function() {
      it('should call configureAccessPoint successfully', function(done) {
        //uncomment below and update the code to test configureAccessPoint
        //instance.configureAccessPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetwork', function() {
      it('should call createNetwork successfully', function(done) {
        //uncomment below and update the code to test createNetwork
        //instance.createNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSite', function() {
      it('should call createNetworkSite successfully', function(done) {
        //uncomment below and update the code to test createNetworkSite
        //instance.createNetworkSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deactivateDeviceIdentifier', function() {
      it('should call deactivateDeviceIdentifier successfully', function(done) {
        //uncomment below and update the code to test deactivateDeviceIdentifier
        //instance.deactivateDeviceIdentifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetwork', function() {
      it('should call deleteNetwork successfully', function(done) {
        //uncomment below and update the code to test deleteNetwork
        //instance.deleteNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSite', function() {
      it('should call deleteNetworkSite successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSite
        //instance.deleteNetworkSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceIdentifier', function() {
      it('should call getDeviceIdentifier successfully', function(done) {
        //uncomment below and update the code to test getDeviceIdentifier
        //instance.getDeviceIdentifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetwork', function() {
      it('should call getNetwork successfully', function(done) {
        //uncomment below and update the code to test getNetwork
        //instance.getNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkResource', function() {
      it('should call getNetworkResource successfully', function(done) {
        //uncomment below and update the code to test getNetworkResource
        //instance.getNetworkResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSite', function() {
      it('should call getNetworkSite successfully', function(done) {
        //uncomment below and update the code to test getNetworkSite
        //instance.getNetworkSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrder', function() {
      it('should call getOrder successfully', function(done) {
        //uncomment below and update the code to test getOrder
        //instance.getOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeviceIdentifiers', function() {
      it('should call listDeviceIdentifiers successfully', function(done) {
        //uncomment below and update the code to test listDeviceIdentifiers
        //instance.listDeviceIdentifiers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNetworkResources', function() {
      it('should call listNetworkResources successfully', function(done) {
        //uncomment below and update the code to test listNetworkResources
        //instance.listNetworkResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNetworkSites', function() {
      it('should call listNetworkSites successfully', function(done) {
        //uncomment below and update the code to test listNetworkSites
        //instance.listNetworkSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNetworks', function() {
      it('should call listNetworks successfully', function(done) {
        //uncomment below and update the code to test listNetworks
        //instance.listNetworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrders', function() {
      it('should call listOrders successfully', function(done) {
        //uncomment below and update the code to test listOrders
        //instance.listOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ping', function() {
      it('should call ping successfully', function(done) {
        //uncomment below and update the code to test ping
        //instance.ping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startNetworkResourceUpdate', function() {
      it('should call startNetworkResourceUpdate successfully', function(done) {
        //uncomment below and update the code to test startNetworkResourceUpdate
        //instance.startNetworkResourceUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSite', function() {
      it('should call updateNetworkSite successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSite
        //instance.updateNetworkSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSitePlan', function() {
      it('should call updateNetworkSitePlan successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSitePlan
        //instance.updateNetworkSitePlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
