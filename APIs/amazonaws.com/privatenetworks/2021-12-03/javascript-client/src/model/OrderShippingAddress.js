/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The OrderShippingAddress model module.
 * @module model/OrderShippingAddress
 * @version 2021-12-03
 */
class OrderShippingAddress {
    /**
     * Constructs a new <code>OrderShippingAddress</code>.
     * @alias module:model/OrderShippingAddress
     * @implements module:model/Address
     * @param city {String} 
     * @param country {String} 
     * @param name {String} 
     * @param postalCode {String} 
     * @param stateOrProvince {String} 
     * @param street1 {String} 
     */
    constructor(city, country, name, postalCode, stateOrProvince, street1) { 
        Address.initialize(this, city, country, name, postalCode, stateOrProvince, street1);
        OrderShippingAddress.initialize(this, city, country, name, postalCode, stateOrProvince, street1);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, city, country, name, postalCode, stateOrProvince, street1) { 
        obj['city'] = city;
        obj['country'] = country;
        obj['name'] = name;
        obj['postalCode'] = postalCode;
        obj['stateOrProvince'] = stateOrProvince;
        obj['street1'] = street1;
    }

    /**
     * Constructs a <code>OrderShippingAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderShippingAddress} obj Optional instance to populate.
     * @return {module:model/OrderShippingAddress} The populated <code>OrderShippingAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderShippingAddress();
            Address.constructFromObject(data, obj);

            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('stateOrProvince')) {
                obj['stateOrProvince'] = ApiClient.convertToType(data['stateOrProvince'], 'String');
            }
            if (data.hasOwnProperty('street1')) {
                obj['street1'] = ApiClient.convertToType(data['street1'], 'String');
            }
            if (data.hasOwnProperty('street2')) {
                obj['street2'] = ApiClient.convertToType(data['street2'], 'String');
            }
            if (data.hasOwnProperty('street3')) {
                obj['street3'] = ApiClient.convertToType(data['street3'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderShippingAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderShippingAddress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderShippingAddress.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `city`
        if (data['city']) { // data not null
          String.validateJSON(data['city']);
        }
        // validate the optional field `company`
        if (data['company']) { // data not null
          String.validateJSON(data['company']);
        }
        // validate the optional field `country`
        if (data['country']) { // data not null
          String.validateJSON(data['country']);
        }
        // validate the optional field `emailAddress`
        if (data['emailAddress']) { // data not null
          String.validateJSON(data['emailAddress']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `phoneNumber`
        if (data['phoneNumber']) { // data not null
          String.validateJSON(data['phoneNumber']);
        }
        // validate the optional field `postalCode`
        if (data['postalCode']) { // data not null
          String.validateJSON(data['postalCode']);
        }
        // validate the optional field `stateOrProvince`
        if (data['stateOrProvince']) { // data not null
          String.validateJSON(data['stateOrProvince']);
        }
        // validate the optional field `street1`
        if (data['street1']) { // data not null
          String.validateJSON(data['street1']);
        }
        // validate the optional field `street2`
        if (data['street2']) { // data not null
          String.validateJSON(data['street2']);
        }
        // validate the optional field `street3`
        if (data['street3']) { // data not null
          String.validateJSON(data['street3']);
        }

        return true;
    }


}

OrderShippingAddress.RequiredProperties = ["city", "country", "name", "postalCode", "stateOrProvince", "street1"];

/**
 * @member {String} city
 */
OrderShippingAddress.prototype['city'] = undefined;

/**
 * @member {String} company
 */
OrderShippingAddress.prototype['company'] = undefined;

/**
 * @member {String} country
 */
OrderShippingAddress.prototype['country'] = undefined;

/**
 * @member {String} emailAddress
 */
OrderShippingAddress.prototype['emailAddress'] = undefined;

/**
 * @member {String} name
 */
OrderShippingAddress.prototype['name'] = undefined;

/**
 * @member {String} phoneNumber
 */
OrderShippingAddress.prototype['phoneNumber'] = undefined;

/**
 * @member {String} postalCode
 */
OrderShippingAddress.prototype['postalCode'] = undefined;

/**
 * @member {String} stateOrProvince
 */
OrderShippingAddress.prototype['stateOrProvince'] = undefined;

/**
 * @member {String} street1
 */
OrderShippingAddress.prototype['street1'] = undefined;

/**
 * @member {String} street2
 */
OrderShippingAddress.prototype['street2'] = undefined;

/**
 * @member {String} street3
 */
OrderShippingAddress.prototype['street3'] = undefined;


// Implement Address interface:
/**
 * @member {String} city
 */
Address.prototype['city'] = undefined;
/**
 * @member {String} company
 */
Address.prototype['company'] = undefined;
/**
 * @member {String} country
 */
Address.prototype['country'] = undefined;
/**
 * @member {String} emailAddress
 */
Address.prototype['emailAddress'] = undefined;
/**
 * @member {String} name
 */
Address.prototype['name'] = undefined;
/**
 * @member {String} phoneNumber
 */
Address.prototype['phoneNumber'] = undefined;
/**
 * @member {String} postalCode
 */
Address.prototype['postalCode'] = undefined;
/**
 * @member {String} stateOrProvince
 */
Address.prototype['stateOrProvince'] = undefined;
/**
 * @member {String} street1
 */
Address.prototype['street1'] = undefined;
/**
 * @member {String} street2
 */
Address.prototype['street2'] = undefined;
/**
 * @member {String} street3
 */
Address.prototype['street3'] = undefined;




export default OrderShippingAddress;

