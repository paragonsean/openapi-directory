/**
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ElevationReference from './ElevationReference';
import ElevationUnit from './ElevationUnit';

/**
 * The Position model module.
 * @module model/Position
 * @version 2021-12-03
 */
class Position {
    /**
     * Constructs a new <code>Position</code>.
     * Information about a position.
     * @alias module:model/Position
     */
    constructor() { 
        
        Position.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Position</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Position} obj Optional instance to populate.
     * @return {module:model/Position} The populated <code>Position</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Position();

            if (data.hasOwnProperty('elevation')) {
                obj['elevation'] = ApiClient.convertToType(data['elevation'], 'Number');
            }
            if (data.hasOwnProperty('elevationReference')) {
                obj['elevationReference'] = ApiClient.convertToType(data['elevationReference'], ElevationReference);
            }
            if (data.hasOwnProperty('elevationUnit')) {
                obj['elevationUnit'] = ApiClient.convertToType(data['elevationUnit'], ElevationUnit);
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Position</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Position</code>.
     */
    static validateJSON(data) {
        // validate the optional field `elevation`
        if (data['elevation']) { // data not null
          Number.validateJSON(data['elevation']);
        }
        // validate the optional field `elevationReference`
        if (data['elevationReference']) { // data not null
          ElevationReference.validateJSON(data['elevationReference']);
        }
        // validate the optional field `elevationUnit`
        if (data['elevationUnit']) { // data not null
          ElevationUnit.validateJSON(data['elevationUnit']);
        }
        // validate the optional field `latitude`
        if (data['latitude']) { // data not null
          Number.validateJSON(data['latitude']);
        }
        // validate the optional field `longitude`
        if (data['longitude']) { // data not null
          Number.validateJSON(data['longitude']);
        }

        return true;
    }


}



/**
 * @member {Number} elevation
 */
Position.prototype['elevation'] = undefined;

/**
 * @member {module:model/ElevationReference} elevationReference
 */
Position.prototype['elevationReference'] = undefined;

/**
 * @member {module:model/ElevationUnit} elevationUnit
 */
Position.prototype['elevationUnit'] = undefined;

/**
 * @member {Number} latitude
 */
Position.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
Position.prototype['longitude'] = undefined;






export default Position;

