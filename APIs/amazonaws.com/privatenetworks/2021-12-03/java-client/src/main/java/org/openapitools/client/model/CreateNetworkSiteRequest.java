/*
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateNetworkSiteRequestPendingPlan;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateNetworkSiteRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:06.702058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateNetworkSiteRequest {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "availabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE_ID = "availabilityZoneId";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE_ID)
  private String availabilityZoneId;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NETWORK_ARN = "networkArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_ARN)
  private String networkArn;

  public static final String SERIALIZED_NAME_NETWORK_SITE_NAME = "networkSiteName";
  @SerializedName(SERIALIZED_NAME_NETWORK_SITE_NAME)
  private String networkSiteName;

  public static final String SERIALIZED_NAME_PENDING_PLAN = "pendingPlan";
  @SerializedName(SERIALIZED_NAME_PENDING_PLAN)
  private CreateNetworkSiteRequestPendingPlan pendingPlan;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateNetworkSiteRequest() {
  }

  public CreateNetworkSiteRequest availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * The Availability Zone that is the parent of this site. You can&#39;t change the Availability Zone after you create the site.
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public CreateNetworkSiteRequest availabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
    return this;
  }

  /**
   * The ID of the Availability Zone that is the parent of this site. You can&#39;t change the Availability Zone after you create the site.
   * @return availabilityZoneId
   */
  @javax.annotation.Nullable
  public String getAvailabilityZoneId() {
    return availabilityZoneId;
  }

  public void setAvailabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
  }


  public CreateNetworkSiteRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\&quot;&gt;How to ensure idempotency&lt;/a&gt;.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateNetworkSiteRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the site.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateNetworkSiteRequest networkArn(String networkArn) {
    this.networkArn = networkArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the network.
   * @return networkArn
   */
  @javax.annotation.Nonnull
  public String getNetworkArn() {
    return networkArn;
  }

  public void setNetworkArn(String networkArn) {
    this.networkArn = networkArn;
  }


  public CreateNetworkSiteRequest networkSiteName(String networkSiteName) {
    this.networkSiteName = networkSiteName;
    return this;
  }

  /**
   * The name of the site. You can&#39;t change the name after you create the site.
   * @return networkSiteName
   */
  @javax.annotation.Nonnull
  public String getNetworkSiteName() {
    return networkSiteName;
  }

  public void setNetworkSiteName(String networkSiteName) {
    this.networkSiteName = networkSiteName;
  }


  public CreateNetworkSiteRequest pendingPlan(CreateNetworkSiteRequestPendingPlan pendingPlan) {
    this.pendingPlan = pendingPlan;
    return this;
  }

  /**
   * Get pendingPlan
   * @return pendingPlan
   */
  @javax.annotation.Nullable
  public CreateNetworkSiteRequestPendingPlan getPendingPlan() {
    return pendingPlan;
  }

  public void setPendingPlan(CreateNetworkSiteRequestPendingPlan pendingPlan) {
    this.pendingPlan = pendingPlan;
  }


  public CreateNetworkSiteRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateNetworkSiteRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   *  The tags to apply to the network site. 
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNetworkSiteRequest createNetworkSiteRequest = (CreateNetworkSiteRequest) o;
    return Objects.equals(this.availabilityZone, createNetworkSiteRequest.availabilityZone) &&
        Objects.equals(this.availabilityZoneId, createNetworkSiteRequest.availabilityZoneId) &&
        Objects.equals(this.clientToken, createNetworkSiteRequest.clientToken) &&
        Objects.equals(this.description, createNetworkSiteRequest.description) &&
        Objects.equals(this.networkArn, createNetworkSiteRequest.networkArn) &&
        Objects.equals(this.networkSiteName, createNetworkSiteRequest.networkSiteName) &&
        Objects.equals(this.pendingPlan, createNetworkSiteRequest.pendingPlan) &&
        Objects.equals(this.tags, createNetworkSiteRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZone, availabilityZoneId, clientToken, description, networkArn, networkSiteName, pendingPlan, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNetworkSiteRequest {\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    availabilityZoneId: ").append(toIndentedString(availabilityZoneId)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    networkArn: ").append(toIndentedString(networkArn)).append("\n");
    sb.append("    networkSiteName: ").append(toIndentedString(networkSiteName)).append("\n");
    sb.append("    pendingPlan: ").append(toIndentedString(pendingPlan)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilityZone");
    openapiFields.add("availabilityZoneId");
    openapiFields.add("clientToken");
    openapiFields.add("description");
    openapiFields.add("networkArn");
    openapiFields.add("networkSiteName");
    openapiFields.add("pendingPlan");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("networkArn");
    openapiRequiredFields.add("networkSiteName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateNetworkSiteRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateNetworkSiteRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateNetworkSiteRequest is not found in the empty JSON string", CreateNetworkSiteRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateNetworkSiteRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateNetworkSiteRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateNetworkSiteRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("availabilityZone") != null && !jsonObj.get("availabilityZone").isJsonNull()) && !jsonObj.get("availabilityZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityZone").toString()));
      }
      if ((jsonObj.get("availabilityZoneId") != null && !jsonObj.get("availabilityZoneId").isJsonNull()) && !jsonObj.get("availabilityZoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityZoneId").toString()));
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("networkArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkArn").toString()));
      }
      if (!jsonObj.get("networkSiteName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkSiteName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkSiteName").toString()));
      }
      // validate the optional field `pendingPlan`
      if (jsonObj.get("pendingPlan") != null && !jsonObj.get("pendingPlan").isJsonNull()) {
        CreateNetworkSiteRequestPendingPlan.validateJsonElement(jsonObj.get("pendingPlan"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateNetworkSiteRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateNetworkSiteRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateNetworkSiteRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateNetworkSiteRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateNetworkSiteRequest>() {
           @Override
           public void write(JsonWriter out, CreateNetworkSiteRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateNetworkSiteRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateNetworkSiteRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateNetworkSiteRequest
   * @throws IOException if the JSON string is invalid with respect to CreateNetworkSiteRequest
   */
  public static CreateNetworkSiteRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateNetworkSiteRequest.class);
  }

  /**
   * Convert an instance of CreateNetworkSiteRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

