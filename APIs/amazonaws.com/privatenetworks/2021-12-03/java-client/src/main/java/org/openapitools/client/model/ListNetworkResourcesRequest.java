/*
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListNetworkResourcesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:06.702058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListNetworkResourcesRequest {
  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private Map<String, List<String>> filters = new HashMap<>();

  public static final String SERIALIZED_NAME_MAX_RESULTS = "maxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NETWORK_ARN = "networkArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_ARN)
  private String networkArn;

  public static final String SERIALIZED_NAME_START_TOKEN = "startToken";
  @SerializedName(SERIALIZED_NAME_START_TOKEN)
  private String startToken;

  public ListNetworkResourcesRequest() {
  }

  public ListNetworkResourcesRequest filters(Map<String, List<String>> filters) {
    this.filters = filters;
    return this;
  }

  public ListNetworkResourcesRequest putFiltersItem(String key, List<String> filtersItem) {
    if (this.filters == null) {
      this.filters = new HashMap<>();
    }
    this.filters.put(key, filtersItem);
    return this;
  }

  /**
   * &lt;p&gt;The filters.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ORDER&lt;/code&gt; - The Amazon Resource Name (ARN) of the order.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;STATUS&lt;/code&gt; - The status (&lt;code&gt;AVAILABLE&lt;/code&gt; | &lt;code&gt;DELETED&lt;/code&gt; | &lt;code&gt;DELETING&lt;/code&gt; | &lt;code&gt;PENDING&lt;/code&gt; | &lt;code&gt;PENDING_RETURN&lt;/code&gt; | &lt;code&gt;PROVISIONING&lt;/code&gt; | &lt;code&gt;SHIPPED&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an &lt;code&gt;OR&lt;/code&gt;, and the request returns all results that match any of the specified values.&lt;/p&gt;
   * @return filters
   */
  @javax.annotation.Nullable
  public Map<String, List<String>> getFilters() {
    return filters;
  }

  public void setFilters(Map<String, List<String>> filters) {
    this.filters = filters;
  }


  public ListNetworkResourcesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * The maximum number of results to return.
   * minimum: 1
   * maximum: 20
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public ListNetworkResourcesRequest networkArn(String networkArn) {
    this.networkArn = networkArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the network.
   * @return networkArn
   */
  @javax.annotation.Nonnull
  public String getNetworkArn() {
    return networkArn;
  }

  public void setNetworkArn(String networkArn) {
    this.networkArn = networkArn;
  }


  public ListNetworkResourcesRequest startToken(String startToken) {
    this.startToken = startToken;
    return this;
  }

  /**
   * The token for the next page of results.
   * @return startToken
   */
  @javax.annotation.Nullable
  public String getStartToken() {
    return startToken;
  }

  public void setStartToken(String startToken) {
    this.startToken = startToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListNetworkResourcesRequest listNetworkResourcesRequest = (ListNetworkResourcesRequest) o;
    return Objects.equals(this.filters, listNetworkResourcesRequest.filters) &&
        Objects.equals(this.maxResults, listNetworkResourcesRequest.maxResults) &&
        Objects.equals(this.networkArn, listNetworkResourcesRequest.networkArn) &&
        Objects.equals(this.startToken, listNetworkResourcesRequest.startToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filters, maxResults, networkArn, startToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListNetworkResourcesRequest {\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    networkArn: ").append(toIndentedString(networkArn)).append("\n");
    sb.append("    startToken: ").append(toIndentedString(startToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("filters");
    openapiFields.add("maxResults");
    openapiFields.add("networkArn");
    openapiFields.add("startToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("networkArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListNetworkResourcesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListNetworkResourcesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListNetworkResourcesRequest is not found in the empty JSON string", ListNetworkResourcesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListNetworkResourcesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListNetworkResourcesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListNetworkResourcesRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("networkArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkArn").toString()));
      }
      if ((jsonObj.get("startToken") != null && !jsonObj.get("startToken").isJsonNull()) && !jsonObj.get("startToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListNetworkResourcesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListNetworkResourcesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListNetworkResourcesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListNetworkResourcesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ListNetworkResourcesRequest>() {
           @Override
           public void write(JsonWriter out, ListNetworkResourcesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListNetworkResourcesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListNetworkResourcesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListNetworkResourcesRequest
   * @throws IOException if the JSON string is invalid with respect to ListNetworkResourcesRequest
   */
  public static ListNetworkResourcesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListNetworkResourcesRequest.class);
  }

  /**
   * Convert an instance of ListNetworkResourcesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

