/*
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DeviceIdentifierStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ActivateDeviceIdentifierResponseDeviceIdentifier
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:06.702058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActivateDeviceIdentifierResponseDeviceIdentifier {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DEVICE_IDENTIFIER_ARN = "deviceIdentifierArn";
  @SerializedName(SERIALIZED_NAME_DEVICE_IDENTIFIER_ARN)
  private String deviceIdentifierArn;

  public static final String SERIALIZED_NAME_ICCID = "iccid";
  @SerializedName(SERIALIZED_NAME_ICCID)
  private String iccid;

  public static final String SERIALIZED_NAME_IMSI = "imsi";
  @SerializedName(SERIALIZED_NAME_IMSI)
  private String imsi;

  public static final String SERIALIZED_NAME_NETWORK_ARN = "networkArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_ARN)
  private String networkArn;

  public static final String SERIALIZED_NAME_ORDER_ARN = "orderArn";
  @SerializedName(SERIALIZED_NAME_ORDER_ARN)
  private String orderArn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DeviceIdentifierStatus status;

  public static final String SERIALIZED_NAME_TRAFFIC_GROUP_ARN = "trafficGroupArn";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_GROUP_ARN)
  private String trafficGroupArn;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public ActivateDeviceIdentifierResponseDeviceIdentifier() {
  }

  public ActivateDeviceIdentifierResponseDeviceIdentifier createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier deviceIdentifierArn(String deviceIdentifierArn) {
    this.deviceIdentifierArn = deviceIdentifierArn;
    return this;
  }

  /**
   * Get deviceIdentifierArn
   * @return deviceIdentifierArn
   */
  @javax.annotation.Nullable
  public String getDeviceIdentifierArn() {
    return deviceIdentifierArn;
  }

  public void setDeviceIdentifierArn(String deviceIdentifierArn) {
    this.deviceIdentifierArn = deviceIdentifierArn;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier iccid(String iccid) {
    this.iccid = iccid;
    return this;
  }

  /**
   * Get iccid
   * @return iccid
   */
  @javax.annotation.Nullable
  public String getIccid() {
    return iccid;
  }

  public void setIccid(String iccid) {
    this.iccid = iccid;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier imsi(String imsi) {
    this.imsi = imsi;
    return this;
  }

  /**
   * Get imsi
   * @return imsi
   */
  @javax.annotation.Nullable
  public String getImsi() {
    return imsi;
  }

  public void setImsi(String imsi) {
    this.imsi = imsi;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier networkArn(String networkArn) {
    this.networkArn = networkArn;
    return this;
  }

  /**
   * Get networkArn
   * @return networkArn
   */
  @javax.annotation.Nullable
  public String getNetworkArn() {
    return networkArn;
  }

  public void setNetworkArn(String networkArn) {
    this.networkArn = networkArn;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier orderArn(String orderArn) {
    this.orderArn = orderArn;
    return this;
  }

  /**
   * Get orderArn
   * @return orderArn
   */
  @javax.annotation.Nullable
  public String getOrderArn() {
    return orderArn;
  }

  public void setOrderArn(String orderArn) {
    this.orderArn = orderArn;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier status(DeviceIdentifierStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DeviceIdentifierStatus getStatus() {
    return status;
  }

  public void setStatus(DeviceIdentifierStatus status) {
    this.status = status;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier trafficGroupArn(String trafficGroupArn) {
    this.trafficGroupArn = trafficGroupArn;
    return this;
  }

  /**
   * Get trafficGroupArn
   * @return trafficGroupArn
   */
  @javax.annotation.Nullable
  public String getTrafficGroupArn() {
    return trafficGroupArn;
  }

  public void setTrafficGroupArn(String trafficGroupArn) {
    this.trafficGroupArn = trafficGroupArn;
  }


  public ActivateDeviceIdentifierResponseDeviceIdentifier vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

  /**
   * Get vendor
   * @return vendor
   */
  @javax.annotation.Nullable
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivateDeviceIdentifierResponseDeviceIdentifier activateDeviceIdentifierResponseDeviceIdentifier = (ActivateDeviceIdentifierResponseDeviceIdentifier) o;
    return Objects.equals(this.createdAt, activateDeviceIdentifierResponseDeviceIdentifier.createdAt) &&
        Objects.equals(this.deviceIdentifierArn, activateDeviceIdentifierResponseDeviceIdentifier.deviceIdentifierArn) &&
        Objects.equals(this.iccid, activateDeviceIdentifierResponseDeviceIdentifier.iccid) &&
        Objects.equals(this.imsi, activateDeviceIdentifierResponseDeviceIdentifier.imsi) &&
        Objects.equals(this.networkArn, activateDeviceIdentifierResponseDeviceIdentifier.networkArn) &&
        Objects.equals(this.orderArn, activateDeviceIdentifierResponseDeviceIdentifier.orderArn) &&
        Objects.equals(this.status, activateDeviceIdentifierResponseDeviceIdentifier.status) &&
        Objects.equals(this.trafficGroupArn, activateDeviceIdentifierResponseDeviceIdentifier.trafficGroupArn) &&
        Objects.equals(this.vendor, activateDeviceIdentifierResponseDeviceIdentifier.vendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, deviceIdentifierArn, iccid, imsi, networkArn, orderArn, status, trafficGroupArn, vendor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivateDeviceIdentifierResponseDeviceIdentifier {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deviceIdentifierArn: ").append(toIndentedString(deviceIdentifierArn)).append("\n");
    sb.append("    iccid: ").append(toIndentedString(iccid)).append("\n");
    sb.append("    imsi: ").append(toIndentedString(imsi)).append("\n");
    sb.append("    networkArn: ").append(toIndentedString(networkArn)).append("\n");
    sb.append("    orderArn: ").append(toIndentedString(orderArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trafficGroupArn: ").append(toIndentedString(trafficGroupArn)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdAt");
    openapiFields.add("deviceIdentifierArn");
    openapiFields.add("iccid");
    openapiFields.add("imsi");
    openapiFields.add("networkArn");
    openapiFields.add("orderArn");
    openapiFields.add("status");
    openapiFields.add("trafficGroupArn");
    openapiFields.add("vendor");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivateDeviceIdentifierResponseDeviceIdentifier
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivateDeviceIdentifierResponseDeviceIdentifier.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivateDeviceIdentifierResponseDeviceIdentifier is not found in the empty JSON string", ActivateDeviceIdentifierResponseDeviceIdentifier.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivateDeviceIdentifierResponseDeviceIdentifier.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivateDeviceIdentifierResponseDeviceIdentifier` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `deviceIdentifierArn`
      if (jsonObj.get("deviceIdentifierArn") != null && !jsonObj.get("deviceIdentifierArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("deviceIdentifierArn"));
      }
      // validate the optional field `iccid`
      if (jsonObj.get("iccid") != null && !jsonObj.get("iccid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("iccid"));
      }
      // validate the optional field `imsi`
      if (jsonObj.get("imsi") != null && !jsonObj.get("imsi").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("imsi"));
      }
      // validate the optional field `networkArn`
      if (jsonObj.get("networkArn") != null && !jsonObj.get("networkArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("networkArn"));
      }
      // validate the optional field `orderArn`
      if (jsonObj.get("orderArn") != null && !jsonObj.get("orderArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("orderArn"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        DeviceIdentifierStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `trafficGroupArn`
      if (jsonObj.get("trafficGroupArn") != null && !jsonObj.get("trafficGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("trafficGroupArn"));
      }
      // validate the optional field `vendor`
      if (jsonObj.get("vendor") != null && !jsonObj.get("vendor").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("vendor"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivateDeviceIdentifierResponseDeviceIdentifier.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivateDeviceIdentifierResponseDeviceIdentifier' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivateDeviceIdentifierResponseDeviceIdentifier> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivateDeviceIdentifierResponseDeviceIdentifier.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivateDeviceIdentifierResponseDeviceIdentifier>() {
           @Override
           public void write(JsonWriter out, ActivateDeviceIdentifierResponseDeviceIdentifier value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivateDeviceIdentifierResponseDeviceIdentifier read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivateDeviceIdentifierResponseDeviceIdentifier given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivateDeviceIdentifierResponseDeviceIdentifier
   * @throws IOException if the JSON string is invalid with respect to ActivateDeviceIdentifierResponseDeviceIdentifier
   */
  public static ActivateDeviceIdentifierResponseDeviceIdentifier fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivateDeviceIdentifierResponseDeviceIdentifier.class);
  }

  /**
   * Convert an instance of ActivateDeviceIdentifierResponseDeviceIdentifier to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

