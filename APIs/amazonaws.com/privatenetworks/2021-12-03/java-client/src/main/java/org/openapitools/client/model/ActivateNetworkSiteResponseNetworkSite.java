/*
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.NetworkSiteCurrentPlan;
import org.openapitools.client.model.NetworkSitePendingPlan;
import org.openapitools.client.model.NetworkSiteStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ActivateNetworkSiteResponseNetworkSite
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:06.702058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActivateNetworkSiteResponseNetworkSite {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "availabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE_ID = "availabilityZoneId";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE_ID)
  private String availabilityZoneId;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CURRENT_PLAN = "currentPlan";
  @SerializedName(SERIALIZED_NAME_CURRENT_PLAN)
  private NetworkSiteCurrentPlan currentPlan;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NETWORK_ARN = "networkArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_ARN)
  private String networkArn;

  public static final String SERIALIZED_NAME_NETWORK_SITE_ARN = "networkSiteArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_SITE_ARN)
  private String networkSiteArn;

  public static final String SERIALIZED_NAME_NETWORK_SITE_NAME = "networkSiteName";
  @SerializedName(SERIALIZED_NAME_NETWORK_SITE_NAME)
  private String networkSiteName;

  public static final String SERIALIZED_NAME_PENDING_PLAN = "pendingPlan";
  @SerializedName(SERIALIZED_NAME_PENDING_PLAN)
  private NetworkSitePendingPlan pendingPlan;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private NetworkSiteStatus status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "statusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public ActivateNetworkSiteResponseNetworkSite() {
  }

  public ActivateNetworkSiteResponseNetworkSite availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public ActivateNetworkSiteResponseNetworkSite availabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
    return this;
  }

  /**
   * Get availabilityZoneId
   * @return availabilityZoneId
   */
  @javax.annotation.Nullable
  public String getAvailabilityZoneId() {
    return availabilityZoneId;
  }

  public void setAvailabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
  }


  public ActivateNetworkSiteResponseNetworkSite createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ActivateNetworkSiteResponseNetworkSite currentPlan(NetworkSiteCurrentPlan currentPlan) {
    this.currentPlan = currentPlan;
    return this;
  }

  /**
   * Get currentPlan
   * @return currentPlan
   */
  @javax.annotation.Nullable
  public NetworkSiteCurrentPlan getCurrentPlan() {
    return currentPlan;
  }

  public void setCurrentPlan(NetworkSiteCurrentPlan currentPlan) {
    this.currentPlan = currentPlan;
  }


  public ActivateNetworkSiteResponseNetworkSite description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ActivateNetworkSiteResponseNetworkSite networkArn(String networkArn) {
    this.networkArn = networkArn;
    return this;
  }

  /**
   * Get networkArn
   * @return networkArn
   */
  @javax.annotation.Nonnull
  public String getNetworkArn() {
    return networkArn;
  }

  public void setNetworkArn(String networkArn) {
    this.networkArn = networkArn;
  }


  public ActivateNetworkSiteResponseNetworkSite networkSiteArn(String networkSiteArn) {
    this.networkSiteArn = networkSiteArn;
    return this;
  }

  /**
   * Get networkSiteArn
   * @return networkSiteArn
   */
  @javax.annotation.Nonnull
  public String getNetworkSiteArn() {
    return networkSiteArn;
  }

  public void setNetworkSiteArn(String networkSiteArn) {
    this.networkSiteArn = networkSiteArn;
  }


  public ActivateNetworkSiteResponseNetworkSite networkSiteName(String networkSiteName) {
    this.networkSiteName = networkSiteName;
    return this;
  }

  /**
   * Get networkSiteName
   * @return networkSiteName
   */
  @javax.annotation.Nonnull
  public String getNetworkSiteName() {
    return networkSiteName;
  }

  public void setNetworkSiteName(String networkSiteName) {
    this.networkSiteName = networkSiteName;
  }


  public ActivateNetworkSiteResponseNetworkSite pendingPlan(NetworkSitePendingPlan pendingPlan) {
    this.pendingPlan = pendingPlan;
    return this;
  }

  /**
   * Get pendingPlan
   * @return pendingPlan
   */
  @javax.annotation.Nullable
  public NetworkSitePendingPlan getPendingPlan() {
    return pendingPlan;
  }

  public void setPendingPlan(NetworkSitePendingPlan pendingPlan) {
    this.pendingPlan = pendingPlan;
  }


  public ActivateNetworkSiteResponseNetworkSite status(NetworkSiteStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public NetworkSiteStatus getStatus() {
    return status;
  }

  public void setStatus(NetworkSiteStatus status) {
    this.status = status;
  }


  public ActivateNetworkSiteResponseNetworkSite statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivateNetworkSiteResponseNetworkSite activateNetworkSiteResponseNetworkSite = (ActivateNetworkSiteResponseNetworkSite) o;
    return Objects.equals(this.availabilityZone, activateNetworkSiteResponseNetworkSite.availabilityZone) &&
        Objects.equals(this.availabilityZoneId, activateNetworkSiteResponseNetworkSite.availabilityZoneId) &&
        Objects.equals(this.createdAt, activateNetworkSiteResponseNetworkSite.createdAt) &&
        Objects.equals(this.currentPlan, activateNetworkSiteResponseNetworkSite.currentPlan) &&
        Objects.equals(this.description, activateNetworkSiteResponseNetworkSite.description) &&
        Objects.equals(this.networkArn, activateNetworkSiteResponseNetworkSite.networkArn) &&
        Objects.equals(this.networkSiteArn, activateNetworkSiteResponseNetworkSite.networkSiteArn) &&
        Objects.equals(this.networkSiteName, activateNetworkSiteResponseNetworkSite.networkSiteName) &&
        Objects.equals(this.pendingPlan, activateNetworkSiteResponseNetworkSite.pendingPlan) &&
        Objects.equals(this.status, activateNetworkSiteResponseNetworkSite.status) &&
        Objects.equals(this.statusReason, activateNetworkSiteResponseNetworkSite.statusReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZone, availabilityZoneId, createdAt, currentPlan, description, networkArn, networkSiteArn, networkSiteName, pendingPlan, status, statusReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivateNetworkSiteResponseNetworkSite {\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    availabilityZoneId: ").append(toIndentedString(availabilityZoneId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currentPlan: ").append(toIndentedString(currentPlan)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    networkArn: ").append(toIndentedString(networkArn)).append("\n");
    sb.append("    networkSiteArn: ").append(toIndentedString(networkSiteArn)).append("\n");
    sb.append("    networkSiteName: ").append(toIndentedString(networkSiteName)).append("\n");
    sb.append("    pendingPlan: ").append(toIndentedString(pendingPlan)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilityZone");
    openapiFields.add("availabilityZoneId");
    openapiFields.add("createdAt");
    openapiFields.add("currentPlan");
    openapiFields.add("description");
    openapiFields.add("networkArn");
    openapiFields.add("networkSiteArn");
    openapiFields.add("networkSiteName");
    openapiFields.add("pendingPlan");
    openapiFields.add("status");
    openapiFields.add("statusReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("networkArn");
    openapiRequiredFields.add("networkSiteArn");
    openapiRequiredFields.add("networkSiteName");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivateNetworkSiteResponseNetworkSite
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivateNetworkSiteResponseNetworkSite.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivateNetworkSiteResponseNetworkSite is not found in the empty JSON string", ActivateNetworkSiteResponseNetworkSite.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivateNetworkSiteResponseNetworkSite.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivateNetworkSiteResponseNetworkSite` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActivateNetworkSiteResponseNetworkSite.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `availabilityZone`
      if (jsonObj.get("availabilityZone") != null && !jsonObj.get("availabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("availabilityZone"));
      }
      // validate the optional field `availabilityZoneId`
      if (jsonObj.get("availabilityZoneId") != null && !jsonObj.get("availabilityZoneId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("availabilityZoneId"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `currentPlan`
      if (jsonObj.get("currentPlan") != null && !jsonObj.get("currentPlan").isJsonNull()) {
        NetworkSiteCurrentPlan.validateJsonElement(jsonObj.get("currentPlan"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the required field `networkArn`
      String.validateJsonElement(jsonObj.get("networkArn"));
      // validate the required field `networkSiteArn`
      String.validateJsonElement(jsonObj.get("networkSiteArn"));
      // validate the required field `networkSiteName`
      String.validateJsonElement(jsonObj.get("networkSiteName"));
      // validate the optional field `pendingPlan`
      if (jsonObj.get("pendingPlan") != null && !jsonObj.get("pendingPlan").isJsonNull()) {
        NetworkSitePendingPlan.validateJsonElement(jsonObj.get("pendingPlan"));
      }
      // validate the required field `status`
      NetworkSiteStatus.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `statusReason`
      if (jsonObj.get("statusReason") != null && !jsonObj.get("statusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivateNetworkSiteResponseNetworkSite.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivateNetworkSiteResponseNetworkSite' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivateNetworkSiteResponseNetworkSite> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivateNetworkSiteResponseNetworkSite.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivateNetworkSiteResponseNetworkSite>() {
           @Override
           public void write(JsonWriter out, ActivateNetworkSiteResponseNetworkSite value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivateNetworkSiteResponseNetworkSite read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivateNetworkSiteResponseNetworkSite given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivateNetworkSiteResponseNetworkSite
   * @throws IOException if the JSON string is invalid with respect to ActivateNetworkSiteResponseNetworkSite
   */
  public static ActivateNetworkSiteResponseNetworkSite fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivateNetworkSiteResponseNetworkSite.class);
  }

  /**
   * Convert an instance of ActivateNetworkSiteResponseNetworkSite to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

