/*
 * AWS Private 5G
 * Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
 *
 * The version of the OpenAPI document: 2021-12-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ActivateNetworkSiteRequestCommitmentConfiguration;
import org.openapitools.client.model.ActivateNetworkSiteRequestShippingAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartNetworkResourceUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:06.702058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartNetworkResourceUpdateRequest {
  public static final String SERIALIZED_NAME_COMMITMENT_CONFIGURATION = "commitmentConfiguration";
  @SerializedName(SERIALIZED_NAME_COMMITMENT_CONFIGURATION)
  private ActivateNetworkSiteRequestCommitmentConfiguration commitmentConfiguration;

  public static final String SERIALIZED_NAME_NETWORK_RESOURCE_ARN = "networkResourceArn";
  @SerializedName(SERIALIZED_NAME_NETWORK_RESOURCE_ARN)
  private String networkResourceArn;

  public static final String SERIALIZED_NAME_RETURN_REASON = "returnReason";
  @SerializedName(SERIALIZED_NAME_RETURN_REASON)
  private String returnReason;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private ActivateNetworkSiteRequestShippingAddress shippingAddress;

  /**
   * &lt;p&gt;The update type.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;REPLACE&lt;/code&gt; - Submits a request to replace a defective radio unit. We provide a shipping label that you can use for the return process and we ship a replacement radio unit to you.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RETURN&lt;/code&gt; - Submits a request to return a radio unit that you no longer need. We provide a shipping label that you can use for the return process.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;COMMITMENT&lt;/code&gt; - Submits a request to change or renew the commitment period. If you choose this value, then you must set &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/private-networks/latest/APIReference/API_StartNetworkResourceUpdate.html#privatenetworks-StartNetworkResourceUpdate-request-commitmentConfiguration\&quot;&gt; &lt;code&gt;commitmentConfiguration&lt;/code&gt; &lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   */
  @JsonAdapter(UpdateTypeEnum.Adapter.class)
  public enum UpdateTypeEnum {
    REPLACE("REPLACE"),
    
    RETURN("RETURN"),
    
    COMMITMENT("COMMITMENT");

    private String value;

    UpdateTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UpdateTypeEnum fromValue(String value) {
      for (UpdateTypeEnum b : UpdateTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UpdateTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UpdateTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UpdateTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UpdateTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      UpdateTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_UPDATE_TYPE = "updateType";
  @SerializedName(SERIALIZED_NAME_UPDATE_TYPE)
  private UpdateTypeEnum updateType;

  public StartNetworkResourceUpdateRequest() {
  }

  public StartNetworkResourceUpdateRequest commitmentConfiguration(ActivateNetworkSiteRequestCommitmentConfiguration commitmentConfiguration) {
    this.commitmentConfiguration = commitmentConfiguration;
    return this;
  }

  /**
   * Get commitmentConfiguration
   * @return commitmentConfiguration
   */
  @javax.annotation.Nullable
  public ActivateNetworkSiteRequestCommitmentConfiguration getCommitmentConfiguration() {
    return commitmentConfiguration;
  }

  public void setCommitmentConfiguration(ActivateNetworkSiteRequestCommitmentConfiguration commitmentConfiguration) {
    this.commitmentConfiguration = commitmentConfiguration;
  }


  public StartNetworkResourceUpdateRequest networkResourceArn(String networkResourceArn) {
    this.networkResourceArn = networkResourceArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the network resource.
   * @return networkResourceArn
   */
  @javax.annotation.Nonnull
  public String getNetworkResourceArn() {
    return networkResourceArn;
  }

  public void setNetworkResourceArn(String networkResourceArn) {
    this.networkResourceArn = networkResourceArn;
  }


  public StartNetworkResourceUpdateRequest returnReason(String returnReason) {
    this.returnReason = returnReason;
    return this;
  }

  /**
   * The reason for the return. Providing a reason for a return is optional.
   * @return returnReason
   */
  @javax.annotation.Nullable
  public String getReturnReason() {
    return returnReason;
  }

  public void setReturnReason(String returnReason) {
    this.returnReason = returnReason;
  }


  public StartNetworkResourceUpdateRequest shippingAddress(ActivateNetworkSiteRequestShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  public ActivateNetworkSiteRequestShippingAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(ActivateNetworkSiteRequestShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public StartNetworkResourceUpdateRequest updateType(UpdateTypeEnum updateType) {
    this.updateType = updateType;
    return this;
  }

  /**
   * &lt;p&gt;The update type.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;REPLACE&lt;/code&gt; - Submits a request to replace a defective radio unit. We provide a shipping label that you can use for the return process and we ship a replacement radio unit to you.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RETURN&lt;/code&gt; - Submits a request to return a radio unit that you no longer need. We provide a shipping label that you can use for the return process.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;COMMITMENT&lt;/code&gt; - Submits a request to change or renew the commitment period. If you choose this value, then you must set &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/private-networks/latest/APIReference/API_StartNetworkResourceUpdate.html#privatenetworks-StartNetworkResourceUpdate-request-commitmentConfiguration\&quot;&gt; &lt;code&gt;commitmentConfiguration&lt;/code&gt; &lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return updateType
   */
  @javax.annotation.Nonnull
  public UpdateTypeEnum getUpdateType() {
    return updateType;
  }

  public void setUpdateType(UpdateTypeEnum updateType) {
    this.updateType = updateType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartNetworkResourceUpdateRequest startNetworkResourceUpdateRequest = (StartNetworkResourceUpdateRequest) o;
    return Objects.equals(this.commitmentConfiguration, startNetworkResourceUpdateRequest.commitmentConfiguration) &&
        Objects.equals(this.networkResourceArn, startNetworkResourceUpdateRequest.networkResourceArn) &&
        Objects.equals(this.returnReason, startNetworkResourceUpdateRequest.returnReason) &&
        Objects.equals(this.shippingAddress, startNetworkResourceUpdateRequest.shippingAddress) &&
        Objects.equals(this.updateType, startNetworkResourceUpdateRequest.updateType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commitmentConfiguration, networkResourceArn, returnReason, shippingAddress, updateType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartNetworkResourceUpdateRequest {\n");
    sb.append("    commitmentConfiguration: ").append(toIndentedString(commitmentConfiguration)).append("\n");
    sb.append("    networkResourceArn: ").append(toIndentedString(networkResourceArn)).append("\n");
    sb.append("    returnReason: ").append(toIndentedString(returnReason)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    updateType: ").append(toIndentedString(updateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("commitmentConfiguration");
    openapiFields.add("networkResourceArn");
    openapiFields.add("returnReason");
    openapiFields.add("shippingAddress");
    openapiFields.add("updateType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("networkResourceArn");
    openapiRequiredFields.add("updateType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartNetworkResourceUpdateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartNetworkResourceUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartNetworkResourceUpdateRequest is not found in the empty JSON string", StartNetworkResourceUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartNetworkResourceUpdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartNetworkResourceUpdateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartNetworkResourceUpdateRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `commitmentConfiguration`
      if (jsonObj.get("commitmentConfiguration") != null && !jsonObj.get("commitmentConfiguration").isJsonNull()) {
        ActivateNetworkSiteRequestCommitmentConfiguration.validateJsonElement(jsonObj.get("commitmentConfiguration"));
      }
      if (!jsonObj.get("networkResourceArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkResourceArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkResourceArn").toString()));
      }
      if ((jsonObj.get("returnReason") != null && !jsonObj.get("returnReason").isJsonNull()) && !jsonObj.get("returnReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnReason").toString()));
      }
      // validate the optional field `shippingAddress`
      if (jsonObj.get("shippingAddress") != null && !jsonObj.get("shippingAddress").isJsonNull()) {
        ActivateNetworkSiteRequestShippingAddress.validateJsonElement(jsonObj.get("shippingAddress"));
      }
      if (!jsonObj.get("updateType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateType").toString()));
      }
      // validate the required field `updateType`
      UpdateTypeEnum.validateJsonElement(jsonObj.get("updateType"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartNetworkResourceUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartNetworkResourceUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartNetworkResourceUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartNetworkResourceUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartNetworkResourceUpdateRequest>() {
           @Override
           public void write(JsonWriter out, StartNetworkResourceUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartNetworkResourceUpdateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartNetworkResourceUpdateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartNetworkResourceUpdateRequest
   * @throws IOException if the JSON string is invalid with respect to StartNetworkResourceUpdateRequest
   */
  public static StartNetworkResourceUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartNetworkResourceUpdateRequest.class);
  }

  /**
   * Convert an instance of StartNetworkResourceUpdateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

