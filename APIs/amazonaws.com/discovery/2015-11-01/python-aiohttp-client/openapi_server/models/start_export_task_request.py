# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_export_task_request_preferences import StartExportTaskRequestPreferences
from openapi_server import util


class StartExportTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_data_format: List=None, filters: List=None, start_time: datetime=None, end_time: datetime=None, preferences: StartExportTaskRequestPreferences=None):
        """StartExportTaskRequest - a model defined in OpenAPI

        :param export_data_format: The export_data_format of this StartExportTaskRequest.
        :param filters: The filters of this StartExportTaskRequest.
        :param start_time: The start_time of this StartExportTaskRequest.
        :param end_time: The end_time of this StartExportTaskRequest.
        :param preferences: The preferences of this StartExportTaskRequest.
        """
        self.openapi_types = {
            'export_data_format': List,
            'filters': List,
            'start_time': datetime,
            'end_time': datetime,
            'preferences': StartExportTaskRequestPreferences
        }

        self.attribute_map = {
            'export_data_format': 'exportDataFormat',
            'filters': 'filters',
            'start_time': 'startTime',
            'end_time': 'endTime',
            'preferences': 'preferences'
        }

        self._export_data_format = export_data_format
        self._filters = filters
        self._start_time = start_time
        self._end_time = end_time
        self._preferences = preferences

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartExportTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartExportTaskRequest of this StartExportTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_data_format(self):
        """Gets the export_data_format of this StartExportTaskRequest.


        :return: The export_data_format of this StartExportTaskRequest.
        :rtype: List
        """
        return self._export_data_format

    @export_data_format.setter
    def export_data_format(self, export_data_format):
        """Sets the export_data_format of this StartExportTaskRequest.


        :param export_data_format: The export_data_format of this StartExportTaskRequest.
        :type export_data_format: List
        """

        self._export_data_format = export_data_format

    @property
    def filters(self):
        """Gets the filters of this StartExportTaskRequest.


        :return: The filters of this StartExportTaskRequest.
        :rtype: List
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this StartExportTaskRequest.


        :param filters: The filters of this StartExportTaskRequest.
        :type filters: List
        """

        self._filters = filters

    @property
    def start_time(self):
        """Gets the start_time of this StartExportTaskRequest.


        :return: The start_time of this StartExportTaskRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this StartExportTaskRequest.


        :param start_time: The start_time of this StartExportTaskRequest.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this StartExportTaskRequest.


        :return: The end_time of this StartExportTaskRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this StartExportTaskRequest.


        :param end_time: The end_time of this StartExportTaskRequest.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def preferences(self):
        """Gets the preferences of this StartExportTaskRequest.


        :return: The preferences of this StartExportTaskRequest.
        :rtype: StartExportTaskRequestPreferences
        """
        return self._preferences

    @preferences.setter
    def preferences(self, preferences):
        """Sets the preferences of this StartExportTaskRequest.


        :param preferences: The preferences of this StartExportTaskRequest.
        :type preferences: StartExportTaskRequestPreferences
        """

        self._preferences = preferences
