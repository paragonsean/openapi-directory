# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AgentConfigurationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_id: str=None, operation_succeeded: bool=None, description: str=None):
        """AgentConfigurationStatus - a model defined in OpenAPI

        :param agent_id: The agent_id of this AgentConfigurationStatus.
        :param operation_succeeded: The operation_succeeded of this AgentConfigurationStatus.
        :param description: The description of this AgentConfigurationStatus.
        """
        self.openapi_types = {
            'agent_id': str,
            'operation_succeeded': bool,
            'description': str
        }

        self.attribute_map = {
            'agent_id': 'agentId',
            'operation_succeeded': 'operationSucceeded',
            'description': 'description'
        }

        self._agent_id = agent_id
        self._operation_succeeded = operation_succeeded
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentConfigurationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentConfigurationStatus of this AgentConfigurationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_id(self):
        """Gets the agent_id of this AgentConfigurationStatus.


        :return: The agent_id of this AgentConfigurationStatus.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this AgentConfigurationStatus.


        :param agent_id: The agent_id of this AgentConfigurationStatus.
        :type agent_id: str
        """

        self._agent_id = agent_id

    @property
    def operation_succeeded(self):
        """Gets the operation_succeeded of this AgentConfigurationStatus.


        :return: The operation_succeeded of this AgentConfigurationStatus.
        :rtype: bool
        """
        return self._operation_succeeded

    @operation_succeeded.setter
    def operation_succeeded(self, operation_succeeded):
        """Sets the operation_succeeded of this AgentConfigurationStatus.


        :param operation_succeeded: The operation_succeeded of this AgentConfigurationStatus.
        :type operation_succeeded: bool
        """

        self._operation_succeeded = operation_succeeded

    @property
    def description(self):
        """Gets the description of this AgentConfigurationStatus.


        :return: The description of this AgentConfigurationStatus.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AgentConfigurationStatus.


        :param description: The description of this AgentConfigurationStatus.
        :type description: str
        """

        self._description = description
