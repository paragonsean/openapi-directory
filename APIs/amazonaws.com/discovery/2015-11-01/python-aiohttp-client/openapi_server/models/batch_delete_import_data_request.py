# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteImportDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, import_task_ids: List=None):
        """BatchDeleteImportDataRequest - a model defined in OpenAPI

        :param import_task_ids: The import_task_ids of this BatchDeleteImportDataRequest.
        """
        self.openapi_types = {
            'import_task_ids': List
        }

        self.attribute_map = {
            'import_task_ids': 'importTaskIds'
        }

        self._import_task_ids = import_task_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteImportDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteImportDataRequest of this BatchDeleteImportDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_task_ids(self):
        """Gets the import_task_ids of this BatchDeleteImportDataRequest.


        :return: The import_task_ids of this BatchDeleteImportDataRequest.
        :rtype: List
        """
        return self._import_task_ids

    @import_task_ids.setter
    def import_task_ids(self, import_task_ids):
        """Sets the import_task_ids of this BatchDeleteImportDataRequest.


        :param import_task_ids: The import_task_ids of this BatchDeleteImportDataRequest.
        :type import_task_ids: List
        """
        if import_task_ids is None:
            raise ValueError("Invalid value for `import_task_ids`, must not be `None`")

        self._import_task_ids = import_task_ids
