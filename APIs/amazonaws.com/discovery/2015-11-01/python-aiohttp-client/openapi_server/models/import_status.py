# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    IMPORT_IN_PROGRESS = 'IMPORT_IN_PROGRESS'
    IMPORT_COMPLETE = 'IMPORT_COMPLETE'
    IMPORT_COMPLETE_WITH_ERRORS = 'IMPORT_COMPLETE_WITH_ERRORS'
    IMPORT_FAILED = 'IMPORT_FAILED'
    IMPORT_FAILED_SERVER_LIMIT_EXCEEDED = 'IMPORT_FAILED_SERVER_LIMIT_EXCEEDED'
    IMPORT_FAILED_RECORD_LIMIT_EXCEEDED = 'IMPORT_FAILED_RECORD_LIMIT_EXCEEDED'
    DELETE_IN_PROGRESS = 'DELETE_IN_PROGRESS'
    DELETE_COMPLETE = 'DELETE_COMPLETE'
    DELETE_FAILED = 'DELETE_FAILED'
    DELETE_FAILED_LIMIT_EXCEEDED = 'DELETE_FAILED_LIMIT_EXCEEDED'
    INTERNAL_ERROR = 'INTERNAL_ERROR'

    def __init__(self):
        """ImportStatus - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportStatus of this ImportStatus.
        """
        return util.deserialize_model(dikt, cls)
