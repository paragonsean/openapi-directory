# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ec2_recommendations_export_preferences_cpu_performance_metric_basis import Ec2RecommendationsExportPreferencesCpuPerformanceMetricBasis
from openapi_server.models.ec2_recommendations_export_preferences_ram_performance_metric_basis import Ec2RecommendationsExportPreferencesRamPerformanceMetricBasis
from openapi_server.models.ec2_recommendations_export_preferences_reserved_instance_options import Ec2RecommendationsExportPreferencesReservedInstanceOptions
from openapi_server.models.tenancy import Tenancy
from openapi_server import util


class Ec2RecommendationsExportPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, cpu_performance_metric_basis: Ec2RecommendationsExportPreferencesCpuPerformanceMetricBasis=None, ram_performance_metric_basis: Ec2RecommendationsExportPreferencesRamPerformanceMetricBasis=None, tenancy: Tenancy=None, excluded_instance_types: List=None, preferred_region: str=None, reserved_instance_options: Ec2RecommendationsExportPreferencesReservedInstanceOptions=None):
        """Ec2RecommendationsExportPreferences - a model defined in OpenAPI

        :param enabled: The enabled of this Ec2RecommendationsExportPreferences.
        :param cpu_performance_metric_basis: The cpu_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :param ram_performance_metric_basis: The ram_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :param tenancy: The tenancy of this Ec2RecommendationsExportPreferences.
        :param excluded_instance_types: The excluded_instance_types of this Ec2RecommendationsExportPreferences.
        :param preferred_region: The preferred_region of this Ec2RecommendationsExportPreferences.
        :param reserved_instance_options: The reserved_instance_options of this Ec2RecommendationsExportPreferences.
        """
        self.openapi_types = {
            'enabled': bool,
            'cpu_performance_metric_basis': Ec2RecommendationsExportPreferencesCpuPerformanceMetricBasis,
            'ram_performance_metric_basis': Ec2RecommendationsExportPreferencesRamPerformanceMetricBasis,
            'tenancy': Tenancy,
            'excluded_instance_types': List,
            'preferred_region': str,
            'reserved_instance_options': Ec2RecommendationsExportPreferencesReservedInstanceOptions
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'cpu_performance_metric_basis': 'cpuPerformanceMetricBasis',
            'ram_performance_metric_basis': 'ramPerformanceMetricBasis',
            'tenancy': 'tenancy',
            'excluded_instance_types': 'excludedInstanceTypes',
            'preferred_region': 'preferredRegion',
            'reserved_instance_options': 'reservedInstanceOptions'
        }

        self._enabled = enabled
        self._cpu_performance_metric_basis = cpu_performance_metric_basis
        self._ram_performance_metric_basis = ram_performance_metric_basis
        self._tenancy = tenancy
        self._excluded_instance_types = excluded_instance_types
        self._preferred_region = preferred_region
        self._reserved_instance_options = reserved_instance_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ec2RecommendationsExportPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ec2RecommendationsExportPreferences of this Ec2RecommendationsExportPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this Ec2RecommendationsExportPreferences.


        :return: The enabled of this Ec2RecommendationsExportPreferences.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this Ec2RecommendationsExportPreferences.


        :param enabled: The enabled of this Ec2RecommendationsExportPreferences.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def cpu_performance_metric_basis(self):
        """Gets the cpu_performance_metric_basis of this Ec2RecommendationsExportPreferences.


        :return: The cpu_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :rtype: Ec2RecommendationsExportPreferencesCpuPerformanceMetricBasis
        """
        return self._cpu_performance_metric_basis

    @cpu_performance_metric_basis.setter
    def cpu_performance_metric_basis(self, cpu_performance_metric_basis):
        """Sets the cpu_performance_metric_basis of this Ec2RecommendationsExportPreferences.


        :param cpu_performance_metric_basis: The cpu_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :type cpu_performance_metric_basis: Ec2RecommendationsExportPreferencesCpuPerformanceMetricBasis
        """

        self._cpu_performance_metric_basis = cpu_performance_metric_basis

    @property
    def ram_performance_metric_basis(self):
        """Gets the ram_performance_metric_basis of this Ec2RecommendationsExportPreferences.


        :return: The ram_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :rtype: Ec2RecommendationsExportPreferencesRamPerformanceMetricBasis
        """
        return self._ram_performance_metric_basis

    @ram_performance_metric_basis.setter
    def ram_performance_metric_basis(self, ram_performance_metric_basis):
        """Sets the ram_performance_metric_basis of this Ec2RecommendationsExportPreferences.


        :param ram_performance_metric_basis: The ram_performance_metric_basis of this Ec2RecommendationsExportPreferences.
        :type ram_performance_metric_basis: Ec2RecommendationsExportPreferencesRamPerformanceMetricBasis
        """

        self._ram_performance_metric_basis = ram_performance_metric_basis

    @property
    def tenancy(self):
        """Gets the tenancy of this Ec2RecommendationsExportPreferences.


        :return: The tenancy of this Ec2RecommendationsExportPreferences.
        :rtype: Tenancy
        """
        return self._tenancy

    @tenancy.setter
    def tenancy(self, tenancy):
        """Sets the tenancy of this Ec2RecommendationsExportPreferences.


        :param tenancy: The tenancy of this Ec2RecommendationsExportPreferences.
        :type tenancy: Tenancy
        """

        self._tenancy = tenancy

    @property
    def excluded_instance_types(self):
        """Gets the excluded_instance_types of this Ec2RecommendationsExportPreferences.


        :return: The excluded_instance_types of this Ec2RecommendationsExportPreferences.
        :rtype: List
        """
        return self._excluded_instance_types

    @excluded_instance_types.setter
    def excluded_instance_types(self, excluded_instance_types):
        """Sets the excluded_instance_types of this Ec2RecommendationsExportPreferences.


        :param excluded_instance_types: The excluded_instance_types of this Ec2RecommendationsExportPreferences.
        :type excluded_instance_types: List
        """

        self._excluded_instance_types = excluded_instance_types

    @property
    def preferred_region(self):
        """Gets the preferred_region of this Ec2RecommendationsExportPreferences.


        :return: The preferred_region of this Ec2RecommendationsExportPreferences.
        :rtype: str
        """
        return self._preferred_region

    @preferred_region.setter
    def preferred_region(self, preferred_region):
        """Sets the preferred_region of this Ec2RecommendationsExportPreferences.


        :param preferred_region: The preferred_region of this Ec2RecommendationsExportPreferences.
        :type preferred_region: str
        """

        self._preferred_region = preferred_region

    @property
    def reserved_instance_options(self):
        """Gets the reserved_instance_options of this Ec2RecommendationsExportPreferences.


        :return: The reserved_instance_options of this Ec2RecommendationsExportPreferences.
        :rtype: Ec2RecommendationsExportPreferencesReservedInstanceOptions
        """
        return self._reserved_instance_options

    @reserved_instance_options.setter
    def reserved_instance_options(self, reserved_instance_options):
        """Sets the reserved_instance_options of this Ec2RecommendationsExportPreferences.


        :param reserved_instance_options: The reserved_instance_options of this Ec2RecommendationsExportPreferences.
        :type reserved_instance_options: Ec2RecommendationsExportPreferencesReservedInstanceOptions
        """

        self._reserved_instance_options = reserved_instance_options
