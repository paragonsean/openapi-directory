# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDiscoverySummaryResponseAgentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_agents: int=None, healthy_agents: int=None, black_listed_agents: int=None, shutdown_agents: int=None, unhealthy_agents: int=None, total_agents: int=None, unknown_agents: int=None):
        """GetDiscoverySummaryResponseAgentSummary - a model defined in OpenAPI

        :param active_agents: The active_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param healthy_agents: The healthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param black_listed_agents: The black_listed_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param shutdown_agents: The shutdown_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param unhealthy_agents: The unhealthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param total_agents: The total_agents of this GetDiscoverySummaryResponseAgentSummary.
        :param unknown_agents: The unknown_agents of this GetDiscoverySummaryResponseAgentSummary.
        """
        self.openapi_types = {
            'active_agents': int,
            'healthy_agents': int,
            'black_listed_agents': int,
            'shutdown_agents': int,
            'unhealthy_agents': int,
            'total_agents': int,
            'unknown_agents': int
        }

        self.attribute_map = {
            'active_agents': 'activeAgents',
            'healthy_agents': 'healthyAgents',
            'black_listed_agents': 'blackListedAgents',
            'shutdown_agents': 'shutdownAgents',
            'unhealthy_agents': 'unhealthyAgents',
            'total_agents': 'totalAgents',
            'unknown_agents': 'unknownAgents'
        }

        self._active_agents = active_agents
        self._healthy_agents = healthy_agents
        self._black_listed_agents = black_listed_agents
        self._shutdown_agents = shutdown_agents
        self._unhealthy_agents = unhealthy_agents
        self._total_agents = total_agents
        self._unknown_agents = unknown_agents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDiscoverySummaryResponseAgentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDiscoverySummaryResponse_agentSummary of this GetDiscoverySummaryResponseAgentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_agents(self):
        """Gets the active_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The active_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._active_agents

    @active_agents.setter
    def active_agents(self, active_agents):
        """Sets the active_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param active_agents: The active_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type active_agents: int
        """
        if active_agents is None:
            raise ValueError("Invalid value for `active_agents`, must not be `None`")

        self._active_agents = active_agents

    @property
    def healthy_agents(self):
        """Gets the healthy_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The healthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._healthy_agents

    @healthy_agents.setter
    def healthy_agents(self, healthy_agents):
        """Sets the healthy_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param healthy_agents: The healthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type healthy_agents: int
        """
        if healthy_agents is None:
            raise ValueError("Invalid value for `healthy_agents`, must not be `None`")

        self._healthy_agents = healthy_agents

    @property
    def black_listed_agents(self):
        """Gets the black_listed_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The black_listed_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._black_listed_agents

    @black_listed_agents.setter
    def black_listed_agents(self, black_listed_agents):
        """Sets the black_listed_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param black_listed_agents: The black_listed_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type black_listed_agents: int
        """
        if black_listed_agents is None:
            raise ValueError("Invalid value for `black_listed_agents`, must not be `None`")

        self._black_listed_agents = black_listed_agents

    @property
    def shutdown_agents(self):
        """Gets the shutdown_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The shutdown_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._shutdown_agents

    @shutdown_agents.setter
    def shutdown_agents(self, shutdown_agents):
        """Sets the shutdown_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param shutdown_agents: The shutdown_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type shutdown_agents: int
        """
        if shutdown_agents is None:
            raise ValueError("Invalid value for `shutdown_agents`, must not be `None`")

        self._shutdown_agents = shutdown_agents

    @property
    def unhealthy_agents(self):
        """Gets the unhealthy_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The unhealthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._unhealthy_agents

    @unhealthy_agents.setter
    def unhealthy_agents(self, unhealthy_agents):
        """Sets the unhealthy_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param unhealthy_agents: The unhealthy_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type unhealthy_agents: int
        """
        if unhealthy_agents is None:
            raise ValueError("Invalid value for `unhealthy_agents`, must not be `None`")

        self._unhealthy_agents = unhealthy_agents

    @property
    def total_agents(self):
        """Gets the total_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The total_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._total_agents

    @total_agents.setter
    def total_agents(self, total_agents):
        """Sets the total_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param total_agents: The total_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type total_agents: int
        """
        if total_agents is None:
            raise ValueError("Invalid value for `total_agents`, must not be `None`")

        self._total_agents = total_agents

    @property
    def unknown_agents(self):
        """Gets the unknown_agents of this GetDiscoverySummaryResponseAgentSummary.


        :return: The unknown_agents of this GetDiscoverySummaryResponseAgentSummary.
        :rtype: int
        """
        return self._unknown_agents

    @unknown_agents.setter
    def unknown_agents(self, unknown_agents):
        """Sets the unknown_agents of this GetDiscoverySummaryResponseAgentSummary.


        :param unknown_agents: The unknown_agents of this GetDiscoverySummaryResponseAgentSummary.
        :type unknown_agents: int
        """
        if unknown_agents is None:
            raise ValueError("Invalid value for `unknown_agents`, must not be `None`")

        self._unknown_agents = unknown_agents
