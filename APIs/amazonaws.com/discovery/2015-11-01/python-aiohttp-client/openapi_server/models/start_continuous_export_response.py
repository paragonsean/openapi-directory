# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source import DataSource
from openapi_server import util


class StartContinuousExportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_id: str=None, s3_bucket: str=None, start_time: datetime=None, data_source: DataSource=None, schema_storage_config: Dict=None):
        """StartContinuousExportResponse - a model defined in OpenAPI

        :param export_id: The export_id of this StartContinuousExportResponse.
        :param s3_bucket: The s3_bucket of this StartContinuousExportResponse.
        :param start_time: The start_time of this StartContinuousExportResponse.
        :param data_source: The data_source of this StartContinuousExportResponse.
        :param schema_storage_config: The schema_storage_config of this StartContinuousExportResponse.
        """
        self.openapi_types = {
            'export_id': str,
            's3_bucket': str,
            'start_time': datetime,
            'data_source': DataSource,
            'schema_storage_config': Dict
        }

        self.attribute_map = {
            'export_id': 'exportId',
            's3_bucket': 's3Bucket',
            'start_time': 'startTime',
            'data_source': 'dataSource',
            'schema_storage_config': 'schemaStorageConfig'
        }

        self._export_id = export_id
        self._s3_bucket = s3_bucket
        self._start_time = start_time
        self._data_source = data_source
        self._schema_storage_config = schema_storage_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartContinuousExportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartContinuousExportResponse of this StartContinuousExportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_id(self):
        """Gets the export_id of this StartContinuousExportResponse.


        :return: The export_id of this StartContinuousExportResponse.
        :rtype: str
        """
        return self._export_id

    @export_id.setter
    def export_id(self, export_id):
        """Sets the export_id of this StartContinuousExportResponse.


        :param export_id: The export_id of this StartContinuousExportResponse.
        :type export_id: str
        """

        self._export_id = export_id

    @property
    def s3_bucket(self):
        """Gets the s3_bucket of this StartContinuousExportResponse.


        :return: The s3_bucket of this StartContinuousExportResponse.
        :rtype: str
        """
        return self._s3_bucket

    @s3_bucket.setter
    def s3_bucket(self, s3_bucket):
        """Sets the s3_bucket of this StartContinuousExportResponse.


        :param s3_bucket: The s3_bucket of this StartContinuousExportResponse.
        :type s3_bucket: str
        """

        self._s3_bucket = s3_bucket

    @property
    def start_time(self):
        """Gets the start_time of this StartContinuousExportResponse.


        :return: The start_time of this StartContinuousExportResponse.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this StartContinuousExportResponse.


        :param start_time: The start_time of this StartContinuousExportResponse.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def data_source(self):
        """Gets the data_source of this StartContinuousExportResponse.


        :return: The data_source of this StartContinuousExportResponse.
        :rtype: DataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this StartContinuousExportResponse.


        :param data_source: The data_source of this StartContinuousExportResponse.
        :type data_source: DataSource
        """

        self._data_source = data_source

    @property
    def schema_storage_config(self):
        """Gets the schema_storage_config of this StartContinuousExportResponse.


        :return: The schema_storage_config of this StartContinuousExportResponse.
        :rtype: Dict
        """
        return self._schema_storage_config

    @schema_storage_config.setter
    def schema_storage_config(self, schema_storage_config):
        """Sets the schema_storage_config of this StartContinuousExportResponse.


        :param schema_storage_config: The schema_storage_config of this StartContinuousExportResponse.
        :type schema_storage_config: Dict
        """

        self._schema_storage_config = schema_storage_config
