# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_item_type import ConfigurationItemType
from openapi_server import util


class ConfigurationTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_type: ConfigurationItemType=None, configuration_id: str=None, key: str=None, value: str=None, time_of_creation: datetime=None):
        """ConfigurationTag - a model defined in OpenAPI

        :param configuration_type: The configuration_type of this ConfigurationTag.
        :param configuration_id: The configuration_id of this ConfigurationTag.
        :param key: The key of this ConfigurationTag.
        :param value: The value of this ConfigurationTag.
        :param time_of_creation: The time_of_creation of this ConfigurationTag.
        """
        self.openapi_types = {
            'configuration_type': ConfigurationItemType,
            'configuration_id': str,
            'key': str,
            'value': str,
            'time_of_creation': datetime
        }

        self.attribute_map = {
            'configuration_type': 'configurationType',
            'configuration_id': 'configurationId',
            'key': 'key',
            'value': 'value',
            'time_of_creation': 'timeOfCreation'
        }

        self._configuration_type = configuration_type
        self._configuration_id = configuration_id
        self._key = key
        self._value = value
        self._time_of_creation = time_of_creation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationTag of this ConfigurationTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_type(self):
        """Gets the configuration_type of this ConfigurationTag.


        :return: The configuration_type of this ConfigurationTag.
        :rtype: ConfigurationItemType
        """
        return self._configuration_type

    @configuration_type.setter
    def configuration_type(self, configuration_type):
        """Sets the configuration_type of this ConfigurationTag.


        :param configuration_type: The configuration_type of this ConfigurationTag.
        :type configuration_type: ConfigurationItemType
        """

        self._configuration_type = configuration_type

    @property
    def configuration_id(self):
        """Gets the configuration_id of this ConfigurationTag.


        :return: The configuration_id of this ConfigurationTag.
        :rtype: str
        """
        return self._configuration_id

    @configuration_id.setter
    def configuration_id(self, configuration_id):
        """Sets the configuration_id of this ConfigurationTag.


        :param configuration_id: The configuration_id of this ConfigurationTag.
        :type configuration_id: str
        """

        self._configuration_id = configuration_id

    @property
    def key(self):
        """Gets the key of this ConfigurationTag.


        :return: The key of this ConfigurationTag.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ConfigurationTag.


        :param key: The key of this ConfigurationTag.
        :type key: str
        """

        self._key = key

    @property
    def value(self):
        """Gets the value of this ConfigurationTag.


        :return: The value of this ConfigurationTag.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ConfigurationTag.


        :param value: The value of this ConfigurationTag.
        :type value: str
        """

        self._value = value

    @property
    def time_of_creation(self):
        """Gets the time_of_creation of this ConfigurationTag.


        :return: The time_of_creation of this ConfigurationTag.
        :rtype: datetime
        """
        return self._time_of_creation

    @time_of_creation.setter
    def time_of_creation(self, time_of_creation):
        """Sets the time_of_creation of this ConfigurationTag.


        :param time_of_creation: The time_of_creation of this ConfigurationTag.
        :type time_of_creation: datetime
        """

        self._time_of_creation = time_of_creation
