# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.agent_status import AgentStatus
from openapi_server import util


class AgentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_id: str=None, host_name: str=None, agent_network_info_list: List=None, connector_id: str=None, version: str=None, health: AgentStatus=None, last_health_ping_time: str=None, collection_status: str=None, agent_type: str=None, registered_time: str=None):
        """AgentInfo - a model defined in OpenAPI

        :param agent_id: The agent_id of this AgentInfo.
        :param host_name: The host_name of this AgentInfo.
        :param agent_network_info_list: The agent_network_info_list of this AgentInfo.
        :param connector_id: The connector_id of this AgentInfo.
        :param version: The version of this AgentInfo.
        :param health: The health of this AgentInfo.
        :param last_health_ping_time: The last_health_ping_time of this AgentInfo.
        :param collection_status: The collection_status of this AgentInfo.
        :param agent_type: The agent_type of this AgentInfo.
        :param registered_time: The registered_time of this AgentInfo.
        """
        self.openapi_types = {
            'agent_id': str,
            'host_name': str,
            'agent_network_info_list': List,
            'connector_id': str,
            'version': str,
            'health': AgentStatus,
            'last_health_ping_time': str,
            'collection_status': str,
            'agent_type': str,
            'registered_time': str
        }

        self.attribute_map = {
            'agent_id': 'agentId',
            'host_name': 'hostName',
            'agent_network_info_list': 'agentNetworkInfoList',
            'connector_id': 'connectorId',
            'version': 'version',
            'health': 'health',
            'last_health_ping_time': 'lastHealthPingTime',
            'collection_status': 'collectionStatus',
            'agent_type': 'agentType',
            'registered_time': 'registeredTime'
        }

        self._agent_id = agent_id
        self._host_name = host_name
        self._agent_network_info_list = agent_network_info_list
        self._connector_id = connector_id
        self._version = version
        self._health = health
        self._last_health_ping_time = last_health_ping_time
        self._collection_status = collection_status
        self._agent_type = agent_type
        self._registered_time = registered_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentInfo of this AgentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_id(self):
        """Gets the agent_id of this AgentInfo.


        :return: The agent_id of this AgentInfo.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this AgentInfo.


        :param agent_id: The agent_id of this AgentInfo.
        :type agent_id: str
        """

        self._agent_id = agent_id

    @property
    def host_name(self):
        """Gets the host_name of this AgentInfo.


        :return: The host_name of this AgentInfo.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this AgentInfo.


        :param host_name: The host_name of this AgentInfo.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def agent_network_info_list(self):
        """Gets the agent_network_info_list of this AgentInfo.


        :return: The agent_network_info_list of this AgentInfo.
        :rtype: List
        """
        return self._agent_network_info_list

    @agent_network_info_list.setter
    def agent_network_info_list(self, agent_network_info_list):
        """Sets the agent_network_info_list of this AgentInfo.


        :param agent_network_info_list: The agent_network_info_list of this AgentInfo.
        :type agent_network_info_list: List
        """

        self._agent_network_info_list = agent_network_info_list

    @property
    def connector_id(self):
        """Gets the connector_id of this AgentInfo.


        :return: The connector_id of this AgentInfo.
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this AgentInfo.


        :param connector_id: The connector_id of this AgentInfo.
        :type connector_id: str
        """

        self._connector_id = connector_id

    @property
    def version(self):
        """Gets the version of this AgentInfo.


        :return: The version of this AgentInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this AgentInfo.


        :param version: The version of this AgentInfo.
        :type version: str
        """

        self._version = version

    @property
    def health(self):
        """Gets the health of this AgentInfo.


        :return: The health of this AgentInfo.
        :rtype: AgentStatus
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this AgentInfo.


        :param health: The health of this AgentInfo.
        :type health: AgentStatus
        """

        self._health = health

    @property
    def last_health_ping_time(self):
        """Gets the last_health_ping_time of this AgentInfo.


        :return: The last_health_ping_time of this AgentInfo.
        :rtype: str
        """
        return self._last_health_ping_time

    @last_health_ping_time.setter
    def last_health_ping_time(self, last_health_ping_time):
        """Sets the last_health_ping_time of this AgentInfo.


        :param last_health_ping_time: The last_health_ping_time of this AgentInfo.
        :type last_health_ping_time: str
        """

        self._last_health_ping_time = last_health_ping_time

    @property
    def collection_status(self):
        """Gets the collection_status of this AgentInfo.


        :return: The collection_status of this AgentInfo.
        :rtype: str
        """
        return self._collection_status

    @collection_status.setter
    def collection_status(self, collection_status):
        """Sets the collection_status of this AgentInfo.


        :param collection_status: The collection_status of this AgentInfo.
        :type collection_status: str
        """

        self._collection_status = collection_status

    @property
    def agent_type(self):
        """Gets the agent_type of this AgentInfo.


        :return: The agent_type of this AgentInfo.
        :rtype: str
        """
        return self._agent_type

    @agent_type.setter
    def agent_type(self, agent_type):
        """Sets the agent_type of this AgentInfo.


        :param agent_type: The agent_type of this AgentInfo.
        :type agent_type: str
        """

        self._agent_type = agent_type

    @property
    def registered_time(self):
        """Gets the registered_time of this AgentInfo.


        :return: The registered_time of this AgentInfo.
        :rtype: str
        """
        return self._registered_time

    @registered_time.setter
    def registered_time(self, registered_time):
        """Sets the registered_time of this AgentInfo.


        :param registered_time: The registered_time of this AgentInfo.
        :type registered_time: str
        """

        self._registered_time = registered_time
