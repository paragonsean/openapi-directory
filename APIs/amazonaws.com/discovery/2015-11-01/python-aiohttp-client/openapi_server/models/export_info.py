# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.export_status import ExportStatus
from openapi_server import util


class ExportInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_id: str=None, export_status: ExportStatus=None, status_message: str=None, configurations_download_url: str=None, export_request_time: datetime=None, is_truncated: bool=None, requested_start_time: datetime=None, requested_end_time: datetime=None):
        """ExportInfo - a model defined in OpenAPI

        :param export_id: The export_id of this ExportInfo.
        :param export_status: The export_status of this ExportInfo.
        :param status_message: The status_message of this ExportInfo.
        :param configurations_download_url: The configurations_download_url of this ExportInfo.
        :param export_request_time: The export_request_time of this ExportInfo.
        :param is_truncated: The is_truncated of this ExportInfo.
        :param requested_start_time: The requested_start_time of this ExportInfo.
        :param requested_end_time: The requested_end_time of this ExportInfo.
        """
        self.openapi_types = {
            'export_id': str,
            'export_status': ExportStatus,
            'status_message': str,
            'configurations_download_url': str,
            'export_request_time': datetime,
            'is_truncated': bool,
            'requested_start_time': datetime,
            'requested_end_time': datetime
        }

        self.attribute_map = {
            'export_id': 'exportId',
            'export_status': 'exportStatus',
            'status_message': 'statusMessage',
            'configurations_download_url': 'configurationsDownloadUrl',
            'export_request_time': 'exportRequestTime',
            'is_truncated': 'isTruncated',
            'requested_start_time': 'requestedStartTime',
            'requested_end_time': 'requestedEndTime'
        }

        self._export_id = export_id
        self._export_status = export_status
        self._status_message = status_message
        self._configurations_download_url = configurations_download_url
        self._export_request_time = export_request_time
        self._is_truncated = is_truncated
        self._requested_start_time = requested_start_time
        self._requested_end_time = requested_end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportInfo of this ExportInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_id(self):
        """Gets the export_id of this ExportInfo.


        :return: The export_id of this ExportInfo.
        :rtype: str
        """
        return self._export_id

    @export_id.setter
    def export_id(self, export_id):
        """Sets the export_id of this ExportInfo.


        :param export_id: The export_id of this ExportInfo.
        :type export_id: str
        """
        if export_id is None:
            raise ValueError("Invalid value for `export_id`, must not be `None`")

        self._export_id = export_id

    @property
    def export_status(self):
        """Gets the export_status of this ExportInfo.


        :return: The export_status of this ExportInfo.
        :rtype: ExportStatus
        """
        return self._export_status

    @export_status.setter
    def export_status(self, export_status):
        """Sets the export_status of this ExportInfo.


        :param export_status: The export_status of this ExportInfo.
        :type export_status: ExportStatus
        """
        if export_status is None:
            raise ValueError("Invalid value for `export_status`, must not be `None`")

        self._export_status = export_status

    @property
    def status_message(self):
        """Gets the status_message of this ExportInfo.


        :return: The status_message of this ExportInfo.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ExportInfo.


        :param status_message: The status_message of this ExportInfo.
        :type status_message: str
        """
        if status_message is None:
            raise ValueError("Invalid value for `status_message`, must not be `None`")

        self._status_message = status_message

    @property
    def configurations_download_url(self):
        """Gets the configurations_download_url of this ExportInfo.


        :return: The configurations_download_url of this ExportInfo.
        :rtype: str
        """
        return self._configurations_download_url

    @configurations_download_url.setter
    def configurations_download_url(self, configurations_download_url):
        """Sets the configurations_download_url of this ExportInfo.


        :param configurations_download_url: The configurations_download_url of this ExportInfo.
        :type configurations_download_url: str
        """

        self._configurations_download_url = configurations_download_url

    @property
    def export_request_time(self):
        """Gets the export_request_time of this ExportInfo.


        :return: The export_request_time of this ExportInfo.
        :rtype: datetime
        """
        return self._export_request_time

    @export_request_time.setter
    def export_request_time(self, export_request_time):
        """Sets the export_request_time of this ExportInfo.


        :param export_request_time: The export_request_time of this ExportInfo.
        :type export_request_time: datetime
        """
        if export_request_time is None:
            raise ValueError("Invalid value for `export_request_time`, must not be `None`")

        self._export_request_time = export_request_time

    @property
    def is_truncated(self):
        """Gets the is_truncated of this ExportInfo.


        :return: The is_truncated of this ExportInfo.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated):
        """Sets the is_truncated of this ExportInfo.


        :param is_truncated: The is_truncated of this ExportInfo.
        :type is_truncated: bool
        """

        self._is_truncated = is_truncated

    @property
    def requested_start_time(self):
        """Gets the requested_start_time of this ExportInfo.


        :return: The requested_start_time of this ExportInfo.
        :rtype: datetime
        """
        return self._requested_start_time

    @requested_start_time.setter
    def requested_start_time(self, requested_start_time):
        """Sets the requested_start_time of this ExportInfo.


        :param requested_start_time: The requested_start_time of this ExportInfo.
        :type requested_start_time: datetime
        """

        self._requested_start_time = requested_start_time

    @property
    def requested_end_time(self):
        """Gets the requested_end_time of this ExportInfo.


        :return: The requested_end_time of this ExportInfo.
        :rtype: datetime
        """
        return self._requested_end_time

    @requested_end_time.setter
    def requested_end_time(self, requested_end_time):
        """Sets the requested_end_time of this ExportInfo.


        :param requested_end_time: The requested_end_time of this ExportInfo.
        :type requested_end_time: datetime
        """

        self._requested_end_time = requested_end_time
