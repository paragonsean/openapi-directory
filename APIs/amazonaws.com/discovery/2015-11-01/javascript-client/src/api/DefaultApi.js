/**
 * AWS Application Discovery Service
 * <fullname>Amazon Web Services Application Discovery Service</fullname> <p>Amazon Web Services Application Discovery Service (Application Discovery Service) helps you plan application migration projects. It automatically identifies servers, virtual machines (VMs), and network dependencies in your on-premises data centers. For more information, see the <a href=\"http://aws.amazon.com/application-discovery/faqs/\">Amazon Web Services Application Discovery Service FAQ</a>. </p> <p>Application Discovery Service offers three ways of performing discovery and collecting data about your on-premises servers:</p> <ul> <li> <p> <b>Agentless discovery</b> using Amazon Web Services Application Discovery Service Agentless Collector (Agentless Collector), which doesn't require you to install an agent on each host.</p> <ul> <li> <p>Agentless Collector gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment.</p> </li> <li> <p>Agentless Collector doesn't collect information about network dependencies, only agent-based discovery collects that information. </p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Agent-based discovery</b> using the Amazon Web Services Application Discovery Agent (Application Discovery Agent) collects a richer set of data than agentless discovery, which you install on one or more hosts in your data center.</p> <ul> <li> <p> The agent captures infrastructure and application information, including an inventory of running processes, system performance information, resource utilization, and network dependencies.</p> </li> <li> <p>The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the Amazon Web Services cloud. For more information, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-agent.html\">Amazon Web Services Application Discovery Agent</a>.</p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Amazon Web Services Partner Network (APN) solutions</b> integrate with Application Discovery Service, enabling you to import details of your on-premises environment directly into Amazon Web Services Migration Hub (Migration Hub) without using Agentless Collector or Application Discovery Agent.</p> <ul> <li> <p>Third-party application discovery tools can query Amazon Web Services Application Discovery Service, and they can write to the Application Discovery Service database using the public API.</p> </li> <li> <p>In this way, you can import data into Migration Hub and view it, so that you can associate applications with servers and track migrations.</p> </li> </ul> </li> </ul> <p> <b>Working With This Guide</b> </p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <note> <ul> <li> <p>Remember that you must set your Migration Hub home Region before you call any of these APIs.</p> </li> <li> <p>You must make API calls for write actions (create, notify, associate, disassociate, import, or put) while in your home Region, or a <code>HomeRegionNotSetException</code> error is returned.</p> </li> <li> <p>API calls for read actions (list, describe, stop, and delete) are permitted outside of your home Region.</p> </li> <li> <p>Although it is unlikely, the Migration Hub home Region could change. If you call APIs outside the home Region, an <code>InvalidInputException</code> is returned.</p> </li> <li> <p>You must call <code>GetHomeRegion</code> to obtain the latest Migration Hub home Region.</p> </li> </ul> </note> <p>This guide is intended for use with the <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/\">Amazon Web Services Application Discovery Service User Guide</a>.</p> <important> <p>All data is handled according to the <a href=\"https://aws.amazon.com/privacy/\">Amazon Web Services Privacy Policy</a>. You can operate Application Discovery Service offline to inspect collected data before it is shared with the service.</p> </important>
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssociateConfigurationItemsToApplicationRequest from '../model/AssociateConfigurationItemsToApplicationRequest';
import BatchDeleteImportDataRequest from '../model/BatchDeleteImportDataRequest';
import BatchDeleteImportDataResponse from '../model/BatchDeleteImportDataResponse';
import CreateApplicationRequest from '../model/CreateApplicationRequest';
import CreateApplicationResponse from '../model/CreateApplicationResponse';
import CreateTagsRequest from '../model/CreateTagsRequest';
import DeleteApplicationsRequest from '../model/DeleteApplicationsRequest';
import DeleteTagsRequest from '../model/DeleteTagsRequest';
import DescribeAgentsRequest from '../model/DescribeAgentsRequest';
import DescribeAgentsResponse from '../model/DescribeAgentsResponse';
import DescribeConfigurationsRequest from '../model/DescribeConfigurationsRequest';
import DescribeConfigurationsResponse from '../model/DescribeConfigurationsResponse';
import DescribeContinuousExportsRequest from '../model/DescribeContinuousExportsRequest';
import DescribeContinuousExportsResponse from '../model/DescribeContinuousExportsResponse';
import DescribeExportConfigurationsRequest from '../model/DescribeExportConfigurationsRequest';
import DescribeExportConfigurationsResponse from '../model/DescribeExportConfigurationsResponse';
import DescribeExportTasksRequest from '../model/DescribeExportTasksRequest';
import DescribeExportTasksResponse from '../model/DescribeExportTasksResponse';
import DescribeImportTasksRequest from '../model/DescribeImportTasksRequest';
import DescribeImportTasksResponse from '../model/DescribeImportTasksResponse';
import DescribeTagsRequest from '../model/DescribeTagsRequest';
import DescribeTagsResponse from '../model/DescribeTagsResponse';
import DisassociateConfigurationItemsFromApplicationRequest from '../model/DisassociateConfigurationItemsFromApplicationRequest';
import ExportConfigurationsResponse from '../model/ExportConfigurationsResponse';
import GetDiscoverySummaryResponse from '../model/GetDiscoverySummaryResponse';
import ListConfigurationsRequest from '../model/ListConfigurationsRequest';
import ListConfigurationsResponse from '../model/ListConfigurationsResponse';
import ListServerNeighborsRequest from '../model/ListServerNeighborsRequest';
import ListServerNeighborsResponse from '../model/ListServerNeighborsResponse';
import StartContinuousExportResponse from '../model/StartContinuousExportResponse';
import StartDataCollectionByAgentIdsRequest from '../model/StartDataCollectionByAgentIdsRequest';
import StartDataCollectionByAgentIdsResponse from '../model/StartDataCollectionByAgentIdsResponse';
import StartExportTaskRequest from '../model/StartExportTaskRequest';
import StartExportTaskResponse from '../model/StartExportTaskResponse';
import StartImportTaskRequest from '../model/StartImportTaskRequest';
import StartImportTaskResponse from '../model/StartImportTaskResponse';
import StopContinuousExportRequest from '../model/StopContinuousExportRequest';
import StopContinuousExportResponse from '../model/StopContinuousExportResponse';
import StopDataCollectionByAgentIdsRequest from '../model/StopDataCollectionByAgentIdsRequest';
import StopDataCollectionByAgentIdsResponse from '../model/StopDataCollectionByAgentIdsResponse';
import UpdateApplicationRequest from '../model/UpdateApplicationRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-11-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the associateConfigurationItemsToApplication operation.
     * @callback module:api/DefaultApi~associateConfigurationItemsToApplicationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates one or more configuration items with an application.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/AssociateConfigurationItemsToApplicationRequest} associateConfigurationItemsToApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateConfigurationItemsToApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    associateConfigurationItemsToApplication(xAmzTarget, associateConfigurationItemsToApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateConfigurationItemsToApplicationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling associateConfigurationItemsToApplication");
      }
      // verify the required parameter 'associateConfigurationItemsToApplicationRequest' is set
      if (associateConfigurationItemsToApplicationRequest === undefined || associateConfigurationItemsToApplicationRequest === null) {
        throw new Error("Missing the required parameter 'associateConfigurationItemsToApplicationRequest' when calling associateConfigurationItemsToApplication");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.AssociateConfigurationItemsToApplication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchDeleteImportData operation.
     * @callback module:api/DefaultApi~batchDeleteImportDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchDeleteImportDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes one or more import tasks, each identified by their import ID. Each import task has a number of records that can identify servers or applications. </p> <p>Amazon Web Services Application Discovery Service has built-in matching logic that will identify when discovered servers match existing entries that you've previously discovered, the information for the already-existing discovered server is updated. When you delete an import task that contains records that were used to match, the information in those matched records that comes from the deleted records will also be deleted.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/BatchDeleteImportDataRequest} batchDeleteImportDataRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchDeleteImportDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchDeleteImportDataResponse}
     */
    batchDeleteImportData(xAmzTarget, batchDeleteImportDataRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchDeleteImportDataRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling batchDeleteImportData");
      }
      // verify the required parameter 'batchDeleteImportDataRequest' is set
      if (batchDeleteImportDataRequest === undefined || batchDeleteImportDataRequest === null) {
        throw new Error("Missing the required parameter 'batchDeleteImportDataRequest' when calling batchDeleteImportData");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchDeleteImportDataResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.BatchDeleteImportData', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createApplication operation.
     * @callback module:api/DefaultApi~createApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an application with the given name and description.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateApplicationRequest} createApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateApplicationResponse}
     */
    createApplication(xAmzTarget, createApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createApplicationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createApplication");
      }
      // verify the required parameter 'createApplicationRequest' is set
      if (createApplicationRequest === undefined || createApplicationRequest === null) {
        throw new Error("Missing the required parameter 'createApplicationRequest' when calling createApplication");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateApplicationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateApplication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createTags operation.
     * @callback module:api/DefaultApi~createTagsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.</p> <important> <p>Do not store sensitive information (like personal data) in tags.</p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateTagsRequest} createTagsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createTags(xAmzTarget, createTagsRequest, opts, callback) {
      opts = opts || {};
      let postBody = createTagsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createTags");
      }
      // verify the required parameter 'createTagsRequest' is set
      if (createTagsRequest === undefined || createTagsRequest === null) {
        throw new Error("Missing the required parameter 'createTagsRequest' when calling createTags");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteApplications operation.
     * @callback module:api/DefaultApi~deleteApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a list of applications and their associations with configuration items.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteApplicationsRequest} deleteApplicationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteApplications(xAmzTarget, deleteApplicationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteApplicationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteApplications");
      }
      // verify the required parameter 'deleteApplicationsRequest' is set
      if (deleteApplicationsRequest === undefined || deleteApplicationsRequest === null) {
        throw new Error("Missing the required parameter 'deleteApplicationsRequest' when calling deleteApplications");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteApplications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTags operation.
     * @callback module:api/DefaultApi~deleteTagsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteTagsRequest} deleteTagsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteTags(xAmzTarget, deleteTagsRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteTagsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteTags");
      }
      // verify the required parameter 'deleteTagsRequest' is set
      if (deleteTagsRequest === undefined || deleteTagsRequest === null) {
        throw new Error("Missing the required parameter 'deleteTagsRequest' when calling deleteTags");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAgents operation.
     * @callback module:api/DefaultApi~describeAgentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAgentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists agents or collectors as specified by ID or other filters. All agents/collectors associated with your user can be listed if you call <code>DescribeAgents</code> as is without passing any parameters.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeAgentsRequest} describeAgentsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAgentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAgentsResponse}
     */
    describeAgents(xAmzTarget, describeAgentsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeAgentsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeAgents");
      }
      // verify the required parameter 'describeAgentsRequest' is set
      if (describeAgentsRequest === undefined || describeAgentsRequest === null) {
        throw new Error("Missing the required parameter 'describeAgentsRequest' when calling describeAgents");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeAgentsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeAgents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeConfigurations operation.
     * @callback module:api/DefaultApi~describeConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves attributes for a list of configuration item IDs.</p> <note> <p>All of the supplied IDs must be for the same asset type from one of the following:</p> <ul> <li> <p>server</p> </li> <li> <p>application</p> </li> <li> <p>process</p> </li> <li> <p>connection</p> </li> </ul> <p>Output fields are specific to the asset type specified. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, such as host name, operating system, number of network cards, etc.</p> <p>For a complete list of outputs for each asset type, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#DescribeConfigurations\">Using the DescribeConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeConfigurationsRequest} describeConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeConfigurationsResponse}
     */
    describeConfigurations(xAmzTarget, describeConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeConfigurationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeConfigurations");
      }
      // verify the required parameter 'describeConfigurationsRequest' is set
      if (describeConfigurationsRequest === undefined || describeConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'describeConfigurationsRequest' when calling describeConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeContinuousExports operation.
     * @callback module:api/DefaultApi~describeContinuousExportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeContinuousExportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists exports as specified by ID. All continuous exports associated with your user can be listed if you call <code>DescribeContinuousExports</code> as is without passing any parameters.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeContinuousExportsRequest} describeContinuousExportsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeContinuousExportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeContinuousExportsResponse}
     */
    describeContinuousExports(xAmzTarget, describeContinuousExportsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeContinuousExportsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeContinuousExports");
      }
      // verify the required parameter 'describeContinuousExportsRequest' is set
      if (describeContinuousExportsRequest === undefined || describeContinuousExportsRequest === null) {
        throw new Error("Missing the required parameter 'describeContinuousExportsRequest' when calling describeContinuousExports");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeContinuousExportsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeContinuousExports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeExportConfigurations operation.
     * @callback module:api/DefaultApi~describeExportConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeExportConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  <code>DescribeExportConfigurations</code> is deprecated. Use <a href=\"https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html\">DescribeExportTasks</a>, instead.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeExportConfigurationsRequest} describeExportConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeExportConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeExportConfigurationsResponse}
     */
    describeExportConfigurations(xAmzTarget, describeExportConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeExportConfigurationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeExportConfigurations");
      }
      // verify the required parameter 'describeExportConfigurationsRequest' is set
      if (describeExportConfigurationsRequest === undefined || describeExportConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'describeExportConfigurationsRequest' when calling describeExportConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeExportConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeExportTasks operation.
     * @callback module:api/DefaultApi~describeExportTasksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeExportTasksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeExportTasksRequest} describeExportTasksRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeExportTasksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeExportTasksResponse}
     */
    describeExportTasks(xAmzTarget, describeExportTasksRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeExportTasksRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeExportTasks");
      }
      // verify the required parameter 'describeExportTasksRequest' is set
      if (describeExportTasksRequest === undefined || describeExportTasksRequest === null) {
        throw new Error("Missing the required parameter 'describeExportTasksRequest' when calling describeExportTasks");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeExportTasksResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportTasks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeImportTasks operation.
     * @callback module:api/DefaultApi~describeImportTasksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeImportTasksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeImportTasksRequest} describeImportTasksRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeImportTasksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeImportTasksResponse}
     */
    describeImportTasks(xAmzTarget, describeImportTasksRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeImportTasksRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeImportTasks");
      }
      // verify the required parameter 'describeImportTasksRequest' is set
      if (describeImportTasksRequest === undefined || describeImportTasksRequest === null) {
        throw new Error("Missing the required parameter 'describeImportTasksRequest' when calling describeImportTasks");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeImportTasksResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeImportTasks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeTags operation.
     * @callback module:api/DefaultApi~describeTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter <code>filters</code>.</p> <p>There are three valid tag filter names:</p> <ul> <li> <p>tagKey</p> </li> <li> <p>tagValue</p> </li> <li> <p>configurationId</p> </li> </ul> <p>Also, all configuration items associated with your user that have tags can be listed if you call <code>DescribeTags</code> as is without passing any parameters.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeTagsRequest} describeTagsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeTagsResponse}
     */
    describeTags(xAmzTarget, describeTagsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeTagsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeTags");
      }
      // verify the required parameter 'describeTagsRequest' is set
      if (describeTagsRequest === undefined || describeTagsRequest === null) {
        throw new Error("Missing the required parameter 'describeTagsRequest' when calling describeTags");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeTagsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateConfigurationItemsFromApplication operation.
     * @callback module:api/DefaultApi~disassociateConfigurationItemsFromApplicationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates one or more configuration items from an application.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DisassociateConfigurationItemsFromApplicationRequest} disassociateConfigurationItemsFromApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateConfigurationItemsFromApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateConfigurationItemsFromApplication(xAmzTarget, disassociateConfigurationItemsFromApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateConfigurationItemsFromApplicationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling disassociateConfigurationItemsFromApplication");
      }
      // verify the required parameter 'disassociateConfigurationItemsFromApplicationRequest' is set
      if (disassociateConfigurationItemsFromApplicationRequest === undefined || disassociateConfigurationItemsFromApplicationRequest === null) {
        throw new Error("Missing the required parameter 'disassociateConfigurationItemsFromApplicationRequest' when calling disassociateConfigurationItemsFromApplication");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DisassociateConfigurationItemsFromApplication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the exportConfigurations operation.
     * @callback module:api/DefaultApi~exportConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance. This API returns an export ID that you can query using the <i>DescribeExportConfigurations</i> API. The system imposes a limit of two configuration exports in six hours.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~exportConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportConfigurationsResponse}
     */
    exportConfigurations(xAmzTarget, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling exportConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExportConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ExportConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDiscoverySummary operation.
     * @callback module:api/DefaultApi~getDiscoverySummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDiscoverySummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves a short summary of discovered assets.</p> <p>This API operation takes no request parameters and is called as is at the command prompt as shown in the example.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getDiscoverySummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDiscoverySummaryResponse}
     */
    getDiscoverySummary(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getDiscoverySummary");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getDiscoverySummary");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetDiscoverySummaryResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.GetDiscoverySummary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listConfigurations operation.
     * @callback module:api/DefaultApi~listConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of configuration items as specified by the value passed to the required parameter <code>configurationType</code>. Optional filtering may be applied to refine search results.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListConfigurationsRequest} listConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListConfigurationsResponse}
     */
    listConfigurations(xAmzTarget, listConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listConfigurationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listConfigurations");
      }
      // verify the required parameter 'listConfigurationsRequest' is set
      if (listConfigurationsRequest === undefined || listConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'listConfigurationsRequest' when calling listConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServerNeighbors operation.
     * @callback module:api/DefaultApi~listServerNeighborsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServerNeighborsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of servers that are one network hop away from a specified server.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListServerNeighborsRequest} listServerNeighborsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listServerNeighborsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServerNeighborsResponse}
     */
    listServerNeighbors(xAmzTarget, listServerNeighborsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listServerNeighborsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listServerNeighbors");
      }
      // verify the required parameter 'listServerNeighborsRequest' is set
      if (listServerNeighborsRequest === undefined || listServerNeighborsRequest === null) {
        throw new Error("Missing the required parameter 'listServerNeighborsRequest' when calling listServerNeighbors");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListServerNeighborsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListServerNeighbors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startContinuousExport operation.
     * @callback module:api/DefaultApi~startContinuousExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartContinuousExportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start the continuous flow of agent's discovered data into Amazon Athena.
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startContinuousExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartContinuousExportResponse}
     */
    startContinuousExport(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startContinuousExport");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling startContinuousExport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartContinuousExportResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartContinuousExport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startDataCollectionByAgentIds operation.
     * @callback module:api/DefaultApi~startDataCollectionByAgentIdsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartDataCollectionByAgentIdsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Instructs the specified agents to start collecting data.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StartDataCollectionByAgentIdsRequest} startDataCollectionByAgentIdsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startDataCollectionByAgentIdsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartDataCollectionByAgentIdsResponse}
     */
    startDataCollectionByAgentIds(xAmzTarget, startDataCollectionByAgentIdsRequest, opts, callback) {
      opts = opts || {};
      let postBody = startDataCollectionByAgentIdsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startDataCollectionByAgentIds");
      }
      // verify the required parameter 'startDataCollectionByAgentIdsRequest' is set
      if (startDataCollectionByAgentIdsRequest === undefined || startDataCollectionByAgentIdsRequest === null) {
        throw new Error("Missing the required parameter 'startDataCollectionByAgentIdsRequest' when calling startDataCollectionByAgentIds");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartDataCollectionByAgentIdsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartDataCollectionByAgentIds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startExportTask operation.
     * @callback module:api/DefaultApi~startExportTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartExportTaskResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Begins the export of a discovered data report to an Amazon S3 bucket managed by Amazon Web Services.</p> <note> <p>Exports might provide an estimate of fees and savings based on certain information that you provide. Fee estimates do not include any taxes that might apply. Your actual fees and savings depend on a variety of factors, including your actual usage of Amazon Web Services services, which might vary from the estimates provided in this report.</p> </note> <p>If you do not specify <code>preferences</code> or <code>agentIds</code> in the filter, a summary of all servers, applications, tags, and performance is generated. This data is an aggregation of all server data collected through on-premises tooling, file import, application grouping and applying tags.</p> <p>If you specify <code>agentIds</code> in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed agent data is limited to five concurrently running exports. Export of detailed agent data is limited to two exports per day.</p> <p>If you enable <code>ec2RecommendationsPreferences</code> in <code>preferences</code> , an Amazon EC2 instance matching the characteristics of each server in Application Discovery Service is generated. Changing the attributes of the <code>ec2RecommendationsPreferences</code> changes the criteria of the recommendation.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StartExportTaskRequest} startExportTaskRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startExportTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartExportTaskResponse}
     */
    startExportTask(xAmzTarget, startExportTaskRequest, opts, callback) {
      opts = opts || {};
      let postBody = startExportTaskRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startExportTask");
      }
      // verify the required parameter 'startExportTaskRequest' is set
      if (startExportTaskRequest === undefined || startExportTaskRequest === null) {
        throw new Error("Missing the required parameter 'startExportTaskRequest' when calling startExportTask");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartExportTaskResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartExportTask', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startImportTask operation.
     * @callback module:api/DefaultApi~startImportTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartImportTaskResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Starts an import task, which allows you to import details of your on-premises environment directly into Amazon Web Services Migration Hub without having to use the Amazon Web Services Application Discovery Service (Application Discovery Service) tools such as the Amazon Web Services Application Discovery Service Agentless Collector or Application Discovery Agent. This gives you the option to perform migration assessment and planning directly from your imported data, including the ability to group your devices as applications and track their migration status.</p> <p>To start an import request, do this:</p> <ol> <li> <p>Download the specially formatted comma separated value (CSV) import template, which you can find here: <a href=\"https://s3.us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv\">https://s3.us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv</a>.</p> </li> <li> <p>Fill out the template with your server and application data.</p> </li> <li> <p>Upload your import file to an Amazon S3 bucket, and make a note of it's Object URL. Your import file must be in the CSV format.</p> </li> <li> <p>Use the console or the <code>StartImportTask</code> command with the Amazon Web Services CLI or one of the Amazon Web Services SDKs to import the records from your file.</p> </li> </ol> <p>For more information, including step-by-step procedures, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-import.html\">Migration Hub Import</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> <note> <p>There are limits to the number of import tasks you can create (and delete) in an Amazon Web Services account. For more information, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/ads_service_limits.html\">Amazon Web Services Application Discovery Service Limits</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StartImportTaskRequest} startImportTaskRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startImportTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartImportTaskResponse}
     */
    startImportTask(xAmzTarget, startImportTaskRequest, opts, callback) {
      opts = opts || {};
      let postBody = startImportTaskRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startImportTask");
      }
      // verify the required parameter 'startImportTaskRequest' is set
      if (startImportTaskRequest === undefined || startImportTaskRequest === null) {
        throw new Error("Missing the required parameter 'startImportTaskRequest' when calling startImportTask");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartImportTaskResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartImportTask', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stopContinuousExport operation.
     * @callback module:api/DefaultApi~stopContinuousExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StopContinuousExportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stop the continuous flow of agent's discovered data into Amazon Athena.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StopContinuousExportRequest} stopContinuousExportRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~stopContinuousExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StopContinuousExportResponse}
     */
    stopContinuousExport(xAmzTarget, stopContinuousExportRequest, opts, callback) {
      opts = opts || {};
      let postBody = stopContinuousExportRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling stopContinuousExport");
      }
      // verify the required parameter 'stopContinuousExportRequest' is set
      if (stopContinuousExportRequest === undefined || stopContinuousExportRequest === null) {
        throw new Error("Missing the required parameter 'stopContinuousExportRequest' when calling stopContinuousExport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StopContinuousExportResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopContinuousExport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stopDataCollectionByAgentIds operation.
     * @callback module:api/DefaultApi~stopDataCollectionByAgentIdsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StopDataCollectionByAgentIdsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Instructs the specified agents to stop collecting data.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StopDataCollectionByAgentIdsRequest} stopDataCollectionByAgentIdsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~stopDataCollectionByAgentIdsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StopDataCollectionByAgentIdsResponse}
     */
    stopDataCollectionByAgentIds(xAmzTarget, stopDataCollectionByAgentIdsRequest, opts, callback) {
      opts = opts || {};
      let postBody = stopDataCollectionByAgentIdsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling stopDataCollectionByAgentIds");
      }
      // verify the required parameter 'stopDataCollectionByAgentIdsRequest' is set
      if (stopDataCollectionByAgentIdsRequest === undefined || stopDataCollectionByAgentIdsRequest === null) {
        throw new Error("Missing the required parameter 'stopDataCollectionByAgentIdsRequest' when calling stopDataCollectionByAgentIds");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StopDataCollectionByAgentIdsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopDataCollectionByAgentIds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateApplication operation.
     * @callback module:api/DefaultApi~updateApplicationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates metadata about an application.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateApplicationRequest} updateApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateApplication(xAmzTarget, updateApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateApplicationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateApplication");
      }
      // verify the required parameter 'updateApplicationRequest' is set
      if (updateApplicationRequest === undefined || updateApplicationRequest === null) {
        throw new Error("Missing the required parameter 'updateApplicationRequest' when calling updateApplication");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSPoseidonService_V2015_11_01.UpdateApplication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
