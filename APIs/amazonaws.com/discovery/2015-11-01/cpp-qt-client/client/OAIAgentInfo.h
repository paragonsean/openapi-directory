/**
 * AWS Application Discovery Service
 * <fullname>Amazon Web Services Application Discovery Service</fullname> <p>Amazon Web Services Application Discovery Service (Application Discovery Service) helps you plan application migration projects. It automatically identifies servers, virtual machines (VMs), and network dependencies in your on-premises data centers. For more information, see the <a href=\"http://aws.amazon.com/application-discovery/faqs/\">Amazon Web Services Application Discovery Service FAQ</a>. </p> <p>Application Discovery Service offers three ways of performing discovery and collecting data about your on-premises servers:</p> <ul> <li> <p> <b>Agentless discovery</b> using Amazon Web Services Application Discovery Service Agentless Collector (Agentless Collector), which doesn't require you to install an agent on each host.</p> <ul> <li> <p>Agentless Collector gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment.</p> </li> <li> <p>Agentless Collector doesn't collect information about network dependencies, only agent-based discovery collects that information. </p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Agent-based discovery</b> using the Amazon Web Services Application Discovery Agent (Application Discovery Agent) collects a richer set of data than agentless discovery, which you install on one or more hosts in your data center.</p> <ul> <li> <p> The agent captures infrastructure and application information, including an inventory of running processes, system performance information, resource utilization, and network dependencies.</p> </li> <li> <p>The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the Amazon Web Services cloud. For more information, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-agent.html\">Amazon Web Services Application Discovery Agent</a>.</p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Amazon Web Services Partner Network (APN) solutions</b> integrate with Application Discovery Service, enabling you to import details of your on-premises environment directly into Amazon Web Services Migration Hub (Migration Hub) without using Agentless Collector or Application Discovery Agent.</p> <ul> <li> <p>Third-party application discovery tools can query Amazon Web Services Application Discovery Service, and they can write to the Application Discovery Service database using the public API.</p> </li> <li> <p>In this way, you can import data into Migration Hub and view it, so that you can associate applications with servers and track migrations.</p> </li> </ul> </li> </ul> <p> <b>Working With This Guide</b> </p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <note> <ul> <li> <p>Remember that you must set your Migration Hub home Region before you call any of these APIs.</p> </li> <li> <p>You must make API calls for write actions (create, notify, associate, disassociate, import, or put) while in your home Region, or a <code>HomeRegionNotSetException</code> error is returned.</p> </li> <li> <p>API calls for read actions (list, describe, stop, and delete) are permitted outside of your home Region.</p> </li> <li> <p>Although it is unlikely, the Migration Hub home Region could change. If you call APIs outside the home Region, an <code>InvalidInputException</code> is returned.</p> </li> <li> <p>You must call <code>GetHomeRegion</code> to obtain the latest Migration Hub home Region.</p> </li> </ul> </note> <p>This guide is intended for use with the <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/\">Amazon Web Services Application Discovery Service User Guide</a>.</p> <important> <p>All data is handled according to the <a href=\"https://aws.amazon.com/privacy/\">Amazon Web Services Privacy Policy</a>. You can operate Application Discovery Service offline to inspect collected data before it is shared with the service.</p> </important>
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAgentInfo.h
 *
 * Information about agents associated with the userâ€™s Amazon Web Services account. Information includes agent IDs, IP addresses, media access control (MAC) addresses, agent or collector status, hostname where the agent resides, and agent version for each agent.
 */

#ifndef OAIAgentInfo_H
#define OAIAgentInfo_H

#include <QJsonObject>

#include "OAIAgentStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAgentInfo : public OAIObject {
public:
    OAIAgentInfo();
    OAIAgentInfo(QString json);
    ~OAIAgentInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentId() const;
    void setAgentId(const QString &agent_id);
    bool is_agent_id_Set() const;
    bool is_agent_id_Valid() const;

    QString getHostName() const;
    void setHostName(const QString &host_name);
    bool is_host_name_Set() const;
    bool is_host_name_Valid() const;

    QList getAgentNetworkInfoList() const;
    void setAgentNetworkInfoList(const QList &agent_network_info_list);
    bool is_agent_network_info_list_Set() const;
    bool is_agent_network_info_list_Valid() const;

    QString getConnectorId() const;
    void setConnectorId(const QString &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIAgentStatus getHealth() const;
    void setHealth(const OAIAgentStatus &health);
    bool is_health_Set() const;
    bool is_health_Valid() const;

    QString getLastHealthPingTime() const;
    void setLastHealthPingTime(const QString &last_health_ping_time);
    bool is_last_health_ping_time_Set() const;
    bool is_last_health_ping_time_Valid() const;

    QString getCollectionStatus() const;
    void setCollectionStatus(const QString &collection_status);
    bool is_collection_status_Set() const;
    bool is_collection_status_Valid() const;

    QString getAgentType() const;
    void setAgentType(const QString &agent_type);
    bool is_agent_type_Set() const;
    bool is_agent_type_Valid() const;

    QString getRegisteredTime() const;
    void setRegisteredTime(const QString &registered_time);
    bool is_registered_time_Set() const;
    bool is_registered_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_id;
    bool m_agent_id_isSet;
    bool m_agent_id_isValid;

    QString m_host_name;
    bool m_host_name_isSet;
    bool m_host_name_isValid;

    QList m_agent_network_info_list;
    bool m_agent_network_info_list_isSet;
    bool m_agent_network_info_list_isValid;

    QString m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIAgentStatus m_health;
    bool m_health_isSet;
    bool m_health_isValid;

    QString m_last_health_ping_time;
    bool m_last_health_ping_time_isSet;
    bool m_last_health_ping_time_isValid;

    QString m_collection_status;
    bool m_collection_status_isSet;
    bool m_collection_status_isValid;

    QString m_agent_type;
    bool m_agent_type_isSet;
    bool m_agent_type_isValid;

    QString m_registered_time;
    bool m_registered_time_isSet;
    bool m_registered_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAgentInfo)

#endif // OAIAgentInfo_H
