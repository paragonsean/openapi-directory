# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_code import CurrencyCode
from openapi_server.models.savings_plan_payment_option import SavingsPlanPaymentOption
from openapi_server.models.savings_plan_type import SavingsPlanType
from openapi_server import util


class ParentSavingsPlanOffering(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering_id: str=None, payment_option: SavingsPlanPaymentOption=None, plan_type: SavingsPlanType=None, duration_seconds: int=None, currency: CurrencyCode=None, plan_description: str=None):
        """ParentSavingsPlanOffering - a model defined in OpenAPI

        :param offering_id: The offering_id of this ParentSavingsPlanOffering.
        :param payment_option: The payment_option of this ParentSavingsPlanOffering.
        :param plan_type: The plan_type of this ParentSavingsPlanOffering.
        :param duration_seconds: The duration_seconds of this ParentSavingsPlanOffering.
        :param currency: The currency of this ParentSavingsPlanOffering.
        :param plan_description: The plan_description of this ParentSavingsPlanOffering.
        """
        self.openapi_types = {
            'offering_id': str,
            'payment_option': SavingsPlanPaymentOption,
            'plan_type': SavingsPlanType,
            'duration_seconds': int,
            'currency': CurrencyCode,
            'plan_description': str
        }

        self.attribute_map = {
            'offering_id': 'offeringId',
            'payment_option': 'paymentOption',
            'plan_type': 'planType',
            'duration_seconds': 'durationSeconds',
            'currency': 'currency',
            'plan_description': 'planDescription'
        }

        self._offering_id = offering_id
        self._payment_option = payment_option
        self._plan_type = plan_type
        self._duration_seconds = duration_seconds
        self._currency = currency
        self._plan_description = plan_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParentSavingsPlanOffering':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParentSavingsPlanOffering of this ParentSavingsPlanOffering.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering_id(self):
        """Gets the offering_id of this ParentSavingsPlanOffering.


        :return: The offering_id of this ParentSavingsPlanOffering.
        :rtype: str
        """
        return self._offering_id

    @offering_id.setter
    def offering_id(self, offering_id):
        """Sets the offering_id of this ParentSavingsPlanOffering.


        :param offering_id: The offering_id of this ParentSavingsPlanOffering.
        :type offering_id: str
        """

        self._offering_id = offering_id

    @property
    def payment_option(self):
        """Gets the payment_option of this ParentSavingsPlanOffering.


        :return: The payment_option of this ParentSavingsPlanOffering.
        :rtype: SavingsPlanPaymentOption
        """
        return self._payment_option

    @payment_option.setter
    def payment_option(self, payment_option):
        """Sets the payment_option of this ParentSavingsPlanOffering.


        :param payment_option: The payment_option of this ParentSavingsPlanOffering.
        :type payment_option: SavingsPlanPaymentOption
        """

        self._payment_option = payment_option

    @property
    def plan_type(self):
        """Gets the plan_type of this ParentSavingsPlanOffering.


        :return: The plan_type of this ParentSavingsPlanOffering.
        :rtype: SavingsPlanType
        """
        return self._plan_type

    @plan_type.setter
    def plan_type(self, plan_type):
        """Sets the plan_type of this ParentSavingsPlanOffering.


        :param plan_type: The plan_type of this ParentSavingsPlanOffering.
        :type plan_type: SavingsPlanType
        """

        self._plan_type = plan_type

    @property
    def duration_seconds(self):
        """Gets the duration_seconds of this ParentSavingsPlanOffering.


        :return: The duration_seconds of this ParentSavingsPlanOffering.
        :rtype: int
        """
        return self._duration_seconds

    @duration_seconds.setter
    def duration_seconds(self, duration_seconds):
        """Sets the duration_seconds of this ParentSavingsPlanOffering.


        :param duration_seconds: The duration_seconds of this ParentSavingsPlanOffering.
        :type duration_seconds: int
        """

        self._duration_seconds = duration_seconds

    @property
    def currency(self):
        """Gets the currency of this ParentSavingsPlanOffering.


        :return: The currency of this ParentSavingsPlanOffering.
        :rtype: CurrencyCode
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ParentSavingsPlanOffering.


        :param currency: The currency of this ParentSavingsPlanOffering.
        :type currency: CurrencyCode
        """

        self._currency = currency

    @property
    def plan_description(self):
        """Gets the plan_description of this ParentSavingsPlanOffering.


        :return: The plan_description of this ParentSavingsPlanOffering.
        :rtype: str
        """
        return self._plan_description

    @plan_description.setter
    def plan_description(self, plan_description):
        """Sets the plan_description of this ParentSavingsPlanOffering.


        :param plan_description: The plan_description of this ParentSavingsPlanOffering.
        :type plan_description: str
        """

        self._plan_description = plan_description
