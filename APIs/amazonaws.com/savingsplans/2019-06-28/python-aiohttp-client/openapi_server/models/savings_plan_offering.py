# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_code import CurrencyCode
from openapi_server.models.savings_plan_payment_option import SavingsPlanPaymentOption
from openapi_server.models.savings_plan_type import SavingsPlanType
from openapi_server import util


class SavingsPlanOffering(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering_id: str=None, product_types: List=None, plan_type: SavingsPlanType=None, description: str=None, payment_option: SavingsPlanPaymentOption=None, duration_seconds: int=None, currency: CurrencyCode=None, service_code: str=None, usage_type: str=None, operation: str=None, properties: object=None):
        """SavingsPlanOffering - a model defined in OpenAPI

        :param offering_id: The offering_id of this SavingsPlanOffering.
        :param product_types: The product_types of this SavingsPlanOffering.
        :param plan_type: The plan_type of this SavingsPlanOffering.
        :param description: The description of this SavingsPlanOffering.
        :param payment_option: The payment_option of this SavingsPlanOffering.
        :param duration_seconds: The duration_seconds of this SavingsPlanOffering.
        :param currency: The currency of this SavingsPlanOffering.
        :param service_code: The service_code of this SavingsPlanOffering.
        :param usage_type: The usage_type of this SavingsPlanOffering.
        :param operation: The operation of this SavingsPlanOffering.
        :param properties: The properties of this SavingsPlanOffering.
        """
        self.openapi_types = {
            'offering_id': str,
            'product_types': List,
            'plan_type': SavingsPlanType,
            'description': str,
            'payment_option': SavingsPlanPaymentOption,
            'duration_seconds': int,
            'currency': CurrencyCode,
            'service_code': str,
            'usage_type': str,
            'operation': str,
            'properties': object
        }

        self.attribute_map = {
            'offering_id': 'offeringId',
            'product_types': 'productTypes',
            'plan_type': 'planType',
            'description': 'description',
            'payment_option': 'paymentOption',
            'duration_seconds': 'durationSeconds',
            'currency': 'currency',
            'service_code': 'serviceCode',
            'usage_type': 'usageType',
            'operation': 'operation',
            'properties': 'properties'
        }

        self._offering_id = offering_id
        self._product_types = product_types
        self._plan_type = plan_type
        self._description = description
        self._payment_option = payment_option
        self._duration_seconds = duration_seconds
        self._currency = currency
        self._service_code = service_code
        self._usage_type = usage_type
        self._operation = operation
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlanOffering':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlanOffering of this SavingsPlanOffering.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering_id(self):
        """Gets the offering_id of this SavingsPlanOffering.


        :return: The offering_id of this SavingsPlanOffering.
        :rtype: str
        """
        return self._offering_id

    @offering_id.setter
    def offering_id(self, offering_id):
        """Sets the offering_id of this SavingsPlanOffering.


        :param offering_id: The offering_id of this SavingsPlanOffering.
        :type offering_id: str
        """

        self._offering_id = offering_id

    @property
    def product_types(self):
        """Gets the product_types of this SavingsPlanOffering.


        :return: The product_types of this SavingsPlanOffering.
        :rtype: List
        """
        return self._product_types

    @product_types.setter
    def product_types(self, product_types):
        """Sets the product_types of this SavingsPlanOffering.


        :param product_types: The product_types of this SavingsPlanOffering.
        :type product_types: List
        """

        self._product_types = product_types

    @property
    def plan_type(self):
        """Gets the plan_type of this SavingsPlanOffering.


        :return: The plan_type of this SavingsPlanOffering.
        :rtype: SavingsPlanType
        """
        return self._plan_type

    @plan_type.setter
    def plan_type(self, plan_type):
        """Sets the plan_type of this SavingsPlanOffering.


        :param plan_type: The plan_type of this SavingsPlanOffering.
        :type plan_type: SavingsPlanType
        """

        self._plan_type = plan_type

    @property
    def description(self):
        """Gets the description of this SavingsPlanOffering.


        :return: The description of this SavingsPlanOffering.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SavingsPlanOffering.


        :param description: The description of this SavingsPlanOffering.
        :type description: str
        """

        self._description = description

    @property
    def payment_option(self):
        """Gets the payment_option of this SavingsPlanOffering.


        :return: The payment_option of this SavingsPlanOffering.
        :rtype: SavingsPlanPaymentOption
        """
        return self._payment_option

    @payment_option.setter
    def payment_option(self, payment_option):
        """Sets the payment_option of this SavingsPlanOffering.


        :param payment_option: The payment_option of this SavingsPlanOffering.
        :type payment_option: SavingsPlanPaymentOption
        """

        self._payment_option = payment_option

    @property
    def duration_seconds(self):
        """Gets the duration_seconds of this SavingsPlanOffering.


        :return: The duration_seconds of this SavingsPlanOffering.
        :rtype: int
        """
        return self._duration_seconds

    @duration_seconds.setter
    def duration_seconds(self, duration_seconds):
        """Sets the duration_seconds of this SavingsPlanOffering.


        :param duration_seconds: The duration_seconds of this SavingsPlanOffering.
        :type duration_seconds: int
        """

        self._duration_seconds = duration_seconds

    @property
    def currency(self):
        """Gets the currency of this SavingsPlanOffering.


        :return: The currency of this SavingsPlanOffering.
        :rtype: CurrencyCode
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this SavingsPlanOffering.


        :param currency: The currency of this SavingsPlanOffering.
        :type currency: CurrencyCode
        """

        self._currency = currency

    @property
    def service_code(self):
        """Gets the service_code of this SavingsPlanOffering.


        :return: The service_code of this SavingsPlanOffering.
        :rtype: str
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this SavingsPlanOffering.


        :param service_code: The service_code of this SavingsPlanOffering.
        :type service_code: str
        """

        self._service_code = service_code

    @property
    def usage_type(self):
        """Gets the usage_type of this SavingsPlanOffering.


        :return: The usage_type of this SavingsPlanOffering.
        :rtype: str
        """
        return self._usage_type

    @usage_type.setter
    def usage_type(self, usage_type):
        """Sets the usage_type of this SavingsPlanOffering.


        :param usage_type: The usage_type of this SavingsPlanOffering.
        :type usage_type: str
        """

        self._usage_type = usage_type

    @property
    def operation(self):
        """Gets the operation of this SavingsPlanOffering.


        :return: The operation of this SavingsPlanOffering.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this SavingsPlanOffering.


        :param operation: The operation of this SavingsPlanOffering.
        :type operation: str
        """

        self._operation = operation

    @property
    def properties(self):
        """Gets the properties of this SavingsPlanOffering.

        The properties.

        :return: The properties of this SavingsPlanOffering.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this SavingsPlanOffering.

        The properties.

        :param properties: The properties of this SavingsPlanOffering.
        :type properties: object
        """

        self._properties = properties
