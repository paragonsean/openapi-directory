# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_code import CurrencyCode
from openapi_server.models.savings_plan_product_type import SavingsPlanProductType
from openapi_server.models.savings_plan_rate_service_code import SavingsPlanRateServiceCode
from openapi_server.models.savings_plan_rate_unit import SavingsPlanRateUnit
from openapi_server import util


class SavingsPlanRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rate: str=None, currency: CurrencyCode=None, unit: SavingsPlanRateUnit=None, product_type: SavingsPlanProductType=None, service_code: SavingsPlanRateServiceCode=None, usage_type: str=None, operation: str=None, properties: object=None):
        """SavingsPlanRate - a model defined in OpenAPI

        :param rate: The rate of this SavingsPlanRate.
        :param currency: The currency of this SavingsPlanRate.
        :param unit: The unit of this SavingsPlanRate.
        :param product_type: The product_type of this SavingsPlanRate.
        :param service_code: The service_code of this SavingsPlanRate.
        :param usage_type: The usage_type of this SavingsPlanRate.
        :param operation: The operation of this SavingsPlanRate.
        :param properties: The properties of this SavingsPlanRate.
        """
        self.openapi_types = {
            'rate': str,
            'currency': CurrencyCode,
            'unit': SavingsPlanRateUnit,
            'product_type': SavingsPlanProductType,
            'service_code': SavingsPlanRateServiceCode,
            'usage_type': str,
            'operation': str,
            'properties': object
        }

        self.attribute_map = {
            'rate': 'rate',
            'currency': 'currency',
            'unit': 'unit',
            'product_type': 'productType',
            'service_code': 'serviceCode',
            'usage_type': 'usageType',
            'operation': 'operation',
            'properties': 'properties'
        }

        self._rate = rate
        self._currency = currency
        self._unit = unit
        self._product_type = product_type
        self._service_code = service_code
        self._usage_type = usage_type
        self._operation = operation
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlanRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlanRate of this SavingsPlanRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rate(self):
        """Gets the rate of this SavingsPlanRate.


        :return: The rate of this SavingsPlanRate.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this SavingsPlanRate.


        :param rate: The rate of this SavingsPlanRate.
        :type rate: str
        """

        self._rate = rate

    @property
    def currency(self):
        """Gets the currency of this SavingsPlanRate.


        :return: The currency of this SavingsPlanRate.
        :rtype: CurrencyCode
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this SavingsPlanRate.


        :param currency: The currency of this SavingsPlanRate.
        :type currency: CurrencyCode
        """

        self._currency = currency

    @property
    def unit(self):
        """Gets the unit of this SavingsPlanRate.


        :return: The unit of this SavingsPlanRate.
        :rtype: SavingsPlanRateUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this SavingsPlanRate.


        :param unit: The unit of this SavingsPlanRate.
        :type unit: SavingsPlanRateUnit
        """

        self._unit = unit

    @property
    def product_type(self):
        """Gets the product_type of this SavingsPlanRate.


        :return: The product_type of this SavingsPlanRate.
        :rtype: SavingsPlanProductType
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this SavingsPlanRate.


        :param product_type: The product_type of this SavingsPlanRate.
        :type product_type: SavingsPlanProductType
        """

        self._product_type = product_type

    @property
    def service_code(self):
        """Gets the service_code of this SavingsPlanRate.


        :return: The service_code of this SavingsPlanRate.
        :rtype: SavingsPlanRateServiceCode
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this SavingsPlanRate.


        :param service_code: The service_code of this SavingsPlanRate.
        :type service_code: SavingsPlanRateServiceCode
        """

        self._service_code = service_code

    @property
    def usage_type(self):
        """Gets the usage_type of this SavingsPlanRate.


        :return: The usage_type of this SavingsPlanRate.
        :rtype: str
        """
        return self._usage_type

    @usage_type.setter
    def usage_type(self, usage_type):
        """Sets the usage_type of this SavingsPlanRate.


        :param usage_type: The usage_type of this SavingsPlanRate.
        :type usage_type: str
        """

        self._usage_type = usage_type

    @property
    def operation(self):
        """Gets the operation of this SavingsPlanRate.


        :return: The operation of this SavingsPlanRate.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this SavingsPlanRate.


        :param operation: The operation of this SavingsPlanRate.
        :type operation: str
        """

        self._operation = operation

    @property
    def properties(self):
        """Gets the properties of this SavingsPlanRate.

        The properties.

        :return: The properties of this SavingsPlanRate.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this SavingsPlanRate.

        The properties.

        :param properties: The properties of this SavingsPlanRate.
        :type properties: object
        """

        self._properties = properties
