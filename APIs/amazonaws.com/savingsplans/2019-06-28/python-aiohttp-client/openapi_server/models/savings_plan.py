# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_code import CurrencyCode
from openapi_server.models.savings_plan_payment_option import SavingsPlanPaymentOption
from openapi_server.models.savings_plan_state import SavingsPlanState
from openapi_server.models.savings_plan_type import SavingsPlanType
from openapi_server import util


class SavingsPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering_id: str=None, savings_plan_id: str=None, savings_plan_arn: str=None, description: str=None, start: str=None, end: str=None, state: SavingsPlanState=None, region: str=None, ec2_instance_family: str=None, savings_plan_type: SavingsPlanType=None, payment_option: SavingsPlanPaymentOption=None, product_types: List=None, currency: CurrencyCode=None, commitment: str=None, upfront_payment_amount: str=None, recurring_payment_amount: str=None, term_duration_in_seconds: int=None, tags: Dict=None):
        """SavingsPlan - a model defined in OpenAPI

        :param offering_id: The offering_id of this SavingsPlan.
        :param savings_plan_id: The savings_plan_id of this SavingsPlan.
        :param savings_plan_arn: The savings_plan_arn of this SavingsPlan.
        :param description: The description of this SavingsPlan.
        :param start: The start of this SavingsPlan.
        :param end: The end of this SavingsPlan.
        :param state: The state of this SavingsPlan.
        :param region: The region of this SavingsPlan.
        :param ec2_instance_family: The ec2_instance_family of this SavingsPlan.
        :param savings_plan_type: The savings_plan_type of this SavingsPlan.
        :param payment_option: The payment_option of this SavingsPlan.
        :param product_types: The product_types of this SavingsPlan.
        :param currency: The currency of this SavingsPlan.
        :param commitment: The commitment of this SavingsPlan.
        :param upfront_payment_amount: The upfront_payment_amount of this SavingsPlan.
        :param recurring_payment_amount: The recurring_payment_amount of this SavingsPlan.
        :param term_duration_in_seconds: The term_duration_in_seconds of this SavingsPlan.
        :param tags: The tags of this SavingsPlan.
        """
        self.openapi_types = {
            'offering_id': str,
            'savings_plan_id': str,
            'savings_plan_arn': str,
            'description': str,
            'start': str,
            'end': str,
            'state': SavingsPlanState,
            'region': str,
            'ec2_instance_family': str,
            'savings_plan_type': SavingsPlanType,
            'payment_option': SavingsPlanPaymentOption,
            'product_types': List,
            'currency': CurrencyCode,
            'commitment': str,
            'upfront_payment_amount': str,
            'recurring_payment_amount': str,
            'term_duration_in_seconds': int,
            'tags': Dict
        }

        self.attribute_map = {
            'offering_id': 'offeringId',
            'savings_plan_id': 'savingsPlanId',
            'savings_plan_arn': 'savingsPlanArn',
            'description': 'description',
            'start': 'start',
            'end': 'end',
            'state': 'state',
            'region': 'region',
            'ec2_instance_family': 'ec2InstanceFamily',
            'savings_plan_type': 'savingsPlanType',
            'payment_option': 'paymentOption',
            'product_types': 'productTypes',
            'currency': 'currency',
            'commitment': 'commitment',
            'upfront_payment_amount': 'upfrontPaymentAmount',
            'recurring_payment_amount': 'recurringPaymentAmount',
            'term_duration_in_seconds': 'termDurationInSeconds',
            'tags': 'tags'
        }

        self._offering_id = offering_id
        self._savings_plan_id = savings_plan_id
        self._savings_plan_arn = savings_plan_arn
        self._description = description
        self._start = start
        self._end = end
        self._state = state
        self._region = region
        self._ec2_instance_family = ec2_instance_family
        self._savings_plan_type = savings_plan_type
        self._payment_option = payment_option
        self._product_types = product_types
        self._currency = currency
        self._commitment = commitment
        self._upfront_payment_amount = upfront_payment_amount
        self._recurring_payment_amount = recurring_payment_amount
        self._term_duration_in_seconds = term_duration_in_seconds
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavingsPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavingsPlan of this SavingsPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering_id(self):
        """Gets the offering_id of this SavingsPlan.


        :return: The offering_id of this SavingsPlan.
        :rtype: str
        """
        return self._offering_id

    @offering_id.setter
    def offering_id(self, offering_id):
        """Sets the offering_id of this SavingsPlan.


        :param offering_id: The offering_id of this SavingsPlan.
        :type offering_id: str
        """

        self._offering_id = offering_id

    @property
    def savings_plan_id(self):
        """Gets the savings_plan_id of this SavingsPlan.


        :return: The savings_plan_id of this SavingsPlan.
        :rtype: str
        """
        return self._savings_plan_id

    @savings_plan_id.setter
    def savings_plan_id(self, savings_plan_id):
        """Sets the savings_plan_id of this SavingsPlan.


        :param savings_plan_id: The savings_plan_id of this SavingsPlan.
        :type savings_plan_id: str
        """

        self._savings_plan_id = savings_plan_id

    @property
    def savings_plan_arn(self):
        """Gets the savings_plan_arn of this SavingsPlan.


        :return: The savings_plan_arn of this SavingsPlan.
        :rtype: str
        """
        return self._savings_plan_arn

    @savings_plan_arn.setter
    def savings_plan_arn(self, savings_plan_arn):
        """Sets the savings_plan_arn of this SavingsPlan.


        :param savings_plan_arn: The savings_plan_arn of this SavingsPlan.
        :type savings_plan_arn: str
        """

        self._savings_plan_arn = savings_plan_arn

    @property
    def description(self):
        """Gets the description of this SavingsPlan.


        :return: The description of this SavingsPlan.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SavingsPlan.


        :param description: The description of this SavingsPlan.
        :type description: str
        """

        self._description = description

    @property
    def start(self):
        """Gets the start of this SavingsPlan.


        :return: The start of this SavingsPlan.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this SavingsPlan.


        :param start: The start of this SavingsPlan.
        :type start: str
        """

        self._start = start

    @property
    def end(self):
        """Gets the end of this SavingsPlan.


        :return: The end of this SavingsPlan.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this SavingsPlan.


        :param end: The end of this SavingsPlan.
        :type end: str
        """

        self._end = end

    @property
    def state(self):
        """Gets the state of this SavingsPlan.


        :return: The state of this SavingsPlan.
        :rtype: SavingsPlanState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SavingsPlan.


        :param state: The state of this SavingsPlan.
        :type state: SavingsPlanState
        """

        self._state = state

    @property
    def region(self):
        """Gets the region of this SavingsPlan.


        :return: The region of this SavingsPlan.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this SavingsPlan.


        :param region: The region of this SavingsPlan.
        :type region: str
        """

        self._region = region

    @property
    def ec2_instance_family(self):
        """Gets the ec2_instance_family of this SavingsPlan.


        :return: The ec2_instance_family of this SavingsPlan.
        :rtype: str
        """
        return self._ec2_instance_family

    @ec2_instance_family.setter
    def ec2_instance_family(self, ec2_instance_family):
        """Sets the ec2_instance_family of this SavingsPlan.


        :param ec2_instance_family: The ec2_instance_family of this SavingsPlan.
        :type ec2_instance_family: str
        """

        self._ec2_instance_family = ec2_instance_family

    @property
    def savings_plan_type(self):
        """Gets the savings_plan_type of this SavingsPlan.


        :return: The savings_plan_type of this SavingsPlan.
        :rtype: SavingsPlanType
        """
        return self._savings_plan_type

    @savings_plan_type.setter
    def savings_plan_type(self, savings_plan_type):
        """Sets the savings_plan_type of this SavingsPlan.


        :param savings_plan_type: The savings_plan_type of this SavingsPlan.
        :type savings_plan_type: SavingsPlanType
        """

        self._savings_plan_type = savings_plan_type

    @property
    def payment_option(self):
        """Gets the payment_option of this SavingsPlan.


        :return: The payment_option of this SavingsPlan.
        :rtype: SavingsPlanPaymentOption
        """
        return self._payment_option

    @payment_option.setter
    def payment_option(self, payment_option):
        """Sets the payment_option of this SavingsPlan.


        :param payment_option: The payment_option of this SavingsPlan.
        :type payment_option: SavingsPlanPaymentOption
        """

        self._payment_option = payment_option

    @property
    def product_types(self):
        """Gets the product_types of this SavingsPlan.


        :return: The product_types of this SavingsPlan.
        :rtype: List
        """
        return self._product_types

    @product_types.setter
    def product_types(self, product_types):
        """Sets the product_types of this SavingsPlan.


        :param product_types: The product_types of this SavingsPlan.
        :type product_types: List
        """

        self._product_types = product_types

    @property
    def currency(self):
        """Gets the currency of this SavingsPlan.


        :return: The currency of this SavingsPlan.
        :rtype: CurrencyCode
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this SavingsPlan.


        :param currency: The currency of this SavingsPlan.
        :type currency: CurrencyCode
        """

        self._currency = currency

    @property
    def commitment(self):
        """Gets the commitment of this SavingsPlan.


        :return: The commitment of this SavingsPlan.
        :rtype: str
        """
        return self._commitment

    @commitment.setter
    def commitment(self, commitment):
        """Sets the commitment of this SavingsPlan.


        :param commitment: The commitment of this SavingsPlan.
        :type commitment: str
        """

        self._commitment = commitment

    @property
    def upfront_payment_amount(self):
        """Gets the upfront_payment_amount of this SavingsPlan.


        :return: The upfront_payment_amount of this SavingsPlan.
        :rtype: str
        """
        return self._upfront_payment_amount

    @upfront_payment_amount.setter
    def upfront_payment_amount(self, upfront_payment_amount):
        """Sets the upfront_payment_amount of this SavingsPlan.


        :param upfront_payment_amount: The upfront_payment_amount of this SavingsPlan.
        :type upfront_payment_amount: str
        """

        self._upfront_payment_amount = upfront_payment_amount

    @property
    def recurring_payment_amount(self):
        """Gets the recurring_payment_amount of this SavingsPlan.


        :return: The recurring_payment_amount of this SavingsPlan.
        :rtype: str
        """
        return self._recurring_payment_amount

    @recurring_payment_amount.setter
    def recurring_payment_amount(self, recurring_payment_amount):
        """Sets the recurring_payment_amount of this SavingsPlan.


        :param recurring_payment_amount: The recurring_payment_amount of this SavingsPlan.
        :type recurring_payment_amount: str
        """

        self._recurring_payment_amount = recurring_payment_amount

    @property
    def term_duration_in_seconds(self):
        """Gets the term_duration_in_seconds of this SavingsPlan.


        :return: The term_duration_in_seconds of this SavingsPlan.
        :rtype: int
        """
        return self._term_duration_in_seconds

    @term_duration_in_seconds.setter
    def term_duration_in_seconds(self, term_duration_in_seconds):
        """Sets the term_duration_in_seconds of this SavingsPlan.


        :param term_duration_in_seconds: The term_duration_in_seconds of this SavingsPlan.
        :type term_duration_in_seconds: int
        """

        self._term_duration_in_seconds = term_duration_in_seconds

    @property
    def tags(self):
        """Gets the tags of this SavingsPlan.


        :return: The tags of this SavingsPlan.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SavingsPlan.


        :param tags: The tags of this SavingsPlan.
        :type tags: Dict
        """

        self._tags = tags
