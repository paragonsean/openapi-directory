/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencyCode from './CurrencyCode';
import SavingsPlanProductType from './SavingsPlanProductType';
import SavingsPlanRateServiceCode from './SavingsPlanRateServiceCode';
import SavingsPlanRateUnit from './SavingsPlanRateUnit';

/**
 * The SavingsPlanRate model module.
 * @module model/SavingsPlanRate
 * @version 2019-06-28
 */
class SavingsPlanRate {
    /**
     * Constructs a new <code>SavingsPlanRate</code>.
     * Information about a Savings Plan rate.
     * @alias module:model/SavingsPlanRate
     */
    constructor() { 
        
        SavingsPlanRate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SavingsPlanRate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SavingsPlanRate} obj Optional instance to populate.
     * @return {module:model/SavingsPlanRate} The populated <code>SavingsPlanRate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SavingsPlanRate();

            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], CurrencyCode);
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], SavingsPlanRateUnit);
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], SavingsPlanProductType);
            }
            if (data.hasOwnProperty('serviceCode')) {
                obj['serviceCode'] = ApiClient.convertToType(data['serviceCode'], SavingsPlanRateServiceCode);
            }
            if (data.hasOwnProperty('usageType')) {
                obj['usageType'] = ApiClient.convertToType(data['usageType'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SavingsPlanRate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SavingsPlanRate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `rate`
        if (data['rate']) { // data not null
          String.validateJSON(data['rate']);
        }
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          CurrencyCode.validateJSON(data['currency']);
        }
        // validate the optional field `unit`
        if (data['unit']) { // data not null
          SavingsPlanRateUnit.validateJSON(data['unit']);
        }
        // validate the optional field `productType`
        if (data['productType']) { // data not null
          SavingsPlanProductType.validateJSON(data['productType']);
        }
        // validate the optional field `serviceCode`
        if (data['serviceCode']) { // data not null
          SavingsPlanRateServiceCode.validateJSON(data['serviceCode']);
        }
        // validate the optional field `usageType`
        if (data['usageType']) { // data not null
          String.validateJSON(data['usageType']);
        }
        // validate the optional field `operation`
        if (data['operation']) { // data not null
          String.validateJSON(data['operation']);
        }

        return true;
    }


}



/**
 * @member {String} rate
 */
SavingsPlanRate.prototype['rate'] = undefined;

/**
 * @member {module:model/CurrencyCode} currency
 */
SavingsPlanRate.prototype['currency'] = undefined;

/**
 * @member {module:model/SavingsPlanRateUnit} unit
 */
SavingsPlanRate.prototype['unit'] = undefined;

/**
 * @member {module:model/SavingsPlanProductType} productType
 */
SavingsPlanRate.prototype['productType'] = undefined;

/**
 * @member {module:model/SavingsPlanRateServiceCode} serviceCode
 */
SavingsPlanRate.prototype['serviceCode'] = undefined;

/**
 * @member {String} usageType
 */
SavingsPlanRate.prototype['usageType'] = undefined;

/**
 * @member {String} operation
 */
SavingsPlanRate.prototype['operation'] = undefined;

/**
 * The properties.
 * @member {Object} properties
 */
SavingsPlanRate.prototype['properties'] = undefined;






export default SavingsPlanRate;

