/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavingsPlanOfferingRate.h
 *
 * Information about a Savings Plan offering rate.
 */

#ifndef OAISavingsPlanOfferingRate_H
#define OAISavingsPlanOfferingRate_H

#include <QJsonObject>

#include "OAISavingsPlanOfferingRate_savingsPlanOffering.h"
#include "OAISavingsPlanProductType.h"
#include "OAISavingsPlanRateServiceCode.h"
#include "OAISavingsPlanRateUnit.h"
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISavingsPlanOfferingRate_savingsPlanOffering;

class OAISavingsPlanOfferingRate : public OAIObject {
public:
    OAISavingsPlanOfferingRate();
    OAISavingsPlanOfferingRate(QString json);
    ~OAISavingsPlanOfferingRate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISavingsPlanOfferingRate_savingsPlanOffering getSavingsPlanOffering() const;
    void setSavingsPlanOffering(const OAISavingsPlanOfferingRate_savingsPlanOffering &savings_plan_offering);
    bool is_savings_plan_offering_Set() const;
    bool is_savings_plan_offering_Valid() const;

    QString getRate() const;
    void setRate(const QString &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    OAISavingsPlanRateUnit getUnit() const;
    void setUnit(const OAISavingsPlanRateUnit &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    OAISavingsPlanProductType getProductType() const;
    void setProductType(const OAISavingsPlanProductType &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    OAISavingsPlanRateServiceCode getServiceCode() const;
    void setServiceCode(const OAISavingsPlanRateServiceCode &service_code);
    bool is_service_code_Set() const;
    bool is_service_code_Valid() const;

    QString getUsageType() const;
    void setUsageType(const QString &usage_type);
    bool is_usage_type_Set() const;
    bool is_usage_type_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    QJsonValue getProperties() const;
    void setProperties(const QJsonValue &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISavingsPlanOfferingRate_savingsPlanOffering m_savings_plan_offering;
    bool m_savings_plan_offering_isSet;
    bool m_savings_plan_offering_isValid;

    QString m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    OAISavingsPlanRateUnit m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    OAISavingsPlanProductType m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    OAISavingsPlanRateServiceCode m_service_code;
    bool m_service_code_isSet;
    bool m_service_code_isValid;

    QString m_usage_type;
    bool m_usage_type_isSet;
    bool m_usage_type_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    QJsonValue m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavingsPlanOfferingRate)

#endif // OAISavingsPlanOfferingRate_H
