/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISavingsPlanRateFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISavingsPlanRateFilter::OAISavingsPlanRateFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISavingsPlanRateFilter::OAISavingsPlanRateFilter() {
    this->initializeModel();
}

OAISavingsPlanRateFilter::~OAISavingsPlanRateFilter() {}

void OAISavingsPlanRateFilter::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAISavingsPlanRateFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISavingsPlanRateFilter::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAISavingsPlanRateFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISavingsPlanRateFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_values.isSet()) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

OAISavingsPlanRateFilterName OAISavingsPlanRateFilter::getName() const {
    return m_name;
}
void OAISavingsPlanRateFilter::setName(const OAISavingsPlanRateFilterName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISavingsPlanRateFilter::is_name_Set() const{
    return m_name_isSet;
}

bool OAISavingsPlanRateFilter::is_name_Valid() const{
    return m_name_isValid;
}

QList OAISavingsPlanRateFilter::getValues() const {
    return m_values;
}
void OAISavingsPlanRateFilter::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAISavingsPlanRateFilter::is_values_Set() const{
    return m_values_isSet;
}

bool OAISavingsPlanRateFilter::is_values_Valid() const{
    return m_values_isValid;
}

bool OAISavingsPlanRateFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISavingsPlanRateFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
