/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISavingsPlanRateFilterAttribute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISavingsPlanRateFilterAttribute::OAISavingsPlanRateFilterAttribute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISavingsPlanRateFilterAttribute::OAISavingsPlanRateFilterAttribute() {
    this->initializeModel();
}

OAISavingsPlanRateFilterAttribute::~OAISavingsPlanRateFilterAttribute() {}

void OAISavingsPlanRateFilterAttribute::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISavingsPlanRateFilterAttribute::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISavingsPlanRateFilterAttribute::fromJson(QString jsonString) {
    
    if ( jsonString.compare("region", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::REGION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("instanceFamily", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::INSTANCEFAMILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("instanceType", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::INSTANCETYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("productDescription", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::PRODUCTDESCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tenancy", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::TENANCY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("productId", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateFilterAttribute::PRODUCTID;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISavingsPlanRateFilterAttribute::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISavingsPlanRateFilterAttribute::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISavingsPlanRateFilterAttribute::REGION:
            val = "region";
            break;
        case eOAISavingsPlanRateFilterAttribute::INSTANCEFAMILY:
            val = "instanceFamily";
            break;
        case eOAISavingsPlanRateFilterAttribute::INSTANCETYPE:
            val = "instanceType";
            break;
        case eOAISavingsPlanRateFilterAttribute::PRODUCTDESCRIPTION:
            val = "productDescription";
            break;
        case eOAISavingsPlanRateFilterAttribute::TENANCY:
            val = "tenancy";
            break;
        case eOAISavingsPlanRateFilterAttribute::PRODUCTID:
            val = "productId";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISavingsPlanRateFilterAttribute::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISavingsPlanRateFilterAttribute::eOAISavingsPlanRateFilterAttribute OAISavingsPlanRateFilterAttribute::getValue() const {
    return m_value;
}

void OAISavingsPlanRateFilterAttribute::setValue(const OAISavingsPlanRateFilterAttribute::eOAISavingsPlanRateFilterAttribute& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISavingsPlanRateFilterAttribute::isSet() const {
    
    return m_value_isSet;
}

bool OAISavingsPlanRateFilterAttribute::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
