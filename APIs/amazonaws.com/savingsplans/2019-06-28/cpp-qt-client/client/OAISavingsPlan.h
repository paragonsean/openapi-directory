/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavingsPlan.h
 *
 * Information about a Savings Plan.
 */

#ifndef OAISavingsPlan_H
#define OAISavingsPlan_H

#include <QJsonObject>

#include "OAICurrencyCode.h"
#include "OAISavingsPlanPaymentOption.h"
#include "OAISavingsPlanState.h"
#include "OAISavingsPlanType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISavingsPlan : public OAIObject {
public:
    OAISavingsPlan();
    OAISavingsPlan(QString json);
    ~OAISavingsPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOfferingId() const;
    void setOfferingId(const QString &offering_id);
    bool is_offering_id_Set() const;
    bool is_offering_id_Valid() const;

    QString getSavingsPlanId() const;
    void setSavingsPlanId(const QString &savings_plan_id);
    bool is_savings_plan_id_Set() const;
    bool is_savings_plan_id_Valid() const;

    QString getSavingsPlanArn() const;
    void setSavingsPlanArn(const QString &savings_plan_arn);
    bool is_savings_plan_arn_Set() const;
    bool is_savings_plan_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    OAISavingsPlanState getState() const;
    void setState(const OAISavingsPlanState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getEc2InstanceFamily() const;
    void setEc2InstanceFamily(const QString &ec2_instance_family);
    bool is_ec2_instance_family_Set() const;
    bool is_ec2_instance_family_Valid() const;

    OAISavingsPlanType getSavingsPlanType() const;
    void setSavingsPlanType(const OAISavingsPlanType &savings_plan_type);
    bool is_savings_plan_type_Set() const;
    bool is_savings_plan_type_Valid() const;

    OAISavingsPlanPaymentOption getPaymentOption() const;
    void setPaymentOption(const OAISavingsPlanPaymentOption &payment_option);
    bool is_payment_option_Set() const;
    bool is_payment_option_Valid() const;

    QList getProductTypes() const;
    void setProductTypes(const QList &product_types);
    bool is_product_types_Set() const;
    bool is_product_types_Valid() const;

    OAICurrencyCode getCurrency() const;
    void setCurrency(const OAICurrencyCode &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getCommitment() const;
    void setCommitment(const QString &commitment);
    bool is_commitment_Set() const;
    bool is_commitment_Valid() const;

    QString getUpfrontPaymentAmount() const;
    void setUpfrontPaymentAmount(const QString &upfront_payment_amount);
    bool is_upfront_payment_amount_Set() const;
    bool is_upfront_payment_amount_Valid() const;

    QString getRecurringPaymentAmount() const;
    void setRecurringPaymentAmount(const QString &recurring_payment_amount);
    bool is_recurring_payment_amount_Set() const;
    bool is_recurring_payment_amount_Valid() const;

    qint32 getTermDurationInSeconds() const;
    void setTermDurationInSeconds(const qint32 &term_duration_in_seconds);
    bool is_term_duration_in_seconds_Set() const;
    bool is_term_duration_in_seconds_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_offering_id;
    bool m_offering_id_isSet;
    bool m_offering_id_isValid;

    QString m_savings_plan_id;
    bool m_savings_plan_id_isSet;
    bool m_savings_plan_id_isValid;

    QString m_savings_plan_arn;
    bool m_savings_plan_arn_isSet;
    bool m_savings_plan_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    OAISavingsPlanState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_ec2_instance_family;
    bool m_ec2_instance_family_isSet;
    bool m_ec2_instance_family_isValid;

    OAISavingsPlanType m_savings_plan_type;
    bool m_savings_plan_type_isSet;
    bool m_savings_plan_type_isValid;

    OAISavingsPlanPaymentOption m_payment_option;
    bool m_payment_option_isSet;
    bool m_payment_option_isValid;

    QList m_product_types;
    bool m_product_types_isSet;
    bool m_product_types_isValid;

    OAICurrencyCode m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_commitment;
    bool m_commitment_isSet;
    bool m_commitment_isValid;

    QString m_upfront_payment_amount;
    bool m_upfront_payment_amount_isSet;
    bool m_upfront_payment_amount_isValid;

    QString m_recurring_payment_amount;
    bool m_recurring_payment_amount_isSet;
    bool m_recurring_payment_amount_isValid;

    qint32 m_term_duration_in_seconds;
    bool m_term_duration_in_seconds_isSet;
    bool m_term_duration_in_seconds_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavingsPlan)

#endif // OAISavingsPlan_H
