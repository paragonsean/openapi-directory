/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeSavingsPlansOfferingsRequest.h
 *
 * 
 */

#ifndef OAIDescribeSavingsPlansOfferingsRequest_H
#define OAIDescribeSavingsPlansOfferingsRequest_H

#include <QJsonObject>

#include "OAISavingsPlanProductType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeSavingsPlansOfferingsRequest : public OAIObject {
public:
    OAIDescribeSavingsPlansOfferingsRequest();
    OAIDescribeSavingsPlansOfferingsRequest(QString json);
    ~OAIDescribeSavingsPlansOfferingsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getOfferingIds() const;
    void setOfferingIds(const QList &offering_ids);
    bool is_offering_ids_Set() const;
    bool is_offering_ids_Valid() const;

    QList getPaymentOptions() const;
    void setPaymentOptions(const QList &payment_options);
    bool is_payment_options_Set() const;
    bool is_payment_options_Valid() const;

    OAISavingsPlanProductType getProductType() const;
    void setProductType(const OAISavingsPlanProductType &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    QList getPlanTypes() const;
    void setPlanTypes(const QList &plan_types);
    bool is_plan_types_Set() const;
    bool is_plan_types_Valid() const;

    QList getDurations() const;
    void setDurations(const QList &durations);
    bool is_durations_Set() const;
    bool is_durations_Valid() const;

    QList getCurrencies() const;
    void setCurrencies(const QList &currencies);
    bool is_currencies_Set() const;
    bool is_currencies_Valid() const;

    QList getDescriptions() const;
    void setDescriptions(const QList &descriptions);
    bool is_descriptions_Set() const;
    bool is_descriptions_Valid() const;

    QList getServiceCodes() const;
    void setServiceCodes(const QList &service_codes);
    bool is_service_codes_Set() const;
    bool is_service_codes_Valid() const;

    QList getUsageTypes() const;
    void setUsageTypes(const QList &usage_types);
    bool is_usage_types_Set() const;
    bool is_usage_types_Valid() const;

    QList getOperations() const;
    void setOperations(const QList &operations);
    bool is_operations_Set() const;
    bool is_operations_Valid() const;

    QList getFilters() const;
    void setFilters(const QList &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_offering_ids;
    bool m_offering_ids_isSet;
    bool m_offering_ids_isValid;

    QList m_payment_options;
    bool m_payment_options_isSet;
    bool m_payment_options_isValid;

    OAISavingsPlanProductType m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    QList m_plan_types;
    bool m_plan_types_isSet;
    bool m_plan_types_isValid;

    QList m_durations;
    bool m_durations_isSet;
    bool m_durations_isValid;

    QList m_currencies;
    bool m_currencies_isSet;
    bool m_currencies_isValid;

    QList m_descriptions;
    bool m_descriptions_isSet;
    bool m_descriptions_isValid;

    QList m_service_codes;
    bool m_service_codes_isSet;
    bool m_service_codes_isValid;

    QList m_usage_types;
    bool m_usage_types_isSet;
    bool m_usage_types_isValid;

    QList m_operations;
    bool m_operations_isSet;
    bool m_operations_isValid;

    QList m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeSavingsPlansOfferingsRequest)

#endif // OAIDescribeSavingsPlansOfferingsRequest_H
