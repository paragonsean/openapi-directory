/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISavingsPlanRateServiceCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISavingsPlanRateServiceCode::OAISavingsPlanRateServiceCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISavingsPlanRateServiceCode::OAISavingsPlanRateServiceCode() {
    this->initializeModel();
}

OAISavingsPlanRateServiceCode::~OAISavingsPlanRateServiceCode() {}

void OAISavingsPlanRateServiceCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISavingsPlanRateServiceCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISavingsPlanRateServiceCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AmazonEC2", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateServiceCode::AMAZONEC2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AmazonECS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateServiceCode::AMAZONECS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AmazonEKS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateServiceCode::AMAZONEKS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AWSLambda", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateServiceCode::AWSLAMBDA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AmazonSageMaker", Qt::CaseInsensitive) == 0) {
        m_value = eOAISavingsPlanRateServiceCode::AMAZONSAGEMAKER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISavingsPlanRateServiceCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISavingsPlanRateServiceCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISavingsPlanRateServiceCode::AMAZONEC2:
            val = "AmazonEC2";
            break;
        case eOAISavingsPlanRateServiceCode::AMAZONECS:
            val = "AmazonECS";
            break;
        case eOAISavingsPlanRateServiceCode::AMAZONEKS:
            val = "AmazonEKS";
            break;
        case eOAISavingsPlanRateServiceCode::AWSLAMBDA:
            val = "AWSLambda";
            break;
        case eOAISavingsPlanRateServiceCode::AMAZONSAGEMAKER:
            val = "AmazonSageMaker";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISavingsPlanRateServiceCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISavingsPlanRateServiceCode::eOAISavingsPlanRateServiceCode OAISavingsPlanRateServiceCode::getValue() const {
    return m_value;
}

void OAISavingsPlanRateServiceCode::setValue(const OAISavingsPlanRateServiceCode::eOAISavingsPlanRateServiceCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISavingsPlanRateServiceCode::isSet() const {
    
    return m_value_isSet;
}

bool OAISavingsPlanRateServiceCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
