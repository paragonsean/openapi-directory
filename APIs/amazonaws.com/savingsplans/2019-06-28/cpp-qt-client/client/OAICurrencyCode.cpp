/**
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrencyCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrencyCode::OAICurrencyCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrencyCode::OAICurrencyCode() {
    this->initializeModel();
}

OAICurrencyCode::~OAICurrencyCode() {}

void OAICurrencyCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICurrencyCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICurrencyCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CNY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyCode::CNY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyCode::USD;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICurrencyCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICurrencyCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICurrencyCode::CNY:
            val = "CNY";
            break;
        case eOAICurrencyCode::USD:
            val = "USD";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICurrencyCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICurrencyCode::eOAICurrencyCode OAICurrencyCode::getValue() const {
    return m_value;
}

void OAICurrencyCode::setValue(const OAICurrencyCode::eOAICurrencyCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICurrencyCode::isSet() const {
    
    return m_value_isSet;
}

bool OAICurrencyCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
