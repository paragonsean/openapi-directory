/*
 * AWS Savings Plans
 * Savings Plans are a pricing model that offer significant savings on AWS usage (for example, on Amazon EC2 instances). You commit to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years, and receive a lower price for that usage. For more information, see the <a href=\"https://docs.aws.amazon.com/savingsplans/latest/userguide/\">AWS Savings Plans User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets SavingsPlansFilterName
 */
@JsonAdapter(SavingsPlansFilterName.Adapter.class)
public enum SavingsPlansFilterName {
  
  REGION("region"),
  
  EC2_INSTANCE_FAMILY("ec2-instance-family"),
  
  COMMITMENT("commitment"),
  
  UPFRONT("upfront"),
  
  TERM("term"),
  
  SAVINGS_PLAN_TYPE("savings-plan-type"),
  
  PAYMENT_OPTION("payment-option"),
  
  START("start"),
  
  END("end");

  private String value;

  SavingsPlansFilterName(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SavingsPlansFilterName fromValue(String value) {
    for (SavingsPlansFilterName b : SavingsPlansFilterName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SavingsPlansFilterName> {
    @Override
    public void write(final JsonWriter jsonWriter, final SavingsPlansFilterName enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SavingsPlansFilterName read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SavingsPlansFilterName.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SavingsPlansFilterName.fromValue(value);
  }
}

