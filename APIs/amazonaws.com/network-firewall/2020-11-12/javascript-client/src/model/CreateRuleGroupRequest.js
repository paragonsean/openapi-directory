/**
 * AWS Network Firewall
 * <p>This is the API Reference for Network Firewall. This guide is for developers who need detailed information about the Network Firewall API actions, data types, and errors. </p> <ul> <li> <p>The REST API requires you to handle connection details, such as calculating signatures, handling request retries, and error handling. For general information about using the Amazon Web Services REST APIs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-apis.html\">Amazon Web Services APIs</a>. </p> <p>To access Network Firewall using the REST API endpoint: <code>https://network-firewall.&lt;region&gt;.amazonaws.com </code> </p> </li> <li> <p>Alternatively, you can use one of the Amazon Web Services SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> </li> <li> <p>For descriptions of Network Firewall features, including and step-by-step instructions on how to use them through the Network Firewall console, see the <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/\">Network Firewall Developer Guide</a>.</p> </li> </ul> <p>Network Firewall is a stateful, managed, network firewall and intrusion detection and prevention service for Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or Direct Connect. Network Firewall uses rules that are compatible with Suricata, a free, open source network analysis and threat detection engine. Network Firewall supports Suricata version 6.0.9. For information about Suricata, see the <a href=\"https://suricata.io/\">Suricata website</a>.</p> <p>You can use Network Firewall to monitor and protect your VPC traffic in a number of ways. The following are just a few examples: </p> <ul> <li> <p>Allow domains or IP addresses for known Amazon Web Services service endpoints, such as Amazon S3, and block all other forms of traffic.</p> </li> <li> <p>Use custom lists of known bad domains to limit the types of domain names that your applications can access.</p> </li> <li> <p>Perform deep packet inspection on traffic entering or leaving your VPC.</p> </li> <li> <p>Use stateful protocol detection to filter protocols like HTTPS, regardless of the port used.</p> </li> </ul> <p>To enable Network Firewall for your VPCs, you perform steps in both Amazon VPC and in Network Firewall. For information about using Amazon VPC, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/\">Amazon VPC User Guide</a>.</p> <p>To start using Network Firewall, do the following: </p> <ol> <li> <p>(Optional) If you don't already have a VPC that you want to protect, create it in Amazon VPC. </p> </li> <li> <p>In Amazon VPC, in each Availability Zone where you want to have a firewall endpoint, create a subnet for the sole use of Network Firewall. </p> </li> <li> <p>In Network Firewall, create stateless and stateful rule groups, to define the components of the network traffic filtering behavior that you want your firewall to have. </p> </li> <li> <p>In Network Firewall, create a firewall policy that uses your rule groups and specifies additional default traffic filtering behavior. </p> </li> <li> <p>In Network Firewall, create a firewall and specify your new firewall policy and VPC subnets. Network Firewall creates a firewall endpoint in each subnet that you specify, with the behavior that's defined in the firewall policy.</p> </li> <li> <p>In Amazon VPC, use ingress routing enhancements to route traffic through the new firewall endpoints.</p> </li> </ol>
 *
 * The version of the OpenAPI document: 2020-11-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateRuleGroupRequestEncryptionConfiguration from './CreateRuleGroupRequestEncryptionConfiguration';
import CreateRuleGroupRequestRuleGroup from './CreateRuleGroupRequestRuleGroup';
import CreateRuleGroupRequestSourceMetadata from './CreateRuleGroupRequestSourceMetadata';
import RuleGroupType from './RuleGroupType';

/**
 * The CreateRuleGroupRequest model module.
 * @module model/CreateRuleGroupRequest
 * @version 2020-11-12
 */
class CreateRuleGroupRequest {
    /**
     * Constructs a new <code>CreateRuleGroupRequest</code>.
     * @alias module:model/CreateRuleGroupRequest
     * @param ruleGroupName {String} 
     * @param type {module:model/RuleGroupType} 
     * @param capacity {Number} 
     */
    constructor(ruleGroupName, type, capacity) { 
        
        CreateRuleGroupRequest.initialize(this, ruleGroupName, type, capacity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ruleGroupName, type, capacity) { 
        obj['RuleGroupName'] = ruleGroupName;
        obj['Type'] = type;
        obj['Capacity'] = capacity;
    }

    /**
     * Constructs a <code>CreateRuleGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRuleGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateRuleGroupRequest} The populated <code>CreateRuleGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRuleGroupRequest();

            if (data.hasOwnProperty('RuleGroupName')) {
                obj['RuleGroupName'] = ApiClient.convertToType(data['RuleGroupName'], 'String');
            }
            if (data.hasOwnProperty('RuleGroup')) {
                obj['RuleGroup'] = CreateRuleGroupRequestRuleGroup.constructFromObject(data['RuleGroup']);
            }
            if (data.hasOwnProperty('Rules')) {
                obj['Rules'] = ApiClient.convertToType(data['Rules'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], RuleGroupType);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Capacity')) {
                obj['Capacity'] = ApiClient.convertToType(data['Capacity'], 'Number');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('DryRun')) {
                obj['DryRun'] = ApiClient.convertToType(data['DryRun'], 'Boolean');
            }
            if (data.hasOwnProperty('EncryptionConfiguration')) {
                obj['EncryptionConfiguration'] = CreateRuleGroupRequestEncryptionConfiguration.constructFromObject(data['EncryptionConfiguration']);
            }
            if (data.hasOwnProperty('SourceMetadata')) {
                obj['SourceMetadata'] = CreateRuleGroupRequestSourceMetadata.constructFromObject(data['SourceMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRuleGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRuleGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRuleGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RuleGroupName`
        if (data['RuleGroupName']) { // data not null
          String.validateJSON(data['RuleGroupName']);
        }
        // validate the optional field `RuleGroup`
        if (data['RuleGroup']) { // data not null
          CreateRuleGroupRequestRuleGroup.validateJSON(data['RuleGroup']);
        }
        // validate the optional field `Rules`
        if (data['Rules']) { // data not null
          String.validateJSON(data['Rules']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          RuleGroupType.validateJSON(data['Type']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Capacity`
        if (data['Capacity']) { // data not null
          Number.validateJSON(data['Capacity']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `DryRun`
        if (data['DryRun']) { // data not null
          Boolean.validateJSON(data['DryRun']);
        }
        // validate the optional field `EncryptionConfiguration`
        if (data['EncryptionConfiguration']) { // data not null
          CreateRuleGroupRequestEncryptionConfiguration.validateJSON(data['EncryptionConfiguration']);
        }
        // validate the optional field `SourceMetadata`
        if (data['SourceMetadata']) { // data not null
          CreateRuleGroupRequestSourceMetadata.validateJSON(data['SourceMetadata']);
        }

        return true;
    }


}

CreateRuleGroupRequest.RequiredProperties = ["RuleGroupName", "Type", "Capacity"];

/**
 * @member {String} RuleGroupName
 */
CreateRuleGroupRequest.prototype['RuleGroupName'] = undefined;

/**
 * @member {module:model/CreateRuleGroupRequestRuleGroup} RuleGroup
 */
CreateRuleGroupRequest.prototype['RuleGroup'] = undefined;

/**
 * @member {String} Rules
 */
CreateRuleGroupRequest.prototype['Rules'] = undefined;

/**
 * @member {module:model/RuleGroupType} Type
 */
CreateRuleGroupRequest.prototype['Type'] = undefined;

/**
 * @member {String} Description
 */
CreateRuleGroupRequest.prototype['Description'] = undefined;

/**
 * @member {Number} Capacity
 */
CreateRuleGroupRequest.prototype['Capacity'] = undefined;

/**
 * @member {Array} Tags
 */
CreateRuleGroupRequest.prototype['Tags'] = undefined;

/**
 * @member {Boolean} DryRun
 */
CreateRuleGroupRequest.prototype['DryRun'] = undefined;

/**
 * @member {module:model/CreateRuleGroupRequestEncryptionConfiguration} EncryptionConfiguration
 */
CreateRuleGroupRequest.prototype['EncryptionConfiguration'] = undefined;

/**
 * @member {module:model/CreateRuleGroupRequestSourceMetadata} SourceMetadata
 */
CreateRuleGroupRequest.prototype['SourceMetadata'] = undefined;






export default CreateRuleGroupRequest;

