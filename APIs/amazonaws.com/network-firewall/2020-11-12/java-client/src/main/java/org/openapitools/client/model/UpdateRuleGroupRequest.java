/*
 * AWS Network Firewall
 * <p>This is the API Reference for Network Firewall. This guide is for developers who need detailed information about the Network Firewall API actions, data types, and errors. </p> <ul> <li> <p>The REST API requires you to handle connection details, such as calculating signatures, handling request retries, and error handling. For general information about using the Amazon Web Services REST APIs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-apis.html\">Amazon Web Services APIs</a>. </p> <p>To access Network Firewall using the REST API endpoint: <code>https://network-firewall.&lt;region&gt;.amazonaws.com </code> </p> </li> <li> <p>Alternatively, you can use one of the Amazon Web Services SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> </li> <li> <p>For descriptions of Network Firewall features, including and step-by-step instructions on how to use them through the Network Firewall console, see the <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/\">Network Firewall Developer Guide</a>.</p> </li> </ul> <p>Network Firewall is a stateful, managed, network firewall and intrusion detection and prevention service for Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or Direct Connect. Network Firewall uses rules that are compatible with Suricata, a free, open source network analysis and threat detection engine. Network Firewall supports Suricata version 6.0.9. For information about Suricata, see the <a href=\"https://suricata.io/\">Suricata website</a>.</p> <p>You can use Network Firewall to monitor and protect your VPC traffic in a number of ways. The following are just a few examples: </p> <ul> <li> <p>Allow domains or IP addresses for known Amazon Web Services service endpoints, such as Amazon S3, and block all other forms of traffic.</p> </li> <li> <p>Use custom lists of known bad domains to limit the types of domain names that your applications can access.</p> </li> <li> <p>Perform deep packet inspection on traffic entering or leaving your VPC.</p> </li> <li> <p>Use stateful protocol detection to filter protocols like HTTPS, regardless of the port used.</p> </li> </ul> <p>To enable Network Firewall for your VPCs, you perform steps in both Amazon VPC and in Network Firewall. For information about using Amazon VPC, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/\">Amazon VPC User Guide</a>.</p> <p>To start using Network Firewall, do the following: </p> <ol> <li> <p>(Optional) If you don't already have a VPC that you want to protect, create it in Amazon VPC. </p> </li> <li> <p>In Amazon VPC, in each Availability Zone where you want to have a firewall endpoint, create a subnet for the sole use of Network Firewall. </p> </li> <li> <p>In Network Firewall, create stateless and stateful rule groups, to define the components of the network traffic filtering behavior that you want your firewall to have. </p> </li> <li> <p>In Network Firewall, create a firewall policy that uses your rule groups and specifies additional default traffic filtering behavior. </p> </li> <li> <p>In Network Firewall, create a firewall and specify your new firewall policy and VPC subnets. Network Firewall creates a firewall endpoint in each subnet that you specify, with the behavior that's defined in the firewall policy.</p> </li> <li> <p>In Amazon VPC, use ingress routing enhancements to route traffic through the new firewall endpoints.</p> </li> </ol>
 *
 * The version of the OpenAPI document: 2020-11-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateRuleGroupRequestEncryptionConfiguration;
import org.openapitools.client.model.CreateRuleGroupRequestRuleGroup;
import org.openapitools.client.model.CreateRuleGroupRequestSourceMetadata;
import org.openapitools.client.model.RuleGroupType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateRuleGroupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:09.609575-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateRuleGroupRequest {
  public static final String SERIALIZED_NAME_UPDATE_TOKEN = "UpdateToken";
  @SerializedName(SERIALIZED_NAME_UPDATE_TOKEN)
  private String updateToken;

  public static final String SERIALIZED_NAME_RULE_GROUP_ARN = "RuleGroupArn";
  @SerializedName(SERIALIZED_NAME_RULE_GROUP_ARN)
  private String ruleGroupArn;

  public static final String SERIALIZED_NAME_RULE_GROUP_NAME = "RuleGroupName";
  @SerializedName(SERIALIZED_NAME_RULE_GROUP_NAME)
  private String ruleGroupName;

  public static final String SERIALIZED_NAME_RULE_GROUP = "RuleGroup";
  @SerializedName(SERIALIZED_NAME_RULE_GROUP)
  private CreateRuleGroupRequestRuleGroup ruleGroup;

  public static final String SERIALIZED_NAME_RULES = "Rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private String rules;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private RuleGroupType type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIGURATION = "EncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIGURATION)
  private CreateRuleGroupRequestEncryptionConfiguration encryptionConfiguration;

  public static final String SERIALIZED_NAME_SOURCE_METADATA = "SourceMetadata";
  @SerializedName(SERIALIZED_NAME_SOURCE_METADATA)
  private CreateRuleGroupRequestSourceMetadata sourceMetadata;

  public UpdateRuleGroupRequest() {
  }

  public UpdateRuleGroupRequest updateToken(String updateToken) {
    this.updateToken = updateToken;
    return this;
  }

  /**
   * Get updateToken
   * @return updateToken
   */
  @javax.annotation.Nonnull
  public String getUpdateToken() {
    return updateToken;
  }

  public void setUpdateToken(String updateToken) {
    this.updateToken = updateToken;
  }


  public UpdateRuleGroupRequest ruleGroupArn(String ruleGroupArn) {
    this.ruleGroupArn = ruleGroupArn;
    return this;
  }

  /**
   * Get ruleGroupArn
   * @return ruleGroupArn
   */
  @javax.annotation.Nullable
  public String getRuleGroupArn() {
    return ruleGroupArn;
  }

  public void setRuleGroupArn(String ruleGroupArn) {
    this.ruleGroupArn = ruleGroupArn;
  }


  public UpdateRuleGroupRequest ruleGroupName(String ruleGroupName) {
    this.ruleGroupName = ruleGroupName;
    return this;
  }

  /**
   * Get ruleGroupName
   * @return ruleGroupName
   */
  @javax.annotation.Nullable
  public String getRuleGroupName() {
    return ruleGroupName;
  }

  public void setRuleGroupName(String ruleGroupName) {
    this.ruleGroupName = ruleGroupName;
  }


  public UpdateRuleGroupRequest ruleGroup(CreateRuleGroupRequestRuleGroup ruleGroup) {
    this.ruleGroup = ruleGroup;
    return this;
  }

  /**
   * Get ruleGroup
   * @return ruleGroup
   */
  @javax.annotation.Nullable
  public CreateRuleGroupRequestRuleGroup getRuleGroup() {
    return ruleGroup;
  }

  public void setRuleGroup(CreateRuleGroupRequestRuleGroup ruleGroup) {
    this.ruleGroup = ruleGroup;
  }


  public UpdateRuleGroupRequest rules(String rules) {
    this.rules = rules;
    return this;
  }

  /**
   * Get rules
   * @return rules
   */
  @javax.annotation.Nullable
  public String getRules() {
    return rules;
  }

  public void setRules(String rules) {
    this.rules = rules;
  }


  public UpdateRuleGroupRequest type(RuleGroupType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public RuleGroupType getType() {
    return type;
  }

  public void setType(RuleGroupType type) {
    this.type = type;
  }


  public UpdateRuleGroupRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateRuleGroupRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

  /**
   * Get dryRun
   * @return dryRun
   */
  @javax.annotation.Nullable
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public UpdateRuleGroupRequest encryptionConfiguration(CreateRuleGroupRequestEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
    return this;
  }

  /**
   * Get encryptionConfiguration
   * @return encryptionConfiguration
   */
  @javax.annotation.Nullable
  public CreateRuleGroupRequestEncryptionConfiguration getEncryptionConfiguration() {
    return encryptionConfiguration;
  }

  public void setEncryptionConfiguration(CreateRuleGroupRequestEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
  }


  public UpdateRuleGroupRequest sourceMetadata(CreateRuleGroupRequestSourceMetadata sourceMetadata) {
    this.sourceMetadata = sourceMetadata;
    return this;
  }

  /**
   * Get sourceMetadata
   * @return sourceMetadata
   */
  @javax.annotation.Nullable
  public CreateRuleGroupRequestSourceMetadata getSourceMetadata() {
    return sourceMetadata;
  }

  public void setSourceMetadata(CreateRuleGroupRequestSourceMetadata sourceMetadata) {
    this.sourceMetadata = sourceMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateRuleGroupRequest updateRuleGroupRequest = (UpdateRuleGroupRequest) o;
    return Objects.equals(this.updateToken, updateRuleGroupRequest.updateToken) &&
        Objects.equals(this.ruleGroupArn, updateRuleGroupRequest.ruleGroupArn) &&
        Objects.equals(this.ruleGroupName, updateRuleGroupRequest.ruleGroupName) &&
        Objects.equals(this.ruleGroup, updateRuleGroupRequest.ruleGroup) &&
        Objects.equals(this.rules, updateRuleGroupRequest.rules) &&
        Objects.equals(this.type, updateRuleGroupRequest.type) &&
        Objects.equals(this.description, updateRuleGroupRequest.description) &&
        Objects.equals(this.dryRun, updateRuleGroupRequest.dryRun) &&
        Objects.equals(this.encryptionConfiguration, updateRuleGroupRequest.encryptionConfiguration) &&
        Objects.equals(this.sourceMetadata, updateRuleGroupRequest.sourceMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateToken, ruleGroupArn, ruleGroupName, ruleGroup, rules, type, description, dryRun, encryptionConfiguration, sourceMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateRuleGroupRequest {\n");
    sb.append("    updateToken: ").append(toIndentedString(updateToken)).append("\n");
    sb.append("    ruleGroupArn: ").append(toIndentedString(ruleGroupArn)).append("\n");
    sb.append("    ruleGroupName: ").append(toIndentedString(ruleGroupName)).append("\n");
    sb.append("    ruleGroup: ").append(toIndentedString(ruleGroup)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    encryptionConfiguration: ").append(toIndentedString(encryptionConfiguration)).append("\n");
    sb.append("    sourceMetadata: ").append(toIndentedString(sourceMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("UpdateToken");
    openapiFields.add("RuleGroupArn");
    openapiFields.add("RuleGroupName");
    openapiFields.add("RuleGroup");
    openapiFields.add("Rules");
    openapiFields.add("Type");
    openapiFields.add("Description");
    openapiFields.add("DryRun");
    openapiFields.add("EncryptionConfiguration");
    openapiFields.add("SourceMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("UpdateToken");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateRuleGroupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateRuleGroupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateRuleGroupRequest is not found in the empty JSON string", UpdateRuleGroupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateRuleGroupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateRuleGroupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateRuleGroupRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `UpdateToken`
      String.validateJsonElement(jsonObj.get("UpdateToken"));
      // validate the optional field `RuleGroupArn`
      if (jsonObj.get("RuleGroupArn") != null && !jsonObj.get("RuleGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RuleGroupArn"));
      }
      // validate the optional field `RuleGroupName`
      if (jsonObj.get("RuleGroupName") != null && !jsonObj.get("RuleGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RuleGroupName"));
      }
      // validate the optional field `RuleGroup`
      if (jsonObj.get("RuleGroup") != null && !jsonObj.get("RuleGroup").isJsonNull()) {
        CreateRuleGroupRequestRuleGroup.validateJsonElement(jsonObj.get("RuleGroup"));
      }
      // validate the optional field `Rules`
      if (jsonObj.get("Rules") != null && !jsonObj.get("Rules").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Rules"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        RuleGroupType.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `DryRun`
      if (jsonObj.get("DryRun") != null && !jsonObj.get("DryRun").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DryRun"));
      }
      // validate the optional field `EncryptionConfiguration`
      if (jsonObj.get("EncryptionConfiguration") != null && !jsonObj.get("EncryptionConfiguration").isJsonNull()) {
        CreateRuleGroupRequestEncryptionConfiguration.validateJsonElement(jsonObj.get("EncryptionConfiguration"));
      }
      // validate the optional field `SourceMetadata`
      if (jsonObj.get("SourceMetadata") != null && !jsonObj.get("SourceMetadata").isJsonNull()) {
        CreateRuleGroupRequestSourceMetadata.validateJsonElement(jsonObj.get("SourceMetadata"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateRuleGroupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateRuleGroupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateRuleGroupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateRuleGroupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateRuleGroupRequest>() {
           @Override
           public void write(JsonWriter out, UpdateRuleGroupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateRuleGroupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateRuleGroupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateRuleGroupRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateRuleGroupRequest
   */
  public static UpdateRuleGroupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateRuleGroupRequest.class);
  }

  /**
   * Convert an instance of UpdateRuleGroupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

