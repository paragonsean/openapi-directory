/*
 * AWS Network Firewall
 * <p>This is the API Reference for Network Firewall. This guide is for developers who need detailed information about the Network Firewall API actions, data types, and errors. </p> <ul> <li> <p>The REST API requires you to handle connection details, such as calculating signatures, handling request retries, and error handling. For general information about using the Amazon Web Services REST APIs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-apis.html\">Amazon Web Services APIs</a>. </p> <p>To access Network Firewall using the REST API endpoint: <code>https://network-firewall.&lt;region&gt;.amazonaws.com </code> </p> </li> <li> <p>Alternatively, you can use one of the Amazon Web Services SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> </li> <li> <p>For descriptions of Network Firewall features, including and step-by-step instructions on how to use them through the Network Firewall console, see the <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/\">Network Firewall Developer Guide</a>.</p> </li> </ul> <p>Network Firewall is a stateful, managed, network firewall and intrusion detection and prevention service for Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or Direct Connect. Network Firewall uses rules that are compatible with Suricata, a free, open source network analysis and threat detection engine. Network Firewall supports Suricata version 6.0.9. For information about Suricata, see the <a href=\"https://suricata.io/\">Suricata website</a>.</p> <p>You can use Network Firewall to monitor and protect your VPC traffic in a number of ways. The following are just a few examples: </p> <ul> <li> <p>Allow domains or IP addresses for known Amazon Web Services service endpoints, such as Amazon S3, and block all other forms of traffic.</p> </li> <li> <p>Use custom lists of known bad domains to limit the types of domain names that your applications can access.</p> </li> <li> <p>Perform deep packet inspection on traffic entering or leaving your VPC.</p> </li> <li> <p>Use stateful protocol detection to filter protocols like HTTPS, regardless of the port used.</p> </li> </ul> <p>To enable Network Firewall for your VPCs, you perform steps in both Amazon VPC and in Network Firewall. For information about using Amazon VPC, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/\">Amazon VPC User Guide</a>.</p> <p>To start using Network Firewall, do the following: </p> <ol> <li> <p>(Optional) If you don't already have a VPC that you want to protect, create it in Amazon VPC. </p> </li> <li> <p>In Amazon VPC, in each Availability Zone where you want to have a firewall endpoint, create a subnet for the sole use of Network Firewall. </p> </li> <li> <p>In Network Firewall, create stateless and stateful rule groups, to define the components of the network traffic filtering behavior that you want your firewall to have. </p> </li> <li> <p>In Network Firewall, create a firewall policy that uses your rule groups and specifies additional default traffic filtering behavior. </p> </li> <li> <p>In Network Firewall, create a firewall and specify your new firewall policy and VPC subnets. Network Firewall creates a firewall endpoint in each subnet that you specify, with the behavior that's defined in the firewall policy.</p> </li> <li> <p>In Amazon VPC, use ingress routing enhancements to route traffic through the new firewall endpoints.</p> </li> </ol>
 *
 * The version of the OpenAPI document: 2020-11-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FirewallEncryptionConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateFirewallResponseFirewall
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:09.609575-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateFirewallResponseFirewall {
  public static final String SERIALIZED_NAME_FIREWALL_NAME = "FirewallName";
  @SerializedName(SERIALIZED_NAME_FIREWALL_NAME)
  private String firewallName;

  public static final String SERIALIZED_NAME_FIREWALL_ARN = "FirewallArn";
  @SerializedName(SERIALIZED_NAME_FIREWALL_ARN)
  private String firewallArn;

  public static final String SERIALIZED_NAME_FIREWALL_POLICY_ARN = "FirewallPolicyArn";
  @SerializedName(SERIALIZED_NAME_FIREWALL_POLICY_ARN)
  private String firewallPolicyArn;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_SUBNET_MAPPINGS = "SubnetMappings";
  @SerializedName(SERIALIZED_NAME_SUBNET_MAPPINGS)
  private List subnetMappings;

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "DeleteProtection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  private Boolean deleteProtection;

  public static final String SERIALIZED_NAME_SUBNET_CHANGE_PROTECTION = "SubnetChangeProtection";
  @SerializedName(SERIALIZED_NAME_SUBNET_CHANGE_PROTECTION)
  private Boolean subnetChangeProtection;

  public static final String SERIALIZED_NAME_FIREWALL_POLICY_CHANGE_PROTECTION = "FirewallPolicyChangeProtection";
  @SerializedName(SERIALIZED_NAME_FIREWALL_POLICY_CHANGE_PROTECTION)
  private Boolean firewallPolicyChangeProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FIREWALL_ID = "FirewallId";
  @SerializedName(SERIALIZED_NAME_FIREWALL_ID)
  private String firewallId;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIGURATION = "EncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIGURATION)
  private FirewallEncryptionConfiguration encryptionConfiguration;

  public CreateFirewallResponseFirewall() {
  }

  public CreateFirewallResponseFirewall firewallName(String firewallName) {
    this.firewallName = firewallName;
    return this;
  }

  /**
   * Get firewallName
   * @return firewallName
   */
  @javax.annotation.Nullable
  public String getFirewallName() {
    return firewallName;
  }

  public void setFirewallName(String firewallName) {
    this.firewallName = firewallName;
  }


  public CreateFirewallResponseFirewall firewallArn(String firewallArn) {
    this.firewallArn = firewallArn;
    return this;
  }

  /**
   * Get firewallArn
   * @return firewallArn
   */
  @javax.annotation.Nullable
  public String getFirewallArn() {
    return firewallArn;
  }

  public void setFirewallArn(String firewallArn) {
    this.firewallArn = firewallArn;
  }


  public CreateFirewallResponseFirewall firewallPolicyArn(String firewallPolicyArn) {
    this.firewallPolicyArn = firewallPolicyArn;
    return this;
  }

  /**
   * Get firewallPolicyArn
   * @return firewallPolicyArn
   */
  @javax.annotation.Nonnull
  public String getFirewallPolicyArn() {
    return firewallPolicyArn;
  }

  public void setFirewallPolicyArn(String firewallPolicyArn) {
    this.firewallPolicyArn = firewallPolicyArn;
  }


  public CreateFirewallResponseFirewall vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nonnull
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public CreateFirewallResponseFirewall subnetMappings(List subnetMappings) {
    this.subnetMappings = subnetMappings;
    return this;
  }

  /**
   * Get subnetMappings
   * @return subnetMappings
   */
  @javax.annotation.Nonnull
  public List getSubnetMappings() {
    return subnetMappings;
  }

  public void setSubnetMappings(List subnetMappings) {
    this.subnetMappings = subnetMappings;
  }


  public CreateFirewallResponseFirewall deleteProtection(Boolean deleteProtection) {
    this.deleteProtection = deleteProtection;
    return this;
  }

  /**
   * Get deleteProtection
   * @return deleteProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeleteProtection() {
    return deleteProtection;
  }

  public void setDeleteProtection(Boolean deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public CreateFirewallResponseFirewall subnetChangeProtection(Boolean subnetChangeProtection) {
    this.subnetChangeProtection = subnetChangeProtection;
    return this;
  }

  /**
   * Get subnetChangeProtection
   * @return subnetChangeProtection
   */
  @javax.annotation.Nullable
  public Boolean getSubnetChangeProtection() {
    return subnetChangeProtection;
  }

  public void setSubnetChangeProtection(Boolean subnetChangeProtection) {
    this.subnetChangeProtection = subnetChangeProtection;
  }


  public CreateFirewallResponseFirewall firewallPolicyChangeProtection(Boolean firewallPolicyChangeProtection) {
    this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
    return this;
  }

  /**
   * Get firewallPolicyChangeProtection
   * @return firewallPolicyChangeProtection
   */
  @javax.annotation.Nullable
  public Boolean getFirewallPolicyChangeProtection() {
    return firewallPolicyChangeProtection;
  }

  public void setFirewallPolicyChangeProtection(Boolean firewallPolicyChangeProtection) {
    this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
  }


  public CreateFirewallResponseFirewall description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateFirewallResponseFirewall firewallId(String firewallId) {
    this.firewallId = firewallId;
    return this;
  }

  /**
   * Get firewallId
   * @return firewallId
   */
  @javax.annotation.Nonnull
  public String getFirewallId() {
    return firewallId;
  }

  public void setFirewallId(String firewallId) {
    this.firewallId = firewallId;
  }


  public CreateFirewallResponseFirewall tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateFirewallResponseFirewall encryptionConfiguration(FirewallEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
    return this;
  }

  /**
   * Get encryptionConfiguration
   * @return encryptionConfiguration
   */
  @javax.annotation.Nullable
  public FirewallEncryptionConfiguration getEncryptionConfiguration() {
    return encryptionConfiguration;
  }

  public void setEncryptionConfiguration(FirewallEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFirewallResponseFirewall createFirewallResponseFirewall = (CreateFirewallResponseFirewall) o;
    return Objects.equals(this.firewallName, createFirewallResponseFirewall.firewallName) &&
        Objects.equals(this.firewallArn, createFirewallResponseFirewall.firewallArn) &&
        Objects.equals(this.firewallPolicyArn, createFirewallResponseFirewall.firewallPolicyArn) &&
        Objects.equals(this.vpcId, createFirewallResponseFirewall.vpcId) &&
        Objects.equals(this.subnetMappings, createFirewallResponseFirewall.subnetMappings) &&
        Objects.equals(this.deleteProtection, createFirewallResponseFirewall.deleteProtection) &&
        Objects.equals(this.subnetChangeProtection, createFirewallResponseFirewall.subnetChangeProtection) &&
        Objects.equals(this.firewallPolicyChangeProtection, createFirewallResponseFirewall.firewallPolicyChangeProtection) &&
        Objects.equals(this.description, createFirewallResponseFirewall.description) &&
        Objects.equals(this.firewallId, createFirewallResponseFirewall.firewallId) &&
        Objects.equals(this.tags, createFirewallResponseFirewall.tags) &&
        Objects.equals(this.encryptionConfiguration, createFirewallResponseFirewall.encryptionConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firewallName, firewallArn, firewallPolicyArn, vpcId, subnetMappings, deleteProtection, subnetChangeProtection, firewallPolicyChangeProtection, description, firewallId, tags, encryptionConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFirewallResponseFirewall {\n");
    sb.append("    firewallName: ").append(toIndentedString(firewallName)).append("\n");
    sb.append("    firewallArn: ").append(toIndentedString(firewallArn)).append("\n");
    sb.append("    firewallPolicyArn: ").append(toIndentedString(firewallPolicyArn)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    subnetMappings: ").append(toIndentedString(subnetMappings)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    subnetChangeProtection: ").append(toIndentedString(subnetChangeProtection)).append("\n");
    sb.append("    firewallPolicyChangeProtection: ").append(toIndentedString(firewallPolicyChangeProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    firewallId: ").append(toIndentedString(firewallId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    encryptionConfiguration: ").append(toIndentedString(encryptionConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FirewallName");
    openapiFields.add("FirewallArn");
    openapiFields.add("FirewallPolicyArn");
    openapiFields.add("VpcId");
    openapiFields.add("SubnetMappings");
    openapiFields.add("DeleteProtection");
    openapiFields.add("SubnetChangeProtection");
    openapiFields.add("FirewallPolicyChangeProtection");
    openapiFields.add("Description");
    openapiFields.add("FirewallId");
    openapiFields.add("Tags");
    openapiFields.add("EncryptionConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FirewallPolicyArn");
    openapiRequiredFields.add("VpcId");
    openapiRequiredFields.add("SubnetMappings");
    openapiRequiredFields.add("FirewallId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateFirewallResponseFirewall
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateFirewallResponseFirewall.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateFirewallResponseFirewall is not found in the empty JSON string", CreateFirewallResponseFirewall.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateFirewallResponseFirewall.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateFirewallResponseFirewall` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateFirewallResponseFirewall.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FirewallName`
      if (jsonObj.get("FirewallName") != null && !jsonObj.get("FirewallName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FirewallName"));
      }
      // validate the optional field `FirewallArn`
      if (jsonObj.get("FirewallArn") != null && !jsonObj.get("FirewallArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FirewallArn"));
      }
      // validate the required field `FirewallPolicyArn`
      String.validateJsonElement(jsonObj.get("FirewallPolicyArn"));
      // validate the required field `VpcId`
      String.validateJsonElement(jsonObj.get("VpcId"));
      // validate the required field `SubnetMappings`
      List.validateJsonElement(jsonObj.get("SubnetMappings"));
      // validate the optional field `DeleteProtection`
      if (jsonObj.get("DeleteProtection") != null && !jsonObj.get("DeleteProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeleteProtection"));
      }
      // validate the optional field `SubnetChangeProtection`
      if (jsonObj.get("SubnetChangeProtection") != null && !jsonObj.get("SubnetChangeProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SubnetChangeProtection"));
      }
      // validate the optional field `FirewallPolicyChangeProtection`
      if (jsonObj.get("FirewallPolicyChangeProtection") != null && !jsonObj.get("FirewallPolicyChangeProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("FirewallPolicyChangeProtection"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the required field `FirewallId`
      String.validateJsonElement(jsonObj.get("FirewallId"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `EncryptionConfiguration`
      if (jsonObj.get("EncryptionConfiguration") != null && !jsonObj.get("EncryptionConfiguration").isJsonNull()) {
        FirewallEncryptionConfiguration.validateJsonElement(jsonObj.get("EncryptionConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateFirewallResponseFirewall.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateFirewallResponseFirewall' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateFirewallResponseFirewall> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateFirewallResponseFirewall.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateFirewallResponseFirewall>() {
           @Override
           public void write(JsonWriter out, CreateFirewallResponseFirewall value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateFirewallResponseFirewall read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateFirewallResponseFirewall given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateFirewallResponseFirewall
   * @throws IOException if the JSON string is invalid with respect to CreateFirewallResponseFirewall
   */
  public static CreateFirewallResponseFirewall fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateFirewallResponseFirewall.class);
  }

  /**
   * Convert an instance of CreateFirewallResponseFirewall to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

