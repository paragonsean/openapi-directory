# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_firewall_policy_request_encryption_configuration import CreateFirewallPolicyRequestEncryptionConfiguration
from openapi_server.models.create_firewall_policy_request_firewall_policy import CreateFirewallPolicyRequestFirewallPolicy
from openapi_server import util


class CreateFirewallPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firewall_policy_name: str=None, firewall_policy: CreateFirewallPolicyRequestFirewallPolicy=None, description: str=None, tags: List=None, dry_run: bool=None, encryption_configuration: CreateFirewallPolicyRequestEncryptionConfiguration=None):
        """CreateFirewallPolicyRequest - a model defined in OpenAPI

        :param firewall_policy_name: The firewall_policy_name of this CreateFirewallPolicyRequest.
        :param firewall_policy: The firewall_policy of this CreateFirewallPolicyRequest.
        :param description: The description of this CreateFirewallPolicyRequest.
        :param tags: The tags of this CreateFirewallPolicyRequest.
        :param dry_run: The dry_run of this CreateFirewallPolicyRequest.
        :param encryption_configuration: The encryption_configuration of this CreateFirewallPolicyRequest.
        """
        self.openapi_types = {
            'firewall_policy_name': str,
            'firewall_policy': CreateFirewallPolicyRequestFirewallPolicy,
            'description': str,
            'tags': List,
            'dry_run': bool,
            'encryption_configuration': CreateFirewallPolicyRequestEncryptionConfiguration
        }

        self.attribute_map = {
            'firewall_policy_name': 'FirewallPolicyName',
            'firewall_policy': 'FirewallPolicy',
            'description': 'Description',
            'tags': 'Tags',
            'dry_run': 'DryRun',
            'encryption_configuration': 'EncryptionConfiguration'
        }

        self._firewall_policy_name = firewall_policy_name
        self._firewall_policy = firewall_policy
        self._description = description
        self._tags = tags
        self._dry_run = dry_run
        self._encryption_configuration = encryption_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFirewallPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFirewallPolicyRequest of this CreateFirewallPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firewall_policy_name(self):
        """Gets the firewall_policy_name of this CreateFirewallPolicyRequest.


        :return: The firewall_policy_name of this CreateFirewallPolicyRequest.
        :rtype: str
        """
        return self._firewall_policy_name

    @firewall_policy_name.setter
    def firewall_policy_name(self, firewall_policy_name):
        """Sets the firewall_policy_name of this CreateFirewallPolicyRequest.


        :param firewall_policy_name: The firewall_policy_name of this CreateFirewallPolicyRequest.
        :type firewall_policy_name: str
        """
        if firewall_policy_name is None:
            raise ValueError("Invalid value for `firewall_policy_name`, must not be `None`")

        self._firewall_policy_name = firewall_policy_name

    @property
    def firewall_policy(self):
        """Gets the firewall_policy of this CreateFirewallPolicyRequest.


        :return: The firewall_policy of this CreateFirewallPolicyRequest.
        :rtype: CreateFirewallPolicyRequestFirewallPolicy
        """
        return self._firewall_policy

    @firewall_policy.setter
    def firewall_policy(self, firewall_policy):
        """Sets the firewall_policy of this CreateFirewallPolicyRequest.


        :param firewall_policy: The firewall_policy of this CreateFirewallPolicyRequest.
        :type firewall_policy: CreateFirewallPolicyRequestFirewallPolicy
        """
        if firewall_policy is None:
            raise ValueError("Invalid value for `firewall_policy`, must not be `None`")

        self._firewall_policy = firewall_policy

    @property
    def description(self):
        """Gets the description of this CreateFirewallPolicyRequest.


        :return: The description of this CreateFirewallPolicyRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateFirewallPolicyRequest.


        :param description: The description of this CreateFirewallPolicyRequest.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this CreateFirewallPolicyRequest.


        :return: The tags of this CreateFirewallPolicyRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateFirewallPolicyRequest.


        :param tags: The tags of this CreateFirewallPolicyRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def dry_run(self):
        """Gets the dry_run of this CreateFirewallPolicyRequest.


        :return: The dry_run of this CreateFirewallPolicyRequest.
        :rtype: bool
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run):
        """Sets the dry_run of this CreateFirewallPolicyRequest.


        :param dry_run: The dry_run of this CreateFirewallPolicyRequest.
        :type dry_run: bool
        """

        self._dry_run = dry_run

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this CreateFirewallPolicyRequest.


        :return: The encryption_configuration of this CreateFirewallPolicyRequest.
        :rtype: CreateFirewallPolicyRequestEncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this CreateFirewallPolicyRequest.


        :param encryption_configuration: The encryption_configuration of this CreateFirewallPolicyRequest.
        :type encryption_configuration: CreateFirewallPolicyRequestEncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration
